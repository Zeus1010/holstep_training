N RECTIFIABLE_PATH_VECTOR_POLYNOMIAL_FUNCTION
C |- (!p. ((vector_polynomial_function p) ==> (rectifiable_path p)))
T c==> cvector_polynomial_function f0 crectifiable_path f0
D TRUTH
A |- T
T cT
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D DIMINDEX_1
A |- ((dimindex UNIV) = (NUMERAL (BIT1 _0)))
T c= cdimindex part cUNIV cNUMERAL cBIT1 c_0
D FORALL_1
A |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (P i))) = (P (NUMERAL (BIT1 _0))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 c_0 * f0 b0 * f0 cNUMERAL cBIT1 c_0
D drop
A |- (!x. ((drop x) = (x $ (NUMERAL (BIT1 _0)))))
T c= cdrop f0 c$ f0 cNUMERAL cBIT1 c_0
D LIFT_DROP
A |- ((!x. ((lift (drop x)) = x)) /\ (!x. ((drop (lift x)) = x)))
T c/\ ! c= clift cdrop b0 b0 ! c= cdrop clift b0 b0
D LIFT_ADD
A |- (!x. (!y. ((lift ((real_add x) y)) = ((vector_add (lift x)) (lift y)))))
T c= clift creal_add f0 f1 cvector_add clift f0 clift f1
D LIFT_CMUL
A |- (!x. (!c. ((lift ((real_mul c) x)) = ((% c) (lift x)))))
T c= clift creal_mul f0 f1 c% f0 clift f1
D BOUNDED_INTERVAL
A |- ((!a. (!b. (bounded (closed_interval ((CONS (a , b)) NIL))))) /\ (!a. (!b. (bounded (open_interval (a , b))))))
T c/\ ! ! cbounded * part cclosed_interval cCONS c, b0 b1 cNIL ! ! cbounded * part copen_interval c, b0 b1
D IS_INTERVAL_INTERVAL
A |- (!a. (!b. ((is_interval (open_interval (a , b))) /\ (is_interval (closed_interval ((CONS (a , b)) NIL))))))
T c/\ cis_interval * part copen_interval c, f0 f1 cis_interval * part cclosed_interval cCONS c, f0 f1 cNIL
D HAS_BOUNDED_VARIATION_ON_COMPONENTWISE
A |- (!f. (!s. (((has_bounded_variation_on f) s) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((has_bounded_variation_on (\x. (lift ((f x) $ i)))) s))))))
T c= chas_bounded_variation_on f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV chas_bounded_variation_on / clift c$ * f0 b1 b0 f1
D HAS_BOUNDED_VARIATION_ON_CONST
A |- (!s. (!c. ((has_bounded_variation_on (\x. c)) s)))
T chas_bounded_variation_on / f0 f1
D HAS_BOUNDED_VARIATION_ON_ADD
A |- (!f. (!g. (!s. ((((has_bounded_variation_on f) s) /\ ((has_bounded_variation_on g) s)) ==> ((has_bounded_variation_on (\x. ((vector_add (f x)) (g x)))) s)))))
T c==> c/\ chas_bounded_variation_on f0 f1 chas_bounded_variation_on f2 f1 chas_bounded_variation_on / cvector_add * f0 b0 * f2 b0 f1
D HAS_BOUNDED_VARIATION_ON_MUL
A |- (!f. (!g. (!s. ((((has_bounded_variation_on f) s) /\ (((has_bounded_variation_on g) s) /\ (is_interval s))) ==> ((has_bounded_variation_on (\x. ((% (drop (f x))) (g x)))) s)))))
T c==> c/\ chas_bounded_variation_on f0 f1 c/\ chas_bounded_variation_on f2 f1 cis_interval f1 chas_bounded_variation_on / c% cdrop * f0 b0 * f2 b0 f1
D HAS_BOUNDED_VARIATION_ON_ID
A |- (!s. ((bounded s) ==> ((has_bounded_variation_on (\x. x)) s)))
T c==> cbounded f0 chas_bounded_variation_on / b0 f0
D rectifiable_path
A |- (!g. ((rectifiable_path g) = ((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))
T c= crectifiable_path f0 c/\ cpath f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
D real_polynomial_function_INDUCT
A |- (!real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a)))))
T c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV * f0 / c$ b1 b0 c/\ ! * f0 / b0 c/\ ! ! c==> c/\ * f0 b0 * f0 b1 * f0 / creal_add * b0 b2 * b1 b2 ! ! c==> c/\ * f0 b0 * f0 b1 * f0 / creal_mul * b0 b2 * b1 b2 ! c==> creal_polynomial_function b0 * f0 b0
D vector_polynomial_function
A |- (!f. ((vector_polynomial_function f) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))))))
T c= cvector_polynomial_function f0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f0 b1 b0
D PATH_VECTOR_POLYNOMIAL_FUNCTION
A |- (!g. ((vector_polynomial_function g) ==> (path g)))
T c==> cvector_polynomial_function f0 cpath f0
+ |- ((!i. ((P i) ==> (Q i))) ==> ((!i. (P i)) ==> (!i. (Q i))))
T c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
- |- ((\q'. (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))) q')
T * / c==> c= c/\ chas_bounded_variation_on / clift * f0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c==> f2 c= chas_bounded_variation_on / cvector_add clift * f0 b1 clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> c/\ chas_bounded_variation_on / clift * f0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b1 clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f2 b0 f3
+ ((NUMERAL (BIT1 _0)) <= i) |- (((NUMERAL (BIT1 _0)) <= i) = T)
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c<= cNUMERAL cBIT1 c_0 f0 cT
+ |- ((vector_polynomial_function p) ==> ((rectifiable_path p) = ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c==> cvector_polynomial_function f0 c= crectifiable_path f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- (((has_bounded_variation_on (\x. x)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = T)
T c= chas_bounded_variation_on / b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
- (((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- (((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = T)
T c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
+ |- (((!g. (!s. ((((has_bounded_variation_on f) s) /\ ((has_bounded_variation_on g) s)) ==> ((has_bounded_variation_on (\x. ((vector_add (f x)) (g x)))) s)))) ==> ((\g. (!s. ((((has_bounded_variation_on f) s) /\ ((has_bounded_variation_on g) s)) ==> ((has_bounded_variation_on (\x. ((vector_add (f x)) (g x)))) s)))) g)) = ((\g. (!s. ((((has_bounded_variation_on f) s) /\ ((has_bounded_variation_on g) s)) ==> ((has_bounded_variation_on (\x. ((vector_add (f x)) (g x)))) s)))) g))
T c= c==> ! ! c==> c/\ chas_bounded_variation_on f0 b1 chas_bounded_variation_on b0 b1 chas_bounded_variation_on / cvector_add * f0 b2 * b0 b2 b1 * / ! c==> c/\ chas_bounded_variation_on f0 b1 chas_bounded_variation_on b0 b1 chas_bounded_variation_on / cvector_add * f0 b2 * b0 b2 b1 f1 * / ! c==> c/\ chas_bounded_variation_on f0 b1 chas_bounded_variation_on b0 b1 chas_bounded_variation_on / cvector_add * f0 b2 * b0 b2 b1 f1
+ |- (((is_interval (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((has_bounded_variation_on (\x. ((% (drop ((\x. (lift (f x))) x))) ((\x. (lift (g x))) x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))
T c==> c==> cis_interval * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / c% cdrop * / clift * f0 b1 b0 * / clift * f1 b1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- (((!x. ((lift (drop x)) = x)) ==> ((\x. ((lift (drop x)) = x)) x)) = ((\x. ((lift (drop x)) = x)) x))
T c= c==> ! c= clift cdrop b0 b0 * / c= clift cdrop b0 b0 f0 * / c= clift cdrop b0 b0 f0
+ |- (((!y. ((lift ((real_add x) y)) = ((vector_add (lift x)) (lift y)))) ==> ((\y. ((lift ((real_add x) y)) = ((vector_add (lift x)) (lift y)))) y)) = ((\y. ((lift ((real_add x) y)) = ((vector_add (lift x)) (lift y)))) y))
T c= c==> ! c= clift creal_add f0 b0 cvector_add clift f0 clift b0 * / c= clift creal_add f0 b0 cvector_add clift f0 clift b0 f1 * / c= clift creal_add f0 b0 cvector_add clift f0 clift b0 f1
- |- ((\q'. (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))) q')
T * / c==> c= c/\ chas_bounded_variation_on / clift * f0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c==> f2 c= chas_bounded_variation_on / clift creal_mul * f0 b1 * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> c/\ chas_bounded_variation_on / clift * f0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b1 * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f2 b0 f3
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))), ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((p x) $ i)))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ ((has_bounded_variation_on (\x. (lift ((p x) $ i)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b0 f0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV chas_bounded_variation_on / clift c$ * f1 b0 f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ ((\x. (f (g x))) = (f o g)) |- ((f o g) = (\x. (f (g x))))
T c==> c= / * f0 * f1 b0 * * part co f0 f1 c= * * part co f0 f1 / * f0 * f1 b0
- |- ((\p'. (!q'. (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ chas_bounded_variation_on / clift * f0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= chas_bounded_variation_on / clift creal_mul * f0 b2 * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> c/\ chas_bounded_variation_on / clift * f0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b2 * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f2
+ |- (((((has_bounded_variation_on f) s) /\ ((has_bounded_variation_on g) s)) ==> ((has_bounded_variation_on (\x. ((vector_add (f x)) (g x)))) s)) = T)
T c= c==> c/\ chas_bounded_variation_on f0 f1 chas_bounded_variation_on f2 f1 chas_bounded_variation_on / cvector_add * f0 b0 * f2 b0 f1 cT
+ |- (((!x. ((drop (lift x)) = x)) ==> ((\x. ((drop (lift x)) = x)) x)) = ((\x. ((drop (lift x)) = x)) x))
T c= c==> ! c= cdrop clift b0 b0 * / c= cdrop clift b0 b0 f0 * / c= cdrop clift b0 b0 f0
+ |- (((!f. (!g. (!s. ((((has_bounded_variation_on f) s) /\ ((has_bounded_variation_on g) s)) ==> ((is_interval s) ==> ((has_bounded_variation_on (\x. ((% (drop (f x))) (g x)))) s)))))) ==> ((\f. (!g. (!s. ((((has_bounded_variation_on f) s) /\ ((has_bounded_variation_on g) s)) ==> ((is_interval s) ==> ((has_bounded_variation_on (\x. ((% (drop (f x))) (g x)))) s)))))) f)) = ((\f. (!g. (!s. ((((has_bounded_variation_on f) s) /\ ((has_bounded_variation_on g) s)) ==> ((is_interval s) ==> ((has_bounded_variation_on (\x. ((% (drop (f x))) (g x)))) s)))))) f))
T c= c==> ! ! ! c==> c/\ chas_bounded_variation_on b0 b2 chas_bounded_variation_on b1 b2 c==> cis_interval b2 chas_bounded_variation_on / c% cdrop * b0 b3 * b1 b3 b2 * / ! ! c==> c/\ chas_bounded_variation_on b0 b2 chas_bounded_variation_on b1 b2 c==> cis_interval b2 chas_bounded_variation_on / c% cdrop * b0 b3 * b1 b3 b2 f0 * / ! ! c==> c/\ chas_bounded_variation_on b0 b2 chas_bounded_variation_on b1 b2 c==> cis_interval b2 chas_bounded_variation_on / c% cdrop * b0 b3 * b1 b3 b2 f0
- (!real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))), ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) |- (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a)))
T c==> ! c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1 c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV * f0 / c$ b1 b0 c/\ ! * f0 / b0 c/\ ! ! c==> c/\ * f0 b0 * f0 b1 * f0 / creal_add * b0 b2 * b1 b2 ! ! c==> c/\ * f0 b0 * f0 b1 * f0 / creal_mul * b0 b2 * b1 b2 ! c==> creal_polynomial_function b0 * f0 b0
- |- (((!q'. (((vector_polynomial_function p) = p') ==> ((p' ==> (((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))) ==> ((\q'. (((vector_polynomial_function p) = p') ==> ((p' ==> (((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))) q')) = ((\q'. (((vector_polynomial_function p) = p') ==> ((p' ==> (((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cvector_polynomial_function f0 f1 c==> c==> f1 c= chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f1 b0 * / c==> c= cvector_polynomial_function f0 f1 c==> c==> f1 c= chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f1 b0 f2 * / c==> c= cvector_polynomial_function f0 f1 c==> c==> f1 c= chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f1 b0 f2
+ |- ((bounded s) ==> (((has_bounded_variation_on (\x. x)) s) = T))
T c==> cbounded f0 c= chas_bounded_variation_on / b0 f0 cT
+ |- ((\g. (!s. ((((has_bounded_variation_on f) s) /\ ((has_bounded_variation_on g) s)) ==> ((has_bounded_variation_on (\x. ((vector_add (f x)) (g x)))) s)))) g)
T * / ! c==> c/\ chas_bounded_variation_on f0 b1 chas_bounded_variation_on b0 b1 chas_bounded_variation_on / cvector_add * f0 b2 * b0 b2 b1 f1
- (!x. ((P x) ==> (Q x))), ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) |- (((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) /\ ((!x. (P x)) ==> (!x. (Q x))))
T c==> ! c==> * f0 b0 * f1 b0 c==> c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c/\ c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c==> ! * f0 b0 ! * f1 b0
+ |- ((!g. ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = T)
T c= ! c==> c/\ chas_bounded_variation_on / clift * f0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * b0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b1 * b0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
- (!real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))), ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) /\ (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))
T c==> ! c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1 c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV * f0 / c$ b1 b0 c/\ ! * f0 / b0 c/\ ! ! c==> c/\ * f0 b0 * f0 b1 * f0 / creal_add * b0 b2 * b1 b2 ! ! c==> c/\ * f0 b0 * f0 b1 * f0 / creal_mul * b0 b2 * b1 b2 c/\ c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV * f0 / c$ b1 b0 c/\ ! * f0 / b0 c/\ ! ! c==> c/\ * f0 b0 * f0 b1 * f0 / creal_add * b0 b2 * b1 b2 ! ! c==> c/\ * f0 b0 * f0 b1 * f0 / creal_mul * b0 b2 * b1 b2 ! c==> creal_polynomial_function b0 * f0 b0
+ |- (((has_bounded_variation_on (\x. (lift (x $ (NUMERAL (BIT1 _0)))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((!c. ((has_bounded_variation_on (\x. (lift c))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((!f. (!g. ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) /\ (!f. (!g. ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))))))
T c/\ chas_bounded_variation_on / clift c$ b0 cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ ! chas_bounded_variation_on / clift b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ ! ! c==> c/\ chas_bounded_variation_on / clift * b0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * b0 b2 clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! ! c==> c/\ chas_bounded_variation_on / clift * b0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * b0 b2 * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- ((\p'. (!q'. (((vector_polynomial_function p) = p') ==> ((p' ==> ((rectifiable_path p) = q')) ==> (((vector_polynomial_function p) ==> (rectifiable_path p)) = (p' ==> q')))))) p')
T * / ! c==> c= cvector_polynomial_function f0 b0 c==> c==> b0 c= crectifiable_path f0 b1 c= c==> cvector_polynomial_function f0 crectifiable_path f0 c==> b0 b1 f1
+ |- (((!f. (!g. ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) /\ (!f. (!g. ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))) = (((has_bounded_variation_on (\x. x)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((!f. (!g. ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) /\ (!f. (!g. ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))))))
T c= c/\ ! ! c==> c/\ chas_bounded_variation_on / clift * b0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * b0 b2 clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! ! c==> c/\ chas_bounded_variation_on / clift * b0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * b0 b2 * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ chas_bounded_variation_on / b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ ! ! c==> c/\ chas_bounded_variation_on / clift * b0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * b0 b2 clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! ! c==> c/\ chas_bounded_variation_on / clift * b0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * b0 b2 * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- ((\g. ((rectifiable_path g) = ((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) g)
T * / c= crectifiable_path b0 c/\ cpath b0 chas_bounded_variation_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((has_bounded_variation_on (lift o (\x. (x $ i)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) /\ ((!c. ((has_bounded_variation_on (lift o (\x. c))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((!f. (!g. ((((has_bounded_variation_on (lift o f)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (lift o g)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (lift o (\x. ((real_add (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) /\ (!f. (!g. ((((has_bounded_variation_on (lift o f)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (lift o g)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (lift o (\x. ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))))) ==> (!p. ((real_polynomial_function p) ==> ((has_bounded_variation_on (lift o p)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))
T c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV chas_bounded_variation_on * * part co part clift / c$ b1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ ! chas_bounded_variation_on * * part co part clift / b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ ! ! c==> c/\ chas_bounded_variation_on * * part co part clift b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on * * part co part clift b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on * * part co part clift / creal_add * b0 b2 * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! ! c==> c/\ chas_bounded_variation_on * * part co part clift b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on * * part co part clift b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on * * part co part clift / creal_mul * b0 b2 * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> creal_polynomial_function b0 chas_bounded_variation_on * * part co part clift b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ |- (((has_bounded_variation_on (\x. c)) s) = T)
T c= chas_bounded_variation_on / f0 f1 cT
- |- (((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) ==> ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))))
T c==> c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
- |- (((!p'. (!q'. (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ chas_bounded_variation_on / clift * f0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= chas_bounded_variation_on / clift creal_mul * f0 b2 * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> c/\ chas_bounded_variation_on / clift * f0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b2 * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 * / ! c==> c= c/\ chas_bounded_variation_on / clift * f0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= chas_bounded_variation_on / clift creal_mul * f0 b2 * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> c/\ chas_bounded_variation_on / clift * f0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b2 * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f2 * / ! c==> c= c/\ chas_bounded_variation_on / clift * f0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= chas_bounded_variation_on / clift creal_mul * f0 b2 * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> c/\ chas_bounded_variation_on / clift * f0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b2 * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f2
+ |- ((!f. (!g. ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) = ((!f. (!g. ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) /\ (!f. (!g. ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))))
T c= ! ! c==> c/\ chas_bounded_variation_on / clift * b0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * b0 b2 * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ ! ! c==> c/\ chas_bounded_variation_on / clift * b0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * b0 b2 clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! ! c==> c/\ chas_bounded_variation_on / clift * b0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * b0 b2 * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ (i <= (dimindex UNIV)) |- ((i <= (dimindex UNIV)) = T)
T c==> c<= f0 cdimindex part cUNIV c= c<= f0 cdimindex part cUNIV cT
- |- ((drop ((% c) x)) = ((real_mul c) (drop x)))
T c= cdrop c% f0 f1 creal_mul f0 cdrop f1
+ |- (((!b. ((is_interval (open_interval (a , b))) /\ (is_interval (closed_interval ((CONS (a , b)) NIL))))) ==> ((\b. ((is_interval (open_interval (a , b))) /\ (is_interval (closed_interval ((CONS (a , b)) NIL))))) b)) = ((\b. ((is_interval (open_interval (a , b))) /\ (is_interval (closed_interval ((CONS (a , b)) NIL))))) b))
T c= c==> ! c/\ cis_interval * part copen_interval c, f0 b0 cis_interval * part cclosed_interval cCONS c, f0 b0 cNIL * / c/\ cis_interval * part copen_interval c, f0 b0 cis_interval * part cclosed_interval cCONS c, f0 b0 cNIL f1 * / c/\ cis_interval * part copen_interval c, f0 b0 cis_interval * part cclosed_interval cCONS c, f0 b0 cNIL f1
+ |- ((\x. (lift ((p x) $ i))) = (lift o (\x. ((p x) $ i))))
T c= / clift c$ * f0 b0 f1 * * part co part clift / c$ * f0 b0 f1
+ |- ((\a. (!b. ((is_interval (open_interval (a , b))) /\ (is_interval (closed_interval ((CONS (a , b)) NIL)))))) a)
T * / ! c/\ cis_interval * part copen_interval c, b0 b1 cis_interval * part cclosed_interval cCONS c, b0 b1 cNIL f0
+ |- ((\c. ((lift ((real_mul c) x)) = ((% c) (lift x)))) c)
T * / c= clift creal_mul b0 f0 c% b0 clift f0 f1
+ |- ((!p. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((p x) $ i))))) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) = (!p. ((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))
T c= ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV creal_polynomial_function / c$ * b0 b2 b1 chas_bounded_variation_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cvector_polynomial_function b0 chas_bounded_variation_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ ((drop x) = (x $ (NUMERAL (BIT1 _0)))) |- ((x $ (NUMERAL (BIT1 _0))) = (drop x))
T c==> c= cdrop f0 c$ f0 cNUMERAL cBIT1 c_0 c= c$ f0 cNUMERAL cBIT1 c_0 cdrop f0
+ |- (((!x. (!c. ((lift ((real_mul c) x)) = ((% c) (lift x))))) ==> ((\x. (!c. ((lift ((real_mul c) x)) = ((% c) (lift x))))) x)) = ((\x. (!c. ((lift ((real_mul c) x)) = ((% c) (lift x))))) x))
T c= c==> ! ! c= clift creal_mul b1 b0 c% b1 clift b0 * / ! c= clift creal_mul b1 b0 c% b1 clift b0 f0 * / ! c= clift creal_mul b1 b0 c% b1 clift b0 f0
- |- (((!q'. (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))) ==> ((\q'. (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))) q')) = ((\q'. (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ chas_bounded_variation_on / clift * f0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c==> f2 c= chas_bounded_variation_on / cvector_add clift * f0 b1 clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> c/\ chas_bounded_variation_on / clift * f0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b1 clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f2 b0 * / c==> c= c/\ chas_bounded_variation_on / clift * f0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c==> f2 c= chas_bounded_variation_on / cvector_add clift * f0 b1 clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> c/\ chas_bounded_variation_on / clift * f0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b1 clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f2 b0 f3 * / c==> c= c/\ chas_bounded_variation_on / clift * f0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c==> f2 c= chas_bounded_variation_on / cvector_add clift * f0 b1 clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> c/\ chas_bounded_variation_on / clift * f0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b1 clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f2 b0 f3
- |- (((vector_polynomial_function p) ==> (((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((vector_polynomial_function p) ==> q')))
T c==> c==> cvector_polynomial_function f0 c= chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cvector_polynomial_function f0 f1
+ |- (((!s. ((((has_bounded_variation_on f) s) /\ ((has_bounded_variation_on g) s)) ==> ((is_interval s) ==> ((has_bounded_variation_on (\x. ((% (drop (f x))) (g x)))) s)))) ==> ((\s. ((((has_bounded_variation_on f) s) /\ ((has_bounded_variation_on g) s)) ==> ((is_interval s) ==> ((has_bounded_variation_on (\x. ((% (drop (f x))) (g x)))) s)))) s)) = ((\s. ((((has_bounded_variation_on f) s) /\ ((has_bounded_variation_on g) s)) ==> ((is_interval s) ==> ((has_bounded_variation_on (\x. ((% (drop (f x))) (g x)))) s)))) s))
T c= c==> ! c==> c/\ chas_bounded_variation_on f0 b0 chas_bounded_variation_on f1 b0 c==> cis_interval b0 chas_bounded_variation_on / c% cdrop * f0 b1 * f1 b1 b0 * / c==> c/\ chas_bounded_variation_on f0 b0 chas_bounded_variation_on f1 b0 c==> cis_interval b0 chas_bounded_variation_on / c% cdrop * f0 b1 * f1 b1 b0 f2 * / c==> c/\ chas_bounded_variation_on f0 b0 chas_bounded_variation_on f1 b0 c==> cis_interval b0 chas_bounded_variation_on / c% cdrop * f0 b1 * f1 b1 b0 f2
+ |- (T = (((has_bounded_variation_on (\x. ((% (drop (lift (f x)))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c= cT c==> chas_bounded_variation_on / c% cdrop clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- |- (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c= c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ ((f o g) = (\x. (f (g x)))) |- ((\x. (f (g x))) = (f o g))
T c==> c= * * part co f0 f1 / * f0 * f1 b0 c= / * f0 * f1 b0 * * part co f0 f1
+ |- ((drop (lift x)) = x)
T c= cdrop clift f0 f0
+ |- (((!g. ((vector_polynomial_function g) ==> (path g))) ==> ((\g. ((vector_polynomial_function g) ==> (path g))) g)) = ((\g. ((vector_polynomial_function g) ==> (path g))) g))
T c= c==> ! c==> cvector_polynomial_function b0 cpath b0 * / c==> cvector_polynomial_function b0 cpath b0 f0 * / c==> cvector_polynomial_function b0 cpath b0 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))), ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((p x) $ i)))) |- ((has_bounded_variation_on (\x. (lift ((p x) $ i)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b0 f0 chas_bounded_variation_on / clift c$ * f1 b0 f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- (((!f. (!g. (!s. ((((has_bounded_variation_on f) s) /\ ((has_bounded_variation_on g) s)) ==> ((has_bounded_variation_on (\x. ((vector_add (f x)) (g x)))) s))))) ==> ((\f. (!g. (!s. ((((has_bounded_variation_on f) s) /\ ((has_bounded_variation_on g) s)) ==> ((has_bounded_variation_on (\x. ((vector_add (f x)) (g x)))) s))))) f)) = ((\f. (!g. (!s. ((((has_bounded_variation_on f) s) /\ ((has_bounded_variation_on g) s)) ==> ((has_bounded_variation_on (\x. ((vector_add (f x)) (g x)))) s))))) f))
T c= c==> ! ! ! c==> c/\ chas_bounded_variation_on b0 b2 chas_bounded_variation_on b1 b2 chas_bounded_variation_on / cvector_add * b0 b3 * b1 b3 b2 * / ! ! c==> c/\ chas_bounded_variation_on b0 b2 chas_bounded_variation_on b1 b2 chas_bounded_variation_on / cvector_add * b0 b3 * b1 b3 b2 f0 * / ! ! c==> c/\ chas_bounded_variation_on b0 b2 chas_bounded_variation_on b1 b2 chas_bounded_variation_on / cvector_add * b0 b3 * b1 b3 b2 f0
+ |- ((\x. (f (g x))) = (f o g))
T c= / * f0 * f1 b0 * * part co f0 f1
- (vector_polynomial_function p) |- ((vector_polynomial_function p) /\ (((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c==> cvector_polynomial_function f0 c/\ cvector_polynomial_function f0 c= chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- ((x $ (NUMERAL (BIT1 _0))) = (drop x))
T c= c$ f0 cNUMERAL cBIT1 c_0 cdrop f0
+ |- ((t1 /\ (t2 /\ t3)) = ((t1 /\ t2) /\ t3))
T c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2
+ |- (((!f. ((vector_polynomial_function f) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) ==> ((\f. ((vector_polynomial_function f) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) f)) = ((\f. ((vector_polynomial_function f) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) f))
T c= c==> ! c= cvector_polynomial_function b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV creal_polynomial_function / c$ * b0 b2 b1 * / c= cvector_polynomial_function b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV creal_polynomial_function / c$ * b0 b2 b1 f0 * / c= cvector_polynomial_function b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV creal_polynomial_function / c$ * b0 b2 b1 f0
- |- (((!a. (!b. (bounded (open_interval (a , b))))) ==> ((\a. (!b. (bounded (open_interval (a , b))))) a)) = ((\a. (!b. (bounded (open_interval (a , b))))) a))
T c= c==> ! ! cbounded * part copen_interval c, b0 b1 * / ! cbounded * part copen_interval c, b0 b1 f0 * / ! cbounded * part copen_interval c, b0 b1 f0
+ |- (((!g. ((rectifiable_path g) = ((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) ==> ((\g. ((rectifiable_path g) = ((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) g)) = ((\g. ((rectifiable_path g) = ((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) g))
T c= c==> ! c= crectifiable_path b0 c/\ cpath b0 chas_bounded_variation_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * / c= crectifiable_path b0 c/\ cpath b0 chas_bounded_variation_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0 * / c= crectifiable_path b0 c/\ cpath b0 chas_bounded_variation_on b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0
+ |- (!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((p x) $ i)))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((has_bounded_variation_on (\x. (lift ((p x) $ i)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV chas_bounded_variation_on / clift c$ * f1 b0 f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- (((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- ((((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) = (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))
T c= c==> c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- (((!c. ((lift ((real_mul c) x)) = ((% c) (lift x)))) ==> ((\c. ((lift ((real_mul c) x)) = ((% c) (lift x)))) c)) = ((\c. ((lift ((real_mul c) x)) = ((% c) (lift x)))) c))
T c= c==> ! c= clift creal_mul b0 f0 c% b0 clift f0 * / c= clift creal_mul b0 f0 c% b0 clift f0 f1 * / c= clift creal_mul b0 f0 c% b0 clift f0 f1
+ |- ((\f. (!g. (!s. ((((has_bounded_variation_on f) s) /\ ((has_bounded_variation_on g) s)) ==> ((has_bounded_variation_on (\x. ((vector_add (f x)) (g x)))) s))))) f)
T * / ! ! c==> c/\ chas_bounded_variation_on b0 b2 chas_bounded_variation_on b1 b2 chas_bounded_variation_on / cvector_add * b0 b3 * b1 b3 b2 f0
- |- (((!p'. (!q'. (((vector_polynomial_function p) = p') ==> ((p' ==> (((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((vector_polynomial_function p) = p') ==> ((p' ==> (((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((vector_polynomial_function p) = p') ==> ((p' ==> (((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cvector_polynomial_function f0 b0 c==> c==> b0 c= chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 * / ! c==> c= cvector_polynomial_function f0 b0 c==> c==> b0 c= chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f1 * / ! c==> c= cvector_polynomial_function f0 b0 c==> c==> b0 c= chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f1
+ |- (!f. (!g. (!s. (((((has_bounded_variation_on f) s) /\ ((has_bounded_variation_on g) s)) /\ (is_interval s)) ==> ((has_bounded_variation_on (\x. ((% (drop (f x))) (g x)))) s)))))
T c==> c/\ c/\ chas_bounded_variation_on f0 f1 chas_bounded_variation_on f2 f1 cis_interval f1 chas_bounded_variation_on / c% cdrop * f0 b0 * f2 b0 f1
+ |- ((\x. ((x $ (NUMERAL (BIT1 _0))) = (drop x))) x)
T * / c= c$ b0 cNUMERAL cBIT1 c_0 cdrop b0 f0
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ |- (((!real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))) ==> ((\real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))) real_polynomial_function')) = ((\real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))) real_polynomial_function'))
T c= c==> ! c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1 * / c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1 f0 * / c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1 f0
+ |- ((\b. (bounded (closed_interval ((CONS (a , b)) NIL)))) b)
T * / cbounded * part cclosed_interval cCONS c, f0 b0 cNIL f1
+ |- ((\g. ((vector_polynomial_function g) ==> (path g))) g)
T * / c==> cvector_polynomial_function b0 cpath b0 f0
- |- (((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c= c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((((has_bounded_variation_on f) s) /\ ((has_bounded_variation_on g) s)) ==> ((is_interval s) ==> ((has_bounded_variation_on (\x. ((% (drop (f x))) (g x)))) s)))
T c==> c/\ chas_bounded_variation_on f0 f1 chas_bounded_variation_on f2 f1 c==> cis_interval f1 chas_bounded_variation_on / c% cdrop * f0 b0 * f2 b0 f1
+ |- ((((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((has_bounded_variation_on (lift o (\x. (x $ i)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) /\ ((!c. ((has_bounded_variation_on (lift o (\x. c))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((!f. (!g. ((((has_bounded_variation_on (lift o f)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (lift o g)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (lift o (\x. ((real_add (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) /\ (!f. (!g. ((((has_bounded_variation_on (lift o f)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (lift o g)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (lift o (\x. ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))))) ==> (!p. ((real_polynomial_function p) ==> ((has_bounded_variation_on (lift o p)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) = (!p. ((real_polynomial_function p) ==> ((has_bounded_variation_on (lift o p)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))
T c= c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV chas_bounded_variation_on * * part co part clift / c$ b1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ ! chas_bounded_variation_on * * part co part clift / b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ ! ! c==> c/\ chas_bounded_variation_on * * part co part clift b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on * * part co part clift b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on * * part co part clift / creal_add * b0 b2 * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! ! c==> c/\ chas_bounded_variation_on * * part co part clift b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on * * part co part clift b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on * * part co part clift / creal_mul * b0 b2 * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> creal_polynomial_function b0 chas_bounded_variation_on * * part co part clift b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> creal_polynomial_function b0 chas_bounded_variation_on * * part co part clift b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- (((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ (((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- (!p. ((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- ((((has_bounded_variation_on (\x. x)) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((!f. (!g. ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) /\ (!f. (!g. ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))))) = (((has_bounded_variation_on (\x. (lift (x $ (NUMERAL (BIT1 _0)))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((!c. ((has_bounded_variation_on (\x. (lift c))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((!f. (!g. ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) /\ (!f. (!g. ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))))))
T c= c/\ chas_bounded_variation_on / b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ ! ! c==> c/\ chas_bounded_variation_on / clift * b0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * b0 b2 clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! ! c==> c/\ chas_bounded_variation_on / clift * b0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * b0 b2 * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ chas_bounded_variation_on / clift c$ b0 cNUMERAL cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ ! chas_bounded_variation_on / clift b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ ! ! c==> c/\ chas_bounded_variation_on / clift * b0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * b0 b2 clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! ! c==> c/\ chas_bounded_variation_on / clift * b0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * b0 b2 * b1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- ((\q'. (((vector_polynomial_function p) = p') ==> ((p' ==> ((rectifiable_path p) = q')) ==> (((vector_polynomial_function p) ==> (rectifiable_path p)) = (p' ==> q'))))) q')
T * / c==> c= cvector_polynomial_function f0 f1 c==> c==> f1 c= crectifiable_path f0 b0 c= c==> cvector_polynomial_function f0 crectifiable_path f0 c==> f1 b0 f2
+ |- (!p. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((p x) $ i))))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((has_bounded_variation_on (\x. (lift ((p x) $ i)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f0 b1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV chas_bounded_variation_on / clift c$ * f0 b1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- (((!f. (!s. (((has_bounded_variation_on f) s) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((has_bounded_variation_on (\x. (lift ((f x) $ i)))) s)))))) ==> ((\f. (!s. (((has_bounded_variation_on f) s) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((has_bounded_variation_on (\x. (lift ((f x) $ i)))) s)))))) f)) = ((\f. (!s. (((has_bounded_variation_on f) s) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((has_bounded_variation_on (\x. (lift ((f x) $ i)))) s)))))) f))
T c= c==> ! ! c= chas_bounded_variation_on b0 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV chas_bounded_variation_on / clift c$ * b0 b3 b2 b1 * / ! c= chas_bounded_variation_on b0 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV chas_bounded_variation_on / clift c$ * b0 b3 b2 b1 f0 * / ! c= chas_bounded_variation_on b0 b1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 cdimindex part cUNIV chas_bounded_variation_on / clift c$ * b0 b3 b2 b1 f0
+ |- (((!b. (bounded (closed_interval ((CONS (a , b)) NIL)))) ==> ((\b. (bounded (closed_interval ((CONS (a , b)) NIL)))) b)) = ((\b. (bounded (closed_interval ((CONS (a , b)) NIL)))) b))
T c= c==> ! cbounded * part cclosed_interval cCONS c, f0 b0 cNIL * / cbounded * part cclosed_interval cCONS c, f0 b0 cNIL f1 * / cbounded * part cclosed_interval cCONS c, f0 b0 cNIL f1
+ |- (((!x. ((x $ (NUMERAL (BIT1 _0))) = (drop x))) ==> ((\x. ((x $ (NUMERAL (BIT1 _0))) = (drop x))) x)) = ((\x. ((x $ (NUMERAL (BIT1 _0))) = (drop x))) x))
T c= c==> ! c= c$ b0 cNUMERAL cBIT1 c_0 cdrop b0 * / c= c$ b0 cNUMERAL cBIT1 c_0 cdrop b0 f0 * / c= c$ b0 cNUMERAL cBIT1 c_0 cdrop b0 f0
+ (vector_polynomial_function g) |- ((vector_polynomial_function g) /\ ((path g) = T))
T c==> cvector_polynomial_function f0 c/\ cvector_polynomial_function f0 c= cpath f0 cT
- |- (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))
T c==> c= c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c==> f2 c= chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c= c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f2 f3
+ (((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))
T c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- |- (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c= c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- |- ((\a. (!b. (bounded (open_interval (a , b))))) a)
T * / ! cbounded * part copen_interval c, b0 b1 f0
- |- (is_interval (open_interval (a , b)))
T cis_interval * part copen_interval c, f0 f1
- |- ((\q'. (((vector_polynomial_function p) = p') ==> ((p' ==> (((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))) q')
T * / c==> c= cvector_polynomial_function f0 f1 c==> c==> f1 c= chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f1 b0 f2
- |- (((!real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))) ==> (!real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a)))))) = (!real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))))
T c= c==> ! c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1 ! c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1 ! c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1
- |- ((bounded (open_interval (a , b))) = T)
T c= cbounded * part copen_interval c, f0 f1 cT
- |- (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> q')))
T c==> c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2
- |- ((((vector_polynomial_function p) = (vector_polynomial_function p)) ==> (((vector_polynomial_function p) ==> (((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((vector_polynomial_function p) ==> q')))) = (((vector_polynomial_function p) ==> (((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((vector_polynomial_function p) ==> q'))))
T c= c==> c= cvector_polynomial_function f0 cvector_polynomial_function f0 c==> c==> cvector_polynomial_function f0 c= chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cvector_polynomial_function f0 f1 c==> c==> cvector_polynomial_function f0 c= chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c= c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cvector_polynomial_function f0 f1
- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) |- ((!real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))
T c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV * f0 / c$ b1 b0 c/\ ! * f0 / b0 c/\ ! ! c==> c/\ * f0 b0 * f0 b1 * f0 / creal_add * b0 b2 * b1 b2 ! ! c==> c/\ * f0 b0 * f0 b1 * f0 / creal_mul * b0 b2 * b1 b2 c==> ! c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1 ! c==> creal_polynomial_function b0 * f0 b0
- |- (((vector_polynomial_function p) = p') ==> ((p' ==> (((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))
T c==> c= cvector_polynomial_function f0 f1 c==> c==> f1 c= chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f1 f2
- (!real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))) |- ((((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a)))) = T)
T c==> ! c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1 c= c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV * f0 / c$ b1 b0 c/\ ! * f0 / b0 c/\ ! ! c==> c/\ * f0 b0 * f0 b1 * f0 / creal_add * b0 b2 * b1 b2 ! ! c==> c/\ * f0 b0 * f0 b1 * f0 / creal_mul * b0 b2 * b1 b2 ! c==> creal_polynomial_function b0 * f0 b0 cT
- |- (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> q')))
T c==> c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2
- |- ((((vector_polynomial_function p) ==> (((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> (((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) = (((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))
T c= c==> c==> cvector_polynomial_function f0 c= chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- |- (((!x. (!c. ((drop ((% c) x)) = ((real_mul c) (drop x))))) ==> ((\x. (!c. ((drop ((% c) x)) = ((real_mul c) (drop x))))) x)) = ((\x. (!c. ((drop ((% c) x)) = ((real_mul c) (drop x))))) x))
T c= c==> ! ! c= cdrop c% b1 b0 creal_mul b1 cdrop b0 * / ! c= cdrop c% b1 b0 creal_mul b1 cdrop b0 f0 * / ! c= cdrop c% b1 b0 creal_mul b1 cdrop b0 f0
- (vector_polynomial_function p) |- (T = (vector_polynomial_function p))
T c==> cvector_polynomial_function f0 c= cT cvector_polynomial_function f0
- |- ((((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> q')))) = (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> q'))))
T c= c==> c= c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2
- |- ((!real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))) ==> (!real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))))
T c==> ! c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1 ! c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1
- (!real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))), ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) |- ((!real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))) /\ (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))
T c==> ! c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1 c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV * f0 / c$ b1 b0 c/\ ! * f0 / b0 c/\ ! ! c==> c/\ * f0 b0 * f0 b1 * f0 / creal_add * b0 b2 * b1 b2 ! ! c==> c/\ * f0 b0 * f0 b1 * f0 / creal_mul * b0 b2 * b1 b2 c/\ ! c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1 ! c==> creal_polynomial_function b0 * f0 b0
- (!x. ((P x) ==> (Q x))) |- (((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) ==> ((!x. (P x)) ==> (!x. (Q x))))
T c==> ! c==> * f0 b0 * f1 b0 c==> c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c==> ! * f0 b0 ! * f1 b0
- |- (((!q'. (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))) ==> ((\q'. (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))) q')) = ((\q'. (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ chas_bounded_variation_on / clift * f0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c==> f2 c= chas_bounded_variation_on / clift creal_mul * f0 b1 * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> c/\ chas_bounded_variation_on / clift * f0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b1 * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f2 b0 * / c==> c= c/\ chas_bounded_variation_on / clift * f0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c==> f2 c= chas_bounded_variation_on / clift creal_mul * f0 b1 * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> c/\ chas_bounded_variation_on / clift * f0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b1 * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f2 b0 f3 * / c==> c= c/\ chas_bounded_variation_on / clift * f0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c==> f2 c= chas_bounded_variation_on / clift creal_mul * f0 b1 * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c= c==> c/\ chas_bounded_variation_on / clift * f0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b1 * f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f2 b0 f3
- (vector_polynomial_function p) |- ((vector_polynomial_function p) = T)
T c==> cvector_polynomial_function f0 c= cvector_polynomial_function f0 cT
- |- (((!b. (bounded (open_interval (a , b)))) ==> ((\b. (bounded (open_interval (a , b)))) b)) = ((\b. (bounded (open_interval (a , b)))) b))
T c= c==> ! cbounded * part copen_interval c, f0 b0 * / cbounded * part copen_interval c, f0 b0 f1 * / cbounded * part copen_interval c, f0 b0 f1
- |- ((\p'. (!q'. (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ chas_bounded_variation_on / clift * f0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= chas_bounded_variation_on / cvector_add clift * f0 b2 clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> c/\ chas_bounded_variation_on / clift * f0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b2 clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f2
- (!real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))) |- ((!real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))) /\ (!real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))))
T c==> ! c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1 c/\ ! c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1 ! c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1
- (!x. ((P x) ==> (Q x))), ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) |- ((!x. ((P x) ==> (Q x))) /\ ((!x. (P x)) ==> (!x. (Q x))))
T c==> ! c==> * f0 b0 * f1 b0 c==> c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c/\ ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
- |- ((\c. ((drop ((% c) x)) = ((real_mul c) (drop x)))) c)
T * / c= cdrop c% b0 f0 creal_mul b0 cdrop f0 f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((\p'. (!q'. (((vector_polynomial_function p) = p') ==> ((p' ==> (((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((vector_polynomial_function p) ==> ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q')))))) p')
T * / ! c==> c= cvector_polynomial_function f0 b0 c==> c==> b0 c= chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> cvector_polynomial_function f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f1
- |- ((((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) ==> ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x))))) = ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))))
T c= c==> c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
- (!real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))) |- ((\real_polynomial_function'. (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function' (\x. (x $ i))))) /\ ((!c. (real_polynomial_function' (\x. c))) /\ ((!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_add (f x)) (g x))))))) /\ (!f. (!g. (((real_polynomial_function' f) /\ (real_polynomial_function' g)) ==> (real_polynomial_function' (\x. ((real_mul (f x)) (g x)))))))))) ==> (!a. ((real_polynomial_function a) ==> (real_polynomial_function' a))))) real_polynomial_function')
T c==> ! c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1 * / c==> c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV * b0 / c$ b2 b1 c/\ ! * b0 / b1 c/\ ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_add * b1 b3 * b2 b3 ! ! c==> c/\ * b0 b1 * b0 b2 * b0 / creal_mul * b1 b3 * b2 b3 ! c==> creal_polynomial_function b1 * b0 b1 f0
- |- ((vector_polynomial_function p) ==> (((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = ((has_bounded_variation_on p) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c==> cvector_polynomial_function f0 c= chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- |- ((\b. (bounded (open_interval (a , b)))) b)
T * / cbounded * part copen_interval c, f0 b0 f1
- (((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- (((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = T)
T c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
- |- (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q'))))
T c==> c= c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c==> f2 c= chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f3 c= c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> f2 f3
- |- ((((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) = (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))
T c= c==> c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) |- (((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) /\ ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))))
T c==> c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c/\ c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
- |- (((!c. ((drop ((% c) x)) = ((real_mul c) (drop x)))) ==> ((\c. ((drop ((% c) x)) = ((real_mul c) (drop x)))) c)) = ((\c. ((drop ((% c) x)) = ((real_mul c) (drop x)))) c))
T c= c==> ! c= cdrop c% b0 f0 creal_mul b0 cdrop f0 * / c= cdrop c% b0 f0 creal_mul b0 cdrop f0 f1 * / c= cdrop c% b0 f0 creal_mul b0 cdrop f0 f1
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((\x. (!c. ((drop ((% c) x)) = ((real_mul c) (drop x))))) x)
T * / ! c= cdrop c% b1 b0 creal_mul b1 cdrop b0 f0
- |- ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- |- ((((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> q')))) = (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> q'))))
T c= c==> c= c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c==> c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2 c= c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b0 clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f2
- |- (((!p'. (!q'. (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = p') ==> ((p' ==> (((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = q')) ==> (((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((has_bounded_variation_on (\x. ((vector_add (lift (f x))) (lift (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ chas_bounded_variation_on / clift * f0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= chas_bounded_variation_on / cvector_add clift * f0 b2 clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> c/\ chas_bounded_variation_on / clift * f0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b2 clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 * / ! c==> c= c/\ chas_bounded_variation_on / clift * f0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= chas_bounded_variation_on / cvector_add clift * f0 b2 clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> c/\ chas_bounded_variation_on / clift * f0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b2 clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f2 * / ! c==> c= c/\ chas_bounded_variation_on / clift * f0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b0 c==> c==> b0 c= chas_bounded_variation_on / cvector_add clift * f0 b2 clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL b1 c= c==> c/\ chas_bounded_variation_on / clift * f0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / cvector_add clift * f0 b2 clift * f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> b0 b1 f2
- |- (bounded (open_interval (a , b)))
T cbounded * part copen_interval c, f0 f1
- |- ((((has_bounded_variation_on (\x. (lift (f x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((has_bounded_variation_on (\x. (lift (g x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = ((has_bounded_variation_on (\x. (lift ((real_mul (f x)) (g x))))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c==> c/\ chas_bounded_variation_on / clift * f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL chas_bounded_variation_on / clift creal_mul * f0 b0 * f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- |- ((is_interval (open_interval (a , b))) = T)
T c= cis_interval * part copen_interval c, f0 f1 cT
