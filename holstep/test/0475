N FRONTIER_SEGMENT
C |- ((!a. (!b. ((frontier (closed_segment ((CONS (a , b)) NIL))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY)))))) /\ (!a. (!b. ((frontier (open_segment (a , b))) = (((COND (a = b)) EMPTY) (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY))))))))
T c/\ ! ! c= * part cfrontier * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! c= * part cfrontier * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
D TRUTH
A |- T
T cT
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_DIFF
A |- (!s. (!t. (!x. ((x IN (s DIFF t)) = ((x IN s) /\ (~ (x IN t)))))))
T c= cIN f0 * * part cDIFF f1 f2 c/\ cIN f0 f1 c~ cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D DIFF_EMPTY
A |- (!s. ((s DIFF EMPTY) = s))
T c= * * part cDIFF f0 part cEMPTY f0
D SEGMENT_REFL
A |- ((!a. ((closed_segment ((CONS (a , a)) NIL)) = (a INSERT EMPTY))) /\ (!a. ((open_segment (a , a)) = EMPTY)))
T c/\ ! c= * part cclosed_segment cCONS c, b0 b0 cNIL * * part cINSERT b0 part cEMPTY ! c= * part copen_segment c, b0 b0 part cEMPTY
D ENDS_NOT_IN_SEGMENT
A |- (!a. (!b. ((~ (a IN (open_segment (a , b)))) /\ (~ (b IN (open_segment (a , b)))))))
T c/\ c~ cIN f0 * part copen_segment c, f0 f1 c~ cIN f1 * part copen_segment c, f0 f1
D SEGMENT_CLOSED_OPEN
A |- (!a. (!b. ((closed_segment ((CONS (a , b)) NIL)) = ((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))))))
T c= * part cclosed_segment cCONS c, f0 f1 cNIL * * part cUNION * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
D frontier
A |- (!s. ((frontier s) = ((closure s) DIFF (interior s))))
T c= * part cfrontier f0 * * part cDIFF * part cclosure f0 * part cinterior f0
D CLOSURE_SEGMENT
A |- ((!a. (!b. ((closure (closed_segment ((CONS (a , b)) NIL))) = (closed_segment ((CONS (a , b)) NIL))))) /\ (!a. (!b. ((closure (open_segment (a , b))) = (((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL)))))))
T c/\ ! ! c= * part cclosure * part cclosed_segment cCONS c, b0 b1 cNIL * part cclosed_segment cCONS c, b0 b1 cNIL ! ! c= * part cclosure * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * part cclosed_segment cCONS c, b0 b1 cNIL
D INTERIOR_SEGMENT
A |- ((!a. (!b. ((interior (closed_segment ((CONS (a , b)) NIL))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))))) /\ (!a. (!b. ((interior (open_segment (a , b))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))))))
T c/\ ! ! c= * part cinterior * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 ! ! c= * part cinterior * part copen_segment c, b0 b1 * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1
+ (x = b), ((open_segment (a , b)) x) |- ((((open_segment (a , b)) b) ==> F) = F)
T c==> c= f0 f1 c==> copen_segment c, f2 f1 f0 c= c==> copen_segment c, f2 f1 f1 cF cF
+ (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- ((x = b) ==> F)
T c==> c/\ c/\ c\/ copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 c==> c= f2 f1 cF
- |- ((\g'. (!t'. (!e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= part cEMPTY b1 c==> c==> c~ b0 c= * part cclosed_segment cCONS c, f0 f1 cNIL b2 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND b0 b1 b2 f2
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ ((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) |- (~ (x = a))
T c==> c/\ c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 c~ c= f2 f0
+ (x = b), (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- ((x = b) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c\/ copen_segment c, f2 f1 f0 c\/ c= f0 f2 c= f0 f1 c~ copen_segment c, f2 f1 f0 c/\ c~ c= f0 f2 c~ c= f0 f1 c/\ c= f0 f1 cF
+ |- (!a. (!b. (((((COND (a = b)) EMPTY) ((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY)))) DIFF (open_segment (a , b))) = (((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY))))))
T c= * * part cDIFF * * * part cCOND c= f0 f1 part cEMPTY * * part cUNION * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((((((COND (a = b)) EMPTY) ((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY)))) DIFF (open_segment (a , b))) = (((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY)))) = (((a = b) ==> ((EMPTY DIFF (open_segment (a , b))) = (((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY))))) /\ ((~ (a = b)) ==> ((((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))) DIFF (open_segment (a , b))) = (((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY)))))))
T c= c= * * part cDIFF * * * part cCOND c= f0 f1 part cEMPTY * * part cUNION * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c==> c= f0 f1 c= * * part cDIFF part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ c= f0 f1 c= * * part cDIFF * * part cUNION * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- (x = b) |- ((~ (x = a)) = (~ (b = a)))
T c==> c= f0 f1 c= c~ c= f0 f2 c~ c= f1 f2
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (b = b)) ==> (b = b))
T c==> c~ c= f0 f0 c= f0 f0
- |- (((!t'. (!e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 f1 f2 c==> c==> f2 c= part cEMPTY b0 c==> c==> c~ f2 c= * part cclosed_segment cCONS c, f0 f1 cNIL b1 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND f2 b0 b1 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= part cEMPTY b0 c==> c==> c~ f2 c= * part cclosed_segment cCONS c, f0 f1 cNIL b1 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND f2 b0 b1 f3 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= part cEMPTY b0 c==> c==> c~ f2 c= * part cclosed_segment cCONS c, f0 f1 cNIL b1 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND f2 b0 b1 f3
- |- ((_586005 = _586007) ==> ((~ (_586004 = _586006)) \/ (((open_segment _586006) _586007) \/ (~ ((open_segment _586004) _586005)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ copen_segment f3 f1 c~ copen_segment f2 f0
- |- ((_586008 = _586010) ==> ((~ (_586009 = _586011)) \/ ((_586008 , _586009) = (_586010 , _586011))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- (x = b), ((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) |- (~ ((open_segment (a , b)) b))
T c==> c= f0 f1 c==> c/\ c~ copen_segment c, f2 f1 f0 c/\ c~ c= f0 f2 c~ c= f0 f1 c~ copen_segment c, f2 f1 f1
- (_586005 = _586007) |- ((_586005 = _586007) /\ ((~ (_586004 = _586006)) \/ (((open_segment _586006) _586007) \/ (~ ((open_segment _586004) _586005)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ copen_segment f3 f1 c~ copen_segment f2 f0
+ (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))), ((x = a) \/ (x = b)) |- (((x = a) \/ (x = b)) /\ F)
T c==> c/\ c/\ c\/ copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 c==> c\/ c= f2 f0 c= f2 f1 c/\ c\/ c= f2 f0 c= f2 f1 cF
+ (~ (a = b)) |- (((((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))) DIFF (open_segment (a , b))) = (((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY)))) = ((((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))) DIFF (open_segment (a , b))) = (((COND F) EMPTY) (a INSERT (b INSERT EMPTY)))))
T c==> c~ c= f0 f1 c= c= * * part cDIFF * * part cUNION * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= * * part cDIFF * * part cUNION * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND cF part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((\a. ((open_segment (a , a)) = EMPTY)) a)
T * / c= * part copen_segment c, b0 b0 part cEMPTY f0
+ |- (!a. (!b. ((((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))) DIFF (open_segment (a , b))) = (a INSERT (b INSERT EMPTY)))))
T c= * * part cDIFF * * part cUNION * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (((!b. ((closure (open_segment (a , b))) = (((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))))) ==> ((\b. ((closure (open_segment (a , b))) = (((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))))) b)) = ((\b. ((closure (open_segment (a , b))) = (((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))))) b))
T c= c==> ! c= * part cclosure * part copen_segment c, f0 b0 * * * part cCOND c= f0 b0 part cEMPTY * part cclosed_segment cCONS c, f0 b0 cNIL * / c= * part cclosure * part copen_segment c, f0 b0 * * * part cCOND c= f0 b0 part cEMPTY * part cclosed_segment cCONS c, f0 b0 cNIL f1 * / c= * part cclosure * part copen_segment c, f0 b0 * * * part cCOND c= f0 b0 part cEMPTY * part cclosed_segment cCONS c, f0 b0 cNIL f1
+ (x = b), (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- (~ (b = b))
T c==> c= f0 f1 c==> c/\ c/\ c\/ copen_segment c, f2 f1 f0 c\/ c= f0 f2 c= f0 f1 c~ copen_segment c, f2 f1 f0 c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f1 f1
+ (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- (((open_segment (a , b)) x) \/ ((x = a) \/ (x = b)))
T c==> c/\ c/\ c\/ copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 c\/ copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1
- (x = b), ((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) |- (~ (b = a))
T c==> c= f0 f1 c==> c/\ c~ copen_segment c, f2 f1 f0 c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f1 f2
+ |- ((((~ (a IN (open_segment (a , b)))) /\ (~ (b IN (open_segment (a , b))))) ==> (!x. ((x IN (((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))) DIFF (open_segment (a , b)))) = (x IN (a INSERT (b INSERT EMPTY)))))) = (((~ (a IN (open_segment (a , b)))) /\ (~ (b IN (open_segment (a , b))))) ==> ((((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))) DIFF (open_segment (a , b))) = (a INSERT (b INSERT EMPTY)))))
T c= c==> c/\ c~ cIN f0 * part copen_segment c, f0 f1 c~ cIN f1 * part copen_segment c, f0 f1 ! c= cIN b0 * * part cDIFF * * part cUNION * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part copen_segment c, f0 f1 cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ c~ cIN f0 * part copen_segment c, f0 f1 c~ cIN f1 * part copen_segment c, f0 f1 c= * * part cDIFF * * part cUNION * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- ((open_segment (a , b)) x) |- ((~ ((open_segment (a , b)) x)) ==> ((open_segment (a , b)) x))
T c==> copen_segment c, f0 f1 f2 c==> c~ copen_segment c, f0 f1 f2 copen_segment c, f0 f1 f2
+ (x = b), (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- ((b = b) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c\/ copen_segment c, f2 f1 f0 c\/ c= f0 f2 c= f0 f1 c~ copen_segment c, f2 f1 f0 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c= f1 f1 cF
+ |- ((\b. ((closure (closed_segment ((CONS (a , b)) NIL))) = (closed_segment ((CONS (a , b)) NIL)))) b)
T * / c= * part cclosure * part cclosed_segment cCONS c, f0 b0 cNIL * part cclosed_segment cCONS c, f0 b0 cNIL f1
+ |- ((!a. (!b. (((closed_segment ((CONS (a , b)) NIL)) DIFF (open_segment (a , b))) = (a INSERT (b INSERT EMPTY))))) /\ (!a. (!b. (((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) DIFF (open_segment (a , b))) = (((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY)))))))
T c/\ ! ! c= * * part cDIFF * part cclosed_segment cCONS c, b0 b1 cNIL * part copen_segment c, b0 b1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! c= * * part cDIFF * * * part cCOND c= b0 b1 part cEMPTY * part cclosed_segment cCONS c, b0 b1 cNIL * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
+ (x = a), ((open_segment (a , b)) x) |- ((open_segment (a , b)) a)
T c==> c= f0 f1 c==> copen_segment c, f1 f2 f0 copen_segment c, f1 f2 f1
+ |- ((~ (a = b)) ==> ((((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))) DIFF (open_segment (a , b))) = (((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY)))))
T c==> c~ c= f0 f1 c= * * part cDIFF * * part cUNION * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (a = b) |- ((a = b) /\ ((EMPTY DIFF (open_segment (a , b))) = (((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY)))))
T c==> c= f0 f1 c/\ c= f0 f1 c= * * part cDIFF part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- (_586008 = _586010), (_586009 = _586011) |- ((_586009 = _586011) /\ ((_586008 , _586009) = (_586010 , _586011)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= c, f0 f2 c, f1 f3
+ |- (((a = b) ==> (EMPTY = t')) ==> (((~ (a = b)) ==> ((a INSERT (b INSERT EMPTY)) = e')) ==> ((((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY))) = (((COND (a = b)) t') e'))))
T c==> c==> c= f0 f1 c= part cEMPTY f2 c==> c==> c~ c= f0 f1 c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c= * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * * part cCOND c= f0 f1 f2 f3
+ ((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))), ((((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) \/ ((open_segment (a , b)) x)) /\ ((x = a) \/ (x = b))) |- (((((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) \/ ((open_segment (a , b)) x)) /\ ((x = a) \/ (x = b))) /\ F)
T c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 c==> c/\ c\/ c/\ c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 c/\ c/\ c\/ c/\ c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 cF
+ |- ((\t. (t \/ (~ t))) ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)))
T * / c\/ b0 c~ b0 c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV
+ (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- ((x = a) ==> F)
T c==> c/\ c/\ c\/ copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 c==> c= f2 f0 cF
+ (x = a), (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- ((x = a) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c\/ copen_segment c, f1 f2 f0 c\/ c= f0 f1 c= f0 f2 c~ copen_segment c, f1 f2 f0 c/\ c~ c= f0 f1 c~ c= f0 f2 c/\ c= f0 f1 cF
+ |- ((closure (open_segment (a , b))) = (((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))))
T c= * part cclosure * part copen_segment c, f0 f1 * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((((a = b) = (a = b)) ==> (((a = b) ==> (EMPTY = t')) ==> (((~ (a = b)) ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND (a = b)) t') e'))))) = (((a = b) ==> (EMPTY = t')) ==> (((~ (a = b)) ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND (a = b)) t') e')))))
T c= c==> c= c= f0 f1 c= f0 f1 c==> c==> c= f0 f1 c= part cEMPTY f2 c==> c==> c~ c= f0 f1 c= * part cclosed_segment cCONS c, f0 f1 cNIL f3 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND c= f0 f1 f2 f3 c==> c==> c= f0 f1 c= part cEMPTY f2 c==> c==> c~ c= f0 f1 c= * part cclosed_segment cCONS c, f0 f1 cNIL f3 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND c= f0 f1 f2 f3
+ (x = b), ((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))), ((open_segment (a , b)) x) |- (((open_segment (a , b)) x) /\ F)
T c==> c= f0 f1 c==> c/\ c~ copen_segment c, f2 f1 f2 c~ copen_segment c, f2 f1 f1 c==> copen_segment c, f2 f1 f0 c/\ copen_segment c, f2 f1 f0 cF
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ ((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) |- (~ (x = b))
T c==> c/\ c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 c~ c= f2 f1
- (x = a), ((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))), ((open_segment (a , b)) x) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c~ copen_segment c, f1 f2 f1 c~ copen_segment c, f1 f2 f2 c==> copen_segment c, f1 f2 f0 c==> c~ cF cF
+ |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) \/ (~ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))))
T c\/ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c~ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV
+ |- (((((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))) DIFF (open_segment (a , b))) = (a INSERT (b INSERT EMPTY))) = ((((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))) DIFF (open_segment (a , b))) = (((COND F) EMPTY) (a INSERT (b INSERT EMPTY)))))
T c= c= * * part cDIFF * * part cUNION * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= * * part cDIFF * * part cUNION * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND cF part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (x = a), (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c\/ copen_segment c, f1 f2 f0 c\/ c= f0 f1 c= f0 f2 c~ copen_segment c, f1 f2 f0 c/\ c~ c= f0 f1 c~ c= f0 f2 cF
+ |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((!a. (!b. (((closed_segment ((CONS (a , b)) NIL)) DIFF (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY)))))) /\ (!a. (!b. (((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) DIFF (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))) = (((COND (a = b)) EMPTY) (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY)))))))))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ ! ! c= * * part cDIFF * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! c= * * part cDIFF * * * part cCOND c= b0 b1 part cEMPTY * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- ((((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F)) = ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F))
T c= c==> c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF
+ ((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))), ((((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) \/ ((open_segment (a , b)) x)) /\ ((x = a) \/ (x = b))) |- ((x = b) ==> F)
T c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 c==> c/\ c\/ c/\ c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 c==> c= f2 f1 cF
+ (~ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) |- ((~ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) /\ ((!a. (!b. (((closed_segment ((CONS (a , b)) NIL)) DIFF (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY)))))) /\ (!a. (!b. (((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) DIFF (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))) = (((COND (a = b)) EMPTY) (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY)))))))))
T c==> c~ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ c~ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ ! ! c= * * part cDIFF * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! c= * * part cDIFF * * * part cCOND c= b0 b1 part cEMPTY * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
+ |- (((!t'. (!e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((a INSERT (b INSERT EMPTY)) = e')) ==> ((((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((a INSERT (b INSERT EMPTY)) = e')) ==> ((((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((a INSERT (b INSERT EMPTY)) = e')) ==> ((((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 f1 f2 c==> c==> f2 c= part cEMPTY b0 c==> c==> c~ f2 c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c= * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * * part cCOND f2 b0 b1 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= part cEMPTY b0 c==> c==> c~ f2 c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c= * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * * part cCOND f2 b0 b1 f3 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= part cEMPTY b0 c==> c==> c~ f2 c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c= * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * * part cCOND f2 b0 b1 f3
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- (~ (x = b))
T c==> c/\ c/\ c\/ copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 c~ c= f2 f1
+ (x = a), ((open_segment (a , b)) x) |- ((((open_segment (a , b)) a) ==> F) = F)
T c==> c= f0 f1 c==> copen_segment c, f1 f2 f0 c= c==> copen_segment c, f1 f2 f1 cF cF
+ |- ((\b. ((interior (closed_segment ((CONS (a , b)) NIL))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b))))) b)
T * / c= * part cinterior * part cclosed_segment cCONS c, f0 b0 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, f0 b0 f1
- |- ((\a. ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F)) a)
T * / c==> c~ c==> c/\ c~ copen_segment c, b0 f0 b0 c~ copen_segment c, b0 f0 f0 ! c= c/\ c\/ copen_segment c, b0 f0 b1 c\/ c= b1 b0 c= b1 f0 c~ copen_segment c, b0 f0 b1 c\/ c= b1 b0 c= b1 f0 cF f1
- (~ F), (x = a), ((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))), ((open_segment (a , b)) x) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c~ copen_segment c, f1 f2 f1 c~ copen_segment c, f1 f2 f2 c==> copen_segment c, f1 f2 f0 c/\ c~ cF cF
- |- (((!g'. (!t'. (!e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= part cEMPTY b1 c==> c==> c~ b0 c= * part cclosed_segment cCONS c, f0 f1 cNIL b2 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND b0 b1 b2 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= part cEMPTY b1 c==> c==> c~ b0 c= * part cclosed_segment cCONS c, f0 f1 cNIL b2 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND b0 b1 b2 f2 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= part cEMPTY b1 c==> c==> c~ b0 c= * part cclosed_segment cCONS c, f0 f1 cNIL b2 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND b0 b1 b2 f2
+ |- (((((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))) DIFF (open_segment (a , b))) = (a INSERT (b INSERT EMPTY))) = T)
T c= c= * * part cDIFF * * part cUNION * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
- (x = a), ((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) |- (~ (a = b))
T c==> c= f0 f1 c==> c/\ c~ copen_segment c, f1 f2 f0 c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f1 f2
- (~ (a = b)) |- ((~ (a = b)) /\ ((closed_segment ((CONS (a , b)) NIL)) = (closed_segment ((CONS (a , b)) NIL))))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c= * part cclosed_segment cCONS c, f0 f1 cNIL * part cclosed_segment cCONS c, f0 f1 cNIL
+ |- ((((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY))) = (((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY))))
T c= * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (((!b. ((interior (open_segment (a , b))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b))))) ==> ((\b. ((interior (open_segment (a , b))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b))))) b)) = ((\b. ((interior (open_segment (a , b))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b))))) b))
T c= c==> ! c= * part cinterior * part copen_segment c, f0 b0 * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, f0 b0 * / c= * part cinterior * part copen_segment c, f0 b0 * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, f0 b0 f1 * / c= * part cinterior * part copen_segment c, f0 b0 * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, f0 b0 f1
- (x = b) |- ((~ ((open_segment (a , b)) b)) = (~ ((open_segment (a , b)) b)))
T c==> c= f0 f1 c= c~ copen_segment c, f2 f1 f1 c~ copen_segment c, f2 f1 f1
- |- ((~ (_586008 = _586010)) \/ ((~ (_586009 = _586011)) \/ ((_586008 , _586009) = (_586010 , _586011))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (~ (a = b)) |- (((((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))) DIFF (open_segment (a , b))) = (((COND F) EMPTY) (a INSERT (b INSERT EMPTY)))) = ((((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))) DIFF (open_segment (a , b))) = (((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY)))))
T c==> c~ c= f0 f1 c= c= * * part cDIFF * * part cUNION * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND cF part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= * * part cDIFF * * part cUNION * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- (~ ((open_segment (a , b)) b)), (x = b), ((open_segment (a , b)) x) |- ((~ ((open_segment (a , b)) b)) /\ ((open_segment (a , b)) b))
T c==> c~ copen_segment c, f0 f1 f1 c==> c= f2 f1 c==> copen_segment c, f0 f1 f2 c/\ c~ copen_segment c, f0 f1 f1 copen_segment c, f0 f1 f1
- |- ((!b. (!a. (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b))))))) = (!b. (!a. ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F))))
T c= ! ! c==> c/\ c~ copen_segment c, b1 b0 b1 c~ copen_segment c, b1 b0 b0 ! c= c/\ c\/ copen_segment c, b1 b0 b2 c\/ c= b2 b1 c= b2 b0 c~ copen_segment c, b1 b0 b2 c\/ c= b2 b1 c= b2 b0 ! ! c==> c~ c==> c/\ c~ copen_segment c, b1 b0 b1 c~ copen_segment c, b1 b0 b0 ! c= c/\ c\/ copen_segment c, b1 b0 b2 c\/ c= b2 b1 c= b2 b0 c~ copen_segment c, b1 b0 b2 c\/ c= b2 b1 c= b2 b0 cF
+ (a = b) |- ((a = b) = T)
T c==> c= f0 f1 c= c= f0 f1 cT
+ (x = b), ((((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) \/ ((open_segment (a , b)) x)) /\ ((x = a) \/ (x = b))), (((open_segment (a , b)) x) ==> F) |- F
T c==> c= f0 f1 c==> c/\ c\/ c/\ c~ copen_segment c, f2 f1 f0 c/\ c~ c= f0 f2 c~ c= f0 f1 copen_segment c, f2 f1 f0 c\/ c= f0 f2 c= f0 f1 c==> c==> copen_segment c, f2 f1 f0 cF cF
+ |- ((\a. (!b. ((closure (open_segment (a , b))) = (((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL)))))) a)
T * / ! c= * part cclosure * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * part cclosed_segment cCONS c, b0 b1 cNIL f0
- (x = b), ((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c~ copen_segment c, f2 f1 f0 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c~ cF cF
+ |- (((!a. (!b. ((interior (closed_segment ((CONS (a , b)) NIL))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))))) ==> ((\a. (!b. ((interior (closed_segment ((CONS (a , b)) NIL))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))))) a)) = ((\a. (!b. ((interior (closed_segment ((CONS (a , b)) NIL))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))))) a))
T c= c==> ! ! c= * part cinterior * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 * / ! c= * part cinterior * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 f0 * / ! c= * part cinterior * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 f0
+ (~ (a = b)) |- ((~ (a = b)) /\ ((((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))) DIFF (open_segment (a , b))) = (((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY)))))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c= * * part cDIFF * * part cUNION * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((!b. ((((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))) DIFF (open_segment (a , b))) = (a INSERT (b INSERT EMPTY)))) = T)
T c= ! c= * * part cDIFF * * part cUNION * part copen_segment c, f0 b0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part copen_segment c, f0 b0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cT
- (_586004 = _586006), (_586005 = _586007) |- ((_586004 = _586006) /\ (((open_segment _586006) _586007) \/ (~ ((open_segment _586004) _586005))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ copen_segment f1 f3 c~ copen_segment f0 f2
+ (x = a) |- (((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) ==> F)
T c==> c= f0 f1 c==> c/\ c~ copen_segment c, f1 f2 f0 c/\ c~ c= f0 f1 c~ c= f0 f2 cF
+ (a = b) |- (T = ((EMPTY DIFF (open_segment (a , b))) = (((COND T) EMPTY) (a INSERT (b INSERT EMPTY)))))
T c==> c= f0 f1 c= cT c= * * part cDIFF part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND cT part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- (~ (a = b)) |- (((~ (b = a)) ==> ((b = a) = F)) = ((b = a) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ (~ (a = b)) |- ((a = b) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
+ (x = a), ((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) |- ((a = a) ==> F)
T c==> c= f0 f1 c==> c/\ c~ copen_segment c, f1 f2 f0 c/\ c~ c= f0 f1 c~ c= f0 f2 c==> c= f1 f1 cF
+ |- (((!a. (!b. (((closed_segment ((CONS (a , b)) NIL)) DIFF (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY)))))) /\ (!a. (!b. (((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) DIFF (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))) = (((COND (a = b)) EMPTY) (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY)))))))) = ((!a. (!b. ((frontier (closed_segment ((CONS (a , b)) NIL))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY)))))) /\ (!a. (!b. ((frontier (open_segment (a , b))) = (((COND (a = b)) EMPTY) (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY)))))))))
T c= c/\ ! ! c= * * part cDIFF * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! c= * * part cDIFF * * * part cCOND c= b0 b1 part cEMPTY * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ ! ! c= * part cfrontier * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! c= * part cfrontier * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ |- (((~ (a IN (open_segment (a , b)))) /\ (~ (b IN (open_segment (a , b))))) ==> ((((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))) DIFF (open_segment (a , b))) = (a INSERT (b INSERT EMPTY))))
T c==> c/\ c~ cIN f0 * part copen_segment c, f0 f1 c~ cIN f1 * part copen_segment c, f0 f1 c= * * part cDIFF * * part cUNION * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F)) ==> (((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF
- (_586005 = _586007) |- ((_586004 = _586006) ==> (((open_segment _586006) _586007) \/ (~ ((open_segment _586004) _586005))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ copen_segment f3 f1 c~ copen_segment f2 f0
+ |- ((\a. (!b. ((interior (closed_segment ((CONS (a , b)) NIL))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))))) a)
T * / ! c= * part cinterior * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 f0
+ |- ((((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))) DIFF (open_segment (a , b))) = (((COND F) EMPTY) (a INSERT (b INSERT EMPTY))))
T c= * * part cDIFF * * part cUNION * part copen_segment c, f0 f1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND cF part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (x = a), (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- (~ (a = a))
T c==> c= f0 f1 c==> c/\ c/\ c\/ copen_segment c, f1 f2 f0 c\/ c= f0 f1 c= f0 f2 c~ copen_segment c, f1 f2 f0 c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f1 f1
+ ((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) |- ((~ (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))) ==> F)
T c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 c==> c~ c= c/\ c\/ copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 c~ copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 cF
+ |- ((a = b) ==> ((EMPTY DIFF (open_segment (a , b))) = (((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY)))))
T c==> c= f0 f1 c= * * part cDIFF part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((\b. (!a. ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F))) b)
T * / ! c==> c~ c==> c/\ c~ copen_segment c, b1 b0 b1 c~ copen_segment c, b1 b0 b0 ! c= c/\ c\/ copen_segment c, b1 b0 b2 c\/ c= b2 b1 c= b2 b0 c~ copen_segment c, b1 b0 b2 c\/ c= b2 b1 c= b2 b0 cF f0
+ |- (((b = b) ==> F) = F)
T c= c==> c= f0 f0 cF cF
+ |- (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((a INSERT (b INSERT EMPTY)) = e')) ==> ((((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY))) = (((COND g') t') e')))))
T c==> c= c= f0 f1 f2 c==> c==> f2 c= part cEMPTY f3 c==> c==> c~ f2 c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f4 c= * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * * part cCOND f2 f3 f4
+ (x = b), ((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) |- ((b = b) ==> F)
T c==> c= f0 f1 c==> c/\ c~ copen_segment c, f2 f1 f0 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c= f1 f1 cF
- |- ((closed_segment ((CONS (a , a)) NIL)) = (a INSERT EMPTY))
T c= * part cclosed_segment cCONS c, f0 f0 cNIL * * part cINSERT f0 part cEMPTY
+ (a = b) |- ((a = b) /\ (EMPTY = EMPTY))
T c==> c= f0 f1 c/\ c= f0 f1 c= part cEMPTY part cEMPTY
- |- ((!a. (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) = T)
T c= ! c==> c/\ c~ copen_segment c, b0 f0 b0 c~ copen_segment c, b0 f0 f0 ! c= c/\ c\/ copen_segment c, b0 f0 b1 c\/ c= b1 b0 c= b1 f0 c~ copen_segment c, b0 f0 b1 c\/ c= b1 b0 c= b1 f0 cT
+ (x = a), ((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))), ((open_segment (a , b)) x) |- (((open_segment (a , b)) x) /\ F)
T c==> c= f0 f1 c==> c/\ c~ copen_segment c, f1 f2 f1 c~ copen_segment c, f1 f2 f2 c==> copen_segment c, f1 f2 f0 c/\ copen_segment c, f1 f2 f0 cF
+ (x = a), ((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) |- (~ (a = a))
T c==> c= f0 f1 c==> c/\ c~ copen_segment c, f1 f2 f0 c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f1 f1
+ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = T)
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV cT
- |- (((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F))
T c==> c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (x = a) |- (((open_segment (a , b)) x) = ((open_segment (a , b)) a))
T c==> c= f0 f1 c= copen_segment c, f1 f2 f0 copen_segment c, f1 f2 f1
- (x = a), (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- (~ ((open_segment (a , b)) a))
T c==> c= f0 f1 c==> c/\ c/\ c\/ copen_segment c, f1 f2 f0 c\/ c= f0 f1 c= f0 f2 c~ copen_segment c, f1 f2 f0 c/\ c~ c= f0 f1 c~ c= f0 f2 c~ copen_segment c, f1 f2 f1
+ (~ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) |- (((!a. (!b. (((closed_segment ((CONS (a , b)) NIL)) DIFF (open_segment (a , b))) = (a INSERT (b INSERT EMPTY))))) /\ (!a. (!b. (((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) DIFF (open_segment (a , b))) = (((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY))))))) = ((!a. (!b. (((closed_segment ((CONS (a , b)) NIL)) DIFF (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY)))))) /\ (!a. (!b. (((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) DIFF (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))) = (((COND (a = b)) EMPTY) (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY)))))))))
T c==> c~ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= c/\ ! ! c= * * part cDIFF * part cclosed_segment cCONS c, b0 b1 cNIL * part copen_segment c, b0 b1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! c= * * part cDIFF * * * part cCOND c= b0 b1 part cEMPTY * part cclosed_segment cCONS c, b0 b1 cNIL * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ ! ! c= * * part cDIFF * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! c= * * part cDIFF * * * part cCOND c= b0 b1 part cEMPTY * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
+ (x = b), ((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) |- (((open_segment (a , b)) x) ==> F)
T c==> c= f0 f1 c==> c/\ c~ copen_segment c, f2 f1 f2 c~ copen_segment c, f2 f1 f1 c==> copen_segment c, f2 f1 f0 cF
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
+ |- (((!e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((a INSERT (b INSERT EMPTY)) = e')) ==> ((((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY))) = (((COND g') t') e')))))) ==> ((\e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((a INSERT (b INSERT EMPTY)) = e')) ==> ((((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY))) = (((COND g') t') e')))))) e')) = ((\e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((a INSERT (b INSERT EMPTY)) = e')) ==> ((((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 f1 f2 c==> c==> f2 c= part cEMPTY f3 c==> c==> c~ f2 c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c= * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * * part cCOND f2 f3 b0 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= part cEMPTY f3 c==> c==> c~ f2 c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c= * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * * part cCOND f2 f3 b0 f4 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= part cEMPTY f3 c==> c==> c~ f2 c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c= * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * * part cCOND f2 f3 b0 f4
+ |- ((\b. ((interior (open_segment (a , b))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b))))) b)
T * / c= * part cinterior * part copen_segment c, f0 b0 * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, f0 b0 f1
- |- ((~ (a = b)) ==> ((closed_segment ((CONS (a , b)) NIL)) = (closed_segment ((CONS (a , b)) NIL))))
T c==> c~ c= f0 f1 c= * part cclosed_segment cCONS c, f0 f1 cNIL * part cclosed_segment cCONS c, f0 f1 cNIL
- |- (((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) = (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b))))))
T c= c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1
- (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))), ((open_segment (a , b)) x) |- ((~ F) ==> F)
T c==> c/\ c/\ c\/ copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 c==> copen_segment c, f0 f1 f2 c==> c~ cF cF
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((((a = b) ==> (EMPTY = EMPTY)) ==> (((~ (a = b)) ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND (a = b)) EMPTY) e')))) = (((~ (a = b)) ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND (a = b)) EMPTY) e'))))
T c= c==> c==> c= f0 f1 c= part cEMPTY part cEMPTY c==> c==> c~ c= f0 f1 c= * part cclosed_segment cCONS c, f0 f1 cNIL f2 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND c= f0 f1 part cEMPTY f2 c==> c==> c~ c= f0 f1 c= * part cclosed_segment cCONS c, f0 f1 cNIL f2 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND c= f0 f1 part cEMPTY f2
+ (~ (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))) |- ((((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) \/ ((((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) \/ ((open_segment (a , b)) x)) /\ ((x = a) \/ (x = b))))
T c==> c~ c= c/\ c\/ copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 c~ copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 c\/ c/\ c/\ c\/ copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 c/\ c\/ c/\ c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1
+ (x = b), ((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))), ((((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) \/ ((open_segment (a , b)) x)) /\ ((x = a) \/ (x = b))) |- ((x = b) /\ F)
T c==> c= f0 f1 c==> c/\ c~ copen_segment c, f2 f1 f2 c~ copen_segment c, f2 f1 f1 c==> c/\ c\/ c/\ c~ copen_segment c, f2 f1 f0 c/\ c~ c= f0 f2 c~ c= f0 f1 copen_segment c, f2 f1 f0 c\/ c= f0 f2 c= f0 f1 c/\ c= f0 f1 cF
+ (x = a), ((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))), ((((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) \/ ((open_segment (a , b)) x)) /\ ((x = a) \/ (x = b))) |- ((x = a) /\ F)
T c==> c= f0 f1 c==> c/\ c~ copen_segment c, f1 f2 f1 c~ copen_segment c, f1 f2 f2 c==> c/\ c\/ c/\ c~ copen_segment c, f1 f2 f0 c/\ c~ c= f0 f1 c~ c= f0 f2 copen_segment c, f1 f2 f0 c\/ c= f0 f1 c= f0 f2 c/\ c= f0 f1 cF
- |- ((((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b))))) = T)
T c= c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cT
+ (a = b) |- (((EMPTY DIFF (open_segment (a , b))) = (((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY)))) = ((EMPTY DIFF (open_segment (a , b))) = (((COND T) EMPTY) (a INSERT (b INSERT EMPTY)))))
T c==> c= f0 f1 c= c= * * part cDIFF part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= * * part cDIFF part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND cT part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- (b = a) |- (a = b)
T c==> c= f0 f1 c= f1 f0
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ (a = b) |- ((EMPTY DIFF (open_segment (a , b))) = (((COND T) EMPTY) (a INSERT (b INSERT EMPTY))))
T c==> c= f0 f1 c= * * part cDIFF part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND cT part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (a = b) |- (((EMPTY DIFF (open_segment (a , b))) = (((COND T) EMPTY) (a INSERT (b INSERT EMPTY)))) = ((EMPTY DIFF (open_segment (a , b))) = (((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY)))))
T c==> c= f0 f1 c= c= * * part cDIFF part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND cT part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= * * part cDIFF part cEMPTY * part copen_segment c, f0 f1 * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((\a. (!b. ((~ (a IN (open_segment (a , b)))) /\ (~ (b IN (open_segment (a , b))))))) a)
T * / ! c/\ c~ cIN b0 * part copen_segment c, b0 b1 c~ cIN b1 * part copen_segment c, b0 b1 f0
+ |- (((!s. ((frontier s) = ((closure s) DIFF (interior s)))) ==> ((\s. ((frontier s) = ((closure s) DIFF (interior s)))) s)) = ((\s. ((frontier s) = ((closure s) DIFF (interior s)))) s))
T c= c==> ! c= * part cfrontier b0 * * part cDIFF * part cclosure b0 * part cinterior b0 * / c= * part cfrontier b0 * * part cDIFF * part cclosure b0 * part cinterior b0 f0 * / c= * part cfrontier b0 * * part cDIFF * part cclosure b0 * part cinterior b0 f0
- ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F), (((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F)) |- ((((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F)) /\ ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F))
T c==> c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c==> c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c/\ c==> c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF
- |- (((!e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND g') t') e')))))) ==> ((\e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND g') t') e')))))) e')) = ((\e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 f1 f2 c==> c==> f2 c= part cEMPTY f3 c==> c==> c~ f2 c= * part cclosed_segment cCONS c, f0 f1 cNIL b0 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND f2 f3 b0 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= part cEMPTY f3 c==> c==> c~ f2 c= * part cclosed_segment cCONS c, f0 f1 cNIL b0 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND f2 f3 b0 f4 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= part cEMPTY f3 c==> c==> c~ f2 c= * part cclosed_segment cCONS c, f0 f1 cNIL b0 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND f2 f3 b0 f4
+ (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- ((((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) /\ F)
T c==> c/\ c/\ c\/ copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 c/\ c/\ c/\ c\/ copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 cF
+ |- ((open_segment (a , a)) = EMPTY)
T c= * part copen_segment c, f0 f0 part cEMPTY
- |- (((a = b) ==> (EMPTY = t')) ==> (((~ (a = b)) ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND (a = b)) t') e'))))
T c==> c==> c= f0 f1 c= part cEMPTY f2 c==> c==> c~ c= f0 f1 c= * part cclosed_segment cCONS c, f0 f1 cNIL f3 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND c= f0 f1 f2 f3
+ ((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) |- (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) /\ (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))
T c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 c/\ c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1
+ (x = b), (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c\/ copen_segment c, f2 f1 f0 c\/ c= f0 f2 c= f0 f1 c~ copen_segment c, f2 f1 f0 c/\ c~ c= f0 f2 c~ c= f0 f1 cF
+ |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)))) = ((\t. (t \/ (~ t))) ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * / c\/ b0 c~ b0 c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV
- (~ F), (x = b), (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c\/ copen_segment c, f2 f1 f0 c\/ c= f0 f2 c= f0 f1 c~ copen_segment c, f2 f1 f0 c/\ c~ c= f0 f2 c~ c= f0 f1 c/\ c~ cF cF
- (x = a) |- ((~ ((open_segment (a , b)) b)) = (~ ((open_segment (a , b)) b)))
T c==> c= f0 f1 c= c~ copen_segment c, f1 f2 f2 c~ copen_segment c, f1 f2 f2
- (x = b), ((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))), ((open_segment (a , b)) x) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c~ copen_segment c, f2 f1 f2 c~ copen_segment c, f2 f1 f1 c==> copen_segment c, f2 f1 f0 c==> c~ cF cF
+ (~ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = F)
T c==> c~ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV cF
- |- (((!a. ((closed_segment ((CONS (a , a)) NIL)) = (a INSERT EMPTY))) ==> ((\a. ((closed_segment ((CONS (a , a)) NIL)) = (a INSERT EMPTY))) a)) = ((\a. ((closed_segment ((CONS (a , a)) NIL)) = (a INSERT EMPTY))) a))
T c= c==> ! c= * part cclosed_segment cCONS c, b0 b0 cNIL * * part cINSERT b0 part cEMPTY * / c= * part cclosed_segment cCONS c, b0 b0 cNIL * * part cINSERT b0 part cEMPTY f0 * / c= * part cclosed_segment cCONS c, b0 b0 cNIL * * part cINSERT b0 part cEMPTY f0
- (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))), ((open_segment (a , b)) x) |- (((open_segment (a , b)) x) /\ F)
T c==> c/\ c/\ c\/ copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 c==> copen_segment c, f0 f1 f2 c/\ copen_segment c, f0 f1 f2 cF
+ |- (((!a. (!b. ((closed_segment ((CONS (a , b)) NIL)) = ((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY)))))) ==> ((\a. (!b. ((closed_segment ((CONS (a , b)) NIL)) = ((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY)))))) a)) = ((\a. (!b. ((closed_segment ((CONS (a , b)) NIL)) = ((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY)))))) a))
T c= c==> ! ! c= * part cclosed_segment cCONS c, b0 b1 cNIL * * part cUNION * part copen_segment c, b0 b1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c= * part cclosed_segment cCONS c, b0 b1 cNIL * * part cUNION * part copen_segment c, b0 b1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 * / ! c= * part cclosed_segment cCONS c, b0 b1 cNIL * * part cUNION * part copen_segment c, b0 b1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
+ (x = b) |- (((open_segment (a , b)) x) = ((open_segment (a , b)) b))
T c==> c= f0 f1 c= copen_segment c, f2 f1 f0 copen_segment c, f2 f1 f1
+ |- (((!b. ((~ (a IN (open_segment (a , b)))) /\ (~ (b IN (open_segment (a , b)))))) ==> ((\b. ((~ (a IN (open_segment (a , b)))) /\ (~ (b IN (open_segment (a , b)))))) b)) = ((\b. ((~ (a IN (open_segment (a , b)))) /\ (~ (b IN (open_segment (a , b)))))) b))
T c= c==> ! c/\ c~ cIN f0 * part copen_segment c, f0 b0 c~ cIN b0 * part copen_segment c, f0 b0 * / c/\ c~ cIN f0 * part copen_segment c, f0 b0 c~ cIN b0 * part copen_segment c, f0 b0 f1 * / c/\ c~ cIN f0 * part copen_segment c, f0 b0 c~ cIN b0 * part copen_segment c, f0 b0 f1
- (x = b) |- (F = F)
T c==> c= f0 f1 c= cF cF
+ |- (((!a. (!b. ((interior (open_segment (a , b))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))))) ==> ((\a. (!b. ((interior (open_segment (a , b))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))))) a)) = ((\a. (!b. ((interior (open_segment (a , b))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))))) a))
T c= c==> ! ! c= * part cinterior * part copen_segment c, b0 b1 * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 * / ! c= * part cinterior * part copen_segment c, b0 b1 * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 f0 * / ! c= * part cinterior * part copen_segment c, b0 b1 * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 f0
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
+ |- ((\a. (!b. ((closed_segment ((CONS (a , b)) NIL)) = ((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY)))))) a)
T * / ! c= * part cclosed_segment cCONS c, b0 b1 cNIL * * part cUNION * part copen_segment c, b0 b1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
- |- ((\t'. (!e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= part cEMPTY b0 c==> c==> c~ f2 c= * part cclosed_segment cCONS c, f0 f1 cNIL b1 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND f2 b0 b1 f3
+ |- ((interior (open_segment (a , b))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b))))
T c= * part cinterior * part copen_segment c, f0 f1 * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, f0 f1
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (x = b), ((open_segment (a , b)) x) |- ((~ ((open_segment (a , b)) b)) ==> ((open_segment (a , b)) b))
T c==> c= f0 f1 c==> copen_segment c, f2 f1 f0 c==> c~ copen_segment c, f2 f1 f1 copen_segment c, f2 f1 f1
+ |- (((!b. ((closed_segment ((CONS (a , b)) NIL)) = ((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))))) ==> ((\b. ((closed_segment ((CONS (a , b)) NIL)) = ((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))))) b)) = ((\b. ((closed_segment ((CONS (a , b)) NIL)) = ((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))))) b))
T c= c==> ! c= * part cclosed_segment cCONS c, f0 b0 cNIL * * part cUNION * part copen_segment c, f0 b0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / c= * part cclosed_segment cCONS c, f0 b0 cNIL * * part cUNION * part copen_segment c, f0 b0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1 * / c= * part cclosed_segment cCONS c, f0 b0 cNIL * * part cUNION * part copen_segment c, f0 b0 * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
- (x = a), ((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c~ copen_segment c, f1 f2 f0 c/\ c~ c= f0 f1 c~ c= f0 f2 c==> c~ cF cF
- |- (((!a. ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F)) ==> ((\a. ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F)) a)) = ((\a. ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F)) a))
T c= c==> ! c==> c~ c==> c/\ c~ copen_segment c, b0 f0 b0 c~ copen_segment c, b0 f0 f0 ! c= c/\ c\/ copen_segment c, b0 f0 b1 c\/ c= b1 b0 c= b1 f0 c~ copen_segment c, b0 f0 b1 c\/ c= b1 b0 c= b1 f0 cF * / c==> c~ c==> c/\ c~ copen_segment c, b0 f0 b0 c~ copen_segment c, b0 f0 f0 ! c= c/\ c\/ copen_segment c, b0 f0 b1 c\/ c= b1 b0 c= b1 f0 c~ copen_segment c, b0 f0 b1 c\/ c= b1 b0 c= b1 f0 cF f1 * / c==> c~ c==> c/\ c~ copen_segment c, b0 f0 b0 c~ copen_segment c, b0 f0 f0 ! c= c/\ c\/ copen_segment c, b0 f0 b1 c\/ c= b1 b0 c= b1 f0 c~ copen_segment c, b0 f0 b1 c\/ c= b1 b0 c= b1 f0 cF f1
+ |- ((!a. (!b. (((closed_segment ((CONS (a , b)) NIL)) DIFF (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY)))))) /\ (!a. (!b. (((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) DIFF (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))) = (((COND (a = b)) EMPTY) (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY))))))))
T c/\ ! ! c= * * part cDIFF * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! c= * * part cDIFF * * * part cCOND c= b0 b1 part cEMPTY * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
+ ((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) |- (((((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) \/ ((open_segment (a , b)) x)) /\ ((x = a) \/ (x = b))) ==> F)
T c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 c==> c/\ c\/ c/\ c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 cF
- (x = b), (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- (~ (b = a))
T c==> c= f0 f1 c==> c/\ c/\ c\/ copen_segment c, f2 f1 f0 c\/ c= f0 f2 c= f0 f1 c~ copen_segment c, f2 f1 f0 c/\ c~ c= f0 f2 c~ c= f0 f1 c~ c= f1 f2
- (x = a), ((open_segment (a , b)) x) |- ((~ ((open_segment (a , b)) a)) ==> ((open_segment (a , b)) a))
T c==> c= f0 f1 c==> copen_segment c, f1 f2 f0 c==> c~ copen_segment c, f1 f2 f1 copen_segment c, f1 f2 f1
- (x = a) |- ((~ ((open_segment (a , b)) a)) = (~ ((open_segment (a , b)) a)))
T c==> c= f0 f1 c= c~ copen_segment c, f1 f2 f1 c~ copen_segment c, f1 f2 f1
+ (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))), ((x = b) ==> F), ((x = a) \/ (x = b)) |- F
T c==> c/\ c/\ c\/ copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 c==> c==> c= f2 f1 cF c==> c\/ c= f2 f0 c= f2 f1 cF
- (x = a) |- ((~ ((open_segment (a , b)) x)) = (~ ((open_segment (a , b)) a)))
T c==> c= f0 f1 c= c~ copen_segment c, f1 f2 f0 c~ copen_segment c, f1 f2 f1
+ |- ((~ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) ==> ((!a. (!b. (((closed_segment ((CONS (a , b)) NIL)) DIFF (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY)))))) /\ (!a. (!b. (((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) DIFF (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))) = (((COND (a = b)) EMPTY) (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY)))))))))
T c==> c~ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ ! ! c= * * part cDIFF * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! c= * * part cDIFF * * * part cCOND c= b0 b1 part cEMPTY * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
- (~ F), (x = a), ((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c~ copen_segment c, f1 f2 f0 c/\ c~ c= f0 f1 c~ c= f0 f2 c/\ c~ cF cF
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
+ |- (((!a. (!b. ((((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY))) DIFF (open_segment (a , b))) = (a INSERT (b INSERT EMPTY))))) /\ (!a. (!b. (((((COND (a = b)) EMPTY) ((open_segment (a , b)) UNION (a INSERT (b INSERT EMPTY)))) DIFF (open_segment (a , b))) = (((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY))))))) = ((!a. (!b. (((closed_segment ((CONS (a , b)) NIL)) DIFF (open_segment (a , b))) = (a INSERT (b INSERT EMPTY))))) /\ (!a. (!b. (((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) DIFF (open_segment (a , b))) = (((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY))))))))
T c= c/\ ! ! c= * * part cDIFF * * part cUNION * part copen_segment c, b0 b1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * part copen_segment c, b0 b1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! c= * * part cDIFF * * * part cCOND c= b0 b1 part cEMPTY * * part cUNION * part copen_segment c, b0 b1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ ! ! c= * * part cDIFF * part cclosed_segment cCONS c, b0 b1 cNIL * part copen_segment c, b0 b1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! c= * * part cDIFF * * * part cCOND c= b0 b1 part cEMPTY * part cclosed_segment cCONS c, b0 b1 cNIL * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
+ |- (((!b. ((interior (closed_segment ((CONS (a , b)) NIL))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b))))) ==> ((\b. ((interior (closed_segment ((CONS (a , b)) NIL))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b))))) b)) = ((\b. ((interior (closed_segment ((CONS (a , b)) NIL))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b))))) b))
T c= c==> ! c= * part cinterior * part cclosed_segment cCONS c, f0 b0 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, f0 b0 * / c= * part cinterior * part cclosed_segment cCONS c, f0 b0 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, f0 b0 f1 * / c= * part cinterior * part cclosed_segment cCONS c, f0 b0 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, f0 b0 f1
+ |- ((\a. (!b. ((interior (open_segment (a , b))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))))) a)
T * / ! c= * part cinterior * part copen_segment c, b0 b1 * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 f0
+ ((~ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) ==> ((!a. (!b. (((closed_segment ((CONS (a , b)) NIL)) DIFF (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY)))))) /\ (!a. (!b. (((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) DIFF (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))) = (((COND (a = b)) EMPTY) (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY))))))))) |- ((!a. (!b. (((closed_segment ((CONS (a , b)) NIL)) DIFF (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))) = (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY)))))) /\ (!a. (!b. (((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) DIFF (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) EMPTY) (open_segment (a , b)))) = (((COND (a = b)) EMPTY) (((COND ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) (closed_segment ((CONS (a , b)) NIL))) (a INSERT (b INSERT EMPTY))))))))
T c==> c==> c~ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ ! ! c= * * part cDIFF * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! c= * * part cDIFF * * * part cCOND c= b0 b1 part cEMPTY * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ ! ! c= * * part cDIFF * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! ! c= * * part cDIFF * * * part cCOND c= b0 b1 part cEMPTY * part cclosed_segment cCONS c, b0 b1 cNIL * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV part cEMPTY * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * * * part cCOND c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV * part cclosed_segment cCONS c, b0 b1 cNIL * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
+ |- ((\a. (!b. ((closure (closed_segment ((CONS (a , b)) NIL))) = (closed_segment ((CONS (a , b)) NIL))))) a)
T * / ! c= * part cclosure * part cclosed_segment cCONS c, b0 b1 cNIL * part cclosed_segment cCONS c, b0 b1 cNIL f0
- (((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F)) |- ((((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F)) /\ (((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c/\ c==> c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF
+ |- (((!a. (!b. ((closure (closed_segment ((CONS (a , b)) NIL))) = (closed_segment ((CONS (a , b)) NIL))))) ==> ((\a. (!b. ((closure (closed_segment ((CONS (a , b)) NIL))) = (closed_segment ((CONS (a , b)) NIL))))) a)) = ((\a. (!b. ((closure (closed_segment ((CONS (a , b)) NIL))) = (closed_segment ((CONS (a , b)) NIL))))) a))
T c= c==> ! ! c= * part cclosure * part cclosed_segment cCONS c, b0 b1 cNIL * part cclosed_segment cCONS c, b0 b1 cNIL * / ! c= * part cclosure * part cclosed_segment cCONS c, b0 b1 cNIL * part cclosed_segment cCONS c, b0 b1 cNIL f0 * / ! c= * part cclosure * part cclosed_segment cCONS c, b0 b1 cNIL * part cclosed_segment cCONS c, b0 b1 cNIL f0
+ |- (((!a. (!b. ((closure (open_segment (a , b))) = (((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL)))))) ==> ((\a. (!b. ((closure (open_segment (a , b))) = (((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL)))))) a)) = ((\a. (!b. ((closure (open_segment (a , b))) = (((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL)))))) a))
T c= c==> ! ! c= * part cclosure * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * part cclosed_segment cCONS c, b0 b1 cNIL * / ! c= * part cclosure * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * part cclosed_segment cCONS c, b0 b1 cNIL f0 * / ! c= * part cclosure * part copen_segment c, b0 b1 * * * part cCOND c= b0 b1 part cEMPTY * part cclosed_segment cCONS c, b0 b1 cNIL f0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F), (((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F)) |- (((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) /\ ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F))
T c==> c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c==> c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c/\ c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF
- (~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) |- F
T c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF
+ |- ((\t'. (!e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((a INSERT (b INSERT EMPTY)) = e')) ==> ((((COND (a = b)) EMPTY) (a INSERT (b INSERT EMPTY))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= part cEMPTY b0 c==> c==> c~ f2 c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c= * * * part cCOND c= f0 f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * * part cCOND f2 b0 b1 f3
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- (x = a), ((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) |- (~ ((open_segment (a , b)) a))
T c==> c= f0 f1 c==> c/\ c~ copen_segment c, f1 f2 f0 c/\ c~ c= f0 f1 c~ c= f0 f2 c~ copen_segment c, f1 f2 f1
- (x = a), (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- (~ (a = b))
T c==> c= f0 f1 c==> c/\ c/\ c\/ copen_segment c, f1 f2 f0 c\/ c= f0 f1 c= f0 f2 c~ copen_segment c, f1 f2 f0 c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= f1 f2
- (x = b) |- ((~ ((open_segment (a , b)) x)) = (~ ((open_segment (a , b)) b)))
T c==> c= f0 f1 c= c~ copen_segment c, f2 f1 f0 c~ copen_segment c, f2 f1 f1
- (~ F), (x = a), (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c\/ copen_segment c, f1 f2 f0 c\/ c= f0 f1 c= f0 f2 c~ copen_segment c, f1 f2 f0 c/\ c~ c= f0 f1 c~ c= f0 f2 c/\ c~ cF cF
- (_586008 = _586010) |- ((_586008 = _586010) /\ ((~ (_586009 = _586011)) \/ ((_586008 , _586009) = (_586010 , _586011))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
- (~ (a = b)) |- (~ (b = a))
T c==> c~ c= f0 f1 c~ c= f1 f0
- (~ ((open_segment (a , b)) x)), ((open_segment (a , b)) x) |- ((~ ((open_segment (a , b)) x)) /\ ((open_segment (a , b)) x))
T c==> c~ copen_segment c, f0 f1 f2 c==> copen_segment c, f0 f1 f2 c/\ c~ copen_segment c, f0 f1 f2 copen_segment c, f0 f1 f2
- (x = b), (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- (~ ((open_segment (a , b)) b))
T c==> c= f0 f1 c==> c/\ c/\ c\/ copen_segment c, f2 f1 f0 c\/ c= f0 f2 c= f0 f1 c~ copen_segment c, f2 f1 f0 c/\ c~ c= f0 f2 c~ c= f0 f1 c~ copen_segment c, f2 f1 f1
- (~ (a = b)) |- ((b = a) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- (~ F), (x = b), ((~ ((open_segment (a , b)) x)) /\ ((~ (x = a)) /\ (~ (x = b)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c~ copen_segment c, f2 f1 f0 c/\ c~ c= f0 f2 c~ c= f0 f1 c/\ c~ cF cF
- |- ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))))
T c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL
- (_586004 = _586006), (_586005 = _586007) |- (((((open_segment _586004) _586005) = ((open_segment _586006) _586007)) ==> (((open_segment _586006) _586007) \/ (~ ((open_segment _586004) _586005)))) = (((open_segment _586006) _586007) \/ (~ ((open_segment _586004) _586005))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= copen_segment f0 f2 copen_segment f1 f3 c\/ copen_segment f1 f3 c~ copen_segment f0 f2 c\/ copen_segment f1 f3 c~ copen_segment f0 f2
- |- ((\a. ((closed_segment ((CONS (a , a)) NIL)) = (a INSERT EMPTY))) a)
T * / c= * part cclosed_segment cCONS c, b0 b0 cNIL * * part cINSERT b0 part cEMPTY f0
- (~ F), (x = b), ((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))), ((open_segment (a , b)) x) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c~ copen_segment c, f2 f1 f2 c~ copen_segment c, f2 f1 f1 c==> copen_segment c, f2 f1 f0 c/\ c~ cF cF
- |- ((!x. (P x)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- (((~ (a = b)) ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND (a = b)) EMPTY) e')))
T c==> c==> c~ c= f0 f1 c= * part cclosed_segment cCONS c, f0 f1 cNIL f2 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND c= f0 f1 part cEMPTY f2
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (_586004 = _586006), (_586005 = _586007) |- (((open_segment _586006) _586007) \/ (~ ((open_segment _586004) _586005)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ copen_segment f1 f3 c~ copen_segment f0 f2
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND g') t') e')))))
T c==> c= c= f0 f1 f2 c==> c==> f2 c= part cEMPTY f3 c==> c==> c~ f2 c= * part cclosed_segment cCONS c, f0 f1 cNIL f4 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND f2 f3 f4
- |- ((~ (_586005 = _586007)) \/ ((~ (_586004 = _586006)) \/ (((open_segment _586006) _586007) \/ (~ ((open_segment _586004) _586005)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ copen_segment f3 f1 c~ copen_segment f2 f0
- |- ((((~ (a = b)) ==> ((closed_segment ((CONS (a , b)) NIL)) = (closed_segment ((CONS (a , b)) NIL)))) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))))) = ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL)))))
T c= c==> c==> c~ c= f0 f1 c= * part cclosed_segment cCONS c, f0 f1 cNIL * part cclosed_segment cCONS c, f0 f1 cNIL c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL
- (~ (b = b)) |- ((~ (b = b)) /\ (b = b))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- |- (((!b. (!a. ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F))) ==> ((\b. (!a. ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F))) b)) = ((\b. (!a. ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F))) b))
T c= c==> ! ! c==> c~ c==> c/\ c~ copen_segment c, b1 b0 b1 c~ copen_segment c, b1 b0 b0 ! c= c/\ c\/ copen_segment c, b1 b0 b2 c\/ c= b2 b1 c= b2 b0 c~ copen_segment c, b1 b0 b2 c\/ c= b2 b1 c= b2 b0 cF * / ! c==> c~ c==> c/\ c~ copen_segment c, b1 b0 b1 c~ copen_segment c, b1 b0 b0 ! c= c/\ c\/ copen_segment c, b1 b0 b2 c\/ c= b2 b1 c= b2 b0 c~ copen_segment c, b1 b0 b2 c\/ c= b2 b1 c= b2 b0 cF f0 * / ! c==> c~ c==> c/\ c~ copen_segment c, b1 b0 b1 c~ copen_segment c, b1 b0 b0 ! c= c/\ c\/ copen_segment c, b1 b0 b2 c\/ c= b2 b1 c= b2 b0 c~ copen_segment c, b1 b0 b2 c\/ c= b2 b1 c= b2 b0 cF f0
- (~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) |- ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) /\ F)
T c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c/\ c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF
- (~ F), (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))), ((open_segment (a , b)) x) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ c/\ c\/ copen_segment c, f0 f1 f2 c\/ c= f2 f0 c= f2 f1 c~ copen_segment c, f0 f1 f2 c/\ c~ c= f2 f0 c~ c= f2 f1 c==> copen_segment c, f0 f1 f2 c/\ c~ cF cF
- ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) |- (((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) /\ ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F))
T c==> c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c/\ c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF
- |- (((((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F)) ==> (((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F))) = (((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F)))
T c= c==> c==> c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF
- (_586008 = _586010) |- ((_586009 = _586011) ==> ((_586008 , _586009) = (_586010 , _586011)))
T c==> c= f0 f1 c==> c= f2 f3 c= c, f0 f2 c, f1 f3
- (x = a), (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c\/ copen_segment c, f1 f2 f0 c\/ c= f0 f1 c= f0 f2 c~ copen_segment c, f1 f2 f0 c/\ c~ c= f0 f1 c~ c= f0 f2 c==> c~ cF cF
- (x = b) |- ((~ ((open_segment (a , b)) a)) = (~ ((open_segment (a , b)) a)))
T c==> c= f0 f1 c= c~ copen_segment c, f2 f1 f2 c~ copen_segment c, f2 f1 f2
- (x = b), (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) /\ ((~ (x = a)) /\ (~ (x = b)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c\/ copen_segment c, f2 f1 f0 c\/ c= f0 f2 c= f0 f1 c~ copen_segment c, f2 f1 f0 c/\ c~ c= f0 f2 c~ c= f0 f1 c==> c~ cF cF
- (~ ((open_segment (a , b)) a)), (x = a), ((open_segment (a , b)) x) |- ((~ ((open_segment (a , b)) a)) /\ ((open_segment (a , b)) a))
T c==> c~ copen_segment c, f0 f1 f0 c==> c= f2 f0 c==> copen_segment c, f0 f1 f2 c/\ c~ copen_segment c, f0 f1 f0 copen_segment c, f0 f1 f0
- ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) |- ((((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F) ==> ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F)) ==> ((~ (((~ ((open_segment (a , b)) a)) /\ (~ ((open_segment (a , b)) b))) ==> (!x. (((((open_segment (a , b)) x) \/ ((x = a) \/ (x = b))) /\ (~ ((open_segment (a , b)) x))) = ((x = a) \/ (x = b)))))) ==> F))
T c==> c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c==> c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF c==> c~ c==> c/\ c~ copen_segment c, f0 f1 f0 c~ copen_segment c, f0 f1 f1 ! c= c/\ c\/ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 c~ copen_segment c, f0 f1 b0 c\/ c= b0 f0 c= b0 f1 cF
- |- ((\e'. (((a = b) = g') ==> ((g' ==> (EMPTY = t')) ==> (((~ g') ==> ((closed_segment ((CONS (a , b)) NIL)) = e')) ==> ((((COND (a = b)) EMPTY) (closed_segment ((CONS (a , b)) NIL))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 f1 f2 c==> c==> f2 c= part cEMPTY f3 c==> c==> c~ f2 c= * part cclosed_segment cCONS c, f0 f1 cNIL b0 c= * * * part cCOND c= f0 f1 part cEMPTY * part cclosed_segment cCONS c, f0 f1 cNIL * * * part cCOND f2 f3 b0 f4
