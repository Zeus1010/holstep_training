N INTEGRABLE_SUBINTERVALS_IMP_REAL_MEASURABLE
C |- (!f. ((!a. (!b. ((real_integrable_on f) (closed_real_interval ((CONS (a , b)) NIL))))) ==> ((real_measurable_on f) UNIV)))
T c==> ! ! creal_integrable_on f0 * part cclosed_real_interval cCONS c, b0 b1 cNIL creal_measurable_on f0 part cUNIV
D TRUTH
A |- T
T cT
D FORALL_LIFT
A |- ((!x. (P x)) = (!x. (P (lift x))))
T c= ! * f0 b0 ! * f0 clift b0
D IMAGE_LIFT_UNIV
A |- (((IMAGE lift) UNIV) = UNIV)
T c= * * part cIMAGE part clift part cUNIV part cUNIV
D INTEGRABLE_SUBINTERVALS_IMP_MEASURABLE
A |- (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV)))
T c==> ! ! cintegrable_on f0 * part cclosed_interval cCONS c, b0 b1 cNIL cmeasurable_on f0 part cUNIV
D IMAGE_LIFT_REAL_INTERVAL
A |- ((((IMAGE lift) (closed_real_interval ((CONS (a , b)) NIL))) = (closed_interval ((CONS ((lift a) , (lift b))) NIL))) /\ (((IMAGE lift) (open_real_interval (a , b))) = (open_interval ((lift a) , (lift b)))))
T c/\ c= * * part cIMAGE part clift * part cclosed_real_interval cCONS c, f0 f1 cNIL * part cclosed_interval cCONS c, clift f0 clift f1 cNIL c= * * part cIMAGE part clift * part copen_real_interval c, f0 f1 * part copen_interval c, clift f0 clift f1
D REAL_INTEGRABLE_ON
A |- (((real_integrable_on f) s) = ((integrable_on (lift o (f o drop))) ((IMAGE lift) s)))
T c= creal_integrable_on f0 f1 cintegrable_on * * part co part clift * * part co f0 part cdrop * * part cIMAGE part clift f1
D real_measurable_on
A |- (!f. (!s. (((real_measurable_on f) s) = ((measurable_on (lift o (f o drop))) ((IMAGE lift) s)))))
T c= creal_measurable_on f0 f1 cmeasurable_on * * part co part clift * * part co f0 part cdrop * * part cIMAGE part clift f1
+ |- ((\s. (((real_measurable_on f) s) = ((measurable_on (lift o (f o drop))) ((IMAGE lift) s)))) s)
T * / c= creal_measurable_on f0 b0 cmeasurable_on * * part co part clift * * part co f0 part cdrop * * part cIMAGE part clift b0 f1
+ (!a. (!b. ((integrable_on (lift o (f o drop))) (closed_interval ((CONS ((lift a) , (lift b))) NIL))))) |- (!b. ((integrable_on (lift o (f o drop))) (closed_interval ((CONS ((lift a) , (lift b))) NIL))))
T c==> ! ! cintegrable_on * * part co part clift * * part co f0 part cdrop * part cclosed_interval cCONS c, clift b0 clift b1 cNIL ! cintegrable_on * * part co part clift * * part co f0 part cdrop * part cclosed_interval cCONS c, clift f1 clift b0 cNIL
+ |- ((\f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) f)
T * / c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV f0
- |- (((IMAGE lift) (open_real_interval (a , b))) = (open_interval ((lift a) , (lift b))))
T c= * * part cIMAGE part clift * part copen_real_interval c, f0 f1 * part copen_interval c, clift f0 clift f1
- (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) |- ((!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) /\ (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))))
T c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV c/\ ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV
- (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))), (!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) |- ((measurable_on f) UNIV)
T c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV c==> ! ! cintegrable_on f0 * part cclosed_interval cCONS c, b0 b1 cNIL cmeasurable_on f0 part cUNIV
+ |- ((!f. ((!a. (!b. ((integrable_on (lift o (f o drop))) ((IMAGE lift) (closed_real_interval ((CONS (a , b)) NIL)))))) ==> ((measurable_on (lift o (f o drop))) UNIV))) = (!f. ((!a. (!b. ((real_integrable_on f) (closed_real_interval ((CONS (a , b)) NIL))))) ==> ((real_measurable_on f) UNIV))))
T c= ! c==> ! ! cintegrable_on * * part co part clift * * part co b0 part cdrop * * part cIMAGE part clift * part cclosed_real_interval cCONS c, b1 b2 cNIL cmeasurable_on * * part co part clift * * part co b0 part cdrop part cUNIV ! c==> ! ! creal_integrable_on b0 * part cclosed_real_interval cCONS c, b1 b2 cNIL creal_measurable_on b0 part cUNIV
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) |- ((\f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) f)
T c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV * / c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV f0
+ |- (((!f. (!s. (((real_measurable_on f) s) = ((measurable_on (lift o (f o drop))) ((IMAGE lift) s))))) ==> ((\f. (!s. (((real_measurable_on f) s) = ((measurable_on (lift o (f o drop))) ((IMAGE lift) s))))) f)) = ((\f. (!s. (((real_measurable_on f) s) = ((measurable_on (lift o (f o drop))) ((IMAGE lift) s))))) f))
T c= c==> ! ! c= creal_measurable_on b0 b1 cmeasurable_on * * part co part clift * * part co b0 part cdrop * * part cIMAGE part clift b1 * / ! c= creal_measurable_on b0 b1 cmeasurable_on * * part co part clift * * part co b0 part cdrop * * part cIMAGE part clift b1 f0 * / ! c= creal_measurable_on b0 b1 cmeasurable_on * * part co part clift * * part co b0 part cdrop * * part cIMAGE part clift b1 f0
+ |- ((!f. ((!a. (!b. ((integrable_on (lift o (f o drop))) (closed_interval ((CONS ((lift a) , (lift b))) NIL))))) ==> ((measurable_on (lift o (f o drop))) UNIV))) = (!f. ((!a. (!b. ((integrable_on (lift o (f o drop))) ((IMAGE lift) (closed_real_interval ((CONS (a , b)) NIL)))))) ==> ((measurable_on (lift o (f o drop))) UNIV))))
T c= ! c==> ! ! cintegrable_on * * part co part clift * * part co b0 part cdrop * part cclosed_interval cCONS c, clift b1 clift b2 cNIL cmeasurable_on * * part co part clift * * part co b0 part cdrop part cUNIV ! c==> ! ! cintegrable_on * * part co part clift * * part co b0 part cdrop * * part cIMAGE part clift * part cclosed_real_interval cCONS c, b1 b2 cNIL cmeasurable_on * * part co part clift * * part co b0 part cdrop part cUNIV
+ (!a. (!b. ((integrable_on (lift o (f o drop))) (closed_interval ((CONS ((lift a) , (lift b))) NIL))))) |- (((!a. (!b. ((integrable_on (lift o (f o drop))) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on (lift o (f o drop))) UNIV)) = ((measurable_on (lift o (f o drop))) UNIV))
T c==> ! ! cintegrable_on * * part co part clift * * part co f0 part cdrop * part cclosed_interval cCONS c, clift b0 clift b1 cNIL c= c==> ! ! cintegrable_on * * part co part clift * * part co f0 part cdrop * part cclosed_interval cCONS c, b0 b1 cNIL cmeasurable_on * * part co part clift * * part co f0 part cdrop part cUNIV cmeasurable_on * * part co part clift * * part co f0 part cdrop part cUNIV
+ |- (((!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) ==> ((\f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) f)) = ((\f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) f))
T c= c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV * / c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV f0 * / c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV f0
- |- (((!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) ==> (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV)))) = (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))))
T c= c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV
+ |- ((!b. ((integrable_on (lift o (f o drop))) (closed_interval ((CONS ((lift a) , b)) NIL)))) = (!b. ((integrable_on (lift o (f o drop))) (closed_interval ((CONS ((lift a) , (lift b))) NIL)))))
T c= ! cintegrable_on * * part co part clift * * part co f0 part cdrop * part cclosed_interval cCONS c, clift f1 b0 cNIL ! cintegrable_on * * part co part clift * * part co f0 part cdrop * part cclosed_interval cCONS c, clift f1 clift b0 cNIL
+ (!a. (!b. ((integrable_on (lift o (f o drop))) (closed_interval ((CONS ((lift a) , (lift b))) NIL))))) |- (((integrable_on (lift o (f o drop))) (closed_interval ((CONS ((lift a) , (lift b))) NIL))) = T)
T c==> ! ! cintegrable_on * * part co part clift * * part co f0 part cdrop * part cclosed_interval cCONS c, clift b0 clift b1 cNIL c= cintegrable_on * * part co part clift * * part co f0 part cdrop * part cclosed_interval cCONS c, clift f1 clift f2 cNIL cT
- (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))), (!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) |- ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) /\ ((measurable_on f) UNIV))
T c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV c==> ! ! cintegrable_on f0 * part cclosed_interval cCONS c, b0 b1 cNIL c/\ ! ! cintegrable_on f0 * part cclosed_interval cCONS c, b0 b1 cNIL cmeasurable_on f0 part cUNIV
+ (!a. (!b. ((integrable_on (lift o (f o drop))) (closed_interval ((CONS ((lift a) , (lift b))) NIL))))) |- (T = (!a. (!b. ((integrable_on (lift o (f o drop))) (closed_interval ((CONS (a , b)) NIL))))))
T c==> ! ! cintegrable_on * * part co part clift * * part co f0 part cdrop * part cclosed_interval cCONS c, clift b0 clift b1 cNIL c= cT ! ! cintegrable_on * * part co part clift * * part co f0 part cdrop * part cclosed_interval cCONS c, b0 b1 cNIL
- (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) |- (((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV)) = T)
T c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV c= c==> ! ! cintegrable_on f0 * part cclosed_interval cCONS c, b0 b1 cNIL cmeasurable_on f0 part cUNIV cT
- |- ((!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) ==> (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))))
T c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV
- (!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) |- ((!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) ==> ((measurable_on f) UNIV))
T c==> ! ! cintegrable_on f0 * part cclosed_interval cCONS c, b0 b1 cNIL c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV cmeasurable_on f0 part cUNIV
- (!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))), (!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) |- ((!f. ((!a. (!b. ((integrable_on f) (closed_interval ((CONS (a , b)) NIL))))) ==> ((measurable_on f) UNIV))) /\ ((measurable_on f) UNIV))
T c==> ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV c==> ! ! cintegrable_on f0 * part cclosed_interval cCONS c, b0 b1 cNIL c/\ ! c==> ! ! cintegrable_on b0 * part cclosed_interval cCONS c, b1 b2 cNIL cmeasurable_on b0 part cUNIV cmeasurable_on f0 part cUNIV
