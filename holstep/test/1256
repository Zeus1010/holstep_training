N Audit_formal_proof.chk_basic_definitions
C |- ((((real_le (real_of_num (NUMERAL _0))) x) ==> ((real_abs x) = x)) /\ ((((real_lt x) (real_of_num (NUMERAL _0))) ==> ((real_abs x) = (real_neg x))) /\ ((((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))) /\ ((((real_le (real_of_num (NUMERAL _0))) x) ==> (((real_le (real_of_num (NUMERAL _0))) (sqrt x)) /\ (((real_pow (sqrt x)) (NUMERAL (BIT0 (BIT1 _0)))) = x))) /\ ((((sum ((NUMERAL _0) .. (NUMERAL _0))) f) = (f (NUMERAL _0))) /\ ((((sum ((NUMERAL _0) .. (SUC n))) f) = ((real_add ((sum ((NUMERAL _0) .. n)) f)) (f (SUC n)))) /\ (((real_le (real_abs ((real_sub ((real_div pi) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ((sum ((NUMERAL _0) .. n)) (\i. ((real_div ((real_pow (real_neg (real_of_num (NUMERAL (BIT1 _0))))) i)) (real_of_num (((NUMERAL (BIT0 (BIT1 _0))) * i) + (NUMERAL (BIT1 _0)))))))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (((NUMERAL (BIT0 (BIT1 _0))) * n) + (NUMERAL (BIT1 (BIT1 _0))))))) /\ (((A HAS_SIZE n) = ((FINITE A) /\ ((CARD A) = n))) /\ ((EMPTY HAS_SIZE (NUMERAL _0)) /\ (((a INSERT EMPTY) HAS_SIZE (NUMERAL (BIT1 _0))) /\ ((((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p)))) /\ (((triple_of_real3 o real3_of_triple) = (\w. w)) /\ (((real3_of_triple o triple_of_real3) = (\v. v)) /\ (((vec (NUMERAL _0)) = (real3_of_triple ((real_of_num (NUMERAL _0)) , ((real_of_num (NUMERAL _0)) , (real_of_num (NUMERAL _0)))))) /\ (((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0)))))))) /\ ((packing V) = (!u. (!v. (((u IN V) /\ ((v IN V) /\ ((real_lt (distance (u , v))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (u = v)))))))))))))))))))))
T c/\ c==> creal_le creal_of_num cNUMERAL c_0 f0 c= creal_abs f0 f0 c/\ c==> creal_lt f0 creal_of_num cNUMERAL c_0 c= creal_abs f0 creal_neg f0 c/\ c= creal_pow f0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_pow f0 cSUC f1 creal_mul f0 creal_pow f0 f1 c/\ c==> creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 csqrt f0 c= creal_pow csqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= csum * * part c.. cNUMERAL c_0 cNUMERAL c_0 f2 * f2 cNUMERAL c_0 c/\ c= csum * * part c.. cNUMERAL c_0 cSUC f1 f2 creal_add csum * * part c.. cNUMERAL c_0 f1 f2 * f2 cSUC f1 c/\ creal_le creal_abs creal_sub creal_div cpi creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 csum * * part c.. cNUMERAL c_0 f1 / creal_div creal_pow creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num c+ c* cNUMERAL cBIT0 cBIT1 c_0 b0 cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num c+ c* cNUMERAL cBIT0 cBIT1 c_0 f1 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cHAS_SIZE f3 f1 c/\ cFINITE f3 c= cCARD f3 f1 c/\ cHAS_SIZE part cEMPTY cNUMERAL c_0 c/\ cHAS_SIZE * * part cINSERT f4 part cEMPTY cNUMERAL cBIT1 c_0 c/\ c==> c/\ cHAS_SIZE f3 f5 c/\ cHAS_SIZE f6 f1 cHAS_SIZE * * part cINTER f3 f6 f7 cHAS_SIZE * * part cUNION f3 f6 c+ f5 c- f1 f7 c/\ c= * * part co part ctriple_of_real3 part creal3_of_triple / b0 c/\ c= * * part co part creal3_of_triple part ctriple_of_real3 / b0 c/\ c= cvec cNUMERAL c_0 creal3_of_triple c, creal_of_num cNUMERAL c_0 c, creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c= cdistance c, creal3_of_triple c, f0 c, f8 f9 creal3_of_triple c, f10 c, f11 f12 csqrt creal_add creal_pow creal_sub f0 f10 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub f8 f11 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub f9 f12 cNUMERAL cBIT0 cBIT1 c_0 c= cpacking f13 ! ! c==> c/\ cIN b0 f13 c/\ cIN b1 f13 creal_lt cdistance c, b0 b1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 b1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D FUN_EQ_THM
A |- (!f. (!g. ((f = g) = (!x. ((f x) = (g x))))))
T c= c= f0 f1 ! c= * f0 b0 * f1 b0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_IMP
A |- (!t1. (!t2. ((~ (t1 ==> t2)) = (t1 /\ (~ t2)))))
T c= c~ c==> f0 f1 c/\ f0 c~ f1
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D Real_ext.pow
A |- ((((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n)))))
T c/\ c= creal_pow f0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! c= creal_pow f0 cSUC b0 creal_mul f0 creal_pow f0 b0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D DISJOINT
A |- (!s. (!t. (((DISJOINT s) t) = ((s INTER t) = EMPTY))))
T c= cDISJOINT f0 f1 c= * * part cINTER f0 f1 part cEMPTY
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_DIFF
A |- (!s. (!t. (!x. ((x IN (s DIFF t)) = ((x IN s) /\ (~ (x IN t)))))))
T c= cIN f0 * * part cDIFF f1 f2 c/\ cIN f0 f1 c~ cIN f0 f2
D IN_SING
A |- (!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y))))
T c= cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
D HAS_SIZE
A |- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))))
T c= cHAS_SIZE f0 f1 c/\ cFINITE f0 c= cCARD f0 f1
D HAS_SIZE_0
A |- (!s. ((s HAS_SIZE (NUMERAL _0)) = (s = EMPTY)))
T c= cHAS_SIZE f0 cNUMERAL c_0 c= f0 part cEMPTY
D HAS_SIZE_UNION
A |- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))))))
T c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 f3 cDISJOINT f0 f2 cHAS_SIZE * * part cUNION f0 f2 c+ f1 f3
D HAS_SIZE_DIFF
A |- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ (t SUBSET s))) ==> ((s DIFF t) HAS_SIZE (m - n)))))))
T c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 f3 cSUBSET f2 f0 cHAS_SIZE * * part cDIFF f0 f2 c- f1 f3
D SQRT_WORKS
A |- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> (((real_le (real_of_num (NUMERAL _0))) (sqrt x)) /\ (((real_pow (sqrt x)) (NUMERAL (BIT0 (BIT1 _0)))) = x))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 csqrt f0 c= creal_pow csqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0
D HAS_SIZE_1_EXISTS
A |- (!s. ((s HAS_SIZE (NUMERAL (BIT1 _0))) = (?!x. (x IN s))))
T c= cHAS_SIZE f0 cNUMERAL cBIT1 c_0 c?! / cIN b0 f0
D Sphere.packing_lt
A |- ((packing V) = (!u. (!v. (((u IN V) /\ ((v IN V) /\ ((real_lt (distance (u , v))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (u = v)))))
T c= cpacking f0 ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 creal_lt cdistance c, b0 b1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b0 b1
D Kepler_spec.BIJ_REAL3_TRIPLE
A |- (((triple_of_real3 o real3_of_triple) = I) /\ ((real3_of_triple o triple_of_real3) = I))
T c/\ c= * * part co part ctriple_of_real3 part creal3_of_triple part cI c= * * part co part creal3_of_triple part ctriple_of_real3 part cI
D Kepler_spec.dist_spec
A |- (!x. (!y. (!z. (!x'. (!y'. (!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0))))))))))))))
T c= cdistance c, creal3_of_triple c, f0 c, f1 f2 creal3_of_triple c, f3 c, f4 f5 csqrt creal_add creal_pow creal_sub f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub f1 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub f2 f5 cNUMERAL cBIT0 cBIT1 c_0
D Kepler_spec.ZERO_SPEC
A |- ((vec (NUMERAL _0)) = (real3_of_triple ((real_of_num (NUMERAL _0)) , ((real_of_num (NUMERAL _0)) , (real_of_num (NUMERAL _0))))))
T c= cvec cNUMERAL c_0 creal3_of_triple c, creal_of_num cNUMERAL c_0 c, creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D Kepler_spec.abs_spec
A |- (!x. ((((real_le (real_of_num (NUMERAL _0))) x) ==> ((real_abs x) = x)) /\ (((real_lt x) (real_of_num (NUMERAL _0))) ==> ((real_abs x) = (real_neg x)))))
T c/\ c==> creal_le creal_of_num cNUMERAL c_0 f0 c= creal_abs f0 f0 c==> creal_lt f0 creal_of_num cNUMERAL c_0 c= creal_abs f0 creal_neg f0
D Kepler_spec.sum_spec
A |- (!f. (!n. ((((sum ((NUMERAL _0) .. (NUMERAL _0))) f) = (f (NUMERAL _0))) /\ (((sum ((NUMERAL _0) .. (SUC n))) f) = ((real_add ((sum ((NUMERAL _0) .. n)) f)) (f (SUC n)))))))
T c/\ c= csum * * part c.. cNUMERAL c_0 cNUMERAL c_0 f0 * f0 cNUMERAL c_0 c= csum * * part c.. cNUMERAL c_0 cSUC f1 f0 creal_add csum * * part c.. cNUMERAL c_0 f1 f0 * f0 cSUC f1
D Kepler_spec.atn_1_series
A |- (!n. ((real_le (real_abs ((real_sub ((real_div pi) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ((sum ((NUMERAL _0) .. n)) (\i. ((real_div ((real_pow (real_neg (real_of_num (NUMERAL (BIT1 _0))))) i)) (real_of_num (((NUMERAL (BIT0 (BIT1 _0))) * i) + (NUMERAL (BIT1 _0)))))))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (((NUMERAL (BIT0 (BIT1 _0))) * n) + (NUMERAL (BIT1 (BIT1 _0))))))))
T creal_le creal_abs creal_sub creal_div cpi creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 csum * * part c.. cNUMERAL c_0 f0 / creal_div creal_pow creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num c+ c* cNUMERAL cBIT0 cBIT1 c_0 b0 cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num c+ c* cNUMERAL cBIT0 cBIT1 c_0 f0 cNUMERAL cBIT1 cBIT1 c_0
+ ((B DIFF (A INTER B)) = C) |- (((DISJOINT A) C) = ((DISJOINT A) (B DIFF (A INTER B))))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c= cDISJOINT f1 f2 cDISJOINT f1 * * part cDIFF f0 * * part cINTER f1 f0
+ |- (((!x. ((I x) = x)) ==> ((\x. ((I x) = x)) x)) = ((\x. ((I x) = x)) x))
T c= c==> ! c= cI b0 b0 * / c= cI b0 b0 f0 * / c= cI b0 b0 f0
- ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) |- ((~ (B x)) ==> (B x))
T c==> c/\ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 c==> c~ * f2 f1 * f2 f1
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
- ((~ (?!x. (x = a))) ==> F), (((~ (?!x. (x = a))) ==> F) ==> ((~ (?!x. (x = a))) ==> F)) |- (((~ (?!x. (x = a))) ==> F) /\ ((~ (?!x. (x = a))) ==> F))
T c==> c==> c~ c?! / c= b0 f0 cF c==> c==> c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF c/\ c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF
+ ((\C. ((B DIFF (A INTER B)) = C)) C) |- (((\C. ((B DIFF (A INTER B)) = C)) C) /\ (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p)))))
T c==> * / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 f2 c/\ * / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 f2 c==> c/\ cHAS_SIZE f1 f3 c/\ cHAS_SIZE f0 f4 cHAS_SIZE * * part cINTER f1 f0 f5 cHAS_SIZE * * part cUNION f1 f0 c+ f3 c- f4 f5
- (A x), ((A x) /\ (B x)), (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) |- ((A x) /\ F)
T c==> * f0 f1 c==> c/\ * f0 f1 * f2 f1 c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c/\ * f0 f1 cF
+ |- ((\s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) s)
T * / ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 f0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) |- ((~ (A x)) \/ (~ (B x)))
T c==> c/\ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 c\/ c~ * f0 f1 c~ * f2 f1
- ((A x) /\ (B x)), (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))), ((B x) ==> F) |- F
T c==> c/\ * f0 f1 * f2 f1 c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c==> c==> * f2 f1 cF cF
- |- ((?x'. ((x = a) /\ ((x' = a) /\ (~ (x' = x))))) = ((x = a) /\ (?x'. ((x' = a) /\ (~ (x' = x))))))
T c= c? / c/\ c= f0 f1 c/\ c= b0 f1 c~ c= b0 f0 c/\ c= f0 f1 c? / c/\ c= b0 f1 c~ c= b0 f0
- ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F), (((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) |- (((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) /\ ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))
T c==> c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c==> c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c/\ c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
- |- ((((~ (?!x. (x = a))) ==> F) ==> ((~ (?!x. (x = a))) ==> F)) = ((~ (?!x. (x = a))) ==> F))
T c= c==> c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF
- |- ((!A. (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) = T)
T c= ! ! c~ c/\ * b0 b1 c/\ * f0 b1 c~ c/\ * b0 b1 * f0 b1 cT
+ |- ((\x. ((((real_le (real_of_num (NUMERAL _0))) x) ==> ((real_abs x) = x)) /\ (((real_lt x) (real_of_num (NUMERAL _0))) ==> ((real_abs x) = (real_neg x))))) x)
T * / c/\ c==> creal_le creal_of_num cNUMERAL c_0 b0 c= creal_abs b0 b0 c==> creal_lt b0 creal_of_num cNUMERAL c_0 c= creal_abs b0 creal_neg b0 f0
+ ((B DIFF (A INTER B)) = C) |- (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION C) HAS_SIZE (m + (n - p))))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c==> c/\ cHAS_SIZE f1 f3 c/\ cHAS_SIZE f0 f4 cHAS_SIZE * * part cINTER f1 f0 f5 cHAS_SIZE * * part cUNION f1 f2 c+ f3 c- f4 f5
+ (!x. (~ (x = a))) |- ((\x. (~ (x = a))) _11404624)
T c==> ! c~ c= b0 f0 * / c~ c= b0 f0 f1
+ |- (((real_le (real_of_num (NUMERAL _0))) x) ==> ((real_abs x) = x))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= creal_abs f0 f0
- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) |- ((!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))) = T)
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 c= ! c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 b0 cDISJOINT f0 f2 cHAS_SIZE * * part cUNION f0 f2 c+ f1 b0 cT
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (a = a)) ==> (a = a))
T c==> c~ c= f0 f0 c= f0 f0
- |- (((B DIFF (A INTER B)) = C) ==> (?C. ((B DIFF (A INTER B)) = C)))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b0
+ |- (((!y. ((x IN (y INSERT EMPTY)) = (x = y))) ==> ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)) = ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y))
T c= c==> ! c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
+ |- ((DISJOINT A) (B DIFF (A INTER B)))
T cDISJOINT f0 * * part cDIFF f1 * * part cINTER f0 f1
- (~ (B x)), ((B x) /\ ((~ (A x)) \/ (~ (B x)))) |- F
T c==> c~ * f0 f1 c==> c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 cF
+ |- (((!y. (!z. (!x'. (!y'. (!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0))))))))))))) ==> ((\y. (!z. (!x'. (!y'. (!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0))))))))))))) y)) = ((\y. (!z. (!x'. (!y'. (!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0))))))))))))) y))
T c= c==> ! ! ! ! ! c= cdistance c, creal3_of_triple c, f0 c, b0 b1 creal3_of_triple c, b2 c, b3 b4 csqrt creal_add creal_pow creal_sub f0 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub b0 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub b1 b4 cNUMERAL cBIT0 cBIT1 c_0 * / ! ! ! ! c= cdistance c, creal3_of_triple c, f0 c, b0 b1 creal3_of_triple c, b2 c, b3 b4 csqrt creal_add creal_pow creal_sub f0 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub b0 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub b1 b4 cNUMERAL cBIT0 cBIT1 c_0 f1 * / ! ! ! ! c= cdistance c, creal3_of_triple c, f0 c, b0 b1 creal3_of_triple c, b2 c, b3 b4 csqrt creal_add creal_pow creal_sub f0 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub b0 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub b1 b4 cNUMERAL cBIT0 cBIT1 c_0 f1
+ |- (((!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n)))) ==> ((\n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n)))) n)) = ((\n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n)))) n))
T c= c==> ! c= creal_pow f0 cSUC b0 creal_mul f0 creal_pow f0 b0 * / c= creal_pow f0 cSUC b0 creal_mul f0 creal_pow f0 b0 f1 * / c= creal_pow f0 cSUC b0 creal_mul f0 creal_pow f0 b0 f1
+ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))) |- ((a = a) ==> F)
T c==> c/\ c= f0 f1 c/\ c= f2 f1 c~ c= f2 f0 c==> c= f1 f1 cF
- ((x = a) /\ ((x' = a) /\ (~ (x' = x)))) |- (F = F)
T c==> c/\ c= f0 f1 c/\ c= f2 f1 c~ c= f2 f0 c= cF cF
+ ((\x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))))) x') |- ((((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x))))) ==> F) = F)
T c==> * / c\/ ! c~ c= b1 f0 c/\ c= f1 f0 c/\ c= b0 f0 c~ c= b0 f1 f2 c= c==> c\/ ! c~ c= b0 f0 c/\ c= f1 f0 c/\ c= f2 f0 c~ c= f2 f1 cF cF
+ ((A INTER B) HAS_SIZE p) |- (((A INTER B) HAS_SIZE p) = T)
T c==> cHAS_SIZE * * part cINTER f0 f1 f2 c= cHAS_SIZE * * part cINTER f0 f1 f2 cT
- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))), ((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) |- ((s UNION t) HAS_SIZE (m + n))
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 f3 cDISJOINT f0 f2 cHAS_SIZE * * part cUNION f0 f2 c+ f1 f3
+ ((\x. (?x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x))))))) x) |- (?x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x))))))
T c==> * / c? / c\/ ! c~ c= b2 f0 c/\ c= b0 f0 c/\ c= b1 f0 c~ c= b1 b0 f1 c? / c\/ ! c~ c= b1 f0 c/\ c= f1 f0 c/\ c= b0 f0 c~ c= b0 f1
+ |- ((((real_lt x) (real_of_num (NUMERAL _0))) ==> ((real_abs x) = (real_neg x))) = T)
T c= c==> creal_lt f0 creal_of_num cNUMERAL c_0 c= creal_abs f0 creal_neg f0 cT
- |- ((!B. (!A. (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x))))))))) = (!B. (!A. ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))))
T c= ! ! ! c= c\/ * b1 b2 * b0 b2 c\/ * b1 b2 c/\ * b0 b2 c~ c/\ * b1 b2 * b0 b2 ! ! c==> c~ ! c= c\/ * b1 b2 * b0 b2 c\/ * b1 b2 c/\ * b0 b2 c~ c/\ * b1 b2 * b0 b2 cF
+ |- ((\m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))) m)
T * / ! c==> c/\ cHAS_SIZE f0 b0 c/\ cHAS_SIZE f1 b1 cDISJOINT f0 f1 cHAS_SIZE * * part cUNION f0 f1 c+ b0 b1 f2
- |- (((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))
T c==> c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
- ((B x) /\ ((~ (A x)) \/ (~ (B x)))), (((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))) |- ((~ (B x)) ==> F)
T c==> c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c/\ c/\ c~ * f2 f1 c~ * f0 f1 c\/ * f2 f1 c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c~ * f0 f1 cF
- (~ F), (~ (B x)), ((B x) /\ ((~ (A x)) \/ (~ (B x)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c/\ c~ cF cF
- |- (((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) = (!x. (((A x) /\ (B x)) ==> (B x))))
T c= c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF ! c==> c/\ * f0 b0 * f1 b0 * f1 b0
+ |- (((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s)) = ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s))
T c= c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0 * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0
- ((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) |- ((!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) ==> ((s UNION t) HAS_SIZE (m + n)))
T c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 f3 cDISJOINT f0 f2 c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 cHAS_SIZE * * part cUNION f0 f2 c+ f1 f3
+ ((B DIFF (A INTER B)) = C) |- (((A UNION B) = (A UNION (B DIFF (A INTER B)))) = ((A UNION B) = (A UNION C)))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c= c= * * part cUNION f1 f0 * * part cUNION f1 * * part cDIFF f0 * * part cINTER f1 f0 c= * * part cUNION f1 f0 * * part cUNION f1 f2
- (~ (B x)), ((A x) /\ (B x)) |- F
T c==> c~ * f0 f1 c==> c/\ * f2 f1 * f0 f1 cF
+ (!x. (~ (x = a))) |- (~ (_11404624 = a))
T c==> ! c~ c= b0 f0 c~ c= f1 f0
- ((A x) /\ (B x)), (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) |- ((B x) ==> F)
T c==> c/\ * f0 f1 * f2 f1 c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c==> * f2 f1 cF
+ |- (((~ (?!x. (x = a))) ==> F) = (?!x. (x = a)))
T c= c==> c~ c?! / c= b0 f0 cF c?! / c= b0 f0
+ (((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))) |- (~ (B x))
T c==> c/\ c/\ c~ * f0 f1 c~ * f2 f1 c\/ * f0 f1 c/\ * f2 f1 c\/ c~ * f0 f1 c~ * f2 f1 c~ * f2 f1
+ ((B DIFF (A INTER B)) = C) |- ((DISJOINT A) C)
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 cDISJOINT f1 f2
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (~ (B x)), ((A x) /\ (B x)) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ * f2 f1 * f0 f1 c==> c~ cF cF
+ (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))), ((B x) ==> F) |- F
T c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c==> c==> * f2 f1 cF cF
+ ((B DIFF (A INTER B)) = C), (A HAS_SIZE m), (B HAS_SIZE n), ((A INTER B) HAS_SIZE p) |- ((A UNION C) HAS_SIZE (m + (n - p)))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c==> cHAS_SIZE f1 f3 c==> cHAS_SIZE f0 f4 c==> cHAS_SIZE * * part cINTER f1 f0 f5 cHAS_SIZE * * part cUNION f1 f2 c+ f3 c- f4 f5
- (~ F), (~ (A x)), ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 c/\ c~ cF cF
- (~ (B x)), ((B x) /\ ((~ (A x)) \/ (~ (B x)))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c~ cF cF
- |- ((?!x. (x = a)) = T)
T c= c?! / c= b0 f0 cT
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ ((B DIFF (A INTER B)) = C), (A HAS_SIZE m), (C HAS_SIZE (n - p)) |- ((C HAS_SIZE (n - p)) /\ ((A UNION C) HAS_SIZE (m + (n - p))))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c==> cHAS_SIZE f1 f3 c==> cHAS_SIZE f2 c- f4 f5 c/\ cHAS_SIZE f2 c- f4 f5 cHAS_SIZE * * part cUNION f1 f2 c+ f3 c- f4 f5
- ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F), (((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F)) |- (((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) /\ ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F))
T c==> c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c==> c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c/\ c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF
+ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) |- (A x)
T c==> c/\ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 * f0 f1
+ ((B x) /\ ((~ (A x)) \/ (~ (B x)))), (((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))) |- F
T c==> c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c/\ c/\ c~ * f2 f1 c~ * f0 f1 c\/ * f2 f1 c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 cF
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((\t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))))) t)
T * / ! ! c==> c/\ cHAS_SIZE f0 b1 c/\ cHAS_SIZE b0 b2 cDISJOINT f0 b0 cHAS_SIZE * * part cUNION f0 b0 c+ b1 b2 f1
+ |- ((?!x. (x = a)) /\ (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p)))))
T c/\ c?! / c= b0 f0 c==> c/\ cHAS_SIZE f1 f2 c/\ cHAS_SIZE f3 f4 cHAS_SIZE * * part cINTER f1 f3 f5 cHAS_SIZE * * part cUNION f1 f3 c+ f2 c- f4 f5
+ (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))), (((A x) /\ (B x)) ==> F) |- F
T c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c==> c==> c/\ * f0 f1 * f2 f1 cF cF
+ |- (((!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> (((real_le (real_of_num (NUMERAL _0))) (sqrt x)) /\ (((real_pow (sqrt x)) (NUMERAL (BIT0 (BIT1 _0)))) = x)))) ==> ((\x. (((real_le (real_of_num (NUMERAL _0))) x) ==> (((real_le (real_of_num (NUMERAL _0))) (sqrt x)) /\ (((real_pow (sqrt x)) (NUMERAL (BIT0 (BIT1 _0)))) = x)))) x)) = ((\x. (((real_le (real_of_num (NUMERAL _0))) x) ==> (((real_le (real_of_num (NUMERAL _0))) (sqrt x)) /\ (((real_pow (sqrt x)) (NUMERAL (BIT0 (BIT1 _0)))) = x)))) x))
T c= c==> ! c==> creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 csqrt b0 c= creal_pow csqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 * / c==> creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 csqrt b0 c= creal_pow csqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 f0 * / c==> creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 csqrt b0 c= creal_pow csqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 f0
- (~ F), (A x), (((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> * f0 f1 c==> c/\ c/\ c~ * f0 f1 c~ * f2 f1 c\/ * f0 f1 c/\ * f2 f1 c\/ c~ * f0 f1 c~ * f2 f1 c/\ c~ cF cF
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) |- ((\m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))) m)
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 * / ! c==> c/\ cHAS_SIZE f0 b0 c/\ cHAS_SIZE f1 b1 cDISJOINT f0 f1 cHAS_SIZE * * part cUNION f0 f1 c+ b0 b1 f2
+ (!x. (~ (x = a))) |- ((_11404624 = a) ==> F)
T c==> ! c~ c= b0 f0 c==> c= f1 f0 cF
- (A x), (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) |- ((~ F) ==> F)
T c==> * f0 f1 c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c==> c~ cF cF
+ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))), ((~ (A x)) ==> F), ((~ (B x)) ==> F) |- F
T c==> c/\ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 c==> c==> c~ * f0 f1 cF c==> c==> c~ * f2 f1 cF cF
+ |- ((((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))) = T)
T c= c= c\/ * f0 f1 * f2 f1 c\/ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 cT
- ((A x) /\ (B x)), (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) |- ((~ F) ==> F)
T c==> c/\ * f0 f1 * f2 f1 c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c==> c~ cF cF
- ((~ (?!x. (x = a))) ==> F) |- ((((~ (?!x. (x = a))) ==> F) ==> ((~ (?!x. (x = a))) ==> F)) ==> ((~ (?!x. (x = a))) ==> F))
T c==> c==> c~ c?! / c= b0 f0 cF c==> c==> c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF
+ |- ((\t. (!m. (!n. (((B HAS_SIZE m) /\ ((t HAS_SIZE n) /\ (t SUBSET B))) ==> ((B DIFF t) HAS_SIZE (m - n)))))) (A INTER B))
T * / ! ! c==> c/\ cHAS_SIZE f0 b1 c/\ cHAS_SIZE b0 b2 cSUBSET b0 f0 cHAS_SIZE * * part cDIFF f0 b0 c- b1 b2 * * part cINTER f1 f0
+ (!x. (~ (x = a))) |- ((!x. (~ (x = a))) /\ F)
T c==> ! c~ c= b0 f0 c/\ ! c~ c= b0 f0 cF
+ (~ (?!x. (x = a))) |- (((?x. (?x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x))))))) ==> F) = F)
T c==> c~ c?! / c= b0 f0 c= c==> c? / c? / c\/ ! c~ c= b2 f0 c/\ c= b0 f0 c/\ c= b1 f0 c~ c= b1 b0 cF cF
+ |- (((!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))) ==> ((\n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))) n)) = ((\n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))) n))
T c= c==> ! c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 b0 cDISJOINT f0 f2 cHAS_SIZE * * part cUNION f0 f2 c+ f1 b0 * / c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 b0 cDISJOINT f0 f2 cHAS_SIZE * * part cUNION f0 f2 c+ f1 b0 f3 * / c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 b0 cDISJOINT f0 f2 cHAS_SIZE * * part cUNION f0 f2 c+ f1 b0 f3
- ((A x) /\ (B x)) |- ((~ (A x)) ==> (A x))
T c==> c/\ * f0 f1 * f2 f1 c==> c~ * f0 f1 * f0 f1
+ |- (((real_le (real_abs ((real_sub ((real_div pi) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ((sum ((NUMERAL _0) .. n)) (\i. ((real_div ((real_pow (real_neg (real_of_num (NUMERAL (BIT1 _0))))) i)) (real_of_num (((NUMERAL (BIT0 (BIT1 _0))) * i) + (NUMERAL (BIT1 _0)))))))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (((NUMERAL (BIT0 (BIT1 _0))) * n) + (NUMERAL (BIT1 (BIT1 _0))))))) = T)
T c= creal_le creal_abs creal_sub creal_div cpi creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 csum * * part c.. cNUMERAL c_0 f0 / creal_div creal_pow creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num c+ c* cNUMERAL cBIT0 cBIT1 c_0 b0 cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num c+ c* cNUMERAL cBIT0 cBIT1 c_0 f0 cNUMERAL cBIT1 cBIT1 c_0 cT
+ |- ((((\C. ((B DIFF (A INTER B)) = C)) C) ==> (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p))))) = T)
T c= c==> * / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 f2 c==> c/\ cHAS_SIZE f1 f3 c/\ cHAS_SIZE f0 f4 cHAS_SIZE * * part cINTER f1 f0 f5 cHAS_SIZE * * part cUNION f1 f0 c+ f3 c- f4 f5 cT
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n)
T * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1
+ |- (((!x. (((\C. ((B DIFF (A INTER B)) = C)) x) ==> (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p)))))) ==> ((?C. ((B DIFF (A INTER B)) = C)) ==> (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p)))))) = ((?C. ((B DIFF (A INTER B)) = C)) ==> (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p))))))
T c= c==> ! c==> * / c= * * part cDIFF f0 * * part cINTER f1 f0 b1 b0 c==> c/\ cHAS_SIZE f1 f2 c/\ cHAS_SIZE f0 f3 cHAS_SIZE * * part cINTER f1 f0 f4 cHAS_SIZE * * part cUNION f1 f0 c+ f2 c- f3 f4 c==> c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 c==> c/\ cHAS_SIZE f1 f2 c/\ cHAS_SIZE f0 f3 cHAS_SIZE * * part cINTER f1 f0 f4 cHAS_SIZE * * part cUNION f1 f0 c+ f2 c- f3 f4 c==> c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 c==> c/\ cHAS_SIZE f1 f2 c/\ cHAS_SIZE f0 f3 cHAS_SIZE * * part cINTER f1 f0 f4 cHAS_SIZE * * part cUNION f1 f0 c+ f2 c- f3 f4
+ |- ((((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))) ==> F)
T c==> c/\ c/\ c~ * f0 f1 c~ * f2 f1 c\/ * f0 f1 c/\ * f2 f1 c\/ c~ * f0 f1 c~ * f2 f1 cF
+ ((\C. ((B DIFF (A INTER B)) = C)) C) |- ((((B DIFF (A INTER B)) = C) ==> (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p))))) = (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p)))))
T c==> * / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 f2 c= c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c==> c/\ cHAS_SIZE f1 f3 c/\ cHAS_SIZE f0 f4 cHAS_SIZE * * part cINTER f1 f0 f5 cHAS_SIZE * * part cUNION f1 f0 c+ f3 c- f4 f5 c==> c/\ cHAS_SIZE f1 f3 c/\ cHAS_SIZE f0 f4 cHAS_SIZE * * part cINTER f1 f0 f5 cHAS_SIZE * * part cUNION f1 f0 c+ f3 c- f4 f5
+ |- (((!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) ==> ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)) = ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x))
T c= c==> ! ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
- (B x), ((A x) /\ (B x)), (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) |- ((B x) /\ F)
T c==> * f0 f1 c==> c/\ * f2 f1 * f0 f1 c==> c/\ c\/ * f2 f1 * f0 f1 c/\ c~ * f2 f1 c\/ c~ * f0 f1 c/\ * f2 f1 * f0 f1 c/\ * f0 f1 cF
+ |- (((B HAS_SIZE n) /\ (((A INTER B) HAS_SIZE p) /\ ((A INTER B) SUBSET B))) ==> ((B DIFF (A INTER B)) HAS_SIZE (n - p)))
T c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE * * part cINTER f2 f0 f3 cSUBSET * * part cINTER f2 f0 f0 cHAS_SIZE * * part cDIFF f0 * * part cINTER f2 f0 c- f1 f3
+ |- (((!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((\z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0))))))))) z')) = ((\z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0))))))))) z'))
T c= c==> ! c= cdistance c, creal3_of_triple c, f0 c, f1 f2 creal3_of_triple c, f3 c, f4 b0 csqrt creal_add creal_pow creal_sub f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub f1 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub f2 b0 cNUMERAL cBIT0 cBIT1 c_0 * / c= cdistance c, creal3_of_triple c, f0 c, f1 f2 creal3_of_triple c, f3 c, f4 b0 csqrt creal_add creal_pow creal_sub f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub f1 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub f2 b0 cNUMERAL cBIT0 cBIT1 c_0 f5 * / c= cdistance c, creal3_of_triple c, f0 c, f1 f2 creal3_of_triple c, f3 c, f4 b0 csqrt creal_add creal_pow creal_sub f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub f1 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub f2 b0 cNUMERAL cBIT0 cBIT1 c_0 f5
+ |- (!x. ((x IN (A INTER B)) ==> (x IN B)))
T c==> cIN f0 * * part cINTER f1 f2 cIN f0 f2
+ |- ((?C. ((B DIFF (A INTER B)) = C)) ==> (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p)))))
T c==> c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 c==> c/\ cHAS_SIZE f1 f2 c/\ cHAS_SIZE f0 f3 cHAS_SIZE * * part cINTER f1 f0 f4 cHAS_SIZE * * part cUNION f1 f0 c+ f2 c- f3 f4
- ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) |- (((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) /\ ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F))
T c==> c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c/\ c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?x'. t) = t)
T c= c? / f0 f0
- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) |- (((!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))) ==> ((\n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))) n)) = ((\n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))) n))
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 c= c==> ! c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 b0 cDISJOINT f0 f2 cHAS_SIZE * * part cUNION f0 f2 c+ f1 b0 * / c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 b0 cDISJOINT f0 f2 cHAS_SIZE * * part cUNION f0 f2 c+ f1 b0 f3 * / c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 b0 cDISJOINT f0 f2 cHAS_SIZE * * part cUNION f0 f2 c+ f1 b0 f3
+ |- ((!x. ((x IN (A UNION B)) = (x IN (A UNION (B DIFF (A INTER B)))))) = ((A UNION B) = (A UNION (B DIFF (A INTER B)))))
T c= ! c= cIN b0 * * part cUNION f0 f1 cIN b0 * * part cUNION f0 * * part cDIFF f1 * * part cINTER f0 f1 c= * * part cUNION f0 f1 * * part cUNION f0 * * part cDIFF f1 * * part cINTER f0 f1
+ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))) |- (x' = a)
T c==> c/\ c= f0 f1 c/\ c= f2 f1 c~ c= f2 f0 c= f2 f1
+ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) |- ((~ (A x)) ==> F)
T c==> c/\ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 c==> c~ * f0 f1 cF
- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) |- (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 ! c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 b0 cDISJOINT f0 f2 cHAS_SIZE * * part cUNION f0 f2 c+ f1 b0
+ |- ((\n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n)))) n)
T * / c= creal_pow f0 cSUC b0 creal_mul f0 creal_pow f0 b0 f1
+ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) |- ((B x) /\ ((~ (A x)) \/ (~ (B x))))
T c==> c/\ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 c/\ * f2 f1 c\/ c~ * f0 f1 c~ * f2 f1
- |- (((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F))
T c==> c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF
- |- ((?C. ((B DIFF (A INTER B)) = C)) ==> (?C. ((B DIFF (A INTER B)) = C)))
T c==> c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b0
- ((B DIFF (A INTER B)) = C) |- (((B DIFF (A INTER B)) = C) /\ (?C. ((B DIFF (A INTER B)) = C)))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c/\ c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b0
+ ((B DIFF (A INTER B)) = C) |- ((A UNION B) = (A UNION C))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c= * * part cUNION f1 f0 * * part cUNION f1 f2
- (~ (B x)), ((A x) /\ (B x)) |- ((~ (B x)) /\ F)
T c==> c~ * f0 f1 c==> c/\ * f2 f1 * f0 f1 c/\ c~ * f0 f1 cF
+ |- ((((\x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))))) x') ==> F) = T)
T c= c==> * / c\/ ! c~ c= b1 f0 c/\ c= f1 f0 c/\ c= b0 f0 c~ c= b0 f1 f2 cF cT
- (~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) |- ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) /\ F)
T c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 c/\ c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
+ |- ((\z. (!x'. (!y'. (!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0)))))))))))) z)
T * / ! ! ! c= cdistance c, creal3_of_triple c, f0 c, f1 b0 creal3_of_triple c, b1 c, b2 b3 csqrt creal_add creal_pow creal_sub f0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub f1 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub b0 b3 cNUMERAL cBIT0 cBIT1 c_0 f2
+ |- (((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x))))) ==> F)
T c==> c\/ ! c~ c= b0 f0 c/\ c= f1 f0 c/\ c= f2 f0 c~ c= f2 f1 cF
+ |- (((!x. ((((real_le (real_of_num (NUMERAL _0))) x) ==> ((real_abs x) = x)) /\ (((real_lt x) (real_of_num (NUMERAL _0))) ==> ((real_abs x) = (real_neg x))))) ==> ((\x. ((((real_le (real_of_num (NUMERAL _0))) x) ==> ((real_abs x) = x)) /\ (((real_lt x) (real_of_num (NUMERAL _0))) ==> ((real_abs x) = (real_neg x))))) x)) = ((\x. ((((real_le (real_of_num (NUMERAL _0))) x) ==> ((real_abs x) = x)) /\ (((real_lt x) (real_of_num (NUMERAL _0))) ==> ((real_abs x) = (real_neg x))))) x))
T c= c==> ! c/\ c==> creal_le creal_of_num cNUMERAL c_0 b0 c= creal_abs b0 b0 c==> creal_lt b0 creal_of_num cNUMERAL c_0 c= creal_abs b0 creal_neg b0 * / c/\ c==> creal_le creal_of_num cNUMERAL c_0 b0 c= creal_abs b0 b0 c==> creal_lt b0 creal_of_num cNUMERAL c_0 c= creal_abs b0 creal_neg b0 f0 * / c/\ c==> creal_le creal_of_num cNUMERAL c_0 b0 c= creal_abs b0 b0 c==> creal_lt b0 creal_of_num cNUMERAL c_0 c= creal_abs b0 creal_neg b0 f0
- (~ F), (A x), (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) |- ((~ F) /\ F)
T c==> c~ cF c==> * f0 f1 c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c/\ c~ cF cF
+ |- (((A HAS_SIZE n) = ((FINITE A) /\ ((CARD A) = n))) /\ ((?!x. (x = a)) /\ (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p))))))
T c/\ c= cHAS_SIZE f0 f1 c/\ cFINITE f0 c= cCARD f0 f1 c/\ c?! / c= b0 f2 c==> c/\ cHAS_SIZE f0 f3 c/\ cHAS_SIZE f4 f1 cHAS_SIZE * * part cINTER f0 f4 f5 cHAS_SIZE * * part cUNION f0 f4 c+ f3 c- f1 f5
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- ((\x. ((I x) = x)) x)
T * / c= cI b0 b0 f0
- ((x = a) /\ ((x' = a) /\ (~ (x' = x)))) |- ((~ F) ==> F)
T c==> c/\ c= f0 f1 c/\ c= f2 f1 c~ c= f2 f0 c==> c~ cF cF
+ ((B DIFF (A INTER B)) = C), (A HAS_SIZE m) |- (((A INTER B) SUBSET B) /\ ((C HAS_SIZE (n - p)) ==> ((A UNION C) HAS_SIZE (m + (n - p)))))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c==> cHAS_SIZE f1 f3 c/\ cSUBSET * * part cINTER f1 f0 f0 c==> cHAS_SIZE f2 c- f4 f5 cHAS_SIZE * * part cUNION f1 f2 c+ f3 c- f4 f5
+ (~ (?!x. (x = a))) |- ((~ (?!x. (x = a))) /\ F)
T c==> c~ c?! / c= b0 f0 c/\ c~ c?! / c= b0 f0 cF
+ ((A UNION B) = (A UNION C)), ((B DIFF (A INTER B)) = C) |- (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p))))
T c==> c= * * part cUNION f0 f1 * * part cUNION f0 f2 c==> c= * * part cDIFF f1 * * part cINTER f0 f1 f2 c==> c/\ cHAS_SIZE f0 f3 c/\ cHAS_SIZE f1 f4 cHAS_SIZE * * part cINTER f0 f1 f5 cHAS_SIZE * * part cUNION f0 f1 c+ f3 c- f4 f5
+ |- (((x = a) /\ ((x' = a) /\ (~ (x' = x)))) ==> F)
T c==> c/\ c= f0 f1 c/\ c= f2 f1 c~ c= f2 f0 cF
+ ((A x) /\ (B x)) |- (((A x) /\ (B x)) /\ (B x))
T c==> c/\ * f0 f1 * f2 f1 c/\ c/\ * f0 f1 * f2 f1 * f2 f1
+ ((B DIFF (A INTER B)) = C), ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p)), (A HAS_SIZE m), (B HAS_SIZE n) |- ((A UNION C) HAS_SIZE (m + (n - p)))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c==> c/\ cHAS_SIZE f0 f3 cHAS_SIZE * * part cINTER f1 f0 f4 c==> cHAS_SIZE f1 f5 c==> cHAS_SIZE f0 f3 cHAS_SIZE * * part cUNION f1 f2 c+ f5 c- f3 f4
- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) |- (((!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))))) ==> ((\t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))))) t)) = ((\t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))))) t))
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 c= c==> ! ! ! c==> c/\ cHAS_SIZE f0 b1 c/\ cHAS_SIZE b0 b2 cDISJOINT f0 b0 cHAS_SIZE * * part cUNION f0 b0 c+ b1 b2 * / ! ! c==> c/\ cHAS_SIZE f0 b1 c/\ cHAS_SIZE b0 b2 cDISJOINT f0 b0 cHAS_SIZE * * part cUNION f0 b0 c+ b1 b2 f1 * / ! ! c==> c/\ cHAS_SIZE f0 b1 c/\ cHAS_SIZE b0 b2 cDISJOINT f0 b0 cHAS_SIZE * * part cUNION f0 b0 c+ b1 b2 f1
+ ((\x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))))) x') |- (((\x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))))) x') /\ F)
T c==> * / c\/ ! c~ c= b1 f0 c/\ c= f1 f0 c/\ c= b0 f0 c~ c= b0 f1 f2 c/\ * / c\/ ! c~ c= b1 f0 c/\ c= f1 f0 c/\ c= b0 f0 c~ c= b0 f1 f2 cF
+ |- (((?C. ((B DIFF (A INTER B)) = C)) ==> (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p))))) = (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p)))))
T c= c==> c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 c==> c/\ cHAS_SIZE f1 f2 c/\ cHAS_SIZE f0 f3 cHAS_SIZE * * part cINTER f1 f0 f4 cHAS_SIZE * * part cUNION f1 f0 c+ f2 c- f3 f4 c==> c/\ cHAS_SIZE f1 f2 c/\ cHAS_SIZE f0 f3 cHAS_SIZE * * part cINTER f1 f0 f4 cHAS_SIZE * * part cUNION f1 f0 c+ f2 c- f3 f4
+ |- (((B DIFF (A INTER B)) = (B DIFF (A INTER B))) = ((\C. ((B DIFF (A INTER B)) = C)) (B DIFF (A INTER B))))
T c= c= * * part cDIFF f0 * * part cINTER f1 f0 * * part cDIFF f0 * * part cINTER f1 f0 * / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 * * part cDIFF f0 * * part cINTER f1 f0
+ |- ((A INTER B) SUBSET B)
T cSUBSET * * part cINTER f0 f1 f1
+ |- ((\n. ((((sum ((NUMERAL _0) .. (NUMERAL _0))) f) = (f (NUMERAL _0))) /\ (((sum ((NUMERAL _0) .. (SUC n))) f) = ((real_add ((sum ((NUMERAL _0) .. n)) f)) (f (SUC n)))))) n)
T * / c/\ c= csum * * part c.. cNUMERAL c_0 cNUMERAL c_0 f0 * f0 cNUMERAL c_0 c= csum * * part c.. cNUMERAL c_0 cSUC b0 f0 creal_add csum * * part c.. cNUMERAL c_0 b0 f0 * f0 cSUC b0 f1
- ((A x) /\ (B x)) |- ((~ (B x)) ==> (B x))
T c==> c/\ * f0 f1 * f2 f1 c==> c~ * f2 f1 * f2 f1
+ |- ((\z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0))))))))) z')
T * / c= cdistance c, creal3_of_triple c, f0 c, f1 f2 creal3_of_triple c, f3 c, f4 b0 csqrt creal_add creal_pow creal_sub f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub f1 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub f2 b0 cNUMERAL cBIT0 cBIT1 c_0 f5
- (~ (B x)), ((A x) /\ (B x)) |- ((~ (B x)) /\ (B x))
T c==> c~ * f0 f1 c==> c/\ * f2 f1 * f0 f1 c/\ c~ * f0 f1 * f0 f1
+ ((B DIFF (A INTER B)) = C), (B HAS_SIZE n), ((A INTER B) HAS_SIZE p) |- (((((A INTER B) SUBSET B) ==> (C HAS_SIZE (n - p))) ==> ((A UNION C) HAS_SIZE (m + (n - p)))) = ((((B HAS_SIZE n) /\ (((A INTER B) HAS_SIZE p) /\ ((A INTER B) SUBSET B))) ==> ((B DIFF (A INTER B)) HAS_SIZE (n - p))) ==> ((A UNION C) HAS_SIZE (m + (n - p)))))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c==> cHAS_SIZE f0 f3 c==> cHAS_SIZE * * part cINTER f1 f0 f4 c= c==> c==> cSUBSET * * part cINTER f1 f0 f0 cHAS_SIZE f2 c- f3 f4 cHAS_SIZE * * part cUNION f1 f2 c+ f5 c- f3 f4 c==> c==> c/\ cHAS_SIZE f0 f3 c/\ cHAS_SIZE * * part cINTER f1 f0 f4 cSUBSET * * part cINTER f1 f0 f0 cHAS_SIZE * * part cDIFF f0 * * part cINTER f1 f0 c- f3 f4 cHAS_SIZE * * part cUNION f1 f2 c+ f5 c- f3 f4
- (~ (A x)), ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 c==> c~ cF cF
+ |- (((!g. ((f = g) = (!x. ((f x) = (g x))))) ==> ((\g. ((f = g) = (!x. ((f x) = (g x))))) g)) = ((\g. ((f = g) = (!x. ((f x) = (g x))))) g))
T c= c==> ! c= c= f0 b0 ! c= * f0 b1 * b0 b1 * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1 * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1
- (~ (B x)), (B x) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> * f0 f1 c==> c~ cF cF
- |- ((((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F)) ==> (((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F)))
T c==> c==> c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF
+ ((B DIFF (A INTER B)) = C) |- (((A UNION B) = (A UNION C)) = ((A UNION B) = (A UNION (B DIFF (A INTER B)))))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c= c= * * part cUNION f1 f0 * * part cUNION f1 f2 c= * * part cUNION f1 f0 * * part cUNION f1 * * part cDIFF f0 * * part cINTER f1 f0
+ |- (((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) ==> F)
T c==> c/\ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 cF
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (!x. (~ (x = a))), (~ F) |- ((~ F) /\ F)
T c==> ! c~ c= b0 f0 c==> c~ cF c/\ c~ cF cF
- (A x), (((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))) |- ((A x) /\ F)
T c==> * f0 f1 c==> c/\ c/\ c~ * f0 f1 c~ * f2 f1 c\/ * f0 f1 c/\ * f2 f1 c\/ c~ * f0 f1 c~ * f2 f1 c/\ * f0 f1 cF
- |- (((~ (B x)) ==> F) = (B x))
T c= c==> c~ * f0 f1 cF * f0 f1
- (~ (A x)), ((A x) /\ (B x)) |- ((~ (A x)) /\ (A x))
T c==> c~ * f0 f1 c==> c/\ * f0 f1 * f2 f1 c/\ c~ * f0 f1 * f0 f1
- |- ((!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) ==> (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))))
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3
+ |- ((~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))) = T)
T c= c~ c/\ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 cT
+ (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) |- ((A x) ==> F)
T c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c==> * f0 f1 cF
+ |- (((!x. (((\x. (?x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x))))))) x) ==> F)) ==> ((?x. (?x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x))))))) ==> F)) = ((?x. (?x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x))))))) ==> F))
T c= c==> ! c==> * / c? / c\/ ! c~ c= b2 f0 c/\ c= b1 f0 c/\ c= b1 f0 c~ c= b1 b1 b0 cF c==> c? / c? / c\/ ! c~ c= b2 f0 c/\ c= b0 f0 c/\ c= b1 f0 c~ c= b1 b0 cF c==> c? / c? / c\/ ! c~ c= b2 f0 c/\ c= b0 f0 c/\ c= b1 f0 c~ c= b1 b0 cF
+ |- (((!x. (~ (x = a))) \/ (?x. (?x'. ((x = a) /\ ((x' = a) /\ (~ (x' = x))))))) = (?x. ((!x. (~ (x = a))) \/ (?x'. ((x = a) /\ ((x' = a) /\ (~ (x' = x))))))))
T c= c\/ ! c~ c= b0 f0 c? / c? / c/\ c= b0 f0 c/\ c= b1 f0 c~ c= b1 b0 c? / c\/ ! c~ c= b1 f0 c? / c/\ c= b0 f0 c/\ c= b1 f0 c~ c= b1 b0
+ |- ((\y'. (!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0)))))))))) y')
T * / ! c= cdistance c, creal3_of_triple c, f0 c, f1 f2 creal3_of_triple c, f3 c, b0 b1 csqrt creal_add creal_pow creal_sub f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub f1 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub f2 b1 cNUMERAL cBIT0 cBIT1 c_0 f4
- ((B x) /\ ((~ (A x)) \/ (~ (B x)))) |- ((~ (B x)) ==> (B x))
T c==> c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c~ * f0 f1 * f0 f1
+ ((A x) /\ (B x)), (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) |- (((A x) /\ (B x)) /\ F)
T c==> c/\ * f0 f1 * f2 f1 c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c/\ c/\ * f0 f1 * f2 f1 cF
+ |- (((!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) ==> ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n)) = ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n))
T c= c==> ! c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1 * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1
+ ((\x. (?x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x))))))) x) |- (((\x. (?x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x))))))) x) /\ F)
T c==> * / c? / c\/ ! c~ c= b2 f0 c/\ c= b0 f0 c/\ c= b1 f0 c~ c= b1 b0 f1 c/\ * / c? / c\/ ! c~ c= b2 f0 c/\ c= b0 f0 c/\ c= b1 f0 c~ c= b1 b0 f1 cF
- |- ((!B. (!A. (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))))))) = (!B. (!A. ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))))
T c= ! ! ! c~ c/\ * b1 b2 c/\ * b0 b2 c~ c/\ * b1 b2 * b0 b2 ! ! c==> c~ ! c~ c/\ * b1 b2 c/\ * b0 b2 c~ c/\ * b1 b2 * b0 b2 cF
+ ((A UNION B) = (A UNION C)) |- ((((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p)))) = (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION C) HAS_SIZE (m + (n - p)))))
T c==> c= * * part cUNION f0 f1 * * part cUNION f0 f2 c= c==> c/\ cHAS_SIZE f0 f3 c/\ cHAS_SIZE f1 f4 cHAS_SIZE * * part cINTER f0 f1 f5 cHAS_SIZE * * part cUNION f0 f1 c+ f3 c- f4 f5 c==> c/\ cHAS_SIZE f0 f3 c/\ cHAS_SIZE f1 f4 cHAS_SIZE * * part cINTER f0 f1 f5 cHAS_SIZE * * part cUNION f0 f2 c+ f3 c- f4 f5
+ |- (((!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))) ==> ((\m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))) m)) = ((\m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))) m))
T c= c==> ! ! c==> c/\ cHAS_SIZE f0 b0 c/\ cHAS_SIZE f1 b1 cDISJOINT f0 f1 cHAS_SIZE * * part cUNION f0 f1 c+ b0 b1 * / ! c==> c/\ cHAS_SIZE f0 b0 c/\ cHAS_SIZE f1 b1 cDISJOINT f0 f1 cHAS_SIZE * * part cUNION f0 f1 c+ b0 b1 f2 * / ! c==> c/\ cHAS_SIZE f0 b0 c/\ cHAS_SIZE f1 b1 cDISJOINT f0 f1 cHAS_SIZE * * part cUNION f0 f1 c+ b0 b1 f2
+ (~ (A x)), ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) |- ((~ (A x)) /\ F)
T c==> c~ * f0 f1 c==> c/\ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 c/\ c~ * f0 f1 cF
+ |- (((?!x. (x = a)) /\ (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p))))) = (((A HAS_SIZE n) = ((FINITE A) /\ ((CARD A) = n))) /\ ((?!x. (x = a)) /\ (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p)))))))
T c= c/\ c?! / c= b0 f0 c==> c/\ cHAS_SIZE f1 f2 c/\ cHAS_SIZE f3 f4 cHAS_SIZE * * part cINTER f1 f3 f5 cHAS_SIZE * * part cUNION f1 f3 c+ f2 c- f4 f5 c/\ c= cHAS_SIZE f1 f4 c/\ cFINITE f1 c= cCARD f1 f4 c/\ c?! / c= b0 f0 c==> c/\ cHAS_SIZE f1 f2 c/\ cHAS_SIZE f3 f4 cHAS_SIZE * * part cINTER f1 f3 f5 cHAS_SIZE * * part cUNION f1 f3 c+ f2 c- f4 f5
- |- (((B DIFF (A INTER B)) = C) = ((\C. ((B DIFF (A INTER B)) = C)) C))
T c= c= * * part cDIFF f0 * * part cINTER f1 f0 f2 * / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 f2
- (~ (!x. (((A x) /\ (B x)) ==> (B x)))) |- ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) /\ F)
T c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 c/\ c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF
+ |- (((a = a) ==> F) = F)
T c= c==> c= f0 f0 cF cF
+ ((B x) /\ ((~ (A x)) \/ (~ (B x)))), (((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))) |- (((B x) /\ ((~ (A x)) \/ (~ (B x)))) /\ F)
T c==> c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c/\ c/\ c~ * f2 f1 c~ * f0 f1 c\/ * f2 f1 c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c/\ c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 cF
+ |- ((((real_le (real_of_num (NUMERAL _0))) x) ==> (((real_le (real_of_num (NUMERAL _0))) (sqrt x)) /\ (((real_pow (sqrt x)) (NUMERAL (BIT0 (BIT1 _0)))) = x))) = T)
T c= c==> creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 csqrt f0 c= creal_pow csqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 cT
- |- (((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))
T c==> c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
+ (((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))) |- ((((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))) /\ F)
T c==> c/\ c/\ c~ * f0 f1 c~ * f2 f1 c\/ * f0 f1 c/\ * f2 f1 c\/ c~ * f0 f1 c~ * f2 f1 c/\ c/\ c/\ c~ * f0 f1 c~ * f2 f1 c\/ * f0 f1 c/\ * f2 f1 c\/ c~ * f0 f1 c~ * f2 f1 cF
- ((A x) /\ (B x)) |- (((B x) ==> F) = F)
T c==> c/\ * f0 f1 * f2 f1 c= c==> * f2 f1 cF cF
+ ((B DIFF (A INTER B)) = C), (A HAS_SIZE m) |- ((((A INTER B) SUBSET B) ==> (C HAS_SIZE (n - p))) ==> ((A UNION C) HAS_SIZE (m + (n - p))))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c==> cHAS_SIZE f1 f3 c==> c==> cSUBSET * * part cINTER f1 f0 f0 cHAS_SIZE f2 c- f4 f5 cHAS_SIZE * * part cUNION f1 f2 c+ f3 c- f4 f5
- |- ((\B. (!A. ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))) B)
T * / ! c==> c~ ! c= c\/ * b1 b2 * b0 b2 c\/ * b1 b2 c/\ * b0 b2 c~ c/\ * b1 b2 * b0 b2 cF f0
+ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) |- ((A x) /\ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))
T c==> c/\ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 c/\ * f0 f1 c/\ * f2 f1 c\/ c~ * f0 f1 c~ * f2 f1
+ (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) |- ((~ (B x)) ==> F)
T c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c==> c~ * f2 f1 cF
+ ((B DIFF (A INTER B)) = C), (A HAS_SIZE m), (C HAS_SIZE (n - p)) |- ((((A HAS_SIZE m) /\ ((C HAS_SIZE (n - p)) /\ ((DISJOINT A) C))) ==> ((A UNION C) HAS_SIZE (m + (n - p)))) = ((A UNION C) HAS_SIZE (m + (n - p))))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c==> cHAS_SIZE f1 f3 c==> cHAS_SIZE f2 c- f4 f5 c= c==> c/\ cHAS_SIZE f1 f3 c/\ cHAS_SIZE f2 c- f4 f5 cDISJOINT f1 f2 cHAS_SIZE * * part cUNION f1 f2 c+ f3 c- f4 f5 cHAS_SIZE * * part cUNION f1 f2 c+ f3 c- f4 f5
+ (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))), ((~ (B x)) ==> F), (((A x) /\ (B x)) ==> F) |- F
T c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c==> c==> c~ * f2 f1 cF c==> c==> c/\ * f0 f1 * f2 f1 cF cF
+ |- ((((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) ==> F)
T c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 cF
- (~ (B x)), ((B x) /\ ((~ (A x)) \/ (~ (B x)))), (((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))) |- ((~ (B x)) /\ F)
T c==> c~ * f0 f1 c==> c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c/\ c/\ c~ * f2 f1 c~ * f0 f1 c\/ * f2 f1 c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c/\ c~ * f0 f1 cF
- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))), ((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) |- ((!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) /\ ((s UNION t) HAS_SIZE (m + n)))
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 f3 cDISJOINT f0 f2 c/\ ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 cHAS_SIZE * * part cUNION f0 f2 c+ f1 f3
+ |- (((B DIFF (A INTER B)) = C) ==> (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p)))))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c==> c/\ cHAS_SIZE f1 f3 c/\ cHAS_SIZE f0 f4 cHAS_SIZE * * part cINTER f1 f0 f5 cHAS_SIZE * * part cUNION f1 f0 c+ f3 c- f4 f5
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- (((!V. ((packing V) = (!u. (!v. (((u IN V) /\ ((v IN V) /\ ((real_lt (distance (u , v))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (u = v)))))) ==> ((\V. ((packing V) = (!u. (!v. (((u IN V) /\ ((v IN V) /\ ((real_lt (distance (u , v))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (u = v)))))) V)) = ((\V. ((packing V) = (!u. (!v. (((u IN V) /\ ((v IN V) /\ ((real_lt (distance (u , v))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (u = v)))))) V))
T c= c==> ! c= cpacking b0 ! ! c==> c/\ cIN b1 b0 c/\ cIN b2 b0 creal_lt cdistance c, b1 b2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b1 b2 * / c= cpacking b0 ! ! c==> c/\ cIN b1 b0 c/\ cIN b2 b0 creal_lt cdistance c, b1 b2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b1 b2 f0 * / c= cpacking b0 ! ! c==> c/\ cIN b1 b0 c/\ cIN b2 b0 creal_lt cdistance c, b1 b2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b1 b2 f0
+ |- ((!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x))))))) = (!x. ((x IN (A UNION B)) = (x IN (A UNION (B DIFF (A INTER B)))))))
T c= ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 ! c= cIN b0 * * part cUNION f0 f1 cIN b0 * * part cUNION f0 * * part cDIFF f1 * * part cINTER f0 f1
- (((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) |- ((((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) /\ (((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c/\ c==> c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
- ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) |- ((((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F)) ==> ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F))
T c==> c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c==> c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF
- |- ((((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) ==> (((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)))
T c==> c==> c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
+ ((B DIFF (A INTER B)) = C), (A HAS_SIZE m) |- (((((A INTER B) SUBSET B) /\ ((C HAS_SIZE (n - p)) ==> ((A UNION C) HAS_SIZE (m + (n - p))))) ==> ((((A INTER B) SUBSET B) ==> (C HAS_SIZE (n - p))) ==> ((A UNION C) HAS_SIZE (m + (n - p))))) = ((((A INTER B) SUBSET B) ==> (C HAS_SIZE (n - p))) ==> ((A UNION C) HAS_SIZE (m + (n - p)))))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c==> cHAS_SIZE f1 f3 c= c==> c/\ cSUBSET * * part cINTER f1 f0 f0 c==> cHAS_SIZE f2 c- f4 f5 cHAS_SIZE * * part cUNION f1 f2 c+ f3 c- f4 f5 c==> c==> cSUBSET * * part cINTER f1 f0 f0 cHAS_SIZE f2 c- f4 f5 cHAS_SIZE * * part cUNION f1 f2 c+ f3 c- f4 f5 c==> c==> cSUBSET * * part cINTER f1 f0 f0 cHAS_SIZE f2 c- f4 f5 cHAS_SIZE * * part cUNION f1 f2 c+ f3 c- f4 f5
- |- ((\B. (!A. ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))) B)
T * / ! c==> c~ ! c~ c/\ * b1 b2 c/\ * b0 b2 c~ c/\ * b1 b2 * b0 b2 cF f0
- (((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F)) |- ((((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F)) /\ (((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F)))
T c==> c==> c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c/\ c==> c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF
+ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))) |- ((~ (x' = x)) = (~ (a = x)))
T c==> c/\ c= f0 f1 c/\ c= f2 f1 c~ c= f2 f0 c= c~ c= f2 f0 c~ c= f1 f0
+ |- (((!x. (~ (x = a))) \/ (?x'. ((x = a) /\ ((x' = a) /\ (~ (x' = x)))))) = (?x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))))))
T c= c\/ ! c~ c= b0 f0 c? / c/\ c= f1 f0 c/\ c= b0 f0 c~ c= b0 f1 c? / c\/ ! c~ c= b1 f0 c/\ c= f1 f0 c/\ c= b0 f0 c~ c= b0 f1
- |- (((((~ (?!x. (x = a))) ==> F) ==> ((~ (?!x. (x = a))) ==> F)) ==> (((~ (?!x. (x = a))) ==> F) ==> ((~ (?!x. (x = a))) ==> F))) = (((~ (?!x. (x = a))) ==> F) ==> ((~ (?!x. (x = a))) ==> F)))
T c= c==> c==> c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF c==> c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF c==> c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF
+ |- ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)
T * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
+ |- (!x. ((x IN (A INTER (B DIFF (A INTER B)))) = (x IN EMPTY)))
T c= cIN f0 * * part cINTER f1 * * part cDIFF f2 * * part cINTER f1 f2 cIN f0 part cEMPTY
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((!f. (!g. ((f = g) = (!x. ((f x) = (g x)))))) ==> ((\f. (!g. ((f = g) = (!x. ((f x) = (g x)))))) f)) = ((\f. (!g. ((f = g) = (!x. ((f x) = (g x)))))) f))
T c= c==> ! ! c= c= b0 b1 ! c= * b0 b2 * b1 b2 * / ! c= c= b0 b1 ! c= * b0 b2 * b1 b2 f0 * / ! c= c= b0 b1 ! c= * b0 b2 * b1 b2 f0
+ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))) |- (~ (a = x))
T c==> c/\ c= f0 f1 c/\ c= f2 f1 c~ c= f2 f0 c~ c= f1 f0
+ |- (!C. (((\C. ((B DIFF (A INTER B)) = C)) C) ==> (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p))))))
T c==> * / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 f2 c==> c/\ cHAS_SIZE f1 f3 c/\ cHAS_SIZE f0 f4 cHAS_SIZE * * part cINTER f1 f0 f5 cHAS_SIZE * * part cUNION f1 f0 c+ f3 c- f4 f5
+ |- ((\x'. (!y'. (!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0))))))))))) x')
T * / ! ! c= cdistance c, creal3_of_triple c, f0 c, f1 f2 creal3_of_triple c, b0 c, b1 b2 csqrt creal_add creal_pow creal_sub f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub f1 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub f2 b2 cNUMERAL cBIT0 cBIT1 c_0 f3
- ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F), (((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) |- ((((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) /\ ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))
T c==> c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c==> c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c/\ c==> c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
+ |- (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n)))
T c= creal_pow f0 cSUC f1 creal_mul f0 creal_pow f0 f1
+ |- ((\m. (!n. (((B HAS_SIZE m) /\ (((A INTER B) HAS_SIZE n) /\ ((A INTER B) SUBSET B))) ==> ((B DIFF (A INTER B)) HAS_SIZE (m - n))))) n)
T * / ! c==> c/\ cHAS_SIZE f0 b0 c/\ cHAS_SIZE * * part cINTER f1 f0 b1 cSUBSET * * part cINTER f1 f0 f0 cHAS_SIZE * * part cDIFF f0 * * part cINTER f1 f0 c- b0 b1 f2
- |- ((!a. (?!x. (x = a))) = (!a. ((~ (?!x. (x = a))) ==> F)))
T c= ! c?! / c= b1 b0 ! c==> c~ c?! / c= b1 b0 cF
- |- ((\A. ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F)) A)
T * / c==> c~ ! c==> c/\ * b0 b1 * f0 b1 * f0 b1 cF f1
+ (~ (?!x. (x = a))) |- (?x. (?x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))))))
T c==> c~ c?! / c= b0 f0 c? / c? / c\/ ! c~ c= b2 f0 c/\ c= b0 f0 c/\ c= b1 f0 c~ c= b1 b0
+ |- (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p))))
T c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 f3 cHAS_SIZE * * part cINTER f0 f2 f4 cHAS_SIZE * * part cUNION f0 f2 c+ f1 c- f3 f4
- |- (((((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) ==> (((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))) = (((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)))
T c= c==> c==> c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
- (~ (A x)), ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) |- ((~ (A x)) /\ (A x))
T c==> c~ * f0 f1 c==> c/\ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 c/\ c~ * f0 f1 * f0 f1
+ |- ((\g. ((f = g) = (!x. ((f x) = (g x))))) g)
T * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1
- ((B x) /\ ((~ (A x)) \/ (~ (B x)))), (((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))) |- ((~ F) ==> F)
T c==> c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c/\ c/\ c~ * f2 f1 c~ * f0 f1 c\/ * f2 f1 c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c~ cF cF
+ (~ (B x)), ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) |- F
T c==> c~ * f0 f1 c==> c/\ * f2 f1 c/\ * f0 f1 c~ c/\ * f2 f1 * f0 f1 cF
+ |- (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))
T c= creal_pow f0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((B x) /\ ((~ (A x)) \/ (~ (B x)))), (((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))), ((~ (B x)) ==> F) |- F
T c==> c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c/\ c/\ c~ * f2 f1 c~ * f0 f1 c\/ * f2 f1 c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c==> c~ * f0 f1 cF cF
+ |- (((!x'. (((\x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))))) x') ==> F)) ==> ((?x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))))) ==> F)) = ((?x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))))) ==> F))
T c= c==> ! c==> * / c\/ ! c~ c= b1 f0 c/\ c= f1 f0 c/\ c= b1 f0 c~ c= b1 f1 b0 cF c==> c? / c\/ ! c~ c= b1 f0 c/\ c= f1 f0 c/\ c= b0 f0 c~ c= b0 f1 cF c==> c? / c\/ ! c~ c= b1 f0 c/\ c= f1 f0 c/\ c= b0 f0 c~ c= b0 f1 cF
- (~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) |- F
T c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
+ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) |- ((~ (B x)) ==> F)
T c==> c/\ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 c==> c~ * f2 f1 cF
+ |- (((real_le (real_abs ((real_sub ((real_div pi) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ((sum ((NUMERAL _0) .. n)) (\i. ((real_div ((real_pow (real_neg (real_of_num (NUMERAL (BIT1 _0))))) i)) (real_of_num (((NUMERAL (BIT0 (BIT1 _0))) * i) + (NUMERAL (BIT1 _0)))))))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (((NUMERAL (BIT0 (BIT1 _0))) * n) + (NUMERAL (BIT1 (BIT1 _0))))))) /\ (((A HAS_SIZE n) = ((FINITE A) /\ ((CARD A) = n))) /\ ((EMPTY HAS_SIZE (NUMERAL _0)) /\ (((a INSERT EMPTY) HAS_SIZE (NUMERAL (BIT1 _0))) /\ ((((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p)))) /\ ((I = (\w. w)) /\ (I = (\v. v))))))))
T c/\ creal_le creal_abs creal_sub creal_div cpi creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 csum * * part c.. cNUMERAL c_0 f0 / creal_div creal_pow creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num c+ c* cNUMERAL cBIT0 cBIT1 c_0 b0 cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num c+ c* cNUMERAL cBIT0 cBIT1 c_0 f0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cHAS_SIZE f1 f0 c/\ cFINITE f1 c= cCARD f1 f0 c/\ cHAS_SIZE part cEMPTY cNUMERAL c_0 c/\ cHAS_SIZE * * part cINSERT f2 part cEMPTY cNUMERAL cBIT1 c_0 c/\ c==> c/\ cHAS_SIZE f1 f3 c/\ cHAS_SIZE f4 f0 cHAS_SIZE * * part cINTER f1 f4 f5 cHAS_SIZE * * part cUNION f1 f4 c+ f3 c- f0 f5 c/\ c= part cI / b0 c= part cI / b0
- (~ F), (~ (B x)), ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ * f2 f1 c/\ * f0 f1 c~ c/\ * f2 f1 * f0 f1 c/\ c~ cF cF
+ |- ((\n'. (((B HAS_SIZE n) /\ (((A INTER B) HAS_SIZE n') /\ ((A INTER B) SUBSET B))) ==> ((B DIFF (A INTER B)) HAS_SIZE (n - n')))) p)
T * / c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE * * part cINTER f2 f0 b0 cSUBSET * * part cINTER f2 f0 f0 cHAS_SIZE * * part cDIFF f0 * * part cINTER f2 f0 c- f1 b0 f3
- |- ((?x''. ((x'' = a) /\ (~ (x' = x)))) = ((?x'. (x' = a)) /\ (~ (x' = x))))
T c= c? / c/\ c= b0 f0 c~ c= f1 f2 c/\ c? / c= b0 f0 c~ c= f1 f2
+ |- (((real_lt x) (real_of_num (NUMERAL _0))) ==> ((real_abs x) = (real_neg x)))
T c==> creal_lt f0 creal_of_num cNUMERAL c_0 c= creal_abs f0 creal_neg f0
+ |- (((C HAS_SIZE (n - p)) ==> ((A UNION C) HAS_SIZE (m + (n - p)))) = (((A INTER B) SUBSET B) /\ ((C HAS_SIZE (n - p)) ==> ((A UNION C) HAS_SIZE (m + (n - p))))))
T c= c==> cHAS_SIZE f0 c- f1 f2 cHAS_SIZE * * part cUNION f3 f0 c+ f4 c- f1 f2 c/\ cSUBSET * * part cINTER f3 f5 f5 c==> cHAS_SIZE f0 c- f1 f2 cHAS_SIZE * * part cUNION f3 f0 c+ f4 c- f1 f2
- |- ((((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) ==> (((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
- |- ((\a. ((~ (?!x. (x = a))) ==> F)) a)
T * / c==> c~ c?! / c= b1 b0 cF f0
- ((A x) /\ (B x)), (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) |- ((A x) ==> F)
T c==> c/\ * f0 f1 * f2 f1 c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c==> * f0 f1 cF
+ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))) |- (~ (x' = x))
T c==> c/\ c= f0 f1 c/\ c= f2 f1 c~ c= f2 f0 c~ c= f2 f0
+ |- ((\n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))) n)
T * / c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 b0 cDISJOINT f0 f2 cHAS_SIZE * * part cUNION f0 f2 c+ f1 b0 f3
- (A x), (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) |- ((A x) /\ F)
T c==> * f0 f1 c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c/\ * f0 f1 cF
+ (((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))) |- ((B x) ==> F)
T c==> c/\ c/\ c~ * f0 f1 c~ * f2 f1 c\/ * f0 f1 c/\ * f2 f1 c\/ c~ * f0 f1 c~ * f2 f1 c==> * f2 f1 cF
+ |- ((\x. (!y. (!z. (!x'. (!y'. (!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0)))))))))))))) x)
T * / ! ! ! ! ! c= cdistance c, creal3_of_triple c, b0 c, b1 b2 creal3_of_triple c, b3 c, b4 b5 csqrt creal_add creal_pow creal_sub b0 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub b1 b4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub b2 b5 cNUMERAL cBIT0 cBIT1 c_0 f0
- (!x. (~ (x = a))) |- ((~ F) ==> F)
T c==> ! c~ c= b0 f0 c==> c~ cF cF
+ |- ((((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p)))) = ((?!x. (x = a)) /\ (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p))))))
T c= c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 f3 cHAS_SIZE * * part cINTER f0 f2 f4 cHAS_SIZE * * part cUNION f0 f2 c+ f1 c- f3 f4 c/\ c?! / c= b0 f5 c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 f3 cHAS_SIZE * * part cINTER f0 f2 f4 cHAS_SIZE * * part cUNION f0 f2 c+ f1 c- f3 f4
+ |- (?!x. (x = a))
T c?! / c= b0 f0
- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) |- ((!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) /\ (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))))
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 c/\ ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3
- |- (((!B. (!A. ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))) ==> ((\B. (!A. ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))) B)) = ((\B. (!A. ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))) B))
T c= c==> ! ! c==> c~ ! c= c\/ * b1 b2 * b0 b2 c\/ * b1 b2 c/\ * b0 b2 c~ c/\ * b1 b2 * b0 b2 cF * / ! c==> c~ ! c= c\/ * b1 b2 * b0 b2 c\/ * b1 b2 c/\ * b0 b2 c~ c/\ * b1 b2 * b0 b2 cF f0 * / ! c==> c~ ! c= c\/ * b1 b2 * b0 b2 c\/ * b1 b2 c/\ * b0 b2 c~ c/\ * b1 b2 * b0 b2 cF f0
- |- ((!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x))))))) = T)
T c= ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cT
- (A x), (((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))) |- ((~ F) ==> F)
T c==> * f0 f1 c==> c/\ c/\ c~ * f0 f1 c~ * f2 f1 c\/ * f0 f1 c/\ * f2 f1 c\/ c~ * f0 f1 c~ * f2 f1 c==> c~ cF cF
- |- ((!A. (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) = T)
T c= ! ! c= c\/ * b0 b1 * f0 b1 c\/ * b0 b1 c/\ * f0 b1 c~ c/\ * b0 b1 * f0 b1 cT
- ((A x) /\ (B x)) |- ((~ (B x)) ==> F)
T c==> c/\ * f0 f1 * f2 f1 c==> c~ * f2 f1 cF
- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) |- ((\t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))))) t)
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 * / ! ! c==> c/\ cHAS_SIZE f0 b1 c/\ cHAS_SIZE b0 b2 cDISJOINT f0 b0 cHAS_SIZE * * part cUNION f0 b0 c+ b1 b2 f1
+ (~ (A x)), ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) |- F
T c==> c~ * f0 f1 c==> c/\ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 cF
+ |- ((\f. (!g. ((f = g) = (!x. ((f x) = (g x)))))) f)
T * / ! c= c= b0 b1 ! c= * b0 b2 * b1 b2 f0
- |- (((!A. ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) ==> ((\A. ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) A)) = ((\A. ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) A))
T c= c==> ! c==> c~ ! c= c\/ * b0 b1 * f0 b1 c\/ * b0 b1 c/\ * f0 b1 c~ c/\ * b0 b1 * f0 b1 cF * / c==> c~ ! c= c\/ * b0 b1 * f0 b1 c\/ * b0 b1 c/\ * f0 b1 c~ c/\ * b0 b1 * f0 b1 cF f1 * / c==> c~ ! c= c\/ * b0 b1 * f0 b1 c\/ * b0 b1 c/\ * f0 b1 c~ c/\ * b0 b1 * f0 b1 cF f1
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ |- ((!x. ((x IN (A INTER B)) ==> (x IN B))) = ((A INTER B) SUBSET B))
T c= ! c==> cIN b0 * * part cINTER f0 f1 cIN b0 f1 cSUBSET * * part cINTER f0 f1 f1
- |- (((x = a) /\ (?x'. ((x' = a) /\ (~ (x' = x))))) = (?x'. ((x = a) /\ ((x' = a) /\ (~ (x' = x))))))
T c= c/\ c= f0 f1 c? / c/\ c= b0 f1 c~ c= b0 f0 c? / c/\ c= f0 f1 c/\ c= b0 f1 c~ c= b0 f0
+ |- ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)
T * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) |- ((\n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))) n)
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 * / c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 b0 cDISJOINT f0 f2 cHAS_SIZE * * part cUNION f0 f2 c+ f1 b0 f3
+ |- ((\f. (!n. ((((sum ((NUMERAL _0) .. (NUMERAL _0))) f) = (f (NUMERAL _0))) /\ (((sum ((NUMERAL _0) .. (SUC n))) f) = ((real_add ((sum ((NUMERAL _0) .. n)) f)) (f (SUC n))))))) f)
T * / ! c/\ c= csum * * part c.. cNUMERAL c_0 cNUMERAL c_0 b0 * b0 cNUMERAL c_0 c= csum * * part c.. cNUMERAL c_0 cSUC b1 b0 creal_add csum * * part c.. cNUMERAL c_0 b1 b0 * b0 cSUC b1 f0
- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))), ((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) |- (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) /\ ((s UNION t) HAS_SIZE (m + n)))
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 f3 cDISJOINT f0 f2 c/\ c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 f3 cDISJOINT f0 f2 cHAS_SIZE * * part cUNION f0 f2 c+ f1 f3
+ |- ((((A x) /\ (B x)) ==> (B x)) = T)
T c= c==> c/\ * f0 f1 * f2 f1 * f2 f1 cT
- |- ((!x. (((A x) /\ (B x)) ==> (B x))) = T)
T c= ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cT
+ |- ((((real_le (real_of_num (NUMERAL _0))) x) ==> ((real_abs x) = x)) = T)
T c= c==> creal_le creal_of_num cNUMERAL c_0 f0 c= creal_abs f0 f0 cT
+ ((A x) /\ (B x)), (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) |- F
T c==> c/\ * f0 f1 * f2 f1 c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 cF
+ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) |- (B x)
T c==> c/\ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 * f2 f1
- |- (T = ((A HAS_SIZE n) = ((FINITE A) /\ ((CARD A) = n))))
T c= cT c= cHAS_SIZE f0 f1 c/\ cFINITE f0 c= cCARD f0 f1
+ |- ((p /\ (q ==> r)) ==> ((p ==> q) ==> r))
T c==> c/\ f0 c==> f1 f2 c==> c==> f0 f1 f2
- (((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) |- ((((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) /\ (((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)))
T c==> c==> c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c/\ c==> c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
+ ((\C. ((B DIFF (A INTER B)) = C)) C) |- ((B DIFF (A INTER B)) = C)
T c==> * / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 f2 c= * * part cDIFF f0 * * part cINTER f1 f0 f2
+ (~ (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x))))))) |- ((((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) \/ (((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))))
T c==> c~ c= c\/ * f0 f1 * f2 f1 c\/ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 c\/ c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c/\ c/\ c~ * f0 f1 c~ * f2 f1 c\/ * f0 f1 c/\ * f2 f1 c\/ c~ * f0 f1 c~ * f2 f1
+ (A HAS_SIZE m), (C HAS_SIZE (n - p)) |- (((DISJOINT A) C) = ((A HAS_SIZE m) /\ ((C HAS_SIZE (n - p)) /\ ((DISJOINT A) C))))
T c==> cHAS_SIZE f0 f1 c==> cHAS_SIZE f2 c- f3 f4 c= cDISJOINT f0 f2 c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 c- f3 f4 cDISJOINT f0 f2
+ |- (((!n. ((((sum ((NUMERAL _0) .. (NUMERAL _0))) f) = (f (NUMERAL _0))) /\ (((sum ((NUMERAL _0) .. (SUC n))) f) = ((real_add ((sum ((NUMERAL _0) .. n)) f)) (f (SUC n)))))) ==> ((\n. ((((sum ((NUMERAL _0) .. (NUMERAL _0))) f) = (f (NUMERAL _0))) /\ (((sum ((NUMERAL _0) .. (SUC n))) f) = ((real_add ((sum ((NUMERAL _0) .. n)) f)) (f (SUC n)))))) n)) = ((\n. ((((sum ((NUMERAL _0) .. (NUMERAL _0))) f) = (f (NUMERAL _0))) /\ (((sum ((NUMERAL _0) .. (SUC n))) f) = ((real_add ((sum ((NUMERAL _0) .. n)) f)) (f (SUC n)))))) n))
T c= c==> ! c/\ c= csum * * part c.. cNUMERAL c_0 cNUMERAL c_0 f0 * f0 cNUMERAL c_0 c= csum * * part c.. cNUMERAL c_0 cSUC b0 f0 creal_add csum * * part c.. cNUMERAL c_0 b0 f0 * f0 cSUC b0 * / c/\ c= csum * * part c.. cNUMERAL c_0 cNUMERAL c_0 f0 * f0 cNUMERAL c_0 c= csum * * part c.. cNUMERAL c_0 cSUC b0 f0 creal_add csum * * part c.. cNUMERAL c_0 b0 f0 * f0 cSUC b0 f1 * / c/\ c= csum * * part c.. cNUMERAL c_0 cNUMERAL c_0 f0 * f0 cNUMERAL c_0 c= csum * * part c.. cNUMERAL c_0 cSUC b0 f0 creal_add csum * * part c.. cNUMERAL c_0 b0 f0 * f0 cSUC b0 f1
+ |- ((\s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ (t SUBSET s))) ==> ((s DIFF t) HAS_SIZE (m - n))))))) B)
T * / ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cSUBSET b1 b0 cHAS_SIZE * * part cDIFF b0 b1 c- b2 b3 f0
- |- (((!a. ((~ (?!x. (x = a))) ==> F)) ==> ((\a. ((~ (?!x. (x = a))) ==> F)) a)) = ((\a. ((~ (?!x. (x = a))) ==> F)) a))
T c= c==> ! c==> c~ c?! / c= b1 b0 cF * / c==> c~ c?! / c= b1 b0 cF f0 * / c==> c~ c?! / c= b1 b0 cF f0
+ |- (!x'. (((\x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))))) x') ==> F))
T c==> * / c\/ ! c~ c= b1 f0 c/\ c= f1 f0 c/\ c= b0 f0 c~ c= b0 f1 f2 cF
+ (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) |- (((A x) /\ (B x)) ==> F)
T c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c==> c/\ * f0 f1 * f2 f1 cF
- (~ (B x)), (B x) |- ((~ (B x)) /\ (B x))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ * f0 f1 * f0 f1
- |- (((((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F)) ==> (((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F))) = (((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F)))
T c= c==> c==> c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF
- |- ((\A. ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) A)
T * / c==> c~ ! c~ c/\ * b0 b1 c/\ * f0 b1 c~ c/\ * b0 b1 * f0 b1 cF f1
- ((B x) /\ ((~ (A x)) \/ (~ (B x)))), (((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))) |- ((~ (A x)) ==> F)
T c==> c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c/\ c/\ c~ * f2 f1 c~ * f0 f1 c\/ * f2 f1 c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c~ * f2 f1 cF
+ |- (?C. ((B DIFF (A INTER B)) = C))
T c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b0
- ((x = a) /\ ((x' = a) /\ (~ (x' = x)))) |- ((x = a) = (x = a))
T c==> c/\ c= f0 f1 c/\ c= f2 f1 c~ c= f2 f0 c= c= f0 f1 c= f0 f1
- (~ (B x)), (B x) |- ((B x) /\ F)
T c==> c~ * f0 f1 c==> * f0 f1 c/\ * f0 f1 cF
- |- ((!B. (!A. (!x. (((A x) /\ (B x)) ==> (B x))))) = (!B. (!A. ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F))))
T c= ! ! ! c==> c/\ * b1 b2 * b0 b2 * b0 b2 ! ! c==> c~ ! c==> c/\ * b1 b2 * b0 b2 * b0 b2 cF
+ (~ (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x))))))) |- ((~ (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x))))))) /\ F)
T c==> c~ c= c\/ * f0 f1 * f2 f1 c\/ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 c/\ c~ c= c\/ * f0 f1 * f2 f1 c\/ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 cF
+ |- (((!x. (!y. (!z. (!x'. (!y'. (!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0)))))))))))))) ==> ((\x. (!y. (!z. (!x'. (!y'. (!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0)))))))))))))) x)) = ((\x. (!y. (!z. (!x'. (!y'. (!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0)))))))))))))) x))
T c= c==> ! ! ! ! ! ! c= cdistance c, creal3_of_triple c, b0 c, b1 b2 creal3_of_triple c, b3 c, b4 b5 csqrt creal_add creal_pow creal_sub b0 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub b1 b4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub b2 b5 cNUMERAL cBIT0 cBIT1 c_0 * / ! ! ! ! ! c= cdistance c, creal3_of_triple c, b0 c, b1 b2 creal3_of_triple c, b3 c, b4 b5 csqrt creal_add creal_pow creal_sub b0 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub b1 b4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub b2 b5 cNUMERAL cBIT0 cBIT1 c_0 f0 * / ! ! ! ! ! c= cdistance c, creal3_of_triple c, b0 c, b1 b2 creal3_of_triple c, b3 c, b4 b5 csqrt creal_add creal_pow creal_sub b0 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub b1 b4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub b2 b5 cNUMERAL cBIT0 cBIT1 c_0 f0
- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) |- (((!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))) ==> ((\m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))) m)) = ((\m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))) m))
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 c= c==> ! ! c==> c/\ cHAS_SIZE f0 b0 c/\ cHAS_SIZE f1 b1 cDISJOINT f0 f1 cHAS_SIZE * * part cUNION f0 f1 c+ b0 b1 * / ! c==> c/\ cHAS_SIZE f0 b0 c/\ cHAS_SIZE f1 b1 cDISJOINT f0 f1 cHAS_SIZE * * part cUNION f0 f1 c+ b0 b1 f2 * / ! c==> c/\ cHAS_SIZE f0 b0 c/\ cHAS_SIZE f1 b1 cDISJOINT f0 f1 cHAS_SIZE * * part cUNION f0 f1 c+ b0 b1 f2
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ ((B DIFF (A INTER B)) = C), (A HAS_SIZE m), (C HAS_SIZE (n - p)) |- ((A HAS_SIZE m) /\ ((C HAS_SIZE (n - p)) /\ ((DISJOINT A) C)))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c==> cHAS_SIZE f1 f3 c==> cHAS_SIZE f2 c- f4 f5 c/\ cHAS_SIZE f1 f3 c/\ cHAS_SIZE f2 c- f4 f5 cDISJOINT f1 f2
+ ((B DIFF (A INTER B)) = C), ((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))), (A HAS_SIZE m) |- ((A UNION C) HAS_SIZE (m + (n - p)))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c==> c/\ cHAS_SIZE f1 f3 c/\ cHAS_SIZE f0 f4 cHAS_SIZE * * part cINTER f1 f0 f5 c==> cHAS_SIZE f1 f3 cHAS_SIZE * * part cUNION f1 f2 c+ f3 c- f4 f5
- (~ (B x)), ((B x) /\ ((~ (A x)) \/ (~ (B x)))) |- ((~ (B x)) /\ (B x))
T c==> c~ * f0 f1 c==> c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c/\ c~ * f0 f1 * f0 f1
- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) |- ((((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))) = T)
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 c= c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE f2 f3 cDISJOINT f0 f2 cHAS_SIZE * * part cUNION f0 f2 c+ f1 f3 cT
+ |- (!x. (((\x. (?x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x))))))) x) ==> F))
T c==> * / c? / c\/ ! c~ c= b2 f0 c/\ c= b0 f0 c/\ c= b1 f0 c~ c= b1 b0 f1 cF
+ |- ((\C. ((B DIFF (A INTER B)) = C)) (B DIFF (A INTER B)))
T * / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 * * part cDIFF f0 * * part cINTER f1 f0
- ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) |- ((~ (A x)) ==> (A x))
T c==> c/\ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 c==> c~ * f0 f1 * f0 f1
+ |- ((!x. (~ (x = a))) ==> F)
T c==> ! c~ c= b0 f0 cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) |- ((!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))) = T)
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 c= ! ! c==> c/\ cHAS_SIZE f0 b0 c/\ cHAS_SIZE f1 b1 cDISJOINT f0 f1 cHAS_SIZE * * part cUNION f0 f1 c+ b0 b1 cT
+ ((\x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))))) x') |- ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))))
T c==> * / c\/ ! c~ c= b1 f0 c/\ c= f1 f0 c/\ c= b0 f0 c~ c= b0 f1 f2 c\/ ! c~ c= b0 f0 c/\ c= f1 f0 c/\ c= f2 f0 c~ c= f2 f1
+ |- ((real3_of_triple o triple_of_real3) = I)
T c= * * part co part creal3_of_triple part ctriple_of_real3 part cI
- ((\C. ((B DIFF (A INTER B)) = C)) C) |- (((\C. ((B DIFF (A INTER B)) = C)) C) /\ (?C. ((B DIFF (A INTER B)) = C)))
T c==> * / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 f2 c/\ * / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 f2 c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b0
- (~ F), ((x = a) /\ ((x' = a) /\ (~ (x' = x)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ c= f0 f1 c/\ c= f2 f1 c~ c= f2 f0 c/\ c~ cF cF
- |- (!C. (((\C. ((B DIFF (A INTER B)) = C)) C) ==> (?C. ((B DIFF (A INTER B)) = C))))
T c==> * / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 f2 c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b0
+ |- (((!s. ((s HAS_SIZE (NUMERAL (BIT1 _0))) = (?!x. (x IN s)))) ==> ((\s. ((s HAS_SIZE (NUMERAL (BIT1 _0))) = (?!x. (x IN s)))) s)) = ((\s. ((s HAS_SIZE (NUMERAL (BIT1 _0))) = (?!x. (x IN s)))) s))
T c= c==> ! c= cHAS_SIZE b0 cNUMERAL cBIT1 c_0 c?! / cIN b1 b0 * / c= cHAS_SIZE b0 cNUMERAL cBIT1 c_0 c?! / cIN b1 b0 f0 * / c= cHAS_SIZE b0 cNUMERAL cBIT1 c_0 c?! / cIN b1 b0 f0
+ ((A UNION B) = (A UNION C)) |- ((((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION C) HAS_SIZE (m + (n - p)))) = (((A HAS_SIZE m) /\ ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p))) ==> ((A UNION B) HAS_SIZE (m + (n - p)))))
T c==> c= * * part cUNION f0 f1 * * part cUNION f0 f2 c= c==> c/\ cHAS_SIZE f0 f3 c/\ cHAS_SIZE f1 f4 cHAS_SIZE * * part cINTER f0 f1 f5 cHAS_SIZE * * part cUNION f0 f2 c+ f3 c- f4 f5 c==> c/\ cHAS_SIZE f0 f3 c/\ cHAS_SIZE f1 f4 cHAS_SIZE * * part cINTER f0 f1 f5 cHAS_SIZE * * part cUNION f0 f1 c+ f3 c- f4 f5
+ ((A x) /\ (B x)) |- (((A x) ==> F) = F)
T c==> c/\ * f0 f1 * f2 f1 c= c==> * f0 f1 cF cF
- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) |- (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))))
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 ! ! c==> c/\ cHAS_SIZE f0 b0 c/\ cHAS_SIZE f1 b1 cDISJOINT f0 f1 cHAS_SIZE * * part cUNION f0 f1 c+ b0 b1
+ ((B DIFF (A INTER B)) = C), (A HAS_SIZE m) |- ((C HAS_SIZE (n - p)) ==> ((A UNION C) HAS_SIZE (m + (n - p))))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c==> cHAS_SIZE f1 f3 c==> cHAS_SIZE f2 c- f4 f5 cHAS_SIZE * * part cUNION f1 f2 c+ f3 c- f4 f5
- (~ F), (~ (B x)), ((A x) /\ (B x)) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ * f2 f1 * f0 f1 c/\ c~ cF cF
- (~ (A x)), ((B x) /\ ((~ (A x)) \/ (~ (B x)))), (((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))) |- ((~ (A x)) /\ F)
T c==> c~ * f0 f1 c==> c/\ * f2 f1 c\/ c~ * f0 f1 c~ * f2 f1 c==> c/\ c/\ c~ * f0 f1 c~ * f2 f1 c\/ * f0 f1 c/\ * f2 f1 c\/ c~ * f0 f1 c~ * f2 f1 c/\ c~ * f0 f1 cF
- |- ((!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))))) = T)
T c= ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cT
+ |- ((?x. (?x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x))))))) ==> F)
T c==> c? / c? / c\/ ! c~ c= b2 f0 c/\ c= b0 f0 c/\ c= b1 f0 c~ c= b1 b0 cF
+ |- (((!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))))) ==> ((\t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))))) t)) = ((\t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))))) t))
T c= c==> ! ! ! c==> c/\ cHAS_SIZE f0 b1 c/\ cHAS_SIZE b0 b2 cDISJOINT f0 b0 cHAS_SIZE * * part cUNION f0 b0 c+ b1 b2 * / ! ! c==> c/\ cHAS_SIZE f0 b1 c/\ cHAS_SIZE b0 b2 cDISJOINT f0 b0 cHAS_SIZE * * part cUNION f0 b0 c+ b1 b2 f1 * / ! ! c==> c/\ cHAS_SIZE f0 b1 c/\ cHAS_SIZE b0 b2 cDISJOINT f0 b0 cHAS_SIZE * * part cUNION f0 b0 c+ b1 b2 f1
- |- (((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) = (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))))))
T c= c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0
+ (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))), ((A x) ==> F), ((B x) ==> F) |- F
T c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c==> c==> * f0 f1 cF c==> c==> * f2 f1 cF cF
- ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F), (((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) |- (((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) /\ ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))
T c==> c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c==> c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c/\ c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
+ (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) |- (~ (A x))
T c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c~ * f0 f1
+ |- ((triple_of_real3 o real3_of_triple) = I)
T c= * * part co part ctriple_of_real3 part creal3_of_triple part cI
- (A x), (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) |- F
T c==> * f0 f1 c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 cF
- |- (((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) = (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x))))))))
T c= c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0
+ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))) |- (~ (a = a))
T c==> c/\ c= f0 f1 c/\ c= f2 f1 c~ c= f2 f0 c~ c= f1 f1
+ |- ((!x. ((x IN (A INTER (B DIFF (A INTER B)))) = (x IN EMPTY))) = ((DISJOINT A) (B DIFF (A INTER B))))
T c= ! c= cIN b0 * * part cINTER f0 * * part cDIFF f1 * * part cINTER f0 f1 cIN b0 part cEMPTY cDISJOINT f0 * * part cDIFF f1 * * part cINTER f0 f1
+ |- (((!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ (t SUBSET s))) ==> ((s DIFF t) HAS_SIZE (m - n))))))) ==> ((\s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ (t SUBSET s))) ==> ((s DIFF t) HAS_SIZE (m - n))))))) B)) = ((\s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ (t SUBSET s))) ==> ((s DIFF t) HAS_SIZE (m - n))))))) B))
T c= c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cSUBSET b1 b0 cHAS_SIZE * * part cDIFF b0 b1 c- b2 b3 * / ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cSUBSET b1 b0 cHAS_SIZE * * part cDIFF b0 b1 c- b2 b3 f0 * / ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cSUBSET b1 b0 cHAS_SIZE * * part cDIFF b0 b1 c- b2 b3 f0
- (A x), (((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))) |- F
T c==> * f0 f1 c==> c/\ c/\ c~ * f0 f1 c~ * f2 f1 c\/ * f0 f1 c/\ * f2 f1 c\/ c~ * f0 f1 c~ * f2 f1 cF
+ |- ((\y. (!z. (!x'. (!y'. (!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0))))))))))))) y)
T * / ! ! ! ! c= cdistance c, creal3_of_triple c, f0 c, b0 b1 creal3_of_triple c, b2 c, b3 b4 csqrt creal_add creal_pow creal_sub f0 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub b0 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub b1 b4 cNUMERAL cBIT0 cBIT1 c_0 f1
+ |- ((\n. ((real_le (real_abs ((real_sub ((real_div pi) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ((sum ((NUMERAL _0) .. n)) (\i. ((real_div ((real_pow (real_neg (real_of_num (NUMERAL (BIT1 _0))))) i)) (real_of_num (((NUMERAL (BIT0 (BIT1 _0))) * i) + (NUMERAL (BIT1 _0)))))))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (((NUMERAL (BIT0 (BIT1 _0))) * n) + (NUMERAL (BIT1 (BIT1 _0)))))))) n)
T * / creal_le creal_abs creal_sub creal_div cpi creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 csum * * part c.. cNUMERAL c_0 b0 / creal_div creal_pow creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1 creal_of_num c+ c* cNUMERAL cBIT0 cBIT1 c_0 b1 cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num c+ c* cNUMERAL cBIT0 cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT1 c_0 f0
- |- (((!x. (((\C. ((B DIFF (A INTER B)) = C)) x) ==> (?C. ((B DIFF (A INTER B)) = C)))) ==> ((?C. ((B DIFF (A INTER B)) = C)) ==> (?C. ((B DIFF (A INTER B)) = C)))) = ((?C. ((B DIFF (A INTER B)) = C)) ==> (?C. ((B DIFF (A INTER B)) = C))))
T c= c==> ! c==> * / c= * * part cDIFF f0 * * part cINTER f1 f0 b1 b0 c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b1 c==> c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 c==> c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b0
- (~ (B x)), ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) |- ((~ (B x)) /\ (B x))
T c==> c~ * f0 f1 c==> c/\ * f2 f1 c/\ * f0 f1 c~ c/\ * f2 f1 * f0 f1 c/\ c~ * f0 f1 * f0 f1
+ |- (((!y'. (!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0)))))))))) ==> ((\y'. (!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0)))))))))) y')) = ((\y'. (!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0)))))))))) y'))
T c= c==> ! ! c= cdistance c, creal3_of_triple c, f0 c, f1 f2 creal3_of_triple c, f3 c, b0 b1 csqrt creal_add creal_pow creal_sub f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub f1 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub f2 b1 cNUMERAL cBIT0 cBIT1 c_0 * / ! c= cdistance c, creal3_of_triple c, f0 c, f1 f2 creal3_of_triple c, f3 c, b0 b1 csqrt creal_add creal_pow creal_sub f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub f1 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub f2 b1 cNUMERAL cBIT0 cBIT1 c_0 f4 * / ! c= cdistance c, creal3_of_triple c, f0 c, f1 f2 creal3_of_triple c, f3 c, b0 b1 csqrt creal_add creal_pow creal_sub f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub f1 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub f2 b1 cNUMERAL cBIT0 cBIT1 c_0 f4
- |- ((((\C. ((B DIFF (A INTER B)) = C)) C) ==> (?C. ((B DIFF (A INTER B)) = C))) = T)
T c= c==> * / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 f2 c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 cT
+ |- (((sum ((NUMERAL _0) .. (NUMERAL _0))) f) = (f (NUMERAL _0)))
T c= csum * * part c.. cNUMERAL c_0 cNUMERAL c_0 f0 * f0 cNUMERAL c_0
+ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))), ((~ (B x)) ==> F) |- F
T c==> c/\ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 c==> c==> c~ * f2 f1 cF cF
- ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) |- (((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) /\ ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))
T c==> c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c/\ c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
- (~ F), (~ (B x)), (B x) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ cF cF
+ |- (((!n'. (((B HAS_SIZE n) /\ (((A INTER B) HAS_SIZE n') /\ ((A INTER B) SUBSET B))) ==> ((B DIFF (A INTER B)) HAS_SIZE (n - n')))) ==> ((\n'. (((B HAS_SIZE n) /\ (((A INTER B) HAS_SIZE n') /\ ((A INTER B) SUBSET B))) ==> ((B DIFF (A INTER B)) HAS_SIZE (n - n')))) p)) = ((\n'. (((B HAS_SIZE n) /\ (((A INTER B) HAS_SIZE n') /\ ((A INTER B) SUBSET B))) ==> ((B DIFF (A INTER B)) HAS_SIZE (n - n')))) p))
T c= c==> ! c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE * * part cINTER f2 f0 b0 cSUBSET * * part cINTER f2 f0 f0 cHAS_SIZE * * part cDIFF f0 * * part cINTER f2 f0 c- f1 b0 * / c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE * * part cINTER f2 f0 b0 cSUBSET * * part cINTER f2 f0 f0 cHAS_SIZE * * part cDIFF f0 * * part cINTER f2 f0 c- f1 b0 f3 * / c==> c/\ cHAS_SIZE f0 f1 c/\ cHAS_SIZE * * part cINTER f2 f0 b0 cSUBSET * * part cINTER f2 f0 f0 cHAS_SIZE * * part cDIFF f0 * * part cINTER f2 f0 c- f1 b0 f3
- |- ((((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) = ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))
T c= c==> c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
+ |- ((\s. ((s HAS_SIZE (NUMERAL (BIT1 _0))) = (?!x. (x IN s)))) s)
T * / c= cHAS_SIZE b0 cNUMERAL cBIT1 c_0 c?! / cIN b1 b0 f0
- (~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) |- F
T c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
- ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F), (((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) |- ((((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) /\ ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))
T c==> c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c==> c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c/\ c==> c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
+ |- ((x IN EMPTY) = F)
T c= cIN f0 part cEMPTY cF
- |- (((!B. (!A. ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F))) ==> ((\B. (!A. ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F))) B)) = ((\B. (!A. ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F))) B))
T c= c==> ! ! c==> c~ ! c==> c/\ * b1 b2 * b0 b2 * b0 b2 cF * / ! c==> c~ ! c==> c/\ * b1 b2 * b0 b2 * b0 b2 cF f0 * / ! c==> c~ ! c==> c/\ * b1 b2 * b0 b2 * b0 b2 cF f0
- ((\C. ((B DIFF (A INTER B)) = C)) C) |- ((((B DIFF (A INTER B)) = C) ==> (?C. ((B DIFF (A INTER B)) = C))) = (?C. ((B DIFF (A INTER B)) = C)))
T c==> * / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 f2 c= c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 c? / c= * * part cDIFF f0 * * part cINTER f1 f0 b0
- ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) |- ((((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) ==> ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))
T c==> c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c==> c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
+ ((B x) /\ ((~ (A x)) \/ (~ (B x)))) |- (((B x) ==> F) = F)
T c==> c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c= c==> * f0 f1 cF cF
+ |- (((!x'. (!y'. (!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0))))))))))) ==> ((\x'. (!y'. (!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0))))))))))) x')) = ((\x'. (!y'. (!z'. ((distance ((real3_of_triple (x , (y , z))) , (real3_of_triple (x' , (y' , z'))))) = (sqrt ((real_add ((real_pow ((real_sub x) x')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow ((real_sub y) y')) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow ((real_sub z) z')) (NUMERAL (BIT0 (BIT1 _0))))))))))) x'))
T c= c==> ! ! ! c= cdistance c, creal3_of_triple c, f0 c, f1 f2 creal3_of_triple c, b0 c, b1 b2 csqrt creal_add creal_pow creal_sub f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub f1 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub f2 b2 cNUMERAL cBIT0 cBIT1 c_0 * / ! ! c= cdistance c, creal3_of_triple c, f0 c, f1 f2 creal3_of_triple c, b0 c, b1 b2 csqrt creal_add creal_pow creal_sub f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub f1 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub f2 b2 cNUMERAL cBIT0 cBIT1 c_0 f3 * / ! ! c= cdistance c, creal3_of_triple c, f0 c, f1 f2 creal3_of_triple c, b0 c, b1 b2 csqrt creal_add creal_pow creal_sub f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_sub f1 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow creal_sub f2 b2 cNUMERAL cBIT0 cBIT1 c_0 f3
+ ((\x. (?x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x))))))) x) |- (((?x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))))) ==> F) = F)
T c==> * / c? / c\/ ! c~ c= b2 f0 c/\ c= b0 f0 c/\ c= b1 f0 c~ c= b1 b0 f1 c= c==> c? / c\/ ! c~ c= b1 f0 c/\ c= f1 f0 c/\ c= b0 f0 c~ c= b0 f1 cF cF
+ |- (((~ (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x))))))) ==> F) = (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))
T c= c==> c~ c= c\/ * f0 f1 * f2 f1 c\/ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1 cF c= c\/ * f0 f1 * f2 f1 c\/ * f0 f1 c/\ * f2 f1 c~ c/\ * f0 f1 * f2 f1
+ (((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))) |- ((A x) ==> F)
T c==> c/\ c/\ c~ * f0 f1 c~ * f2 f1 c\/ * f0 f1 c/\ * f2 f1 c\/ c~ * f0 f1 c~ * f2 f1 c==> * f0 f1 cF
- (~ F), ((A x) /\ (B x)), (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ * f0 f1 * f2 f1 c==> c/\ c\/ * f0 f1 * f2 f1 c/\ c~ * f0 f1 c\/ c~ * f2 f1 c/\ * f0 f1 * f2 f1 c/\ c~ cF cF
- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) |- ((!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))))) = T)
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 c= ! ! ! c==> c/\ cHAS_SIZE f0 b1 c/\ cHAS_SIZE b0 b2 cDISJOINT f0 b0 cHAS_SIZE * * part cUNION f0 b0 c+ b1 b2 cT
+ (~ (B x)), (((A x) \/ (B x)) /\ ((~ (A x)) /\ ((~ (B x)) \/ ((A x) /\ (B x))))) |- ((~ (B x)) /\ F)
T c==> c~ * f0 f1 c==> c/\ c\/ * f2 f1 * f0 f1 c/\ c~ * f2 f1 c\/ c~ * f0 f1 c/\ * f2 f1 * f0 f1 c/\ c~ * f0 f1 cF
+ ((B DIFF (A INTER B)) = C), ((B HAS_SIZE n) /\ ((A INTER B) HAS_SIZE p)), (A HAS_SIZE m) |- ((A UNION C) HAS_SIZE (m + (n - p)))
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 c==> c/\ cHAS_SIZE f0 f3 cHAS_SIZE * * part cINTER f1 f0 f4 c==> cHAS_SIZE f1 f5 cHAS_SIZE * * part cUNION f1 f2 c+ f5 c- f3 f4
- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) |- (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 ! ! ! c==> c/\ cHAS_SIZE f0 b1 c/\ cHAS_SIZE b0 b2 cDISJOINT f0 b0 cHAS_SIZE * * part cUNION f0 b0 c+ b1 b2
- |- ((?x'. ((x' = a) /\ (?x'. ((x' = a) /\ (~ (x' = x)))))) = ((?x. (x = a)) /\ (?x'. ((x' = a) /\ (~ (x' = x))))))
T c= c? / c/\ c= b0 f0 c? / c/\ c= b1 f0 c~ c= b1 f1 c/\ c? / c= b0 f0 c? / c/\ c= b0 f0 c~ c= b0 f1
- |- ((((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F)) = ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F))
T c= c==> c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF
+ (B HAS_SIZE n) |- ((B HAS_SIZE n) = T)
T c==> cHAS_SIZE f0 f1 c= cHAS_SIZE f0 f1 cT
- (~ F), ((B x) /\ ((~ (A x)) \/ (~ (B x)))), (((~ (A x)) /\ (~ (B x))) /\ ((A x) \/ ((B x) /\ ((~ (A x)) \/ (~ (B x)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c/\ c/\ c~ * f2 f1 c~ * f0 f1 c\/ * f2 f1 c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c/\ c~ cF cF
- (~ (!x. (((A x) /\ (B x)) ==> (B x)))) |- F
T c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF
- |- ((!x. (P x)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- (((!A. ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F)) ==> ((\A. ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F)) A)) = ((\A. ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F)) A))
T c= c==> ! c==> c~ ! c==> c/\ * b0 b1 * f0 b1 * f0 b1 cF * / c==> c~ ! c==> c/\ * b0 b1 * f0 b1 * f0 b1 cF f1 * / c==> c~ ! c==> c/\ * b0 b1 * f0 b1 * f0 b1 cF f1
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) |- ((((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) ==> ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))
T c==> c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c==> c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
- ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F), (((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F)) |- ((((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F) ==> ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F)) /\ ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F))
T c==> c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c==> c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c/\ c==> c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF c==> c~ ! c==> c/\ * f0 b0 * f1 b0 * f1 b0 cF
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- (((!B. (!A. ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))) ==> ((\B. (!A. ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))) B)) = ((\B. (!A. ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))) B))
T c= c==> ! ! c==> c~ ! c~ c/\ * b1 b2 c/\ * b0 b2 c~ c/\ * b1 b2 * b0 b2 cF * / ! c==> c~ ! c~ c/\ * b1 b2 c/\ * b0 b2 c~ c/\ * b1 b2 * b0 b2 cF f0 * / ! c==> c~ ! c~ c/\ * b1 b2 c/\ * b0 b2 c~ c/\ * b1 b2 * b0 b2 cF f0
- (?x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))))) |- ((?x'. ((!x. (~ (x = a))) \/ ((x = a) /\ ((x' = a) /\ (~ (x' = x)))))) /\ F)
T c==> c? / c\/ ! c~ c= b1 f0 c/\ c= f1 f0 c/\ c= b0 f0 c~ c= b0 f1 c/\ c? / c\/ ! c~ c= b1 f0 c/\ c= f1 f0 c/\ c= b0 f0 c~ c= b0 f1 cF
- |- ((\V. ((packing V) = (!u. (!v. (((u IN V) /\ ((v IN V) /\ ((real_lt (distance (u , v))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (u = v)))))) V)
T * / c= cpacking b0 ! ! c==> c/\ cIN b1 b0 c/\ cIN b2 b0 creal_lt cdistance c, b1 b2 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= b1 b2 f0
- (B x) |- ((~ (B x)) ==> (B x))
T c==> * f0 f1 c==> c~ * f0 f1 * f0 f1
- |- (((!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) ==> (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n)))))))) = (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))))
T c= c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3
- (~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) |- ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) /\ F)
T c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 c/\ c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
- |- (((~ (?!x. (x = a))) ==> F) ==> ((~ (?!x. (x = a))) ==> F))
T c==> c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF
- |- ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- |- (((!A. ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) ==> ((\A. ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) A)) = ((\A. ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) A))
T c= c==> ! c==> c~ ! c~ c/\ * b0 b1 c/\ * f0 b1 c~ c/\ * b0 b1 * f0 b1 cF * / c==> c~ ! c~ c/\ * b0 b1 c/\ * f0 b1 c~ c/\ * b0 b1 * f0 b1 cF f1 * / c==> c~ ! c~ c/\ * b0 b1 c/\ * f0 b1 c~ c/\ * b0 b1 * f0 b1 cF f1
- |- ((?x'. ((x = a) /\ (?x''. ((x'' = a) /\ (~ (x'' = x')))))) = ((x = a) /\ (?x. (?x'. ((x' = a) /\ (~ (x' = x)))))))
T c= c? / c/\ c= f0 f1 c? / c/\ c= b1 f1 c~ c= b1 b0 c/\ c= f0 f1 c? / c? / c/\ c= b1 f1 c~ c= b1 b0
- |- (((\v. (f v)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((!A. (!x. (((A x) /\ (B x)) ==> (B x)))) = T)
T c= ! ! c==> c/\ * b0 b1 * f0 b1 * f0 b1 cT
- |- (((((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) ==> (((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))) = (((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)))
T c= c==> c==> c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
- |- ((((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) ==> ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) = ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))
T c= c==> c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c= c\/ * f0 b0 * f1 b0 c\/ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
- (((~ (?!x. (x = a))) ==> F) ==> ((~ (?!x. (x = a))) ==> F)) |- ((((~ (?!x. (x = a))) ==> F) ==> ((~ (?!x. (x = a))) ==> F)) /\ (((~ (?!x. (x = a))) ==> F) ==> ((~ (?!x. (x = a))) ==> F)))
T c==> c==> c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF c/\ c==> c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF c==> c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF
- (~ (a = a)) |- ((~ (a = a)) /\ (a = a))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- ((~ (?!x. (x = a))) ==> F) |- (((~ (?!x. (x = a))) ==> F) /\ ((~ (?!x. (x = a))) ==> F))
T c==> c==> c~ c?! / c= b0 f0 cF c/\ c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF
- |- ((P /\ (?x'. (Q x'))) = (?x'. (P /\ (Q x'))))
T c= c/\ f0 c? / * f1 b0 c? / c/\ f0 * f1 b0
- ((B x) /\ ((~ (A x)) \/ (~ (B x)))), ((~ (A x)) ==> F), ((~ (B x)) ==> F) |- F
T c==> c/\ * f0 f1 c\/ c~ * f2 f1 c~ * f0 f1 c==> c==> c~ * f2 f1 cF c==> c==> c~ * f0 f1 cF cF
- ((~ (?!x. (x = a))) ==> F), (((~ (?!x. (x = a))) ==> F) ==> ((~ (?!x. (x = a))) ==> F)) |- ((((~ (?!x. (x = a))) ==> F) ==> ((~ (?!x. (x = a))) ==> F)) /\ ((~ (?!x. (x = a))) ==> F))
T c==> c==> c~ c?! / c= b0 f0 cF c==> c==> c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF c/\ c==> c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF
- ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) |- (((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F) /\ ((~ (!x. (~ ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F))
T c==> c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c/\ c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF c==> c~ ! c~ c/\ * f0 b0 c/\ * f1 b0 c~ c/\ * f0 b0 * f1 b0 cF
- |- ((\A. ((~ (!x. (((A x) \/ (B x)) = ((A x) \/ ((B x) /\ (~ ((A x) /\ (B x)))))))) ==> F)) A)
T * / c==> c~ ! c= c\/ * b0 b1 * f0 b1 c\/ * b0 b1 c/\ * f0 b1 c~ c/\ * b0 b1 * f0 b1 cF f1
- |- ((?x''. ((x' = a) /\ (~ (x'' = x)))) = ((x' = a) /\ (?x'. (~ (x' = x)))))
T c= c? / c/\ c= f0 f1 c~ c= b0 f2 c/\ c= f0 f1 c? / c~ c= b0 f2
- |- ((((~ (?!x. (x = a))) ==> F) ==> ((~ (?!x. (x = a))) ==> F)) ==> (((~ (?!x. (x = a))) ==> F) ==> ((~ (?!x. (x = a))) ==> F)))
T c==> c==> c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF c==> c==> c~ c?! / c= b0 f0 cF c==> c~ c?! / c= b0 f0 cF
- |- ((?x. ((P x) /\ Q)) = ((?x. (P x)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- (!s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) |- ((\s. (!t. (!m. (!n. (((s HAS_SIZE m) /\ ((t HAS_SIZE n) /\ ((DISJOINT s) t))) ==> ((s UNION t) HAS_SIZE (m + n))))))) s)
T c==> ! ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 * / ! ! ! c==> c/\ cHAS_SIZE b0 b2 c/\ cHAS_SIZE b1 b3 cDISJOINT b0 b1 cHAS_SIZE * * part cUNION b0 b1 c+ b2 b3 f0
- ((B DIFF (A INTER B)) = C) |- ((\C. ((B DIFF (A INTER B)) = C)) C)
T c==> c= * * part cDIFF f0 * * part cINTER f1 f0 f2 * / c= * * part cDIFF f0 * * part cINTER f1 f0 b0 f2
- |- ((\B. (!A. ((~ (!x. (((A x) /\ (B x)) ==> (B x)))) ==> F))) B)
T * / ! c==> c~ ! c==> c/\ * b1 b2 * b0 b2 * b0 b2 cF f0
- (~ (B x)), ((A x) /\ ((B x) /\ (~ ((A x) /\ (B x))))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ * f2 f1 c/\ * f0 f1 c~ c/\ * f2 f1 * f0 f1 c==> c~ cF cF
