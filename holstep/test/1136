N PATH_IMAGE_SYM
C |- (!p. (!q. ((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) ==> ((path_image ((++ p) q)) = (path_image ((++ q) p))))))
T c==> c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 c= * part cpath_image * * part c++ f0 f1 * part cpath_image * * part c++ f1 f0
D TRUTH
A |- T
T cT
D UNION_ACI
A |- (((p UNION q) = (q UNION p)) /\ ((((p UNION q) UNION r) = (p UNION (q UNION r))) /\ (((p UNION (q UNION r)) = (q UNION (p UNION r))) /\ (((p UNION p) = p) /\ ((p UNION (p UNION q)) = (p UNION q))))))
T c/\ c= * * part cUNION f0 f1 * * part cUNION f1 f0 c/\ c= * * part cUNION * * part cUNION f0 f1 f2 * * part cUNION f0 * * part cUNION f1 f2 c/\ c= * * part cUNION f0 * * part cUNION f1 f2 * * part cUNION f1 * * part cUNION f0 f2 c/\ c= * * part cUNION f0 f0 f0 c= * * part cUNION f0 * * part cUNION f0 f1 * * part cUNION f0 f1
D PATH_IMAGE_JOIN
A |- (!g1. (!g2. (((pathfinish g1) = (pathstart g2)) ==> ((path_image ((++ g1) g2)) = ((path_image g1) UNION (path_image g2))))))
T c==> c= cpathfinish f0 cpathstart f1 c= * part cpath_image * * part c++ f0 f1 * * part cUNION * part cpath_image f0 * part cpath_image f1
- |- (((p UNION q) UNION r) = (p UNION (q UNION r)))
T c= * * part cUNION * * part cUNION f0 f1 f2 * * part cUNION f0 * * part cUNION f1 f2
- (((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) |- (T = ((pathfinish p) = (pathstart q)))
T c==> c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 c= cT c= cpathfinish f0 cpathstart f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- ((((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) ==> (((path_image ((++ p) q)) = (path_image ((++ q) p))) = T)) ==> (((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) ==> ((path_image ((++ p) q)) = (path_image ((++ q) p)))) = ((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) ==> T))) = (((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) ==> ((path_image ((++ p) q)) = (path_image ((++ q) p)))) = ((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) ==> T)))
T c= c==> c==> c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 c= c= * part cpath_image * * part c++ f0 f1 * part cpath_image * * part c++ f1 f0 cT c= c==> c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 c= * part cpath_image * * part c++ f0 f1 * part cpath_image * * part c++ f1 f0 c==> c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 cT c= c==> c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 c= * part cpath_image * * part c++ f0 f1 * part cpath_image * * part c++ f1 f0 c==> c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 cT
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\q'. (((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) = p') ==> ((p' ==> (((path_image ((++ p) q)) = (path_image ((++ q) p))) = q')) ==> (((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) ==> ((path_image ((++ p) q)) = (path_image ((++ q) p)))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 f2 c==> c==> f2 c= c= * part cpath_image * * part c++ f0 f1 * part cpath_image * * part c++ f1 f0 b0 c= c==> c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 c= * part cpath_image * * part c++ f0 f1 * part cpath_image * * part c++ f1 f0 c==> f2 b0 f3
+ |- ((!q. t) = t)
T c= ! f0 f0
+ |- ((\g1. (!g2. (((pathfinish g1) = (pathstart g2)) ==> ((path_image ((++ g1) g2)) = ((path_image g1) UNION (path_image g2)))))) g1)
T * / ! c==> c= cpathfinish b0 cpathstart b1 c= * part cpath_image * * part c++ b0 b1 * * part cUNION * part cpath_image b0 * part cpath_image b1 f0
+ |- (((!q'. (((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) = p') ==> ((p' ==> (((path_image ((++ p) q)) = (path_image ((++ q) p))) = q')) ==> (((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) ==> ((path_image ((++ p) q)) = (path_image ((++ q) p)))) = (p' ==> q'))))) ==> ((\q'. (((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) = p') ==> ((p' ==> (((path_image ((++ p) q)) = (path_image ((++ q) p))) = q')) ==> (((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) ==> ((path_image ((++ p) q)) = (path_image ((++ q) p)))) = (p' ==> q'))))) q')) = ((\q'. (((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) = p') ==> ((p' ==> (((path_image ((++ p) q)) = (path_image ((++ q) p))) = q')) ==> (((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) ==> ((path_image ((++ p) q)) = (path_image ((++ q) p)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 f2 c==> c==> f2 c= c= * part cpath_image * * part c++ f0 f1 * part cpath_image * * part c++ f1 f0 b0 c= c==> c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 c= * part cpath_image * * part c++ f0 f1 * part cpath_image * * part c++ f1 f0 c==> f2 b0 * / c==> c= c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 f2 c==> c==> f2 c= c= * part cpath_image * * part c++ f0 f1 * part cpath_image * * part c++ f1 f0 b0 c= c==> c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 c= * part cpath_image * * part c++ f0 f1 * part cpath_image * * part c++ f1 f0 c==> f2 b0 f3 * / c==> c= c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 f2 c==> c==> f2 c= c= * part cpath_image * * part c++ f0 f1 * part cpath_image * * part c++ f1 f0 b0 c= c==> c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 c= * part cpath_image * * part c++ f0 f1 * part cpath_image * * part c++ f1 f0 c==> f2 b0 f3
- |- (((p UNION p) = p) /\ ((p UNION (p UNION q)) = (p UNION q)))
T c/\ c= * * part cUNION f0 f0 f0 c= * * part cUNION f0 * * part cUNION f0 f1 * * part cUNION f0 f1
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- (((!p'. (!q'. (((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) = p') ==> ((p' ==> (((path_image ((++ p) q)) = (path_image ((++ q) p))) = q')) ==> (((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) ==> ((path_image ((++ p) q)) = (path_image ((++ q) p)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) = p') ==> ((p' ==> (((path_image ((++ p) q)) = (path_image ((++ q) p))) = q')) ==> (((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) ==> ((path_image ((++ p) q)) = (path_image ((++ q) p)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) = p') ==> ((p' ==> (((path_image ((++ p) q)) = (path_image ((++ q) p))) = q')) ==> (((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) ==> ((path_image ((++ p) q)) = (path_image ((++ q) p)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 b0 c==> c==> b0 c= c= * part cpath_image * * part c++ f0 f1 * part cpath_image * * part c++ f1 f0 b1 c= c==> c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 c= * part cpath_image * * part c++ f0 f1 * part cpath_image * * part c++ f1 f0 c==> b0 b1 * / ! c==> c= c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 b0 c==> c==> b0 c= c= * part cpath_image * * part c++ f0 f1 * part cpath_image * * part c++ f1 f0 b1 c= c==> c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 c= * part cpath_image * * part c++ f0 f1 * part cpath_image * * part c++ f1 f0 c==> b0 b1 f2 * / ! c==> c= c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 b0 c==> c==> b0 c= c= * part cpath_image * * part c++ f0 f1 * part cpath_image * * part c++ f1 f0 b1 c= c==> c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 c= * part cpath_image * * part c++ f0 f1 * part cpath_image * * part c++ f1 f0 c==> b0 b1 f2
+ |- ((p UNION q) = (q UNION p))
T c= * * part cUNION f0 f1 * * part cUNION f1 f0
+ |- (T = (!p. (!q. ((((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) ==> ((path_image ((++ p) q)) = (path_image ((++ q) p)))))))
T c= cT ! ! c==> c/\ c= cpathfinish b0 cpathstart b1 c= cpathfinish b1 cpathstart b0 c= * part cpath_image * * part c++ b0 b1 * part cpath_image * * part c++ b1 b0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- ((pathfinish g1) = (pathstart g2)) |- (((pathfinish g1) = (pathstart g2)) /\ ((path_image ((++ g1) g2)) = ((path_image g1) UNION (path_image g2))))
T c==> c= cpathfinish f0 cpathstart f1 c/\ c= cpathfinish f0 cpathstart f1 c= * part cpath_image * * part c++ f0 f1 * * part cUNION * part cpath_image f0 * part cpath_image f1
- |- (((p UNION (q UNION r)) = (q UNION (p UNION r))) /\ (((p UNION p) = p) /\ ((p UNION (p UNION q)) = (p UNION q))))
T c/\ c= * * part cUNION f0 * * part cUNION f1 f2 * * part cUNION f1 * * part cUNION f0 f2 c/\ c= * * part cUNION f0 f0 f0 c= * * part cUNION f0 * * part cUNION f0 f1 * * part cUNION f0 f1
+ (((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) |- ((((pathfinish q) = (pathstart p)) ==> ((path_image ((++ q) p)) = ((path_image q) UNION (path_image p)))) = ((path_image ((++ q) p)) = ((path_image q) UNION (path_image p))))
T c==> c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 c= c==> c= cpathfinish f1 cpathstart f0 c= * part cpath_image * * part c++ f1 f0 * * part cUNION * part cpath_image f1 * part cpath_image f0 c= * part cpath_image * * part c++ f1 f0 * * part cUNION * part cpath_image f1 * part cpath_image f0
- |- ((p UNION (q UNION r)) = (q UNION (p UNION r)))
T c= * * part cUNION f0 * * part cUNION f1 f2 * * part cUNION f1 * * part cUNION f0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (((pathfinish p) = (pathstart q)) /\ ((pathfinish q) = (pathstart p))) |- (T = ((pathfinish q) = (pathstart p)))
T c==> c/\ c= cpathfinish f0 cpathstart f1 c= cpathfinish f1 cpathstart f0 c= cT c= cpathfinish f1 cpathstart f0
- |- ((p UNION p) = p)
T c= * * part cUNION f0 f0 f0
- |- ((p UNION (p UNION q)) = (p UNION q))
T c= * * part cUNION f0 * * part cUNION f0 f1 * * part cUNION f0 f1
- |- ((((p UNION q) UNION r) = (p UNION (q UNION r))) /\ (((p UNION (q UNION r)) = (q UNION (p UNION r))) /\ (((p UNION p) = p) /\ ((p UNION (p UNION q)) = (p UNION q)))))
T c/\ c= * * part cUNION * * part cUNION f0 f1 f2 * * part cUNION f0 * * part cUNION f1 f2 c/\ c= * * part cUNION f0 * * part cUNION f1 f2 * * part cUNION f1 * * part cUNION f0 f2 c/\ c= * * part cUNION f0 f0 f0 c= * * part cUNION f0 * * part cUNION f0 f1 * * part cUNION f0 f1
