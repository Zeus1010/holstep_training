N COMPLEX_TAYLOR_MVT
C |- (!f. (!w. (!z. (!n. ((!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))))))))))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= cRe * * f3 cNUMERAL c_0 f1 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 f0 ccomplex_div ccomplex_pow cvector_sub f1 f0 b1 cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f2 cCx creal_of_num cFACT f2 cvector_sub f1 f0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D EQ_ADD_RCANCEL
A |- (!m. (!n. (!p. (((m + p) = (n + p)) = (m = n)))))
T c= c= c+ f0 f1 c+ f2 f1 c= f0 f2
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D ADD_SUB
A |- (!m. (!n. (((m + n) - n) = m)))
T c= c- c+ f0 f1 f1 f0
D Ssrnat.factS
A |- (!n. ((FACT (SUC n)) = ((SUC n) * (FACT n))))
T c= cFACT cSUC f0 c* cSUC f0 cFACT f0
D Ssrnat.fact0
A |- ((FACT (NUMERAL _0)) = (NUMERAL (BIT1 _0)))
T c= cFACT cNUMERAL c_0 cNUMERAL cBIT1 c_0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D ARITH_LE
A |- ((!m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) /\ (((_0 <= _0) = T) /\ ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))))))
T c/\ ! ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 c/\ c= c<= c_0 c_0 cT c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D real_div
A |- (!x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y)))))
T c= creal_div f0 f1 creal_mul f0 creal_inv f1
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_POS
A |- (!n. ((real_le (real_of_num (NUMERAL _0))) (real_of_num n)))
T creal_le creal_of_num cNUMERAL c_0 creal_of_num f0
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_OF_NUM_SUC
A |- (!n. (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (SUC n))))
T c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cSUC f0
D REAL_MUL_AC
A |- ((((real_mul m) n) = ((real_mul n) m)) /\ ((((real_mul ((real_mul m) n)) p) = ((real_mul m) ((real_mul n) p))) /\ (((real_mul m) ((real_mul n) p)) = ((real_mul n) ((real_mul m) p)))))
T c/\ c= creal_mul f0 f1 creal_mul f1 f0 c/\ c= creal_mul creal_mul f0 f1 f2 creal_mul f0 creal_mul f1 f2 c= creal_mul f0 creal_mul f1 f2 creal_mul f1 creal_mul f0 f2
D REAL_EQ_SUB_RADD
A |- (!x. (!y. (!z. ((((real_sub x) y) = z) = (x = ((real_add z) y))))))
T c= c= creal_sub f0 f1 f2 c= f0 creal_add f2 f1
D REAL_INV_INV
A |- (!x. ((real_inv (real_inv x)) = x))
T c= creal_inv creal_inv f0 f0
D REAL_INV_NEG
A |- (!x. ((real_inv (real_neg x)) = (real_neg (real_inv x))))
T c= creal_inv creal_neg f0 creal_neg creal_inv f0
D REAL_INV_MUL
A |- (!x. (!y. ((real_inv ((real_mul x) y)) = ((real_mul (real_inv x)) (real_inv y)))))
T c= creal_inv creal_mul f0 f1 creal_mul creal_inv f0 creal_inv f1
D REAL_INV_DIV
A |- (!x. (!y. ((real_inv ((real_div x) y)) = ((real_div y) x))))
T c= creal_inv creal_div f0 f1 creal_div f1 f0
D DECIMAL
A |- (!x. (!y. (((DECIMAL x) y) = ((real_div (real_of_num x)) (real_of_num y)))))
T c= cDECIMAL f0 f1 creal_div creal_of_num f0 creal_of_num f1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_LE
A |- (!x. (!y. ((~ ((int_le x) y)) = ((int_lt y) x))))
T c= c~ cint_le f0 f1 cint_lt f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D FINITE_NUMSEG
A |- (!m. (!n. (FINITE (m .. n))))
T cFINITE * * part c.. f0 f1
D IN_NUMSEG
A |- (!m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n))))))
T c= cIN f0 * * part c.. f1 f2 c/\ c<= f1 f0 c<= f0 f2
D NUMSEG_OFFSET_IMAGE
A |- (!m. (!n. (!p. (((m + p) .. (n + p)) = ((IMAGE (\i. (i + p))) (m .. n))))))
T c= * * part c.. c+ f0 f1 c+ f2 f1 * * part cIMAGE / c+ b0 f1 * * part c.. f0 f2
D SUM_EQ
A |- (!f. (!g. (!s. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) f) = ((sum s) g))))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 f1 csum f0 f2
D SUM_EQ_0_NUMSEG
A |- (!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0)))))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_sub
A |- (!x. (!y. (((vector_sub x) y) = (lambdai. ((real_sub (x $ i)) (y $ i))))))
T c= cvector_sub f0 f1 clambda / creal_sub c$ f0 b0 c$ f1 b0
D VSUM_0
A |- (((vsum s) (\x. (vec (NUMERAL _0)))) = (vec (NUMERAL _0)))
T c= cvsum f0 / cvec cNUMERAL c_0 cvec cNUMERAL c_0
D VSUM_IMAGE
A |- (!f. (!g. (!s. (((FINITE s) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f x) = (f y)))) ==> (x = y))))) ==> (((vsum ((IMAGE f) s)) g) = ((vsum s) (g o f)))))))
T c==> c/\ cFINITE f0 ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c= cvsum * * part cIMAGE f1 f0 f2 cvsum f0 * * part co f2 f1
D VSUM_EQ
A |- (!f. (!g. (!s. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((vsum s) f) = ((vsum s) g))))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= cvsum f0 f1 cvsum f0 f2
D VSUM_CLAUSES_NUMSEG
A |- ((!m. (((vsum (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))))) /\ (!m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))))
T c/\ ! c= cvsum * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 cvec cNUMERAL c_0 ! ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0
D VSUM_ADD_NUMSEG
A |- (!f. (!g. (!m. (!n. (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)))))))
T c= cvsum * * part c.. f0 f1 / cvector_add * f2 b0 * f3 b0 cvector_add cvsum * * part c.. f0 f1 f2 cvsum * * part c.. f0 f1 f3
D VSUM_CLAUSES_LEFT
A |- (!f. (!m. (!n. ((m <= n) ==> (((vsum (m .. n)) f) = ((vector_add (f m)) ((vsum ((m + (NUMERAL (BIT1 _0))) .. n)) f)))))))
T c==> c<= f0 f1 c= cvsum * * part c.. f0 f1 f2 cvector_add * f2 f0 cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 f2
D CX_DEF
A |- (!a. ((Cx a) = (complex (a , (real_of_num (NUMERAL _0))))))
T c= cCx f0 ccomplex c, f0 creal_of_num cNUMERAL c_0
D complex_div
A |- (!w. (!z. (((complex_div w) z) = ((complex_mul w) (complex_inv z)))))
T c= ccomplex_div f0 f1 ccomplex_mul f0 ccomplex_inv f1
D complex_pow
A |- ((((complex_pow x) (NUMERAL _0)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (!n. (((complex_pow x) (SUC n)) = ((complex_mul x) ((complex_pow x) n)))))
T c/\ c= ccomplex_pow f0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ! c= ccomplex_pow f0 cSUC b0 ccomplex_mul f0 ccomplex_pow f0 b0
D RE
A |- ((Re (complex (x , y))) = x)
T c= cRe ccomplex c, f0 f1 f0
D IM
A |- ((Im (complex (x , y))) = y)
T c= cIm ccomplex c, f0 f1 f1
D COMPLEX_EQ
A |- (!w. (!z. ((w = z) = (((Re w) = (Re z)) /\ ((Im w) = (Im z))))))
T c= c= f0 f1 c/\ c= cRe f0 cRe f1 c= cIm f0 cIm f1
D COMPLEX_ADD_ASSOC
A |- (!x. (!y. (!z. (((vector_add x) ((vector_add y) z)) = ((vector_add ((vector_add x) y)) z)))))
T c= cvector_add f0 cvector_add f1 f2 cvector_add cvector_add f0 f1 f2
D COMPLEX_ADD_LINV
A |- (!x. (((vector_add (vector_neg x)) x) = (Cx (real_of_num (NUMERAL _0)))))
T c= cvector_add cvector_neg f0 f0 cCx creal_of_num cNUMERAL c_0
D COMPLEX_MUL_ASSOC
A |- (!x. (!y. (!z. (((complex_mul x) ((complex_mul y) z)) = ((complex_mul ((complex_mul x) y)) z)))))
T c= ccomplex_mul f0 ccomplex_mul f1 f2 ccomplex_mul ccomplex_mul f0 f1 f2
D COMPLEX_MUL_LID
A |- (!x. (((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) x) = x))
T c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D COMPLEX_ADD_RID
A |- (!x. (((vector_add x) (Cx (real_of_num (NUMERAL _0)))) = x))
T c= cvector_add f0 cCx creal_of_num cNUMERAL c_0 f0
D COMPLEX_MUL_RID
A |- (!x. (((complex_mul x) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = x))
T c= ccomplex_mul f0 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
D COMPLEX_EQ_ADD_LCANCEL
A |- (!x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z)))))
T c= c= cvector_add f0 f1 cvector_add f0 f2 c= f1 f2
D COMPLEX_MUL_RZERO
A |- (!x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0)))))
T c= ccomplex_mul f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
D COMPLEX_MUL_LZERO
A |- (!x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0)))))
T c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 f0 cCx creal_of_num cNUMERAL c_0
D COMPLEX_MUL_RNEG
A |- (!x. (!y. (((complex_mul x) (vector_neg y)) = (vector_neg ((complex_mul x) y)))))
T c= ccomplex_mul f0 cvector_neg f1 cvector_neg ccomplex_mul f0 f1
D COMPLEX_MUL_LNEG
A |- (!x. (!y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y)))))
T c= ccomplex_mul cvector_neg f0 f1 cvector_neg ccomplex_mul f0 f1
D COMPLEX_NEG_0
A |- ((vector_neg (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0))))
T c= cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
D COMPLEX_SUB_REFL
A |- (!x. (((vector_sub x) x) = (Cx (real_of_num (NUMERAL _0)))))
T c= cvector_sub f0 f0 cCx creal_of_num cNUMERAL c_0
D COMPLEX_SUB_0
A |- (!x. (!y. ((((vector_sub x) y) = (Cx (real_of_num (NUMERAL _0)))) = (x = y))))
T c= c= cvector_sub f0 f1 cCx creal_of_num cNUMERAL c_0 c= f0 f1
D COMPLEX_MUL_RINV
A |- (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0
D CX_INJ
A |- (!x. (!y. (((Cx x) = (Cx y)) = (x = y))))
T c= c= cCx f0 cCx f1 c= f0 f1
D CX_ADD
A |- (!x. (!y. ((Cx ((real_add x) y)) = ((vector_add (Cx x)) (Cx y)))))
T c= cCx creal_add f0 f1 cvector_add cCx f0 cCx f1
D CX_INV
A |- (!x. ((Cx (real_inv x)) = (complex_inv (Cx x))))
T c= cCx creal_inv f0 ccomplex_inv cCx f0
D CX_MUL
A |- (!x. (!y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y)))))
T c= cCx creal_mul f0 f1 ccomplex_mul cCx f0 cCx f1
D RE_CX
A |- (!x. ((Re (Cx x)) = x))
T c= cRe cCx f0 f0
D RE_ADD
A |- (!x. (!y. ((Re ((vector_add x) y)) = ((real_add (Re x)) (Re y)))))
T c= cRe cvector_add f0 f1 creal_add cRe f0 cRe f1
D COMPLEX_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((vector_add x) ((vector_add y) z)) = ((vector_add ((vector_add x) y)) z))))) /\ ((!x. (!y. (((vector_add x) y) = ((vector_add y) x)))) /\ ((!x. (((vector_add (Cx (real_of_num (NUMERAL _0)))) x) = x)) /\ ((!x. (!y. (!z. (((complex_mul x) ((complex_mul y) z)) = ((complex_mul ((complex_mul x) y)) z))))) /\ ((!x. (!y. (((complex_mul x) y) = ((complex_mul y) x)))) /\ ((!x. (((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) x) = x)) /\ ((!x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) /\ ((!x. (!y. (!z. (((complex_mul x) ((vector_add y) z)) = ((vector_add ((complex_mul x) y)) ((complex_mul x) z)))))) /\ ((!x. (((complex_pow x) (NUMERAL _0)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) /\ (!x. (!n. (((complex_pow x) (SUC n)) = ((complex_mul x) ((complex_pow x) n))))))))))))))
T c/\ ! ! ! c= cvector_add b0 cvector_add b1 b2 cvector_add cvector_add b0 b1 b2 c/\ ! ! c= cvector_add b0 b1 cvector_add b1 b0 c/\ ! c= cvector_add cCx creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= ccomplex_mul b0 ccomplex_mul b1 b2 ccomplex_mul ccomplex_mul b0 b1 b2 c/\ ! ! c= ccomplex_mul b0 b1 ccomplex_mul b1 b0 c/\ ! c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 c/\ ! ! ! c= ccomplex_mul b0 cvector_add b1 b2 cvector_add ccomplex_mul b0 b1 ccomplex_mul b0 b2 c/\ ! c= ccomplex_pow b0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ! ! c= ccomplex_pow b0 cSUC b1 ccomplex_mul b0 ccomplex_pow b0 b1
D COMPLEX_POLY_NEG_CLAUSES
A |- ((!x. ((vector_neg x) = ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) x))) /\ (!x. (!y. (((vector_sub x) y) = ((vector_add x) ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) y))))))
T c/\ ! c= cvector_neg b0 ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= cvector_sub b0 b1 cvector_add b0 ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D COMPLEX_INV_MUL
A |- (!w. (!z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z)))))
T c= ccomplex_inv ccomplex_mul f0 f1 ccomplex_mul ccomplex_inv f0 ccomplex_inv f1
D COMPLEX_DIV_1
A |- (!z. (((complex_div z) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = z))
T c= ccomplex_div f0 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
D COMPLEX_VEC_0
A |- ((vec (NUMERAL _0)) = (Cx (real_of_num (NUMERAL _0))))
T c= cvec cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
D RE_VSUM
A |- (!f. (!s. ((FINITE s) ==> ((Re ((vsum s) f)) = ((sum s) (\x. (Re (f x))))))))
T c==> cFINITE f0 c= cRe cvsum f0 f1 csum f0 / cRe * f1 b0
D HAS_COMPLEX_DERIVATIVE_CDIV_AT
A |- (!f. (!f'. (!c. (!x. (!s. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. ((complex_div (f x)) c))) ((complex_div f') c)) (at x))))))))
T c==> chas_complex_derivative f0 f1 cat f2 chas_complex_derivative / ccomplex_div * f0 b0 f3 ccomplex_div f1 f3 cat f2
D HAS_COMPLEX_DERIVATIVE_ID
A |- (!net. (((has_complex_derivative (\x. x)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) net))
T chas_complex_derivative / b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
D HAS_COMPLEX_DERIVATIVE_CONST
A |- (!c. (!net. (((has_complex_derivative (\x. c)) (Cx (real_of_num (NUMERAL _0)))) net)))
T chas_complex_derivative / f0 cCx creal_of_num cNUMERAL c_0 f1
D HAS_COMPLEX_DERIVATIVE_SUB
A |- (!f. (!f'. (!g. (!g'. (!net. (((((has_complex_derivative f) f') net) /\ (((has_complex_derivative g) g') net)) ==> (((has_complex_derivative (\x. ((vector_sub (f x)) (g x)))) ((vector_sub f') g')) net)))))))
T c==> c/\ chas_complex_derivative f0 f1 f2 chas_complex_derivative f3 f4 f2 chas_complex_derivative / cvector_sub * f0 b0 * f3 b0 cvector_sub f1 f4 f2
D HAS_COMPLEX_DERIVATIVE_MUL_AT
A |- (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))))))
T c==> c/\ chas_complex_derivative f0 f1 cat f2 chas_complex_derivative f3 f4 cat f2 chas_complex_derivative / ccomplex_mul * f0 b0 * f3 b0 cvector_add ccomplex_mul * f0 f2 f4 ccomplex_mul f1 * f3 f2 cat f2
D HAS_COMPLEX_DERIVATIVE_POW_AT
A |- (!f. (!f'. (!x. (!n. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. ((complex_pow (f x)) n))) ((complex_mul (Cx (real_of_num n))) ((complex_mul ((complex_pow (f x)) (n - (NUMERAL (BIT1 _0))))) f'))) (at x)))))))
T c==> chas_complex_derivative f0 f1 cat f2 chas_complex_derivative / ccomplex_pow * f0 b0 f3 ccomplex_mul cCx creal_of_num f3 ccomplex_mul ccomplex_pow * f0 f2 c- f3 cNUMERAL cBIT1 c_0 f1 cat f2
D HAS_COMPLEX_DERIVATIVE_VSUM
A |- (!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net)))))
T c==> c/\ cFINITE f0 ! c==> cIN b0 f0 chas_complex_derivative * f1 b0 * f2 b0 f3 chas_complex_derivative / cvsum f0 / * * f1 b1 b0 cvsum f0 f2 f3
D COMPLEX_MVT_LINE
A |- (!f. (!f'. (!w. (!z. ((!u. ((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (((has_complex_derivative f) (f' u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re (f z))) (Re (f w))) = (Re ((complex_mul (f' u)) ((vector_sub z) w)))))))))))
T c==> ! c==> cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL chas_complex_derivative f2 * f3 b0 cat b0 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= creal_sub cRe * f2 f1 cRe * f2 f0 cRe ccomplex_mul * f3 b0 cvector_sub f1 f0
- ((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) |- ((!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))
T c==> c/\ chas_complex_derivative f0 f1 cat f2 chas_complex_derivative f3 f4 cat f2 c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 chas_complex_derivative / ccomplex_mul * f0 b0 * f3 b0 cvector_add ccomplex_mul * f0 f2 f4 ccomplex_mul f1 * f3 f2 cat f2
+ |- ((((has_complex_derivative (\u. z)) f') (at u)) ==> ((((has_complex_derivative (\u. u)) g') (at u)) ==> (((has_complex_derivative (\u. ((vector_sub z) u))) ((vector_sub f') g')) (at u))))
T c==> chas_complex_derivative / f0 f1 cat f2 c==> chas_complex_derivative / b0 f3 cat f2 chas_complex_derivative / cvector_sub f0 b0 cvector_sub f1 f3 cat f2
+ |- ((((?a. (?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F) ==> (((~ q) = (?a. (?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> q)) = (((~ q) = (?a. (?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> q))
T c= c==> c==> c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c= c~ f0 c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c= c~ f0 c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((((\u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) u) ==> F) = T)
T c= c==> * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b1 ccomplex_mul ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF cT
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- ((!f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))) = T)
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 c= ! ! ! c==> c/\ chas_complex_derivative f0 b0 cat b2 chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / ccomplex_mul * f0 b3 * b1 b3 cvector_add ccomplex_mul * f0 b2 f1 ccomplex_mul b0 * b1 b2 cat b2 cT
- |- ((\m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 f0
- |- (((!n. (((BIT0 n) + _0) = (BIT0 n))) ==> ((\n. (((BIT0 n) + _0) = (BIT0 n))) n)) = ((\n. (((BIT0 n) + _0) = (BIT0 n))) n))
T c= c==> ! c= c+ cBIT0 b0 c_0 cBIT0 b0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0 * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0
+ |- ((!f. (((vector_add (f (NUMERAL _0))) ((vsum ((SUC (NUMERAL _0)) .. n)) f)) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (SUC n)))) (((COND ((SUC (NUMERAL _0)) <= (SUC n))) ((vector_add ((vsum ((SUC (NUMERAL _0)) .. n)) f)) (f (SUC n)))) ((vsum ((SUC (NUMERAL _0)) .. n)) f))))) = (!f. (((vector_add (f (NUMERAL _0))) ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) f)) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (n + (NUMERAL (BIT1 _0)))))) ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. (n + (NUMERAL (BIT1 _0))))) f)))))
T c= ! c= cvector_add * b0 cNUMERAL c_0 cvsum * * part c.. cSUC cNUMERAL c_0 f0 b0 cvector_add cvector_sub * b0 cNUMERAL c_0 * b0 cSUC f0 cCOND c<= cSUC cNUMERAL c_0 cSUC f0 cvector_add cvsum * * part c.. cSUC cNUMERAL c_0 f0 b0 * b0 cSUC f0 cvsum * * part c.. cSUC cNUMERAL c_0 f0 b0 ! c= cvector_add * b0 cNUMERAL c_0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 cvector_add cvector_sub * b0 cNUMERAL c_0 * b0 c+ f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c+ f0 cNUMERAL cBIT1 c_0 b0
+ (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) |- ((((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ F)
T c==> c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((Re x) = (real_of_num (NUMERAL _0))), (((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x)))) |- (((Re x) = (real_of_num (NUMERAL _0))) /\ (y = ((real_add y) (Re x))))
T c==> c= cRe f0 creal_of_num cNUMERAL c_0 c==> c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0 c/\ c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0
+ |- ((((~ (!a. (!b. (!c. (((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c))) = ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c))))))) = (?a. (?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> (!a. (!b. (!c. (((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c))) = ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c))))))) = (!a. (!b. (!c. (((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c))) = ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))))))
T c= c==> c= c~ ! ! ! c= ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 ! ! ! c= ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 ! ! ! c= ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2
+ |- (((((has_complex_derivative (\u. u)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) (at u)) ==> (((has_complex_derivative (\u. ((vector_sub z) u))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (at u))) = (((has_complex_derivative (\u. ((vector_sub z) u))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (at u)))
T c= c==> chas_complex_derivative / b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cat f0 chas_complex_derivative / cvector_sub f1 b0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cat f0 chas_complex_derivative / cvector_sub f1 b0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cat f0
- |- ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 f0 c= cvector_add ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f3 f2 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f3 f2 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4
+ |- (((!x. (((\f. (?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) x) ==> F)) ==> ((?f. (?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F)) = ((?f. (?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b1 cSUC b4 b3 ccomplex_mul ccomplex_pow cvector_sub b2 b3 b4 ccomplex_inv cCx creal_of_num cFACT b4 ccomplex_mul * * b1 cSUC b4 b3 ccomplex_mul ccomplex_pow cvector_sub b2 b3 b4 ccomplex_inv cCx creal_of_num cFACT b4 b5 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))
T c= cEXP cBIT0 f0 cBIT0 f1 c* cEXP cBIT0 f0 f1 cEXP cBIT0 f0 f1
- |- (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) ==> ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m)) = ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m))
T c= c==> ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0 * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0
- |- ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))
T c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ ((\z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) z) |- (((?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F) = F)
T c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
- |- (((!n. (((BIT1 n) * _0) = _0)) ==> ((\n. (((BIT1 n) * _0) = _0)) n)) = ((\n. (((BIT1 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT1 b0 c_0 c_0 * / c= c* cBIT1 b0 c_0 c_0 f0 * / c= c* cBIT1 b0 c_0 c_0 f0
+ |- ((!n. ((!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))))))) = T)
T c= ! c==> ! ! c==> c/\ cIN b2 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b1 b0 chas_complex_derivative * f2 b1 * * f2 c+ b1 cNUMERAL cBIT1 c_0 b2 cat b2 c? / c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c= cRe * * f2 cNUMERAL c_0 f1 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 b0 / ccomplex_mul * * f2 b2 f0 ccomplex_div ccomplex_pow cvector_sub f1 f0 b2 cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul * * f2 c+ b0 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b0 cCx creal_of_num cFACT b0 cvector_sub f1 f0 cT
+ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))) |- (((real_ge (real_of_num n)) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num n))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_num n)) (real_of_num (NUMERAL _0)))))
T c==> c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_of_num f0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((\y. (!z. ((((real_sub x) y) = z) = (x = ((real_add y) z))))) y)
T * / ! c= c= creal_sub f0 b0 b1 c= f0 creal_add b0 b1 f1
- |- (((BIT0 m) = (BIT1 n)) = F)
T c= c= cBIT0 f0 cBIT1 f1 cF
- |- (((!n. (((BIT0 n) * _0) = _0)) ==> ((\n. (((BIT0 n) * _0) = _0)) n)) = ((\n. (((BIT0 n) * _0) = _0)) n))
T c= c==> ! c= c* cBIT0 b0 c_0 c_0 * / c= c* cBIT0 b0 c_0 c_0 f0 * / c= c* cBIT0 b0 c_0 c_0 f0
+ |- (((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) = ((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (y = x)))) ==> ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (y = x))) ==> ((y = x) = q')) ==> ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) ==> (y = x)) = (((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (y = x))) ==> q')))) = ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (y = x))) ==> ((y = x) = q')) ==> ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) ==> (y = x)) = (((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (y = x))) ==> q'))))
T c= c==> c= c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b0 cNUMERAL cBIT1 c_0 f2 * / c+ b0 cNUMERAL cBIT1 c_0 f0 c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= f2 f0 c==> c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= f2 f0 c= c= f2 f0 f3 c= c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b0 cNUMERAL cBIT1 c_0 f2 * / c+ b0 cNUMERAL cBIT1 c_0 f0 c= f2 f0 c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= f2 f0 f3 c==> c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= f2 f0 c= c= f2 f0 f3 c= c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b0 cNUMERAL cBIT1 c_0 f2 * / c+ b0 cNUMERAL cBIT1 c_0 f0 c= f2 f0 c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= f2 f0 f3
- |- (((!n. ((BIT1 n) > _0)) ==> ((\n. ((BIT1 n) > _0)) n)) = ((\n. ((BIT1 n) > _0)) n))
T c= c==> ! c> cBIT1 b0 c_0 * / c> cBIT1 b0 c_0 f0 * / c> cBIT1 b0 c_0 f0
- |- (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))
T c= c+ cBIT0 f0 cBIT1 f1 cBIT1 c+ f0 f1
+ |- ((\p. (((IMAGE (\i. (i + p))) (m .. n)) = ((m + p) .. (n + p)))) p)
T * / c= * * part cIMAGE / c+ b1 b0 * * part c.. f0 f1 * * part c.. c+ f0 b0 c+ f1 b0 f2
+ |- (T = (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= (NUMERAL _0)) /\ ((NUMERAL _0) <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) (NUMERAL _0)) = (real_of_num (NUMERAL _0)))))
T c= cT c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cNUMERAL c_0 c<= cNUMERAL c_0 f0 c= * / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((\n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) n)
T * / c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 f3
+ |- ((SUC _0) = (BIT1 _0))
T c= cSUC c_0 cBIT1 c_0
- |- (((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 f0
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))), (i <= n), (u IN (closed_segment ((CONS (w , z)) NIL))) |- ((((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i))))) (at u)) = ((((has_complex_derivative (\x. ((f i) x))) ((f (i + (NUMERAL (BIT1 _0)))) u)) (at u)) /\ (((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i))))) (at u))))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> c<= f4 f2 c==> cIN f5 * part cclosed_segment cCONS c, f0 f1 cNIL c= chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f1 b0 f4 cCx creal_of_num cFACT f4 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f4 ccomplex_pow cvector_sub f1 f5 c- f4 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f4 cat f5 c/\ chas_complex_derivative / * * f3 f4 b0 * * f3 c+ f4 cNUMERAL cBIT1 c_0 f5 cat f5 chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f1 b0 f4 cCx creal_of_num cFACT f4 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f4 ccomplex_pow cvector_sub f1 f5 c- f4 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f4 cat f5
+ |- (((!n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) ==> ((\n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) n)) = ((\n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) n))
T c= c==> ! c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 * / c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 f3 * / c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 f3
- |- ((_0 <= (BIT0 n)) = T)
T c= c<= c_0 cBIT0 f0 cT
- |- (((BIT1 m) = (BIT0 n)) = F)
T c= c= cBIT1 f0 cBIT0 f1 cF
- (!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))), (!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) |- (((sum (m .. n)) f) = (real_of_num (NUMERAL _0)))
T c==> ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- |- ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))))))
T c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- |- (((PRE _0) = _0) /\ ((!n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) /\ (!n. ((PRE (BIT1 n)) = (BIT0 n)))))
T c/\ c= cPRE c_0 c_0 c/\ ! c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 ! c= cPRE cBIT1 b0 cBIT0 b0
- |- (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n))))
T c= c* cBIT0 f0 cBIT0 f1 cBIT0 cBIT0 c* f0 f1
+ (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) |- ((Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))) |- ((((Re x) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) (Re x)) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) (Re x)) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 c= c==> c= cRe f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 cRe f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 cRe f0 creal_of_num cNUMERAL c_0
+ |- (((!x. (((\b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) x) ==> F)) ==> ((?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F)) = ((?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul b1 ccomplex_mul ccomplex_inv f0 b2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul b0 ccomplex_mul ccomplex_inv f0 b1 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul b0 ccomplex_mul ccomplex_inv f0 b1 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (!x. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) ==> ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))))
T c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c= cRe ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0 cRe ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0
- |- ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))
T c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT1 m) < (BIT0 n)) = (m < n))
T c= c< cBIT1 f0 cBIT0 f1 c< f0 f1
- |- ((\b. (convex (closed_segment ((CONS (a , b)) NIL)))) b)
T * / cconvex * part cclosed_segment cCONS c, f0 b0 cNIL f1
+ |- ((\g. (!m. (!n. (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))))))) g)
T * / ! ! c= cvector_add cvsum * * part c.. b1 b2 f0 cvsum * * part c.. b1 b2 b0 cvsum * * part c.. b1 b2 / cvector_add * f0 b3 * b0 b3 f1
+ |- ((((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((complex_mul ((f (SUC n)) u)) ((complex_div ((complex_mul (vector_neg (Cx ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))))) ((complex_pow ((vector_sub z) u)) n))) ((complex_mul (Cx ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT n)))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_div ((complex_mul (vector_neg (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))) ((complex_pow ((vector_sub z) u)) i))) ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i))))))) ((complex_mul ((f (SUC i)) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) = (((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((complex_mul ((f (SUC n)) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (SUC n))))) ((complex_pow ((vector_sub z) u)) n))) (Cx (real_of_num ((SUC n) * (FACT n)))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (SUC i))))) ((complex_pow ((vector_sub z) u)) i))) (Cx (real_of_num ((SUC i) * (FACT i))))))) ((complex_mul ((f (SUC i)) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))))
T c= c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_add creal_of_num f3 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cvector_sub f2 f1 f3 ccomplex_mul cCx creal_add creal_of_num f3 creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f3 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 cSUC b0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cvector_sub f2 f1 b0 ccomplex_mul cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT f3 c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num cSUC f3 ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num c* cSUC f3 cFACT f3 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 cSUC b0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num cSUC b0 ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num c* cSUC b0 cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT f3
- |- ((\m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) m)
T * / ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
- |- (((!x. ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> (((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))) = ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) ==> (((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))))) = (((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))))
T c= c==> ! c==> cIN b0 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c= ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 c= cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 c= cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0
- (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) (Re x)) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 cRe f0 creal_of_num cNUMERAL c_0
- ((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (y = x))) |- ((x IN ((NUMERAL _0) .. n)) = T)
T c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= f2 f0 c= cIN f0 * * part c.. cNUMERAL c_0 f1 cT
+ |- (((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((complex_mul ((f (NUMERAL _0)) z)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))))) = ((Re ((f (NUMERAL _0)) z)) = (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))))))
T c= c= cRe * * f0 cNUMERAL c_0 f1 cRe cvector_add ccomplex_mul * * f0 cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 / ccomplex_mul * * f0 b0 f1 ccomplex_div ccomplex_pow cvector_sub f1 f1 b0 cCx creal_of_num cFACT b0 c= cRe * * f0 cNUMERAL c_0 f1 cRe cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f0 b0 f1 ccomplex_div ccomplex_pow cvector_sub f1 f1 b0 cCx creal_of_num cFACT b0
- |- (((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) ==> ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m)) = ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m))
T c= c==> ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0 * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0
- |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num n))) (real_of_num (NUMERAL _0)))
T creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- (!g. ((!i. (((a <= i) /\ (i <= b)) ==> ((f i) = (g i)))) ==> (((vsum (a .. b)) (\i. (f i))) = ((vsum (a .. b)) g))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= cvsum * * part c.. f0 f1 / * f2 b0 cvsum * * part c.. f0 f1 f3
+ |- (((!f. (!g. (!m. (!n. (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i))))))))) ==> ((\f. (!g. (!m. (!n. (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i))))))))) f)) = ((\f. (!g. (!m. (!n. (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i))))))))) f))
T c= c==> ! ! ! ! c= cvector_add cvsum * * part c.. b2 b3 b0 cvsum * * part c.. b2 b3 b1 cvsum * * part c.. b2 b3 / cvector_add * b0 b4 * b1 b4 * / ! ! ! c= cvector_add cvsum * * part c.. b2 b3 b0 cvsum * * part c.. b2 b3 b1 cvsum * * part c.. b2 b3 / cvector_add * b0 b4 * b1 b4 f0 * / ! ! ! c= cvector_add cvsum * * part c.. b2 b3 b0 cvsum * * part c.. b2 b3 b1 cvsum * * part c.. b2 b3 / cvector_add * b0 b4 * b1 b4 f0
- |- ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))
T c= cEXP c_0 cBIT0 f0 c* cEXP c_0 f0 cEXP c_0 f0
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ (((NUMERAL _0) <= i) /\ (i <= n)) |- ((((NUMERAL _0) <= i) /\ (i <= n)) /\ (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c/\ c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c= cvector_add ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 cvector_add ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))), (u IN (closed_segment ((CONS (w , z)) NIL))) |- (((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> cIN f4 * part cclosed_segment cCONS c, f0 f1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f2 / cvector_add ccomplex_mul * * f3 b0 f4 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f1 f4 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f3 c+ b0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f1 f4 b0 cCx creal_of_num cFACT b0 cat f4
- |- (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))
T c= cEXP cNUMERAL f0 cNUMERAL f1 cNUMERAL cEXP f0 f1
- |- (((!g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) ==> ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g)) = ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 f0 c= cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 f0 c= cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4 * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 f0 c= cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4
- |- (((!n. ((SUC (BIT0 n)) = (BIT1 n))) ==> ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n)) = ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n))
T c= c==> ! c= cSUC cBIT0 b0 cBIT1 b0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0 * / c= cSUC cBIT0 b0 cBIT1 b0 f0
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
- |- ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F)))
T c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
+ |- ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((complex_mul ((f (NUMERAL _0)) z)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))))))
T c= cRe * * f0 cNUMERAL c_0 f1 cRe cvector_add ccomplex_mul * * f0 cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 / ccomplex_mul * * f0 b0 f1 ccomplex_div ccomplex_pow cvector_sub f1 f1 b0 cCx creal_of_num cFACT b0
- |- (((!n. ((ODD (BIT0 n)) = F)) ==> ((\n. ((ODD (BIT0 n)) = F)) n)) = ((\n. ((ODD (BIT0 n)) = F)) n))
T c= c==> ! c= cODD cBIT0 b0 cF * / c= cODD cBIT0 b0 cF f0 * / c= cODD cBIT0 b0 cF f0
+ |- ((\s. ((FINITE s) ==> ((Re ((vsum s) f)) = ((sum s) (\x. (Re (f x))))))) s)
T * / c==> cFINITE b0 c= cRe cvsum b0 f0 csum b0 / cRe * f0 b1 f1
+ |- ((((has_complex_derivative (\u. ((vector_sub z) u))) f') (at u)) ==> (((has_complex_derivative (\u. ((complex_pow ((vector_sub z) u)) i))) ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) f'))) (at u)))
T c==> chas_complex_derivative / cvector_sub f0 b0 f1 cat f2 chas_complex_derivative / ccomplex_pow cvector_sub f0 b0 f3 ccomplex_mul cCx creal_of_num f3 ccomplex_mul ccomplex_pow cvector_sub f0 f2 c- f3 cNUMERAL cBIT1 c_0 f1 cat f2
- (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (Re x)) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0
+ |- (((!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))) ==> ((\n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))) n)) = ((\n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))) n))
T c= c==> ! c= cvsum * * part c.. f0 cSUC b0 f1 cCOND c<= f0 cSUC b0 cvector_add cvsum * * part c.. f0 b0 f1 * f1 cSUC b0 cvsum * * part c.. f0 b0 f1 * / c= cvsum * * part c.. f0 cSUC b0 f1 cCOND c<= f0 cSUC b0 cvector_add cvsum * * part c.. f0 b0 f1 * f1 cSUC b0 cvsum * * part c.. f0 b0 f1 f2 * / c= cvsum * * part c.. f0 cSUC b0 f1 cCOND c<= f0 cSUC b0 cvector_add cvsum * * part c.. f0 b0 f1 * f1 cSUC b0 cvsum * * part c.. f0 b0 f1 f2
+ |- (((!g'. (!f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))))) ==> ((\g'. (!f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))))) g')) = ((\g'. (!f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))))) g'))
T c= c==> ! ! ! ! c==> c/\ chas_complex_derivative f0 b1 cat b3 chas_complex_derivative b2 b0 cat b3 chas_complex_derivative / ccomplex_mul * f0 b4 * b2 b4 cvector_add ccomplex_mul * f0 b3 b0 ccomplex_mul b1 * b2 b3 cat b3 * / ! ! ! c==> c/\ chas_complex_derivative f0 b1 cat b3 chas_complex_derivative b2 b0 cat b3 chas_complex_derivative / ccomplex_mul * f0 b4 * b2 b4 cvector_add ccomplex_mul * f0 b3 b0 ccomplex_mul b1 * b2 b3 cat b3 f1 * / ! ! ! c==> c/\ chas_complex_derivative f0 b1 cat b3 chas_complex_derivative b2 b0 cat b3 chas_complex_derivative / ccomplex_mul * f0 b4 * b2 b4 cvector_add ccomplex_mul * f0 b3 b0 ccomplex_mul b1 * b2 b3 cat b3 f1
- |- ((\m. (((BIT1 m) EXP _0) = (BIT1 _0))) m)
T * / c= cEXP cBIT1 b0 c_0 cBIT1 c_0 f0
- |- (((!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) ==> ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n)) = ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n))
T c= c==> ! c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1 * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
+ ((f y) = (f x)) |- ((f x) = (f y))
T c==> c= * f0 f1 * f0 f2 c= * f0 f2 * f0 f1
- |- ((((((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) = F) ==> (~ (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) = (~ (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c= c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c~ c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 f3 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((!a. (!b. (convex (closed_segment ((CONS (a , b)) NIL))))) ==> ((\a. (!b. (convex (closed_segment ((CONS (a , b)) NIL))))) a)) = ((\a. (!b. (convex (closed_segment ((CONS (a , b)) NIL))))) a))
T c= c==> ! ! cconvex * part cclosed_segment cCONS c, b0 b1 cNIL * / ! cconvex * part cclosed_segment cCONS c, b0 b1 cNIL f0 * / ! cconvex * part cclosed_segment cCONS c, b0 b1 cNIL f0
- |- (((!n. ((_0 * (BIT0 n)) = _0)) ==> ((\n. ((_0 * (BIT0 n)) = _0)) n)) = ((\n. ((_0 * (BIT0 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT0 b0 c_0 * / c= c* c_0 cBIT0 b0 c_0 f0 * / c= c* c_0 cBIT0 b0 c_0 f0
- |- (((!n. ((EVEN (BIT1 n)) = F)) ==> ((\n. ((EVEN (BIT1 n)) = F)) n)) = ((\n. ((EVEN (BIT1 n)) = F)) n))
T c= c==> ! c= cEVEN cBIT1 b0 cF * / c= cEVEN cBIT1 b0 cF f0 * / c= cEVEN cBIT1 b0 cF f0
+ |- ((!w. (!z. (!n. ((!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))))))))) = T)
T c= ! ! ! c==> ! ! c==> c/\ cIN b4 * part cclosed_segment cCONS c, b0 b1 cNIL c<= b3 b2 chas_complex_derivative * f0 b3 * * f0 c+ b3 cNUMERAL cBIT1 c_0 b4 cat b4 c? / c/\ cIN b3 * part cclosed_segment cCONS c, b0 b1 cNIL c= cRe * * f0 cNUMERAL c_0 b1 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 b2 / ccomplex_mul * * f0 b4 b0 ccomplex_div ccomplex_pow cvector_sub b1 b0 b4 cCx creal_of_num cFACT b4 ccomplex_mul ccomplex_mul * * f0 c+ b2 cNUMERAL cBIT1 c_0 b3 ccomplex_div ccomplex_pow cvector_sub b1 b3 b2 cCx creal_of_num cFACT b2 cvector_sub b1 b0 cT
- |- (((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) ==> ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m)) = ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m))
T c= c==> ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0 * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) ==> ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m)) = ((\m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))) m))
T c= c==> ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0 * / ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0
- |- ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n)
T * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1
- (x IN ((NUMERAL _0) .. n)) |- ((x IN ((NUMERAL _0) .. n)) /\ (((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x)))))) = ((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x))))))))
T c==> cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c= cvector_add ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f4 f3 c- f0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0 cvector_add ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f4 f3 c- f0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0
+ |- ((\y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z)))) y)
T * / ! c= c= cvector_add f0 b0 cvector_add f0 b1 c= b0 b1 f1
- ((Re x) = (real_of_num (NUMERAL _0))) |- ((((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x)))) ==> (y = ((real_add y) (Re x))))
T c==> c= cRe f0 creal_of_num cNUMERAL c_0 c==> c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0 c= f1 creal_add f1 cRe f0
+ |- ((\m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))) m)
T * / ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0 f1
- |- ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n)
T * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1
- |- ((\n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) n)
T * / c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 f0
- |- (((!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) ==> (!m. (!n. (!f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0)))))))) = (!m. (!n. (!f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))))
T c= c==> ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 ! ! ! c==> ! c==> c/\ c<= b0 b3 c<= b3 b1 c= * b2 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b0 b1 b2 creal_of_num cNUMERAL c_0 ! ! ! c==> ! c==> c/\ c<= b0 b3 c<= b3 b1 c= * b2 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b0 b1 b2 creal_of_num cNUMERAL c_0
- |- ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))
T c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ |- (((!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))) ==> ((\p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))) p)) = ((\p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))) p))
T c= c==> ! c= cIN b0 * * part c.. f0 f1 c/\ c<= f0 b0 c<= b0 f1 * / c= cIN b0 * * part c.. f0 f1 c/\ c<= f0 b0 c<= b0 f1 f2 * / c= cIN b0 * * part c.. f0 f1 c/\ c<= f0 b0 c<= b0 f1 f2
+ (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g))) |- (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))))
T c==> c= cvsum * * part c.. f0 f1 / cvector_add * f2 b0 * f3 b0 cvector_add cvsum * * part c.. f0 f1 f2 cvsum * * part c.. f0 f1 f3 c= cvector_add cvsum * * part c.. f0 f1 f2 cvsum * * part c.. f0 f1 f3 cvsum * * part c.. f0 f1 / cvector_add * f2 b0 * f3 b0
- |- ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))))))
T c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- (?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) /\ F)
T c==> c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul b0 ccomplex_mul ccomplex_inv f0 b1 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul b0 ccomplex_mul ccomplex_inv f0 b1 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- (((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) |- ((((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) /\ ((((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u)) = (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u))))
T c==> chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f3 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cat f3 c/\ chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f3 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cat f3 c= chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 f0 cCx creal_of_num cFACT f0 cat f3 chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 f0 cCx creal_of_num cFACT f0 cat f3
+ (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) (Re x)) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) (Re x)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) (Re x)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 cRe f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 cRe f0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 cRe f0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (Cx (real_of_num (FACT i))))) (at u)) = (((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i))))) (at u))) ==> ((((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (Cx (real_of_num (FACT i))))) (at u)) ==> (((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i))))) (at u)))) = ((((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (Cx (real_of_num (FACT i))))) (at u)) ==> (((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i))))) (at u))))
T c= c==> c= chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f0 b0 f1 cCx creal_of_num cFACT f1 ccomplex_div ccomplex_mul cCx creal_of_num f1 ccomplex_mul ccomplex_pow cvector_sub f0 f2 c- f1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f1 cat f2 chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f0 b0 f1 cCx creal_of_num cFACT f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f1 ccomplex_pow cvector_sub f0 f2 c- f1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f1 cat f2 c==> chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f0 b0 f1 cCx creal_of_num cFACT f1 ccomplex_div ccomplex_mul cCx creal_of_num f1 ccomplex_mul ccomplex_pow cvector_sub f0 f2 c- f1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f1 cat f2 chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f0 b0 f1 cCx creal_of_num cFACT f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f1 ccomplex_pow cvector_sub f0 f2 c- f1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f1 cat f2 c==> chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f0 b0 f1 cCx creal_of_num cFACT f1 ccomplex_div ccomplex_mul cCx creal_of_num f1 ccomplex_mul ccomplex_pow cvector_sub f0 f2 c- f1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f1 cat f2 chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f0 b0 f1 cCx creal_of_num cFACT f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f1 ccomplex_pow cvector_sub f0 f2 c- f1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f1 cat f2
- ((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) |- ((x <= n) = T)
T c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c= c<= f0 f1 cT
+ |- (((!w. (!z'. ((!u. ((u IN (closed_segment ((CONS (w , z')) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z')) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z'))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z') w))))))))) ==> ((\w. (!z'. ((!u. ((u IN (closed_segment ((CONS (w , z')) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z')) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z'))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z') w))))))))) w)) = ((\w. (!z'. ((!u. ((u IN (closed_segment ((CONS (w , z')) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z')) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z'))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z') w))))))))) w))
T c= c==> ! ! c==> ! c==> cIN b2 * part cclosed_segment cCONS c, b0 b1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b3 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 b3 cCx creal_of_num cFACT b3 * / ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 f0 cCx creal_of_num cFACT f0 b2 cat b2 c? / c/\ cIN b2 * part cclosed_segment cCONS c, b0 b1 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b3 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 b3 cCx creal_of_num cFACT b3 b1 cRe * / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b3 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 b3 cCx creal_of_num cFACT b3 b0 cRe ccomplex_mul * / ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 f0 cCx creal_of_num cFACT f0 b2 cvector_sub b1 b0 * / ! c==> ! c==> cIN b2 * part cclosed_segment cCONS c, b0 b1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b3 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 b3 cCx creal_of_num cFACT b3 * / ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 f0 cCx creal_of_num cFACT f0 b2 cat b2 c? / c/\ cIN b2 * part cclosed_segment cCONS c, b0 b1 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b3 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 b3 cCx creal_of_num cFACT b3 b1 cRe * / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b3 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 b3 cCx creal_of_num cFACT b3 b0 cRe ccomplex_mul * / ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 f0 cCx creal_of_num cFACT f0 b2 cvector_sub b1 b0 f3 * / ! c==> ! c==> cIN b2 * part cclosed_segment cCONS c, b0 b1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b3 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 b3 cCx creal_of_num cFACT b3 * / ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 f0 cCx creal_of_num cFACT f0 b2 cat b2 c? / c/\ cIN b2 * part cclosed_segment cCONS c, b0 b1 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b3 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 b3 cCx creal_of_num cFACT b3 b1 cRe * / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b3 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 b3 cCx creal_of_num cFACT b3 b0 cRe ccomplex_mul * / ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 f0 cCx creal_of_num cFACT f0 b2 cvector_sub b1 b0 f3
- |- ((_0 < _0) = F)
T c= c< c_0 c_0 cF
+ ((\u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) u) |- (((\u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) u) /\ F)
T c==> * / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ * / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
- |- (((!n. (((BIT1 n) < _0) = F)) ==> ((\n. (((BIT1 n) < _0) = F)) n)) = ((\n. (((BIT1 n) < _0) = F)) n))
T c= c==> ! c= c< cBIT1 b0 c_0 cF * / c= c< cBIT1 b0 c_0 cF f0 * / c= c< cBIT1 b0 c_0 cF f0
- |- ((_0 + (BIT0 n)) = (BIT0 n))
T c= c+ c_0 cBIT0 f0 cBIT0 f0
+ |- (((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (y = x))) ==> ((y = x) = T)) ==> ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) ==> (y = x)) = (((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (y = x))) ==> T))) = ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) ==> (y = x)) = (((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (y = x))) ==> T)))
T c= c==> c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= f2 f0 c= c= f2 f0 cT c= c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b0 cNUMERAL cBIT1 c_0 f2 * / c+ b0 cNUMERAL cBIT1 c_0 f0 c= f2 f0 c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= f2 f0 cT c= c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b0 cNUMERAL cBIT1 c_0 f2 * / c+ b0 cNUMERAL cBIT1 c_0 f0 c= f2 f0 c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= f2 f0 cT
+ |- (((!x. (((\u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) x) ==> F)) ==> ((?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F)) = ((?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub f0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub f0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b1 ccomplex_mul ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b1 ccomplex_mul ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))
T c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))
T c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- ((\n. ((BIT0 n) >= _0)) n)
T * / c>= cBIT0 b0 c_0 f0
+ |- (((!z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z)))) ==> ((\z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z)))) z)) = ((\z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z)))) z))
T c= c==> ! c= ccomplex_inv ccomplex_mul f0 b0 ccomplex_mul ccomplex_inv f0 ccomplex_inv b0 * / c= ccomplex_inv ccomplex_mul f0 b0 ccomplex_mul ccomplex_inv f0 ccomplex_inv b0 f1 * / c= ccomplex_inv ccomplex_mul f0 b0 ccomplex_mul ccomplex_inv f0 ccomplex_inv b0 f1
- |- (!x. ((x IN ((NUMERAL _0) .. n)) ==> (((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x))))) = ((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x))))))))
T c==> cIN f0 * * part c.. cNUMERAL c_0 f1 c= ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0
- |- (((BIT1 n) - _0) = (BIT1 n))
T c= c- cBIT1 f0 c_0 cBIT1 f0
+ |- (((!y. (((real_add x) y) = ((real_add y) x))) ==> ((\y. (((real_add x) y) = ((real_add y) x))) y)) = ((\y. (((real_add x) y) = ((real_add y) x))) y))
T c= c==> ! c= creal_add f0 b0 creal_add b0 f0 * / c= creal_add f0 b0 creal_add b0 f0 f1 * / c= creal_add f0 b0 creal_add b0 f0 f1
+ |- ((\y. (((real_add x) y) = ((real_add y) x))) y)
T * / c= creal_add f0 b0 creal_add b0 f0 f1
+ (!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) |- ((((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net)) = T)
T c==> ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 c= c==> c/\ cFINITE f1 ! c==> cIN b0 f1 chas_complex_derivative * f2 b0 * f0 b0 f3 chas_complex_derivative / cvsum f1 / * * f2 b1 b0 cvsum f1 f0 f3 cT
+ ((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (y = x))) |- (((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (y = x))) /\ ((y = x) = T))
T c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= f2 f0 c/\ c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= f2 f0 c= c= f2 f0 cT
- (((NUMERAL _0) <= i) /\ (i <= n)) |- ((((NUMERAL _0) <= i) /\ (i <= n)) /\ (((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) = ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c/\ c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c= cvector_add ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f4 f3 c- f0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0 cvector_add ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f4 f3 c- f0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0
+ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!n. ((_0 - (BIT0 n)) = _0)) ==> ((\n. ((_0 - (BIT0 n)) = _0)) n)) = ((\n. ((_0 - (BIT0 n)) = _0)) n))
T c= c==> ! c= c- c_0 cBIT0 b0 c_0 * / c= c- c_0 cBIT0 b0 c_0 f0 * / c= c- c_0 cBIT0 b0 c_0 f0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\t. ((\x. (t x)) = t)) t)
T * / c= / * b0 b1 b0 f0
- |- ((\m. (!n. (!f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) m)
T * / ! ! c==> ! c==> c/\ c<= b0 b3 c<= b3 b1 c= * b2 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b0 b1 b2 creal_of_num cNUMERAL c_0 f0
+ |- (((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) ==> ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n)) = ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n))
T c= c==> ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0 * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- |- ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m)
T * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ |- ((((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_mul ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul (vector_neg (Cx ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) ((complex_mul (complex_inv (Cx ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))))) (complex_inv (Cx (real_of_num (FACT n)))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) ((complex_mul (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))) (complex_inv (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))) = (((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((complex_mul ((f (SUC n)) u)) ((complex_div ((complex_mul (vector_neg (Cx ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))))) ((complex_pow ((vector_sub z) u)) n))) ((complex_mul (Cx ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT n)))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_div ((complex_mul (vector_neg (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))) ((complex_pow ((vector_sub z) u)) i))) ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i))))))) ((complex_mul ((f (SUC i)) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))))
T c= c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul cvector_neg cCx creal_add creal_of_num f3 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_mul ccomplex_inv cCx creal_add creal_of_num f3 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f3 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul cvector_neg cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_mul ccomplex_inv cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_add creal_of_num f3 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cvector_sub f2 f1 f3 ccomplex_mul cCx creal_add creal_of_num f3 creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f3 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 cSUC b0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cvector_sub f2 f1 b0 ccomplex_mul cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT f3
+ |- ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))))
T c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) (Re x)) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 cRe f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (!z'. (((\z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z') ==> F))
T c==> * / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 cF
- |- (((!m. (!n. (!f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) ==> ((\m. (!n. (!f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) m)) = ((\m. (!n. (!f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) m))
T c= c==> ! ! ! c==> ! c==> c/\ c<= b0 b3 c<= b3 b1 c= * b2 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b0 b1 b2 creal_of_num cNUMERAL c_0 * / ! ! c==> ! c==> c/\ c<= b0 b3 c<= b3 b1 c= * b2 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b0 b1 b2 creal_of_num cNUMERAL c_0 f0 * / ! ! c==> ! c==> c/\ c<= b0 b3 c<= b3 b1 c= * b2 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b0 b1 b2 creal_of_num cNUMERAL c_0 f0
+ |- (((!n. (((BIT1 n) <= _0) = F)) ==> ((\n. (((BIT1 n) <= _0) = F)) n)) = ((\n. (((BIT1 n) <= _0) = F)) n))
T c= c==> ! c= c<= cBIT1 b0 c_0 cF * / c= c<= cBIT1 b0 c_0 cF f0 * / c= c<= cBIT1 b0 c_0 cF f0
- (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- ((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n)
T * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
- (!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) |- ((!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) /\ (!m. (!n. (!f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))))
T c==> ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 ! ! ! c==> ! c==> c/\ c<= b0 b3 c<= b3 b1 c= * b2 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b0 b1 b2 creal_of_num cNUMERAL c_0
+ |- ((\z'. ((!u. ((u IN (closed_segment ((CONS (w , z')) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z')) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z'))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z') w)))))))) z)
T * / c==> ! c==> cIN b1 * part cclosed_segment cCONS c, f0 b0 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f1 / ccomplex_mul * * f2 b3 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 b3 cCx creal_of_num cFACT b3 * / ccomplex_mul * * f2 c+ f1 cNUMERAL cBIT1 c_0 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 f1 cCx creal_of_num cFACT f1 b1 cat b1 c? / c/\ cIN b1 * part cclosed_segment cCONS c, f0 b0 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f1 / ccomplex_mul * * f2 b3 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 b3 cCx creal_of_num cFACT b3 b0 cRe * / cvsum * * part c.. cNUMERAL c_0 f1 / ccomplex_mul * * f2 b3 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 b3 cCx creal_of_num cFACT b3 f0 cRe ccomplex_mul * / ccomplex_mul * * f2 c+ f1 cNUMERAL cBIT1 c_0 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 f1 cCx creal_of_num cFACT f1 b1 cvector_sub b0 f0 f3
+ |- ((\w. (!z'. ((!u. ((u IN (closed_segment ((CONS (w , z')) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z')) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z'))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z') w))))))))) w)
T * / ! c==> ! c==> cIN b2 * part cclosed_segment cCONS c, b0 b1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b3 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 b3 cCx creal_of_num cFACT b3 * / ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 f0 cCx creal_of_num cFACT f0 b2 cat b2 c? / c/\ cIN b2 * part cclosed_segment cCONS c, b0 b1 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b3 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 b3 cCx creal_of_num cFACT b3 b1 cRe * / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b3 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 b3 cCx creal_of_num cFACT b3 b0 cRe ccomplex_mul * / ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 b3 ccomplex_div ccomplex_pow cvector_sub f2 b3 f0 cCx creal_of_num cFACT f0 b2 cvector_sub b1 b0 f3
- (x IN ((NUMERAL _0) .. n)) |- ((x IN ((NUMERAL _0) .. n)) /\ (((vector_add ((complex_mul ((f (SUC x)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))) ((complex_mul ((f (SUC x)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x))))))) = ((vector_add ((complex_mul ((f (SUC x)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))) ((complex_mul ((f (SUC x)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))))
T c==> cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c= cvector_add ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 cvector_add ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0
- |- ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))
T c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((\n. (~ (_0 >= (BIT1 n)))) n)
T * / c~ c>= c_0 cBIT1 b0 f0
+ |- ((\x. (((vector_add x) (Cx (real_of_num (NUMERAL _0)))) = x)) x)
T * / c= cvector_add b0 cCx creal_of_num cNUMERAL c_0 b0 f0
- |- (((!n. ((_0 + (BIT0 n)) = (BIT0 n))) ==> ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n)) = ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n))
T c= c==> ! c= c+ c_0 cBIT0 b0 cBIT0 b0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0 * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0
+ |- ((!i. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))) = (g i)))) ==> (((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))
T c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c<= b0 f0 c= ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 * f3 b0 c= cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 f3
+ ((\n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) n) |- (((?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> F) = F)
T c==> * / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 c= c==> c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- (((!c. (((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c))) = ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) ==> ((\c. (((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c))) = ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) c)) = ((\c. (((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c))) = ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) c))
T c= c==> ! c= ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 b0 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 b0 * / c= ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 b0 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 b0 f2 * / c= ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 b0 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 b0 f2
- |- (((!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) ==> ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)) = ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n))
T c= c==> ! c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1 * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
+ |- ((\x. (!y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y))))) x)
T * / ! c= ccomplex_mul cvector_neg b0 b1 cvector_neg ccomplex_mul b0 b1 f0
- |- (((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) ==> ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)) = ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m))
T c= c==> ! ! c= c= cBIT1 b0 cBIT0 b1 cF * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0 * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
+ |- (((~ q) = (?f. (?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> q)
T c==> c= c~ f0 c? / c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((\n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))) n)
T * / c= c- cBIT1 f0 cBIT0 b0 cCOND c<= b0 f0 cBIT1 c- f0 b0 c_0 f1
+ |- ((\w. (!z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z))))) w)
T * / ! c= ccomplex_inv ccomplex_mul b0 b1 ccomplex_mul ccomplex_inv b0 ccomplex_inv b1 f0
- |- ((SUC (BIT1 n)) = (BIT0 (SUC n)))
T c= cSUC cBIT1 f0 cBIT0 cSUC f0
- |- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0
- |- (((BIT1 m) < (BIT1 n)) = (m < n))
T c= c< cBIT1 f0 cBIT1 f1 c< f0 f1
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))), (u IN (closed_segment ((CONS (w , z)) NIL))) |- ((((FINITE ((NUMERAL _0) .. n)) /\ (!i. ((i IN ((NUMERAL _0) .. n)) ==> (((has_complex_derivative ((\i. (\u. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) i)) ((\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) i)) (at u))))) ==> (((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u))) = (((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> cIN f4 * part cclosed_segment cCONS c, f0 f1 cNIL c= c==> c/\ cFINITE * * part c.. cNUMERAL c_0 f2 ! c==> cIN b0 * * part c.. cNUMERAL c_0 f2 chas_complex_derivative * / / ccomplex_mul * * f3 b1 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b1 cCx creal_of_num cFACT b1 b0 * / cvector_add ccomplex_mul * * f3 b1 f4 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f1 f4 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f3 c+ b1 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f1 f4 b1 cCx creal_of_num cFACT b1 b0 cat f4 chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f2 / cvector_add ccomplex_mul * * f3 b0 f4 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f1 f4 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f3 c+ b0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f1 f4 b0 cCx creal_of_num cFACT b0 cat f4 chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f2 / cvector_add ccomplex_mul * * f3 b0 f4 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f1 f4 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f3 c+ b0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f1 f4 b0 cCx creal_of_num cFACT b0 cat f4
- |- (T = ((NUMERAL _0) <= n))
T c= cT c<= cNUMERAL c_0 f0
+ |- (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))
T c= cvsum * * part c.. f0 cSUC f1 f2 cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2
+ |- (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= (NUMERAL _0)) /\ ((NUMERAL _0) <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) (NUMERAL _0)) = (real_of_num (NUMERAL _0))))
T c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cNUMERAL c_0 c<= cNUMERAL c_0 f0 c= * / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((!x. ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> (((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))) = (g x)))) ==> (((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))
T c==> ! c==> cIN b0 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c= ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 * f3 b0 c= cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 f3
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) |- (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> ((((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x)) = T))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> c/\ cIN f4 * part cclosed_segment cCONS c, f0 f1 cNIL c<= f5 f2 c= chas_complex_derivative * f3 f5 * * f3 c+ f5 cNUMERAL cBIT1 c_0 f4 cat f4 cT
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)
T * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
- |- (((((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u))) = ((((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u))))
T c= c==> chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f3 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cat f3 chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 f0 cCx creal_of_num cFACT f0 cat f3 c==> chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f3 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cat f3 chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 f0 cCx creal_of_num cFACT f0 cat f3
- ((real_of_num (NUMERAL _0)) = ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))) |- (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0)))
T c==> c= creal_of_num cNUMERAL c_0 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) ==> ((\x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) x)) = ((\x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) x))
T c= c==> ! c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 * / c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 f0 * / c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 f0
- |- (((!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ |- (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= (SUC i)) /\ ((SUC i) <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) (SUC i)) = (real_of_num (NUMERAL _0))))
T c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC f0 c<= cSUC f0 f1 c= * / cRe ccomplex_mul * * f2 b0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 b0 cCx creal_of_num cFACT b0 cSUC f0 creal_of_num cNUMERAL c_0
+ ((\i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) i) |- (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> * / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b0 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f2 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- f2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f2 ccomplex_pow cvector_sub f0 f1 c- f2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f2 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((\z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z) |- (((((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) ==> F) = F)
T c==> * / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 c= c==> c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
- |- ((NUMERAL (NUMERAL _0)) = (NUMERAL _0))
T c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0
+ |- (((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (u IN (closed_segment ((CONS (w , z)) NIL)))) /\ ((((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w)))) ==> ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w)))))))
T c/\ c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c==> c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f4 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 f2 cRe * / cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f4 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 f1 cRe ccomplex_mul * / ccomplex_mul * * f4 c+ f3 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 f3 cCx creal_of_num cFACT f3 f0 cvector_sub f2 f1 c= cRe * * f4 cNUMERAL c_0 f2 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f4 b0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul * * f4 c+ f3 cNUMERAL cBIT1 c_0 f0 ccomplex_div ccomplex_pow cvector_sub f2 f0 f3 cCx creal_of_num cFACT f3 cvector_sub f2 f1
+ |- ((\x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0))))) x)
T * / c= ccomplex_mul b0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 f0
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) |- ((\f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) f)
T c==> ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 * / ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 f0
- |- (((!n. ((PRE (BIT1 n)) = (BIT0 n))) ==> ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n)) = ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n))
T c= c==> ! c= cPRE cBIT1 b0 cBIT0 b0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0 * / c= cPRE cBIT1 b0 cBIT0 b0 f0
+ ((\z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z') |- (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> * / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f4 c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 f4 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) = F)
T c= c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((x IN ((NUMERAL _0) .. n)) ==> (((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x))))) = ((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x))))))) = T)
T c= c==> cIN f0 * * part c.. cNUMERAL c_0 f1 c= ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0 cT
- |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
+ |- ((\x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) x)
T * / c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 f0
- |- (~ ((real_of_num (NUMERAL _0)) = ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))))
T c~ c= creal_of_num cNUMERAL c_0 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (((real_add ((f (NUMERAL _0)) $ i)) (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) = ((real_add ((real_sub ((f (NUMERAL _0)) $ i)) ((f (SUC n)) $ i))) ((real_add (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) ((f (SUC n)) $ i))))) |- ((~ (((real_add ((f (NUMERAL _0)) $ i)) (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) = ((real_add ((real_sub ((f (NUMERAL _0)) $ i)) ((f (SUC n)) $ i))) ((real_add (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) ((f (SUC n)) $ i))))) /\ F)
T c==> c~ c= creal_add c$ * f0 cNUMERAL c_0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f0 f1 creal_add creal_sub c$ * f0 cNUMERAL c_0 f1 c$ * f0 cSUC f2 f1 creal_add c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f0 f1 c$ * f0 cSUC f2 f1 c/\ c~ c= creal_add c$ * f0 cNUMERAL c_0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f0 f1 creal_add creal_sub c$ * f0 cNUMERAL c_0 f1 c$ * f0 cSUC f2 f1 creal_add c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f0 f1 c$ * f0 cSUC f2 f1 cF
+ |- (((!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) ==> ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n)) = ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n))
T c= c==> ! c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1 * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- ((\f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) f)
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 * / ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 f0
- |- (((BIT1 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT1 f0 cBIT1 f1 c<= f0 f1
- |- (((~ ((real_of_num (NUMERAL _0)) = ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_of_num (NUMERAL _0)) = ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))) = F)) = (((real_of_num (NUMERAL _0)) = ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))) = F))
T c= c==> c~ c= creal_of_num cNUMERAL c_0 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_of_num cNUMERAL c_0 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 cF c= c= creal_of_num cNUMERAL c_0 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 cF
- (?f. (?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((?f. (?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) /\ F)
T c==> c? / c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((!x. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) ==> ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))))) = (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))))))
T c= c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c<= b0 f0 c= cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0
- |- (((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) ==> ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m)) = ((\m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) m))
T c= c==> ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0 * / ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 f0
- |- (((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> (((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))) = ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) = T)
T c= c==> cIN f0 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 c= ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0 cT
- (x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) |- ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) /\ ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))))
T c==> cIN f0 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 c/\ cIN f0 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 c= cRe ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0 cRe ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0
+ |- (((!f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))) ==> ((\f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))) f')) = ((\f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))) f'))
T c= c==> ! ! ! c==> c/\ chas_complex_derivative f0 b0 cat b2 chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / ccomplex_mul * f0 b3 * b1 b3 cvector_add ccomplex_mul * f0 b2 f1 ccomplex_mul b0 * b1 b2 cat b2 * / ! ! c==> c/\ chas_complex_derivative f0 b0 cat b2 chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / ccomplex_mul * f0 b3 * b1 b3 cvector_add ccomplex_mul * f0 b2 f1 ccomplex_mul b0 * b1 b2 cat b2 f2 * / ! ! c==> c/\ chas_complex_derivative f0 b0 cat b2 chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / ccomplex_mul * f0 b3 * b1 b3 cvector_add ccomplex_mul * f0 b2 f1 ccomplex_mul b0 * b1 b2 cat b2 f2
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((EVEN _0) = T) /\ ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F))))
T c/\ c= cEVEN c_0 cT c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
- |- (((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) ==> ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m)) = ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m))
T c= c==> ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ |- ((\x. (((vector_add (vector_neg x)) x) = (Cx (real_of_num (NUMERAL _0))))) x)
T * / c= cvector_add cvector_neg b0 b0 cCx creal_of_num cNUMERAL c_0 f0
+ |- (((!i. (((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i))))) = ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) ==> ((\i. (((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i))))) = ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) i)) = ((\i. (((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i))))) = ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) i))
T c= c==> ! c= ccomplex_mul ccomplex_mul cCx creal_of_num b0 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 * / c= ccomplex_mul ccomplex_mul cCx creal_of_num b0 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 f2 * / c= ccomplex_mul ccomplex_mul cCx creal_of_num b0 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 f2
- |- ((\n. (((BIT0 m) <= (BIT0 n)) = (m <= n))) n)
T * / c= c<= cBIT0 f0 cBIT0 b0 c<= f0 b0 f1
+ |- (((!n. (!p. (((m + p) = (n + p)) = (m = n)))) ==> ((\n. (!p. (((m + p) = (n + p)) = (m = n)))) n)) = ((\n. (!p. (((m + p) = (n + p)) = (m = n)))) n))
T c= c==> ! ! c= c= c+ f0 b1 c+ b0 b1 c= f0 b0 * / ! c= c= c+ f0 b1 c+ b0 b1 c= f0 b0 f1 * / ! c= c= c+ f0 b1 c+ b0 b1 c= f0 b0 f1
- (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (Re x))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (Re x))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _2014380)) /\ ((real_le ((real_add ((real_add (real_of_int _2014380)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _2014380) ==> ((int_le (int_of_num (NUMERAL (BIT1 _0)))) ((int_add _2014380) (int_of_num (NUMERAL (BIT1 _0))))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 cint_le cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
+ |- (!b. (((\b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) b) ==> F))
T c==> * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul b0 ccomplex_mul ccomplex_inv f0 b1 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
- |- (((NUMERAL n) > (NUMERAL m)) = (n > m))
T c= c> cNUMERAL f0 cNUMERAL f1 c> f0 f1
+ (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) |- ((Cx (real_of_num (NUMERAL (BIT1 _0)))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))
T c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\g. (!s. (((FINITE s) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f y) = (f x)))) ==> (y = x))))) ==> (((vsum s) (g o f)) = ((vsum ((IMAGE f) s)) g))))) g)
T * / ! c==> c/\ cFINITE b1 ! ! c==> c/\ cIN b2 b1 c/\ cIN b3 b1 c= * f0 b3 * f0 b2 c= b3 b2 c= cvsum b1 * * part co b0 f0 cvsum * * part cIMAGE f0 b1 b0 f1
+ |- (((!p. (((m + p) = (n + p)) = (m = n))) ==> ((\p. (((m + p) = (n + p)) = (m = n))) p)) = ((\p. (((m + p) = (n + p)) = (m = n))) p))
T c= c==> ! c= c= c+ f0 b0 c+ f1 b0 c= f0 f1 * / c= c= c+ f0 b0 c+ f1 b0 c= f0 f1 f2 * / c= c= c+ f0 b0 c+ f1 b0 c= f0 f1 f2
- |- (((BIT0 m) < (BIT0 n)) = (m < n))
T c= c< cBIT0 f0 cBIT0 f1 c< f0 f1
- |- (((!g. ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x))))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) ==> ((\g. ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x))))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g)) = ((\g. ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x))))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 f0 c= ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 f0 c= ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 f0 c= ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))), (i <= n), (u IN (closed_segment ((CONS (w , z)) NIL))) |- ((((((has_complex_derivative (\u. ((f i) u))) ((f (i + (NUMERAL (BIT1 _0)))) u)) (at u)) /\ (((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i))))) (at u))) ==> (((has_complex_derivative (\u. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) (at u))) = (((has_complex_derivative (\u. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) (at u)))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> c<= f4 f2 c==> cIN f5 * part cclosed_segment cCONS c, f0 f1 cNIL c= c==> c/\ chas_complex_derivative / * * f3 f4 b0 * * f3 c+ f4 cNUMERAL cBIT1 c_0 f5 cat f5 chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f1 b0 f4 cCx creal_of_num cFACT f4 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f4 ccomplex_pow cvector_sub f1 f5 c- f4 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f4 cat f5 chas_complex_derivative / ccomplex_mul * * f3 f4 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f4 cCx creal_of_num cFACT f4 cvector_add ccomplex_mul * * f3 f4 f5 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f4 ccomplex_pow cvector_sub f1 f5 c- f4 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f4 ccomplex_mul * * f3 c+ f4 cNUMERAL cBIT1 c_0 f5 ccomplex_div ccomplex_pow cvector_sub f1 f5 f4 cCx creal_of_num cFACT f4 cat f5 chas_complex_derivative / ccomplex_mul * * f3 f4 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f4 cCx creal_of_num cFACT f4 cvector_add ccomplex_mul * * f3 f4 f5 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f4 ccomplex_pow cvector_sub f1 f5 c- f4 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f4 ccomplex_mul * * f3 c+ f4 cNUMERAL cBIT1 c_0 f5 ccomplex_div ccomplex_pow cvector_sub f1 f5 f4 cCx creal_of_num cFACT f4 cat f5
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ |- (((!b. (!c. (((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c))) = ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c))))) ==> ((\b. (!c. (((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c))) = ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c))))) b)) = ((\b. (!c. (((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c))) = ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c))))) b))
T c= c==> ! ! c= ccomplex_mul cvector_neg f0 ccomplex_mul b0 ccomplex_mul ccomplex_inv f0 b1 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul b0 b1 * / ! c= ccomplex_mul cvector_neg f0 ccomplex_mul b0 ccomplex_mul ccomplex_inv f0 b1 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul b0 b1 f1 * / ! c= ccomplex_mul cvector_neg f0 ccomplex_mul b0 ccomplex_mul ccomplex_inv f0 b1 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul b0 b1 f1
+ |- (((!g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) ==> ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g)) = ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 f0 c= cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b1 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b1 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b1 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b1 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 f0 c= cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b1 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b1 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b1 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b1 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4 * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 f0 c= cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b1 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b1 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b1 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b1 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4
- |- ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))
T c= cPRE cNUMERAL f0 cNUMERAL cPRE f0
- |- ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))) = ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))))
T c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 f0 c= ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0
- |- ((((has_complex_derivative (\u. (f u))) f') ((within (at x)) s)) ==> (((has_complex_derivative (\u. ((complex_div (f u)) c))) ((complex_div f') c)) ((within (at x)) s)))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 chas_complex_derivative / ccomplex_div * f0 b0 f4 ccomplex_div f1 f4 cwithin cat f2 f3
+ |- ((\x. (!y. (!z. (((complex_mul ((complex_mul x) y)) z) = ((complex_mul x) ((complex_mul y) z)))))) x)
T * / ! ! c= ccomplex_mul ccomplex_mul b0 b1 b2 ccomplex_mul b0 ccomplex_mul b1 b2 f0
- |- (((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))) ==> ((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))))
T c==> c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ ((real_of_num (SUC n)) = ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))) |- (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (SUC n)))
T c==> c= creal_of_num cSUC f0 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cSUC f0
+ |- ((!x. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) ==> ((Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)) = (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))))))
T c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c<= b0 f0 c= cRe * / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0 cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe * / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- ((\g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))) g)
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 * / ! ! c==> c/\ chas_complex_derivative f0 f1 cat b2 chas_complex_derivative b0 b1 cat b2 chas_complex_derivative / ccomplex_mul * f0 b3 * b0 b3 cvector_add ccomplex_mul * f0 b2 b1 ccomplex_mul f1 * b0 b2 cat b2 f2
- |- (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))
T c= c+ cBIT1 f0 cBIT1 f1 cBIT0 cSUC c+ f0 f1
- |- (((!n. ((_0 EXP (BIT1 n)) = _0)) ==> ((\n. ((_0 EXP (BIT1 n)) = _0)) n)) = ((\n. ((_0 EXP (BIT1 n)) = _0)) n))
T c= c==> ! c= cEXP c_0 cBIT1 b0 c_0 * / c= cEXP c_0 cBIT1 b0 c_0 f0 * / c= cEXP c_0 cBIT1 b0 c_0 f0
+ |- (((((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) i) = (real_of_num (NUMERAL _0)))) ==> (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= (SUC i)) /\ ((SUC i) <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) (SUC i)) = (real_of_num (NUMERAL _0))))) = T)
T c= c==> c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c= * / cRe ccomplex_mul * * f2 b0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 b0 cCx creal_of_num cFACT b0 f0 creal_of_num cNUMERAL c_0 c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC f0 c<= cSUC f0 f1 c= * / cRe ccomplex_mul * * f2 b0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 b0 cCx creal_of_num cFACT b0 cSUC f0 creal_of_num cNUMERAL c_0 cT
+ ((f o (\i. (i + (NUMERAL (BIT1 _0))))) = (\x. (f (x + (NUMERAL (BIT1 _0)))))) |- ((\x. (f (x + (NUMERAL (BIT1 _0))))) = (f o (\i. (i + (NUMERAL (BIT1 _0))))))
T c==> c= * * part co f0 / c+ b0 cNUMERAL cBIT1 c_0 / * f0 c+ b0 cNUMERAL cBIT1 c_0 c= / * f0 c+ b0 cNUMERAL cBIT1 c_0 * * part co f0 / c+ b0 cNUMERAL cBIT1 c_0
+ |- (((vector_sub (vector_neg ((complex_mul ((f (NUMERAL _0)) u)) ((complex_mul (Cx (real_of_num (NUMERAL _0)))) ((complex_mul ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))
T c= cvector_sub cvector_neg ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_mul cCx creal_of_num cNUMERAL c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3
+ |- ((\s. (!net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net)))) s)
T * / ! c==> c/\ cFINITE b0 ! c==> cIN b2 b0 chas_complex_derivative * f0 b2 * f1 b2 b1 chas_complex_derivative / cvsum b0 / * * f0 b3 b2 cvsum b0 f1 b1 f2
+ |- (((!n. (FINITE (m .. n))) ==> ((\n. (FINITE (m .. n))) n)) = ((\n. (FINITE (m .. n))) n))
T c= c==> ! cFINITE * * part c.. f0 b0 * / cFINITE * * part c.. f0 b0 f1 * / cFINITE * * part c.. f0 b0 f1
- |- ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_0 >= (BIT0 n)) = (_0 >= n))
T c= c>= c_0 cBIT0 f0 c>= c_0 f0
+ ((\a. (?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) a) |- (?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul b0 ccomplex_mul ccomplex_inv f0 b1 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))), (i <= n), (u IN (closed_segment ((CONS (w , z)) NIL))) |- ((((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) u)) (at u)) = T)
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> c<= f4 f2 c==> cIN f5 * part cclosed_segment cCONS c, f0 f1 cNIL c= chas_complex_derivative * f3 f4 * * f3 c+ f4 cNUMERAL cBIT1 c_0 f5 cat f5 cT
- (m <= n) |- ((m <= n) /\ (((vsum (m .. n)) f) = ((vector_add (f m)) ((vsum ((m + (NUMERAL (BIT1 _0))) .. n)) f))))
T c==> c<= f0 f1 c/\ c<= f0 f1 c= cvsum * * part c.. f0 f1 f2 cvector_add * f2 f0 cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 f2
+ |- (((!m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))) ==> ((\m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))) m)) = ((\m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))) m))
T c= c==> ! ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0 * / ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0 f1 * / ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0 f1
+ |- ((((\c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) c) ==> F) = T)
T c= c==> * / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 b0 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF cT
+ |- (((!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))) ==> ((\g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))) g)) = ((\g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))) g))
T c= c==> ! ! c==> c/\ chas_complex_derivative f0 f1 cat b1 chas_complex_derivative b0 f2 cat b1 chas_complex_derivative / ccomplex_mul * f0 b2 * b0 b2 cvector_add ccomplex_mul * f0 b1 f2 ccomplex_mul f1 * b0 b1 cat b1 * / ! c==> c/\ chas_complex_derivative f0 f1 cat b1 chas_complex_derivative b0 f2 cat b1 chas_complex_derivative / ccomplex_mul * f0 b2 * b0 b2 cvector_add ccomplex_mul * f0 b1 f2 ccomplex_mul f1 * b0 b1 cat b1 f3 * / ! c==> c/\ chas_complex_derivative f0 f1 cat b1 chas_complex_derivative b0 f2 cat b1 chas_complex_derivative / ccomplex_mul * f0 b2 * b0 b2 cvector_add ccomplex_mul * f0 b1 f2 ccomplex_mul f1 * b0 b1 cat b1 f3
- |- (((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x))))) = ((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x)))))))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum ((NUMERAL _0) .. n)) (\x. ((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x))))))))) = (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum ((NUMERAL _0) .. n)) (\x. ((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x)))))))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 f0 c= ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0
+ (((vector_add x) ((vector_add y) z)) = ((vector_add ((vector_add x) y)) z)) |- (((vector_add ((vector_add x) y)) z) = ((vector_add x) ((vector_add y) z)))
T c==> c= cvector_add f0 cvector_add f1 f2 cvector_add cvector_add f0 f1 f2 c= cvector_add cvector_add f0 f1 f2 cvector_add f0 cvector_add f1 f2
- (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) |- ((?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) /\ F)
T c==> c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b0 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b0 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
+ ((\f. (?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) f) |- (((\f. (?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) f) /\ F)
T c==> * / c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ * / c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ |- ((\f. (!m. (!n. ((m <= n) ==> (((vsum (m .. n)) f) = ((vector_add (f m)) ((vsum ((m + (NUMERAL (BIT1 _0))) .. n)) f))))))) f)
T * / ! ! c==> c<= b1 b2 c= cvsum * * part c.. b1 b2 b0 cvector_add * b0 b1 cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 b2 b0 f0
+ |- (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))))
T c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvector_add cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0
- |- (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))))))
T c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- (((BIT0 n) - _0) = (BIT0 n))
T c= c- cBIT0 f0 c_0 cBIT0 f0
- (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) |- ((?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) /\ F)
T c==> c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) ==> ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n)) = ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n))
T c= c==> ! c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1 * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
- |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- (((!f. (!s. (!net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) ==> ((\f. (!s. (!net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) f)) = ((\f. (!s. (!net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) f))
T c= c==> ! ! ! c==> c/\ cFINITE b1 ! c==> cIN b3 b1 chas_complex_derivative * b0 b3 * f0 b3 b2 chas_complex_derivative / cvsum b1 / * * b0 b4 b3 cvsum b1 f0 b2 * / ! ! c==> c/\ cFINITE b1 ! c==> cIN b3 b1 chas_complex_derivative * b0 b3 * f0 b3 b2 chas_complex_derivative / cvsum b1 / * * b0 b4 b3 cvsum b1 f0 b2 f1 * / ! ! c==> c/\ cFINITE b1 ! c==> cIN b3 b1 chas_complex_derivative * b0 b3 * f0 b3 b2 chas_complex_derivative / cvsum b1 / * * b0 b4 b3 cvsum b1 f0 b2 f1
- |- ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0
- |- (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))))
T c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0
+ |- (((BIT1 n) <= _0) = F)
T c= c<= cBIT1 f0 c_0 cF
- |- (!x. ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> (((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))) = ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))))
T c==> cIN f0 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 c= ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0
+ |- (!i. (((\i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) i) ==> F))
T c==> * / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b0 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))
T c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
- |- ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n)
T * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1
+ |- ((\n. ((m <= n) ==> (((vsum (m .. n)) f) = ((vector_add (f m)) ((vsum ((m + (NUMERAL (BIT1 _0))) .. n)) f))))) n)
T * / c==> c<= f0 b0 c= cvsum * * part c.. f0 b0 f1 cvector_add * f1 f0 cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 b0 f1 f2
+ |- ((\m. (!n. (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i))))))) m)
T * / ! c= cvector_add cvsum * * part c.. b0 b1 f0 cvsum * * part c.. b0 b1 f1 cvsum * * part c.. b0 b1 / cvector_add * f0 b2 * f1 b2 f2
+ (!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) |- (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net)))
T c==> ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 ! c==> c/\ cFINITE b0 ! c==> cIN b1 b0 chas_complex_derivative * f1 b1 * f0 b1 f2 chas_complex_derivative / cvsum b0 / * * f1 b2 b1 cvsum b0 f0 f2
+ |- ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n)
T * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1
- |- ((\n. ((EVEN (BIT0 n)) = T)) n)
T * / c= cEVEN cBIT0 b0 cT f0
- |- ((_0 + _0) = _0)
T c= c+ c_0 c_0 c_0
- (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) |- ((((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))) = T)
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c= c==> c/\ cIN f4 * part cclosed_segment cCONS c, f0 f1 cNIL c<= f5 f2 chas_complex_derivative * f3 f5 * * f3 c+ f5 cNUMERAL cBIT1 c_0 f4 cat f4 cT
+ |- ((\n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n))))) n)
T * / ! c= cIN b1 * * part c.. f0 b0 c/\ c<= f0 b1 c<= b1 b0 f1
- |- (((!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) ==> ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n)) = ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n))
T c= c==> ! c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1 * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1
- |- ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))
T c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) ==> (!m. (!n. (!f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))))
T c==> ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 ! ! ! c==> ! c==> c/\ c<= b0 b3 c<= b3 b1 c= * b2 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b0 b1 b2 creal_of_num cNUMERAL c_0
- |- ((_0 * (BIT0 n)) = _0)
T c= c* c_0 cBIT0 f0 c_0
- |- (((!n. (((BIT0 n) > (BIT1 m)) = (n > m))) ==> ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1 * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1
- |- (((BIT0 n) >= (BIT0 m)) = (n >= m))
T c= c>= cBIT0 f0 cBIT0 f1 c>= f0 f1
- ((a = b) ==> (a ==> b)) |- (((a = b) ==> (a ==> b)) /\ ((a = b) ==> (a ==> b)))
T c==> c==> c= f0 f1 c==> f0 f1 c/\ c==> c= f0 f1 c==> f0 f1 c==> c= f0 f1 c==> f0 f1
- |- (((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((vsum s) (\i. (f i))) = ((vsum s) g))) = T)
T c= c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= cvsum f0 / * f1 b0 cvsum f0 f2 cT
- |- (((BIT0 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT0 f0 cBIT1 f1 c<= f0 f1
- |- ((\m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) m)
T * / ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 f0
+ |- ((\p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))) p)
T * / c= cIN b0 * * part c.. f0 f1 c/\ c<= f0 b0 c<= b0 f1 f2
+ |- (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vector_add ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) (NUMERAL _0))) ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))))
T c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cvector_add * / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cNUMERAL c_0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0
+ (i <= n), (u IN (closed_segment ((CONS (w , z)) NIL))) |- ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n))
T c==> c<= f0 f1 c==> cIN f2 * part cclosed_segment cCONS c, f3 f4 cNIL c/\ cIN f2 * part cclosed_segment cCONS c, f3 f4 cNIL c<= f0 f1
- |- (((!n. ((_0 * (BIT1 n)) = _0)) ==> ((\n. ((_0 * (BIT1 n)) = _0)) n)) = ((\n. ((_0 * (BIT1 n)) = _0)) n))
T c= c==> ! c= c* c_0 cBIT1 b0 c_0 * / c= c* c_0 cBIT1 b0 c_0 f0 * / c= c* c_0 cBIT1 b0 c_0 f0
+ |- (((!x. (((\z. (?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) x) ==> F)) ==> ((?z. (?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F)) = ((?z. (?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b3 ccomplex_mul ccomplex_pow cvector_sub b1 b2 c- b3 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b3 ccomplex_pow cvector_sub b1 b2 c- b3 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((\m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) m)
T * / ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 f0
- |- ((EVEN (BIT1 n)) = F)
T c= cEVEN cBIT1 f0 cF
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- (((!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))) ==> ((\g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))) g')) = ((\g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))) g'))
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 c= c==> ! ! c==> c/\ chas_complex_derivative f0 f1 cat b1 chas_complex_derivative f2 b0 cat b1 chas_complex_derivative / ccomplex_mul * f0 b2 * f2 b2 cvector_add ccomplex_mul * f0 b1 b0 ccomplex_mul f1 * f2 b1 cat b1 * / ! c==> c/\ chas_complex_derivative f0 f1 cat b1 chas_complex_derivative f2 b0 cat b1 chas_complex_derivative / ccomplex_mul * f0 b2 * f2 b2 cvector_add ccomplex_mul * f0 b1 b0 ccomplex_mul f1 * f2 b1 cat b1 f3 * / ! c==> c/\ chas_complex_derivative f0 f1 cat b1 chas_complex_derivative f2 b0 cat b1 chas_complex_derivative / ccomplex_mul * f0 b2 * f2 b2 cvector_add ccomplex_mul * f0 b1 b0 ccomplex_mul f1 * f2 b1 cat b1 f3
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- (!f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))))
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 ! ! ! c==> c/\ chas_complex_derivative f0 b0 cat b2 chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / ccomplex_mul * f0 b3 * b1 b3 cvector_add ccomplex_mul * f0 b2 f1 ccomplex_mul b0 * b1 b2 cat b2
+ |- (((Re ((f (NUMERAL _0)) z)) = ((real_add (Re ((f (NUMERAL _0)) z))) (Re ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))))) = ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((complex_mul ((f (NUMERAL _0)) z)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))))))
T c= c= cRe * * f0 cNUMERAL c_0 f1 creal_add cRe * * f0 cNUMERAL c_0 f1 cRe cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 / ccomplex_mul * * f0 b0 f1 ccomplex_div ccomplex_pow cvector_sub f1 f1 b0 cCx creal_of_num cFACT b0 c= cRe * * f0 cNUMERAL c_0 f1 cRe cvector_add ccomplex_mul * * f0 cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 / ccomplex_mul * * f0 b0 f1 ccomplex_div ccomplex_pow cvector_sub f1 f1 b0 cCx creal_of_num cFACT b0
- |- ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m)
T * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0
+ |- (((!s. ((FINITE s) ==> ((Re ((vsum s) f)) = ((sum s) (\x. (Re (f x))))))) ==> ((\s. ((FINITE s) ==> ((Re ((vsum s) f)) = ((sum s) (\x. (Re (f x))))))) s)) = ((\s. ((FINITE s) ==> ((Re ((vsum s) f)) = ((sum s) (\x. (Re (f x))))))) s))
T c= c==> ! c==> cFINITE b0 c= cRe cvsum b0 f0 csum b0 / cRe * f0 b1 * / c==> cFINITE b0 c= cRe cvsum b0 f0 csum b0 / cRe * f0 b1 f1 * / c==> cFINITE b0 c= cRe cvsum b0 f0 csum b0 / cRe * f0 b1 f1
+ |- ((\m. (!n. (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g))))) m)
T * / ! c= cvsum * * part c.. b0 b1 / cvector_add * f0 b2 * f1 b2 cvector_add cvsum * * part c.. b0 b1 f0 cvsum * * part c.. b0 b1 f1 f2
- |- ((PRE _0) = _0)
T c= cPRE c_0 c_0
+ |- (!f. (((vector_add (f (NUMERAL _0))) ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) f)) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (n + (NUMERAL (BIT1 _0)))))) ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. (n + (NUMERAL (BIT1 _0))))) f))))
T c= cvector_add * f0 cNUMERAL c_0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 f0 cvector_add cvector_sub * f0 cNUMERAL c_0 * f0 c+ f1 cNUMERAL cBIT1 c_0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c+ f1 cNUMERAL cBIT1 c_0 f0
- (!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) |- (!n. (!f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))
T c==> ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 ! ! c==> ! c==> c/\ c<= f0 b2 c<= b2 b0 c= * b1 b2 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 b0 b1 creal_of_num cNUMERAL c_0
- |- ((\n. (((BIT0 m) < (BIT1 n)) = (m <= n))) n)
T * / c= c< cBIT0 f0 cBIT1 b0 c<= f0 b0 f1
- |- ((\n. ((BIT1 n) > _0)) n)
T * / c> cBIT1 b0 c_0 f0
- |- (((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) ==> ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m)) = ((\m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0 * / ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 f0
+ |- ((\y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y)))) y)
T * / c= ccomplex_mul cvector_neg f0 b0 cvector_neg ccomplex_mul f0 b0 f1
+ |- (((!y. (!z. (((vector_add ((vector_add x) y)) z) = ((vector_add x) ((vector_add y) z))))) ==> ((\y. (!z. (((vector_add ((vector_add x) y)) z) = ((vector_add x) ((vector_add y) z))))) y)) = ((\y. (!z. (((vector_add ((vector_add x) y)) z) = ((vector_add x) ((vector_add y) z))))) y))
T c= c==> ! ! c= cvector_add cvector_add f0 b0 b1 cvector_add f0 cvector_add b0 b1 * / ! c= cvector_add cvector_add f0 b0 b1 cvector_add f0 cvector_add b0 b1 f1 * / ! c= cvector_add cvector_add f0 b0 b1 cvector_add f0 cvector_add b0 b1 f1
+ |- ((~ (~ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))))) ==> F)
T c==> c~ c~ c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- (((!n. ((BIT1 n) >= _0)) ==> ((\n. ((BIT1 n) >= _0)) n)) = ((\n. ((BIT1 n) >= _0)) n))
T c= c==> ! c>= cBIT1 b0 c_0 * / c>= cBIT1 b0 c_0 f0 * / c>= cBIT1 b0 c_0 f0
- |- (((!n. (((BIT1 n) > (BIT0 m)) = (n >= m))) ==> ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n)) = ((\n. (((BIT1 n) > (BIT0 m)) = (n >= m))) n))
T c= c==> ! c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1 * / c= c> cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
+ |- ((((~ (~ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))))) ==> F) ==> (~ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))))) = (~ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0)))))
T c= c==> c==> c~ c~ c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c~ c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c~ c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) /\ F)
T c==> c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((\x. (((complex_mul x) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = x)) x)
T * / c= ccomplex_mul b0 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_0 > (BIT0 n)) = F)
T c= c> c_0 cBIT0 f0 cF
- |- (((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) (\x. (f x))) = ((sum s) g))) = T)
T c= c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 / * f1 b0 csum f0 f2 cT
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))), (u IN (closed_segment ((CONS (w , z)) NIL))) |- (((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((has_complex_derivative (\u. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) (at u))) = T)
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> cIN f4 * part cclosed_segment cCONS c, f0 f1 cNIL c= c==> c/\ c<= cNUMERAL c_0 f5 c<= f5 f2 chas_complex_derivative / ccomplex_mul * * f3 f5 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f5 cCx creal_of_num cFACT f5 cvector_add ccomplex_mul * * f3 f5 f4 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f5 ccomplex_pow cvector_sub f1 f4 c- f5 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f5 ccomplex_mul * * f3 c+ f5 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f1 f4 f5 cCx creal_of_num cFACT f5 cat f4 cT
- |- (((!n. (((BIT1 n) - _0) = (BIT1 n))) ==> ((\n. (((BIT1 n) - _0) = (BIT1 n))) n)) = ((\n. (((BIT1 n) - _0) = (BIT1 n))) n))
T c= c==> ! c= c- cBIT1 b0 c_0 cBIT1 b0 * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0 * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0
+ |- (!a. (((\a. (?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) a) ==> F))
T c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- |- (((!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) ==> ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n)) = ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n))
T c= c==> ! c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- (((A ==> B) /\ (C ==> D)) ==> ((A /\ C) ==> (B /\ D))) |- ((((A ==> B) /\ (C ==> D)) ==> ((A /\ C) ==> (B /\ D))) /\ (((A ==> B) /\ (C ==> D)) ==> ((A /\ C) ==> (B /\ D))))
T c==> c==> c/\ c==> f0 f1 c==> f2 f3 c==> c/\ f0 f2 c/\ f1 f3 c/\ c==> c/\ c==> f0 f1 c==> f2 f3 c==> c/\ f0 f2 c/\ f1 f3 c==> c/\ c==> f0 f1 c==> f2 f3 c==> c/\ f0 f2 c/\ f1 f3
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))), (u IN (closed_segment ((CONS (w , z)) NIL))) |- ((FINITE ((NUMERAL _0) .. n)) /\ (!i. ((i IN ((NUMERAL _0) .. n)) ==> (((has_complex_derivative ((\i. (\u. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) i)) ((\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) i)) (at u)))))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> cIN f4 * part cclosed_segment cCONS c, f0 f1 cNIL c/\ cFINITE * * part c.. cNUMERAL c_0 f2 ! c==> cIN b0 * * part c.. cNUMERAL c_0 f2 chas_complex_derivative * / / ccomplex_mul * * f3 b1 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b1 cCx creal_of_num cFACT b1 b0 * / cvector_add ccomplex_mul * * f3 b1 f4 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f1 f4 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f3 c+ b1 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f1 f4 b1 cCx creal_of_num cFACT b1 b0 cat f4
+ |- ((\n. (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)))) n)
T * / c= cvsum * * part c.. f0 b0 / cvector_add * f1 b1 * f2 b1 cvector_add cvsum * * part c.. f0 b0 f1 cvsum * * part c.. f0 b0 f2 f3
- |- ((EVEN _0) = T)
T c= cEVEN c_0 cT
+ |- (((!m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))))) ==> ((\m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))))) m)) = ((\m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))))) m))
T c= c==> ! ! ! c= cIN b2 * * part c.. b0 b1 c/\ c<= b0 b2 c<= b2 b1 * / ! ! c= cIN b2 * * part c.. b0 b1 c/\ c<= b0 b2 c<= b2 b1 f0 * / ! ! c= cIN b2 * * part c.. b0 b1 c/\ c<= b0 b2 c<= b2 b1 f0
+ |- ((Cx (real_of_num (NUMERAL _0))) = (vec (NUMERAL _0)))
T c= cCx creal_of_num cNUMERAL c_0 cvec cNUMERAL c_0
+ |- ((((FINITE ((NUMERAL _0) .. n)) /\ (!x. (!y. (((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) ==> (y = x))))) ==> (((vsum ((NUMERAL _0) .. n)) (f o (\i. (i + (NUMERAL (BIT1 _0)))))) = ((vsum ((IMAGE (\i. (i + (NUMERAL (BIT1 _0))))) ((NUMERAL _0) .. n))) f))) = (((vsum ((NUMERAL _0) .. n)) (f o (\i. (i + (NUMERAL (BIT1 _0)))))) = ((vsum ((IMAGE (\i. (i + (NUMERAL (BIT1 _0))))) ((NUMERAL _0) .. n))) f)))
T c= c==> c/\ cFINITE * * part c.. cNUMERAL c_0 f0 ! ! c==> c/\ cIN b0 * * part c.. cNUMERAL c_0 f0 c/\ cIN b1 * * part c.. cNUMERAL c_0 f0 c= * / c+ b2 cNUMERAL cBIT1 c_0 b1 * / c+ b2 cNUMERAL cBIT1 c_0 b0 c= b1 b0 c= cvsum * * part c.. cNUMERAL c_0 f0 * * part co f1 / c+ b0 cNUMERAL cBIT1 c_0 cvsum * * part cIMAGE / c+ b0 cNUMERAL cBIT1 c_0 * * part c.. cNUMERAL c_0 f0 f1 c= cvsum * * part c.. cNUMERAL c_0 f0 * * part co f1 / c+ b0 cNUMERAL cBIT1 c_0 cvsum * * part cIMAGE / c+ b0 cNUMERAL cBIT1 c_0 * * part c.. cNUMERAL c_0 f0 f1
+ |- ((((vector_add (f (NUMERAL _0))) ((vsum ((NUMERAL (BIT1 _0)) .. n)) f)) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (SUC n)))) ((vector_add ((vsum ((NUMERAL (BIT1 _0)) .. n)) f)) (f (SUC n))))) = T)
T c= c= cvector_add * f0 cNUMERAL c_0 cvsum * * part c.. cNUMERAL cBIT1 c_0 f1 f0 cvector_add cvector_sub * f0 cNUMERAL c_0 * f0 cSUC f1 cvector_add cvsum * * part c.. cNUMERAL cBIT1 c_0 f1 f0 * f0 cSUC f1 cT
- |- (((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) ==> ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m)) = ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m))
T c= c==> ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0 * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0
- (((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) |- (((!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))) ==> ((\s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))) s)) = ((\s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))) s))
T c==> ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 c= c==> ! c==> c/\ cFINITE b0 ! c==> cIN b1 b0 chas_complex_derivative * f1 b1 * f0 b1 f2 chas_complex_derivative / cvsum b0 / * * f1 b2 b1 cvsum b0 f0 f2 * / c==> c/\ cFINITE b0 ! c==> cIN b1 b0 chas_complex_derivative * f1 b1 * f0 b1 f2 chas_complex_derivative / cvsum b0 / * * f1 b2 b1 cvsum b0 f0 f2 f3 * / c==> c/\ cFINITE b0 ! c==> cIN b1 b0 chas_complex_derivative * f1 b1 * f0 b1 f2 chas_complex_derivative / cvsum b0 / * * f1 b2 b1 cvsum b0 f0 f2 f3
- |- ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))
T c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
+ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 f3 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\m. (!n. ((m <= n) ==> (((vsum (m .. n)) f) = ((vector_add (f m)) ((vsum ((m + (NUMERAL (BIT1 _0))) .. n)) f)))))) m)
T * / ! c==> c<= b0 b1 c= cvsum * * part c.. b0 b1 f0 cvector_add * f0 b0 cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 b1 f0 f1
- |- ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n)
T * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1
+ ((\u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) u) |- (((\u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) u) /\ F)
T c==> * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b1 ccomplex_mul ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b1 ccomplex_mul ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
- |- (((!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) ==> ((\m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) m)) = ((\m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) m))
T c= c==> ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 * / ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 f0 * / ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 f0
+ |- ((\n. (!p. (((IMAGE (\i. (i + p))) (m .. n)) = ((m + p) .. (n + p))))) n)
T * / ! c= * * part cIMAGE / c+ b2 b1 * * part c.. f0 b0 * * part c.. c+ f0 b1 c+ b0 b1 f1
+ |- ((\net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))) net)
T * / c==> c/\ cFINITE f0 ! c==> cIN b1 f0 chas_complex_derivative * f1 b1 * f2 b1 b0 chas_complex_derivative / cvsum f0 / * * f1 b2 b1 cvsum f0 f2 b0 f3
+ |- (((!y. (!z. (((complex_mul ((complex_mul x) y)) z) = ((complex_mul x) ((complex_mul y) z))))) ==> ((\y. (!z. (((complex_mul ((complex_mul x) y)) z) = ((complex_mul x) ((complex_mul y) z))))) y)) = ((\y. (!z. (((complex_mul ((complex_mul x) y)) z) = ((complex_mul x) ((complex_mul y) z))))) y))
T c= c==> ! ! c= ccomplex_mul ccomplex_mul f0 b0 b1 ccomplex_mul f0 ccomplex_mul b0 b1 * / ! c= ccomplex_mul ccomplex_mul f0 b0 b1 ccomplex_mul f0 ccomplex_mul b0 b1 f1 * / ! c= ccomplex_mul ccomplex_mul f0 b0 b1 ccomplex_mul f0 ccomplex_mul b0 b1 f1
+ |- (((!f. (!s. ((FINITE s) ==> ((Re ((vsum s) f)) = ((sum s) (\x. (Re (f x)))))))) ==> ((\f. (!s. ((FINITE s) ==> ((Re ((vsum s) f)) = ((sum s) (\x. (Re (f x)))))))) f)) = ((\f. (!s. ((FINITE s) ==> ((Re ((vsum s) f)) = ((sum s) (\x. (Re (f x)))))))) f))
T c= c==> ! ! c==> cFINITE b1 c= cRe cvsum b1 b0 csum b1 / cRe * b0 b2 * / ! c==> cFINITE b1 c= cRe cvsum b1 b0 csum b1 / cRe * b0 b2 f0 * / ! c==> cFINITE b1 c= cRe cvsum b1 b0 csum b1 / cRe * b0 b2 f0
+ |- ((\a. (!b. (!c. (((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c))) = ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))))) a)
T * / ! ! c= ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 f0
- (!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) |- ((!n. (!f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0)))))) = T)
T c==> ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 c= ! ! c==> ! c==> c/\ c<= f0 b2 c<= b2 b0 c= * b1 b2 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 b0 b1 creal_of_num cNUMERAL c_0 cT
+ |- (((!i. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))) = ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))) ==> (((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))))) = (((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))))
T c= c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c<= b0 f0 c= ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 c= cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 c= cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0
+ |- (((!w. (!z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z))))) ==> ((\w. (!z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z))))) w)) = ((\w. (!z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z))))) w))
T c= c==> ! ! c= ccomplex_inv ccomplex_mul b0 b1 ccomplex_mul ccomplex_inv b0 ccomplex_inv b1 * / ! c= ccomplex_inv ccomplex_mul b0 b1 ccomplex_mul ccomplex_inv b0 ccomplex_inv b1 f0 * / ! c= ccomplex_inv ccomplex_mul b0 b1 ccomplex_mul ccomplex_inv b0 ccomplex_inv b1 f0
- |- (((!n. (((BIT0 n) > _0) = (n > _0))) ==> ((\n. (((BIT0 n) > _0) = (n > _0))) n)) = ((\n. (((BIT0 n) > _0) = (n > _0))) n))
T c= c==> ! c= c> cBIT0 b0 c_0 c> b0 c_0 * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0 * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0
- |- ((_0 = (BIT1 n)) = F)
T c= c= c_0 cBIT1 f0 cF
- |- (((!n. (~ (_0 > (BIT0 n)))) ==> ((\n. (~ (_0 > (BIT0 n)))) n)) = ((\n. (~ (_0 > (BIT0 n)))) n))
T c= c==> ! c~ c> c_0 cBIT0 b0 * / c~ c> c_0 cBIT0 b0 f0 * / c~ c> c_0 cBIT0 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((real_sub x) y) = z) = (x = ((real_add y) z)))
T c= c= creal_sub f0 f1 f2 c= f0 creal_add f1 f2
+ ((Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))) = ((real_add (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))) |- (((real_add (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w)))) = (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))))
T c==> c= cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 creal_add cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3 c= creal_add cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3 cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0
+ |- ((\z. ((((real_sub x) y) = z) = (x = ((real_add y) z)))) z)
T * / c= c= creal_sub f0 f1 b0 c= f0 creal_add f1 b0 f2
- |- ((SUC (BIT0 n)) = (BIT1 n))
T c= cSUC cBIT0 f0 cBIT1 f0
+ |- (!z. (((\z. (?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) z) ==> F))
T c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ ((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (y = x))) |- (y = x)
T c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= f2 f0 c= f2 f0
+ ((\u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) u) |- (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b1 ccomplex_mul ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b0 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
- (!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))), ((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) |- ((!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) /\ (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))
T c==> ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 c==> c/\ cFINITE f1 ! c==> cIN b0 f1 chas_complex_derivative * f2 b0 * f0 b0 f3 c/\ ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 chas_complex_derivative / cvsum f1 / * * f2 b1 b0 cvsum f1 f0 f3
+ (i <= n), (u IN (closed_segment ((CONS (w , z)) NIL))) |- (T = ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)))
T c==> c<= f0 f1 c==> cIN f2 * part cclosed_segment cCONS c, f3 f4 cNIL c= cT c/\ cIN f2 * part cclosed_segment cCONS c, f3 f4 cNIL c<= f0 f1
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) |- (((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u))) = T)
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c= c==> cIN f4 * part cclosed_segment cCONS c, f0 f1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 b1 cCx creal_of_num cFACT b1 ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f1 f4 f2 cCx creal_of_num cFACT f2 cat f4 cT
+ |- (((FINITE ((NUMERAL _0) .. n)) /\ (!i. ((i IN ((NUMERAL _0) .. n)) ==> (((has_complex_derivative ((\i. (\u. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) i)) ((\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) i)) (at u))))) ==> (((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)))
T c==> c/\ cFINITE * * part c.. cNUMERAL c_0 f0 ! c==> cIN b0 * * part c.. cNUMERAL c_0 f0 chas_complex_derivative * / / ccomplex_mul * * f1 b1 b1 ccomplex_div ccomplex_pow cvector_sub f2 b1 b1 cCx creal_of_num cFACT b1 b0 * / cvector_add ccomplex_mul * * f1 b1 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f2 f3 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b1 cCx creal_of_num cFACT b1 b0 cat f3 chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f3 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cat f3
- |- ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n)
T * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1
+ |- ((((\z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z') ==> F) = T)
T c= c==> * / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f4 cF cT
+ |- ((NUMERAL (BIT1 _0)) <= (SUC n))
T c<= cNUMERAL cBIT1 c_0 cSUC f0
- |- ((\n. ((_0 = (BIT1 n)) = F)) n)
T * / c= c= c_0 cBIT1 b0 cF f0
+ |- (((!x. (((vector_sub x) x) = (Cx (real_of_num (NUMERAL _0))))) ==> ((\x. (((vector_sub x) x) = (Cx (real_of_num (NUMERAL _0))))) x)) = ((\x. (((vector_sub x) x) = (Cx (real_of_num (NUMERAL _0))))) x))
T c= c==> ! c= cvector_sub b0 b0 cCx creal_of_num cNUMERAL c_0 * / c= cvector_sub b0 b0 cCx creal_of_num cNUMERAL c_0 f0 * / c= cvector_sub b0 b0 cCx creal_of_num cNUMERAL c_0 f0
+ |- (!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))))
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c= cvector_add ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 cvector_add ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0
- |- ((\n. (((BIT1 n) - _0) = (BIT1 n))) n)
T * / c= c- cBIT1 b0 c_0 cBIT1 b0 f0
- |- (((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) ==> ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m)) = ((\m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) m))
T c= c==> ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ |- ((((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i))))) = ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i)))))) = (((complex_div ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (Cx (real_of_num (FACT i)))) = ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i))))))
T c= c= ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 c= ccomplex_div ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f0 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f0
+ |- ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))
T c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) (\x. ((vector_add ((complex_mul ((f (SUC x)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))) ((complex_mul ((f (SUC x)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x))))))))))
T c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0
+ |- ((!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) ==> (!f. (!s. (!net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))))
T c==> ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 ! ! ! c==> c/\ cFINITE b1 ! c==> cIN b3 b1 chas_complex_derivative * b0 b3 * f0 b3 b2 chas_complex_derivative / cvsum b1 / * * b0 b4 b3 cvsum b1 f0 b2
+ |- (((!n. ((m <= n) ==> (((vsum (m .. n)) f) = ((vector_add (f m)) ((vsum ((m + (NUMERAL (BIT1 _0))) .. n)) f))))) ==> ((\n. ((m <= n) ==> (((vsum (m .. n)) f) = ((vector_add (f m)) ((vsum ((m + (NUMERAL (BIT1 _0))) .. n)) f))))) n)) = ((\n. ((m <= n) ==> (((vsum (m .. n)) f) = ((vector_add (f m)) ((vsum ((m + (NUMERAL (BIT1 _0))) .. n)) f))))) n))
T c= c==> ! c==> c<= f0 b0 c= cvsum * * part c.. f0 b0 f1 cvector_add * f1 f0 cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 b0 f1 * / c==> c<= f0 b0 c= cvsum * * part c.. f0 b0 f1 cvector_add * f1 f0 cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 b0 f1 f2 * / c==> c<= f0 b0 c= cvsum * * part c.. f0 b0 f1 cvector_add * f1 f0 cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 b0 f1 f2
- |- ((\n. ((BIT1 n) >= _0)) n)
T * / c>= cBIT1 b0 c_0 f0
- |- ((\m. (!n. (((BIT1 m) = (BIT0 n)) = F))) m)
T * / ! c= c= cBIT1 b0 cBIT0 b1 cF f0
+ |- ((((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((complex_mul ((f (SUC n)) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (SUC n))))) ((complex_pow ((vector_sub z) u)) n))) (Cx (real_of_num ((SUC n) * (FACT n)))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (SUC i))))) ((complex_pow ((vector_sub z) u)) i))) (Cx (real_of_num ((SUC i) * (FACT i))))))) ((complex_mul ((f (SUC i)) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) = (((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT (NUMERAL _0))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (n + (NUMERAL (BIT1 _0))))))) ((complex_pow ((vector_sub z) u)) n))) (Cx (real_of_num (FACT (n + (NUMERAL (BIT1 _0)))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (i + (NUMERAL (BIT1 _0))))))) ((complex_pow ((vector_sub z) u)) i))) (Cx (real_of_num (FACT (i + (NUMERAL (BIT1 _0))))))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) = ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))))
T c= c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num cSUC f3 ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num c* cSUC f3 cFACT f3 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 cSUC b0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num cSUC b0 ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num c* cSUC b0 cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT f3 c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT cNUMERAL c_0 ccomplex_mul * * f0 c+ f3 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num c+ f3 cNUMERAL cBIT1 c_0 ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT c+ f3 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 c+ b0 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num c+ b0 cNUMERAL cBIT1 c_0 ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT c+ b0 cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 c+ b0 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 c+ f3 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT f3
- |- (((BIT0 n) > (BIT0 m)) = (n > m))
T c= c> cBIT0 f0 cBIT0 f1 c> f0 f1
- (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- (((!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))) ==> ((\x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))) x)) = ((\x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))) x))
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 c= c==> ! c==> c/\ chas_complex_derivative f0 f1 cat b0 chas_complex_derivative f2 f3 cat b0 chas_complex_derivative / ccomplex_mul * f0 b1 * f2 b1 cvector_add ccomplex_mul * f0 b0 f3 ccomplex_mul f1 * f2 b0 cat b0 * / c==> c/\ chas_complex_derivative f0 f1 cat b0 chas_complex_derivative f2 f3 cat b0 chas_complex_derivative / ccomplex_mul * f0 b1 * f2 b1 cvector_add ccomplex_mul * f0 b0 f3 ccomplex_mul f1 * f2 b0 cat b0 f4 * / c==> c/\ chas_complex_derivative f0 f1 cat b0 chas_complex_derivative f2 f3 cat b0 chas_complex_derivative / ccomplex_mul * f0 b1 * f2 b1 cvector_add ccomplex_mul * f0 b0 f3 ccomplex_mul f1 * f2 b0 cat b0 f4
- |- ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))
T c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- (((!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))))) ==> ((\f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))))) f')) = ((\f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))))) f'))
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 c= c==> ! ! ! ! c==> c/\ chas_complex_derivative f0 b0 cat b3 chas_complex_derivative b1 b2 cat b3 chas_complex_derivative / ccomplex_mul * f0 b4 * b1 b4 cvector_add ccomplex_mul * f0 b3 b2 ccomplex_mul b0 * b1 b3 cat b3 * / ! ! ! c==> c/\ chas_complex_derivative f0 b0 cat b3 chas_complex_derivative b1 b2 cat b3 chas_complex_derivative / ccomplex_mul * f0 b4 * b1 b4 cvector_add ccomplex_mul * f0 b3 b2 ccomplex_mul b0 * b1 b3 cat b3 f1 * / ! ! ! c==> c/\ chas_complex_derivative f0 b0 cat b3 chas_complex_derivative b1 b2 cat b3 chas_complex_derivative / ccomplex_mul * f0 b4 * b1 b4 cvector_add ccomplex_mul * f0 b3 b2 ccomplex_mul b0 * b1 b3 cat b3 f1
- |- ((\n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) n)
T * / c= cEXP cBIT0 f0 cBIT1 b0 c* cBIT0 f0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
- |- (((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) /\ (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))))) /\ (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) /\ ((_0 >= _0) /\ ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))))) /\ (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) /\ ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))) /\ ((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) /\ (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))))))))
T c/\ c/\ ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 c/\ c/\ ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 c/\ c>= c_0 c_0 c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 c/\ c/\ ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 c/\ ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
- |- ((\n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))) n)
T * / c= cEXP cNUMERAL f0 cNUMERAL b0 cNUMERAL cEXP f0 b0 f1
+ (!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) |- ((!net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))) = T)
T c==> ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 c= ! c==> c/\ cFINITE f1 ! c==> cIN b1 f1 chas_complex_derivative * f2 b1 * f0 b1 b0 chas_complex_derivative / cvsum f1 / * * f2 b2 b1 cvsum f1 f0 b0 cT
+ |- (((!z. (((vector_add ((vector_add x) y)) z) = ((vector_add x) ((vector_add y) z)))) ==> ((\z. (((vector_add ((vector_add x) y)) z) = ((vector_add x) ((vector_add y) z)))) z)) = ((\z. (((vector_add ((vector_add x) y)) z) = ((vector_add x) ((vector_add y) z)))) z))
T c= c==> ! c= cvector_add cvector_add f0 f1 b0 cvector_add f0 cvector_add f1 b0 * / c= cvector_add cvector_add f0 f1 b0 cvector_add f0 cvector_add f1 b0 f2 * / c= cvector_add cvector_add f0 f1 b0 cvector_add f0 cvector_add f1 b0 f2
+ |- (((!m. (!n. ((m <= n) ==> (((vsum (m .. n)) f) = ((vector_add (f m)) ((vsum ((m + (NUMERAL (BIT1 _0))) .. n)) f)))))) ==> ((\m. (!n. ((m <= n) ==> (((vsum (m .. n)) f) = ((vector_add (f m)) ((vsum ((m + (NUMERAL (BIT1 _0))) .. n)) f)))))) m)) = ((\m. (!n. ((m <= n) ==> (((vsum (m .. n)) f) = ((vector_add (f m)) ((vsum ((m + (NUMERAL (BIT1 _0))) .. n)) f)))))) m))
T c= c==> ! ! c==> c<= b0 b1 c= cvsum * * part c.. b0 b1 f0 cvector_add * f0 b0 cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 b1 f0 * / ! c==> c<= b0 b1 c= cvsum * * part c.. b0 b1 f0 cvector_add * f0 b0 cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 b1 f0 f1 * / ! c==> c<= b0 b1 c= cvsum * * part c.. b0 b1 f0 cvector_add * f0 b0 cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 b1 f0 f1
- (((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) |- ((((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) = T)
T c==> chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f3 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cat f3 c= chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f3 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cat f3 cT
- |- (((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) ==> ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m)) = ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m))
T c= c==> ! ! c= c= cBIT0 b0 cBIT1 b1 cF * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0 * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0
+ ((\z. (?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) z) |- (?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b1 ccomplex_mul ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((ODD _0) = F) /\ ((!n. ((ODD (BIT0 n)) = F)) /\ (!n. ((ODD (BIT1 n)) = T))))
T c/\ c= cODD c_0 cF c/\ ! c= cODD cBIT0 b0 cF ! c= cODD cBIT1 b0 cT
+ |- (((!x. (((\a. (?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) x) ==> F)) ==> ((?a. (?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F)) = ((?a. (?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg b1 ccomplex_mul b2 ccomplex_mul ccomplex_inv b1 b3 ccomplex_mul cvector_neg ccomplex_mul b1 ccomplex_inv b1 ccomplex_mul b2 b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((!n. (((BIT1 n) > (BIT1 m)) = (n > m))) ==> ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT1 n) > (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1 * / c= c> cBIT1 b0 cBIT1 f0 c> b0 f0 f1
+ |- (((((has_complex_derivative (\u. ((f i) u))) ((f (i + (NUMERAL (BIT1 _0)))) u)) (at u)) /\ (((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i))))) (at u))) ==> (((has_complex_derivative (\u. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) (at u)))
T c==> c/\ chas_complex_derivative / * * f0 f1 b0 * * f0 c+ f1 cNUMERAL cBIT1 c_0 f2 cat f2 chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f3 b0 f1 cCx creal_of_num cFACT f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f1 ccomplex_pow cvector_sub f3 f2 c- f1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f1 cat f2 chas_complex_derivative / ccomplex_mul * * f0 f1 b0 ccomplex_div ccomplex_pow cvector_sub f3 b0 f1 cCx creal_of_num cFACT f1 cvector_add ccomplex_mul * * f0 f1 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f1 ccomplex_pow cvector_sub f3 f2 c- f1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f1 ccomplex_mul * * f0 c+ f1 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 f1 cCx creal_of_num cFACT f1 cat f2
+ (((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _2014380))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _2014380))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) (Re x)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 cRe f0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!n. ((NUMERAL _0) <= n)) ==> ((\n. ((NUMERAL _0) <= n)) n)) = ((\n. ((NUMERAL _0) <= n)) n))
T c= c==> ! c<= cNUMERAL c_0 b0 * / c<= cNUMERAL c_0 b0 f0 * / c<= cNUMERAL c_0 b0 f0
+ ((\u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) u) |- (((?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> F) = F)
T c==> * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b1 ccomplex_mul ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b0 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- (((!y. (((complex_mul x) (vector_neg y)) = (vector_neg ((complex_mul x) y)))) ==> ((\y. (((complex_mul x) (vector_neg y)) = (vector_neg ((complex_mul x) y)))) y)) = ((\y. (((complex_mul x) (vector_neg y)) = (vector_neg ((complex_mul x) y)))) y))
T c= c==> ! c= ccomplex_mul f0 cvector_neg b0 cvector_neg ccomplex_mul f0 b0 * / c= ccomplex_mul f0 cvector_neg b0 cvector_neg ccomplex_mul f0 b0 f1 * / c= ccomplex_mul f0 cvector_neg b0 cvector_neg ccomplex_mul f0 b0 f1
+ |- ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) ==> (y = x)) = (((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (y = x))) ==> T))
T c= c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b0 cNUMERAL cBIT1 c_0 f2 * / c+ b0 cNUMERAL cBIT1 c_0 f0 c= f2 f0 c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= f2 f0 cT
- |- ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))
T c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
- |- (((~ (_0 >= (BIT1 n))) ==> ((_0 >= (BIT1 n)) = F)) = ((_0 >= (BIT1 n)) = F))
T c= c==> c~ c>= c_0 cBIT1 f0 c= c>= c_0 cBIT1 f0 cF c= c>= c_0 cBIT1 f0 cF
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ |- ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))
T c= cSUC cNUMERAL f0 cNUMERAL cSUC f0
- |- (((BIT0 n) >= _0) = T)
T c= c>= cBIT0 f0 c_0 cT
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- ((!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))) = T)
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 c= ! c==> c/\ chas_complex_derivative f0 f1 cat b0 chas_complex_derivative f2 f3 cat b0 chas_complex_derivative / ccomplex_mul * f0 b1 * f2 b1 cvector_add ccomplex_mul * f0 b0 f3 ccomplex_mul f1 * f2 b0 cat b0 cT
- |- ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))
T c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- (((!n. (((BIT1 n) = _0) = F)) ==> ((\n. (((BIT1 n) = _0) = F)) n)) = ((\n. (((BIT1 n) = _0) = F)) n))
T c= c==> ! c= c= cBIT1 b0 c_0 cF * / c= c= cBIT1 b0 c_0 cF f0 * / c= c= cBIT1 b0 c_0 cF f0
+ ((Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))) = ((real_add (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))) |- (((Re ((f (NUMERAL _0)) z)) = (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))))) = ((Re ((f (NUMERAL _0)) z)) = ((real_add (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))))
T c==> c= cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 creal_add cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3 c= c= cRe * * f1 cNUMERAL c_0 f2 cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 c= cRe * * f1 cNUMERAL c_0 f2 creal_add cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (((complex_mul x) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = x)) ==> ((\x. (((complex_mul x) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = x)) x)) = ((\x. (((complex_mul x) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = x)) x))
T c= c==> ! c= ccomplex_mul b0 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 * / c= ccomplex_mul b0 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 f0 * / c= ccomplex_mul b0 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 f0
- |- ((\m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) m)
T * / ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 f0
- |- (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) /\ ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))) /\ ((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) /\ (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))))))
T c/\ c/\ ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 c/\ ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ |- (((!y. (!z. ((((real_sub x) y) = z) = (x = ((real_add y) z))))) ==> ((\y. (!z. ((((real_sub x) y) = z) = (x = ((real_add y) z))))) y)) = ((\y. (!z. ((((real_sub x) y) = z) = (x = ((real_add y) z))))) y))
T c= c==> ! ! c= c= creal_sub f0 b0 b1 c= f0 creal_add b0 b1 * / ! c= c= creal_sub f0 b0 b1 c= f0 creal_add b0 b1 f1 * / ! c= c= creal_sub f0 b0 b1 c= f0 creal_add b0 b1 f1
- |- ((\f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))) f)
T * / c==> ! c==> c/\ c<= f0 b1 c<= b1 f1 c= * b0 b1 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 b0 creal_of_num cNUMERAL c_0 f2
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (f (NUMERAL _0))) ((vsum ((NUMERAL (BIT1 _0)) .. n)) f)) $ i) = (((vector_add ((vector_sub (f (NUMERAL _0))) (f (SUC n)))) ((vector_add ((vsum ((NUMERAL (BIT1 _0)) .. n)) f)) (f (SUC n)))) $ i)))) = (((vector_add (f (NUMERAL _0))) ((vsum ((NUMERAL (BIT1 _0)) .. n)) f)) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (SUC n)))) ((vector_add ((vsum ((NUMERAL (BIT1 _0)) .. n)) f)) (f (SUC n))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add * f0 cNUMERAL c_0 cvsum * * part c.. cNUMERAL cBIT1 c_0 f1 f0 b0 c$ cvector_add cvector_sub * f0 cNUMERAL c_0 * f0 cSUC f1 cvector_add cvsum * * part c.. cNUMERAL cBIT1 c_0 f1 f0 * f0 cSUC f1 b0 c= cvector_add * f0 cNUMERAL c_0 cvsum * * part c.. cNUMERAL cBIT1 c_0 f1 f0 cvector_add cvector_sub * f0 cNUMERAL c_0 * f0 cSUC f1 cvector_add cvsum * * part c.. cNUMERAL cBIT1 c_0 f1 f0 * f0 cSUC f1
- (((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x)))) |- ((((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x)))) /\ (((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x)))))
T c==> c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0 c/\ c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0 c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0
- |- (((!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) ==> ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n)) = ((\n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m))) n))
T c= c==> ! c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1 * / c= c>= cNUMERAL b0 cNUMERAL f0 c>= b0 f0 f1
+ |- ((\x. ((Re (Cx x)) = x)) x)
T * / c= cRe cCx b0 b0 f0
+ ((\u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) u) |- (((?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> F) = F)
T c==> * / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c= c==> c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f1 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f1 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
- |- (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))))))))
T c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- ((((has_complex_derivative (\u. (f u))) f') ((within (at x)) s)) ==> ((((has_complex_derivative (\u. (g u))) g') ((within (at x)) s)) ==> (((has_complex_derivative (\u. ((complex_mul (f u)) (g u)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) ((within (at x)) s))))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 c==> chas_complex_derivative / * f4 b0 f5 cwithin cat f2 f3 chas_complex_derivative / ccomplex_mul * f0 b0 * f4 b0 cvector_add ccomplex_mul * f0 f2 f5 ccomplex_mul f1 * f4 f2 cwithin cat f2 f3
- ((Re x) = (real_of_num (NUMERAL _0))), (((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x)))) |- ((((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x)))) /\ (y = ((real_add y) (Re x))))
T c==> c= cRe f0 creal_of_num cNUMERAL c_0 c==> c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0 c/\ c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0 c= f1 creal_add f1 cRe f0
+ |- (((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT (NUMERAL _0))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (n + (NUMERAL (BIT1 _0))))))) ((complex_pow ((vector_sub z) u)) ((n + (NUMERAL (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT (n + (NUMERAL (BIT1 _0)))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (i + (NUMERAL (BIT1 _0))))))) ((complex_pow ((vector_sub z) u)) ((i + (NUMERAL (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT (i + (NUMERAL (BIT1 _0))))))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) = ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n))))))
T c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT cNUMERAL c_0 ccomplex_mul * * f0 c+ f3 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num c+ f3 cNUMERAL cBIT1 c_0 ccomplex_pow cvector_sub f2 f1 c- c+ f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT c+ f3 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 c+ b0 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num c+ b0 cNUMERAL cBIT1 c_0 ccomplex_pow cvector_sub f2 f1 c- c+ b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT c+ b0 cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 c+ b0 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 c+ f3 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT f3
- |- (((!n. (((BIT0 n) = _0) = (n = _0))) ==> ((\n. (((BIT0 n) = _0) = (n = _0))) n)) = ((\n. (((BIT0 n) = _0) = (n = _0))) n))
T c= c==> ! c= c= cBIT0 b0 c_0 c= b0 c_0 * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0 * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0
+ |- (((!p. (((IMAGE (\i. (i + p))) (m .. n)) = ((m + p) .. (n + p)))) ==> ((\p. (((IMAGE (\i. (i + p))) (m .. n)) = ((m + p) .. (n + p)))) p)) = ((\p. (((IMAGE (\i. (i + p))) (m .. n)) = ((m + p) .. (n + p)))) p))
T c= c==> ! c= * * part cIMAGE / c+ b1 b0 * * part c.. f0 f1 * * part c.. c+ f0 b0 c+ f1 b0 * / c= * * part cIMAGE / c+ b1 b0 * * part c.. f0 f1 * * part c.. c+ f0 b0 c+ f1 b0 f2 * / c= * * part cIMAGE / c+ b1 b0 * * part c.. f0 f1 * * part c.. c+ f0 b0 c+ f1 b0 f2
- |- (((BIT0 n) > (BIT1 m)) = (n > m))
T c= c> cBIT0 f0 cBIT1 f1 c> f0 f1
- |- ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n)
T * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0
- |- (((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) = ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = T)
T c= c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c= cvector_add ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f4 f3 c- f0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0 cvector_add ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f4 f3 c- f0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0 cT
- |- ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((vector_add ((complex_mul ((f (SUC x)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))) ((complex_mul ((f (SUC x)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x))))))) = ((vector_add ((complex_mul ((f (SUC x)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))) ((complex_mul ((f (SUC x)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) (\x. ((vector_add ((complex_mul ((f (SUC x)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))) ((complex_mul ((f (SUC x)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))))))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 f0 c= cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0
+ |- (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))))))
T c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- ((\n. (((BIT1 n) >= (BIT0 m)) = (n >= m))) n)
T * / c= c>= cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
- |- (((!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) ==> ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n)) = ((\n. (((BIT1 n) >= (BIT1 m)) = (n >= m))) n))
T c= c==> ! c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1 * / c= c>= cBIT1 b0 cBIT1 f0 c>= b0 f0 f1
+ |- (((!g. (!m. (!n. (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))))))) ==> ((\g. (!m. (!n. (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))))))) g)) = ((\g. (!m. (!n. (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))))))) g))
T c= c==> ! ! ! c= cvector_add cvsum * * part c.. b1 b2 f0 cvsum * * part c.. b1 b2 b0 cvsum * * part c.. b1 b2 / cvector_add * f0 b3 * b0 b3 * / ! ! c= cvector_add cvsum * * part c.. b1 b2 f0 cvsum * * part c.. b1 b2 b0 cvsum * * part c.. b1 b2 / cvector_add * f0 b3 * b0 b3 f1 * / ! ! c= cvector_add cvsum * * part c.. b1 b2 f0 cvsum * * part c.. b1 b2 b0 cvsum * * part c.. b1 b2 / cvector_add * f0 b3 * b0 b3 f1
+ |- (((!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))) ==> ((\x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))) x)) = ((\x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))) x))
T c= c==> ! c==> c/\ chas_complex_derivative f0 f1 cat b0 chas_complex_derivative f2 f3 cat b0 chas_complex_derivative / ccomplex_mul * f0 b1 * f2 b1 cvector_add ccomplex_mul * f0 b0 f3 ccomplex_mul f1 * f2 b0 cat b0 * / c==> c/\ chas_complex_derivative f0 f1 cat b0 chas_complex_derivative f2 f3 cat b0 chas_complex_derivative / ccomplex_mul * f0 b1 * f2 b1 cvector_add ccomplex_mul * f0 b0 f3 ccomplex_mul f1 * f2 b0 cat b0 f4 * / c==> c/\ chas_complex_derivative f0 f1 cat b0 chas_complex_derivative f2 f3 cat b0 chas_complex_derivative / ccomplex_mul * f0 b1 * f2 b1 cvector_add ccomplex_mul * f0 b0 f3 ccomplex_mul f1 * f2 b0 cat b0 f4
- |- (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n)))
T c= c+ cBIT0 f0 cBIT0 f1 cBIT0 c+ f0 f1
+ |- (((!n. ((_0 + (BIT1 n)) = (BIT1 n))) ==> ((\n. ((_0 + (BIT1 n)) = (BIT1 n))) n)) = ((\n. ((_0 + (BIT1 n)) = (BIT1 n))) n))
T c= c==> ! c= c+ c_0 cBIT1 b0 cBIT1 b0 * / c= c+ c_0 cBIT1 b0 cBIT1 b0 f0 * / c= c+ c_0 cBIT1 b0 cBIT1 b0 f0
+ |- (((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((complex_mul ((f (SUC n)) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (SUC n))))) ((complex_pow ((vector_sub z) u)) n))) (Cx (real_of_num ((SUC n) * (FACT n)))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (SUC i))))) ((complex_pow ((vector_sub z) u)) i))) (Cx (real_of_num ((SUC i) * (FACT i))))))) ((complex_mul ((f (SUC i)) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n))))))
T c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num cSUC f3 ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num c* cSUC f3 cFACT f3 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 cSUC b0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num cSUC b0 ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num c* cSUC b0 cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT f3
- |- ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n)
T * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
+ |- (((!x. (!y. (((complex_mul x) (vector_neg y)) = (vector_neg ((complex_mul x) y))))) ==> ((\x. (!y. (((complex_mul x) (vector_neg y)) = (vector_neg ((complex_mul x) y))))) x)) = ((\x. (!y. (((complex_mul x) (vector_neg y)) = (vector_neg ((complex_mul x) y))))) x))
T c= c==> ! ! c= ccomplex_mul b0 cvector_neg b1 cvector_neg ccomplex_mul b0 b1 * / ! c= ccomplex_mul b0 cvector_neg b1 cvector_neg ccomplex_mul b0 b1 f0 * / ! c= ccomplex_mul b0 cvector_neg b1 cvector_neg ccomplex_mul b0 b1 f0
- |- ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))))))
T c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((\m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n)))))) m)
T * / ! ! c= cIN b2 * * part c.. b0 b1 c/\ c<= b0 b2 c<= b2 b1 f0
+ |- ((\n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))) n)
T * / c= c+ cNUMERAL f0 cNUMERAL b0 cNUMERAL c+ f0 b0 f1
+ |- ((((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) ==> ((Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)) = (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = T)
T c= c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c= cRe * / ccomplex_mul * * f2 b0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 b0 cCx creal_of_num cFACT b0 f0 cRe ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0 cT
- |- ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x)))))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((vsum ((NUMERAL _0) .. n)) g)))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 f0 c= cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 * f4 b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 f4
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) ==> ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n)) = ((\n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) n))
T c= c==> ! c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT1 f0 cBIT1 b0 c+ cBIT1 f0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
+ ((\i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) i) |- (((\i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) i) /\ F)
T c==> * / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b0 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ * / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b0 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
- |- (((!g. ((!x. ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (g x)))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) ==> ((\g. ((!x. ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (g x)))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) g)) = ((\g. ((!x. ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (g x)))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c= cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 * / c==> ! c==> cIN b1 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c= cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 f3 * / c==> ! c==> cIN b1 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c= cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 f3
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- ((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (y = x))) |- (y IN ((NUMERAL _0) .. n))
T c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= f2 f0 cIN f2 * * part c.. cNUMERAL c_0 f1
+ |- ((((NUMERAL (BIT1 _0)) <= (SUC i)) /\ ((SUC i) <= n)) ==> ((Re ((complex_mul ((f (SUC i)) z)) ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL _0)))) ((complex_pow (Cx (real_of_num (NUMERAL _0)))) i))) (complex_inv (Cx (real_of_num (FACT (SUC i)))))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 cSUC f0 c<= cSUC f0 f1 c= cRe ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL c_0 ccomplex_pow cCx creal_of_num cNUMERAL c_0 f0 ccomplex_inv cCx creal_of_num cFACT cSUC f0 creal_of_num cNUMERAL c_0
- |- (((!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) ==> ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n)) = ((\n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))) n))
T c= c==> ! c= cSUC cBIT1 b0 cBIT0 cSUC b0 * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0 * / c= cSUC cBIT1 b0 cBIT0 cSUC b0 f0
+ |- (((((has_complex_derivative (\u. ((complex_pow ((vector_sub z) u)) i))) ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (at u)) ==> (((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (Cx (real_of_num (FACT i))))) (at u))) = (((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (Cx (real_of_num (FACT i))))) (at u)))
T c= c==> chas_complex_derivative / ccomplex_pow cvector_sub f0 b0 f1 ccomplex_mul cCx creal_of_num f1 ccomplex_mul ccomplex_pow cvector_sub f0 f2 c- f1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cat f2 chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f0 b0 f1 cCx creal_of_num cFACT f1 ccomplex_div ccomplex_mul cCx creal_of_num f1 ccomplex_mul ccomplex_pow cvector_sub f0 f2 c- f1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f1 cat f2 chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f0 b0 f1 cCx creal_of_num cFACT f1 ccomplex_div ccomplex_mul cCx creal_of_num f1 ccomplex_mul ccomplex_pow cvector_sub f0 f2 c- f1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f1 cat f2
+ |- ((((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT (NUMERAL _0))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (n + (NUMERAL (BIT1 _0))))))) ((complex_pow ((vector_sub z) u)) ((n + (NUMERAL (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT (n + (NUMERAL (BIT1 _0)))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (i + (NUMERAL (BIT1 _0))))))) ((complex_pow ((vector_sub z) u)) ((i + (NUMERAL (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT (i + (NUMERAL (BIT1 _0))))))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) = ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) = (((vector_add ((vector_add ((vector_sub ((\i. ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) (NUMERAL _0))) ((\i. ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) (n + (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((\i. ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) (i + (NUMERAL (BIT1 _0)))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))))
T c= c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT cNUMERAL c_0 ccomplex_mul * * f0 c+ f3 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num c+ f3 cNUMERAL cBIT1 c_0 ccomplex_pow cvector_sub f2 f1 c- c+ f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT c+ f3 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 c+ b0 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num c+ b0 cNUMERAL cBIT1 c_0 ccomplex_pow cvector_sub f2 f1 c- c+ b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT c+ b0 cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 c+ b0 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 c+ f3 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT f3 c= cvector_add cvector_add cvector_sub * / ccomplex_mul * * f0 b0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f1 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 cNUMERAL c_0 * / ccomplex_mul * * f0 b0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f1 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 c+ f3 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f3 / * / ccomplex_mul * * f0 b1 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f2 f1 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 c+ b0 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f0 c+ b0 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 c+ f3 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT f3
+ |- ((((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= (NUMERAL _0)) /\ ((NUMERAL _0) <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) (NUMERAL _0)) = (real_of_num (NUMERAL _0)))) /\ (!i. ((((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) i) = (real_of_num (NUMERAL _0)))) ==> (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= (SUC i)) /\ ((SUC i) <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) (SUC i)) = (real_of_num (NUMERAL _0)))))))
T c/\ c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cNUMERAL c_0 c<= cNUMERAL c_0 f0 c= * / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cNUMERAL c_0 creal_of_num cNUMERAL c_0 ! c==> c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c<= b0 f0 c= * / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0 creal_of_num cNUMERAL c_0 c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC b0 c<= cSUC b0 f0 c= * / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 cSUC b0 creal_of_num cNUMERAL c_0
- |- ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))))))
T c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- (((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = T)
T c= c==> cIN f0 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 c= cRe ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0 cRe ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 f4 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))
T c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- ((Re ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))) = (real_of_num (NUMERAL _0)))
T c= cRe cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 creal_of_num cNUMERAL c_0
+ |- (((!m. (!n. (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i))))))) ==> ((\m. (!n. (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i))))))) m)) = ((\m. (!n. (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i))))))) m))
T c= c==> ! ! c= cvector_add cvsum * * part c.. b0 b1 f0 cvsum * * part c.. b0 b1 f1 cvsum * * part c.. b0 b1 / cvector_add * f0 b2 * f1 b2 * / ! c= cvector_add cvsum * * part c.. b0 b1 f0 cvsum * * part c.. b0 b1 f1 cvsum * * part c.. b0 b1 / cvector_add * f0 b2 * f1 b2 f2 * / ! c= cvector_add cvsum * * part c.. b0 b1 f0 cvsum * * part c.. b0 b1 f1 cvsum * * part c.. b0 b1 / cvector_add * f0 b2 * f1 b2 f2
- |- (((((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) ==> ((((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u)) = q')) ==> (((((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u))) = ((((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) ==> q')))
T c==> c==> chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f3 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cat f3 c= chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 f0 cCx creal_of_num cFACT f0 cat f3 f4 c= c==> chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f3 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cat f3 chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 f0 cCx creal_of_num cFACT f0 cat f3 c==> chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f3 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cat f3 f4
- |- (((!n. (((BIT0 m) < (BIT0 n)) = (m < n))) ==> ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n)) = ((\n. (((BIT0 m) < (BIT0 n)) = (m < n))) n))
T c= c==> ! c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1 * / c= c< cBIT0 f0 cBIT0 b0 c< f0 b0 f1
+ ((vec (NUMERAL _0)) = (Cx (real_of_num (NUMERAL _0)))) |- ((Cx (real_of_num (NUMERAL _0))) = (vec (NUMERAL _0)))
T c==> c= cvec cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 c= cCx creal_of_num cNUMERAL c_0 cvec cNUMERAL c_0
+ (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add (Re x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x)))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_add cRe f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0
+ (~ (((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x))))) |- ((~ (((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x))))) /\ F)
T c==> c~ c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0 c/\ c~ c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0 cF
+ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))) |- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num n))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_num n)) (real_of_num (NUMERAL _0))))
T c==> c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- (((!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))) ==> ((\z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))) z)) = ((\z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))) z))
T c= c==> ! c= c= cvector_add f0 f1 cvector_add f0 b0 c= f1 b0 * / c= c= cvector_add f0 f1 cvector_add f0 b0 c= f1 b0 f2 * / c= c= cvector_add f0 f1 cvector_add f0 b0 c= f1 b0 f2
- |- ((\n. (((BIT0 n) = _0) = (n = _0))) n)
T * / c= c= cBIT0 b0 c_0 c= b0 c_0 f0
+ |- ((\b. (!c. (((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c))) = ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c))))) b)
T * / ! c= ccomplex_mul cvector_neg f0 ccomplex_mul b0 ccomplex_mul ccomplex_inv f0 b1 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul b0 b1 f1
+ |- ((\n. (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))))) n)
T * / c= cvector_add cvsum * * part c.. f0 b0 f1 cvsum * * part c.. f0 b0 f2 cvsum * * part c.. f0 b0 / cvector_add * f1 b1 * f2 b1 f3
+ (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((((~ (!f. (!z. (!u. (!n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))))))) = (?f. (?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> (!f. (!z. (!u. (!n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))))))) = (!f. (!z. (!u. (!n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))))))
T c= c==> c= c~ ! ! ! ! c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 c? / c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 ! ! ! ! c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ! ! ! ! c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) |- (((!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x)))) ==> ((\x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x)))) x)) = ((\x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x)))) x))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c= c==> ! c==> c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c<= f4 f2 chas_complex_derivative * f3 f4 * * f3 c+ f4 cNUMERAL cBIT1 c_0 b0 cat b0 * / c==> c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c<= f4 f2 chas_complex_derivative * f3 f4 * * f3 c+ f4 cNUMERAL cBIT1 c_0 b0 cat b0 f5 * / c==> c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c<= f4 f2 chas_complex_derivative * f3 f4 * * f3 c+ f4 cNUMERAL cBIT1 c_0 b0 cat b0 f5
+ |- (((~ q) = (?z. (?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> q)
T c==> c= c~ f0 c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((\m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) m)
T * / ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL n) >= (NUMERAL m)) = (n >= m))
T c= c>= cNUMERAL f0 cNUMERAL f1 c>= f0 f1
- |- (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n)))
T c= c- cBIT0 f0 cBIT0 f1 cBIT0 c- f0 f1
- |- (((!n. (((BIT1 m) = (BIT0 n)) = F)) ==> ((\n. (((BIT1 m) = (BIT0 n)) = F)) n)) = ((\n. (((BIT1 m) = (BIT0 n)) = F)) n))
T c= c==> ! c= c= cBIT1 f0 cBIT0 b0 cF * / c= c= cBIT1 f0 cBIT0 b0 cF f1 * / c= c= cBIT1 f0 cBIT0 b0 cF f1
- (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) |- ((?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) /\ F)
T c==> c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((!g. ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x)))))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) ==> ((\g. ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x)))))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g)) = ((\g. ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x)))))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 f0 c= cvector_add ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f3 f2 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f3 f2 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 f0 c= cvector_add ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f3 f2 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f3 f2 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 f0 c= cvector_add ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f3 f2 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f3 f2 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4
- |- ((\g. ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x))))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 f0 c= ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) |- (!u. ((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u))))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 ! c==> cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f2 cCx creal_of_num cFACT f2 cat b0
- |- ((\n. ((_0 EXP (BIT1 n)) = _0)) n)
T * / c= cEXP c_0 cBIT1 b0 c_0 f0
- ((FINITE s) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f y) = (f x)))) ==> (y = x))))) |- (((FINITE s) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f y) = (f x)))) ==> (y = x))))) /\ (((vsum s) (g o f)) = ((vsum ((IMAGE f) s)) g)))
T c==> c/\ cFINITE f0 ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c= * f1 b1 * f1 b0 c= b1 b0 c/\ c/\ cFINITE f0 ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c= * f1 b1 * f1 b0 c= b1 b0 c= cvsum f0 * * part co f2 f1 cvsum * * part cIMAGE f1 f0 f2
- (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0))) = (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 c= creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0
- |- (((!n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) ==> ((\n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) n)) = ((\n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) n))
T c= c==> ! c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 * / c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 f1 * / c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 f1
- |- ((_0 EXP (BIT1 n)) = _0)
T c= cEXP c_0 cBIT1 f0 c_0
+ |- ((((NUMERAL (BIT1 _0)) <= (SUC i)) /\ ((SUC i) <= n)) ==> ((Re ((complex_mul ((f (SUC i)) z)) ((complex_div ((complex_pow ((vector_sub z) z)) (SUC i))) (Cx (real_of_num (FACT (SUC i))))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 cSUC f0 c<= cSUC f0 f1 c= cRe ccomplex_mul * * f2 cSUC f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 cSUC f0 cCx creal_of_num cFACT cSUC f0 creal_of_num cNUMERAL c_0
+ (!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) |- (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))
T c==> ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 ! ! c==> c/\ cFINITE b1 ! c==> cIN b2 b1 chas_complex_derivative * f1 b2 * f0 b2 b0 chas_complex_derivative / cvsum b1 / * * f1 b3 b2 cvsum b1 f0 b0
+ |- (((!z. (((complex_mul ((complex_mul x) y)) z) = ((complex_mul x) ((complex_mul y) z)))) ==> ((\z. (((complex_mul ((complex_mul x) y)) z) = ((complex_mul x) ((complex_mul y) z)))) z)) = ((\z. (((complex_mul ((complex_mul x) y)) z) = ((complex_mul x) ((complex_mul y) z)))) z))
T c= c==> ! c= ccomplex_mul ccomplex_mul f0 f1 b0 ccomplex_mul f0 ccomplex_mul f1 b0 * / c= ccomplex_mul ccomplex_mul f0 f1 b0 ccomplex_mul f0 ccomplex_mul f1 b0 f2 * / c= ccomplex_mul ccomplex_mul f0 f1 b0 ccomplex_mul f0 ccomplex_mul f1 b0 f2
+ |- (((!m. ((m + (NUMERAL (BIT1 _0))) = (SUC m))) ==> ((\m. ((m + (NUMERAL (BIT1 _0))) = (SUC m))) m)) = ((\m. ((m + (NUMERAL (BIT1 _0))) = (SUC m))) m))
T c= c==> ! c= c+ b0 cNUMERAL cBIT1 c_0 cSUC b0 * / c= c+ b0 cNUMERAL cBIT1 c_0 cSUC b0 f0 * / c= c+ b0 cNUMERAL cBIT1 c_0 cSUC b0 f0
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT (NUMERAL _0))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (n + (NUMERAL (BIT1 _0))))))) ((complex_pow ((vector_sub z) u)) n))) (Cx (real_of_num (FACT (n + (NUMERAL (BIT1 _0)))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (i + (NUMERAL (BIT1 _0))))))) ((complex_pow ((vector_sub z) u)) i))) (Cx (real_of_num (FACT (i + (NUMERAL (BIT1 _0))))))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) = ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n))))))
T c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT cNUMERAL c_0 ccomplex_mul * * f0 c+ f3 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num c+ f3 cNUMERAL cBIT1 c_0 ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT c+ f3 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 c+ b0 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num c+ b0 cNUMERAL cBIT1 c_0 ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT c+ b0 cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 c+ b0 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 c+ f3 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT f3
- |- (!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))))
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c= cvector_add ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 cvector_add ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0
- |- ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))
T c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))) |- ((((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 c/\ c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 cF
- |- ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))
T c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))) n)
T * / c= c* cBIT1 f0 cBIT0 b0 c+ cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (Re x))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0
+ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))) |- ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num n))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_num n)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num n))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num n))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num n))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num n))) (real_of_num (NUMERAL _0))))
T c==> c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_num f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))
T c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- (((!x. (((vector_add x) (Cx (real_of_num (NUMERAL _0)))) = x)) ==> ((\x. (((vector_add x) (Cx (real_of_num (NUMERAL _0)))) = x)) x)) = ((\x. (((vector_add x) (Cx (real_of_num (NUMERAL _0)))) = x)) x))
T c= c==> ! c= cvector_add b0 cCx creal_of_num cNUMERAL c_0 b0 * / c= cvector_add b0 cCx creal_of_num cNUMERAL c_0 b0 f0 * / c= cvector_add b0 cCx creal_of_num cNUMERAL c_0 b0 f0
+ |- (((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c))) = ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))
T c= ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_add ((f (NUMERAL _0)) $ i)) (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_sub ((f (NUMERAL _0)) $ i)) ((f (SUC n)) $ i))) $ i)) ((lambdai. ((real_add (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) ((f (SUC n)) $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ * f1 cNUMERAL c_0 b0 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f1 b0 f0 c$ clambda / creal_add c$ clambda / creal_sub c$ * f1 cNUMERAL c_0 b1 c$ * f1 cSUC f2 b1 b0 c$ clambda / creal_add c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f1 b1 c$ * f1 cSUC f2 b1 b0 f0
+ |- (((has_complex_derivative (\u. ((complex_pow ((vector_sub z) u)) i))) ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (at u))
T chas_complex_derivative / ccomplex_pow cvector_sub f0 b0 f1 ccomplex_mul cCx creal_of_num f1 ccomplex_mul ccomplex_pow cvector_sub f0 f2 c- f1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cat f2
- ((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) |- ((!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))
T c==> c/\ cFINITE f0 ! c==> cIN b0 f0 chas_complex_derivative * f1 b0 * f2 b0 f3 c==> ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f2 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f2 b1 chas_complex_derivative / cvsum f0 / * * f1 b1 b0 cvsum f0 f2 f3
+ |- ((~ (((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x))))) ==> F)
T c==> c~ c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0 cF
+ |- (((!w. (!z. (((complex_div w) z) = ((complex_mul w) (complex_inv z))))) ==> ((\w. (!z. (((complex_div w) z) = ((complex_mul w) (complex_inv z))))) w)) = ((\w. (!z. (((complex_div w) z) = ((complex_mul w) (complex_inv z))))) w))
T c= c==> ! ! c= ccomplex_div b0 b1 ccomplex_mul b0 ccomplex_inv b1 * / ! c= ccomplex_div b0 b1 ccomplex_mul b0 ccomplex_inv b1 f0 * / ! c= ccomplex_div b0 b1 ccomplex_mul b0 ccomplex_inv b1 f0
- |- (((!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) ==> ((\m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) m)) = ((\m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) m))
T c= c==> ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 * / ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 f0 * / ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 f0
+ |- ((\x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))) x)
T * / c==> c/\ chas_complex_derivative f0 f1 cat b0 chas_complex_derivative f2 f3 cat b0 chas_complex_derivative / ccomplex_mul * f0 b1 * f2 b1 cvector_add ccomplex_mul * f0 b0 f3 ccomplex_mul f1 * f2 b0 cat b0 f4
+ |- (!f. (((vector_add (f (NUMERAL _0))) ((vsum ((NUMERAL (BIT1 _0)) .. n)) f)) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (SUC n)))) ((vector_add ((vsum ((NUMERAL (BIT1 _0)) .. n)) f)) (f (SUC n))))))
T c= cvector_add * f0 cNUMERAL c_0 cvsum * * part c.. cNUMERAL cBIT1 c_0 f1 f0 cvector_add cvector_sub * f0 cNUMERAL c_0 * f0 cSUC f1 cvector_add cvsum * * part c.. cNUMERAL cBIT1 c_0 f1 f0 * f0 cSUC f1
- |- ((\g. ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x)))))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 f0 c= cvector_add ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f3 f2 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f3 f2 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4
- |- ((\n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))) n)
T * / c= c- cNUMERAL f0 cNUMERAL b0 cNUMERAL c- f0 b0 f1
- (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))) |- ((real_of_num (NUMERAL _0)) = ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_num cNUMERAL c_0 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))) n)
T * / c= cPRE cNUMERAL b0 cNUMERAL cPRE b0 f0
- |- (((!n. ((_0 <= (BIT0 n)) = T)) ==> ((\n. ((_0 <= (BIT0 n)) = T)) n)) = ((\n. ((_0 <= (BIT0 n)) = T)) n))
T c= c==> ! c= c<= c_0 cBIT0 b0 cT * / c= c<= c_0 cBIT0 b0 cT f0 * / c= c<= c_0 cBIT0 b0 cT f0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _2014380)) /\ ((real_le ((real_add ((real_add (real_of_int _2014380)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) |- (((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!n. ((_0 < (BIT0 n)) = (_0 < n))) ==> ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n)) = ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n))
T c= c==> ! c= c< c_0 cBIT0 b0 c< c_0 b0 * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0 * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0
+ |- ((real_neg ((real_sub ((real_add ((f (NUMERAL _0)) $ i)) (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i))) ((real_add ((real_sub ((f (NUMERAL _0)) $ i)) ((f (SUC n)) $ i))) ((real_add (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) ((f (SUC n)) $ i))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add c$ * f0 cNUMERAL c_0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f0 f1 creal_add creal_sub c$ * f0 cNUMERAL c_0 f1 c$ * f0 cSUC f2 f1 creal_add c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f0 f1 c$ * f0 cSUC f2 f1 creal_of_num cNUMERAL c_0
+ |- ((((vector_sub (vector_neg ((complex_mul ((f (NUMERAL _0)) u)) ((complex_mul (Cx (real_of_num (NUMERAL _0)))) ((complex_mul ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))) = (((vector_add ((vector_sub (vector_neg ((complex_mul ((f (NUMERAL _0)) u)) ((complex_mul (vec (NUMERAL _0))) ((complex_mul ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) (vec (NUMERAL _0))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))
T c= c= cvector_sub cvector_neg ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_mul cCx creal_of_num cNUMERAL c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 c= cvector_add cvector_sub cvector_neg ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_mul cvec cNUMERAL c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 cvec cNUMERAL c_0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3
- |- ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) g)))
T c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 f0 c= cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 * f4 b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 f4
- |- (((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x)))))) = ((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x))))))))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((vsum ((NUMERAL _0) .. n)) (\x. ((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x)))))))))) = (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((vsum ((NUMERAL _0) .. n)) (\x. ((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x))))))))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 f0 c= cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0
- ((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))) |- (((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))) /\ ((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))))
T c==> c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0 c/\ c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0
+ |- (((!f. (!g'. (!f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) ==> ((\f. (!g'. (!f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) f)) = ((\f. (!g'. (!f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) f))
T c= c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b4 chas_complex_derivative b3 b1 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b3 b5 cvector_add ccomplex_mul * b0 b4 b1 ccomplex_mul b2 * b3 b4 cat b4 * / ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b4 chas_complex_derivative b3 b1 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b3 b5 cvector_add ccomplex_mul * b0 b4 b1 ccomplex_mul b2 * b3 b4 cat b4 f0 * / ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b4 chas_complex_derivative b3 b1 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b3 b5 cvector_add ccomplex_mul * b0 b4 b1 ccomplex_mul b2 * b3 b4 cat b4 f0
- |- (((BIT1 n) = _0) = F)
T c= c= cBIT1 f0 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))
T c= c- cBIT0 f0 cBIT1 f1 cPRE cBIT0 c- f0 f1
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((NUMERAL _0) <= i) /\ (i <= n)) |- (((NUMERAL _0) <= i) = T)
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c= c<= cNUMERAL c_0 f0 cT
+ ((\c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) c) |- (((\c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) c) /\ F)
T c==> * / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 b0 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ * / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 b0 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 ! ! ! ! c==> c/\ chas_complex_derivative f0 b0 cat b3 chas_complex_derivative b1 b2 cat b3 chas_complex_derivative / ccomplex_mul * f0 b4 * b1 b4 cvector_add ccomplex_mul * f0 b3 b2 ccomplex_mul b0 * b1 b3 cat b3
+ |- ((((real_ge x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) ==> (!f. (!g'. (!f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))))
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b4 chas_complex_derivative b3 b1 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b3 b5 cvector_add ccomplex_mul * b0 b4 b1 ccomplex_mul b2 * b3 b4 cat b4
- |- ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))))))))
T c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- ((\x. (!y. ((Re ((vector_add x) y)) = ((real_add (Re x)) (Re y))))) x)
T * / ! c= cRe cvector_add b0 b1 creal_add cRe b0 cRe b1 f0
+ |- ((((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w))))) ==> ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))))) = T)
T c= c==> c/\ cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f4 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 f2 cRe * / cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f4 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 f1 cRe ccomplex_mul * / ccomplex_mul * * f4 c+ f3 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 f3 cCx creal_of_num cFACT f3 f0 cvector_sub f2 f1 c/\ cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c= cRe * * f4 cNUMERAL c_0 f2 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f4 b0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul * * f4 c+ f3 cNUMERAL cBIT1 c_0 f0 ccomplex_div ccomplex_pow cvector_sub f2 f0 f3 cCx creal_of_num cFACT f3 cvector_sub f2 f1 cT
+ |- (((Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))) = ((real_add (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))) ==> ((Re ((f (NUMERAL _0)) z)) = ((real_add (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))))
T c==> c= cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 creal_add cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3 c= cRe * * f1 cNUMERAL c_0 f2 creal_add cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3
+ |- ((((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) ==> F)
T c==> c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((\m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))) m)
T * / ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1 f0
- (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) (Re x)) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) (Re x)) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) (Re x)) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 cRe f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 cRe f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 cRe f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!a. (!b. (convex (open_segment (a , b))))) ==> ((\a. (!b. (convex (open_segment (a , b))))) a)) = ((\a. (!b. (convex (open_segment (a , b))))) a))
T c= c==> ! ! cconvex * part copen_segment c, b0 b1 * / ! cconvex * part copen_segment c, b0 b1 f0 * / ! cconvex * part copen_segment c, b0 b1 f0
- |- ((_0 < (BIT0 n)) = (_0 < n))
T c= c< c_0 cBIT0 f0 c< c_0 f0
- |- ((\m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) m)
T * / ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
+ (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))) |- ((((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x)) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (Re x))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (Re x))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 cRe f0 creal_of_num cNUMERAL c_0
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))), (u IN (closed_segment ((CONS (w , z)) NIL))) |- (!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((has_complex_derivative (\u. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) (at u))))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> cIN f4 * part cclosed_segment cCONS c, f0 f1 cNIL ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 f2 chas_complex_derivative / ccomplex_mul * * f3 b0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b0 cCx creal_of_num cFACT b0 cvector_add ccomplex_mul * * f3 b0 f4 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f1 f4 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f3 c+ b0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f1 f4 b0 cCx creal_of_num cFACT b0 cat f4
- |- (((!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) ==> ((\n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) n)) = ((\n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) n))
T c= c==> ! c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 * / c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 f1 * / c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 f1
- |- (!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))) = ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c= ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0
- |- ((\m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) m)
T * / ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 f0
- |- (((BIT0 n) + _0) = (BIT0 n))
T c= c+ cBIT0 f0 c_0 cBIT0 f0
+ ((\z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z') |- (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> * / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 f3 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\z. (!u. (!i. (((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i))))) = ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))))) z)
T * / ! ! c= ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 f0
- |- ((\n. (((NUMERAL m) < (NUMERAL n)) = (m < n))) n)
T * / c= c< cNUMERAL f0 cNUMERAL b0 c< f0 b0 f1
+ |- (((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i))))) = ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))
T c= ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0
- |- (((BIT1 n) > _0) = T)
T c= c> cBIT1 f0 c_0 cT
- |- ((\n. ((_0 <= (BIT1 n)) = T)) n)
T * / c= c<= c_0 cBIT1 b0 cT f0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((~ q) = (?a. (?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> q)
T c==> c= c~ f0 c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _2014380)) /\ ((real_le ((real_add ((real_add (real_of_int _2014380)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _2014380)) /\ ((real_le ((real_add ((real_add (real_of_int _2014380)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _2014380)) /\ ((real_le ((real_add ((real_add (real_of_int _2014380)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((vector_add ((vector_sub (vector_neg ((complex_mul ((f (NUMERAL _0)) u)) ((complex_mul (Cx (real_of_num (NUMERAL _0)))) ((complex_mul ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add (vector_neg ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))) = (((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_mul ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))
T c= c= cvector_add cvector_sub cvector_neg ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_mul cCx creal_of_num cNUMERAL c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add cvector_neg ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3
- |- (((!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((((NUMERAL _0) <= n) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vector_add ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) (NUMERAL _0))) ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))))) = (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vector_add ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) (NUMERAL _0))) ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))))))
T c= c==> c<= cNUMERAL c_0 f0 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cvector_add * / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cNUMERAL c_0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cvector_add * / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cNUMERAL c_0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0
- |- (~ (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c~ c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 f3 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x)))) ==> (((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x))))) = (((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x)))))
T c= c==> c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0 c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0 c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0
+ (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((\f. (!s. ((FINITE s) ==> ((Re ((vsum s) f)) = ((sum s) (\x. (Re (f x)))))))) f)
T * / ! c==> cFINITE b1 c= cRe cvsum b1 b0 csum b1 / cRe * b0 b2 f0
- |- ((\n. (((BIT1 n) < _0) = F)) n)
T * / c= c< cBIT1 b0 c_0 cF f0
+ |- (((!f. (!z. (!u. (!n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))))) ==> ((\f. (!z. (!u. (!n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))))) f)) = ((\f. (!z. (!u. (!n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))))) f))
T c= c==> ! ! ! ! c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 * / ! ! ! c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 f0 * / ! ! ! c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 f0
- |- ((\g. ((!x. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) ==> ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (g x)))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) g)
T * / c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c<= b1 f0 c= cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 f3
+ |- (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n))))))
T c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
+ |- ((\x. (((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) x) = x)) x)
T * / c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 b0 b0 f0
+ |- (((!n. (((complex_pow x) (SUC n)) = ((complex_mul x) ((complex_pow x) n)))) ==> ((\n. (((complex_pow x) (SUC n)) = ((complex_mul x) ((complex_pow x) n)))) n)) = ((\n. (((complex_pow x) (SUC n)) = ((complex_mul x) ((complex_pow x) n)))) n))
T c= c==> ! c= ccomplex_pow f0 cSUC b0 ccomplex_mul f0 ccomplex_pow f0 b0 * / c= ccomplex_pow f0 cSUC b0 ccomplex_mul f0 ccomplex_pow f0 b0 f1 * / c= ccomplex_pow f0 cSUC b0 ccomplex_mul f0 ccomplex_pow f0 b0 f1
- ((NUMERAL _0) <= i) |- (((NUMERAL _0) <= i) = T)
T c==> c<= cNUMERAL c_0 f0 c= c<= cNUMERAL c_0 f0 cT
+ (!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) |- ((!s. (!net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net)))) = T)
T c==> ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 c= ! ! c==> c/\ cFINITE b0 ! c==> cIN b2 b0 chas_complex_derivative * f1 b2 * f0 b2 b1 chas_complex_derivative / cvsum b0 / * * f1 b3 b2 cvsum b0 f0 b1 cT
- (!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))), ((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) |- (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) /\ (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))
T c==> ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 c==> c/\ cFINITE f1 ! c==> cIN b0 f1 chas_complex_derivative * f2 b0 * f0 b0 f3 c/\ c/\ cFINITE f1 ! c==> cIN b0 f1 chas_complex_derivative * f2 b0 * f0 b0 f3 chas_complex_derivative / cvsum f1 / * * f2 b1 b0 cvsum f1 f0 f3
+ |- ((m <= n) = ((int_le (int_of_num m)) (int_of_num n)))
T c= c<= f0 f1 cint_le cint_of_num f0 cint_of_num f1
+ |- ((!i. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))) = ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))) ==> (((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))))
T c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c<= b0 f0 c= ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 c= cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))) \/ (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0))))) |- F
T c==> c\/ c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 cF
+ ((\b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) b) |- (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul b0 ccomplex_mul ccomplex_inv f0 b1 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 b0 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((complex_div ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (Cx (real_of_num (FACT i)))) = ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))
T c= ccomplex_div ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f0 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f0
- |- ((\n. ((_0 >= (BIT0 n)) = (_0 >= n))) n)
T * / c= c>= c_0 cBIT0 b0 c>= c_0 b0 f0
- |- ((\n. (((BIT1 n) * _0) = _0)) n)
T * / c= c* cBIT1 b0 c_0 c_0 f0
- |- ((_0 - _0) = _0)
T c= c- c_0 c_0 c_0
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) n)
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
+ |- (((!x. (((\n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) x) ==> F)) ==> ((?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> F)) = ((?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> F))
T c= c==> ! c==> * / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b1 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f0 cSUC b1 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b1 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((!n. ((_0 = (BIT1 n)) = F)) ==> ((\n. ((_0 = (BIT1 n)) = F)) n)) = ((\n. ((_0 = (BIT1 n)) = F)) n))
T c= c==> ! c= c= c_0 cBIT1 b0 cF * / c= c= c_0 cBIT1 b0 cF f0 * / c= c= c_0 cBIT1 b0 cF f0
- |- (((!n. (((BIT1 m) = (BIT1 n)) = (m = n))) ==> ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n)) = ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n))
T c= c==> ! c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1 * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1
+ (~ (~ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))))) |- (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0)))
T c==> c~ c~ c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((vsum ((NUMERAL _0) .. n)) g)))
T c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 f0 c= cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 * f4 b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 f4
- |- ((\m. (((BIT0 m) EXP _0) = (BIT1 _0))) m)
T * / c= cEXP cBIT0 b0 c_0 cBIT1 c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!f. (!g. (!s. (((FINITE s) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f y) = (f x)))) ==> (y = x))))) ==> (((vsum s) (g o f)) = ((vsum ((IMAGE f) s)) g)))))) ==> ((\f. (!g. (!s. (((FINITE s) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f y) = (f x)))) ==> (y = x))))) ==> (((vsum s) (g o f)) = ((vsum ((IMAGE f) s)) g)))))) f)) = ((\f. (!g. (!s. (((FINITE s) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f y) = (f x)))) ==> (y = x))))) ==> (((vsum s) (g o f)) = ((vsum ((IMAGE f) s)) g)))))) f))
T c= c==> ! ! ! c==> c/\ cFINITE b2 ! ! c==> c/\ cIN b3 b2 c/\ cIN b4 b2 c= * b0 b4 * b0 b3 c= b4 b3 c= cvsum b2 * * part co b1 b0 cvsum * * part cIMAGE b0 b2 b1 * / ! ! c==> c/\ cFINITE b2 ! ! c==> c/\ cIN b3 b2 c/\ cIN b4 b2 c= * b0 b4 * b0 b3 c= b4 b3 c= cvsum b2 * * part co b1 b0 cvsum * * part cIMAGE b0 b2 b1 f0 * / ! ! c==> c/\ cFINITE b2 ! ! c==> c/\ cIN b3 b2 c/\ cIN b4 b2 c= * b0 b4 * b0 b3 c= b4 b3 c= cvsum b2 * * part co b1 b0 cvsum * * part cIMAGE b0 b2 b1 f0
- |- ((\n. (((BIT0 n) > (BIT1 m)) = (n > m))) n)
T * / c= c> cBIT0 b0 cBIT1 f0 c> b0 f0 f1
- |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_num n)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num n))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num n))) (real_of_num (NUMERAL _0))))
T c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_num f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((\z. (!u. (!n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))))) z)
T * / ! ! c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 f1
+ (i <= n), (u IN (closed_segment ((CONS (w , z)) NIL))) |- ((((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> ((((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) u)) (at u)) = T)) = ((((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) u)) (at u)) = T))
T c==> c<= f0 f1 c==> cIN f2 * part cclosed_segment cCONS c, f3 f4 cNIL c= c==> c/\ cIN f2 * part cclosed_segment cCONS c, f3 f4 cNIL c<= f0 f1 c= chas_complex_derivative * f5 f0 * * f5 c+ f0 cNUMERAL cBIT1 c_0 f2 cat f2 cT c= chas_complex_derivative * f5 f0 * * f5 c+ f0 cNUMERAL cBIT1 c_0 f2 cat f2 cT
+ (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n))) |- ((real_of_num (m * n)) = ((real_mul (real_of_num m)) (real_of_num n)))
T c==> c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1 c= creal_of_num c* f0 f1 creal_mul creal_of_num f0 creal_of_num f1
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))), (((NUMERAL _0) <= i) /\ (i <= n)), (u IN (closed_segment ((CONS (w , z)) NIL))) |- (((has_complex_derivative (\u. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) (at u))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> c/\ c<= cNUMERAL c_0 f4 c<= f4 f2 c==> cIN f5 * part cclosed_segment cCONS c, f0 f1 cNIL chas_complex_derivative / ccomplex_mul * * f3 f4 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f4 cCx creal_of_num cFACT f4 cvector_add ccomplex_mul * * f3 f4 f5 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f4 ccomplex_pow cvector_sub f1 f5 c- f4 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f4 ccomplex_mul * * f3 c+ f4 cNUMERAL cBIT1 c_0 f5 ccomplex_div ccomplex_pow cvector_sub f1 f5 f4 cCx creal_of_num cFACT f4 cat f5
+ (!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) |- ((\s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))) s)
T c==> ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 * / c==> c/\ cFINITE b0 ! c==> cIN b1 b0 chas_complex_derivative * f1 b1 * f0 b1 f2 chas_complex_derivative / cvsum b0 / * * f1 b2 b1 cvsum b0 f0 f2 f3
- |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_num n)) (real_of_num (NUMERAL _0))))
T c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_num f0 creal_of_num cNUMERAL c_0
- (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x)))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0
- |- (((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) ==> ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m)) = ((\m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) m))
T c= c==> ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0 * / ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 f0
+ |- ((\g'. (!f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))))) g')
T * / ! ! ! c==> c/\ chas_complex_derivative f0 b1 cat b3 chas_complex_derivative b2 b0 cat b3 chas_complex_derivative / ccomplex_mul * f0 b4 * b2 b4 cvector_add ccomplex_mul * f0 b3 b0 ccomplex_mul b1 * b2 b3 cat b3 f1
- |- ((\n. ((_0 < (BIT0 n)) = (_0 < n))) n)
T * / c= c< c_0 cBIT0 b0 c< c_0 b0 f0
+ |- ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((has_complex_derivative (\u. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) (at u)))) = ((FINITE ((NUMERAL _0) .. n)) /\ (!i. ((i IN ((NUMERAL _0) .. n)) ==> (((has_complex_derivative ((\i. (\u. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) i)) ((\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) i)) (at u))))))
T c= ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 f0 chas_complex_derivative / ccomplex_mul * * f1 b0 b1 ccomplex_div ccomplex_pow cvector_sub f2 b1 b0 cCx creal_of_num cFACT b0 cvector_add ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f3 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cat f3 c/\ cFINITE * * part c.. cNUMERAL c_0 f0 ! c==> cIN b0 * * part c.. cNUMERAL c_0 f0 chas_complex_derivative * / / ccomplex_mul * * f1 b1 b1 ccomplex_div ccomplex_pow cvector_sub f2 b1 b1 cCx creal_of_num cFACT b1 b0 * / cvector_add ccomplex_mul * * f1 b1 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f2 f3 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b1 cCx creal_of_num cFACT b1 b0 cat f3
- |- (((!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) ==> ((\n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) n)) = ((\n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) n))
T c= c==> ! c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 * / c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1 * / c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
- |- ((_0 EXP _0) = (BIT1 _0))
T c= cEXP c_0 c_0 cBIT1 c_0
+ |- ((((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))) = (((vector_sub (vector_neg ((complex_mul ((f (NUMERAL _0)) u)) ((complex_mul (Cx (real_of_num (NUMERAL _0)))) ((complex_mul ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))
T c= c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 c= cvector_sub cvector_neg ccomplex_mul * * f0 cNUMERAL c_0 f2 ccomplex_mul cCx creal_of_num cNUMERAL c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1
- (!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) |- (((!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))) ==> ((\n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))) n)) = ((\n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))) n))
T c==> ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 c= c==> ! c==> ! c==> c/\ c<= f0 b1 c<= b1 b0 c= * f1 b1 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 b0 f1 creal_of_num cNUMERAL c_0 * / c==> ! c==> c/\ c<= f0 b1 c<= b1 b0 c= * f1 b1 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 b0 f1 creal_of_num cNUMERAL c_0 f2 * / c==> ! c==> c/\ c<= f0 b1 c<= b1 b0 c= * f1 b1 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 b0 f1 creal_of_num cNUMERAL c_0 f2
+ |- (!f'. (!w. (!z'. ((!u. ((u IN (closed_segment ((CONS (w , z')) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (f' u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z')) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z'))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul (f' u)) ((vector_sub z') w))))))))))
T c==> ! c==> cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f4 b1 b2 cCx creal_of_num cFACT b2 * f5 b0 cat b0 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f4 b1 b2 cCx creal_of_num cFACT b2 f1 cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f4 b1 b2 cCx creal_of_num cFACT b2 f0 cRe ccomplex_mul * f5 b0 cvector_sub f1 f0
- |- (((vsum (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))))
T c= cvsum * * part c.. f0 cNUMERAL c_0 f1 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 cvec cNUMERAL c_0
+ |- ((((\a. (?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) a) ==> F) = T)
T c= c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF cT
+ |- (((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (Cx (real_of_num (FACT i))))) (at u))
T chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f0 b0 f1 cCx creal_of_num cFACT f1 ccomplex_div ccomplex_mul cCx creal_of_num f1 ccomplex_mul ccomplex_pow cvector_sub f0 f2 c- f1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f1 cat f2
- |- (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((vsum ((NUMERAL _0) .. n)) (\x. ((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x)))))))))
T c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0
- |- ((\m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) m)
T * / ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
+ |- ((\z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z)))) z)
T * / c= ccomplex_inv ccomplex_mul f0 b0 ccomplex_mul ccomplex_inv f0 ccomplex_inv b0 f1
+ |- ((\m. (!n. (!p. (((IMAGE (\i. (i + p))) (m .. n)) = ((m + p) .. (n + p)))))) m)
T * / ! ! c= * * part cIMAGE / c+ b3 b2 * * part c.. b0 b1 * * part c.. c+ b0 b2 c+ b1 b2 f0
- |- (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum ((NUMERAL _0) .. n)) (\x. ((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x))))))))
T c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0
- |- (((!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) ==> ((\n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) n)) = ((\n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) n))
T c= c==> ! c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 * / c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 f1 * / c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 f1
+ |- (!z'. (((\z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z') ==> F))
T c==> * / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f4 cF
- |- (((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) ==> ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m)) = ((\m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) m))
T c= c==> ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0 * / ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 f0
- |- ((\n. ((_0 + (BIT0 n)) = (BIT0 n))) n)
T * / c= c+ c_0 cBIT0 b0 cBIT0 b0 f0
+ ((((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))) ==> F), ((((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))) \/ (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 cF
- |- ((\m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1 f0
- |- ((((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) ==> ((((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u)) = (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u))))
T c==> chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f3 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cat f3 c= chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 f0 cCx creal_of_num cFACT f0 cat f3 chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 f0 cCx creal_of_num cFACT f0 cat f3
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))), (i <= n), (u IN (closed_segment ((CONS (w , z)) NIL))) |- (((has_complex_derivative (\u. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) (at u))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> c<= f4 f2 c==> cIN f5 * part cclosed_segment cCONS c, f0 f1 cNIL chas_complex_derivative / ccomplex_mul * * f3 f4 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f4 cCx creal_of_num cFACT f4 cvector_add ccomplex_mul * * f3 f4 f5 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f4 ccomplex_pow cvector_sub f1 f5 c- f4 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f4 ccomplex_mul * * f3 c+ f4 cNUMERAL cBIT1 c_0 f5 ccomplex_div ccomplex_pow cvector_sub f1 f5 f4 cCx creal_of_num cFACT f4 cat f5
+ (u IN (closed_segment ((CONS (w , z)) NIL))) |- ((u IN (closed_segment ((CONS (w , z)) NIL))) = T)
T c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c= cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL cT
- (!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) |- ((\n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))) n)
T c==> ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 * / c==> ! c==> c/\ c<= f0 b1 c<= b1 b0 c= * f1 b1 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 b0 f1 creal_of_num cNUMERAL c_0 f2
+ |- ((\n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))) n)
T * / c= cvsum * * part c.. f0 cSUC b0 f1 cCOND c<= f0 cSUC b0 cvector_add cvsum * * part c.. f0 b0 f1 * f1 cSUC b0 cvsum * * part c.. f0 b0 f1 f2
- |- (((!n. (~ (_0 >= (BIT1 n)))) ==> ((\n. (~ (_0 >= (BIT1 n)))) n)) = ((\n. (~ (_0 >= (BIT1 n)))) n))
T c= c==> ! c~ c>= c_0 cBIT1 b0 * / c~ c>= c_0 cBIT1 b0 f0 * / c~ c>= c_0 cBIT1 b0 f0
+ (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))) |- ((((Re x) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) (Re x)) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) (Re x)) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 c= c==> c= cRe f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 cRe f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 cRe f0 creal_of_num cNUMERAL c_0
+ |- (((!m. (!n. (!p. (((m + p) = (n + p)) = (m = n))))) ==> ((\m. (!n. (!p. (((m + p) = (n + p)) = (m = n))))) m)) = ((\m. (!n. (!p. (((m + p) = (n + p)) = (m = n))))) m))
T c= c==> ! ! ! c= c= c+ b0 b2 c+ b1 b2 c= b0 b1 * / ! ! c= c= c+ b0 b2 c+ b1 b2 c= b0 b1 f0 * / ! ! c= c= c+ b0 b2 c+ b1 b2 c= b0 b1 f0
- |- (((!m. (((vsum (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))))) ==> ((\m. (((vsum (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))))) m)) = ((\m. (((vsum (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))))) m))
T c= c==> ! c= cvsum * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 cvec cNUMERAL c_0 * / c= cvsum * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 cvec cNUMERAL c_0 f1 * / c= cvsum * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 cvec cNUMERAL c_0 f1
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- ((\f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))))) f')
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 * / ! ! ! c==> c/\ chas_complex_derivative f0 b0 cat b3 chas_complex_derivative b1 b2 cat b3 chas_complex_derivative / ccomplex_mul * f0 b4 * b1 b4 cvector_add ccomplex_mul * f0 b3 b2 ccomplex_mul b0 * b1 b3 cat b3 f1
- |- ((((has_complex_derivative (\u. (f u))) f') net) ==> ((((has_complex_derivative (\u. (g u))) g') net) ==> (((has_complex_derivative (\u. ((vector_add (f u)) (g u)))) ((vector_add f') g')) net)))
T c==> chas_complex_derivative / * f0 b0 f1 f2 c==> chas_complex_derivative / * f3 b0 f4 f2 chas_complex_derivative / cvector_add * f0 b0 * f3 b0 cvector_add f1 f4 f2
+ ((\a. (?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) a) |- (((?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F) = F)
T c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c= c==> c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul b0 ccomplex_mul ccomplex_inv f0 b1 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
- (((NUMERAL _0) <= i) /\ (i <= n)) |- ((((NUMERAL _0) <= i) /\ (i <= n)) /\ (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c/\ c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c= cvector_add ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 cvector_add ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0
- |- ((!x. ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (g x)))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))
T c==> ! c==> cIN b0 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c= cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 * f3 b0 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 f3
- (a = b), ((a = b) ==> (a ==> b)) |- (((a = b) ==> (a ==> b)) /\ (a ==> b))
T c==> c= f0 f1 c==> c==> c= f0 f1 c==> f0 f1 c/\ c==> c= f0 f1 c==> f0 f1 c==> f0 f1
+ |- (!u. (((\u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) u) ==> F))
T c==> * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b1 ccomplex_mul ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
- |- ((\m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) m)
T * / ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 f0
- |- ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x))))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum ((NUMERAL _0) .. n)) g)))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 f0 c= ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 * f4 b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 f4
+ |- (T = ((FINITE ((NUMERAL _0) .. n)) /\ (!x. (!y. (((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) ==> (y = x))))))
T c= cT c/\ cFINITE * * part c.. cNUMERAL c_0 f0 ! ! c==> c/\ cIN b0 * * part c.. cNUMERAL c_0 f0 c/\ cIN b1 * * part c.. cNUMERAL c_0 f0 c= * / c+ b2 cNUMERAL cBIT1 c_0 b1 * / c+ b2 cNUMERAL cBIT1 c_0 b0 c= b1 b0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((_0 <= _0) = T) /\ ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))))))
T c/\ c= c<= c_0 c_0 cT c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
+ |- ((((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = (real_of_num (NUMERAL _0))) = ((Re ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))) = (real_of_num (NUMERAL _0))))
T c= c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 creal_of_num cNUMERAL c_0 c= cRe cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 creal_of_num cNUMERAL c_0
+ (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) |- ((Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))))
T c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))
T c==> c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((!u. (((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w))))) ==> ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w)))))))) ==> ((?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w)))))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w)))))))))
T c==> ! c==> c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f1 cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f0 cRe ccomplex_mul * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cvector_sub f1 f0 c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= cRe * * f3 cNUMERAL c_0 f1 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 f0 ccomplex_div ccomplex_pow cvector_sub f1 f0 b1 cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f2 cCx creal_of_num cFACT f2 cvector_sub f1 f0 c==> c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f1 cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f0 cRe ccomplex_mul * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cvector_sub f1 f0 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= cRe * * f3 cNUMERAL c_0 f1 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 f0 ccomplex_div ccomplex_pow cvector_sub f1 f0 b1 cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f2 cCx creal_of_num cFACT f2 cvector_sub f1 f0
- |- ((\n. ((ODD (BIT0 n)) = F)) n)
T * / c= cODD cBIT0 b0 cF f0
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) |- (((?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w)))))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w)))))))) = ((!u. ((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) (at u)))) /\ ((?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w)))))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))))))))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c= c==> c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f1 cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f0 cRe ccomplex_mul * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cvector_sub f1 f0 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= cRe * * f3 cNUMERAL c_0 f1 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 f0 ccomplex_div ccomplex_pow cvector_sub f1 f0 b1 cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f2 cCx creal_of_num cFACT f2 cvector_sub f1 f0 c/\ ! c==> cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cat b0 c==> c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f1 cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f0 cRe ccomplex_mul * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cvector_sub f1 f0 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= cRe * * f3 cNUMERAL c_0 f1 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 f0 ccomplex_div ccomplex_pow cvector_sub f1 f0 b1 cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f2 cCx creal_of_num cFACT f2 cvector_sub f1 f0
+ |- (((!x. (!y. (!z. (((complex_mul ((complex_mul x) y)) z) = ((complex_mul x) ((complex_mul y) z)))))) ==> ((\x. (!y. (!z. (((complex_mul ((complex_mul x) y)) z) = ((complex_mul x) ((complex_mul y) z)))))) x)) = ((\x. (!y. (!z. (((complex_mul ((complex_mul x) y)) z) = ((complex_mul x) ((complex_mul y) z)))))) x))
T c= c==> ! ! ! c= ccomplex_mul ccomplex_mul b0 b1 b2 ccomplex_mul b0 ccomplex_mul b1 b2 * / ! ! c= ccomplex_mul ccomplex_mul b0 b1 b2 ccomplex_mul b0 ccomplex_mul b1 b2 f0 * / ! ! c= ccomplex_mul ccomplex_mul b0 b1 b2 ccomplex_mul b0 ccomplex_mul b1 b2 f0
- |- ((_0 - (BIT1 n)) = _0)
T c= c- c_0 cBIT1 f0 c_0
- |- (((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))) = ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) = (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))))
T c= c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 f0 c= ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0
- |- (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))
T c= c* cBIT0 f0 cBIT1 f1 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 f1
- |- ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))))
T c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- (!x. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) ==> ((Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)) = (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))))
T c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c= cRe * / ccomplex_mul * * f2 b0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 b0 cCx creal_of_num cFACT b0 f0 cRe ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0
- |- ((\m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) m)
T * / ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 f0
+ |- (((!z. (((complex_div w) z) = ((complex_mul w) (complex_inv z)))) ==> ((\z. (((complex_div w) z) = ((complex_mul w) (complex_inv z)))) z)) = ((\z. (((complex_div w) z) = ((complex_mul w) (complex_inv z)))) z))
T c= c==> ! c= ccomplex_div f0 b0 ccomplex_mul f0 ccomplex_inv b0 * / c= ccomplex_div f0 b0 ccomplex_mul f0 ccomplex_inv b0 f1 * / c= ccomplex_div f0 b0 ccomplex_mul f0 ccomplex_inv b0 f1
+ |- ((\n. (((m + n) - n) = m)) n)
T * / c= c- c+ f0 b0 b0 f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) ==> ((\m. (((BIT0 m) EXP _0) = (BIT1 _0))) m)) = ((\m. (((BIT0 m) EXP _0) = (BIT1 _0))) m))
T c= c==> ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 * / c= cEXP cBIT0 b0 c_0 cBIT1 c_0 f0 * / c= cEXP cBIT0 b0 c_0 cBIT1 c_0 f0
- |- ((!n. ((ODD (BIT0 n)) = F)) /\ (!n. ((ODD (BIT1 n)) = T)))
T c/\ ! c= cODD cBIT0 b0 cF ! c= cODD cBIT1 b0 cT
- |- (((!g. ((!x. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) ==> ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (g x)))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) ==> ((\g. ((!x. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) ==> ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (g x)))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) g)) = ((\g. ((!x. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) ==> ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (g x)))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c<= b1 f0 c= cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 * / c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c<= b1 f0 c= cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 f3 * / c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c<= b1 f0 c= cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 f3
- |- (((!n. ((EVEN (NUMERAL n)) = (EVEN n))) ==> ((\n. ((EVEN (NUMERAL n)) = (EVEN n))) n)) = ((\n. ((EVEN (NUMERAL n)) = (EVEN n))) n))
T c= c==> ! c= cEVEN cNUMERAL b0 cEVEN b0 * / c= cEVEN cNUMERAL b0 cEVEN b0 f0 * / c= cEVEN cNUMERAL b0 cEVEN b0 f0
- (?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) /\ F)
T c==> c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b1 ccomplex_mul ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b1 ccomplex_mul ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _2014380)) /\ ((real_le ((real_add ((real_add (real_of_int _2014380)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. ((ODD (BIT1 n)) = T)) n)
T * / c= cODD cBIT1 b0 cT f0
- |- (((!g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) ==> ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g)) = ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 f0 c= ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 f0 c= ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4 * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 f0 c= ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4
+ |- (((!u. (((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w))))) ==> ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w)))))))) ==> ((?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w)))))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))))))) = ((?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w)))))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w)))))))))
T c= c==> ! c==> c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f1 cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f0 cRe ccomplex_mul * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cvector_sub f1 f0 c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= cRe * * f3 cNUMERAL c_0 f1 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 f0 ccomplex_div ccomplex_pow cvector_sub f1 f0 b1 cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f2 cCx creal_of_num cFACT f2 cvector_sub f1 f0 c==> c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f1 cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f0 cRe ccomplex_mul * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cvector_sub f1 f0 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= cRe * * f3 cNUMERAL c_0 f1 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 f0 ccomplex_div ccomplex_pow cvector_sub f1 f0 b1 cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f2 cCx creal_of_num cFACT f2 cvector_sub f1 f0 c==> c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f1 cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f0 cRe ccomplex_mul * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cvector_sub f1 f0 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= cRe * * f3 cNUMERAL c_0 f1 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 f0 ccomplex_div ccomplex_pow cvector_sub f1 f0 b1 cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f2 cCx creal_of_num cFACT f2 cvector_sub f1 f0
+ |- ((((\z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) z) ==> F) = T)
T c= c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF cT
- |- ((\n. ((_0 = (BIT0 n)) = (_0 = n))) n)
T * / c= c= c_0 cBIT0 b0 c= c_0 b0 f0
+ |- ((\f. (!g. (!m. (!n. (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i))))))))) f)
T * / ! ! ! c= cvector_add cvsum * * part c.. b2 b3 b0 cvsum * * part c.. b2 b3 b1 cvsum * * part c.. b2 b3 / cvector_add * b0 b4 * b1 b4 f0
- |- (((~ (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) = F)) = ((((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) = F))
T c= c==> c~ c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 c= c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c= c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ (y = x) |- (x = y)
T c==> c= f0 f1 c= f1 f0
- |- ((\m. (((vsum (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))))) m)
T * / c= cvsum * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 cvec cNUMERAL c_0 f1
- |- ((_0 = _0) = T)
T c= c= c_0 c_0 cT
- |- ((\n. (((BIT0 n) * _0) = _0)) n)
T * / c= c* cBIT0 b0 c_0 c_0 f0
- |- (((BIT1 n) >= (BIT1 m)) = (n >= m))
T c= c>= cBIT1 f0 cBIT1 f1 c>= f0 f1
- |- (((!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) ==> ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n)) = ((\n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))) n))
T c= c==> ! c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1 * / c= c* cNUMERAL f0 cNUMERAL b0 cNUMERAL c* f0 b0 f1
+ |- (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))))
T c= cvector_add cvsum * * part c.. f0 f1 f2 cvsum * * part c.. f0 f1 f3 cvsum * * part c.. f0 f1 / cvector_add * f2 b0 * f3 b0
+ |- ((\f. (!z. (!u. (!n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))))) f)
T * / ! ! ! c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 f0
- |- ((((has_complex_derivative (\u. (f u))) f') ((within (at x)) s)) ==> ((((has_complex_derivative (\u. (g u))) g') ((within (at x)) s)) ==> ((~ ((g x) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative (\u. ((complex_div (f u)) (g u)))) ((complex_div ((vector_sub ((complex_mul f') (g x))) ((complex_mul (f x)) g'))) ((complex_pow (g x)) (NUMERAL (BIT0 (BIT1 _0)))))) ((within (at x)) s)))))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 c==> chas_complex_derivative / * f4 b0 f5 cwithin cat f2 f3 c==> c~ c= * f4 f2 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / ccomplex_div * f0 b0 * f4 b0 ccomplex_div cvector_sub ccomplex_mul f1 * f4 f2 ccomplex_mul * f0 f2 f5 ccomplex_pow * f4 f2 cNUMERAL cBIT0 cBIT1 c_0 cwithin cat f2 f3
+ |- ((\g. ((!x. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) ==> ((Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)) = (g x)))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) g)
T * / c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c<= b1 f0 c= cRe * / ccomplex_mul * * f1 b2 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b2 cCx creal_of_num cFACT b2 b1 * b0 b1 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe * / ccomplex_mul * * f1 b2 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b2 cCx creal_of_num cFACT b2 b1 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 f3
+ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))) |- F
T c==> c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- ((\m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) m)
T * / ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 f0
+ |- (((!x. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) ==> ((Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)) = (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))))) = (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))))))
T c= c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c<= b0 f0 c= cRe * / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0 cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe * / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe * / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0
+ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) |- ((((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ F)
T c==> c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0))))) ==> ((\x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0))))) x)) = ((\x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0))))) x))
T c= c==> ! c= ccomplex_mul b0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 * / c= ccomplex_mul b0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 f0 * / c= ccomplex_mul b0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 f0
- |- (((!x. ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))))) = (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))))))
T c= c==> ! c==> cIN b0 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c= cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0
+ |- (((!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ==> ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) n)) = ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) n))
T c= c==> ! cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
+ |- ((!u. ((P u) ==> (Q u))) ==> ((?u. (P u)) ==> (?u. (Q u))))
T c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0
- (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))), ((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) |- ((!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) /\ (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 c==> c/\ chas_complex_derivative f0 f1 cat f2 chas_complex_derivative f3 f4 cat f2 c/\ ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 chas_complex_derivative / ccomplex_mul * f0 b0 * f3 b0 cvector_add ccomplex_mul * f0 f2 f4 ccomplex_mul f1 * f3 f2 cat f2
- |- ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 f0 c= cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4
+ |- ((\z. (((complex_div z) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = z)) z)
T * / c= ccomplex_div b0 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))) n)
T * / c= c* cBIT0 f0 cBIT1 b0 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 b0 f1
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((f (NUMERAL _0)) $ i)) (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_sub ((f (NUMERAL _0)) $ i)) ((f (SUC n)) $ i))) $ i)) ((lambdai. ((real_add (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) ((f (SUC n)) $ i))) $ i))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (f (NUMERAL _0))) ((vsum ((NUMERAL (BIT1 _0)) .. n)) f)) $ i) = (((vector_add ((vector_sub (f (NUMERAL _0))) (f (SUC n)))) ((vector_add ((vsum ((NUMERAL (BIT1 _0)) .. n)) f)) (f (SUC n)))) $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ * f1 cNUMERAL c_0 b0 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f1 b0 f0 c$ clambda / creal_add c$ clambda / creal_sub c$ * f1 cNUMERAL c_0 b1 c$ * f1 cSUC f2 b1 b0 c$ clambda / creal_add c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f1 b1 c$ * f1 cSUC f2 b1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add * f1 cNUMERAL c_0 cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f1 f0 c$ cvector_add cvector_sub * f1 cNUMERAL c_0 * f1 cSUC f2 cvector_add cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f1 * f1 cSUC f2 f0
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))), (i <= n), (u IN (closed_segment ((CONS (w , z)) NIL))) |- ((((has_complex_derivative (\x. ((f i) x))) ((f (i + (NUMERAL (BIT1 _0)))) u)) (at u)) /\ (((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i))))) (at u)))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> c<= f4 f2 c==> cIN f5 * part cclosed_segment cCONS c, f0 f1 cNIL c/\ chas_complex_derivative / * * f3 f4 b0 * * f3 c+ f4 cNUMERAL cBIT1 c_0 f5 cat f5 chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f1 b0 f4 cCx creal_of_num cFACT f4 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f4 ccomplex_pow cvector_sub f1 f5 c- f4 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f4 cat f5
+ ((\x. (f (x + (NUMERAL (BIT1 _0))))) = (f o (\i. (i + (NUMERAL (BIT1 _0)))))) |- ((f o (\i. (i + (NUMERAL (BIT1 _0))))) = (\x. (f (x + (NUMERAL (BIT1 _0))))))
T c==> c= / * f0 c+ b0 cNUMERAL cBIT1 c_0 * * part co f0 / c+ b0 cNUMERAL cBIT1 c_0 c= * * part co f0 / c+ b0 cNUMERAL cBIT1 c_0 / * f0 c+ b0 cNUMERAL cBIT1 c_0
+ |- (((!i. (((a <= i) /\ (i <= b)) ==> ((f i) = (g i)))) ==> (((vsum (a .. b)) (\i. (f i))) = ((vsum (a .. b)) g))) = T)
T c= c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= cvsum * * part c.. f0 f1 / * f2 b0 cvsum * * part c.. f0 f1 f3 cT
+ |- (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = (real_of_num (NUMERAL _0)))
T c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 creal_of_num cNUMERAL c_0
- |- ((\n. (((BIT0 n) >= (BIT0 m)) = (n >= m))) n)
T * / c= c>= cBIT0 b0 cBIT0 f0 c>= b0 f0 f1
- |- ((_0 * (BIT1 n)) = _0)
T c= c* c_0 cBIT1 f0 c_0
+ |- (((vector_add (Cx x)) (Cx y)) = (Cx ((real_add x) y)))
T c= cvector_add cCx f0 cCx f1 cCx creal_add f0 f1
- (x IN ((NUMERAL _0) .. n)) |- ((x IN ((NUMERAL _0) .. n)) /\ (((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x))))) = ((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x)))))))
T c==> cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c= ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0
- (!x. ((P x) ==> (Q x))), ((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))) |- (((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))) /\ ((?x. (P x)) ==> (?x. (Q x))))
T c==> ! c==> * f0 b0 * f1 b0 c==> c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0 c/\ c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0 c==> c? / * f0 b0 c? / * f1 b0
+ ((\z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z') |- (((\z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z') /\ F)
T c==> * / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 c/\ * / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 cF
- |- ((_0 = (BIT0 n)) = (_0 = n))
T c= c= c_0 cBIT0 f0 c= c_0 f0
- |- ((\m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))) m)
T * / ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 f0
- (x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) |- ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) /\ (((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))) = ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))
T c==> cIN f0 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 c/\ cIN f0 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 c= ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0
- (!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) |- (((!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0)))))) ==> ((\m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0)))))) m)) = ((\m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0)))))) m))
T c==> ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 c= c==> ! ! c==> ! c==> c/\ c<= b0 b2 c<= b2 b1 c= * f0 b2 creal_of_num cNUMERAL c_0 c= csum * * part c.. b0 b1 f0 creal_of_num cNUMERAL c_0 * / ! c==> ! c==> c/\ c<= b0 b2 c<= b2 b1 c= * f0 b2 creal_of_num cNUMERAL c_0 c= csum * * part c.. b0 b1 f0 creal_of_num cNUMERAL c_0 f1 * / ! c==> ! c==> c/\ c<= b0 b2 c<= b2 b1 c= * f0 b2 creal_of_num cNUMERAL c_0 c= csum * * part c.. b0 b1 f0 creal_of_num cNUMERAL c_0 f1
+ |- ((y = z) = (((vector_add (vector_neg z)) y) = ((vector_add (vector_neg z)) z)))
T c= c= f0 f1 c= cvector_add cvector_neg f1 f0 cvector_add cvector_neg f1 f1
- |- ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x)))))) = ((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x))))))))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((vsum ((NUMERAL _0) .. n)) (\x. ((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x))))))))))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 f0 c= cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0
+ |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((\m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) m)
T * / ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0
- |- ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n))))))
T c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
+ |- (((!g. (!m. (!n. (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)))))) ==> ((\g. (!m. (!n. (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)))))) g)) = ((\g. (!m. (!n. (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)))))) g))
T c= c==> ! ! ! c= cvsum * * part c.. b1 b2 / cvector_add * f0 b3 * b0 b3 cvector_add cvsum * * part c.. b1 b2 f0 cvsum * * part c.. b1 b2 b0 * / ! ! c= cvsum * * part c.. b1 b2 / cvector_add * f0 b3 * b0 b3 cvector_add cvsum * * part c.. b1 b2 f0 cvsum * * part c.. b1 b2 b0 f1 * / ! ! c= cvsum * * part c.. b1 b2 / cvector_add * f0 b3 * b0 b3 cvector_add cvsum * * part c.. b1 b2 f0 cvsum * * part c.. b1 b2 b0 f1
- |- (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))
T c= cEXP cBIT0 f0 cBIT1 f1 c* cBIT0 f0 c* cEXP cBIT0 f0 f1 cEXP cBIT0 f0 f1
+ |- ((((\z. (?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) z) ==> F) = T)
T c= c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF cT
+ |- (((!x. (!y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y))))) ==> ((\x. (!y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y))))) x)) = ((\x. (!y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y))))) x))
T c= c==> ! ! c= cCx creal_mul b0 b1 ccomplex_mul cCx b0 cCx b1 * / ! c= cCx creal_mul b0 b1 ccomplex_mul cCx b0 cCx b1 f0 * / ! c= cCx creal_mul b0 b1 ccomplex_mul cCx b0 cCx b1 f0
- |- ((((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) = F)
T c= c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))))))))))
T c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
+ |- (((vsum ((NUMERAL _0) .. n)) f) = ((vector_add (f (NUMERAL _0))) ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) f)))
T c= cvsum * * part c.. cNUMERAL c_0 f0 f1 cvector_add * f1 cNUMERAL c_0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 f1
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
- |- ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))
T c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))))
T c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- ((\f. (((vsum ((NUMERAL _0) .. n)) f) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (n + (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. n)) (\i. (f (i + (NUMERAL (BIT1 _0))))))))) f)
T * / c= cvsum * * part c.. cNUMERAL c_0 f0 b0 cvector_add cvector_sub * b0 cNUMERAL c_0 * b0 c+ f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f0 / * b0 c+ b1 cNUMERAL cBIT1 c_0 f1
- |- (((BIT1 m) = (BIT1 n)) = (m = n))
T c= c= cBIT1 f0 cBIT1 f1 c= f0 f1
- |- ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))))))
T c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((\z. (?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) z) |- (((?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F) = F)
T c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c= c==> c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b1 ccomplex_mul ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- ((!u. ((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u)))) = (!u. ((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) (at u)))))
T c= ! c==> cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f2 cCx creal_of_num cFACT f2 cat b0 ! c==> cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cat b0
+ (!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) |- ((!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) /\ (!f. (!s. (!net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))))
T c==> ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 c/\ ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 ! ! ! c==> c/\ cFINITE b1 ! c==> cIN b3 b1 chas_complex_derivative * b0 b3 * f0 b3 b2 chas_complex_derivative / cvsum b1 / * * b0 b4 b3 cvsum b1 f0 b2
+ |- (((IMAGE (\i. (i + p))) (m .. n)) = ((m + p) .. (n + p)))
T c= * * part cIMAGE / c+ b0 f0 * * part c.. f1 f2 * * part c.. c+ f1 f0 c+ f2 f0
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))), (u IN (closed_segment ((CONS (w , z)) NIL))) |- ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((has_complex_derivative (\u. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) (at u)))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> cIN f4 * part cclosed_segment cCONS c, f0 f1 cNIL c==> c/\ c<= cNUMERAL c_0 f5 c<= f5 f2 chas_complex_derivative / ccomplex_mul * * f3 f5 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f5 cCx creal_of_num cFACT f5 cvector_add ccomplex_mul * * f3 f5 f4 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f5 ccomplex_pow cvector_sub f1 f4 c- f5 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f5 ccomplex_mul * * f3 c+ f5 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f1 f4 f5 cCx creal_of_num cFACT f5 cat f4
- |- (((!n. ((EVEN (BIT0 n)) = T)) ==> ((\n. ((EVEN (BIT0 n)) = T)) n)) = ((\n. ((EVEN (BIT0 n)) = T)) n))
T c= c==> ! c= cEVEN cBIT0 b0 cT * / c= cEVEN cBIT0 b0 cT f0 * / c= cEVEN cBIT0 b0 cT f0
+ |- ((real_of_num (m * n)) = ((real_mul (real_of_num m)) (real_of_num n)))
T c= creal_of_num c* f0 f1 creal_mul creal_of_num f0 creal_of_num f1
- |- ((((has_complex_derivative (\u. (f u))) f') ((within (at x)) s)) ==> (((has_complex_derivative (\u. ((complex_mul c) (f u)))) ((complex_mul c) f')) ((within (at x)) s)))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 chas_complex_derivative / ccomplex_mul f4 * f0 b0 ccomplex_mul f4 f1 cwithin cat f2 f3
- (!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) |- (!f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0)))))
T c==> ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 ! c==> ! c==> c/\ c<= f0 b1 c<= b1 f1 c= * b0 b1 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 b0 creal_of_num cNUMERAL c_0
- |- (((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (a = b), ((a = b) ==> (a ==> b)) |- ((a = b) /\ (a ==> b))
T c==> c= f0 f1 c==> c==> c= f0 f1 c==> f0 f1 c/\ c= f0 f1 c==> f0 f1
+ |- ((\y. (((complex_mul x) (vector_neg y)) = (vector_neg ((complex_mul x) y)))) y)
T * / c= ccomplex_mul f0 cvector_neg b0 cvector_neg ccomplex_mul f0 b0 f1
+ |- ((((has_complex_derivative (\u. (f u))) f') (at x)) ==> (((has_complex_derivative (\u. ((complex_div (f u)) c))) ((complex_div f') c)) (at x)))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 chas_complex_derivative / ccomplex_div * f0 b0 f3 ccomplex_div f1 f3 cat f2
- |- ((((has_complex_derivative (\u. (f u))) f') (at x)) ==> ((((has_complex_derivative (\u. (g u))) g') (at x)) ==> ((~ ((g x) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative (\u. ((complex_div (f u)) (g u)))) ((complex_div ((vector_sub ((complex_mul f') (g x))) ((complex_mul (f x)) g'))) ((complex_pow (g x)) (NUMERAL (BIT0 (BIT1 _0)))))) (at x)))))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 c==> chas_complex_derivative / * f3 b0 f4 cat f2 c==> c~ c= * f3 f2 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / ccomplex_div * f0 b0 * f3 b0 ccomplex_div cvector_sub ccomplex_mul f1 * f3 f2 ccomplex_mul * f0 f2 f4 ccomplex_pow * f3 f2 cNUMERAL cBIT0 cBIT1 c_0 cat f2
- |- (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))
T c= c- cBIT1 f0 cBIT1 f1 cBIT0 c- f0 f1
- (!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))), (!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) |- ((!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) /\ (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- ((A ==> B) /\ (C ==> D)), (((A ==> B) /\ (C ==> D)) ==> ((A /\ C) ==> (B /\ D))) |- (((A ==> B) /\ (C ==> D)) /\ ((A /\ C) ==> (B /\ D)))
T c==> c/\ c==> f0 f1 c==> f2 f3 c==> c==> c/\ c==> f0 f1 c==> f2 f3 c==> c/\ f0 f2 c/\ f1 f3 c/\ c/\ c==> f0 f1 c==> f2 f3 c==> c/\ f0 f2 c/\ f1 f3
+ |- ((\z. (((vector_add ((vector_add x) y)) z) = ((vector_add x) ((vector_add y) z)))) z)
T * / c= cvector_add cvector_add f0 f1 b0 cvector_add f0 cvector_add f1 b0 f2
- |- ((((((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) = F) ==> (~ (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) = (~ (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c= c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c~ c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 f4 cCx creal_of_num cNUMERAL cBIT1 c_0
- (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- ((((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))) = T)
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 c= c==> c/\ chas_complex_derivative f0 f1 cat f2 chas_complex_derivative f3 f4 cat f2 chas_complex_derivative / ccomplex_mul * f0 b0 * f3 b0 cvector_add ccomplex_mul * f0 f2 f4 ccomplex_mul f1 * f3 f2 cat f2 cT
+ |- (!f. (((vector_add (f (NUMERAL _0))) ((vsum ((SUC (NUMERAL _0)) .. n)) f)) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (SUC n)))) (((COND ((SUC (NUMERAL _0)) <= (SUC n))) ((vector_add ((vsum ((SUC (NUMERAL _0)) .. n)) f)) (f (SUC n)))) ((vsum ((SUC (NUMERAL _0)) .. n)) f)))))
T c= cvector_add * f0 cNUMERAL c_0 cvsum * * part c.. cSUC cNUMERAL c_0 f1 f0 cvector_add cvector_sub * f0 cNUMERAL c_0 * f0 cSUC f1 cCOND c<= cSUC cNUMERAL c_0 cSUC f1 cvector_add cvsum * * part c.. cSUC cNUMERAL c_0 f1 f0 * f0 cSUC f1 cvsum * * part c.. cSUC cNUMERAL c_0 f1 f0
- |- ((\n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) n)
T * / c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 f0
+ |- (!n. (((\n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) n) ==> F))
T c==> * / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 cF
+ ((\i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) i) |- (((?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> F) = F)
T c==> * / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b0 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c= c==> c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f2 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- f2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f2 ccomplex_pow cvector_sub f0 f1 c- f2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f2 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- ((\f. (!g. (!s. (((FINITE s) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f y) = (f x)))) ==> (y = x))))) ==> (((vsum s) (g o f)) = ((vsum ((IMAGE f) s)) g)))))) f)
T * / ! ! c==> c/\ cFINITE b2 ! ! c==> c/\ cIN b3 b2 c/\ cIN b4 b2 c= * b0 b4 * b0 b3 c= b4 b3 c= cvsum b2 * * part co b1 b0 cvsum * * part cIMAGE b0 b2 b1 f0
- |- ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))
T c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- (((!g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) ==> ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g)) = ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 f0 c= cvector_add ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f3 f2 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f3 f2 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 f0 c= cvector_add ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f3 f2 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f3 f2 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4 * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 f0 c= cvector_add ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f3 f2 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f3 f2 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4
- |- ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))
T c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
- |- ((\n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n))))) n)
T * / c= c- cBIT0 f0 cBIT1 b0 cPRE cBIT0 c- f0 b0 f1
+ |- ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))
T c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
- |- (((!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) ==> ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n)) = ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n))
T c= c==> ! c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1 * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1
- |- ((_0 >= (BIT1 n)) = F)
T c= c>= c_0 cBIT1 f0 cF
- |- (((!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))) ==> ((\n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))) n)) = ((\n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))) n))
T c= c==> ! c= c- cNUMERAL f0 cNUMERAL b0 cNUMERAL c- f0 b0 * / c= c- cNUMERAL f0 cNUMERAL b0 cNUMERAL c- f0 b0 f1 * / c= c- cNUMERAL f0 cNUMERAL b0 cNUMERAL c- f0 b0 f1
- |- (((!n. ((_0 <= (BIT1 n)) = T)) ==> ((\n. ((_0 <= (BIT1 n)) = T)) n)) = ((\n. ((_0 <= (BIT1 n)) = T)) n))
T c= c==> ! c= c<= c_0 cBIT1 b0 cT * / c= c<= c_0 cBIT1 b0 cT f0 * / c= c<= c_0 cBIT1 b0 cT f0
+ |- (((FINITE (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> ((Re ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)))))) = ((Re ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x))))))
T c= c==> cFINITE * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c= cRe cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe * / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0 c= cRe cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe * / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0
+ |- ((\m. (!n. (!p. (((m + p) = (n + p)) = (m = n))))) m)
T * / ! ! c= c= c+ b0 b2 c+ b1 b2 c= b0 b1 f0
- |- ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))) ==> ((\f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))) f)) = ((\f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))) f))
T c= c==> ! c==> ! c==> c/\ c<= f0 b1 c<= b1 f1 c= * b0 b1 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 b0 creal_of_num cNUMERAL c_0 * / c==> ! c==> c/\ c<= f0 b1 c<= b1 f1 c= * b0 b1 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 b0 creal_of_num cNUMERAL c_0 f2 * / c==> ! c==> c/\ c<= f0 b1 c<= b1 f1 c= * b0 b1 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 b0 creal_of_num cNUMERAL c_0 f2
+ |- (((int_le (int_of_num (NUMERAL _0))) _2014380) ==> ((int_le (int_of_num (NUMERAL (BIT1 _0)))) ((int_add _2014380) (int_of_num (NUMERAL (BIT1 _0))))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 cint_le cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n)))) n)
T * / c= c- cBIT0 f0 cBIT0 b0 cBIT0 c- f0 b0 f1
+ |- (((!u. (!n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ==> ((\u. (!n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) u)) = ((\u. (!n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) u))
T c= c==> ! ! c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 * / ! c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 f2 * / ! c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 f2
+ |- ((((\i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) i) ==> F) = T)
T c= c==> * / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b0 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF cT
+ |- ((((!u. ((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w))))))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w)))))))) = (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))))))
T c= c==> c==> ! c==> cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cat b0 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f1 cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f0 cRe ccomplex_mul * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cvector_sub f1 f0 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= cRe * * f3 cNUMERAL c_0 f1 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 f0 ccomplex_div ccomplex_pow cvector_sub f1 f0 b1 cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f2 cCx creal_of_num cFACT f2 cvector_sub f1 f0 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= cRe * * f3 cNUMERAL c_0 f1 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 f0 ccomplex_div ccomplex_pow cvector_sub f1 f0 b1 cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f2 cCx creal_of_num cFACT f2 cvector_sub f1 f0
+ (~ (((real_add ((f (NUMERAL _0)) $ i)) (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) = ((real_add ((real_sub ((f (NUMERAL _0)) $ i)) ((f (SUC n)) $ i))) ((real_add (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) ((f (SUC n)) $ i))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add c$ * f0 cNUMERAL c_0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f0 f1 creal_add creal_sub c$ * f0 cNUMERAL c_0 f1 c$ * f0 cSUC f2 f1 creal_add c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f0 f1 c$ * f0 cSUC f2 f1 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((\n. (!f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0)))))) n)
T * / ! c==> ! c==> c/\ c<= f0 b2 c<= b2 b0 c= * b1 b2 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 b0 b1 creal_of_num cNUMERAL c_0 f1
+ |- (((!u. (!i. (((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i))))) = ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i)))))))) ==> ((\u. (!i. (((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i))))) = ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i)))))))) u)) = ((\u. (!i. (((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i))))) = ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i)))))))) u))
T c= c==> ! ! c= ccomplex_mul ccomplex_mul cCx creal_of_num b1 ccomplex_mul ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 * / ! c= ccomplex_mul ccomplex_mul cCx creal_of_num b1 ccomplex_mul ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 f1 * / ! c= ccomplex_mul ccomplex_mul cCx creal_of_num b1 ccomplex_mul ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 f1
- ((A ==> B) /\ (C ==> D)) |- ((((A ==> B) /\ (C ==> D)) ==> ((A /\ C) ==> (B /\ D))) ==> ((A /\ C) ==> (B /\ D)))
T c==> c/\ c==> f0 f1 c==> f2 f3 c==> c==> c/\ c==> f0 f1 c==> f2 f3 c==> c/\ f0 f2 c/\ f1 f3 c==> c/\ f0 f2 c/\ f1 f3
+ |- ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))))
T c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- (((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) ==> ((\m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) m)) = ((\m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) m))
T c= c==> ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 * / ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 f0 * / ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 f0
+ |- (!z. (((\z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z) ==> F))
T c==> * / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 cF
- |- (((!n. (((BIT0 n) > (BIT0 m)) = (n > m))) ==> ((\n. (((BIT0 n) > (BIT0 m)) = (n > m))) n)) = ((\n. (((BIT0 n) > (BIT0 m)) = (n > m))) n))
T c= c==> ! c= c> cBIT0 b0 cBIT0 f0 c> b0 f0 * / c= c> cBIT0 b0 cBIT0 f0 c> b0 f0 f1 * / c= c> cBIT0 b0 cBIT0 f0 c> b0 f0 f1
- |- ((((a = b) ==> (a ==> b)) ==> ((a = b) ==> (a ==> b))) = ((a = b) ==> (a ==> b)))
T c= c==> c==> c= f0 f1 c==> f0 f1 c==> c= f0 f1 c==> f0 f1 c==> c= f0 f1 c==> f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!z. (!n. ((!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w)))))))))) = T)
T c= ! ! c==> ! ! c==> c/\ cIN b3 * part cclosed_segment cCONS c, f0 b0 cNIL c<= b2 b1 chas_complex_derivative * f1 b2 * * f1 c+ b2 cNUMERAL cBIT1 c_0 b3 cat b3 c? / c/\ cIN b2 * part cclosed_segment cCONS c, f0 b0 cNIL c= cRe * * f1 cNUMERAL c_0 b0 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 b1 / ccomplex_mul * * f1 b3 f0 ccomplex_div ccomplex_pow cvector_sub b0 f0 b3 cCx creal_of_num cFACT b3 ccomplex_mul ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 b2 ccomplex_div ccomplex_pow cvector_sub b0 b2 b1 cCx creal_of_num cFACT b1 cvector_sub b0 f0 cT
+ |- (!i. ((((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) i) = (real_of_num (NUMERAL _0)))) ==> (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= (SUC i)) /\ ((SUC i) <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) (SUC i)) = (real_of_num (NUMERAL _0))))))
T c==> c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c= * / cRe ccomplex_mul * * f2 b0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 b0 cCx creal_of_num cFACT b0 f0 creal_of_num cNUMERAL c_0 c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC f0 c<= cSUC f0 f1 c= * / cRe ccomplex_mul * * f2 b0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 b0 cCx creal_of_num cFACT b0 cSUC f0 creal_of_num cNUMERAL c_0
+ |- ((\y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y)))) y)
T * / c= cCx creal_mul f0 b0 ccomplex_mul cCx f0 cCx b0 f1
+ |- ((((Re ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))) = (real_of_num (NUMERAL _0))) ==> ((Re ((f (NUMERAL _0)) z)) = ((real_add (Re ((f (NUMERAL _0)) z))) (Re ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))))))) = ((Re ((f (NUMERAL _0)) z)) = ((real_add (Re ((f (NUMERAL _0)) z))) (Re ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))))))
T c= c==> c= cRe cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 creal_of_num cNUMERAL c_0 c= cRe * * f1 cNUMERAL c_0 f2 creal_add cRe * * f1 cNUMERAL c_0 f2 cRe cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 c= cRe * * f1 cNUMERAL c_0 f2 creal_add cRe * * f1 cNUMERAL c_0 f2 cRe cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0
- |- (((!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))) ==> ((\m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))) m)) = ((\m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))) m))
T c= c==> ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 * / ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 f0 * / ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 f0
+ |- ((\x. (!y. (((real_add x) y) = ((real_add y) x)))) x)
T * / ! c= creal_add b0 b1 creal_add b1 b0 f0
+ |- (((!x. (((a <= x) /\ (x <= b)) ==> ((f x) = (g x)))) ==> (((sum (a .. b)) (\x. (f x))) = ((sum (a .. b)) g))) = T)
T c= c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 / * f2 b0 csum * * part c.. f0 f1 f3 cT
- |- (((BIT0 n) = _0) = (n = _0))
T c= c= cBIT0 f0 c_0 c= f0 c_0
+ |- ((((NUMERAL _0) <= n) ==> (((vsum ((NUMERAL _0) .. n)) f) = ((vector_add (f (NUMERAL _0))) ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) f)))) = (((vsum ((NUMERAL _0) .. n)) f) = ((vector_add (f (NUMERAL _0))) ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) f))))
T c= c==> c<= cNUMERAL c_0 f0 c= cvsum * * part c.. cNUMERAL c_0 f0 f1 cvector_add * f1 cNUMERAL c_0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 f1 c= cvsum * * part c.. cNUMERAL c_0 f0 f1 cvector_add * f1 cNUMERAL c_0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 f1
+ |- (((!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w)))))))) = T)
T c= c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= cRe * * f3 cNUMERAL c_0 f1 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 f0 ccomplex_div ccomplex_pow cvector_sub f1 f0 b1 cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f2 cCx creal_of_num cFACT f2 cvector_sub f1 f0 cT
+ |- ((\f. (!f'. (!w. (!z. ((!u. ((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (((has_complex_derivative f) (f' u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re (f z))) (Re (f w))) = (Re ((complex_mul (f' u)) ((vector_sub z) w))))))))))) (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))))
T * / ! ! ! c==> ! c==> cIN b4 * part cclosed_segment cCONS c, b2 b3 cNIL chas_complex_derivative b0 * b1 b4 cat b4 c? / c/\ cIN b4 * part cclosed_segment cCONS c, b2 b3 cNIL c= creal_sub cRe * b0 b3 cRe * b0 b2 cRe ccomplex_mul * b1 b4 cvector_sub b3 b2 / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1
+ |- (((has_complex_derivative (\u. ((vector_sub z) u))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (at u))
T chas_complex_derivative / cvector_sub f0 b0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cat f1
+ |- (((!net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))) ==> ((\net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))) net)) = ((\net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))) net))
T c= c==> ! c==> c/\ cFINITE f0 ! c==> cIN b1 f0 chas_complex_derivative * f1 b1 * f2 b1 b0 chas_complex_derivative / cvsum f0 / * * f1 b2 b1 cvsum f0 f2 b0 * / c==> c/\ cFINITE f0 ! c==> cIN b1 f0 chas_complex_derivative * f1 b1 * f2 b1 b0 chas_complex_derivative / cvsum f0 / * * f1 b2 b1 cvsum f0 f2 b0 f3 * / c==> c/\ cFINITE f0 ! c==> cIN b1 f0 chas_complex_derivative * f1 b1 * f2 b1 b0 chas_complex_derivative / cvsum f0 / * * f1 b2 b1 cvsum f0 f2 b0 f3
+ |- (!f. (((\f. (?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) f) ==> F))
T c==> * / c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- |- ((_0 > _0) = F)
T c= c> c_0 c_0 cF
+ |- (!u. (((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w))))) ==> ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))))))
T c==> c/\ cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f4 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 f2 cRe * / cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f4 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 f1 cRe ccomplex_mul * / ccomplex_mul * * f4 c+ f3 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 f3 cCx creal_of_num cFACT f3 f0 cvector_sub f2 f1 c/\ cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c= cRe * * f4 cNUMERAL c_0 f2 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f4 b0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul * * f4 c+ f3 cNUMERAL cBIT1 c_0 f0 ccomplex_div ccomplex_pow cvector_sub f2 f0 f3 cCx creal_of_num cFACT f3 cvector_sub f2 f1
+ |- (((!x. (((vector_add (vector_neg x)) x) = (Cx (real_of_num (NUMERAL _0))))) ==> ((\x. (((vector_add (vector_neg x)) x) = (Cx (real_of_num (NUMERAL _0))))) x)) = ((\x. (((vector_add (vector_neg x)) x) = (Cx (real_of_num (NUMERAL _0))))) x))
T c= c==> ! c= cvector_add cvector_neg b0 b0 cCx creal_of_num cNUMERAL c_0 * / c= cvector_add cvector_neg b0 b0 cCx creal_of_num cNUMERAL c_0 f0 * / c= cvector_add cvector_neg b0 b0 cCx creal_of_num cNUMERAL c_0 f0
- |- (((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) ==> ((\m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) m)) = ((\m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) m))
T c= c==> ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 * / ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 f0 * / ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 f0
+ |- (((!i. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) i) = (real_of_num (NUMERAL _0))))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = (real_of_num (NUMERAL _0)))) = (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = (real_of_num (NUMERAL _0))))
T c= c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c<= b0 f0 c= * / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 creal_of_num cNUMERAL c_0
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- ((!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))) = T)
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 c= ! ! c==> c/\ chas_complex_derivative f0 f1 cat b1 chas_complex_derivative b0 f2 cat b1 chas_complex_derivative / ccomplex_mul * f0 b2 * b0 b2 cvector_add ccomplex_mul * f0 b1 f2 ccomplex_mul f1 * b0 b1 cat b1 cT
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (f (NUMERAL _0))) ((vsum ((NUMERAL (BIT1 _0)) .. n)) f)) $ i) = (((vector_add ((vector_sub (f (NUMERAL _0))) (f (SUC n)))) ((vector_add ((vsum ((NUMERAL (BIT1 _0)) .. n)) f)) (f (SUC n)))) $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add * f1 cNUMERAL c_0 cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f1 f0 c$ cvector_add cvector_sub * f1 cNUMERAL c_0 * f1 cSUC f2 cvector_add cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f1 * f1 cSUC f2 f0 cT
- |- (((BIT1 n) >= _0) = T)
T c= c>= cBIT1 f0 c_0 cT
+ |- ((\n. (!p. (((m + p) = (n + p)) = (m = n)))) n)
T * / ! c= c= c+ f0 b1 c+ b0 b1 c= f0 b0 f1
- |- (((real_of_num (NUMERAL _0)) = ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))) = F)
T c= c= creal_of_num cNUMERAL c_0 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0))
T c= c- cBIT1 f0 cBIT0 f1 cCOND c<= f1 f0 cBIT1 c- f0 f1 c_0
- |- (((NUMERAL m) < (NUMERAL n)) = (m < n))
T c= c< cNUMERAL f0 cNUMERAL f1 c< f0 f1
- |- (((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) ==> ((\m. (((BIT1 m) EXP _0) = (BIT1 _0))) m)) = ((\m. (((BIT1 m) EXP _0) = (BIT1 _0))) m))
T c= c==> ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 * / c= cEXP cBIT1 b0 c_0 cBIT1 c_0 f0 * / c= cEXP cBIT1 b0 c_0 cBIT1 c_0 f0
- |- (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))
T c= cEXP cBIT1 f0 cBIT1 f1 c* cBIT1 f0 c* cEXP cBIT1 f0 f1 cEXP cBIT1 f0 f1
+ |- (((!x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) ==> ((\x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) x)) = ((\x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) x))
T c= c==> ! ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 * / ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 f0 * / ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 f0
- |- ((\n. ((ODD (NUMERAL n)) = (ODD n))) n)
T * / c= cODD cNUMERAL b0 cODD b0 f0
- |- (((BIT1 m) <= (BIT0 n)) = (m < n))
T c= c<= cBIT1 f0 cBIT0 f1 c< f0 f1
+ |- ((((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 cF
+ |- ((!x. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) ==> ((Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)) = (g x)))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))
T c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c<= b0 f0 c= cRe * / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0 * f3 b0 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe * / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 f3
- |- ((!x. ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> (((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))) = ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) ==> (((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))))
T c==> ! c==> cIN b0 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c= ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 c= cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0
+ (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))) |- ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x)) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0))))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0
- |- (((((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) = p') ==> ((p' ==> ((((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u)) = q')) ==> (((((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u))) = (p' ==> q'))))
T c==> c= chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f3 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cat f3 f4 c==> c==> f4 c= chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 f0 cCx creal_of_num cFACT f0 cat f3 f5 c= c==> chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f3 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cat f3 chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 f0 cCx creal_of_num cFACT f0 cat f3 c==> f4 f5
- |- ((_0 * _0) = _0)
T c= c* c_0 c_0 c_0
- (((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2014380))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2014380))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((\f'. (!w. (!z'. ((!u. ((u IN (closed_segment ((CONS (w , z')) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (f' u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z')) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z'))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul (f' u)) ((vector_sub z') w)))))))))) (\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))))
T * / ! ! c==> ! c==> cIN b3 * part cclosed_segment cCONS c, b1 b2 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b4 b4 ccomplex_div ccomplex_pow cvector_sub f2 b4 b4 cCx creal_of_num cFACT b4 * b0 b3 cat b3 c? / c/\ cIN b3 * part cclosed_segment cCONS c, b1 b2 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b4 b4 ccomplex_div ccomplex_pow cvector_sub f2 b4 b4 cCx creal_of_num cFACT b4 b2 cRe * / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b4 b4 ccomplex_div ccomplex_pow cvector_sub f2 b4 b4 cCx creal_of_num cFACT b4 b1 cRe ccomplex_mul * b0 b3 cvector_sub b2 b1 / ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 f0 cCx creal_of_num cFACT f0
+ |- (((real_of_num m) = (real_of_num n)) = (m = n))
T c= c= creal_of_num f0 creal_of_num f1 c= f0 f1
+ ((Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))) = ((real_add (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))) |- (((Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))) = ((real_add (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))) /\ ((Re ((f (NUMERAL _0)) z)) = ((real_add (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))))
T c==> c= cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 creal_add cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3 c/\ c= cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 creal_add cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3 c= cRe * * f1 cNUMERAL c_0 f2 creal_add cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3
+ |- ((((((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) = (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u))) ==> ((((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u)))) = ((((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u))))
T c= c==> c= chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f3 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cat f3 chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 f0 cCx creal_of_num cFACT f0 cat f3 c==> chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f3 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cat f3 chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 f0 cCx creal_of_num cFACT f0 cat f3 c==> chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f3 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cat f3 chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 f0 cCx creal_of_num cFACT f0 cat f3
- |- (((BIT0 n) <= _0) = (n <= _0))
T c= c<= cBIT0 f0 c_0 c<= f0 c_0
- |- ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))))
T c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 f0 c= cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0
- |- ((((has_complex_derivative (\u. (f u))) f') ((within (at x)) s)) ==> (((has_complex_derivative (\u. ((complex_pow (f u)) n))) ((complex_mul (Cx (real_of_num n))) ((complex_mul ((complex_pow (f x)) (n - (NUMERAL (BIT1 _0))))) f'))) ((within (at x)) s)))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 chas_complex_derivative / ccomplex_pow * f0 b0 f4 ccomplex_mul cCx creal_of_num f4 ccomplex_mul ccomplex_pow * f0 f2 c- f4 cNUMERAL cBIT1 c_0 f1 cwithin cat f2 f3
+ (!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) |- (!s. (!net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))
T c==> ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 ! ! c==> c/\ cFINITE b0 ! c==> cIN b2 b0 chas_complex_derivative * f1 b2 * f0 b2 b1 chas_complex_derivative / cvsum b0 / * * f1 b3 b2 cvsum b0 f0 b1
+ |- (T = ((((NUMERAL (BIT1 _0)) <= (SUC i)) /\ ((SUC i) <= n)) ==> ((Re ((complex_mul ((f (SUC i)) z)) ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL _0)))) ((complex_pow (Cx (real_of_num (NUMERAL _0)))) i))) (complex_inv (Cx (real_of_num (FACT (SUC i)))))))) = (real_of_num (NUMERAL _0)))))
T c= cT c==> c/\ c<= cNUMERAL cBIT1 c_0 cSUC f0 c<= cSUC f0 f1 c= cRe ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL c_0 ccomplex_pow cCx creal_of_num cNUMERAL c_0 f0 ccomplex_inv cCx creal_of_num cFACT cSUC f0 creal_of_num cNUMERAL c_0
- |- (((!n. ((_0 - (BIT1 n)) = _0)) ==> ((\n. ((_0 - (BIT1 n)) = _0)) n)) = ((\n. ((_0 - (BIT1 n)) = _0)) n))
T c= c==> ! c= c- c_0 cBIT1 b0 c_0 * / c= c- c_0 cBIT1 b0 c_0 f0 * / c= c- c_0 cBIT1 b0 c_0 f0
- |- ((\n. (((BIT0 n) - _0) = (BIT0 n))) n)
T * / c= c- cBIT0 b0 c_0 cBIT0 b0 f0
+ ((\z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z) |- (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> * / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 f3 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))) n)
T * / c= cEXP cBIT0 f0 cBIT0 b0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
- (?z. (?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((?z. (?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_mul ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul (vector_neg (Cx ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) ((complex_mul (complex_inv (Cx ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))))) (complex_inv (Cx (real_of_num (FACT n)))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) ((complex_mul (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))) (complex_inv (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))
T c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul cvector_neg cCx creal_add creal_of_num f3 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_mul ccomplex_inv cCx creal_add creal_of_num f3 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f3 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul cvector_neg cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_mul ccomplex_inv cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3
+ |- ((!i. ((((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) i) = (real_of_num (NUMERAL _0)))) ==> (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= (SUC i)) /\ ((SUC i) <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) (SUC i)) = (real_of_num (NUMERAL _0)))))) = ((((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= (NUMERAL _0)) /\ ((NUMERAL _0) <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) (NUMERAL _0)) = (real_of_num (NUMERAL _0)))) /\ (!i. ((((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) i) = (real_of_num (NUMERAL _0)))) ==> (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= (SUC i)) /\ ((SUC i) <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) (SUC i)) = (real_of_num (NUMERAL _0))))))))
T c= ! c==> c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c<= b0 f0 c= * / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0 creal_of_num cNUMERAL c_0 c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC b0 c<= cSUC b0 f0 c= * / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 cSUC b0 creal_of_num cNUMERAL c_0 c/\ c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cNUMERAL c_0 c<= cNUMERAL c_0 f0 c= * / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cNUMERAL c_0 creal_of_num cNUMERAL c_0 ! c==> c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c<= b0 f0 c= * / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0 creal_of_num cNUMERAL c_0 c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC b0 c<= cSUC b0 f0 c= * / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 cSUC b0 creal_of_num cNUMERAL c_0
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
+ |- ((((~ (((real_add ((f (NUMERAL _0)) $ i)) (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) = ((real_add ((real_sub ((f (NUMERAL _0)) $ i)) ((f (SUC n)) $ i))) ((real_add (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) ((f (SUC n)) $ i))))) ==> F) ==> (((real_add ((f (NUMERAL _0)) $ i)) (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) = ((real_add ((real_sub ((f (NUMERAL _0)) $ i)) ((f (SUC n)) $ i))) ((real_add (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) ((f (SUC n)) $ i))))) = (((real_add ((f (NUMERAL _0)) $ i)) (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) = ((real_add ((real_sub ((f (NUMERAL _0)) $ i)) ((f (SUC n)) $ i))) ((real_add (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) ((f (SUC n)) $ i)))))
T c= c==> c==> c~ c= creal_add c$ * f0 cNUMERAL c_0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f0 f1 creal_add creal_sub c$ * f0 cNUMERAL c_0 f1 c$ * f0 cSUC f2 f1 creal_add c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f0 f1 c$ * f0 cSUC f2 f1 cF c= creal_add c$ * f0 cNUMERAL c_0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f0 f1 creal_add creal_sub c$ * f0 cNUMERAL c_0 f1 c$ * f0 cSUC f2 f1 creal_add c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f0 f1 c$ * f0 cSUC f2 f1 c= creal_add c$ * f0 cNUMERAL c_0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f0 f1 creal_add creal_sub c$ * f0 cNUMERAL c_0 f1 c$ * f0 cSUC f2 f1 creal_add c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f0 f1 c$ * f0 cSUC f2 f1
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((f (NUMERAL _0)) $ i)) (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_sub ((f (NUMERAL _0)) $ i)) ((f (SUC n)) $ i))) $ i)) ((lambdai. ((real_add (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) ((f (SUC n)) $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ * f1 cNUMERAL c_0 b0 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f1 b0 f0 c$ clambda / creal_add c$ clambda / creal_sub c$ * f1 cNUMERAL c_0 b1 c$ * f1 cSUC f2 b1 b0 c$ clambda / creal_add c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f1 b1 c$ * f1 cSUC f2 b1 b0 f0
- |- ((\m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))) m)
T * / ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1 f0
+ |- (((!m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) ==> ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m)) = ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0 * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0
+ |- (((int_le (int_of_num (NUMERAL (BIT1 _0)))) ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) <= (SUC n)))
T c= cint_le cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cSUC f0
- |- (((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) ==> ((\m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) m)) = ((\m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) m))
T c= c==> ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 * / ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 f0 * / ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 f0
- |- ((!x. ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))))))
T c==> ! c==> cIN b0 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c= cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0
+ |- (((!m. (!n. (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g))))) ==> ((\m. (!n. (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g))))) m)) = ((\m. (!n. (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g))))) m))
T c= c==> ! ! c= cvsum * * part c.. b0 b1 / cvector_add * f0 b2 * f1 b2 cvector_add cvsum * * part c.. b0 b1 f0 cvsum * * part c.. b0 b1 f1 * / ! c= cvsum * * part c.. b0 b1 / cvector_add * f0 b2 * f1 b2 cvector_add cvsum * * part c.. b0 b1 f0 cvsum * * part c.. b0 b1 f1 f2 * / ! c= cvsum * * part c.. b0 b1 / cvector_add * f0 b2 * f1 b2 cvector_add cvsum * * part c.. b0 b1 f0 cvsum * * part c.. b0 b1 f1 f2
+ |- ((((?z. (?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F) ==> (((~ q) = (?z. (?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> q)) = (((~ q) = (?z. (?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> q))
T c= c==> c==> c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c= c~ f0 c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c= c~ f0 c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT0 m) <= (BIT1 n)) = (m <= n))) n)
T * / c= c<= cBIT0 f0 cBIT1 b0 c<= f0 b0 f1
- |- ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))))
T c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) = ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))))
T c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 f0 c= cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0
+ |- (((complex_mul (Cx x)) (Cx y)) = (Cx ((real_mul x) y)))
T c= ccomplex_mul cCx f0 cCx f1 cCx creal_mul f0 f1
- (!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) |- (((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0)))) = T)
T c==> ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 c= c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0 cT
- |- ((\n. (((BIT1 n) + _0) = (BIT1 n))) n)
T * / c= c+ cBIT1 b0 c_0 cBIT1 b0 f0
+ ((\f. (?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) f) |- (((?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F) = F)
T c==> * / c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c= c==> c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
- (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x)))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0
- |- ((\n. (((BIT0 n) > _0) = (n > _0))) n)
T * / c= c> cBIT0 b0 c_0 c> b0 c_0 f0
- (?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n))))))
T c= cvector_add cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 f0 cCx creal_of_num cFACT f0
+ |- (((!y. ((Re ((vector_add x) y)) = ((real_add (Re x)) (Re y)))) ==> ((\y. ((Re ((vector_add x) y)) = ((real_add (Re x)) (Re y)))) y)) = ((\y. ((Re ((vector_add x) y)) = ((real_add (Re x)) (Re y)))) y))
T c= c==> ! c= cRe cvector_add f0 b0 creal_add cRe f0 cRe b0 * / c= cRe cvector_add f0 b0 creal_add cRe f0 cRe b0 f1 * / c= cRe cvector_add f0 b0 creal_add cRe f0 cRe b0 f1
+ |- (((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x))))
T c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0
+ |- ((?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w)))))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))))))
T c==> c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f1 cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f0 cRe ccomplex_mul * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cvector_sub f1 f0 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= cRe * * f3 cNUMERAL c_0 f1 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 f0 ccomplex_div ccomplex_pow cvector_sub f1 f0 b1 cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f2 cCx creal_of_num cFACT f2 cvector_sub f1 f0
+ |- (((!q'. ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) = p') ==> ((p' ==> ((y = x) = q')) ==> ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) ==> (y = x)) = (p' ==> q'))))) ==> ((\q'. ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) = p') ==> ((p' ==> ((y = x) = q')) ==> ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) ==> (y = x)) = (p' ==> q'))))) q')) = ((\q'. ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) = p') ==> ((p' ==> ((y = x) = q')) ==> ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) ==> (y = x)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b1 cNUMERAL cBIT1 c_0 f2 * / c+ b1 cNUMERAL cBIT1 c_0 f0 f3 c==> c==> f3 c= c= f2 f0 b0 c= c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b1 cNUMERAL cBIT1 c_0 f2 * / c+ b1 cNUMERAL cBIT1 c_0 f0 c= f2 f0 c==> f3 b0 * / c==> c= c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b1 cNUMERAL cBIT1 c_0 f2 * / c+ b1 cNUMERAL cBIT1 c_0 f0 f3 c==> c==> f3 c= c= f2 f0 b0 c= c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b1 cNUMERAL cBIT1 c_0 f2 * / c+ b1 cNUMERAL cBIT1 c_0 f0 c= f2 f0 c==> f3 b0 f4 * / c==> c= c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b1 cNUMERAL cBIT1 c_0 f2 * / c+ b1 cNUMERAL cBIT1 c_0 f0 f3 c==> c==> f3 c= c= f2 f0 b0 c= c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b1 cNUMERAL cBIT1 c_0 f2 * / c+ b1 cNUMERAL cBIT1 c_0 f0 c= f2 f0 c==> f3 b0 f4
+ |- ((!f. (((vsum ((NUMERAL _0) .. n)) f) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (n + (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. n)) (f o (\i. (i + (NUMERAL (BIT1 _0))))))))) = (!f. (((vsum ((NUMERAL _0) .. n)) f) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (n + (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. n)) (\i. (f (i + (NUMERAL (BIT1 _0))))))))))
T c= ! c= cvsum * * part c.. cNUMERAL c_0 f0 b0 cvector_add cvector_sub * b0 cNUMERAL c_0 * b0 c+ f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f0 * * part co b0 / c+ b1 cNUMERAL cBIT1 c_0 ! c= cvsum * * part c.. cNUMERAL c_0 f0 b0 cvector_add cvector_sub * b0 cNUMERAL c_0 * b0 c+ f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f0 / * b0 c+ b1 cNUMERAL cBIT1 c_0
+ |- (((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_mul ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))
T c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3
- |- ((((has_complex_derivative (\u. (f u))) f') (at x)) ==> (((has_complex_derivative (\u. ((complex_mul (f u)) c))) ((complex_mul f') c)) (at x)))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 chas_complex_derivative / ccomplex_mul * f0 b0 f3 ccomplex_mul f1 f3 cat f2
- |- ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))
T c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
+ |- ((((vector_add ((vector_add ((vector_sub ((\i. ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) (NUMERAL _0))) ((\i. ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) (n + (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((\i. ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) (i + (NUMERAL (BIT1 _0)))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) = (((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))))
T c= c= cvector_add cvector_add cvector_sub * / ccomplex_mul * * f0 b0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f1 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 cNUMERAL c_0 * / ccomplex_mul * * f0 b0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f1 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 c+ f3 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f3 / * / ccomplex_mul * * f0 b1 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f2 f1 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 c+ b0 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f0 c+ b0 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 c+ f3 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT f3 c= cvector_add cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f0 b0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f1 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f0 c+ b0 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 c+ f3 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT f3
+ |- ((p /\ (q ==> r)) ==> ((p ==> q) ==> r))
T c==> c/\ f0 c==> f1 f2 c==> c==> f0 f1 f2
+ (~ (~ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))))) |- ((~ (~ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))))) /\ F)
T c==> c~ c~ c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c~ c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- (T = (~ ((Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))))
T c= cT c~ c= cCx creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- ((\m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) m)
T * / ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 f0
- |- (~ (_0 >= (BIT1 n)))
T c~ c>= c_0 cBIT1 f0
+ |- ((\n. ((NUMERAL _0) <= n)) n)
T * / c<= cNUMERAL c_0 b0 f0
+ |- (((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i))))) (at u))
T chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f0 b0 f1 cCx creal_of_num cFACT f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f1 ccomplex_pow cvector_sub f0 f2 c- f1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f1 cat f2
+ |- (((!x. (!y. ((Re ((vector_add x) y)) = ((real_add (Re x)) (Re y))))) ==> ((\x. (!y. ((Re ((vector_add x) y)) = ((real_add (Re x)) (Re y))))) x)) = ((\x. (!y. ((Re ((vector_add x) y)) = ((real_add (Re x)) (Re y))))) x))
T c= c==> ! ! c= cRe cvector_add b0 b1 creal_add cRe b0 cRe b1 * / ! c= cRe cvector_add b0 b1 creal_add cRe b0 cRe b1 f0 * / ! c= cRe cvector_add b0 b1 creal_add cRe b0 cRe b1 f0
+ |- (!f. (((vsum ((NUMERAL _0) .. n)) f) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (n + (NUMERAL (BIT1 _0)))))) ((vsum ((IMAGE (\i. (i + (NUMERAL (BIT1 _0))))) ((NUMERAL _0) .. n))) f))))
T c= cvsum * * part c.. cNUMERAL c_0 f0 f1 cvector_add cvector_sub * f1 cNUMERAL c_0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cvsum * * part cIMAGE / c+ b0 cNUMERAL cBIT1 c_0 * * part c.. cNUMERAL c_0 f0 f1
+ |- ((((\z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z') ==> F) = T)
T c= c==> * / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 cF cT
- |- (((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) ==> ((\m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) m)) = ((\m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) m))
T c= c==> ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 * / ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0 * / ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 f0
+ (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (Re x))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 cRe f0 creal_of_num cNUMERAL c_0
- (x IN ((NUMERAL _0) .. n)) |- ((x IN ((NUMERAL _0) .. n)) = T)
T c==> cIN f0 * * part c.. cNUMERAL c_0 f1 c= cIN f0 * * part c.. cNUMERAL c_0 f1 cT
- |- ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))
T c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
+ |- (((!x. ((Re (Cx x)) = x)) ==> ((\x. ((Re (Cx x)) = x)) x)) = ((\x. ((Re (Cx x)) = x)) x))
T c= c==> ! c= cRe cCx b0 b0 * / c= cRe cCx b0 b0 f0 * / c= cRe cCx b0 b0 f0
- |- (((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))))) = (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))))
T c= c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 f0 c= cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0
- |- (((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 * / ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 f0 * / ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 f0
- |- ((\n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n)))) n)
T * / c= c+ cBIT0 f0 cBIT0 b0 cBIT0 c+ f0 b0 f1
- |- ((\n. (((BIT1 m) <= (BIT1 n)) = (m <= n))) n)
T * / c= c<= cBIT1 f0 cBIT1 b0 c<= f0 b0 f1
- |- ((((((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) = F) ==> (~ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) = (~ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c= c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c~ c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 f3 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))
T c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- (((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) ==> ((\m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) m)) = ((\m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) m))
T c= c==> ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 * / ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 f0 * / ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 f0
- (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) |- ((?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) /\ F)
T c==> c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 b0 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 b0 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((\m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) m)
T * / ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 f0
- (((NUMERAL _0) <= i) /\ (i <= n)) |- ((i <= n) = T)
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c= c<= f0 f1 cT
+ (((complex_mul ((complex_mul x) y)) z) = ((complex_mul x) ((complex_mul y) z))) |- (((complex_mul x) ((complex_mul y) z)) = ((complex_mul ((complex_mul x) y)) z))
T c==> c= ccomplex_mul ccomplex_mul f0 f1 f2 ccomplex_mul f0 ccomplex_mul f1 f2 c= ccomplex_mul f0 ccomplex_mul f1 f2 ccomplex_mul ccomplex_mul f0 f1 f2
+ |- ((\y. (!z. (((complex_mul ((complex_mul x) y)) z) = ((complex_mul x) ((complex_mul y) z))))) y)
T * / ! c= ccomplex_mul ccomplex_mul f0 b0 b1 ccomplex_mul f0 ccomplex_mul b0 b1 f1
- |- (((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) ==> ((\m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) m)) = ((\m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) m))
T c= c==> ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 * / ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 f0 * / ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 f0
- |- (convex (open_segment (a , b)))
T cconvex * part copen_segment c, f0 f1
- (a = b) |- (((a = b) ==> (a ==> b)) ==> (a ==> b))
T c==> c= f0 f1 c==> c==> c= f0 f1 c==> f0 f1 c==> f0 f1
- |- (!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) = ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))))
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c= cvector_add ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f4 f3 c- f0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0 cvector_add ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f4 f3 c- f0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0
- |- ((\n. (((BIT1 n) = _0) = F)) n)
T * / c= c= cBIT1 b0 c_0 cF f0
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num n)) ==> ((int_le (int_of_num (NUMERAL (BIT1 _0)))) ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT1 _0)))))) = ((int_le (int_of_num (NUMERAL (BIT1 _0)))) ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT1 _0))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 cint_le cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_le cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0
+ |- (((!n. (((m + n) - n) = m)) ==> ((\n. (((m + n) - n) = m)) n)) = ((\n. (((m + n) - n) = m)) n))
T c= c==> ! c= c- c+ f0 b0 b0 f0 * / c= c- c+ f0 b0 b0 f0 f1 * / c= c- c+ f0 b0 b0 f0 f1
- |- (((!n. (((BIT1 m) < (BIT0 n)) = (m < n))) ==> ((\n. (((BIT1 m) < (BIT0 n)) = (m < n))) n)) = ((\n. (((BIT1 m) < (BIT0 n)) = (m < n))) n))
T c= c==> ! c= c< cBIT1 f0 cBIT0 b0 c< f0 b0 * / c= c< cBIT1 f0 cBIT0 b0 c< f0 b0 f1 * / c= c< cBIT1 f0 cBIT0 b0 c< f0 b0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_0 - (BIT0 n)) = _0)
T c= c- c_0 cBIT0 f0 c_0
- |- (((real_gt (Re x)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))))
T c= creal_gt cRe f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0
- |- ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))))))
T c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
- |- (((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = T)
T c= c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c= cvector_add ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 cvector_add ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 cT
- |- ((_0 >= _0) /\ ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))))
T c/\ c>= c_0 c_0 c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
- |- ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))
T c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- (!g. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) (\x. (f x))) = ((sum s) g))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 / * f1 b0 csum f0 f2
+ (((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((!f. (((vsum ((NUMERAL _0) .. n)) f) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (n + (NUMERAL (BIT1 _0)))))) ((vsum ((IMAGE (\i. (i + (NUMERAL (BIT1 _0))))) ((NUMERAL _0) .. n))) f)))) = (!f. (((vsum ((NUMERAL _0) .. n)) f) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (n + (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. n)) (f o (\i. (i + (NUMERAL (BIT1 _0))))))))))
T c= ! c= cvsum * * part c.. cNUMERAL c_0 f0 b0 cvector_add cvector_sub * b0 cNUMERAL c_0 * b0 c+ f0 cNUMERAL cBIT1 c_0 cvsum * * part cIMAGE / c+ b1 cNUMERAL cBIT1 c_0 * * part c.. cNUMERAL c_0 f0 b0 ! c= cvsum * * part c.. cNUMERAL c_0 f0 b0 cvector_add cvector_sub * b0 cNUMERAL c_0 * b0 c+ f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f0 * * part co b0 / c+ b1 cNUMERAL cBIT1 c_0
- |- (!x. ((x IN ((NUMERAL _0) .. n)) ==> (((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x)))))) = ((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x)))))))))
T c==> cIN f0 * * part c.. cNUMERAL c_0 f1 c= cvector_add ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f4 f3 c- f0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0 cvector_add ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f4 f3 c- f0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0
+ |- (((!p'. (!q'. ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) = p') ==> ((p' ==> ((y = x) = q')) ==> ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) ==> (y = x)) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) = p') ==> ((p' ==> ((y = x) = q')) ==> ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) ==> (y = x)) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) = p') ==> ((p' ==> ((y = x) = q')) ==> ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) ==> (y = x)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b2 cNUMERAL cBIT1 c_0 f2 * / c+ b2 cNUMERAL cBIT1 c_0 f0 b0 c==> c==> b0 c= c= f2 f0 b1 c= c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b2 cNUMERAL cBIT1 c_0 f2 * / c+ b2 cNUMERAL cBIT1 c_0 f0 c= f2 f0 c==> b0 b1 * / ! c==> c= c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b2 cNUMERAL cBIT1 c_0 f2 * / c+ b2 cNUMERAL cBIT1 c_0 f0 b0 c==> c==> b0 c= c= f2 f0 b1 c= c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b2 cNUMERAL cBIT1 c_0 f2 * / c+ b2 cNUMERAL cBIT1 c_0 f0 c= f2 f0 c==> b0 b1 f3 * / ! c==> c= c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b2 cNUMERAL cBIT1 c_0 f2 * / c+ b2 cNUMERAL cBIT1 c_0 f0 b0 c==> c==> b0 c= c= f2 f0 b1 c= c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b2 cNUMERAL cBIT1 c_0 f2 * / c+ b2 cNUMERAL cBIT1 c_0 f0 c= f2 f0 c==> b0 b1 f3
+ |- (!u. (((\u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) u) ==> F))
T c==> * / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
- |- ((\n. (~ (_0 > (BIT1 n)))) n)
T * / c~ c> c_0 cBIT1 b0 f0
+ |- (((!x. (((\u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) x) ==> F)) ==> ((?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F)) = ((?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub f1 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub f1 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!t. ((\x. (t x)) = t)) ==> ((\t. ((\x. (t x)) = t)) t)) = ((\t. ((\x. (t x)) = t)) t))
T c= c==> ! c= / * b0 b1 b0 * / c= / * b0 b1 b0 f0 * / c= / * b0 b1 b0 f0
- |- ((\m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) m)
T * / ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 f0
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))), (u IN (closed_segment ((CONS (w , z)) NIL))) |- ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u)))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> cIN f4 * part cclosed_segment cCONS c, f0 f1 cNIL c/\ cIN f4 * part cclosed_segment cCONS c, f0 f1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 b1 cCx creal_of_num cFACT b1 ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f1 f4 f2 cCx creal_of_num cFACT f2 cat f4
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) |- (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 ! c==> c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c<= f4 f2 chas_complex_derivative * f3 f4 * * f3 c+ f4 cNUMERAL cBIT1 c_0 b0 cat b0
- |- (((!n. ((ODD (NUMERAL n)) = (ODD n))) ==> ((\n. ((ODD (NUMERAL n)) = (ODD n))) n)) = ((\n. ((ODD (NUMERAL n)) = (ODD n))) n))
T c= c==> ! c= cODD cNUMERAL b0 cODD b0 * / c= cODD cNUMERAL b0 cODD b0 f0 * / c= cODD cNUMERAL b0 cODD b0 f0
- |- (((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) ==> ((\m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) m)) = ((\m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) m))
T c= c==> ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 * / ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 f0 * / ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 f0
+ |- ((real_of_num (SUC n)) = ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num cSUC f0 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
+ ((\b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) b) |- (((\b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) b) /\ F)
T c==> * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul b0 ccomplex_mul ccomplex_inv f0 b1 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul b0 ccomplex_mul ccomplex_inv f0 b1 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ |- ((\p. (((m + p) = (n + p)) = (m = n))) p)
T * / c= c= c+ f0 b0 c+ f1 b0 c= f0 f1 f2
+ |- (((x = (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
+ |- (((!a. (!b. (!c. (((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c))) = ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))))) ==> ((\a. (!b. (!c. (((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c))) = ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))))) a)) = ((\a. (!b. (!c. (((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c))) = ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))))) a))
T c= c==> ! ! ! c= ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 * / ! ! c= ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 f0 * / ! ! c= ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 f0
+ |- (((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c= ccomplex_mul cCx creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((_0 > (BIT1 n)) = F)
T c= c> c_0 cBIT1 f0 cF
- |- (((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) ==> ((\m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) m)) = ((\m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) m))
T c= c==> ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 * / ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 f0 * / ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 f0
+ |- (((((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= (NUMERAL _0)) /\ ((NUMERAL _0) <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) (NUMERAL _0)) = (real_of_num (NUMERAL _0)))) /\ (!i. ((((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) i) = (real_of_num (NUMERAL _0)))) ==> (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= (SUC i)) /\ ((SUC i) <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) (SUC i)) = (real_of_num (NUMERAL _0))))))) ==> (!i. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) i) = (real_of_num (NUMERAL _0))))))
T c==> c/\ c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cNUMERAL c_0 c<= cNUMERAL c_0 f0 c= * / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cNUMERAL c_0 creal_of_num cNUMERAL c_0 ! c==> c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c<= b0 f0 c= * / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0 creal_of_num cNUMERAL c_0 c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC b0 c<= cSUC b0 f0 c= * / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 cSUC b0 creal_of_num cNUMERAL c_0 ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c<= b0 f0 c= * / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0 creal_of_num cNUMERAL c_0
- |- (((x IN ((NUMERAL _0) .. n)) ==> (((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x)))))) = ((vector_add ((complex_mul ((f x) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num x)))) ((complex_pow ((vector_sub z) u)) (x - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT x)))))) ((complex_mul ((f (x + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) x)) (Cx (real_of_num (FACT x)))))))) = T)
T c= c==> cIN f0 * * part c.. cNUMERAL c_0 f1 c= cvector_add ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f4 f3 c- f0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0 cvector_add ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f4 f3 c- f0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0 cT
- |- (((!n. (((BIT0 n) <= _0) = (n <= _0))) ==> ((\n. (((BIT0 n) <= _0) = (n <= _0))) n)) = ((\n. (((BIT0 n) <= _0) = (n <= _0))) n))
T c= c==> ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 * / c= c<= cBIT0 b0 c_0 c<= b0 c_0 f0 * / c= c<= cBIT0 b0 c_0 c<= b0 c_0 f0
+ (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) |- ((((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ F)
T c==> c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((\n. ((_0 < (BIT1 n)) = T)) n)
T * / c= c< c_0 cBIT1 b0 cT f0
+ |- (((!s. (((FINITE s) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f y) = (f x)))) ==> (y = x))))) ==> (((vsum s) (g o f)) = ((vsum ((IMAGE f) s)) g)))) ==> ((\s. (((FINITE s) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f y) = (f x)))) ==> (y = x))))) ==> (((vsum s) (g o f)) = ((vsum ((IMAGE f) s)) g)))) s)) = ((\s. (((FINITE s) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f y) = (f x)))) ==> (y = x))))) ==> (((vsum s) (g o f)) = ((vsum ((IMAGE f) s)) g)))) s))
T c= c==> ! c==> c/\ cFINITE b0 ! ! c==> c/\ cIN b1 b0 c/\ cIN b2 b0 c= * f0 b2 * f0 b1 c= b2 b1 c= cvsum b0 * * part co f1 f0 cvsum * * part cIMAGE f0 b0 f1 * / c==> c/\ cFINITE b0 ! ! c==> c/\ cIN b1 b0 c/\ cIN b2 b0 c= * f0 b2 * f0 b1 c= b2 b1 c= cvsum b0 * * part co f1 f0 cvsum * * part cIMAGE f0 b0 f1 f2 * / c==> c/\ cFINITE b0 ! ! c==> c/\ cIN b1 b0 c/\ cIN b2 b0 c= * f0 b2 * f0 b1 c= b2 b1 c= cvsum b0 * * part co f1 f0 cvsum * * part cIMAGE f0 b0 f1 f2
+ |- ((\n. ((real_of_num (m * n)) = ((real_mul (real_of_num m)) (real_of_num n)))) n)
T * / c= creal_of_num c* f0 b0 creal_mul creal_of_num f0 creal_of_num b0 f1
+ |- ((((has_complex_derivative (\u. (f u))) f') net) ==> ((((has_complex_derivative (\u. (g u))) g') net) ==> (((has_complex_derivative (\u. ((vector_sub (f u)) (g u)))) ((vector_sub f') g')) net)))
T c==> chas_complex_derivative / * f0 b0 f1 f2 c==> chas_complex_derivative / * f3 b0 f4 f2 chas_complex_derivative / cvector_sub * f0 b0 * f3 b0 cvector_sub f1 f4 f2
- |- (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n)))
T c= c* cNUMERAL f0 cNUMERAL f1 cNUMERAL c* f0 f1
+ ((\u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) u) |- (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> * / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f1 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f1 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ (((IMAGE (\i. (i + p))) (m .. n)) = ((m + p) .. (n + p))) |- (((m + p) .. (n + p)) = ((IMAGE (\i. (i + p))) (m .. n)))
T c==> c= * * part cIMAGE / c+ b0 f0 * * part c.. f1 f2 * * part c.. c+ f1 f0 c+ f2 f0 c= * * part c.. c+ f1 f0 c+ f2 f0 * * part cIMAGE / c+ b0 f0 * * part c.. f1 f2
- |- (((!b. (convex (open_segment (a , b)))) ==> ((\b. (convex (open_segment (a , b)))) b)) = ((\b. (convex (open_segment (a , b)))) b))
T c= c==> ! cconvex * part copen_segment c, f0 b0 * / cconvex * part copen_segment c, f0 b0 f1 * / cconvex * part copen_segment c, f0 b0 f1
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- (!g'. (!f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 ! ! ! ! c==> c/\ chas_complex_derivative f0 b1 cat b3 chas_complex_derivative b2 b0 cat b3 chas_complex_derivative / ccomplex_mul * f0 b4 * b2 b4 cvector_add ccomplex_mul * f0 b3 b0 ccomplex_mul b1 * b2 b3 cat b3
- |- (((!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))) ==> ((\n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))) n)) = ((\n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n)))))) n))
T c= c==> ! c= c* cBIT0 f0 cBIT1 b0 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT0 f0 cBIT1 b0 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT0 f0 cBIT1 b0 c+ cBIT0 f0 cBIT0 cBIT0 c* f0 b0 f1
+ |- (((!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z)))) ==> ((\y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z)))) y)) = ((\y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z)))) y))
T c= c==> ! ! c= c= cvector_add f0 b0 cvector_add f0 b1 c= b0 b1 * / ! c= c= cvector_add f0 b0 cvector_add f0 b1 c= b0 b1 f1 * / ! c= c= cvector_add f0 b0 cvector_add f0 b1 c= b0 b1 f1
+ |- ((F ==> t) = T)
T c= c==> cF f0 cT
+ |- ((\z. (((complex_mul ((complex_mul x) y)) z) = ((complex_mul x) ((complex_mul y) z)))) z)
T * / c= ccomplex_mul ccomplex_mul f0 f1 b0 ccomplex_mul f0 ccomplex_mul f1 b0 f2
- |- (((!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))) ==> ((\n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))) n)) = ((\n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n)))) n))
T c= c==> ! c= cEXP cNUMERAL f0 cNUMERAL b0 cNUMERAL cEXP f0 b0 * / c= cEXP cNUMERAL f0 cNUMERAL b0 cNUMERAL cEXP f0 b0 f1 * / c= cEXP cNUMERAL f0 cNUMERAL b0 cNUMERAL cEXP f0 b0 f1
- |- (((BIT0 m) <= (BIT0 n)) = (m <= n))
T c= c<= cBIT0 f0 cBIT0 f1 c<= f0 f1
+ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) |- ((Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- ((\q'. (((((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) = p') ==> ((p' ==> ((((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u)) = q')) ==> (((((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u))) = (p' ==> q'))))) q')
T * / c==> c= chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b2 b1 ccomplex_div ccomplex_pow cvector_sub f2 b1 b2 cCx creal_of_num cFACT b2 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b1 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f2 f3 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b1 cCx creal_of_num cFACT b1 cat f3 f4 c==> c==> f4 c= chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b2 b1 ccomplex_div ccomplex_pow cvector_sub f2 b1 b2 cCx creal_of_num cFACT b2 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 f0 cCx creal_of_num cFACT f0 cat f3 b0 c= c==> chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b2 b1 ccomplex_div ccomplex_pow cvector_sub f2 b1 b2 cCx creal_of_num cFACT b2 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b1 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f2 f3 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ b1 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b1 cCx creal_of_num cFACT b1 cat f3 chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b2 b1 ccomplex_div ccomplex_pow cvector_sub f2 b1 b2 cCx creal_of_num cFACT b2 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 f0 cCx creal_of_num cFACT f0 cat f3 c==> f4 b0 f5
- |- ((\m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) m)
T * / ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 f0
- |- ((((has_complex_derivative (\u. (f u))) f') (at x)) ==> (((has_complex_derivative (\u. ((complex_mul c) (f u)))) ((complex_mul c) f')) (at x)))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 chas_complex_derivative / ccomplex_mul f3 * f0 b0 ccomplex_mul f3 f1 cat f2
+ (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) |- ((Cx (real_of_num (NUMERAL (BIT1 _0)))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- (((!x. (((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) x) = x)) ==> ((\x. (((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) x) = x)) x)) = ((\x. (((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) x) = x)) x))
T c= c==> ! c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 b0 b0 * / c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 b0 b0 f0 * / c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 b0 b0 f0
+ |- (((real_le (real_of_num m)) (real_neg (real_of_num n))) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))
T c= creal_le creal_of_num f0 creal_neg creal_of_num f1 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
+ |- ((((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_mul ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))) = (((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_mul ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))
T c= c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num f3 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num f3 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3
- |- ((ODD (NUMERAL n)) = (ODD n))
T c= cODD cNUMERAL f0 cODD f0
+ |- (!g. ((!x. (((a <= x) /\ (x <= b)) ==> ((f x) = (g x)))) ==> (((sum (a .. b)) (\x. (f x))) = ((sum (a .. b)) g))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 / * f2 b0 csum * * part c.. f0 f1 f3
+ ((Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))) = ((real_add (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))) |- (((Re ((f (NUMERAL _0)) z)) = ((real_add (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))) = ((Re ((f (NUMERAL _0)) z)) = (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))))))
T c==> c= cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 creal_add cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3 c= c= cRe * * f1 cNUMERAL c_0 f2 creal_add cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3 c= cRe * * f1 cNUMERAL c_0 f2 cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0
- |- ((\m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) m)
T * / ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 f0
+ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))) |- (((!x. (((real_mul x) ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\n. ((FACT (SUC n)) = ((SUC n) * (FACT n)))) n)
T * / c= cFACT cSUC b0 c* cSUC b0 cFACT b0 f0
- |- ((\n. ((_0 - (BIT1 n)) = _0)) n)
T * / c= c- c_0 cBIT1 b0 c_0 f0
+ |- (((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((complex_mul ((f (SUC n)) u)) ((complex_div ((complex_mul (vector_neg (Cx ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))))) ((complex_pow ((vector_sub z) u)) n))) ((complex_mul (Cx ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT n)))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_div ((complex_mul (vector_neg (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))) ((complex_pow ((vector_sub z) u)) i))) ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i))))))) ((complex_mul ((f (SUC i)) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n))))))
T c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_add creal_of_num f3 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cvector_sub f2 f1 f3 ccomplex_mul cCx creal_add creal_of_num f3 creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f3 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 cSUC b0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow cvector_sub f2 f1 b0 ccomplex_mul cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT f3
- |- (((~ (_0 > _0)) ==> ((_0 > _0) = F)) = ((_0 > _0) = F))
T c= c==> c~ c> c_0 c_0 c= c> c_0 c_0 cF c= c> c_0 c_0 cF
- |- (((!n. (((BIT0 m) < (BIT1 n)) = (m <= n))) ==> ((\n. (((BIT0 m) < (BIT1 n)) = (m <= n))) n)) = ((\n. (((BIT0 m) < (BIT1 n)) = (m <= n))) n))
T c= c==> ! c= c< cBIT0 f0 cBIT1 b0 c<= f0 b0 * / c= c< cBIT0 f0 cBIT1 b0 c<= f0 b0 f1 * / c= c< cBIT0 f0 cBIT1 b0 c<= f0 b0 f1
+ |- (((vector_add ((vector_sub (vector_neg ((complex_mul ((f (NUMERAL _0)) u)) ((complex_mul (Cx (real_of_num (NUMERAL _0)))) ((complex_mul ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add (vector_neg ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))
T c= cvector_add cvector_sub cvector_neg ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_mul cCx creal_of_num cNUMERAL c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add cvector_neg ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3
- |- (((NUMERAL _0) <= n) = T)
T c= c<= cNUMERAL c_0 f0 cT
- |- ((_0 < (BIT1 n)) = T)
T c= c< c_0 cBIT1 f0 cT
+ |- ((!f. (((vector_add (f (NUMERAL _0))) ((vsum ((NUMERAL (BIT1 _0)) .. n)) f)) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (SUC n)))) ((vector_add ((vsum ((NUMERAL (BIT1 _0)) .. n)) f)) (f (SUC n)))))) = (!f. (((vector_add (f (NUMERAL _0))) ((vsum ((SUC (NUMERAL _0)) .. n)) f)) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (SUC n)))) (((COND ((SUC (NUMERAL _0)) <= (SUC n))) ((vector_add ((vsum ((SUC (NUMERAL _0)) .. n)) f)) (f (SUC n)))) ((vsum ((SUC (NUMERAL _0)) .. n)) f))))))
T c= ! c= cvector_add * b0 cNUMERAL c_0 cvsum * * part c.. cNUMERAL cBIT1 c_0 f0 b0 cvector_add cvector_sub * b0 cNUMERAL c_0 * b0 cSUC f0 cvector_add cvsum * * part c.. cNUMERAL cBIT1 c_0 f0 b0 * b0 cSUC f0 ! c= cvector_add * b0 cNUMERAL c_0 cvsum * * part c.. cSUC cNUMERAL c_0 f0 b0 cvector_add cvector_sub * b0 cNUMERAL c_0 * b0 cSUC f0 cCOND c<= cSUC cNUMERAL c_0 cSUC f0 cvector_add cvsum * * part c.. cSUC cNUMERAL c_0 f0 b0 * b0 cSUC f0 cvsum * * part c.. cSUC cNUMERAL c_0 f0 b0
+ |- (((vector_add ((vector_add x) y)) z) = ((vector_add x) ((vector_add y) z)))
T c= cvector_add cvector_add f0 f1 f2 cvector_add f0 cvector_add f1 f2
+ |- (((!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) ==> ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n)) = ((\n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n))) n))
T c= c==> ! c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1 * / c= c<= cNUMERAL f0 cNUMERAL b0 c<= f0 b0 f1
- |- (((!m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) ==> ((\m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) m)) = ((\m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) m))
T c= c==> ! ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 * / ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 f0 * / ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 f0
- |- (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))
T c= c* cBIT1 f0 cBIT1 f1 c+ cBIT1 f0 c+ cBIT0 f1 cBIT0 cBIT0 c* f0 f1
+ |- ((complex_inv (Cx x)) = (Cx (real_inv x)))
T c= ccomplex_inv cCx f0 cCx creal_inv f0
- ((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) |- ((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) = T)
T c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c= c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 cT
- |- (((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) ==> ((\m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) m)) = ((\m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) m))
T c= c==> ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 * / ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 f0 * / ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 f0
- |- (~ (_0 > (BIT0 n)))
T c~ c> c_0 cBIT0 f0
- |- ((\m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))) m)
T * / ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 f0
- |- (((~ (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) = F)) = ((((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) = F))
T c= c==> c~ c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 c= c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c= c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((\n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) n)
T * / c= cEXP cBIT1 f0 cBIT1 b0 c* cBIT1 f0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
- |- ((\n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))) n)
T * / c= cEXP cBIT1 f0 cBIT0 b0 c* cEXP cBIT1 f0 b0 cEXP cBIT1 f0 b0 f1
+ |- (((!g. ((!i. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))) = (g i)))) ==> (((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) ==> ((\g. ((!i. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))) = (g i)))) ==> (((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) g)) = ((\g. ((!i. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))) = (g i)))) ==> (((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c<= b1 f0 c= ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 * / c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c<= b1 f0 c= ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 f3 * / c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c<= b1 f0 c= ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 f3
+ |- (((!f. (((vsum ((NUMERAL _0) .. n)) f) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (n + (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. n)) (\i. (f (i + (NUMERAL (BIT1 _0))))))))) ==> ((\f. (((vsum ((NUMERAL _0) .. n)) f) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (n + (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. n)) (\i. (f (i + (NUMERAL (BIT1 _0))))))))) f)) = ((\f. (((vsum ((NUMERAL _0) .. n)) f) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (n + (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. n)) (\i. (f (i + (NUMERAL (BIT1 _0))))))))) f))
T c= c==> ! c= cvsum * * part c.. cNUMERAL c_0 f0 b0 cvector_add cvector_sub * b0 cNUMERAL c_0 * b0 c+ f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f0 / * b0 c+ b1 cNUMERAL cBIT1 c_0 * / c= cvsum * * part c.. cNUMERAL c_0 f0 b0 cvector_add cvector_sub * b0 cNUMERAL c_0 * b0 c+ f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f0 / * b0 c+ b1 cNUMERAL cBIT1 c_0 f1 * / c= cvsum * * part c.. cNUMERAL c_0 f0 b0 cvector_add cvector_sub * b0 cNUMERAL c_0 * b0 c+ f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f0 / * b0 c+ b1 cNUMERAL cBIT1 c_0 f1
- |- (((!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))) ==> ((\n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))) n)) = ((\n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))) n))
T c= c==> ! c= cEXP cBIT0 f0 cBIT0 b0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 * / c= cEXP cBIT0 f0 cBIT0 b0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1 * / c= cEXP cBIT0 f0 cBIT0 b0 c* cEXP cBIT0 f0 b0 cEXP cBIT0 f0 b0 f1
- |- ((\m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) m)
T * / ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 f0
+ |- ((((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT (NUMERAL _0))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (n + (NUMERAL (BIT1 _0))))))) ((complex_pow ((vector_sub z) u)) n))) (Cx (real_of_num (FACT (n + (NUMERAL (BIT1 _0)))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (i + (NUMERAL (BIT1 _0))))))) ((complex_pow ((vector_sub z) u)) i))) (Cx (real_of_num (FACT (i + (NUMERAL (BIT1 _0))))))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) = ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) = (((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT (NUMERAL _0))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (n + (NUMERAL (BIT1 _0))))))) ((complex_pow ((vector_sub z) u)) ((n + (NUMERAL (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT (n + (NUMERAL (BIT1 _0)))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num (i + (NUMERAL (BIT1 _0))))))) ((complex_pow ((vector_sub z) u)) ((i + (NUMERAL (BIT1 _0))) - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT (i + (NUMERAL (BIT1 _0))))))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) = ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))))
T c= c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT cNUMERAL c_0 ccomplex_mul * * f0 c+ f3 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num c+ f3 cNUMERAL cBIT1 c_0 ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT c+ f3 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 c+ b0 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num c+ b0 cNUMERAL cBIT1 c_0 ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT c+ b0 cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 c+ b0 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 c+ f3 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT f3 c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT cNUMERAL c_0 ccomplex_mul * * f0 c+ f3 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num c+ f3 cNUMERAL cBIT1 c_0 ccomplex_pow cvector_sub f2 f1 c- c+ f3 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT c+ f3 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 c+ b0 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num c+ b0 cNUMERAL cBIT1 c_0 ccomplex_pow cvector_sub f2 f1 c- c+ b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT c+ b0 cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 c+ b0 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 c+ f3 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT f3
+ |- ((real_neg ((real_sub y) ((real_add y) (Re x)))) = (Re x))
T c= creal_neg creal_sub f0 creal_add f0 cRe f1 cRe f1
- |- ((((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) ==> ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = T)
T c= c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c= cRe ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0 cRe ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((!n. (((BIT0 n) - _0) = (BIT0 n))) ==> ((\n. (((BIT0 n) - _0) = (BIT0 n))) n)) = ((\n. (((BIT0 n) - _0) = (BIT0 n))) n))
T c= c==> ! c= c- cBIT0 b0 c_0 cBIT0 b0 * / c= c- cBIT0 b0 c_0 cBIT0 b0 f0 * / c= c- cBIT0 b0 c_0 cBIT0 b0 f0
+ |- ((F /\ t) = F)
T c= c/\ cF f0 cF
+ |- (((!n. (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)))) ==> ((\n. (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)))) n)) = ((\n. (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)))) n))
T c= c==> ! c= cvsum * * part c.. f0 b0 / cvector_add * f1 b1 * f2 b1 cvector_add cvsum * * part c.. f0 b0 f1 cvsum * * part c.. f0 b0 f2 * / c= cvsum * * part c.. f0 b0 / cvector_add * f1 b1 * f2 b1 cvector_add cvsum * * part c.. f0 b0 f1 cvsum * * part c.. f0 b0 f2 f3 * / c= cvsum * * part c.. f0 b0 / cvector_add * f1 b1 * f2 b1 cvector_add cvsum * * part c.. f0 b0 f1 cvsum * * part c.. f0 b0 f2 f3
+ |- ((\x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) x)
T * / ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 f0
+ |- (((!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) ==> (!f. (!g'. (!f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))))))) = (!f. (!g'. (!f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))))
T c= c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b4 chas_complex_derivative b3 b1 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b3 b5 cvector_add ccomplex_mul * b0 b4 b1 ccomplex_mul b2 * b3 b4 cat b4 ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b4 chas_complex_derivative b3 b1 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b3 b5 cvector_add ccomplex_mul * b0 b4 b1 ccomplex_mul b2 * b3 b4 cat b4
- |- ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))
T c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
+ |- ((((((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= (NUMERAL _0)) /\ ((NUMERAL _0) <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) (NUMERAL _0)) = (real_of_num (NUMERAL _0)))) /\ (!i. ((((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) i) = (real_of_num (NUMERAL _0)))) ==> (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= (SUC i)) /\ ((SUC i) <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) (SUC i)) = (real_of_num (NUMERAL _0))))))) ==> (!i. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) i) = (real_of_num (NUMERAL _0)))))) = (!i. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) i) = (real_of_num (NUMERAL _0))))))
T c= c==> c/\ c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cNUMERAL c_0 c<= cNUMERAL c_0 f0 c= * / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cNUMERAL c_0 creal_of_num cNUMERAL c_0 ! c==> c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c<= b0 f0 c= * / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0 creal_of_num cNUMERAL c_0 c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC b0 c<= cSUC b0 f0 c= * / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 cSUC b0 creal_of_num cNUMERAL c_0 ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c<= b0 f0 c= * / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0 creal_of_num cNUMERAL c_0 ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c<= b0 f0 c= * / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0 creal_of_num cNUMERAL c_0
+ |- (((!g. ((!x. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) ==> ((Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)) = (g x)))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) ==> ((\g. ((!x. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) ==> ((Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)) = (g x)))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) g)) = ((\g. ((!x. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) ==> ((Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)) = (g x)))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c<= b1 f0 c= cRe * / ccomplex_mul * * f1 b2 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b2 cCx creal_of_num cFACT b2 b1 * b0 b1 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe * / ccomplex_mul * * f1 b2 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b2 cCx creal_of_num cFACT b2 b1 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 * / c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c<= b1 f0 c= cRe * / ccomplex_mul * * f1 b2 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b2 cCx creal_of_num cFACT b2 b1 * b0 b1 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe * / ccomplex_mul * * f1 b2 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b2 cCx creal_of_num cFACT b2 b1 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 f3 * / c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c<= b1 f0 c= cRe * / ccomplex_mul * * f1 b2 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b2 cCx creal_of_num cFACT b2 b1 * b0 b1 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe * / ccomplex_mul * * f1 b2 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b2 cCx creal_of_num cFACT b2 b1 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 f3
- |- (((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) ==> ((\m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) m)) = ((\m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) m))
T c= c==> ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 * / ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 f0 * / ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 f0
+ ((\z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z') |- (((((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) ==> F) = F)
T c==> * / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f4 c= c==> c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 f4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
- |- (((a = b) ==> (a ==> b)) ==> ((a = b) ==> (a ==> b)))
T c==> c==> c= f0 f1 c==> f0 f1 c==> c= f0 f1 c==> f0 f1
- ((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (y = x))) |- ((y IN ((NUMERAL _0) .. n)) = T)
T c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= f2 f0 c= cIN f2 * * part c.. cNUMERAL c_0 f1 cT
+ |- ((\q'. ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) = p') ==> ((p' ==> ((y = x) = q')) ==> ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) ==> (y = x)) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b1 cNUMERAL cBIT1 c_0 f2 * / c+ b1 cNUMERAL cBIT1 c_0 f0 f3 c==> c==> f3 c= c= f2 f0 b0 c= c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b1 cNUMERAL cBIT1 c_0 f2 * / c+ b1 cNUMERAL cBIT1 c_0 f0 c= f2 f0 c==> f3 b0 f4
- |- ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))))))))
T c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- |- (((!n. (((BIT0 m) <= (BIT1 n)) = (m <= n))) ==> ((\n. (((BIT0 m) <= (BIT1 n)) = (m <= n))) n)) = ((\n. (((BIT0 m) <= (BIT1 n)) = (m <= n))) n))
T c= c==> ! c= c<= cBIT0 f0 cBIT1 b0 c<= f0 b0 * / c= c<= cBIT0 f0 cBIT1 b0 c<= f0 b0 f1 * / c= c<= cBIT0 f0 cBIT1 b0 c<= f0 b0 f1
+ ((\z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z) |- (((\z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z) /\ F)
T c==> * / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 c/\ * / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 cF
- (((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (~ (_0 > (BIT1 n)))
T c~ c> c_0 cBIT1 f0
+ |- ((_0 + (BIT1 n)) = (BIT1 n))
T c= c+ c_0 cBIT1 f0 cBIT1 f0
- |- ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))
T c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _2014380)) /\ ((real_le ((real_add ((real_add (real_of_int _2014380)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _2014380)) /\ ((real_le ((real_add ((real_add (real_of_int _2014380)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x))))) = ((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x)))))))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum ((NUMERAL _0) .. n)) (\x. ((complex_mul ((f x) w)) ((complex_div ((complex_pow ((vector_sub z) w)) x)) (Cx (real_of_num (FACT x)))))))))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 f0 c= ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0
+ (((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _2014380))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))), (((NUMERAL _0) <= i) /\ (i <= n)), (u IN (closed_segment ((CONS (w , z)) NIL))) |- ((((NUMERAL _0) <= i) /\ (i <= n)) /\ (((has_complex_derivative (\u. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))) (at u)))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> c/\ c<= cNUMERAL c_0 f4 c<= f4 f2 c==> cIN f5 * part cclosed_segment cCONS c, f0 f1 cNIL c/\ c/\ c<= cNUMERAL c_0 f4 c<= f4 f2 chas_complex_derivative / ccomplex_mul * * f3 f4 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f4 cCx creal_of_num cFACT f4 cvector_add ccomplex_mul * * f3 f4 f5 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f4 ccomplex_pow cvector_sub f1 f5 c- f4 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f4 ccomplex_mul * * f3 c+ f4 cNUMERAL cBIT1 c_0 f5 ccomplex_div ccomplex_pow cvector_sub f1 f5 f4 cCx creal_of_num cFACT f4 cat f5
+ (((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((!n. ((ODD (BIT1 n)) = T)) ==> ((\n. ((ODD (BIT1 n)) = T)) n)) = ((\n. ((ODD (BIT1 n)) = T)) n))
T c= c==> ! c= cODD cBIT1 b0 cT * / c= cODD cBIT1 b0 cT f0 * / c= cODD cBIT1 b0 cT f0
- |- ((ODD _0) = F)
T c= cODD c_0 cF
- |- (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))))
T c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ ((\c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) c) |- (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> * / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 b0 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((\z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) z) |- (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((!n. (((BIT0 m) <= (BIT0 n)) = (m <= n))) ==> ((\n. (((BIT0 m) <= (BIT0 n)) = (m <= n))) n)) = ((\n. (((BIT0 m) <= (BIT0 n)) = (m <= n))) n))
T c= c==> ! c= c<= cBIT0 f0 cBIT0 b0 c<= f0 b0 * / c= c<= cBIT0 f0 cBIT0 b0 c<= f0 b0 f1 * / c= c<= cBIT0 f0 cBIT0 b0 c<= f0 b0 f1
+ |- (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n)))
T c= c+ cNUMERAL f0 cNUMERAL f1 cNUMERAL c+ f0 f1
+ |- (((((real_sub (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) = (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w)))) ==> ((Re ((f (NUMERAL _0)) z)) = ((real_add (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w)))))) = (((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (u IN (closed_segment ((CONS (w , z)) NIL)))) /\ ((((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w)))) ==> ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))))))
T c= c==> c= creal_sub cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3 c= cRe * * f1 cNUMERAL c_0 f2 creal_add cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3 c/\ c==> cIN f4 * part cclosed_segment cCONS c, f3 f2 cNIL cIN f4 * part cclosed_segment cCONS c, f3 f2 cNIL c==> c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 f2 cRe * / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 f3 cRe ccomplex_mul * / ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 f0 cCx creal_of_num cFACT f0 f4 cvector_sub f2 f3 c= cRe * * f1 cNUMERAL c_0 f2 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3
+ |- ((Re ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)))))
T c= cRe cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe * / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0
+ |- ((((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) = (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))))
T c= c= cvector_add cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 f0 cCx creal_of_num cFACT f0 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 f0 cCx creal_of_num cFACT f0
- |- (((!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))) ==> ((\m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))) m)) = ((\m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))) m))
T c= c==> ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 * / ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 f0 * / ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 f0
+ |- ((\y. ((Re ((vector_add x) y)) = ((real_add (Re x)) (Re y)))) y)
T * / c= cRe cvector_add f0 b0 creal_add cRe f0 cRe b0 f1
+ |- (((!s. (!net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net)))) ==> ((\s. (!net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net)))) s)) = ((\s. (!net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net)))) s))
T c= c==> ! ! c==> c/\ cFINITE b0 ! c==> cIN b2 b0 chas_complex_derivative * f0 b2 * f1 b2 b1 chas_complex_derivative / cvsum b0 / * * f0 b3 b2 cvsum b0 f1 b1 * / ! c==> c/\ cFINITE b0 ! c==> cIN b2 b0 chas_complex_derivative * f0 b2 * f1 b2 b1 chas_complex_derivative / cvsum b0 / * * f0 b3 b2 cvsum b0 f1 b1 f2 * / ! c==> c/\ cFINITE b0 ! c==> cIN b2 b0 chas_complex_derivative * f0 b2 * f1 b2 b1 chas_complex_derivative / cvsum b0 / * * f0 b3 b2 cvsum b0 f1 b1 f2
+ |- (((!z'. ((!u. ((u IN (closed_segment ((CONS (w , z')) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z')) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z'))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z') w)))))))) ==> ((\z'. ((!u. ((u IN (closed_segment ((CONS (w , z')) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z')) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z'))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z') w)))))))) z)) = ((\z'. ((!u. ((u IN (closed_segment ((CONS (w , z')) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z')) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z'))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z') w)))))))) z))
T c= c==> ! c==> ! c==> cIN b1 * part cclosed_segment cCONS c, f0 b0 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f1 / ccomplex_mul * * f2 b3 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 b3 cCx creal_of_num cFACT b3 * / ccomplex_mul * * f2 c+ f1 cNUMERAL cBIT1 c_0 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 f1 cCx creal_of_num cFACT f1 b1 cat b1 c? / c/\ cIN b1 * part cclosed_segment cCONS c, f0 b0 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f1 / ccomplex_mul * * f2 b3 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 b3 cCx creal_of_num cFACT b3 b0 cRe * / cvsum * * part c.. cNUMERAL c_0 f1 / ccomplex_mul * * f2 b3 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 b3 cCx creal_of_num cFACT b3 f0 cRe ccomplex_mul * / ccomplex_mul * * f2 c+ f1 cNUMERAL cBIT1 c_0 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 f1 cCx creal_of_num cFACT f1 b1 cvector_sub b0 f0 * / c==> ! c==> cIN b1 * part cclosed_segment cCONS c, f0 b0 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f1 / ccomplex_mul * * f2 b3 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 b3 cCx creal_of_num cFACT b3 * / ccomplex_mul * * f2 c+ f1 cNUMERAL cBIT1 c_0 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 f1 cCx creal_of_num cFACT f1 b1 cat b1 c? / c/\ cIN b1 * part cclosed_segment cCONS c, f0 b0 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f1 / ccomplex_mul * * f2 b3 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 b3 cCx creal_of_num cFACT b3 b0 cRe * / cvsum * * part c.. cNUMERAL c_0 f1 / ccomplex_mul * * f2 b3 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 b3 cCx creal_of_num cFACT b3 f0 cRe ccomplex_mul * / ccomplex_mul * * f2 c+ f1 cNUMERAL cBIT1 c_0 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 f1 cCx creal_of_num cFACT f1 b1 cvector_sub b0 f0 f3 * / c==> ! c==> cIN b1 * part cclosed_segment cCONS c, f0 b0 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f1 / ccomplex_mul * * f2 b3 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 b3 cCx creal_of_num cFACT b3 * / ccomplex_mul * * f2 c+ f1 cNUMERAL cBIT1 c_0 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 f1 cCx creal_of_num cFACT f1 b1 cat b1 c? / c/\ cIN b1 * part cclosed_segment cCONS c, f0 b0 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f1 / ccomplex_mul * * f2 b3 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 b3 cCx creal_of_num cFACT b3 b0 cRe * / cvsum * * part c.. cNUMERAL c_0 f1 / ccomplex_mul * * f2 b3 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 b3 cCx creal_of_num cFACT b3 f0 cRe ccomplex_mul * / ccomplex_mul * * f2 c+ f1 cNUMERAL cBIT1 c_0 b2 ccomplex_div ccomplex_pow cvector_sub f3 b2 f1 cCx creal_of_num cFACT f1 b1 cvector_sub b0 f0 f3
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ ((\f. (?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) f) |- (?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))
T c==> * / c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT1 m) = (BIT0 n)) = F)) n)
T * / c= c= cBIT1 f0 cBIT0 b0 cF f1
- |- ((_0 <= _0) = T)
T c= c<= c_0 c_0 cT
+ |- (((!y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y)))) ==> ((\y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y)))) y)) = ((\y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y)))) y))
T c= c==> ! c= cCx creal_mul f0 b0 ccomplex_mul cCx f0 cCx b0 * / c= cCx creal_mul f0 b0 ccomplex_mul cCx f0 cCx b0 f1 * / c= cCx creal_mul f0 b0 ccomplex_mul cCx f0 cCx b0 f1
- |- (((!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n))))) ==> ((\n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n))))) n)) = ((\n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n))))) n))
T c= c==> ! c= c* cBIT0 f0 cBIT0 b0 cBIT0 cBIT0 c* f0 b0 * / c= c* cBIT0 f0 cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1 * / c= c* cBIT0 f0 cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
- |- ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))
T c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- ((~ (((real_add ((f (NUMERAL _0)) $ i)) (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) = ((real_add ((real_sub ((f (NUMERAL _0)) $ i)) ((f (SUC n)) $ i))) ((real_add (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) ((f (SUC n)) $ i))))) ==> F)
T c==> c~ c= creal_add c$ * f0 cNUMERAL c_0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f0 f1 creal_add creal_sub c$ * f0 cNUMERAL c_0 f1 c$ * f0 cSUC f2 f1 creal_add c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f0 f1 c$ * f0 cSUC f2 f1 cF
+ |- ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))))
T c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 f0 c= cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0
+ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num n))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))
T c==> c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\i. (((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i))))) = ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) i)
T * / c= ccomplex_mul ccomplex_mul cCx creal_of_num b0 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 f2
- |- (((!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n)))) ==> ((\n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n)))) n)) = ((\n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n)))) n))
T c= c==> ! c= c+ cBIT0 f0 cBIT0 b0 cBIT0 c+ f0 b0 * / c= c+ cBIT0 f0 cBIT0 b0 cBIT0 c+ f0 b0 f1 * / c= c+ cBIT0 f0 cBIT0 b0 cBIT0 c+ f0 b0 f1
+ |- ((FINITE (m .. n)) = T)
T c= cFINITE * * part c.. f0 f1 cT
- |- ((ODD (BIT0 n)) = F)
T c= cODD cBIT0 f0 cF
- |- ((\n. ((_0 - (BIT0 n)) = _0)) n)
T * / c= c- c_0 cBIT0 b0 c_0 f0
- |- (((!n. ((_0 = (BIT0 n)) = (_0 = n))) ==> ((\n. ((_0 = (BIT0 n)) = (_0 = n))) n)) = ((\n. ((_0 = (BIT0 n)) = (_0 = n))) n))
T c= c==> ! c= c= c_0 cBIT0 b0 c= c_0 b0 * / c= c= c_0 cBIT0 b0 c= c_0 b0 f0 * / c= c= c_0 cBIT0 b0 c= c_0 b0 f0
- (!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) |- ((!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c==> ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
+ |- ((\z. (((complex_div w) z) = ((complex_mul w) (complex_inv z)))) z)
T * / c= ccomplex_div f0 b0 ccomplex_mul f0 ccomplex_inv b0 f1
+ |- ((((\n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) n) ==> F) = T)
T c= c==> * / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 cF cT
- (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))), ((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) |- (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) /\ (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 c==> c/\ chas_complex_derivative f0 f1 cat f2 chas_complex_derivative f3 f4 cat f2 c/\ c/\ chas_complex_derivative f0 f1 cat f2 chas_complex_derivative f3 f4 cat f2 chas_complex_derivative / ccomplex_mul * f0 b0 * f3 b0 cvector_add ccomplex_mul * f0 f2 f4 ccomplex_mul f1 * f3 f2 cat f2
- |- ((\n. ((PRE (BIT1 n)) = (BIT0 n))) n)
T * / c= cPRE cBIT1 b0 cBIT0 b0 f0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 ! ! c==> c/\ chas_complex_derivative f0 f1 cat b1 chas_complex_derivative b0 f2 cat b1 chas_complex_derivative / ccomplex_mul * f0 b2 * b0 b2 cvector_add ccomplex_mul * f0 b1 f2 ccomplex_mul f1 * b0 b1 cat b1
- (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) |- ((?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) /\ F)
T c==> c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))))
T c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 f0 c= ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4
+ |- ((\x. (!y. (((Cx x) = (Cx y)) = (x = y)))) x)
T * / ! c= c= cCx b0 cCx b1 c= b0 b1 f0
- |- ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))
T c= cPRE cBIT0 f0 cCOND c= f0 c_0 c_0 cBIT1 cPRE f0
+ |- (((!n. ((real_of_num (m * n)) = ((real_mul (real_of_num m)) (real_of_num n)))) ==> ((\n. ((real_of_num (m * n)) = ((real_mul (real_of_num m)) (real_of_num n)))) n)) = ((\n. ((real_of_num (m * n)) = ((real_mul (real_of_num m)) (real_of_num n)))) n))
T c= c==> ! c= creal_of_num c* f0 b0 creal_mul creal_of_num f0 creal_of_num b0 * / c= creal_of_num c* f0 b0 creal_mul creal_of_num f0 creal_of_num b0 f1 * / c= creal_of_num c* f0 b0 creal_mul creal_of_num f0 creal_of_num b0 f1
- (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- ((\x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))) x)
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 * / c==> c/\ chas_complex_derivative f0 f1 cat b0 chas_complex_derivative f2 f3 cat b0 chas_complex_derivative / ccomplex_mul * f0 b1 * f2 b1 cvector_add ccomplex_mul * f0 b0 f3 ccomplex_mul f1 * f2 b0 cat b0 f4
- (x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) |- ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) = T)
T c==> cIN f0 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 c= cIN f0 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 cT
+ |- ((m + (NUMERAL (BIT1 _0))) = (SUC m))
T c= c+ f0 cNUMERAL cBIT1 c_0 cSUC f0
- |- ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))
T c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
- |- ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))
T c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
+ |- ((\f. (!s. (!net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) f)
T * / ! ! c==> c/\ cFINITE b1 ! c==> cIN b3 b1 chas_complex_derivative * b0 b3 * f0 b3 b2 chas_complex_derivative / cvsum b1 / * * b0 b4 b3 cvsum b1 f0 b2 f1
- |- ((((has_complex_derivative (\u. (f u))) f') net) ==> (((has_complex_derivative (\u. (vector_neg (f u)))) (vector_neg f')) net))
T c==> chas_complex_derivative / * f0 b0 f1 f2 chas_complex_derivative / cvector_neg * f0 b0 cvector_neg f1 f2
- |- (((NUMERAL m) = (NUMERAL n)) = (m = n))
T c= c= cNUMERAL f0 cNUMERAL f1 c= f0 f1
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 ! ! c==> c/\ chas_complex_derivative f0 f1 cat b1 chas_complex_derivative f2 b0 cat b1 chas_complex_derivative / ccomplex_mul * f0 b2 * f2 b2 cvector_add ccomplex_mul * f0 b1 b0 ccomplex_mul f1 * f2 b1 cat b1
+ |- ((((\f. (?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) f) ==> F) = T)
T c= c==> * / c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF cT
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (!y. (!z. (((vector_add ((vector_add x) y)) z) = ((vector_add x) ((vector_add y) z)))))) ==> ((\x. (!y. (!z. (((vector_add ((vector_add x) y)) z) = ((vector_add x) ((vector_add y) z)))))) x)) = ((\x. (!y. (!z. (((vector_add ((vector_add x) y)) z) = ((vector_add x) ((vector_add y) z)))))) x))
T c= c==> ! ! ! c= cvector_add cvector_add b0 b1 b2 cvector_add b0 cvector_add b1 b2 * / ! ! c= cvector_add cvector_add b0 b1 b2 cvector_add b0 cvector_add b1 b2 f0 * / ! ! c= cvector_add cvector_add b0 b1 b2 cvector_add b0 cvector_add b1 b2 f0
- |- (((BIT0 m) EXP _0) = (BIT1 _0))
T c= cEXP cBIT0 f0 c_0 cBIT1 c_0
+ |- ((((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))) = F)
T c= c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- (((BIT0 m) < (BIT1 n)) = (m <= n))
T c= c< cBIT0 f0 cBIT1 f1 c<= f0 f1
- |- (((!n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) ==> ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n)) = ((\n. (((NUMERAL m) = (NUMERAL n)) = (m = n))) n))
T c= c==> ! c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1 * / c= c= cNUMERAL f0 cNUMERAL b0 c= f0 b0 f1
- |- ((convex (closed_segment ((CONS (a , b)) NIL))) = T)
T c= cconvex * part cclosed_segment cCONS c, f0 f1 cNIL cT
- |- ((\a. (!b. (convex (open_segment (a , b))))) a)
T * / ! cconvex * part copen_segment c, b0 b1 f0
- |- (((!n. (((BIT1 n) >= (BIT0 m)) = (n >= m))) ==> ((\n. (((BIT1 n) >= (BIT0 m)) = (n >= m))) n)) = ((\n. (((BIT1 n) >= (BIT0 m)) = (n >= m))) n))
T c= c==> ! c= c>= cBIT1 b0 cBIT0 f0 c>= b0 f0 * / c= c>= cBIT1 b0 cBIT0 f0 c>= b0 f0 f1 * / c= c>= cBIT1 b0 cBIT0 f0 c>= b0 f0 f1
- |- ((_0 >= _0) = T)
T c= c>= c_0 c_0 cT
- |- ((BIT0 _0) = _0)
T c= cBIT0 c_0 c_0
- |- ((((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x)))) ==> (((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x)))))
T c==> c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0 c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0
- |- (((!n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) ==> ((\n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) n)) = ((\n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) n))
T c= c==> ! c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 * / c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 f0 * / c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 f0
+ |- ((\m. ((m + (NUMERAL (BIT1 _0))) = (SUC m))) m)
T * / c= c+ b0 cNUMERAL cBIT1 c_0 cSUC b0 f0
- |- (((BIT0 n) >= (BIT1 m)) = (n > m))
T c= c>= cBIT0 f0 cBIT1 f1 c> f0 f1
+ ((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) |- (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) /\ ((Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)) = (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))))
T c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c/\ c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c= cRe * / ccomplex_mul * * f2 b0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 b0 cCx creal_of_num cFACT b0 f0 cRe ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0
+ |- (((((NUMERAL (BIT1 _0)) <= (SUC i)) /\ ((SUC i) <= n)) ==> ((Re ((complex_mul ((f (SUC i)) z)) ((complex_div ((complex_pow ((vector_sub z) z)) (SUC i))) (Cx (real_of_num (FACT (SUC i))))))) = (real_of_num (NUMERAL _0)))) = (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= (SUC i)) /\ ((SUC i) <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) (SUC i)) = (real_of_num (NUMERAL _0)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 cSUC f0 c<= cSUC f0 f1 c= cRe ccomplex_mul * * f2 cSUC f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 cSUC f0 cCx creal_of_num cFACT cSUC f0 creal_of_num cNUMERAL c_0 c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC f0 c<= cSUC f0 f1 c= * / cRe ccomplex_mul * * f2 b0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 b0 cCx creal_of_num cFACT b0 cSUC f0 creal_of_num cNUMERAL c_0
- |- (((BIT1 n) < _0) = F)
T c= c< cBIT1 f0 c_0 cF
- |- (((!m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) /\ ((_0 >= _0) /\ ((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) /\ ((!n. (~ (_0 >= (BIT1 n)))) /\ ((!n. ((BIT0 n) >= _0)) /\ ((!n. ((BIT1 n) >= _0)) /\ ((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT1 n) >= (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m))))))))))))) /\ (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) /\ ((~ (_0 > _0)) /\ ((!n. (~ (_0 > (BIT0 n)))) /\ ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))))) /\ ((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) /\ (((_0 - _0) = _0) /\ ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))))))))))))
T c/\ c/\ ! ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 c/\ c>= c_0 c_0 c/\ ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 c/\ ! c~ c>= c_0 cBIT1 b0 c/\ ! c>= cBIT0 b0 c_0 c/\ ! c>= cBIT1 b0 c_0 c/\ ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 c/\ c/\ ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 c/\ c~ c> c_0 c_0 c/\ ! c~ c> c_0 cBIT0 b0 c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 c/\ ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 c/\ c= c- c_0 c_0 c_0 c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ ((\z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) z) |- (((\z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) z) /\ F)
T c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ * / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ |- (((real_add ((f (NUMERAL _0)) $ i)) (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) = ((real_add ((real_sub ((f (NUMERAL _0)) $ i)) ((f (SUC n)) $ i))) ((real_add (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) ((f (SUC n)) $ i))))
T c= creal_add c$ * f0 cNUMERAL c_0 f1 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f0 f1 creal_add creal_sub c$ * f0 cNUMERAL c_0 f1 c$ * f0 cSUC f2 f1 creal_add c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f0 f1 c$ * f0 cSUC f2 f1
- |- (((!m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) ==> ((\m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) m)) = ((\m. (!n. (((NUMERAL n) > (NUMERAL m)) = (n > m)))) m))
T c= c==> ! ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 * / ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 f0 * / ! c= c> cNUMERAL b1 cNUMERAL b0 c> b1 b0 f0
- |- ((\n. (((BIT0 n) > (BIT0 m)) = (n > m))) n)
T * / c= c> cBIT0 b0 cBIT0 f0 c> b0 f0 f1
- (((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2014380))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- (((!x. (!y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y))))) ==> ((\x. (!y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y))))) x)) = ((\x. (!y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y))))) x))
T c= c==> ! ! c= ccomplex_mul cvector_neg b0 b1 cvector_neg ccomplex_mul b0 b1 * / ! c= ccomplex_mul cvector_neg b0 b1 cvector_neg ccomplex_mul b0 b1 f0 * / ! c= ccomplex_mul cvector_neg b0 b1 cvector_neg ccomplex_mul b0 b1 f0
+ |- ((\n. ((real_of_num (SUC n)) = ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))))) n)
T * / c= creal_of_num cSUC b0 creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) |- ((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u)))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> cIN f4 * part cclosed_segment cCONS c, f0 f1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 b1 cCx creal_of_num cFACT b1 ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f1 f4 f2 cCx creal_of_num cFACT f2 cat f4
+ |- ((((\u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) u) ==> F) = T)
T c= c==> * / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF cT
- |- ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))))))))))
T c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
+ |- ((\u. (!n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) u)
T * / ! c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f0 cSUC b1 b0 ccomplex_mul ccomplex_pow cvector_sub f1 b0 b1 ccomplex_inv cCx creal_of_num cFACT b1 f2
+ |- (((((has_complex_derivative (\u. z)) (Cx (real_of_num (NUMERAL _0)))) (at u)) ==> ((((has_complex_derivative (\u. u)) g') (at u)) ==> (((has_complex_derivative (\u. ((vector_sub z) u))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) g')) (at u)))) = ((((has_complex_derivative (\u. u)) g') (at u)) ==> (((has_complex_derivative (\u. ((vector_sub z) u))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) g')) (at u))))
T c= c==> chas_complex_derivative / f0 cCx creal_of_num cNUMERAL c_0 cat f1 c==> chas_complex_derivative / b0 f2 cat f1 chas_complex_derivative / cvector_sub f0 b0 cvector_sub cCx creal_of_num cNUMERAL c_0 f2 cat f1 c==> chas_complex_derivative / b0 f2 cat f1 chas_complex_derivative / cvector_sub f0 b0 cvector_sub cCx creal_of_num cNUMERAL c_0 f2 cat f1
+ |- ((\z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) z)
T * / c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((\m. (!n. ((real_of_num (m * n)) = ((real_mul (real_of_num m)) (real_of_num n))))) m)
T * / ! c= creal_of_num c* b0 b1 creal_mul creal_of_num b0 creal_of_num b1 f0
+ |- ((((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (Cx (real_of_num (FACT i))))) (at u)) ==> (((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i))))) (at u)))
T c==> chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f0 b0 f1 cCx creal_of_num cFACT f1 ccomplex_div ccomplex_mul cCx creal_of_num f1 ccomplex_mul ccomplex_pow cvector_sub f0 f2 c- f1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f1 cat f2 chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f0 b0 f1 cCx creal_of_num cFACT f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f1 ccomplex_pow cvector_sub f0 f2 c- f1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f1 cat f2
+ |- (((!m. (!n. (!p. (((IMAGE (\i. (i + p))) (m .. n)) = ((m + p) .. (n + p)))))) ==> ((\m. (!n. (!p. (((IMAGE (\i. (i + p))) (m .. n)) = ((m + p) .. (n + p)))))) m)) = ((\m. (!n. (!p. (((IMAGE (\i. (i + p))) (m .. n)) = ((m + p) .. (n + p)))))) m))
T c= c==> ! ! ! c= * * part cIMAGE / c+ b3 b2 * * part c.. b0 b1 * * part c.. c+ b0 b2 c+ b1 b2 * / ! ! c= * * part cIMAGE / c+ b3 b2 * * part c.. b0 b1 * * part c.. c+ b0 b2 c+ b1 b2 f0 * / ! ! c= * * part cIMAGE / c+ b3 b2 * * part c.. b0 b1 * * part c.. c+ b0 b2 c+ b1 b2 f0
- |- (((BIT1 m) EXP _0) = (BIT1 _0))
T c= cEXP cBIT1 f0 c_0 cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((\n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) n) |- (((\n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) n) /\ F)
T c==> * / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 c/\ * / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 cF
- |- ((\n. (((BIT1 m) < (BIT0 n)) = (m < n))) n)
T * / c= c< cBIT1 f0 cBIT0 b0 c< f0 b0 f1
+ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num n))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num n))) (real_of_num (NUMERAL _0)))
T c==> c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((((~ (((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x))))) ==> F) ==> (((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x))))) = (((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x)))))
T c= c==> c==> c~ c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0 cF c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0 c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0
+ |- (!i. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) i) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c= * / cRe ccomplex_mul * * f2 b0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 b0 cCx creal_of_num cFACT b0 f0 creal_of_num cNUMERAL c_0
- |- (((!n. (((BIT0 n) < _0) = F)) ==> ((\n. (((BIT0 n) < _0) = F)) n)) = ((\n. (((BIT0 n) < _0) = F)) n))
T c= c==> ! c= c< cBIT0 b0 c_0 cF * / c= c< cBIT0 b0 c_0 cF f0 * / c= c< cBIT0 b0 c_0 cF f0
+ |- ((((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) ==> F)
T c==> c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((EVEN (BIT0 n)) = T)
T c= cEVEN cBIT0 f0 cT
- |- (((!n. (((BIT1 n) + _0) = (BIT1 n))) ==> ((\n. (((BIT1 n) + _0) = (BIT1 n))) n)) = ((\n. (((BIT1 n) + _0) = (BIT1 n))) n))
T c= c==> ! c= c+ cBIT1 b0 c_0 cBIT1 b0 * / c= c+ cBIT1 b0 c_0 cBIT1 b0 f0 * / c= c+ cBIT1 b0 c_0 cBIT1 b0 f0
- |- ((\n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n)))) n)
T * / c= c+ cBIT1 f0 cBIT0 b0 cBIT1 c+ f0 b0 f1
+ |- ((\n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) n)
T * / c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 f0
- |- (((!n. (!f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0)))))) ==> ((\n. (!f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0)))))) n)) = ((\n. (!f. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0)))))) n))
T c= c==> ! ! c==> ! c==> c/\ c<= f0 b2 c<= b2 b0 c= * b1 b2 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 b0 b1 creal_of_num cNUMERAL c_0 * / ! c==> ! c==> c/\ c<= f0 b2 c<= b2 b0 c= * b1 b2 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 b0 b1 creal_of_num cNUMERAL c_0 f1 * / ! c==> ! c==> c/\ c<= f0 b2 c<= b2 b0 c= * b1 b2 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 b0 b1 creal_of_num cNUMERAL c_0 f1
- |- (((!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n)))) ==> ((\n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n)))) n)) = ((\n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n)))) n))
T c= c==> ! c= c+ cBIT1 f0 cBIT0 b0 cBIT1 c+ f0 b0 * / c= c+ cBIT1 f0 cBIT0 b0 cBIT1 c+ f0 b0 f1 * / c= c+ cBIT1 f0 cBIT0 b0 cBIT1 c+ f0 b0 f1
+ |- ((\y. (((Cx x) = (Cx y)) = (x = y))) y)
T * / c= c= cCx f0 cCx b0 c= f0 b0 f1
+ |- (((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (y = x))) ==> ((y = x) = T))
T c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= f2 f0 c= c= f2 f0 cT
+ |- (((!y. (((Cx x) = (Cx y)) = (x = y))) ==> ((\y. (((Cx x) = (Cx y)) = (x = y))) y)) = ((\y. (((Cx x) = (Cx y)) = (x = y))) y))
T c= c==> ! c= c= cCx f0 cCx b0 c= f0 b0 * / c= c= cCx f0 cCx b0 c= f0 b0 f1 * / c= c= cCx f0 cCx b0 c= f0 b0 f1
- |- ((\n. (((BIT0 m) = (BIT0 n)) = (m = n))) n)
T * / c= c= cBIT0 f0 cBIT0 b0 c= f0 b0 f1
- |- ((BIT0 n) >= _0)
T c>= cBIT0 f0 c_0
+ |- ((\x. (!y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y))))) x)
T * / ! c= cCx creal_mul b0 b1 ccomplex_mul cCx b0 cCx b1 f0
+ |- ((\n. ((_0 + (BIT1 n)) = (BIT1 n))) n)
T * / c= c+ c_0 cBIT1 b0 cBIT1 b0 f0
+ |- ((\m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) m)
T * / ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 f0
- |- ((BIT1 n) > _0)
T c> cBIT1 f0 c_0
+ (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) (Re x)) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 cRe f0 creal_of_num cNUMERAL c_0
- (!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) |- ((\m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0)))))) m)
T c==> ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 * / ! c==> ! c==> c/\ c<= b0 b2 c<= b2 b1 c= * f0 b2 creal_of_num cNUMERAL c_0 c= csum * * part c.. b0 b1 f0 creal_of_num cNUMERAL c_0 f1
+ (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) i) = (real_of_num (NUMERAL _0)))) |- ((((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) i) = (real_of_num (NUMERAL _0)))) /\ (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= (SUC i)) /\ ((SUC i) <= n)) ==> (((\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))) (SUC i)) = (real_of_num (NUMERAL _0)))))
T c==> c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c= * / cRe ccomplex_mul * * f2 b0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 b0 cCx creal_of_num cFACT b0 f0 creal_of_num cNUMERAL c_0 c/\ c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c= * / cRe ccomplex_mul * * f2 b0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 b0 cCx creal_of_num cFACT b0 f0 creal_of_num cNUMERAL c_0 c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC f0 c<= cSUC f0 f1 c= * / cRe ccomplex_mul * * f2 b0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 b0 cCx creal_of_num cFACT b0 cSUC f0 creal_of_num cNUMERAL c_0
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) |- (!u. ((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) (at u))))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 ! c==> cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cat b0
- |- ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))
T c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!f. (!f'. (!w. (!z. ((!u. ((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (((has_complex_derivative f) (f' u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re (f z))) (Re (f w))) = (Re ((complex_mul (f' u)) ((vector_sub z) w))))))))))) ==> ((\f. (!f'. (!w. (!z. ((!u. ((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (((has_complex_derivative f) (f' u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re (f z))) (Re (f w))) = (Re ((complex_mul (f' u)) ((vector_sub z) w))))))))))) (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))))) = ((\f. (!f'. (!w. (!z. ((!u. ((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (((has_complex_derivative f) (f' u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re (f z))) (Re (f w))) = (Re ((complex_mul (f' u)) ((vector_sub z) w))))))))))) (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))))
T c= c==> ! ! ! ! c==> ! c==> cIN b4 * part cclosed_segment cCONS c, b2 b3 cNIL chas_complex_derivative b0 * b1 b4 cat b4 c? / c/\ cIN b4 * part cclosed_segment cCONS c, b2 b3 cNIL c= creal_sub cRe * b0 b3 cRe * b0 b2 cRe ccomplex_mul * b1 b4 cvector_sub b3 b2 * / ! ! ! c==> ! c==> cIN b4 * part cclosed_segment cCONS c, b2 b3 cNIL chas_complex_derivative b0 * b1 b4 cat b4 c? / c/\ cIN b4 * part cclosed_segment cCONS c, b2 b3 cNIL c= creal_sub cRe * b0 b3 cRe * b0 b2 cRe ccomplex_mul * b1 b4 cvector_sub b3 b2 / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 * / ! ! ! c==> ! c==> cIN b4 * part cclosed_segment cCONS c, b2 b3 cNIL chas_complex_derivative b0 * b1 b4 cat b4 c? / c/\ cIN b4 * part cclosed_segment cCONS c, b2 b3 cNIL c= creal_sub cRe * b0 b3 cRe * b0 b2 cRe ccomplex_mul * b1 b4 cvector_sub b3 b2 / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1
+ |- (((!n. (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))))) ==> ((\n. (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))))) n)) = ((\n. (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))))) n))
T c= c==> ! c= cvector_add cvsum * * part c.. f0 b0 f1 cvsum * * part c.. f0 b0 f2 cvsum * * part c.. f0 b0 / cvector_add * f1 b1 * f2 b1 * / c= cvector_add cvsum * * part c.. f0 b0 f1 cvsum * * part c.. f0 b0 f2 cvsum * * part c.. f0 b0 / cvector_add * f1 b1 * f2 b1 f3 * / c= cvector_add cvsum * * part c.. f0 b0 f1 cvsum * * part c.. f0 b0 f2 cvsum * * part c.. f0 b0 / cvector_add * f1 b1 * f2 b1 f3
- |- ((!n. (~ (_0 > (BIT1 n)))) /\ ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))))))
T c/\ ! c~ c> c_0 cBIT1 b0 c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
+ |- ((~ (x = y)) = (?z. (((complex_mul ((vector_sub x) y)) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c~ c= f0 f1 c? / c= ccomplex_mul cvector_sub f0 f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((\z. (?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) z) |- (((\z. (?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) z) /\ F)
T c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ |- ((\n. (((BIT1 n) <= _0) = F)) n)
T * / c= c<= cBIT1 b0 c_0 cF f0
- |- (~ (_0 > _0))
T c~ c> c_0 c_0
- |- (convex (closed_segment ((CONS (a , b)) NIL)))
T cconvex * part cclosed_segment cCONS c, f0 f1 cNIL
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- (((!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))) ==> ((\g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))) g)) = ((\g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))) g))
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 c= c==> ! ! ! c==> c/\ chas_complex_derivative f0 f1 cat b2 chas_complex_derivative b0 b1 cat b2 chas_complex_derivative / ccomplex_mul * f0 b3 * b0 b3 cvector_add ccomplex_mul * f0 b2 b1 ccomplex_mul f1 * b0 b2 cat b2 * / ! ! c==> c/\ chas_complex_derivative f0 f1 cat b2 chas_complex_derivative b0 b1 cat b2 chas_complex_derivative / ccomplex_mul * f0 b3 * b0 b3 cvector_add ccomplex_mul * f0 b2 b1 ccomplex_mul f1 * b0 b2 cat b2 f2 * / ! ! c==> c/\ chas_complex_derivative f0 f1 cat b2 chas_complex_derivative b0 b1 cat b2 chas_complex_derivative / ccomplex_mul * f0 b3 * b0 b3 cvector_add ccomplex_mul * f0 b2 b1 ccomplex_mul f1 * b0 b2 cat b2 f2
+ |- ((!u. ((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w)))))))
T c==> ! c==> cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cat b0 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f1 cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f0 cRe ccomplex_mul * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cvector_sub f1 f0
+ |- ((\x. (!y. (!z. ((((real_sub x) y) = z) = (x = ((real_add y) z)))))) x)
T * / ! ! c= c= creal_sub b0 b1 b2 c= b0 creal_add b1 b2 f0
+ |- (((vsum ((NUMERAL _0) .. n)) (f o (\i. (i + (NUMERAL (BIT1 _0)))))) = ((vsum ((IMAGE (\i. (i + (NUMERAL (BIT1 _0))))) ((NUMERAL _0) .. n))) f))
T c= cvsum * * part c.. cNUMERAL c_0 f0 * * part co f1 / c+ b0 cNUMERAL cBIT1 c_0 cvsum * * part cIMAGE / c+ b0 cNUMERAL cBIT1 c_0 * * part c.. cNUMERAL c_0 f0 f1
+ ((m + (NUMERAL (BIT1 _0))) = (SUC m)) |- ((SUC m) = (m + (NUMERAL (BIT1 _0))))
T c==> c= c+ f0 cNUMERAL cBIT1 c_0 cSUC f0 c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
+ |- ((\y. (!z. (((vector_add ((vector_add x) y)) z) = ((vector_add x) ((vector_add y) z))))) y)
T * / ! c= cvector_add cvector_add f0 b0 b1 cvector_add f0 cvector_add b0 b1 f1
+ |- ((\m. (!n. (((m + n) - n) = m))) m)
T * / ! c= c- c+ b0 b1 b1 b0 f0
- (((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\p'. (!q'. (((((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) = p') ==> ((p' ==> ((((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u)) = q')) ==> (((((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u))) = (p' ==> q')))))) p')
T * / ! c==> c= chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b3 b2 ccomplex_div ccomplex_pow cvector_sub f2 b2 b3 cCx creal_of_num cFACT b3 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b2 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub f2 f3 c- b2 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b2 ccomplex_mul * * f1 c+ b2 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b2 cCx creal_of_num cFACT b2 cat f3 b0 c==> c==> b0 c= chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b3 b2 ccomplex_div ccomplex_pow cvector_sub f2 b2 b3 cCx creal_of_num cFACT b3 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 f0 cCx creal_of_num cFACT f0 cat f3 b1 c= c==> chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b3 b2 ccomplex_div ccomplex_pow cvector_sub f2 b2 b3 cCx creal_of_num cFACT b3 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b2 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub f2 f3 c- b2 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b2 ccomplex_mul * * f1 c+ b2 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b2 cCx creal_of_num cFACT b2 cat f3 chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b3 b2 ccomplex_div ccomplex_pow cvector_sub f2 b2 b3 cCx creal_of_num cFACT b3 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 f0 cCx creal_of_num cFACT f0 cat f3 c==> b0 b1 f4
- |- ((\n. (~ (_0 > (BIT0 n)))) n)
T * / c~ c> c_0 cBIT0 b0 f0
- |- ((\m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))) m)
T * / ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0 f0
+ |- ((\x. (!y. (!z. (((vector_add ((vector_add x) y)) z) = ((vector_add x) ((vector_add y) z)))))) x)
T * / ! ! c= cvector_add cvector_add b0 b1 b2 cvector_add b0 cvector_add b1 b2 f0
+ |- (((!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n))))) ==> ((\n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n))))) n)) = ((\n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n))))) n))
T c= c==> ! ! c= cIN b1 * * part c.. f0 b0 c/\ c<= f0 b1 c<= b1 b0 * / ! c= cIN b1 * * part c.. f0 b0 c/\ c<= f0 b1 c<= b1 b0 f1 * / ! c= cIN b1 * * part c.. f0 b0 c/\ c<= f0 b1 c<= b1 b0 f1
+ |- ((((vector_add ((vector_sub (vector_neg ((complex_mul ((f (NUMERAL _0)) u)) ((complex_mul (vec (NUMERAL _0))) ((complex_mul ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) (vec (NUMERAL _0))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))) = (((vector_add ((vector_sub (vector_neg ((complex_mul ((f (NUMERAL _0)) u)) ((complex_mul (Cx (real_of_num (NUMERAL _0)))) ((complex_mul ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add (vector_neg ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))
T c= c= cvector_add cvector_sub cvector_neg ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_mul cvec cNUMERAL c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 cvec cNUMERAL c_0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 c= cvector_add cvector_sub cvector_neg ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_mul cCx creal_of_num cNUMERAL c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add cvector_neg ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3
- |- ((!n. ((_0 - (BIT0 n)) = _0)) /\ ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n))))))))))))
T c/\ ! c= c- c_0 cBIT0 b0 c_0 c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) |- ((\i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) i)
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 * / ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 f4
+ |- (((!f. (!m. (!n. ((m <= n) ==> (((vsum (m .. n)) f) = ((vector_add (f m)) ((vsum ((m + (NUMERAL (BIT1 _0))) .. n)) f))))))) ==> ((\f. (!m. (!n. ((m <= n) ==> (((vsum (m .. n)) f) = ((vector_add (f m)) ((vsum ((m + (NUMERAL (BIT1 _0))) .. n)) f))))))) f)) = ((\f. (!m. (!n. ((m <= n) ==> (((vsum (m .. n)) f) = ((vector_add (f m)) ((vsum ((m + (NUMERAL (BIT1 _0))) .. n)) f))))))) f))
T c= c==> ! ! ! c==> c<= b1 b2 c= cvsum * * part c.. b1 b2 b0 cvector_add * b0 b1 cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 b2 b0 * / ! ! c==> c<= b1 b2 c= cvsum * * part c.. b1 b2 b0 cvector_add * b0 b1 cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 b2 b0 f0 * / ! ! c==> c<= b1 b2 c= cvsum * * part c.. b1 b2 b0 cvector_add * b0 b1 cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 b2 b0 f0
+ |- ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) g)))
T c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 f0 c= cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 * f4 b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 f4
- |- (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n)))
T c= c- cNUMERAL f0 cNUMERAL f1 cNUMERAL c- f0 f1
+ |- ((((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) ==> F)
T c==> c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) |- ((Cx (real_of_num (NUMERAL (BIT1 _0)))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))))
T c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
+ |- ((~ F) = T)
T c= c~ cF cT
+ |- (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))) x)))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))))
T c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe * / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 b0 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0
- |- ((((A ==> B) /\ (C ==> D)) ==> ((A /\ C) ==> (B /\ D))) ==> (((A ==> B) /\ (C ==> D)) ==> ((A /\ C) ==> (B /\ D))))
T c==> c==> c/\ c==> f0 f1 c==> f2 f3 c==> c/\ f0 f2 c/\ f1 f3 c==> c/\ c==> f0 f1 c==> f2 f3 c==> c/\ f0 f2 c/\ f1 f3
+ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) |- F
T c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ (((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)) = ((vsum (m .. n)) (\i. ((vector_add (f i)) (g i))))) |- (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)))
T c==> c= cvector_add cvsum * * part c.. f0 f1 f2 cvsum * * part c.. f0 f1 f3 cvsum * * part c.. f0 f1 / cvector_add * f2 b0 * f3 b0 c= cvsum * * part c.. f0 f1 / cvector_add * f2 b0 * f3 b0 cvector_add cvsum * * part c.. f0 f1 f2 cvsum * * part c.. f0 f1 f3
- |- (((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) ==> ((\m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) m)) = ((\m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) m))
T c= c==> ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 * / ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 f0 * / ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 f0
- |- ((\n. (((BIT1 m) = (BIT1 n)) = (m = n))) n)
T * / c= c= cBIT1 f0 cBIT1 b0 c= f0 b0 f1
+ ((\a. (?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) a) |- (((\a. (?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) a) /\ F)
T c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ * / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ |- (((vector_add ((vector_sub (vector_neg ((complex_mul ((f (NUMERAL _0)) u)) ((complex_mul (vec (NUMERAL _0))) ((complex_mul ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) (vec (NUMERAL _0))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))
T c= cvector_add cvector_sub cvector_neg ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_mul cvec cNUMERAL c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT1 c_0 cvector_neg ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 cvec cNUMERAL c_0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3
+ (((has_complex_derivative (\u. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i))))))))) (at u)) |- (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) (at u))
T c==> chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f3 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cat f3 chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 f0 cCx creal_of_num cFACT f0 cat f3
+ |- (((!z. (!u. (!i. (((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i))))) = ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))))) ==> ((\z. (!u. (!i. (((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i))))) = ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))))) z)) = ((\z. (!u. (!i. (((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i))))) = ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))))) z))
T c= c==> ! ! ! c= ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 * / ! ! c= ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 f0 * / ! ! c= ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 f0
+ |- (!f. (((vsum ((NUMERAL _0) .. n)) f) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (n + (NUMERAL (BIT1 _0)))))) ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. (n + (NUMERAL (BIT1 _0))))) f))))
T c= cvsum * * part c.. cNUMERAL c_0 f0 f1 cvector_add cvector_sub * f1 cNUMERAL c_0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c+ f0 cNUMERAL cBIT1 c_0 f1
- |- (((!g. ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((vector_add ((complex_mul ((f (SUC x)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))) ((complex_mul ((f (SUC x)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x))))))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) ==> ((\g. ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((vector_add ((complex_mul ((f (SUC x)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))) ((complex_mul ((f (SUC x)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x))))))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g)) = ((\g. ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((vector_add ((complex_mul ((f (SUC x)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))) ((complex_mul ((f (SUC x)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x))))))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 f0 c= cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 f0 c= cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 f0 c= cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4
- ((A ==> B) /\ (C ==> D)), (((A ==> B) /\ (C ==> D)) ==> ((A /\ C) ==> (B /\ D))) |- ((((A ==> B) /\ (C ==> D)) ==> ((A /\ C) ==> (B /\ D))) /\ ((A /\ C) ==> (B /\ D)))
T c==> c/\ c==> f0 f1 c==> f2 f3 c==> c==> c/\ c==> f0 f1 c==> f2 f3 c==> c/\ f0 f2 c/\ f1 f3 c/\ c==> c/\ c==> f0 f1 c==> f2 f3 c==> c/\ f0 f2 c/\ f1 f3 c==> c/\ f0 f2 c/\ f1 f3
+ |- (((!x. (((\z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) x) ==> F)) ==> ((?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) = ((?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))
T c= c==> ! c==> * / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ (((vector_add ((vector_add x) y)) z) = ((vector_add x) ((vector_add y) z))) |- (((vector_add x) ((vector_add y) z)) = ((vector_add ((vector_add x) y)) z))
T c==> c= cvector_add cvector_add f0 f1 f2 cvector_add f0 cvector_add f1 f2 c= cvector_add f0 cvector_add f1 f2 cvector_add cvector_add f0 f1 f2
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))) n)
T * / c= c+ cBIT1 f0 cBIT1 b0 cBIT0 cSUC c+ f0 b0 f1
+ |- ((\g. ((!i. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))) = (g i)))) ==> (((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) g)
T * / c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c<= b1 f0 c= ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 f3
+ |- ((\m. (!n. (FINITE (m .. n)))) m)
T * / ! cFINITE * * part c.. b0 b1 f0
+ |- (((!x. (((\i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) x) ==> F)) ==> ((?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> F)) = ((?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> F))
T c= c==> ! c==> * / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b1 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- b1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f0 f1 c- b1 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b0 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b0 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f0 f1 c- b0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))) ==> ((\m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))) m)) = ((\m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))) m))
T c= c==> ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 * / ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 f0 * / ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0 f0
- |- ((\m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) m)
T * / ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((NUMERAL m) <= (NUMERAL n)) = (m <= n))
T c= c<= cNUMERAL f0 cNUMERAL f1 c<= f0 f1
- |- ((\n. ((_0 * (BIT1 n)) = _0)) n)
T * / c= c* c_0 cBIT1 b0 c_0 f0
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))), ((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) |- (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> c/\ cIN f4 * part cclosed_segment cCONS c, f0 f1 cNIL c<= f5 f2 chas_complex_derivative * f3 f5 * * f3 c+ f5 cNUMERAL cBIT1 c_0 f4 cat f4
- |- (!g. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((vsum s) (\i. (f i))) = ((vsum s) g))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= cvsum f0 / * f1 b0 cvsum f0 f2
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _2014380)) /\ ((real_le ((real_add ((real_add (real_of_int _2014380)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _2014380) ==> ((int_le (int_of_num (NUMERAL (BIT1 _0)))) ((int_add _2014380) (int_of_num (NUMERAL (BIT1 _0))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 cint_le cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
- |- ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n))))))
T c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
- |- (((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) ==> ((\m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) m)) = ((\m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) m))
T c= c==> ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 * / ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0 * / ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
+ |- ((\g. ((f o g) = (\x. (f (g x))))) g)
T * / c= * * part co f0 b0 / * f0 * b0 b1 f1
+ (((complex_mul x) ((complex_mul y) z)) = ((complex_mul ((complex_mul x) y)) z)) |- (((complex_mul ((complex_mul x) y)) z) = ((complex_mul x) ((complex_mul y) z)))
T c==> c= ccomplex_mul f0 ccomplex_mul f1 f2 ccomplex_mul ccomplex_mul f0 f1 f2 c= ccomplex_mul ccomplex_mul f0 f1 f2 ccomplex_mul f0 ccomplex_mul f1 f2
- |- ((!x. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) ==> ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (g x)))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))
T c==> ! c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c<= b0 f0 c= cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 * f3 b0 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 f3
+ (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z)) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 f3 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((\m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) m)
T * / ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 f0
+ |- ((((real_sub (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) = (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w)))) ==> ((Re ((f (NUMERAL _0)) z)) = ((real_add (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))))
T c==> c= creal_sub cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3 c= cRe * * f1 cNUMERAL c_0 f2 creal_add cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3
+ |- (!z'. ((!u. ((u IN (closed_segment ((CONS (w , z')) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z')) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z'))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z') w))))))))
T c==> ! c==> cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f4 b1 b2 cCx creal_of_num cFACT b2 * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f4 b1 f2 cCx creal_of_num cFACT f2 b0 cat b0 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f4 b1 b2 cCx creal_of_num cFACT b2 f1 cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f4 b1 b2 cCx creal_of_num cFACT b2 f0 cRe ccomplex_mul * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f4 b1 f2 cCx creal_of_num cFACT f2 b0 cvector_sub f1 f0
- |- (((!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))) ==> ((\n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))) n)) = ((\n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n))))) n))
T c= c==> ! c= c+ cBIT1 f0 cBIT1 b0 cBIT0 cSUC c+ f0 b0 * / c= c+ cBIT1 f0 cBIT1 b0 cBIT0 cSUC c+ f0 b0 f1 * / c= c+ cBIT1 f0 cBIT1 b0 cBIT0 cSUC c+ f0 b0 f1
- |- (((!b. (convex (closed_segment ((CONS (a , b)) NIL)))) ==> ((\b. (convex (closed_segment ((CONS (a , b)) NIL)))) b)) = ((\b. (convex (closed_segment ((CONS (a , b)) NIL)))) b))
T c= c==> ! cconvex * part cclosed_segment cCONS c, f0 b0 cNIL * / cconvex * part cclosed_segment cCONS c, f0 b0 cNIL f1 * / cconvex * part cclosed_segment cCONS c, f0 b0 cNIL f1
- |- ((\n. (((BIT0 n) < _0) = F)) n)
T * / c= c< cBIT0 b0 c_0 cF f0
- |- (((!n. (((NUMERAL n) > (NUMERAL m)) = (n > m))) ==> ((\n. (((NUMERAL n) > (NUMERAL m)) = (n > m))) n)) = ((\n. (((NUMERAL n) > (NUMERAL m)) = (n > m))) n))
T c= c==> ! c= c> cNUMERAL b0 cNUMERAL f0 c> b0 f0 * / c= c> cNUMERAL b0 cNUMERAL f0 c> b0 f0 f1 * / c= c> cNUMERAL b0 cNUMERAL f0 c> b0 f0 f1
+ |- (((!f'. (!w. (!z'. ((!u. ((u IN (closed_segment ((CONS (w , z')) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (f' u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z')) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z'))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul (f' u)) ((vector_sub z') w)))))))))) ==> ((\f'. (!w. (!z'. ((!u. ((u IN (closed_segment ((CONS (w , z')) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (f' u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z')) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z'))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul (f' u)) ((vector_sub z') w)))))))))) (\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))))) = ((\f'. (!w. (!z'. ((!u. ((u IN (closed_segment ((CONS (w , z')) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (f' u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z')) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z'))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul (f' u)) ((vector_sub z') w)))))))))) (\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n))))))))
T c= c==> ! ! ! c==> ! c==> cIN b3 * part cclosed_segment cCONS c, b1 b2 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b4 b4 ccomplex_div ccomplex_pow cvector_sub f2 b4 b4 cCx creal_of_num cFACT b4 * b0 b3 cat b3 c? / c/\ cIN b3 * part cclosed_segment cCONS c, b1 b2 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b4 b4 ccomplex_div ccomplex_pow cvector_sub f2 b4 b4 cCx creal_of_num cFACT b4 b2 cRe * / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b4 b4 ccomplex_div ccomplex_pow cvector_sub f2 b4 b4 cCx creal_of_num cFACT b4 b1 cRe ccomplex_mul * b0 b3 cvector_sub b2 b1 * / ! ! c==> ! c==> cIN b3 * part cclosed_segment cCONS c, b1 b2 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b4 b4 ccomplex_div ccomplex_pow cvector_sub f2 b4 b4 cCx creal_of_num cFACT b4 * b0 b3 cat b3 c? / c/\ cIN b3 * part cclosed_segment cCONS c, b1 b2 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b4 b4 ccomplex_div ccomplex_pow cvector_sub f2 b4 b4 cCx creal_of_num cFACT b4 b2 cRe * / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b4 b4 ccomplex_div ccomplex_pow cvector_sub f2 b4 b4 cCx creal_of_num cFACT b4 b1 cRe ccomplex_mul * b0 b3 cvector_sub b2 b1 / ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 f0 cCx creal_of_num cFACT f0 * / ! ! c==> ! c==> cIN b3 * part cclosed_segment cCONS c, b1 b2 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b4 b4 ccomplex_div ccomplex_pow cvector_sub f2 b4 b4 cCx creal_of_num cFACT b4 * b0 b3 cat b3 c? / c/\ cIN b3 * part cclosed_segment cCONS c, b1 b2 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b4 b4 ccomplex_div ccomplex_pow cvector_sub f2 b4 b4 cCx creal_of_num cFACT b4 b2 cRe * / cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b4 b4 ccomplex_div ccomplex_pow cvector_sub f2 b4 b4 cCx creal_of_num cFACT b4 b1 cRe ccomplex_mul * b0 b3 cvector_sub b2 b1 / ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 f0 cCx creal_of_num cFACT f0
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) |- ((!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) /\ (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))))))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c/\ ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= cRe * * f3 cNUMERAL c_0 f1 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 f0 ccomplex_div ccomplex_pow cvector_sub f1 f0 b1 cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f2 cCx creal_of_num cFACT f2 cvector_sub f1 f0
+ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (SUC n))) |- ((real_of_num (SUC n)) = ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cSUC f0 c= creal_of_num cSUC f0 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) |- (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))
T c==> ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 ! ! c==> ! c==> c/\ c<= b0 b2 c<= b2 b1 c= * f0 b2 creal_of_num cNUMERAL c_0 c= csum * * part c.. b0 b1 f0 creal_of_num cNUMERAL c_0
+ |- (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))))
T c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0
- |- (((BIT1 n) > (BIT0 m)) = (n >= m))
T c= c> cBIT1 f0 cBIT0 f1 c>= f0 f1
- |- (((BIT0 m) = (BIT0 n)) = (m = n))
T c= c= cBIT0 f0 cBIT0 f1 c= f0 f1
- |- ((((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) = F)
T c= c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))) ==> ((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x))))) = ((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))))
T c= c==> c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0
+ |- ((((has_complex_derivative (\u. u)) g') (at u)) ==> (((has_complex_derivative (\u. ((vector_sub z) u))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) g')) (at u)))
T c==> chas_complex_derivative / b0 f0 cat f1 chas_complex_derivative / cvector_sub f2 b0 cvector_sub cCx creal_of_num cNUMERAL c_0 f0 cat f1
+ |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- (((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) ==> ((\m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) m)) = ((\m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) m))
T c= c==> ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 * / ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 f0 * / ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 f0
- |- (((BIT1 n) >= (BIT0 m)) = (n >= m))
T c= c>= cBIT1 f0 cBIT0 f1 c>= f0 f1
- |- ((ODD (BIT1 n)) = T)
T c= cODD cBIT1 f0 cT
+ |- (((!x. (((\z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) x) ==> F)) ==> ((?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) = ((?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))
T c= c==> ! c==> * / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (!c. (((\c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) c) ==> F))
T c==> * / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 b0 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ |- ((((has_complex_derivative (\u. ((complex_pow ((vector_sub z) u)) i))) f') (at u)) ==> (((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div f') (Cx (real_of_num (FACT i))))) (at u)))
T c==> chas_complex_derivative / ccomplex_pow cvector_sub f0 b0 f1 f2 cat f3 chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f0 b0 f1 cCx creal_of_num cFACT f1 ccomplex_div f2 cCx creal_of_num cFACT f1 cat f3
+ |- (((!x. (((\z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) x) ==> F)) ==> ((?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) = ((?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))
T c= c==> ! c==> * / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!z. (!u. (!n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))))) ==> ((\z. (!u. (!n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))))) z)) = ((\z. (!u. (!n. (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))))) z))
T c= c==> ! ! ! c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 * / ! ! c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 f1 * / ! ! c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 f1
+ |- ((\c. (((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c))) = ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) c)
T * / c= ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 b0 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 b0 f2
- |- (((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) ==> ((\m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) m)) = ((\m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) m))
T c= c==> ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 * / ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0 * / ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 f0
- |- ((\n. (((BIT1 m) < (BIT1 n)) = (m < n))) n)
T * / c= c< cBIT1 f0 cBIT1 b0 c< f0 b0 f1
- |- (((!m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) ==> ((\m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) m)) = ((\m. (!n. (((BIT0 n) >= (BIT0 m)) = (n >= m)))) m))
T c= c==> ! ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 * / ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 f0 * / ! c= c>= cBIT0 b1 cBIT0 b0 c>= b1 b0 f0
- |- ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))))))))
T c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
- |- ((\b. (convex (open_segment (a , b)))) b)
T * / cconvex * part copen_segment c, f0 b0 f1
+ |- ((\m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) m)
T * / ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 f0
+ |- ((real_inv (real_of_num n)) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num n)))
T c= creal_inv creal_of_num f0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((!n. (((NUMERAL m) < (NUMERAL n)) = (m < n))) ==> ((\n. (((NUMERAL m) < (NUMERAL n)) = (m < n))) n)) = ((\n. (((NUMERAL m) < (NUMERAL n)) = (m < n))) n))
T c= c==> ! c= c< cNUMERAL f0 cNUMERAL b0 c< f0 b0 * / c= c< cNUMERAL f0 cNUMERAL b0 c< f0 b0 f1 * / c= c< cNUMERAL f0 cNUMERAL b0 c< f0 b0 f1
+ ((real_of_num (m * n)) = ((real_mul (real_of_num m)) (real_of_num n))) |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c==> c= creal_of_num c* f0 f1 creal_mul creal_of_num f0 creal_of_num f1 c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (y = x))) ==> ((y = x) = q')) ==> ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) ==> (y = x)) = (((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (y = x))) ==> q')))
T c==> c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= f2 f0 c= c= f2 f0 f3 c= c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b0 cNUMERAL cBIT1 c_0 f2 * / c+ b0 cNUMERAL cBIT1 c_0 f0 c= f2 f0 c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= f2 f0 f3
+ |- ((p ==> F) ==> (((~ q) = p) ==> q))
T c==> c==> f0 cF c==> c= c~ f1 f0 f1
+ |- ((\f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))) f')
T * / ! ! c==> c/\ chas_complex_derivative f0 b0 cat b2 chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / ccomplex_mul * f0 b3 * b1 b3 cvector_add ccomplex_mul * f0 b2 f1 ccomplex_mul b0 * b1 b2 cat b2 f2
- |- (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n)))
T c= c+ cBIT1 f0 cBIT0 f1 cBIT1 c+ f0 f1
+ |- (((((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (Cx (real_of_num (FACT i))))) (at u)) ==> (((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i))))) (at u))) = (((has_complex_derivative (\u. ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i))))) (at u)))
T c= c==> chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f0 b0 f1 cCx creal_of_num cFACT f1 ccomplex_div ccomplex_mul cCx creal_of_num f1 ccomplex_mul ccomplex_pow cvector_sub f0 f2 c- f1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f1 cat f2 chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f0 b0 f1 cCx creal_of_num cFACT f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f1 ccomplex_pow cvector_sub f0 f2 c- f1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f1 cat f2 chas_complex_derivative / ccomplex_div ccomplex_pow cvector_sub f0 b0 f1 cCx creal_of_num cFACT f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num f1 ccomplex_pow cvector_sub f0 f2 c- f1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT f1 cat f2
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 ! c==> c/\ chas_complex_derivative f0 f1 cat b0 chas_complex_derivative f2 f3 cat b0 chas_complex_derivative / ccomplex_mul * f0 b1 * f2 b1 cvector_add ccomplex_mul * f0 b0 f3 ccomplex_mul f1 * f2 b0 cat b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((vsum ((IMAGE f) s)) g) = ((vsum s) (g o f))) |- (((vsum s) (g o f)) = ((vsum ((IMAGE f) s)) g))
T c==> c= cvsum * * part cIMAGE f0 f1 f2 cvsum f1 * * part co f2 f0 c= cvsum f1 * * part co f2 f0 cvsum * * part cIMAGE f0 f1 f2
- |- ((\n. (((BIT0 n) + _0) = (BIT0 n))) n)
T * / c= c+ cBIT0 b0 c_0 cBIT0 b0 f0
+ |- ((\f. (!g'. (!f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) f)
T * / ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b4 chas_complex_derivative b3 b1 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b3 b5 cvector_add ccomplex_mul * b0 b4 b1 ccomplex_mul b2 * b3 b4 cat b4 f0
- |- (((!n. ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))) ==> ((\n. ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))) n)) = ((\n. ((PRE (NUMERAL n)) = (NUMERAL (PRE n)))) n))
T c= c==> ! c= cPRE cNUMERAL b0 cNUMERAL cPRE b0 * / c= cPRE cNUMERAL b0 cNUMERAL cPRE b0 f0 * / c= cPRE cNUMERAL b0 cNUMERAL cPRE b0 f0
+ |- (T = (FINITE (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)))
T c= cT cFINITE * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0
+ |- (!i. (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))) = ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))))
T c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c= ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0
- |- (((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) ==> ((\m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) m)) = ((\m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) m))
T c= c==> ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 * / ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 f0 * / ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 f0
- |- (((!n. ((_0 < (BIT1 n)) = T)) ==> ((\n. ((_0 < (BIT1 n)) = T)) n)) = ((\n. ((_0 < (BIT1 n)) = T)) n))
T c= c==> ! c= c< c_0 cBIT1 b0 cT * / c= c< c_0 cBIT1 b0 cT f0 * / c= c< c_0 cBIT1 b0 cT f0
- |- ((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) >= (BIT1 m)) = (n >= m)))))
T c/\ ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c>= cBIT1 b1 cBIT1 b0 c>= b1 b0
+ (!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) |- ((\f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) f)
T c==> ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 * / ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 f1
- |- ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))
T c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
- (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0
+ |- ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) = p') ==> ((p' ==> ((y = x) = q')) ==> ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) ==> (y = x)) = (p' ==> q'))))
T c==> c= c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b0 cNUMERAL cBIT1 c_0 f2 * / c+ b0 cNUMERAL cBIT1 c_0 f0 f3 c==> c==> f3 c= c= f2 f0 f4 c= c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b0 cNUMERAL cBIT1 c_0 f2 * / c+ b0 cNUMERAL cBIT1 c_0 f0 c= f2 f0 c==> f3 f4
+ |- (((!g. ((f o g) = (\x. (f (g x))))) ==> ((\g. ((f o g) = (\x. (f (g x))))) g)) = ((\g. ((f o g) = (\x. (f (g x))))) g))
T c= c==> ! c= * * part co f0 b0 / * f0 * b0 b1 * / c= * * part co f0 b0 / * f0 * b0 b1 f1 * / c= * * part co f0 b0 / * f0 * b0 b1 f1
- |- ((\m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))) m)
T * / ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1 f0
+ ((SUC m) = (m + (NUMERAL (BIT1 _0)))) |- ((m + (NUMERAL (BIT1 _0))) = (SUC m))
T c==> c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0 c= c+ f0 cNUMERAL cBIT1 c_0 cSUC f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) ==> ((\m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) m)) = ((\m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) m))
T c= c==> ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 * / ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 f0 * / ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_add ((f (NUMERAL _0)) $ i)) (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) = ((real_add ((real_sub ((f (NUMERAL _0)) $ i)) ((f (SUC n)) $ i))) ((real_add (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) ((f (SUC n)) $ i)))) = (((lambdai. ((real_add ((f (NUMERAL _0)) $ i)) (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_sub ((f (NUMERAL _0)) $ i)) ((f (SUC n)) $ i))) $ i)) ((lambdai. ((real_add (((vsum ((NUMERAL (BIT1 _0)) .. n)) f) $ i)) ((f (SUC n)) $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_add c$ * f1 cNUMERAL c_0 f0 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f1 f0 creal_add creal_sub c$ * f1 cNUMERAL c_0 f0 c$ * f1 cSUC f2 f0 creal_add c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f1 f0 c$ * f1 cSUC f2 f0 c= c$ clambda / creal_add c$ * f1 cNUMERAL c_0 b0 c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f1 b0 f0 c$ clambda / creal_add c$ clambda / creal_sub c$ * f1 cNUMERAL c_0 b1 c$ * f1 cSUC f2 b1 b0 c$ clambda / creal_add c$ cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f1 b1 c$ * f1 cSUC f2 b1 b0 f0
- |- ((\n. (((NUMERAL n) > (NUMERAL m)) = (n > m))) n)
T * / c= c> cNUMERAL b0 cNUMERAL f0 c> b0 f0 f1
- |- (((!n. (((BIT1 m) <= (BIT0 n)) = (m < n))) ==> ((\n. (((BIT1 m) <= (BIT0 n)) = (m < n))) n)) = ((\n. (((BIT1 m) <= (BIT0 n)) = (m < n))) n))
T c= c==> ! c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 * / c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 f1 * / c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 f1
- |- ((\n. ((EVEN (NUMERAL n)) = (EVEN n))) n)
T * / c= cEVEN cNUMERAL b0 cEVEN b0 f0
+ |- (!f. (((vsum ((NUMERAL _0) .. n)) f) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (n + (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. n)) (f o (\i. (i + (NUMERAL (BIT1 _0)))))))))
T c= cvsum * * part c.. cNUMERAL c_0 f0 f1 cvector_add cvector_sub * f1 cNUMERAL c_0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f0 * * part co f1 / c+ b0 cNUMERAL cBIT1 c_0
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((\n. ((_0 * (BIT0 n)) = _0)) n)
T * / c= c* c_0 cBIT0 b0 c_0 f0
+ |- (((vsum ((NUMERAL _0) .. n)) f) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (n + (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. n)) (\i. (f (i + (NUMERAL (BIT1 _0))))))))
T c= cvsum * * part c.. cNUMERAL c_0 f0 f1 cvector_add cvector_sub * f1 cNUMERAL c_0 * f1 c+ f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f0 / * f1 c+ b0 cNUMERAL cBIT1 c_0
- (!x. ((P x) ==> (Q x))) |- (((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))) ==> ((?x. (P x)) ==> (?x. (Q x))))
T c==> ! c==> * f0 b0 * f1 b0 c==> c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0 c==> c? / * f0 b0 c? / * f1 b0
+ |- (((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_mul ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))
T c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num f3 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num f3 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3
- (!x. ((P x) ==> (Q x))), ((!x. ((P x) ==> (Q x))) ==> ((?x. (P x)) ==> (?x. (Q x)))) |- ((!x. ((P x) ==> (Q x))) /\ ((?x. (P x)) ==> (?x. (Q x))))
T c==> ! c==> * f0 b0 * f1 b0 c==> c==> ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0 c/\ ! c==> * f0 b0 * f1 b0 c==> c? / * f0 b0 c? / * f1 b0
+ |- ((\s. (((FINITE s) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f y) = (f x)))) ==> (y = x))))) ==> (((vsum s) (g o f)) = ((vsum ((IMAGE f) s)) g)))) s)
T * / c==> c/\ cFINITE b0 ! ! c==> c/\ cIN b1 b0 c/\ cIN b2 b0 c= * f0 b2 * f0 b1 c= b2 b1 c= cvsum b0 * * part co f1 f0 cvsum * * part cIMAGE f0 b0 f1 f2
+ |- ((((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))) = ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = T)
T c= c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c= ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0 cT
- |- ((PRE (BIT1 n)) = (BIT0 n))
T c= cPRE cBIT1 f0 cBIT0 f0
+ |- (((NUMERAL (BIT1 _0)) <= (SUC n)) = T)
T c= c<= cNUMERAL cBIT1 c_0 cSUC f0 cT
+ (!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) |- (((!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net)))) ==> ((\net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net)))) net)) = ((\net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net)))) net))
T c==> ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 c= c==> ! ! c==> c/\ cFINITE b1 ! c==> cIN b2 b1 chas_complex_derivative * f1 b2 * f0 b2 b0 chas_complex_derivative / cvsum b1 / * * f1 b3 b2 cvsum b1 f0 b0 * / ! c==> c/\ cFINITE b1 ! c==> cIN b2 b1 chas_complex_derivative * f1 b2 * f0 b2 b0 chas_complex_derivative / cvsum b1 / * * f1 b3 b2 cvsum b1 f0 b0 f2 * / ! c==> c/\ cFINITE b1 ! c==> cIN b2 b1 chas_complex_derivative * f1 b2 * f0 b2 b0 chas_complex_derivative / cvsum b1 / * * f1 b3 b2 cvsum b1 f0 b0 f2
- |- (((~ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) = F)) = ((((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) = F))
T c= c==> c~ c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 c= c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c= c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((BIT0 n) > _0) = (n > _0))
T c= c> cBIT0 f0 c_0 c> f0 c_0
- |- ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum ((NUMERAL _0) .. n)) g)))
T c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 f0 c= ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 * f4 b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 f4
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) |- ((\x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x)))) x)
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 * / c==> c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c<= f4 f2 chas_complex_derivative * f3 f4 * * f3 c+ f4 cNUMERAL cBIT1 c_0 b0 cat b0 f5
+ |- (((!z. ((((real_sub x) y) = z) = (x = ((real_add y) z)))) ==> ((\z. ((((real_sub x) y) = z) = (x = ((real_add y) z)))) z)) = ((\z. ((((real_sub x) y) = z) = (x = ((real_add y) z)))) z))
T c= c==> ! c= c= creal_sub f0 f1 b0 c= f0 creal_add f1 b0 * / c= c= creal_sub f0 f1 b0 c= f0 creal_add f1 b0 f2 * / c= c= creal_sub f0 f1 b0 c= f0 creal_add f1 b0 f2
+ |- (!p'. (!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3
- |- (((!n. (((BIT0 m) = (BIT1 n)) = F)) ==> ((\n. (((BIT0 m) = (BIT1 n)) = F)) n)) = ((\n. (((BIT0 m) = (BIT1 n)) = F)) n))
T c= c==> ! c= c= cBIT0 f0 cBIT1 b0 cF * / c= c= cBIT0 f0 cBIT1 b0 cF f1 * / c= c= cBIT0 f0 cBIT1 b0 cF f1
- |- ((\g. ((!x. ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> (((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))) = (g x)))) ==> (((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c= ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 f3
- |- (((BIT0 n) < _0) = F)
T c= c< cBIT0 f0 c_0 cF
+ |- (!z. (((\z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) z) ==> F))
T c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ |- (((!g. (!s. (((FINITE s) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f y) = (f x)))) ==> (y = x))))) ==> (((vsum s) (g o f)) = ((vsum ((IMAGE f) s)) g))))) ==> ((\g. (!s. (((FINITE s) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f y) = (f x)))) ==> (y = x))))) ==> (((vsum s) (g o f)) = ((vsum ((IMAGE f) s)) g))))) g)) = ((\g. (!s. (((FINITE s) /\ (!x. (!y. (((x IN s) /\ ((y IN s) /\ ((f y) = (f x)))) ==> (y = x))))) ==> (((vsum s) (g o f)) = ((vsum ((IMAGE f) s)) g))))) g))
T c= c==> ! ! c==> c/\ cFINITE b1 ! ! c==> c/\ cIN b2 b1 c/\ cIN b3 b1 c= * f0 b3 * f0 b2 c= b3 b2 c= cvsum b1 * * part co b0 f0 cvsum * * part cIMAGE f0 b1 b0 * / ! c==> c/\ cFINITE b1 ! ! c==> c/\ cIN b2 b1 c/\ cIN b3 b1 c= * f0 b3 * f0 b2 c= b3 b2 c= cvsum b1 * * part co b0 f0 cvsum * * part cIMAGE f0 b1 b0 f1 * / ! c==> c/\ cFINITE b1 ! ! c==> c/\ cIN b2 b1 c/\ cIN b3 b1 c= * f0 b3 * f0 b2 c= b3 b2 c= cvsum b1 * * part co b0 f0 cvsum * * part cIMAGE f0 b1 b0 f1
- |- (!x. ((x IN ((NUMERAL _0) .. n)) ==> (((vector_add ((complex_mul ((f (SUC x)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))) ((complex_mul ((f (SUC x)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x))))))) = ((vector_add ((complex_mul ((f (SUC x)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))) ((complex_mul ((f (SUC x)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x))))))))))
T c==> cIN f0 * * part c.. cNUMERAL c_0 f1 c= cvector_add ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 cvector_add ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0
+ |- ((\n. (((complex_pow x) (SUC n)) = ((complex_mul x) ((complex_pow x) n)))) n)
T * / c= ccomplex_pow f0 cSUC b0 ccomplex_mul f0 ccomplex_pow f0 b0 f1
+ (((vsum s) (g o f)) = ((vsum ((IMAGE f) s)) g)) |- (((vsum ((IMAGE f) s)) g) = ((vsum s) (g o f)))
T c==> c= cvsum f0 * * part co f1 f2 cvsum * * part cIMAGE f2 f0 f1 c= cvsum * * part cIMAGE f2 f0 f1 cvsum f0 * * part co f1 f2
- |- (((!n. ((BIT0 n) >= _0)) ==> ((\n. ((BIT0 n) >= _0)) n)) = ((\n. ((BIT0 n) >= _0)) n))
T c= c==> ! c>= cBIT0 b0 c_0 * / c>= cBIT0 b0 c_0 f0 * / c>= cBIT0 b0 c_0 f0
+ |- (((complex_mul ((complex_mul x) y)) z) = ((complex_mul x) ((complex_mul y) z)))
T c= ccomplex_mul ccomplex_mul f0 f1 f2 ccomplex_mul f0 ccomplex_mul f1 f2
- |- (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))
T c= cEXP cBIT1 f0 cBIT0 f1 c* cEXP cBIT1 f0 f1 cEXP cBIT1 f0 f1
- |- (~ (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c~ c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 f3 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((~ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) ==> ((((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))) = F)) = ((((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))) = F))
T c= c==> c~ c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c= c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- ((!x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) /\ (!w. (!x. (!y. (!z. ((((vector_add ((complex_mul w) y)) ((complex_mul x) z)) = ((vector_add ((complex_mul w) z)) ((complex_mul x) y))) = ((w = x) \/ (y = z))))))))
T c/\ ! ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 ! ! ! ! c= c= cvector_add ccomplex_mul b0 b2 ccomplex_mul b1 b3 cvector_add ccomplex_mul b0 b3 ccomplex_mul b1 b2 c\/ c= b0 b1 c= b2 b3
- |- ((_0 <= (BIT1 n)) = T)
T c= c<= c_0 cBIT1 f0 cT
+ |- ((\f. (!g. (!m. (!n. (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g))))))) f)
T * / ! ! ! c= cvsum * * part c.. b2 b3 / cvector_add * b0 b4 * b1 b4 cvector_add cvsum * * part c.. b2 b3 b0 cvsum * * part c.. b2 b3 b1 f0
+ |- (((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q')))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3 cT
- (?a. (?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((?a. (?b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg b0 ccomplex_mul b1 ccomplex_mul ccomplex_inv b0 b2 ccomplex_mul cvector_neg ccomplex_mul b0 ccomplex_inv b0 ccomplex_mul b1 b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!x. (!y. (!z. ((((real_sub x) y) = z) = (x = ((real_add y) z)))))) ==> ((\x. (!y. (!z. ((((real_sub x) y) = z) = (x = ((real_add y) z)))))) x)) = ((\x. (!y. (!z. ((((real_sub x) y) = z) = (x = ((real_add y) z)))))) x))
T c= c==> ! ! ! c= c= creal_sub b0 b1 b2 c= b0 creal_add b1 b2 * / ! ! c= c= creal_sub b0 b1 b2 c= b0 creal_add b1 b2 f0 * / ! ! c= c= creal_sub b0 b1 b2 c= b0 creal_add b1 b2 f0
- (((NUMERAL _0) <= i) /\ (i <= n)) |- ((((NUMERAL _0) <= i) /\ (i <= n)) /\ (((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))) = ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c/\ c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c= ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0
- |- ((\n. ((EVEN (BIT1 n)) = F)) n)
T * / c= cEVEN cBIT1 b0 cF f0
+ |- ((((?f. (?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F) ==> (((~ q) = (?f. (?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> q)) = (((~ q) = (?f. (?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> q))
T c= c==> c==> c? / c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c= c~ f0 c? / c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c= c~ f0 c? / c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * b0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
+ ((Cx (real_of_num (NUMERAL _0))) = (vec (NUMERAL _0))) |- ((vec (NUMERAL _0)) = (Cx (real_of_num (NUMERAL _0))))
T c==> c= cCx creal_of_num cNUMERAL c_0 cvec cNUMERAL c_0 c= cvec cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
+ |- ((((~ (!z. (!u. (!i. (((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i))))) = ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i)))))))))) = (?z. (?u. (?i. (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> (!z. (!u. (!i. (((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i))))) = ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i)))))))))) = (!z. (!u. (!i. (((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i))))) = ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))))))
T c= c==> c= c~ ! ! ! c= ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 c? / c? / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 ! ! ! c= ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ! ! ! c= ccomplex_mul ccomplex_mul cCx creal_of_num b2 ccomplex_mul ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b2 ccomplex_pow cvector_sub b0 b1 c- b2 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b2
- |- (((!m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) ==> ((\m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) m)) = ((\m. (!n. (((BIT0 n) >= (BIT1 m)) = (n > m)))) m))
T c= c==> ! ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 * / ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 f0 * / ! c= c>= cBIT0 b1 cBIT1 b0 c> b1 b0 f0
+ |- (((!n. ((FACT (SUC n)) = ((SUC n) * (FACT n)))) ==> ((\n. ((FACT (SUC n)) = ((SUC n) * (FACT n)))) n)) = ((\n. ((FACT (SUC n)) = ((SUC n) * (FACT n)))) n))
T c= c==> ! c= cFACT cSUC b0 c* cSUC b0 cFACT b0 * / c= cFACT cSUC b0 c* cSUC b0 cFACT b0 f0 * / c= cFACT cSUC b0 c* cSUC b0 cFACT b0 f0
+ (((m + p) .. (n + p)) = ((IMAGE (\i. (i + p))) (m .. n))) |- (((IMAGE (\i. (i + p))) (m .. n)) = ((m + p) .. (n + p)))
T c==> c= * * part c.. c+ f0 f1 c+ f2 f1 * * part cIMAGE / c+ b0 f1 * * part c.. f0 f2 c= * * part cIMAGE / c+ b0 f1 * * part c.. f0 f2 * * part c.. c+ f0 f1 c+ f2 f1
- |- (((~ (_0 > (BIT1 n))) ==> ((_0 > (BIT1 n)) = F)) = ((_0 > (BIT1 n)) = F))
T c= c==> c~ c> c_0 cBIT1 f0 c= c> c_0 cBIT1 f0 cF c= c> c_0 cBIT1 f0 cF
- |- (((!n. (((BIT0 m) = (BIT0 n)) = (m = n))) ==> ((\n. (((BIT0 m) = (BIT0 n)) = (m = n))) n)) = ((\n. (((BIT0 m) = (BIT0 n)) = (m = n))) n))
T c= c==> ! c= c= cBIT0 f0 cBIT0 b0 c= f0 b0 * / c= c= cBIT0 f0 cBIT0 b0 c= f0 b0 f1 * / c= c= cBIT0 f0 cBIT0 b0 c= f0 b0 f1
- |- (((BIT0 n) * _0) = _0)
T c= c* cBIT0 f0 c_0 c_0
+ |- ((\x. (((vector_sub x) x) = (Cx (real_of_num (NUMERAL _0))))) x)
T * / c= cvector_sub b0 b0 cCx creal_of_num cNUMERAL c_0 f0
+ |- (((((has_complex_derivative (\u. ((vector_sub z) u))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (at u)) ==> (((has_complex_derivative (\u. ((complex_pow ((vector_sub z) u)) i))) ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (at u))) = (((has_complex_derivative (\u. ((complex_pow ((vector_sub z) u)) i))) ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (at u)))
T c= c==> chas_complex_derivative / cvector_sub f0 b0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cat f1 chas_complex_derivative / ccomplex_pow cvector_sub f0 b0 f2 ccomplex_mul cCx creal_of_num f2 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- f2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cat f1 chas_complex_derivative / ccomplex_pow cvector_sub f0 b0 f2 ccomplex_mul cCx creal_of_num f2 ccomplex_mul ccomplex_pow cvector_sub f0 f1 c- f2 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 cat f1
- |- (~ (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c~ c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 f4 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m))))))
T c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
+ |- (((!x. (((\c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) x) ==> F)) ==> ((?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> F)) = ((?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> F))
T c= c==> ! c==> * / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 b1 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 b0 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 b0 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((\m. (!n. (((BIT0 m) = (BIT1 n)) = F))) m)
T * / ! c= c= cBIT0 b0 cBIT1 b1 cF f0
- |- (((real_ge (real_of_num n)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_num n)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_of_num f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add (f (NUMERAL _0))) ((vsum ((NUMERAL (BIT1 _0)) .. n)) f)) $ i) = (((vector_add ((vector_sub (f (NUMERAL _0))) (f (SUC n)))) ((vector_add ((vsum ((NUMERAL (BIT1 _0)) .. n)) f)) (f (SUC n)))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add * f1 cNUMERAL c_0 cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f1 f0 c$ cvector_add cvector_sub * f1 cNUMERAL c_0 * f1 cSUC f2 cvector_add cvsum * * part c.. cNUMERAL cBIT1 c_0 f2 f1 * f1 cSUC f2 f0
+ |- ((~ ((int_le x) y)) = ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x))
T c= c~ cint_le f0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((x = (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 f1 creal_of_num cNUMERAL c_0
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))), ((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) |- (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) /\ ((((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x)) = T))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> c/\ cIN f4 * part cclosed_segment cCONS c, f0 f1 cNIL c<= f5 f2 c/\ c/\ cIN f4 * part cclosed_segment cCONS c, f0 f1 cNIL c<= f5 f2 c= chas_complex_derivative * f3 f5 * * f3 c+ f5 cNUMERAL cBIT1 c_0 f4 cat f4 cT
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ |- (FINITE (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n))
T cFINITE * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0
- |- (((x IN ((NUMERAL _0) .. n)) ==> (((vector_add ((complex_mul ((f (SUC x)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))) ((complex_mul ((f (SUC x)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x))))))) = ((vector_add ((complex_mul ((f (SUC x)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))) ((complex_mul ((f (SUC x)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x))))))))) = T)
T c= c==> cIN f0 * * part c.. cNUMERAL c_0 f1 c= cvector_add ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 cvector_add ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 cT
+ |- ((int_le (int_of_num (NUMERAL (BIT1 _0)))) ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT1 _0)))))
T cint_le cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0
+ |- (((!n. ((real_of_num (SUC n)) = ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((\n. ((real_of_num (SUC n)) = ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))))) n)) = ((\n. ((real_of_num (SUC n)) = ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))))) n))
T c= c==> ! c= creal_of_num cSUC b0 creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_of_num cSUC b0 creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 f0 * / c= creal_of_num cSUC b0 creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((!g. ((!x. ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> (((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))) = (g x)))) ==> (((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) ==> ((\g. ((!x. ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> (((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))) = (g x)))) ==> (((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) g)) = ((\g. ((!x. ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> (((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))) = (g x)))) ==> (((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))) = ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c= ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 * / c==> ! c==> cIN b1 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c= ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 f3 * / c==> ! c==> cIN b1 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c= ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 f3
+ ((\n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) n) |- (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> * / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((\m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) m)
T * / ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 f0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((\g. ((!x. ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (g x)))) ==> (((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\x. (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))) = ((sum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c= cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 * b0 b1 c= csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 / cRe ccomplex_mul * * f1 b1 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b1 cCx creal_of_num cFACT b1 csum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 f3
+ |- ((\n. (FINITE (m .. n))) n)
T * / cFINITE * * part c.. f0 b0 f1
- |- (_0 >= _0)
T c>= c_0 c_0
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- ((!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) /\ (!f. (!g'. (!f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))))
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 c/\ ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b2 cat b4 chas_complex_derivative b3 b1 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b3 b5 cvector_add ccomplex_mul * b0 b4 b1 ccomplex_mul b2 * b3 b4 cat b4
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))))
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 ! ! ! c==> c/\ chas_complex_derivative f0 f1 cat b2 chas_complex_derivative b0 b1 cat b2 chas_complex_derivative / ccomplex_mul * f0 b3 * b0 b3 cvector_add ccomplex_mul * f0 b2 b1 ccomplex_mul f1 * b0 b2 cat b2
- (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) |- ((?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) /\ F)
T c==> c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((((\z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z) ==> F) = T)
T c= c==> * / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 cF cT
- (!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))), (!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) /\ (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c/\ ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((complex_pow x) (SUC n)) = ((complex_mul x) ((complex_pow x) n)))
T c= ccomplex_pow f0 cSUC f1 ccomplex_mul f0 ccomplex_pow f0 f1
+ (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))) |- ((((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 c/\ c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 cF
+ |- (((!m. (!n. (((m + n) - n) = m))) ==> ((\m. (!n. (((m + n) - n) = m))) m)) = ((\m. (!n. (((m + n) - n) = m))) m))
T c= c==> ! ! c= c- c+ b0 b1 b1 b0 * / ! c= c- c+ b0 b1 b1 b0 f0 * / ! c= c- c+ b0 b1 b1 b0 f0
+ |- ((Re ((f (NUMERAL _0)) z)) = (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))))
T c= cRe * * f0 cNUMERAL c_0 f1 cRe cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f0 b0 f1 ccomplex_div ccomplex_pow cvector_sub f1 f1 b0 cCx creal_of_num cFACT b0
+ (!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) |- ((\net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net)))) net)
T c==> ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 * / ! c==> c/\ cFINITE b1 ! c==> cIN b2 b1 chas_complex_derivative * f1 b2 * f0 b2 b0 chas_complex_derivative / cvsum b1 / * * f1 b3 b2 cvsum b1 f0 b0 f2
+ |- ((((Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))) = ((real_add (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))) ==> ((Re ((f (NUMERAL _0)) z)) = ((real_add (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w)))))) = ((((real_sub (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) = (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w)))) ==> ((Re ((f (NUMERAL _0)) z)) = ((real_add (Re ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) (Re ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w)))))))
T c= c==> c= cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 creal_add cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3 c= cRe * * f1 cNUMERAL c_0 f2 creal_add cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3 c==> c= creal_sub cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_pow cvector_sub f2 f2 b0 cCx creal_of_num cFACT b0 cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3 c= cRe * * f1 cNUMERAL c_0 f2 creal_add cRe cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * * f1 b0 f3 ccomplex_div ccomplex_pow cvector_sub f2 f3 b0 cCx creal_of_num cFACT b0 cRe ccomplex_mul ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f4 ccomplex_div ccomplex_pow cvector_sub f2 f4 f0 cCx creal_of_num cFACT f0 cvector_sub f2 f3
- |- (((BIT1 n) + _0) = (BIT1 n))
T c= c+ cBIT1 f0 c_0 cBIT1 f0
+ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))) |- ((\x. (((real_mul x) ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- |- ((EVEN (NUMERAL n)) = (EVEN n))
T c= cEVEN cNUMERAL f0 cEVEN f0
+ (!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) |- (!net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net)))
T c==> ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 ! c==> c/\ cFINITE f1 ! c==> cIN b1 f1 chas_complex_derivative * f2 b1 * f0 b1 b0 chas_complex_derivative / cvsum f1 / * * f2 b2 b1 cvsum f1 f0 b0
- |- (((!n. ((_0 >= (BIT0 n)) = (_0 >= n))) ==> ((\n. ((_0 >= (BIT0 n)) = (_0 >= n))) n)) = ((\n. ((_0 >= (BIT0 n)) = (_0 >= n))) n))
T c= c==> ! c= c>= c_0 cBIT0 b0 c>= c_0 b0 * / c= c>= c_0 cBIT0 b0 c>= c_0 b0 f0 * / c= c>= c_0 cBIT0 b0 c>= c_0 b0 f0
- |- ((!n. ((PRE (BIT0 n)) = (((COND (n = _0)) _0) (BIT1 (PRE n))))) /\ (!n. ((PRE (BIT1 n)) = (BIT0 n))))
T c/\ ! c= cPRE cBIT0 b0 cCOND c= b0 c_0 c_0 cBIT1 cPRE b0 ! c= cPRE cBIT1 b0 cBIT0 b0
- (((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- ((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) |- (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= x) /\ (x <= n)) /\ ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x))))))))
T c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c/\ c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c= cRe ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0 cRe ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0
- |- ((\n. ((_0 <= (BIT0 n)) = T)) n)
T * / c= c<= c_0 cBIT0 b0 cT f0
- |- (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n))))))))))))))))
T c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
+ |- (((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))
T c= cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!n. ((_0 - (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) - _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) - _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) - (BIT0 n)) = (BIT0 (m - n))))) /\ ((!m. (!n. (((BIT0 m) - (BIT1 n)) = (PRE (BIT0 (m - n)))))) /\ ((!m. (!n. (((BIT1 m) - (BIT0 n)) = (((COND (n <= m)) (BIT1 (m - n))) _0)))) /\ (!m. (!n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))))))))))
T c/\ ! c= c- c_0 cBIT1 b0 c_0 c/\ ! c= c- cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c- cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c- cBIT0 b0 cBIT0 b1 cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT0 b0 cBIT1 b1 cPRE cBIT0 c- b0 b1 c/\ ! ! c= c- cBIT1 b0 cBIT0 b1 cCOND c<= b1 b0 cBIT1 c- b0 b1 c_0 ! ! c= c- cBIT1 b0 cBIT1 b1 cBIT0 c- b0 b1
- |- (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n)))))
T c= c* cBIT1 f0 cBIT0 f1 c+ cBIT0 f1 cBIT0 cBIT0 c* f0 f1
+ |- (((!f. (!g. (!m. (!n. (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g))))))) ==> ((\f. (!g. (!m. (!n. (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g))))))) f)) = ((\f. (!g. (!m. (!n. (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g))))))) f))
T c= c==> ! ! ! ! c= cvsum * * part c.. b2 b3 / cvector_add * b0 b4 * b1 b4 cvector_add cvsum * * part c.. b2 b3 b0 cvsum * * part c.. b2 b3 b1 * / ! ! ! c= cvsum * * part c.. b2 b3 / cvector_add * b0 b4 * b1 b4 cvector_add cvsum * * part c.. b2 b3 b0 cvsum * * part c.. b2 b3 b1 f0 * / ! ! ! c= cvsum * * part c.. b2 b3 / cvector_add * b0 b4 * b1 b4 cvector_add cvsum * * part c.. b2 b3 b0 cvsum * * part c.. b2 b3 b1 f0
+ |- ((!f. (((vsum ((NUMERAL _0) .. n)) f) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (n + (NUMERAL (BIT1 _0)))))) ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. (n + (NUMERAL (BIT1 _0))))) f)))) = (!f. (((vsum ((NUMERAL _0) .. n)) f) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (n + (NUMERAL (BIT1 _0)))))) ((vsum ((IMAGE (\i. (i + (NUMERAL (BIT1 _0))))) ((NUMERAL _0) .. n))) f)))))
T c= ! c= cvsum * * part c.. cNUMERAL c_0 f0 b0 cvector_add cvector_sub * b0 cNUMERAL c_0 * b0 c+ f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c+ f0 cNUMERAL cBIT1 c_0 b0 ! c= cvsum * * part c.. cNUMERAL c_0 f0 b0 cvector_add cvector_sub * b0 cNUMERAL c_0 * b0 c+ f0 cNUMERAL cBIT1 c_0 cvsum * * part cIMAGE / c+ b1 cNUMERAL cBIT1 c_0 * * part c.. cNUMERAL c_0 f0 b0
+ |- (~ ((Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))))
T c~ c= cCx creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- ((\z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))) z)
T * / c= c= cvector_add f0 f1 cvector_add f0 b0 c= f1 b0 f2
- |- ((\g. ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((vector_add ((complex_mul ((f (SUC x)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))) ((complex_mul ((f (SUC x)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x))))))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 f0 c= cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4
- |- (((!m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) ==> ((\m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) m)) = ((\m. (!n. (((NUMERAL m) - (NUMERAL n)) = (NUMERAL (m - n))))) m))
T c= c==> ! ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 * / ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 f0 * / ! c= c- cNUMERAL b0 cNUMERAL b1 cNUMERAL c- b0 b1 f0
- |- ((((has_complex_derivative (\u. (f u))) f') (at x)) ==> ((((has_complex_derivative (\u. (g u))) g') (at x)) ==> (((has_complex_derivative (\u. ((complex_mul (f u)) (g u)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 c==> chas_complex_derivative / * f3 b0 f4 cat f2 chas_complex_derivative / ccomplex_mul * f0 b0 * f3 b0 cvector_add ccomplex_mul * f0 f2 f4 ccomplex_mul f1 * f3 f2 cat f2
- |- ((\n. (((BIT1 m) <= (BIT0 n)) = (m < n))) n)
T * / c= c<= cBIT1 f0 cBIT0 b0 c< f0 b0 f1
+ |- (((!x. (((\z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) x) ==> F)) ==> ((?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F)) = ((?z. (?u. (?n. (?z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 ccomplex_mul * * f0 cSUC b3 b2 ccomplex_mul ccomplex_pow cvector_sub b1 b2 b3 ccomplex_inv cCx creal_of_num cFACT b3 b4 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c? / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 ccomplex_mul * * f0 cSUC b2 b1 ccomplex_mul ccomplex_pow cvector_sub b0 b1 b2 ccomplex_inv cCx creal_of_num cFACT b2 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((\u. (!i. (((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i))))) = ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i)))))))) u)
T * / ! c= ccomplex_mul ccomplex_mul cCx creal_of_num b1 ccomplex_mul ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f0 b0 c- b1 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b1 f1
+ |- ((((\b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) b) ==> F) = T)
T c= c==> * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul b0 ccomplex_mul ccomplex_inv f0 b1 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF cT
- |- (!x. ((x IN (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) ==> ((Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))) = (Re ((complex_mul ((f x) z)) ((complex_div ((complex_pow ((vector_sub z) z)) x)) (Cx (real_of_num (FACT x)))))))))
T c==> cIN f0 * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 c= cRe ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0 cRe ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0
+ |- (((~ ((Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = (((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c~ c= cCx creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cCx creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cCx creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!f. (!net. (!s. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))) ==> (!f. (!s. (!net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net)))))) = (!f. (!s. (!net. (((FINITE s) /\ (!a. ((a IN s) ==> (((has_complex_derivative (f a)) (f' a)) net)))) ==> (((has_complex_derivative (\x. ((vsum s) (\a. ((f a) x))))) ((vsum s) f')) net))))))
T c= c==> ! ! ! c==> c/\ cFINITE b2 ! c==> cIN b3 b2 chas_complex_derivative * b0 b3 * f0 b3 b1 chas_complex_derivative / cvsum b2 / * * b0 b4 b3 cvsum b2 f0 b1 ! ! ! c==> c/\ cFINITE b1 ! c==> cIN b3 b1 chas_complex_derivative * b0 b3 * f0 b3 b2 chas_complex_derivative / cvsum b1 / * * b0 b4 b3 cvsum b1 f0 b2 ! ! ! c==> c/\ cFINITE b1 ! c==> cIN b3 b1 chas_complex_derivative * b0 b3 * f0 b3 b2 chas_complex_derivative / cvsum b1 / * * b0 b4 b3 cvsum b1 f0 b2
+ |- ((((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_mul ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))) = (((vector_add ((vector_sub ((complex_mul ((f (NUMERAL _0)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL _0))))) ((complex_mul ((complex_pow ((vector_sub z) u)) ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul (vector_neg (Cx ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) ((complex_mul (complex_inv (Cx ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))))) (complex_inv (Cx (real_of_num (FACT n)))))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) ((complex_mul (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))) (complex_inv (Cx (real_of_num (FACT i))))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))) = ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))
T c= c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num f3 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num f3 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3 c= cvector_add cvector_sub ccomplex_mul * * f0 cNUMERAL c_0 f1 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul cvector_neg cCx creal_add creal_of_num f3 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_mul ccomplex_inv cCx creal_add creal_of_num f3 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f3 cvsum * * part c.. cNUMERAL c_0 f3 / cvector_add ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul cvector_neg cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_mul ccomplex_inv cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC b0 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f0 cSUC f3 f1 ccomplex_mul ccomplex_pow cvector_sub f2 f1 f3 ccomplex_inv cCx creal_of_num cFACT f3
- |- ((\m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) m)
T * / ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 f0
- |- ((\n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n))))) n)
T * / c= c* cBIT0 f0 cBIT0 b0 cBIT0 cBIT0 c* f0 b0 f1
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) |- ((!u. ((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) (at u)))) /\ ((?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w)))))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w)))))))))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c/\ ! c==> cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cat b0 c==> c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f1 cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f0 cRe ccomplex_mul * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cvector_sub f1 f0 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= cRe * * f3 cNUMERAL c_0 f1 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 f0 ccomplex_div ccomplex_pow cvector_sub f1 f0 b1 cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f2 cCx creal_of_num cFACT f2 cvector_sub f1 f0
- |- ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))
T c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
- (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))), ((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) |- (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 c==> c/\ chas_complex_derivative f0 f1 cat f2 chas_complex_derivative f3 f4 cat f2 chas_complex_derivative / ccomplex_mul * f0 b0 * f3 b0 cvector_add ccomplex_mul * f0 f2 f4 ccomplex_mul f1 * f3 f2 cat f2
- |- ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))
T c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
+ |- (((!m. (!n. (FINITE (m .. n)))) ==> ((\m. (!n. (FINITE (m .. n)))) m)) = ((\m. (!n. (FINITE (m .. n)))) m))
T c= c==> ! ! cFINITE * * part c.. b0 b1 * / ! cFINITE * * part c.. b0 b1 f0 * / ! cFINITE * * part c.. b0 b1 f0
+ |- ((\g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))) g)
T * / ! c==> c/\ chas_complex_derivative f0 f1 cat b1 chas_complex_derivative b0 f2 cat b1 chas_complex_derivative / ccomplex_mul * f0 b2 * b0 b2 cvector_add ccomplex_mul * f0 b1 f2 ccomplex_mul f1 * b0 b1 cat b1 f3
+ |- ((\w. (!z. (((complex_div w) z) = ((complex_mul w) (complex_inv z))))) w)
T * / ! c= ccomplex_div b0 b1 ccomplex_mul b0 ccomplex_inv b1 f0
- |- (((BIT1 n) * _0) = _0)
T c= c* cBIT1 f0 c_0 c_0
+ |- (((!m. (!n. ((real_of_num (m * n)) = ((real_mul (real_of_num m)) (real_of_num n))))) ==> ((\m. (!n. ((real_of_num (m * n)) = ((real_mul (real_of_num m)) (real_of_num n))))) m)) = ((\m. (!n. ((real_of_num (m * n)) = ((real_mul (real_of_num m)) (real_of_num n))))) m))
T c= c==> ! ! c= creal_of_num c* b0 b1 creal_mul creal_of_num b0 creal_of_num b1 * / ! c= creal_of_num c* b0 b1 creal_mul creal_of_num b0 creal_of_num b1 f0 * / ! c= creal_of_num c* b0 b1 creal_mul creal_of_num b0 creal_of_num b1 f0
- |- ((\n. (((BIT1 m) - (BIT1 n)) = (BIT0 (m - n)))) n)
T * / c= c- cBIT1 f0 cBIT1 b0 cBIT0 c- f0 b0 f1
+ |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))) ==> ((\m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))) m)) = ((\m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))) m))
T c= c==> ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1 * / ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1 f0 * / ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1 f0
- |- ((\m. (!n. (((NUMERAL n) >= (NUMERAL m)) = (n >= m)))) m)
T * / ! c= c>= cNUMERAL b1 cNUMERAL b0 c>= b1 b0 f0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((FINITE ((NUMERAL _0) .. n)) /\ (!x. (!y. (((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) ==> (y = x)))))
T c/\ cFINITE * * part c.. cNUMERAL c_0 f0 ! ! c==> c/\ cIN b0 * * part c.. cNUMERAL c_0 f0 c/\ cIN b1 * * part c.. cNUMERAL c_0 f0 c= * / c+ b2 cNUMERAL cBIT1 c_0 b1 * / c+ b2 cNUMERAL cBIT1 c_0 b0 c= b1 b0
+ ((\c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) c) |- (((?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> F) = F)
T c==> * / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 b0 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c= c==> c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 f2 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 f2 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x)) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0
+ |- (((!y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y)))) ==> ((\y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y)))) y)) = ((\y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y)))) y))
T c= c==> ! c= ccomplex_mul cvector_neg f0 b0 cvector_neg ccomplex_mul f0 b0 * / c= ccomplex_mul cvector_neg f0 b0 cvector_neg ccomplex_mul f0 b0 f1 * / c= ccomplex_mul cvector_neg f0 b0 cvector_neg ccomplex_mul f0 b0 f1
+ ((\b. (?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) b) |- (((?c. (?z. (((complex_mul ((vector_sub ((complex_mul (vector_neg a)) ((complex_mul b) ((complex_mul (complex_inv a)) c)))) ((complex_mul (vector_neg ((complex_mul a) (complex_inv a)))) ((complex_mul b) c)))) z) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> F) = F)
T c==> * / c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul b0 ccomplex_mul ccomplex_inv f0 b1 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul b0 b1 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c? / c? / c= ccomplex_mul cvector_sub ccomplex_mul cvector_neg f0 ccomplex_mul f1 ccomplex_mul ccomplex_inv f0 b0 ccomplex_mul cvector_neg ccomplex_mul f0 ccomplex_inv f0 ccomplex_mul f1 b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- (((!n. (!p. (((IMAGE (\i. (i + p))) (m .. n)) = ((m + p) .. (n + p))))) ==> ((\n. (!p. (((IMAGE (\i. (i + p))) (m .. n)) = ((m + p) .. (n + p))))) n)) = ((\n. (!p. (((IMAGE (\i. (i + p))) (m .. n)) = ((m + p) .. (n + p))))) n))
T c= c==> ! ! c= * * part cIMAGE / c+ b2 b1 * * part c.. f0 b0 * * part c.. c+ f0 b1 c+ b0 b1 * / ! c= * * part cIMAGE / c+ b2 b1 * * part c.. f0 b0 * * part c.. c+ f0 b1 c+ b0 b1 f1 * / ! c= * * part cIMAGE / c+ b2 b1 * * part c.. f0 b0 * * part c.. c+ f0 b1 c+ b0 b1 f1
- |- ((\n. ((SUC (BIT0 n)) = (BIT1 n))) n)
T * / c= cSUC cBIT0 b0 cBIT1 b0 f0
- |- (((BIT1 n) > (BIT1 m)) = (n > m))
T c= c> cBIT1 f0 cBIT1 f1 c> f0 f1
- |- ((BIT1 n) >= _0)
T c>= cBIT1 f0 c_0
- (!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))))) |- (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0)))))
T c==> ! ! ! c==> ! c==> c/\ c<= b1 b3 c<= b3 b2 c= * b0 b3 creal_of_num cNUMERAL c_0 c= csum * * part c.. b1 b2 b0 creal_of_num cNUMERAL c_0 ! c==> ! c==> c/\ c<= f0 b1 c<= b1 b0 c= * f1 b1 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 b0 f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))))) = (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))))))
T c= c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 f0 c= cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0
+ |- ((NUMERAL (BIT0 (BIT1 _0))) = ((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- ((\a. (!b. (convex (closed_segment ((CONS (a , b)) NIL))))) a)
T * / ! cconvex * part cclosed_segment cCONS c, b0 b1 cNIL f0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((convex (open_segment (a , b))) = T)
T c= cconvex * part copen_segment c, f0 f1 cT
+ (i <= n) |- ((i <= n) = T)
T c==> c<= f0 f1 c= c<= f0 f1 cT
+ (((real_ge (real_of_int _2014380)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2014380))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- F
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((!x. (!y. (((real_add x) y) = ((real_add y) x)))) ==> ((\x. (!y. (((real_add x) y) = ((real_add y) x)))) x)) = ((\x. (!y. (((real_add x) y) = ((real_add y) x)))) x))
T c= c==> ! ! c= creal_add b0 b1 creal_add b1 b0 * / ! c= creal_add b0 b1 creal_add b1 b0 f0 * / ! c= creal_add b0 b1 creal_add b1 b0 f0
- |- (((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((vector_add ((complex_mul ((f (SUC x)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))) ((complex_mul ((f (SUC x)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x))))))) = ((vector_add ((complex_mul ((f (SUC x)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))) ((complex_mul ((f (SUC x)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) (\x. ((vector_add ((complex_mul ((f (SUC x)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))) ((complex_mul ((f (SUC x)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x))))))))))) = (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) (\x. ((vector_add ((complex_mul ((f (SUC x)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))) ((complex_mul ((f (SUC x)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) x)) (complex_inv (Cx (real_of_num (FACT x)))))))))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 f0 c= cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0 ccomplex_mul * * f1 cSUC b0 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b0 ccomplex_inv cCx creal_of_num cFACT b0
- |- (((!n. (((BIT0 n) >= (BIT1 m)) = (n > m))) ==> ((\n. (((BIT0 n) >= (BIT1 m)) = (n > m))) n)) = ((\n. (((BIT0 n) >= (BIT1 m)) = (n > m))) n))
T c= c==> ! c= c>= cBIT0 b0 cBIT1 f0 c> b0 f0 * / c= c>= cBIT0 b0 cBIT1 f0 c> b0 f0 f1 * / c= c>= cBIT0 b0 cBIT1 f0 c> b0 f0 f1
+ |- ((\p'. (!q'. ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) = p') ==> ((p' ==> ((y = x) = q')) ==> ((((x IN ((NUMERAL _0) .. n)) /\ ((y IN ((NUMERAL _0) .. n)) /\ (((\i. (i + (NUMERAL (BIT1 _0)))) y) = ((\i. (i + (NUMERAL (BIT1 _0)))) x)))) ==> (y = x)) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b2 cNUMERAL cBIT1 c_0 f2 * / c+ b2 cNUMERAL cBIT1 c_0 f0 b0 c==> c==> b0 c= c= f2 f0 b1 c= c==> c/\ cIN f0 * * part c.. cNUMERAL c_0 f1 c/\ cIN f2 * * part c.. cNUMERAL c_0 f1 c= * / c+ b2 cNUMERAL cBIT1 c_0 f2 * / c+ b2 cNUMERAL cBIT1 c_0 f0 c= f2 f0 c==> b0 b1 f3
- |- ((\m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) m)
T * / ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 f0
+ |- (((((NUMERAL (BIT1 _0)) <= (SUC i)) /\ ((SUC i) <= n)) ==> ((Re ((complex_mul ((f (SUC i)) z)) ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL _0)))) ((complex_pow (Cx (real_of_num (NUMERAL _0)))) i))) (complex_inv (Cx (real_of_num (FACT (SUC i)))))))) = (real_of_num (NUMERAL _0)))) = ((((NUMERAL (BIT1 _0)) <= (SUC i)) /\ ((SUC i) <= n)) ==> ((Re ((complex_mul ((f (SUC i)) z)) ((complex_div ((complex_pow ((vector_sub z) z)) (SUC i))) (Cx (real_of_num (FACT (SUC i))))))) = (real_of_num (NUMERAL _0)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 cSUC f0 c<= cSUC f0 f1 c= cRe ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL c_0 ccomplex_pow cCx creal_of_num cNUMERAL c_0 f0 ccomplex_inv cCx creal_of_num cFACT cSUC f0 creal_of_num cNUMERAL c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 cSUC f0 c<= cSUC f0 f1 c= cRe ccomplex_mul * * f2 cSUC f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 cSUC f0 cCx creal_of_num cFACT cSUC f0 creal_of_num cNUMERAL c_0
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- ((!g'. (!f'. (!g. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))))) = T)
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 c= ! ! ! ! c==> c/\ chas_complex_derivative f0 b1 cat b3 chas_complex_derivative b2 b0 cat b3 chas_complex_derivative / ccomplex_mul * f0 b4 * b2 b4 cvector_add ccomplex_mul * f0 b3 b0 ccomplex_mul b1 * b2 b3 cat b3 cT
+ |- (((!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ==> ((\z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) z)) = ((\z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) z))
T c= c==> ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 * / c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 * / c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((\n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n)))) n)
T * / c= c+ cBIT0 f0 cBIT1 b0 cBIT1 c+ f0 b0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\x. (!y. (((complex_mul x) (vector_neg y)) = (vector_neg ((complex_mul x) y))))) x)
T * / ! c= ccomplex_mul b0 cvector_neg b1 cvector_neg ccomplex_mul b0 b1 f0
- |- ((\n. (((BIT0 n) <= _0) = (n <= _0))) n)
T * / c= c<= cBIT0 b0 c_0 c<= b0 c_0 f0
+ (!f. (!f'. (!g. (!g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x)))))))) |- ((\g'. (!x. (((((has_complex_derivative f) f') (at x)) /\ (((has_complex_derivative g) g') (at x))) ==> (((has_complex_derivative (\x. ((complex_mul (f x)) (g x)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))) g')
T c==> ! ! ! ! ! c==> c/\ chas_complex_derivative b0 b1 cat b4 chas_complex_derivative b2 b3 cat b4 chas_complex_derivative / ccomplex_mul * b0 b5 * b2 b5 cvector_add ccomplex_mul * b0 b4 b3 ccomplex_mul b1 * b2 b4 cat b4 * / ! c==> c/\ chas_complex_derivative f0 f1 cat b1 chas_complex_derivative f2 b0 cat b1 chas_complex_derivative / ccomplex_mul * f0 b2 * f2 b2 cvector_add ccomplex_mul * f0 b1 b0 ccomplex_mul f1 * f2 b1 cat b1 f3
+ |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((\n. (((BIT0 m) = (BIT1 n)) = F)) n)
T * / c= c= cBIT0 f0 cBIT1 b0 cF f1
- |- ((\m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))) m)
T * / ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1 f0
- |- (((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))) = ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))) = T)
T c= c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c= ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f4 f3 f0 cCx creal_of_num cFACT f0 cT
+ |- (((!x. (!y. (((Cx x) = (Cx y)) = (x = y)))) ==> ((\x. (!y. (((Cx x) = (Cx y)) = (x = y)))) x)) = ((\x. (!y. (((Cx x) = (Cx y)) = (x = y)))) x))
T c= c==> ! ! c= c= cCx b0 cCx b1 c= b0 b1 * / ! c= c= cCx b0 cCx b1 c= b0 b1 f0 * / ! c= c= cCx b0 cCx b1 c= b0 b1 f0
- |- ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n))))))))))
T c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
- |- ((!n. (((BIT0 n) > _0) = (n > _0))) /\ ((!n. ((BIT1 n) > _0)) /\ ((!m. (!n. (((BIT0 n) > (BIT0 m)) = (n > m)))) /\ ((!m. (!n. (((BIT1 n) > (BIT0 m)) = (n >= m)))) /\ ((!m. (!n. (((BIT0 n) > (BIT1 m)) = (n > m)))) /\ (!m. (!n. (((BIT1 n) > (BIT1 m)) = (n > m)))))))))
T c/\ ! c= c> cBIT0 b0 c_0 c> b0 c_0 c/\ ! c> cBIT1 b0 c_0 c/\ ! ! c= c> cBIT0 b1 cBIT0 b0 c> b1 b0 c/\ ! ! c= c> cBIT1 b1 cBIT0 b0 c>= b1 b0 c/\ ! ! c= c> cBIT0 b1 cBIT1 b0 c> b1 b0 ! ! c= c> cBIT1 b1 cBIT1 b0 c> b1 b0
+ |- ((Re ((f (NUMERAL _0)) z)) = ((real_add (Re ((f (NUMERAL _0)) z))) (Re ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))))))))
T c= cRe * * f0 cNUMERAL c_0 f1 creal_add cRe * * f0 cNUMERAL c_0 f1 cRe cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 / ccomplex_mul * * f0 b0 f1 ccomplex_div ccomplex_pow cvector_sub f1 f1 b0 cCx creal_of_num cFACT b0
+ |- ((((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 cF
- |- ((\n. (((BIT0 n) >= (BIT1 m)) = (n > m))) n)
T * / c= c>= cBIT0 b0 cBIT1 f0 c> b0 f0 f1
+ (~ (((Re x) = (real_of_num (NUMERAL _0))) ==> (y = ((real_add y) (Re x))))) |- ((((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x))) (real_of_num (NUMERAL _0)))) \/ (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))))
T c==> c~ c==> c= cRe f0 creal_of_num cNUMERAL c_0 c= f1 creal_add f1 cRe f0 c\/ c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0
+ |- (((complex_pow x) (NUMERAL _0)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c= ccomplex_pow f0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!f. (((vector_add (f (NUMERAL _0))) ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. n)) f)) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (n + (NUMERAL (BIT1 _0)))))) ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. (n + (NUMERAL (BIT1 _0))))) f)))) = (!f. (((vsum ((NUMERAL _0) .. n)) f) = ((vector_add ((vector_sub (f (NUMERAL _0))) (f (n + (NUMERAL (BIT1 _0)))))) ((vsum (((NUMERAL _0) + (NUMERAL (BIT1 _0))) .. (n + (NUMERAL (BIT1 _0))))) f)))))
T c= ! c= cvector_add * b0 cNUMERAL c_0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 b0 cvector_add cvector_sub * b0 cNUMERAL c_0 * b0 c+ f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c+ f0 cNUMERAL cBIT1 c_0 b0 ! c= cvsum * * part c.. cNUMERAL c_0 f0 b0 cvector_add cvector_sub * b0 cNUMERAL c_0 * b0 c+ f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c+ f0 cNUMERAL cBIT1 c_0 b0
+ ((\z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z') |- (((\z'. (((complex_mul ((vector_sub ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (vector_neg ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n))))))))) ((complex_mul ((f (SUC n)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) n)) (complex_inv (Cx (real_of_num (FACT n)))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z') /\ F)
T c==> * / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f4 c/\ * / c= ccomplex_mul cvector_sub cvector_sub cCx creal_of_num cNUMERAL c_0 cvector_neg ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 ccomplex_mul * * f0 cSUC f1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 f1 ccomplex_inv cCx creal_of_num cFACT f1 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f4 cF
+ |- ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = ((vsum ((NUMERAL _0) .. n)) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 f0 c= cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b1 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b1 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num b1 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num b1 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 ccomplex_mul * * f1 cSUC b1 f2 ccomplex_mul ccomplex_pow cvector_sub f3 f2 b1 ccomplex_inv cCx creal_of_num cFACT b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f4
+ |- (((vector_add ((vector_add ((vector_sub ((\i. ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) (NUMERAL _0))) ((\i. ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) (n + (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((\i. ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) (i + (NUMERAL (BIT1 _0)))))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n))))))
T c= cvector_add cvector_add cvector_sub * / ccomplex_mul * * f0 b0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f1 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 cNUMERAL c_0 * / ccomplex_mul * * f0 b0 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f2 f1 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 c+ f3 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f3 / * / ccomplex_mul * * f0 b1 f1 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b1 ccomplex_pow cvector_sub f2 f1 c- b1 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b1 c+ b0 cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f0 c+ b0 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f0 c+ f3 cNUMERAL cBIT1 c_0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 f3 cCx creal_of_num cFACT f3
+ |- ((\g. (!m. (!n. (((vsum (m .. n)) (\i. ((vector_add (f i)) (g i)))) = ((vector_add ((vsum (m .. n)) f)) ((vsum (m .. n)) g)))))) g)
T * / ! ! c= cvsum * * part c.. b1 b2 / cvector_add * f0 b3 * b0 b3 cvector_add cvsum * * part c.. b1 b2 f0 cvsum * * part c.. b1 b2 b0 f1
+ |- ((((has_complex_derivative (\u. (f u))) f') (at x)) ==> (((has_complex_derivative (\u. ((complex_pow (f u)) n))) ((complex_mul (Cx (real_of_num n))) ((complex_mul ((complex_pow (f x)) (n - (NUMERAL (BIT1 _0))))) f'))) (at x)))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 chas_complex_derivative / ccomplex_pow * f0 b0 f3 ccomplex_mul cCx creal_of_num f3 ccomplex_mul ccomplex_pow * f0 f2 c- f3 cNUMERAL cBIT1 c_0 f1 cat f2
+ |- (((!z. (((complex_div z) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = z)) ==> ((\z. (((complex_div z) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = z)) z)) = ((\z. (((complex_div z) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = z)) z))
T c= c==> ! c= ccomplex_div b0 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 * / c= ccomplex_div b0 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 f0 * / c= ccomplex_div b0 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 f0
+ (((Re x) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))) |- (((real_gt (Re x)) (real_of_num (NUMERAL _0))) = ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Re x)) = (real_of_num (NUMERAL _0))) /\ ((real_gt (Re x)) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0 c= creal_gt cRe f0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cRe f0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0
+ (!i. (!x. (((x IN (closed_segment ((CONS (w , z)) NIL))) /\ (i <= n)) ==> (((has_complex_derivative (f i)) ((f (i + (NUMERAL (BIT1 _0)))) x)) (at x))))) |- (((!u. ((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (((has_complex_derivative (\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i))))))))) ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) (at u)))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w))))))) ==> (?u. ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))))))
T c==> ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c<= b0 f2 chas_complex_derivative * f3 b0 * * f3 c+ b0 cNUMERAL cBIT1 c_0 b1 cat b1 c==> c==> ! c==> cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL chas_complex_derivative / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cat b0 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f1 cRe * / cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b2 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 b2 cCx creal_of_num cFACT b2 f0 cRe ccomplex_mul * / ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b1 ccomplex_div ccomplex_pow cvector_sub f1 b1 f2 cCx creal_of_num cFACT f2 b0 cvector_sub f1 f0 c? / c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c= cRe * * f3 cNUMERAL c_0 f1 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f2 / ccomplex_mul * * f3 b1 f0 ccomplex_div ccomplex_pow cvector_sub f1 f0 b1 cCx creal_of_num cFACT b1 ccomplex_mul ccomplex_mul * * f3 c+ f2 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f1 b0 f2 cCx creal_of_num cFACT f2 cvector_sub f1 f0
+ |- (~ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))))
T c~ c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((COND T) t1) t2) = t1)
T c= cCOND cT f0 f1 f0
+ |- (((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg ((complex_mul (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0)))))) (complex_inv (Cx ((real_add (real_of_num i)) (real_of_num (NUMERAL (BIT1 _0))))))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))) = ((vector_add ((complex_mul ((f (SUC i)) u)) ((complex_mul (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i)))))))) ((complex_mul ((f (SUC i)) u)) ((complex_mul ((complex_pow ((vector_sub z) u)) i)) (complex_inv (Cx (real_of_num (FACT i))))))))) = T)
T c= c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c= cvector_add ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul cvector_neg ccomplex_mul cCx creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 cvector_add ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul * * f2 cSUC f0 f3 ccomplex_mul ccomplex_pow cvector_sub f4 f3 f0 ccomplex_inv cCx creal_of_num cFACT f0 cT
+ ((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) |- (((((NUMERAL _0) + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) /\ (((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i))))) = ((complex_mul ((f i) z)) ((complex_div ((complex_pow ((vector_sub z) z)) i)) (Cx (real_of_num (FACT i)))))))
T c==> c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c/\ c/\ c<= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c<= f0 f1 c= ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0 ccomplex_mul * * f2 f0 f3 ccomplex_div ccomplex_pow cvector_sub f3 f3 f0 cCx creal_of_num cFACT f0
+ (((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0))) |- (!x. (((real_mul x) ((real_add (real_of_num n)) (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0))))
T c==> c= creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((((u IN (closed_segment ((CONS (w , z)) NIL))) ==> (u IN (closed_segment ((CONS (w , z)) NIL)))) /\ ((((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w)))) ==> ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))))) ==> (((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w))))) ==> ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w)))))))) = (((u IN (closed_segment ((CONS (w , z)) NIL))) /\ (((real_sub (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) z))) (Re ((\w. ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) w))) = (Re ((complex_mul ((\w. ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) w)) ((complex_div ((complex_pow ((vector_sub z) w)) n)) (Cx (real_of_num (FACT n)))))) u)) ((vector_sub z) w))))) ==> ((u IN (closed_segment ((CONS (w , z)) NIL))) /\ ((Re ((f (NUMERAL _0)) z)) = (Re ((vector_add ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul ((f i) w)) ((complex_div ((complex_pow ((vector_sub z) w)) i)) (Cx (real_of_num (FACT i)))))))) ((complex_mul ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n)))))) ((vector_sub z) w))))))))
T c= c==> c/\ c==> cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c==> c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f4 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 f2 cRe * / cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f4 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 f1 cRe ccomplex_mul * / ccomplex_mul * * f4 c+ f3 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 f3 cCx creal_of_num cFACT f3 f0 cvector_sub f2 f1 c= cRe * * f4 cNUMERAL c_0 f2 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f4 b0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul * * f4 c+ f3 cNUMERAL cBIT1 c_0 f0 ccomplex_div ccomplex_pow cvector_sub f2 f0 f3 cCx creal_of_num cFACT f3 cvector_sub f2 f1 c==> c/\ cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f4 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 f2 cRe * / cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f4 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 f1 cRe ccomplex_mul * / ccomplex_mul * * f4 c+ f3 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 f3 cCx creal_of_num cFACT f3 f0 cvector_sub f2 f1 c/\ cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c= cRe * * f4 cNUMERAL c_0 f2 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f4 b0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul * * f4 c+ f3 cNUMERAL cBIT1 c_0 f0 ccomplex_div ccomplex_pow cvector_sub f2 f0 f3 cCx creal_of_num cFACT f3 cvector_sub f2 f1 c==> c/\ cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c= creal_sub cRe * / cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f4 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 f2 cRe * / cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f4 b1 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 b1 cCx creal_of_num cFACT b1 f1 cRe ccomplex_mul * / ccomplex_mul * * f4 c+ f3 cNUMERAL cBIT1 c_0 b0 ccomplex_div ccomplex_pow cvector_sub f2 b0 f3 cCx creal_of_num cFACT f3 f0 cvector_sub f2 f1 c/\ cIN f0 * part cclosed_segment cCONS c, f1 f2 cNIL c= cRe * * f4 cNUMERAL c_0 f2 cRe cvector_add cvsum * * part c.. cNUMERAL c_0 f3 / ccomplex_mul * * f4 b0 f1 ccomplex_div ccomplex_pow cvector_sub f2 f1 b0 cCx creal_of_num cFACT b0 ccomplex_mul ccomplex_mul * * f4 c+ f3 cNUMERAL cBIT1 c_0 f0 ccomplex_div ccomplex_pow cvector_sub f2 f0 f3 cCx creal_of_num cFACT f3 cvector_sub f2 f1
+ |- (((vsum ((NUMERAL _0) .. n)) (\i. ((vector_add ((complex_mul ((f i) u)) ((complex_div ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (FACT i)))))) ((complex_mul ((f (i + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) i)) (Cx (real_of_num (FACT i)))))))) = ((complex_mul ((f (n + (NUMERAL (BIT1 _0)))) u)) ((complex_div ((complex_pow ((vector_sub z) u)) n)) (Cx (real_of_num (FACT n))))))
T c= cvsum * * part c.. cNUMERAL c_0 f0 / cvector_add ccomplex_mul * * f1 b0 f2 ccomplex_div ccomplex_mul cvector_neg cCx creal_of_num b0 ccomplex_pow cvector_sub f3 f2 c- b0 cNUMERAL cBIT1 c_0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ b0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 b0 cCx creal_of_num cFACT b0 ccomplex_mul * * f1 c+ f0 cNUMERAL cBIT1 c_0 f2 ccomplex_div ccomplex_pow cvector_sub f3 f2 f0 cCx creal_of_num cFACT f0
+ ((\z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) z') |- (((((complex_mul ((vector_sub ((complex_mul ((complex_mul (Cx (real_of_num i))) ((complex_mul ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0))))) ((vector_sub (Cx (real_of_num (NUMERAL _0)))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))))) (complex_inv (Cx (real_of_num (FACT i)))))) ((complex_mul ((complex_mul (vector_neg (Cx (real_of_num i)))) ((complex_pow ((vector_sub z) u)) (i - (NUMERAL (BIT1 _0)))))) (complex_inv (Cx (real_of_num (FACT i))))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) ==> F) = F)
T c==> * / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f3 c= c==> c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul cCx creal_of_num f0 ccomplex_mul ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 cvector_sub cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 ccomplex_mul ccomplex_mul cvector_neg cCx creal_of_num f0 ccomplex_pow cvector_sub f1 f2 c- f0 cNUMERAL cBIT1 c_0 ccomplex_inv cCx creal_of_num cFACT f0 f3 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
