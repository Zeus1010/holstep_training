N Collect_geom2.ZJEWPAP
C |- (!v1. (!v2. (!v3. (!v4. ((LET (\s. (LET_END ((((CARD s) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt s))) ==> ((real_le (radV (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) (radV s)))))) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T cLET / cLET_END c==> c/\ c= cCARD b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt b0 creal_le cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cradV b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D RIGHT_FORALL_OR_THM
A |- (!P. (!Q. ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
D RIGHT_OR_FORALL_THM
A |- (!P. (!Q. ((P \/ (!x. (Q x))) = (!x. (P \/ (Q x))))))
T c= c\/ f0 ! * f1 b0 ! c\/ f0 * f1 b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D real_div
A |- (!x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y)))))
T c= creal_div f0 f1 creal_mul f0 creal_inv f1
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_EQ_ADD_LCANCEL
A |- (!x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))))
T c= c= creal_add f0 f1 creal_add f0 f2 c= f1 f2
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D Real_ext.REAL_SV_LMUL_0
A |- (!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))))
T c= creal_mul creal_of_num cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_MUL_RINV
A |- (!x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul x) (real_inv x)) = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0
D REAL_LE_MUL_EQ
A |- ((!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) x) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) y))))) /\ (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) y) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) x))))))
T c/\ ! ! c==> creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 creal_le creal_of_num cNUMERAL c_0 b1 ! ! c==> creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 creal_le creal_of_num cNUMERAL c_0 b0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D FORALL_IN_CLAUSES
A |- ((!P. ((!x. ((x IN EMPTY) ==> (P x))) = T)) /\ (!P. (!a. (!s. ((!x. ((x IN (a INSERT s)) ==> (P x))) = ((P a) /\ (!x. ((x IN s) ==> (P x)))))))))
T c/\ ! c= ! c==> cIN b1 part cEMPTY * b0 b1 cT ! ! ! c= ! c==> cIN b3 * * part cINSERT b1 b2 * b0 b3 c/\ * b0 b1 ! c==> cIN b3 b2 * b0 b3
D DIST_POS_LE
A |- (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y)))))
T creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 f1
D Trigonometry2.POW2_COND
A |- (!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 c= creal_le f0 f1 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0
D Collect_geom.DELTA_RRR_INTERPRETE
A |- (((((((delta r) r) r) a) b) c) = ((real_add ((real_mul (real_neg a)) ((real_mul b) c))) ((real_mul r) (((ups_x a) b) c))))
T c= cdelta f0 f0 f0 f1 f2 f3 creal_add creal_mul creal_neg f1 creal_mul f2 f3 creal_mul f0 cups_x f1 f2 f3
D Collect_geom.RADV_FORMULAR
A |- (!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((radV (va INSERT (vb INSERT (vc INSERT EMPTY)))) = (((eta_y ((dist3 vb) vc)) ((dist3 va) vc)) ((dist3 va) vb)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1
D Collect_geom.ETA_Y_SYYM
A |- (!x. (!y. (!z. (((((eta_y x) y) z) = (((eta_y y) x) z)) /\ ((((eta_y x) y) z) = (((eta_y z) y) x))))))
T c/\ c= ceta_y f0 f1 f2 ceta_y f1 f0 f2 c= ceta_y f0 f1 f2 ceta_y f2 f1 f0
D Collect_geom.DELTA_POS_4POINTS
A |- (!x1. (!x2. (!x3. (!x4. ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (x1 , x2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x1 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x1 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x3 , x4))) (NUMERAL (BIT0 (BIT1 _0))))))))))
T creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0
D Collect_geom2.COLLINEAR3_IMP_COPLANAR
A |- (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY))))))))))
T c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
D Collect_geom2.VBVYGGT
A |- (!v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) /\ ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) /\ ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))))))))))
T c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
D Collect_geom2.NOT_COPLANAR_IMP_RADV_PROPERTIES
A |- ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (!w. (((v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))) w) ==> ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , w))))))
T c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
D Collect_geom2.NOT_COL_EQ_UPS_X_POS
A |- (!v1. (!v2. (!v3. ((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))))))
T c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0
D Collect_geom2.ETA_Y_POW2_EQ
A |- (((real_div ((real_mul ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))
T c= creal_div creal_mul creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0
D Collect_geom2.ETA_Y_POS_LE
A |- ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))
T creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2
- |- ((\v2. (!v1. (!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))))) v2)
T * / ! ! c==> c~ c==> c~ ccoplanar_alt * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY ccoplanar_alt * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF f1
+ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((distance (pp , v1)) = p1), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f1 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cdistance c, f4 f0 f6 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY
- |- (((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)) ==> ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)))
T c==> c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
+ ((\r. ((r = (distance (pp , v1))) /\ ((r = (distance (pp , v2))) /\ ((r = (distance (pp , v3))) /\ (r = (distance (pp , v4))))))) r) |- ((r = (distance (pp , v1))) /\ ((r = (distance (pp , v2))) /\ ((r = (distance (pp , v3))) /\ (r = (distance (pp , v4))))))
T c==> * / c/\ c= b0 cdistance c, f0 f1 c/\ c= b0 cdistance c, f0 f2 c/\ c= b0 cdistance c, f0 f3 c= b0 cdistance c, f0 f4 f5 c/\ c= f5 cdistance c, f0 f1 c/\ c= f5 cdistance c, f0 f2 c/\ c= f5 cdistance c, f0 f3 c= f5 cdistance c, f0 f4
- (~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) |- ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) /\ F)
T c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 c/\ c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF
+ |- ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (!w. (((v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))) w) ==> ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , w)))))))
T c= c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
+ |- ((!a. (((a /\ T) /\ F) = (a /\ (T /\ F)))) = ((((T /\ T) /\ F) = (T /\ (T /\ F))) /\ (((F /\ T) /\ F) = (F /\ (T /\ F)))))
T c= ! c= c/\ c/\ b0 cT cF c/\ b0 c/\ cT cF c/\ c= c/\ c/\ cT cT cF c/\ cT c/\ cT cF c= c/\ c/\ cF cT cF c/\ cF c/\ cT cF
- (!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) |- ((~ ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))) ==> ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))))
T c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> c~ creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2
+ (!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) |- (!b. ((((~ ((real_le (real_of_num (NUMERAL _0))) _2178550)) \/ (~ ((real_le (real_of_num (NUMERAL _0))) b))) \/ (((real_le _2178550) b) \/ (~ ((real_le ((real_pow _2178550) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (((~ ((real_le (real_of_num (NUMERAL _0))) _2178550)) \/ (~ ((real_le (real_of_num (NUMERAL _0))) b))) \/ ((~ ((real_le _2178550) b)) \/ ((real_le ((real_pow _2178550) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 ! c/\ c\/ c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 b0 c\/ creal_le f0 b0 c~ creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 b0 c\/ c~ creal_le f0 b0 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((((real_le (real_of_num (NUMERAL _0))) ((real_mul (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_mul (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (p' ==> q'))))
T c==> c= creal_le creal_of_num cNUMERAL c_0 creal_mul cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c==> f4 c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY f6 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_mul cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c==> f4 f6
- (!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) |- ((~ ((real_le (real_of_num (NUMERAL _0))) _2178550)) \/ ((~ ((real_le (real_of_num (NUMERAL _0))) _2178551)) \/ ((~ ((real_le _2178550) _2178551)) \/ ((real_le ((real_pow _2178550) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow _2178551) (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c\/ c~ creal_le creal_of_num cNUMERAL c_0 f1 c\/ c~ creal_le f0 f1 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0
+ ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add ((real_mul a) (real_inv a))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul f0 creal_inv f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((a = (real_of_num (NUMERAL _0))) /\ (?z. (?z'. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) = (?z. ((a = (real_of_num (NUMERAL _0))) /\ (?z'. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c/\ c= f0 creal_of_num cNUMERAL c_0 c? / c? / c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0 b1 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= f0 creal_of_num cNUMERAL c_0 c? / c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0 b1 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (real_neg ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) ((real_mul ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul creal_neg creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_mul cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
+ (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))
T c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- ((\y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) y)
T * / ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 f1
+ |- (((!pp. (!v3. (!v2. (!v1. ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F))))))))) ==> ((\pp. (!v3. (!v2. (!v1. ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F))))))))) pp)) = ((\pp. (!v3. (!v2. (!v1. ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F))))))))) pp))
T c= c==> ! ! ! ! c==> c~ c==> creal_le creal_pow ceta_y cdist3 b3 b2 cdist3 b3 b1 cdist3 b2 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 b3 b2 cdist3 b3 b1 cdist3 b2 b1 cdistance c, b0 f0 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b4 b4 cdist3 b4 b4 cdist3 b4 b4 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b4 creal_le creal_of_num cNUMERAL c_0 b5 c= creal_le b4 b5 creal_le creal_pow b4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b5 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b4 b5 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b4 b5 cF * / ! ! ! c==> c~ c==> creal_le creal_pow ceta_y cdist3 b3 b2 cdist3 b3 b1 cdist3 b2 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 b3 b2 cdist3 b3 b1 cdist3 b2 b1 cdistance c, b0 f0 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b4 b4 cdist3 b4 b4 cdist3 b4 b4 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b4 creal_le creal_of_num cNUMERAL c_0 b5 c= creal_le b4 b5 creal_le creal_pow b4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b5 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b4 b5 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b4 b5 cF f1 * / ! ! ! c==> c~ c==> creal_le creal_pow ceta_y cdist3 b3 b2 cdist3 b3 b1 cdist3 b2 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 b3 b2 cdist3 b3 b1 cdist3 b2 b1 cdistance c, b0 f0 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b4 b4 cdist3 b4 b4 cdist3 b4 b4 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b4 creal_le creal_of_num cNUMERAL c_0 b5 c= creal_le b4 b5 creal_le creal_pow b4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b5 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b4 b5 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b4 b5 cF f1
+ |- ((!a. (!b. (a ==> (b ==> a)))) = ((!b. (T ==> (b ==> T))) /\ (!b. (F ==> (b ==> F)))))
T c= ! ! c==> b0 c==> b1 b0 c/\ ! c==> cT c==> b0 cT ! c==> cF c==> b0 cF
- |- ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = q')) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) = (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> q')))
T c==> c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3 f5 c= c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 f5
+ (!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))), (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))), (!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))), (~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) |- ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) /\ (~ (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y)))))))
T c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c/\ ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c~ ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1
+ |- (!c. (((\c. (?a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) c) ==> F))
T c==> * / c? / c? / c? / c/\ c= b1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 b3 creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ (!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))), (!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))), (~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) |- ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F)
T c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 cF
+ (~ (((real_le (real_of_num (NUMERAL _0))) ((real_sub a) b)) = ((real_le b) a))) |- ((~ (((real_le (real_of_num (NUMERAL _0))) ((real_sub a) b)) = ((real_le b) a))) /\ F)
T c==> c~ c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0 c/\ c~ c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0 cF
+ ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul b) ((real_mul c) ((real_mul z') (real_inv a))))))) ((real_mul b) ((real_mul c) z'))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f2 creal_mul f3 creal_mul f5 creal_inv f0 creal_mul f2 creal_mul f3 f5 creal_of_num cNUMERAL c_0
+ |- ((\b. (!a. ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F))) b)
T * / ! c==> c~ c/\ c= c==> b1 c==> b0 f0 c==> c/\ b1 b0 f0 c= c/\ c/\ b1 b0 f0 c/\ b1 c/\ b0 f0 cF f1
- |- ((((r = (distance (pp , v4))) = (r = (distance (pp , v4)))) ==> (((r = (distance (pp , v4))) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) = q')) ==> (((r = (distance (pp , v4))) ==> (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))) = ((r = (distance (pp , v4))) ==> q')))) = (((r = (distance (pp , v4))) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) = q')) ==> (((r = (distance (pp , v4))) ==> (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))) = ((r = (distance (pp , v4))) ==> q'))))
T c= c==> c= c= f0 cdistance c, f1 f2 c= f0 cdistance c, f1 f2 c==> c==> c= f0 cdistance c, f1 f2 c= c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2 f6 c= c==> c= f0 cdistance c, f1 f2 c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2 c==> c= f0 cdistance c, f1 f2 f6 c==> c==> c= f0 cdistance c, f1 f2 c= c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2 f6 c= c==> c= f0 cdistance c, f1 f2 c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2 c==> c= f0 cdistance c, f1 f2 f6
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_mul (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_mul cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
- (~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) |- ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) /\ F)
T c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 c/\ c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF
+ ((\r. (?b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))))) r) |- (((\r. (?b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))))) r) /\ F)
T c==> * / c? / c? / c? / c? / c? / c/\ c= creal_mul b3 creal_inv b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 b5 creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ * / c? / c? / c? / c? / c? / c/\ c= creal_mul b3 creal_inv b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 b5 creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0)))) |- ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
+ |- ((a ==> (b ==> c)) = ((a /\ b) ==> c))
T c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((distance (pp , v1)) = p1), ((distance (pp , v2)) = p2), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- ((?p3. ((distance (pp , v3)) = p3)) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f1 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cdistance c, f4 f0 f6 c==> c= cdistance c, f4 f1 f7 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 c==> c? / c= cdistance c, f4 f2 b0 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY
+ ((((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))))) |- F
T c==> c\/ c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
- |- (((((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)) ==> ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))) ==> (((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)) ==> ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)))) = (((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)) ==> ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))))
T c= c==> c==> c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
- ((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) |- (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) = T)
T c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 cT
+ ((\c. (?a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) c) |- (((\c. (?a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) c) /\ F)
T c==> * / c? / c? / c? / c/\ c= b1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 b3 creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ * / c? / c? / c? / c/\ c= b1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 b3 creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (real_neg ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) ((real_mul ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (real_neg ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) ((real_mul ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (p' ==> q'))))
T c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> f3 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul creal_neg creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY f6 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul creal_neg creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c==> f3 f6
+ (!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) |- ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 _2178547) _2178548)) ((dist3 _2178547) _2178549)) ((dist3 _2178548) _2178549)))
T c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2
+ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((distance (pp , v1)) = p1), ((distance (pp , v2)) = p2), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- ((((\p3. ((distance (pp , v3)) = p3)) p3) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = T)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f1 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cdistance c, f4 f0 f6 c==> c= cdistance c, f4 f1 f7 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 c= c==> * / c= cdistance c, f4 f2 b0 f8 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cT
+ |- ((((\c. (?a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) c) ==> F) = T)
T c= c==> * / c? / c? / c? / c/\ c= b1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 b3 creal_of_num cNUMERAL cBIT1 c_0 f2 cF cT
+ |- (((!c. (!b. (!a. ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)))) ==> ((\c. (!b. (!a. ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)))) c)) = ((\c. (!b. (!a. ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)))) c))
T c= c==> ! ! ! c==> c~ c= c/\ b2 c/\ b1 b0 c/\ c/\ b2 b1 b0 cF * / ! ! c==> c~ c= c/\ b2 c/\ b1 b0 c/\ c/\ b2 b1 b0 cF f0 * / ! ! c==> c~ c= c/\ b2 c/\ b1 b0 c/\ c/\ b2 b1 b0 cF f0
+ |- ((((~ (!r. (!b. (!c. (!a. ((~ (a = (real_of_num (NUMERAL _0)))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))))))))) = (?r. (?b. (?c. (?a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> (!r. (!b. (!c. (!a. ((~ (a = (real_of_num (NUMERAL _0)))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))))))))) = (!r. (!b. (!c. (!a. ((~ (a = (real_of_num (NUMERAL _0)))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a))))))))))))
T c= c==> c= c~ ! ! ! ! c\/ c~ c= b3 creal_of_num cNUMERAL c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_of_num cNUMERAL c_0 b3 c= creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 c? / c? / c? / c? / c? / c? / c/\ c= b3 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 b5 creal_of_num cNUMERAL cBIT1 c_0 ! ! ! ! c\/ c~ c= b3 creal_of_num cNUMERAL c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_of_num cNUMERAL c_0 b3 c= creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 ! ! ! ! c\/ c~ c= b3 creal_of_num cNUMERAL c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_of_num cNUMERAL c_0 b3 c= creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3
+ (!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) |- ((~ ((real_le (real_of_num (NUMERAL _0))) _2178550)) \/ ((~ ((real_le (real_of_num (NUMERAL _0))) _2178551)) \/ (((real_le _2178550) _2178551) \/ (~ ((real_le ((real_pow _2178550) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow _2178551) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c\/ c~ creal_le creal_of_num cNUMERAL c_0 f1 c\/ creal_le f0 f1 c~ creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0
- ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) z))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1))) = (p' ==> q'))))) ==> ((\q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1))) = (p' ==> q'))))) q')) = ((\q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> f3 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f5 b0 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f5 c==> f3 b0 * / c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> f3 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f5 b0 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f5 c==> f3 b0 f6 * / c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> f3 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f5 b0 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f5 c==> f3 b0 f6
+ |- ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) /\ (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) /\ ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) /\ ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))))))))
T c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!x4. ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , x4))) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((\x4. ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , x4))) (NUMERAL (BIT0 (BIT1 _0))))))) v3)) = ((\x4. ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , x4))) (NUMERAL (BIT0 (BIT1 _0))))))) v3))
T c= c==> ! creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 b0 cNUMERAL cBIT0 cBIT1 c_0 * / creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 b0 cNUMERAL cBIT0 cBIT1 c_0 f3 * / creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 b0 cNUMERAL cBIT0 cBIT1 c_0 f3
+ |- ((r = (distance (pp , v4))) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = r) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)))) = (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))))
T c==> c= f0 cdistance c, f1 f2 c= c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f0 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 f0 c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ (r = (distance (pp , v1))), (r = (distance (pp , v2))), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))), ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4)))))))) ==> (p = pp))) /\ (((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END (pp = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))), ((r = (distance (pp , v3))) /\ (r = (distance (pp , v4)))), ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) |- ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))
T c==> c= f0 cdistance c, f1 f2 c==> c= f0 cdistance c, f1 f3 c==> c= cradV * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cdistance c, f1 f2 c==> c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c? / c/\ c= b1 cdistance c, b0 f2 c/\ c= b1 cdistance c, b0 f3 c/\ c= b1 cdistance c, b0 f4 c= b1 cdistance c, b0 f5 c= b0 f1 c/\ cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= f1 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f2 cvector_add c% b7 f3 cvector_add c% b8 f4 c% b9 f5 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c/\ c= f0 cdistance c, f1 f4 c= f0 cdistance c, f1 f5 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f3 f4 cdist3 f2 f4 cdist3 f2 f3 cradV * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ |- ((!b. (!a. (((a /\ b) /\ F) = (a /\ (b /\ F))))) = ((!a. (((a /\ T) /\ F) = (a /\ (T /\ F)))) /\ (!a. (((a /\ F) /\ F) = (a /\ (F /\ F))))))
T c= ! ! c= c/\ c/\ b1 b0 cF c/\ b1 c/\ b0 cF c/\ ! c= c/\ c/\ b0 cT cF c/\ b0 c/\ cT cF ! c= c/\ c/\ b0 cF cF c/\ b0 c/\ cF cF
+ |- (((!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((radV (va INSERT (vb INSERT (vc INSERT EMPTY)))) = (((eta_y ((dist3 vb) vc)) ((dist3 va) vc)) ((dist3 va) vb))))) ==> ((\vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((radV (va INSERT (vb INSERT (vc INSERT EMPTY)))) = (((eta_y ((dist3 vb) vc)) ((dist3 va) vc)) ((dist3 va) vb))))) vc)) = ((\vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((radV (va INSERT (vb INSERT (vc INSERT EMPTY)))) = (((eta_y ((dist3 vb) vc)) ((dist3 va) vc)) ((dist3 va) vb))))) vc))
T c= c==> ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ceta_y cdist3 f1 b0 cdist3 f0 b0 cdist3 f0 f1 * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ceta_y cdist3 f1 b0 cdist3 f0 b0 cdist3 f0 f1 f2 * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ceta_y cdist3 f1 b0 cdist3 f0 b0 cdist3 f0 f1 f2
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F) ==> ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)) ==> (((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F) ==> ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)))
T c==> c==> c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF
+ |- ((\x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul x) (real_inv x)) = (real_of_num (NUMERAL (BIT1 _0)))))) a)
T * / c==> c~ c= b0 creal_of_num cNUMERAL c_0 c= creal_mul b0 creal_inv b0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) \/ (!v. (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY))))))) = (!v. ((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) \/ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY))))))))
T c= c\/ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY ! c\/ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY
+ (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) |- ((coplanar_alt (_2178535 INSERT (_2178536 INSERT (_2178537 INSERT (_2178538 INSERT EMPTY))))) \/ (~ (collinear (_2178535 INSERT (_2178536 INSERT (_2178537 INSERT EMPTY))))))
T c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c\/ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((!v. ((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) \/ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY))))))) = ((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) \/ (!v. (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY))))))))
T c= ! c\/ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY
+ |- (((!q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r))) = (p' ==> q'))))) ==> ((\q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r))) = (p' ==> q'))))) q')) = ((\q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> f3 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 b0 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 c==> f3 b0 * / c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> f3 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 b0 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 c==> f3 b0 f5 * / c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> f3 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 b0 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 c==> f3 b0 f5
+ ((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0)))) ==> F), ((((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
+ |- (((!x2. (!x3. (!x4. ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , x2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x3 , x4))) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((\x2. (!x3. (!x4. ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , x2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x3 , x4))) (NUMERAL (BIT0 (BIT1 _0))))))))) v1)) = ((\x2. (!x3. (!x4. ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , x2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x2 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x3 , x4))) (NUMERAL (BIT0 (BIT1 _0))))))))) v1))
T c= c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b1 b2 cNUMERAL cBIT0 cBIT1 c_0 * / ! ! creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b1 b2 cNUMERAL cBIT0 cBIT1 c_0 f1 * / ! ! creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b1 b2 cNUMERAL cBIT0 cBIT1 c_0 f1
+ |- ((((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_le (radV (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (radV (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> q')))) = (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_le (radV (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (radV (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> q'))))
T c= c==> c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_le cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_le cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
+ |- (((!a. ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)) ==> ((\a. ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)) a)) = ((\a. ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)) a))
T c= c==> ! c==> c~ c= c/\ b0 c/\ f0 f1 c/\ c/\ b0 f0 f1 cF * / c==> c~ c= c/\ b0 c/\ f0 f1 c/\ c/\ b0 f0 f1 cF f2 * / c==> c~ c= c/\ b0 c/\ f0 f1 c/\ c/\ b0 f0 f1 cF f2
- |- (((distance (pp , v1)) = p1) = ((\p1. ((distance (pp , v1)) = p1)) p1))
T c= c= cdistance c, f0 f1 f2 * / c= cdistance c, f0 f1 b0 f2
+ |- ((!a. ((a ==> (T ==> F)) = ((a /\ T) ==> F))) = (((T ==> (T ==> F)) = ((T /\ T) ==> F)) /\ ((F ==> (T ==> F)) = ((F /\ T) ==> F))))
T c= ! c= c==> b0 c==> cT cF c==> c/\ b0 cT cF c/\ c= c==> cT c==> cT cF c==> c/\ cT cT cF c= c==> cF c==> cT cF c==> c/\ cF cT cF
- (~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))), (~ ((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0)))))) |- ((~ ((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> c~ creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1))) = (p' ==> q'))))) q')
T * / c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> f3 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f5 b0 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f5 c==> f3 b0 f6
- ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F), (((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) ==> ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F)) |- (((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) /\ ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F))
T c==> c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c==> c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c/\ c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF
+ |- ((((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))
T c==> c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 f5 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 f5
+ |- ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = (p' ==> q'))))
T c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c==> f5 c= creal_le ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cdistance c, f0 f1 f6 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cdistance c, f0 f1 c==> f5 f6
+ |- (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))
T c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2
+ |- ((\q'. ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = r) = p') ==> ((p' ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r))) = q')) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = r) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)))) = (p' ==> q'))))) q')
T * / c==> c= c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 f5 c==> c==> f5 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 b0 c= c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 c==> f5 b0 f6
+ |- ((\p'. (!q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (p' ==> q')))))) p')
T * / ! c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY b1 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> b0 b1 f5
+ |- ((((r = (distance (pp , v4))) = (r = (distance (pp , v4)))) ==> (((r = (distance (pp , v4))) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = r) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)))) = q')) ==> (((r = (distance (pp , v4))) ==> (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = r) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r))))) = ((r = (distance (pp , v4))) ==> q')))) = (((r = (distance (pp , v4))) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = r) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)))) = q')) ==> (((r = (distance (pp , v4))) ==> (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = r) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r))))) = ((r = (distance (pp , v4))) ==> q'))))
T c= c==> c= c= f0 cdistance c, f1 f2 c= f0 cdistance c, f1 f2 c==> c==> c= f0 cdistance c, f1 f2 c= c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f0 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 f0 f6 c= c==> c= f0 cdistance c, f1 f2 c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f0 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 f0 c==> c= f0 cdistance c, f1 f2 f6 c==> c==> c= f0 cdistance c, f1 f2 c= c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f0 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 f0 f6 c= c==> c= f0 cdistance c, f1 f2 c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f0 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 f0 c==> c= f0 cdistance c, f1 f2 f6
+ (!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) |- ((((~ ((real_le (real_of_num (NUMERAL _0))) _2178550)) \/ (~ ((real_le (real_of_num (NUMERAL _0))) _2178551))) \/ (((real_le _2178550) _2178551) \/ (~ ((real_le ((real_pow _2178550) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow _2178551) (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (((~ ((real_le (real_of_num (NUMERAL _0))) _2178550)) \/ (~ ((real_le (real_of_num (NUMERAL _0))) _2178551))) \/ ((~ ((real_le _2178550) _2178551)) \/ ((real_le ((real_pow _2178550) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow _2178551) (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c/\ c\/ c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 f1 c\/ creal_le f0 f1 c~ creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 c\/ c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 f1 c\/ c~ creal_le f0 f1 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0
+ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((distance (pp , v1)) = p1), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- ((((\p2. ((distance (pp , v2)) = p2)) p2) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = T)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f1 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cdistance c, f4 f0 f6 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 c= c==> * / c= cdistance c, f4 f1 b0 f7 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cT
+ |- ((\x. (!y. (!z. (((((eta_y x) y) z) = (((eta_y y) x) z)) /\ ((((eta_y x) y) z) = (((eta_y z) y) x)))))) x)
T * / ! ! c/\ c= ceta_y b0 b1 b2 ceta_y b1 b0 b2 c= ceta_y b0 b1 b2 ceta_y b2 b1 b0 f0
+ (~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))
T c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((radV (va INSERT (vb INSERT (vc INSERT EMPTY)))) = (((eta_y ((dist3 vb) vc)) ((dist3 va) vc)) ((dist3 va) vb)))))) vb)
T * / ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cradV * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ceta_y cdist3 b0 b1 cdist3 f0 b1 cdist3 f0 b0 f1
- (((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- ((\p'. (!q'. ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)) = (p' ==> q')))))) p')
T * / ! c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f0 b1 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f0 c==> b0 b1 f4
+ |- (((!c. (!a. ((~ (((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a))))))))) ==> ((\c. (!a. ((~ (((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a))))))))) c)) = ((\c. (!a. ((~ (((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a))))))))) c))
T c= c==> ! ! c\/ c~ c= creal_mul b1 creal_inv b1 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_of_num cNUMERAL c_0 b1 c= creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 * / ! c\/ c~ c= creal_mul b1 creal_inv b1 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_of_num cNUMERAL c_0 b1 c= creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 f2 * / ! c\/ c~ c= creal_mul b1 creal_inv b1 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_of_num cNUMERAL c_0 b1 c= creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 f2
+ ((\p3. ((distance (pp , v3)) = p3)) p3) |- ((((distance (pp , v3)) = p3) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> * / c= cdistance c, f0 f1 b0 f2 c= c==> c= cdistance c, f0 f1 f2 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f6 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f6 f1 cdist3 f5 f1 cdist3 f5 f6 cradV * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f1 * * part cINSERT f7 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f6 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f6 f1 cdist3 f5 f1 cdist3 f5 f6 cradV * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f1 * * part cINSERT f7 part cEMPTY
- |- ((((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F) ==> ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)) = ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F))
T c= c==> c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF
- (((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- (T = (((~ (collinear (_2178535 INSERT (_2178536 INSERT (_2178537 INSERT EMPTY))))) \/ (coplanar_alt (_2178535 INSERT (_2178536 INSERT (_2178537 INSERT (_2178538 INSERT EMPTY)))))) = ((coplanar_alt (_2178535 INSERT (_2178536 INSERT (_2178537 INSERT (_2178538 INSERT EMPTY))))) \/ (~ (collinear (_2178535 INSERT (_2178536 INSERT (_2178537 INSERT EMPTY))))))))
T c= cT c= c\/ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) |- ((\v. ((~ (collinear (_2178535 INSERT (_2178536 INSERT (_2178537 INSERT EMPTY))))) \/ (coplanar_alt (_2178535 INSERT (_2178536 INSERT (_2178537 INSERT (v INSERT EMPTY))))))) _2178538)
T c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / c\/ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (((\z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) x) ==> F)) ==> ((?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F)) = ((?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F))
T c= c==> ! c==> * / c? / c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0 b2 creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
+ (!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))), (!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))), (~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) |- (~ (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))))
T c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c~ ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- ((\a. ((~ (((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))))) a)
T * / c\/ c~ c= creal_mul b0 creal_inv b0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_of_num cNUMERAL c_0 b0 c= creal_add creal_mul creal_neg f0 f1 creal_mul f2 b0 creal_mul b0 creal_sub f2 creal_mul creal_mul f0 f1 creal_inv b0 f3
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (real_neg ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) ((real_mul ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_mul cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul creal_neg creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
+ (r = (distance (pp , v4))), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) |- (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) /\ ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))))
T c==> c= f0 cdistance c, f1 f2 c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c/\ c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 f0 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2
+ |- ((\q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (real_neg ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) ((real_mul ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (real_neg ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) ((real_mul ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (p' ==> q'))))) q')
T * / c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> f3 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul creal_neg creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY b0 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul creal_neg creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c==> f3 b0 f6
+ |- ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = q')) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) = (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) ==> q')))
T c==> c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 c= c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 f6
+ ((\a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) a) |- (((\a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) a) /\ F)
T c==> * / c? / c? / c/\ c= b0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 f1 creal_mul f2 b0 creal_mul b0 creal_sub f2 creal_mul creal_mul f0 f1 creal_inv b0 b2 creal_of_num cNUMERAL cBIT1 c_0 f3 c/\ * / c? / c? / c/\ c= b0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 f1 creal_mul f2 b0 creal_mul b0 creal_sub f2 creal_mul creal_mul f0 f1 creal_inv b0 b2 creal_of_num cNUMERAL cBIT1 c_0 f3 cF
+ ((\a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) a) |- (((?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F) = F)
T c==> * / c? / c? / c/\ c= creal_mul b0 creal_inv b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 f1 creal_mul f2 b0 creal_mul b0 creal_sub f2 creal_mul creal_mul f0 f1 creal_inv b0 b2 creal_of_num cNUMERAL cBIT1 c_0 f3 c= c==> c? / c? / c/\ c= creal_mul f3 creal_inv f3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f3 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 f1 creal_mul f2 f3 creal_mul f3 creal_sub f2 creal_mul creal_mul f0 f1 creal_inv f3 b1 creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- (((!x. (((\r. (?b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))))) x) ==> F)) ==> ((?r. (?b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F)) = ((?r. (?b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c? / c? / c? / c/\ c= creal_mul b4 creal_inv b4 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b2 b3 creal_mul b1 b4 creal_mul b4 creal_sub b1 creal_mul creal_mul b2 b3 creal_inv b4 b6 creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c? / c? / c? / c/\ c= creal_mul b3 creal_inv b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 b5 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c? / c? / c? / c/\ c= creal_mul b3 creal_inv b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 b5 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)))) = (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)))))
T c= c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4
+ |- ((\x3. (!x4. ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , x3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , x4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (x3 , x4))) (NUMERAL (BIT0 (BIT1 _0)))))))) v2)
T * / ! creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 b1 cNUMERAL cBIT0 cBIT1 c_0 f2
- |- ((((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> q')))) = (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> q'))))
T c= c==> c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
+ |- (((((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) /\ (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) /\ ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) /\ ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = T)
T c= c==> c/\ c/\ c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ |- (((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> F) = (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4)))))
T c= c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 cF c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4
- |- ((\x. (!y. (((real_lt (real_of_num (NUMERAL _0))) y) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) x))))) x)
T * / ! c==> creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 creal_le creal_of_num cNUMERAL c_0 b0 f0
+ ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))), ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4)))))))) ==> (p = pp))) /\ (((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END (pp = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))), ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))), ((\r. ((r = (distance (pp , v1))) /\ ((r = (distance (pp , v2))) /\ ((r = (distance (pp , v3))) /\ (r = (distance (pp , v4))))))) r) |- (((\r. ((r = (distance (pp , v1))) /\ ((r = (distance (pp , v2))) /\ ((r = (distance (pp , v3))) /\ (r = (distance (pp , v4))))))) r) /\ ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f0 c==> c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 f4 c/\ cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= f4 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> * / c/\ c= b0 cdistance c, f4 f0 c/\ c= b0 cdistance c, f4 f1 c/\ c= b0 cdistance c, f4 f2 c= b0 cdistance c, f4 f3 f5 c/\ * / c/\ c= b0 cdistance c, f4 f0 c/\ c= b0 cdistance c, f4 f1 c/\ c= b0 cdistance c, f4 f2 c= b0 cdistance c, f4 f3 f5 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (?z'. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) = (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 b0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (real_neg ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) ((real_mul ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (real_neg ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) ((real_mul ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (p' ==> q'))))
T c==> c= creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul creal_neg creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c==> f4 c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY f6 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul creal_neg creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c==> f4 f6
+ |- (((!p'. (!q'. ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f4 b1 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f4 c==> b0 b1 * / ! c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f4 b1 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f4 c==> b0 b1 f5 * / ! c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f4 b1 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f4 c==> b0 b1 f5
- ((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) |- (T = ((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= cT creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0
- |- ((!b'. (((~ ((real_le (real_of_num (NUMERAL _0))) a)) \/ (~ ((real_le (real_of_num (NUMERAL _0))) b))) \/ ((((real_le a) b') \/ (~ ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b') (NUMERAL (BIT0 (BIT1 _0))))))) /\ ((~ ((real_le a) b')) \/ ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b') (NUMERAL (BIT0 (BIT1 _0))))))))) = (((~ ((real_le (real_of_num (NUMERAL _0))) a)) \/ (~ ((real_le (real_of_num (NUMERAL _0))) b))) \/ (!b. ((((real_le a) b) \/ (~ ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) /\ ((~ ((real_le a) b)) \/ ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))))
T c= ! c\/ c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 f1 c/\ c\/ creal_le f0 b0 c~ creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c~ creal_le f0 b0 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 f1 ! c/\ c\/ creal_le f0 b0 c~ creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c~ creal_le f0 b0 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((!a'. ((~ (((real_mul a') (real_inv a')) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))))) = ((!a. (~ (((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a))))))))
T c= ! c\/ c~ c= creal_mul b0 creal_inv b0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_of_num cNUMERAL c_0 f0 c= creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0 c\/ ! c~ c= creal_mul b0 creal_inv b0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_of_num cNUMERAL c_0 f0 c= creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0
+ |- (((?z. (P z)) /\ Q) = (?z. ((P z) /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((!w. (((v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))) w) ==> ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , w))))) = (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) /\ (!w. (((v2 INSERT (v3 INSERT (v4 INSERT EMPTY))) w) ==> ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , w)))))))
T c= ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 b0 c/\ c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f0 ! c==> cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 b0
+ (((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- ((!v4. (!pp. (!v3. (!v2. (!v1. ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> (~ (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))))))))))))) = (!v4. (!pp. (!v3. (!v2. (!v1. ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F)))))))))))
T c= ! ! ! ! ! c==> c~ c==> creal_le creal_pow ceta_y cdist3 b4 b3 cdist3 b4 b2 cdist3 b3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b1 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 b4 b3 cdist3 b4 b2 cdist3 b3 b2 cdistance c, b1 b0 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b5 b5 cdist3 b5 b5 cdist3 b5 b5 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b5 creal_le creal_of_num cNUMERAL c_0 b6 c= creal_le b5 b6 creal_le creal_pow b5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b6 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b5 b6 c~ ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b5 b6 ! ! ! ! ! c==> c~ c==> creal_le creal_pow ceta_y cdist3 b4 b3 cdist3 b4 b2 cdist3 b3 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b1 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 b4 b3 cdist3 b4 b2 cdist3 b3 b2 cdistance c, b1 b0 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b5 b5 cdist3 b5 b5 cdist3 b5 b5 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b5 creal_le creal_of_num cNUMERAL c_0 b6 c= creal_le b5 b6 creal_le creal_pow b5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b6 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b5 b6 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b5 b6 cF
+ |- ((((?r. (?b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F) ==> (((~ q) = (?r. (?b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> q)) = (((~ q) = (?r. (?b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> q))
T c= c==> c==> c? / c? / c? / c? / c? / c? / c/\ c= creal_mul b3 creal_inv b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 b5 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c= c~ f0 c? / c? / c? / c? / c? / c? / c/\ c= creal_mul b3 creal_inv b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 b5 creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c= c~ f0 c? / c? / c? / c? / c? / c? / c/\ c= creal_mul b3 creal_inv b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 b5 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((!s. ((!x. (((a INSERT s) x) ==> (P x))) = ((P a) /\ (!x. ((s x) ==> (P x)))))) ==> ((\s. ((!x. (((a INSERT s) x) ==> (P x))) = ((P a) /\ (!x. ((s x) ==> (P x)))))) s)) = ((\s. ((!x. (((a INSERT s) x) ==> (P x))) = ((P a) /\ (!x. ((s x) ==> (P x)))))) s))
T c= c==> ! c= ! c==> cINSERT f0 b0 b1 * f1 b1 c/\ * f1 f0 ! c==> * b0 b1 * f1 b1 * / c= ! c==> cINSERT f0 b0 b1 * f1 b1 c/\ * f1 f0 ! c==> * b0 b1 * f1 b1 f2 * / c= ! c==> cINSERT f0 b0 b1 * f1 b1 c/\ * f1 f0 ! c==> * b0 b1 * f1 b1 f2
+ |- ((!a. (((a /\ F) /\ F) = (a /\ (F /\ F)))) = ((((T /\ F) /\ F) = (T /\ (F /\ F))) /\ (((F /\ F) /\ F) = (F /\ (F /\ F)))))
T c= ! c= c/\ c/\ b0 cF cF c/\ b0 c/\ cF cF c/\ c= c/\ c/\ cT cF cF c/\ cT c/\ cF cF c= c/\ c/\ cF cF cF c/\ cF c/\ cF cF
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ ((\z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) z') |- ((((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F) = F)
T c==> * / c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 b0 creal_of_num cNUMERAL cBIT1 c_0 f5 c= c==> c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 cF cF
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ ((\c. (?a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) c) |- (?a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))
T c==> * / c? / c? / c? / c/\ c= b1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 b3 creal_of_num cNUMERAL cBIT1 c_0 f2 c? / c? / c? / c/\ c= b0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 f2 creal_mul f1 b0 creal_mul b0 creal_sub f1 creal_mul creal_mul f0 f2 creal_inv b0 b2 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ (a ==> (b ==> a))) ==> F) ==> ((~ (a ==> (b ==> a))) ==> F))
T c==> c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) ==> ((r = (distance (pp , v4))) ==> (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))))) = ((r = (distance (pp , v4))) ==> (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))))
T c= c==> c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3 c==> c= f5 cdistance c, f4 f3 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3 c==> c= f5 cdistance c, f4 f3 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3
+ |- ((!v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))) = (!v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (radV (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))))
T c= ! ! ! ! c==> c/\ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_le ceta_y cdist3 b1 b2 cdist3 b0 b2 cdist3 b0 b1 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! ! ! ! c==> c/\ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_le cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
+ (((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) |- (!v3. (!v. ((~ (collinear (_2178535 INSERT (_2178536 INSERT (v3 INSERT EMPTY))))) \/ (coplanar_alt (_2178535 INSERT (_2178536 INSERT (v3 INSERT (v INSERT EMPTY))))))))
T c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! ! c\/ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
+ |- (!v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))))
T c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (!b. (((\b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) b) ==> F))
T c==> * / c? / c? / c? / c? / c/\ c= creal_mul b2 creal_inv b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b0 b1 creal_mul f0 b2 creal_mul b2 creal_sub f0 creal_mul creal_mul b0 b1 creal_inv b2 b4 creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ |- ((!a. (((a /\ F) /\ T) = (a /\ (F /\ T)))) = ((((T /\ F) /\ T) = (T /\ (F /\ T))) /\ (((F /\ F) /\ T) = (F /\ (F /\ T)))))
T c= ! c= c/\ c/\ b0 cF cT c/\ b0 c/\ cF cT c/\ c= c/\ c/\ cT cF cT c/\ cT c/\ cF cT c= c/\ c/\ cF cF cT c/\ cF c/\ cF cT
+ ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))), ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4)))))))) ==> (p = pp))) /\ (((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END (pp = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))), ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) |- (!r. (((\r. ((r = (distance (pp , v1))) /\ ((r = (distance (pp , v2))) /\ ((r = (distance (pp , v3))) /\ (r = (distance (pp , v4))))))) r) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f0 c==> c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 f4 c/\ cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= f4 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 ! c==> * / c/\ c= b1 cdistance c, f4 f0 c/\ c= b1 cdistance c, f4 f1 c/\ c= b1 cdistance c, f4 f2 c= b1 cdistance c, f4 f3 b0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (!v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> ((real_le (radV (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))))
T c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) |- ((((real_le (real_of_num (NUMERAL _0))) (distance (pp , v4))) /\ ((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0)))))) = (((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) /\ (((real_le (real_of_num (NUMERAL _0))) (distance (pp , v4))) /\ ((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c= c/\ creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 f1 creal_le creal_pow ceta_y cdist3 f2 f3 cdist3 f2 f4 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 f2 f3 cdist3 f2 f4 cdist3 f3 f4 c/\ creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 f1 creal_le creal_pow ceta_y cdist3 f2 f3 cdist3 f2 f4 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) |- (((!v2. (!v3. (!v. ((~ (collinear (_2178535 INSERT (v2 INSERT (v3 INSERT EMPTY))))) \/ (coplanar_alt (_2178535 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY))))))))) ==> ((\v2. (!v3. (!v. ((~ (collinear (_2178535 INSERT (v2 INSERT (v3 INSERT EMPTY))))) \/ (coplanar_alt (_2178535 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY))))))))) _2178536)) = ((\v2. (!v3. (!v. ((~ (collinear (_2178535 INSERT (v2 INSERT (v3 INSERT EMPTY))))) \/ (coplanar_alt (_2178535 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY))))))))) _2178536))
T c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= c==> ! ! ! c\/ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c\/ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1 * / ! ! c\/ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
- |- (~ ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))
T c~ c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_mul (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_mul (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_mul cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_mul cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
+ |- ((!v3. (!v4. ((((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) /\ (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) /\ ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) /\ ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) = T)
T c= ! ! c==> c/\ c/\ c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c? / ! c==> cIN b3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= b2 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b3 c/\ ! c==> c/\ cIN b2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / ! c==> cIN b4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= b3 cdistance c, b2 b4 c= b2 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b2 b3 b4 b5 b6 b7 cvector_add c% b8 f0 cvector_add c% b9 f1 cvector_add c% b10 b0 c% b11 b1 cchi b7 b6 b4 b5 b3 b2 cchi b7 b3 b5 b4 b6 b2 cchi b2 b6 b5 b4 b3 b7 cchi b2 b3 b4 b5 b6 b7 creal_pow cdistance c, b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY creal_le ceta_y cdist3 f1 b0 cdist3 f0 b0 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cT
+ ((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_le (real_of_num (NUMERAL _0))) ((real_mul (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))))) = ((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((!w. (((v2 INSERT (v3 INSERT (v4 INSERT EMPTY))) w) ==> ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , w))))) = (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v2))) /\ (!w. (((v3 INSERT (v4 INSERT EMPTY)) w) ==> ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , w)))))))
T c= ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= cradV * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdistance c, f4 b0 c/\ c= cradV * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdistance c, f4 f0 ! c==> cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c= cradV * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cdistance c, f4 b0
- ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((real_lt (real_of_num (NUMERAL _0))) a)
T c==> c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!v1. (!v2. (!v3. ((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))))) ==> ((\v1. (!v2. (!v3. ((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))))) v1)) = ((\v1. (!v2. (!v3. ((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))))) v1))
T c= c==> ! ! ! c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b1 b2 cNUMERAL cBIT0 cBIT1 c_0 * / ! ! c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b1 b2 cNUMERAL cBIT0 cBIT1 c_0 f0 * / ! ! c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b1 b2 cNUMERAL cBIT0 cBIT1 c_0 f0
- ((real_le (real_of_num (NUMERAL _0))) ((real_mul (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))))) |- (((real_le (real_of_num (NUMERAL _0))) ((real_mul (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))))) = T)
T c==> creal_le creal_of_num cNUMERAL c_0 creal_mul cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((\P. (!a. (!s. ((!x. (((a INSERT s) x) ==> (P x))) = ((P a) /\ (!x. ((s x) ==> (P x)))))))) P)
T * / ! ! c= ! c==> cINSERT b1 b2 b3 * b0 b3 c/\ * b0 b1 ! c==> * b2 b3 * b0 b3 f0
+ (~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- (((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (_2178538 INSERT EMPTY)))))) = (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (_2178538 INSERT EMPTY))))))
T c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
+ |- ((EMPTY x) ==> (P x))
T c==> cEMPTY f0 * f1 f0
+ |- (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
+ |- ((\a. (!b. ((~ (a ==> (b ==> a))) ==> F))) a)
T * / ! c==> c~ c==> b0 c==> b1 b0 cF f0
+ |- (((~ (a ==> (b ==> a))) ==> F) = (a ==> (b ==> a)))
T c= c==> c~ c==> f0 c==> f1 f0 cF c==> f0 c==> f1 f0
+ |- ((((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) /\ (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v2))) /\ (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v3))) /\ (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) /\ ((pp IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. ((r = (distance (pp , v1))) /\ ((r = (distance (pp , v2))) /\ ((r = (distance (pp , v3))) /\ (r = (distance (pp , v4))))))) /\ ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4)))))))) ==> (p = pp))) /\ (((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END (pp = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))))))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cCARD * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c= cradV * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cdistance c, f0 f1 c/\ c= cradV * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cdistance c, f0 f2 c/\ c= cradV * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cdistance c, f0 f3 c/\ c= cradV * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cdistance c, f0 f4 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c? / c/\ c= b0 cdistance c, f0 f1 c/\ c= b0 cdistance c, f0 f2 c/\ c= b0 cdistance c, f0 f3 c= b0 cdistance c, f0 f4 c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c? / c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c/\ c= b1 cdistance c, b0 f3 c= b1 cdistance c, b0 f4 c= b0 f0 c/\ cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= f0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f1 cvector_add c% b7 f2 cvector_add c% b8 f3 c% b9 f4 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le ceta_y cdist3 f2 f3 cdist3 f1 f3 cdist3 f1 f2 cradV * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) /\ (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v2))) /\ (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v3))) /\ (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) /\ ((pp IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. ((r = (distance (pp , v1))) /\ ((r = (distance (pp , v2))) /\ ((r = (distance (pp , v3))) /\ (r = (distance (pp , v4))))))) /\ ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4)))))))) ==> (p = pp))) /\ (((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END (pp = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))))))))), ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) |- ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))
T c==> c/\ c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f0 c/\ c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f1 c/\ c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f2 c/\ c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c/\ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / c/\ c= b0 cdistance c, f4 f0 c/\ c= b0 cdistance c, f4 f1 c/\ c= b0 cdistance c, f4 f2 c= b0 cdistance c, f4 f3 c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 f4 c/\ cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= f4 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((((\b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) b) ==> F) = T)
T c= c==> * / c? / c? / c? / c? / c/\ c= creal_mul b2 creal_inv b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b0 b1 creal_mul f0 b2 creal_mul b2 creal_sub f0 creal_mul creal_mul b0 b1 creal_inv b2 b4 creal_of_num cNUMERAL cBIT1 c_0 f1 cF cT
+ ((\p2. ((distance (pp , v2)) = p2)) p2) |- ((((distance (pp , v2)) = p2) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> * / c= cdistance c, f0 f1 b0 f2 c= c==> c= cdistance c, f0 f1 f2 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f4 cdist3 f5 f4 cdist3 f5 f1 cradV * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f4 cdist3 f5 f4 cdist3 f5 f1 cradV * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (real_neg ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) ((real_mul ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (real_neg ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) ((real_mul ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> q')))
T c==> c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul creal_neg creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f5 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul creal_neg creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f5
- |- ((\y. (((real_lt (real_of_num (NUMERAL _0))) y) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) x)))) y)
T * / c==> creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 creal_le creal_of_num cNUMERAL c_0 f0 f1
- ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F) |- ((((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F) ==> ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)) ==> ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F))
T c==> c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c==> c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF
+ ((\r. (?b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))))) r) |- (?b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c==> * / c? / c? / c? / c? / c? / c/\ c= creal_mul b3 creal_inv b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 b5 creal_of_num cNUMERAL cBIT1 c_0 f0 c? / c? / c? / c? / c? / c/\ c= creal_mul b2 creal_inv b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b0 b1 creal_mul f0 b2 creal_mul b2 creal_sub f0 creal_mul creal_mul b0 b1 creal_inv b2 b4 creal_of_num cNUMERAL cBIT1 c_0
+ (r = (distance (pp , v3))), ((distance (pp , v3)) = p3) |- (r = p3)
T c==> c= f0 cdistance c, f1 f2 c==> c= cdistance c, f1 f2 f3 c= f0 f3
+ |- ((\c. (!b. (!a. ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F)))) c)
T * / ! ! c==> c~ c/\ c= c==> b2 c==> b1 b0 c==> c/\ b2 b1 b0 c= c/\ c/\ b2 b1 b0 c/\ b2 c/\ b1 b0 cF f0
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ |- ((\v1. (!v2. (!v3. ((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))))) v1)
T * / ! ! c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, b0 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b1 b2 cNUMERAL cBIT0 cBIT1 c_0 f0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((distance (pp , v1)) = p1), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- (((distance (pp , v1)) = p1) /\ (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f1 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cdistance c, f4 f0 f6 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 c/\ c= cdistance c, f4 f0 f6 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY
+ |- (T = ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c= cT c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_mul cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
+ |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 f1 creal_of_num cNUMERAL c_0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ ((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
+ ((\c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) c) |- (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))
T c==> * / c? / c? / c? / c/\ c= creal_mul b1 creal_inv b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 b3 creal_of_num cNUMERAL cBIT1 c_0 f2 c? / c? / c? / c/\ c= creal_mul b0 creal_inv b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 f2 creal_mul f1 b0 creal_mul b0 creal_sub f1 creal_mul creal_mul f0 f2 creal_inv b0 b2 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((radV (va INSERT (vb INSERT (vc INSERT EMPTY)))) = (((eta_y ((dist3 vb) vc)) ((dist3 va) vc)) ((dist3 va) vb))))))) ==> ((\va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((radV (va INSERT (vb INSERT (vc INSERT EMPTY)))) = (((eta_y ((dist3 vb) vc)) ((dist3 va) vc)) ((dist3 va) vb))))))) va)) = ((\va. (!vb. (!vc. ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) ==> ((radV (va INSERT (vb INSERT (vc INSERT EMPTY)))) = (((eta_y ((dist3 vb) vc)) ((dist3 va) vc)) ((dist3 va) vb))))))) va))
T c= c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ceta_y cdist3 b1 b2 cdist3 b0 b2 cdist3 b0 b1 * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ceta_y cdist3 b1 b2 cdist3 b0 b2 cdist3 b0 b1 f0 * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ceta_y cdist3 b1 b2 cdist3 b0 b2 cdist3 b0 b1 f0
+ |- (((((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))) = ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4)))))) = ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))))
T c= c==> c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4
- (~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) |- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) /\ F)
T c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 c/\ c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ (((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> q')))
T c==> c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cdistance c, f0 f1 f5 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cdistance c, f0 f1 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5
- |- ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) |- ((\v3. (!v. ((~ (collinear (_2178535 INSERT (_2178536 INSERT (v3 INSERT EMPTY))))) \/ (coplanar_alt (_2178535 INSERT (_2178536 INSERT (v3 INSERT (v INSERT EMPTY)))))))) _2178537)
T c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! c\/ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
+ |- ((!v2. (!v1. ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> (~ (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y)))))))))))) = T)
T c= ! ! c==> c~ c==> creal_le creal_pow ceta_y cdist3 b1 b0 cdist3 b1 f0 cdist3 b0 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 b1 b0 cdist3 b1 f0 cdist3 b0 f0 cdistance c, f1 f2 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b2 b2 cdist3 b2 b2 cdist3 b2 b2 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le creal_of_num cNUMERAL c_0 b3 c= creal_le b2 b3 creal_le creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b3 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b2 b3 c~ ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b2 b3 cT
- (~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) |- ((~ (collinear (va INSERT (vb INSERT (vc INSERT EMPTY))))) /\ ((radV (va INSERT (vb INSERT (vc INSERT EMPTY)))) = (((eta_y ((dist3 vb) vc)) ((dist3 va) vc)) ((dist3 va) vb))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1
+ |- ((\p'. (!q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r))) = (p' ==> q')))))) p')
T * / ! c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f3 b1 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f3 c==> b0 b1 f4
+ ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) /\ F)
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((~ (((real_le (real_of_num (NUMERAL _0))) ((real_sub a) b)) = ((real_le b) a))) ==> F)
T c==> c~ c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0 cF
+ ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) |- (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4
+ |- (?pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp))
T c? / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
+ |- (((!p'. (!q'. ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY b1 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> b0 b1 * / ! c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY b1 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> b0 b1 f5 * / ! c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY b1 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> b0 b1 f5
- |- (((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))) = ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))))
T c= c==> c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4
- (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- ((coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = F)
T c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
- |- ((((~ (a ==> (b ==> a))) ==> F) ==> ((~ (a ==> (b ==> a))) ==> F)) ==> (((~ (a ==> (b ==> a))) ==> F) ==> ((~ (a ==> (b ==> a))) ==> F)))
T c==> c==> c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF c==> c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF
+ |- ((!v. ((v IN (v3 INSERT (v4 INSERT EMPTY))) ==> (r = (distance (p , v))))) = ((r = (distance (p , v3))) /\ (!v. ((v IN (v4 INSERT EMPTY)) ==> (r = (distance (p , v)))))))
T c= ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= f2 cdistance c, f3 b0 c/\ c= f2 cdistance c, f3 f0 ! c==> cIN b0 * * part cINSERT f1 part cEMPTY c= f2 cdistance c, f3 b0
+ ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))), ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4)))))))) ==> (p = pp))) /\ (((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END (pp = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))), ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) |- (((\r. ((r = (distance (pp , v1))) /\ ((r = (distance (pp , v2))) /\ ((r = (distance (pp , v3))) /\ (r = (distance (pp , v4))))))) r) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f0 c==> c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 f4 c/\ cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= f4 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> * / c/\ c= b0 cdistance c, f4 f0 c/\ c= b0 cdistance c, f4 f1 c/\ c= b0 cdistance c, f4 f2 c= b0 cdistance c, f4 f3 f5 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((!x. ((x IN P) = (P x))) ==> ((\x. ((x IN P) = (P x))) x)) = ((\x. ((x IN P) = (P x))) x))
T c= c==> ! c= cIN b0 f0 * f0 b0 * / c= cIN b0 f0 * f0 b0 f1 * / c= cIN b0 f0 * f0 b0 f1
- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) /\ (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)))
T c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((distance (pp , v1)) = p1), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- (((\p2. ((distance (pp , v2)) = p2)) p2) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f1 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cdistance c, f4 f0 f6 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 c==> * / c= cdistance c, f4 f1 b0 f7 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY
+ ((\c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) c) |- (((\c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) c) /\ F)
T c==> * / c? / c? / c? / c/\ c= creal_mul b1 creal_inv b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 b3 creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ * / c? / c? / c? / c/\ c= creal_mul b1 creal_inv b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 b3 creal_of_num cNUMERAL cBIT1 c_0 f2 cF
- (?c. (?a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((?c. (?a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) /\ F)
T c==> c? / c? / c? / c? / c/\ c= b1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c? / c/\ c= b1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 b3 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((\p'. (!q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (real_neg ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) ((real_mul ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_add ((real_mul (real_neg ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) ((real_mul ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (p' ==> q')))))) p')
T * / ! c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul creal_neg creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY b1 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_add creal_mul creal_neg creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> b0 b1 f5
+ ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))), (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v3))) /\ (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) /\ ((pp IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. ((r = (distance (pp , v1))) /\ ((r = (distance (pp , v2))) /\ ((r = (distance (pp , v3))) /\ (r = (distance (pp , v4))))))) /\ ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4)))))))) ==> (p = pp))) /\ (((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END (pp = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))))))), ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) |- ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f0 c==> c/\ c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f2 c/\ c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c/\ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / c/\ c= b0 cdistance c, f4 f0 c/\ c= b0 cdistance c, f4 f1 c/\ c= b0 cdistance c, f4 f2 c= b0 cdistance c, f4 f3 c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 f4 c/\ cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= f4 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) |- (!v. ((~ (collinear (_2178535 INSERT (_2178536 INSERT (_2178537 INSERT EMPTY))))) \/ (coplanar_alt (_2178535 INSERT (_2178536 INSERT (_2178537 INSERT (v INSERT EMPTY)))))))
T c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! c\/ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY
- ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp) |- (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp) /\ (?pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp)))
T c==> c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c? / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((r = (distance (pp , v4))) ==> (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))))
T c==> c= f0 cdistance c, f1 f2 c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4
+ |- ((((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) = ((~ (((real_lt (real_of_num (NUMERAL _0))) a) /\ (~ ((real_of_num (NUMERAL _0)) = a)))) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))))
T c= c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_of_num cNUMERAL c_0 f0 c= creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0 c\/ c~ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c~ c= creal_of_num cNUMERAL c_0 f0 c= creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0
- ((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((!v. ((v IN (v4 INSERT EMPTY)) ==> (r = (distance (p , v))))) = ((r = (distance (p , v4))) /\ (!v. ((v IN EMPTY) ==> (r = (distance (p , v)))))))
T c= ! c==> cIN b0 * * part cINSERT f0 part cEMPTY c= f1 cdistance c, f2 b0 c/\ c= f1 cdistance c, f2 f0 ! c==> cIN b0 part cEMPTY c= f1 cdistance c, f2 b0
- (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) |- ((?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) /\ F)
T c==> c? / c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 b0 creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))), (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) /\ ((pp IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. ((r = (distance (pp , v1))) /\ ((r = (distance (pp , v2))) /\ ((r = (distance (pp , v3))) /\ (r = (distance (pp , v4))))))) /\ ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4)))))))) ==> (p = pp))) /\ (((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END (pp = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))))), ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) |- ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f0 c==> c/\ c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c/\ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / c/\ c= b0 cdistance c, f4 f0 c/\ c= b0 cdistance c, f4 f1 c/\ c= b0 cdistance c, f4 f2 c= b0 cdistance c, f4 f3 c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 f4 c/\ cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= f4 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((!p'. (!q'. (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = p') ==> ((p' ==> (((real_le (radV (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (radV (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = p') ==> ((p' ==> (((real_le (radV (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (radV (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = p') ==> ((p' ==> (((real_le (radV (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (radV (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= creal_le cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> b0 b1 * / ! c==> c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= creal_le cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> b0 b1 f4 * / ! c==> c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= creal_le cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> b0 b1 f4
+ ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) |- (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) /\ ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4
+ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- (!p1. (((\p1. ((distance (pp , v1)) = p1)) p1) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f1 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 ! c==> * / c= cdistance c, f4 f0 b1 b0 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY
+ ((distance (pp , v1)) = p1), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1)
T c==> c= cdistance c, f0 f1 f2 c==> c= cradV * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cdistance c, f0 f1 c= cradV * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2
+ ((\r. (?b. (?c. (?a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))))) r) |- (((?b. (?c. (?a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F) = F)
T c==> * / c? / c? / c? / c? / c? / c/\ c= b3 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 b5 creal_of_num cNUMERAL cBIT1 c_0 f0 c= c==> c? / c? / c? / c? / c? / c/\ c= b2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b0 b1 creal_mul f0 b2 creal_mul b2 creal_sub f0 creal_mul creal_mul b0 b1 creal_inv b2 b4 creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- ((F = t) = (~ t))
T c= c= cF f0 c~ f0
+ (r = (distance (pp , v1))), (r = (distance (pp , v2))), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))), ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4)))))))) ==> (p = pp))) /\ (((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END (pp = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))), ((r = (distance (pp , v2))) /\ ((r = (distance (pp , v3))) /\ (r = (distance (pp , v4))))), ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) |- ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))
T c==> c= f0 cdistance c, f1 f2 c==> c= f0 cdistance c, f1 f3 c==> c= cradV * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cdistance c, f1 f2 c==> c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c? / c/\ c= b1 cdistance c, b0 f2 c/\ c= b1 cdistance c, b0 f3 c/\ c= b1 cdistance c, b0 f4 c= b1 cdistance c, b0 f5 c= b0 f1 c/\ cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= f1 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f2 cvector_add c% b7 f3 cvector_add c% b8 f4 c% b9 f5 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c/\ c= f0 cdistance c, f1 f3 c/\ c= f0 cdistance c, f1 f4 c= f0 cdistance c, f1 f5 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f3 f4 cdist3 f2 f4 cdist3 f2 f3 cradV * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ |- (!v1. (!v2. (!v3. (!v4. ((((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) /\ (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) /\ ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) /\ ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))))
T c==> c/\ c/\ c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((\pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp)) pp) ==> (?pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp))) = T)
T c= c==> * / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f4 c? / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cT
+ (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) |- (((!v3. (!v. ((~ (collinear (_2178535 INSERT (_2178536 INSERT (v3 INSERT EMPTY))))) \/ (coplanar_alt (_2178535 INSERT (_2178536 INSERT (v3 INSERT (v INSERT EMPTY)))))))) ==> ((\v3. (!v. ((~ (collinear (_2178535 INSERT (_2178536 INSERT (v3 INSERT EMPTY))))) \/ (coplanar_alt (_2178535 INSERT (_2178536 INSERT (v3 INSERT (v INSERT EMPTY)))))))) _2178537)) = ((\v3. (!v. ((~ (collinear (_2178535 INSERT (_2178536 INSERT (v3 INSERT EMPTY))))) \/ (coplanar_alt (_2178535 INSERT (_2178536 INSERT (v3 INSERT (v INSERT EMPTY)))))))) _2178537))
T c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= c==> ! ! c\/ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c\/ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 * / ! c\/ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
+ (r = (distance (pp , v4))) |- (((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> q')))) = ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> q'))))
T c==> c= f0 cdistance c, f1 f2 c= c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 f0 f6 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 f0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 cNUMERAL cBIT0 cBIT1 c_0 f6 c==> c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 f0 f6 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 f0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 cNUMERAL cBIT0 cBIT1 c_0 f6
- ((\p1. ((distance (pp , v1)) = p1)) p1) |- ((((distance (pp , v1)) = p1) ==> (?p1. ((distance (pp , v1)) = p1))) = (?p1. ((distance (pp , v1)) = p1)))
T c==> * / c= cdistance c, f0 f1 b0 f2 c= c==> c= cdistance c, f0 f1 f2 c? / c= cdistance c, f0 f1 b0 c? / c= cdistance c, f0 f1 b0
+ ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add ((real_mul a) z)) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> q')))) = ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> q'))))
T c= c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f4 f5 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f4 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f4 f5 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f4 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 f5
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ F)
T c==> c? / c? / c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((\a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) a) |- (((?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F) = F)
T c==> * / c? / c? / c/\ c= b0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 f1 creal_mul f2 b0 creal_mul b0 creal_sub f2 creal_mul creal_mul f0 f1 creal_inv b0 b2 creal_of_num cNUMERAL cBIT1 c_0 f3 c= c==> c? / c? / c/\ c= f3 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f3 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 f1 creal_mul f2 f3 creal_mul f3 creal_sub f2 creal_mul creal_mul f0 f1 creal_inv f3 b1 creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?r. t) = t)
T c= c? / f0 f0
+ ((\a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) a) |- (((\a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) a) /\ F)
T c==> * / c? / c? / c/\ c= creal_mul b0 creal_inv b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 f1 creal_mul f2 b0 creal_mul b0 creal_sub f2 creal_mul creal_mul f0 f1 creal_inv b0 b2 creal_of_num cNUMERAL cBIT1 c_0 f3 c/\ * / c? / c? / c/\ c= creal_mul b0 creal_inv b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 f1 creal_mul f2 b0 creal_mul b0 creal_sub f2 creal_mul creal_mul f0 f1 creal_inv b0 b2 creal_of_num cNUMERAL cBIT1 c_0 f3 cF
+ |- (((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) = (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c)))))
T c= c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2
+ |- ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (?z. (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0)))))) = (?z. (((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c? / c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 b0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r))) = (p' ==> q'))))
T c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> f3 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 f5 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 c==> f3 f5
+ |- (((!b. (!c. (!a. ((~ (((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))))))) ==> ((\b. (!c. (!a. ((~ (((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))))))) b)) = ((\b. (!c. (!a. ((~ (((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))))))) b))
T c= c==> ! ! ! c\/ c~ c= creal_mul b2 creal_inv b2 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b2 c= creal_of_num cNUMERAL c_0 b2 c= creal_add creal_mul creal_neg b0 b1 creal_mul f0 b2 creal_mul b2 creal_sub f0 creal_mul creal_mul b0 b1 creal_inv b2 * / ! ! c\/ c~ c= creal_mul b2 creal_inv b2 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b2 c= creal_of_num cNUMERAL c_0 b2 c= creal_add creal_mul creal_neg b0 b1 creal_mul f0 b2 creal_mul b2 creal_sub f0 creal_mul creal_mul b0 b1 creal_inv b2 f1 * / ! ! c\/ c~ c= creal_mul b2 creal_inv b2 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b2 c= creal_of_num cNUMERAL c_0 b2 c= creal_add creal_mul creal_neg b0 b1 creal_mul f0 b2 creal_mul b2 creal_sub f0 creal_mul creal_mul b0 b1 creal_inv b2 f1
+ |- ((\p'. (!q'. ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)) = (p' ==> q')))))) p')
T * / ! c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f4 b1 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f4 c==> b0 b1 f5
- |- (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
+ |- (((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> F) = ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))))
T c= c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (radV (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (r = (distance (pp , v1))), ((distance (pp , v1)) = p1) |- ((((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> c= f0 cdistance c, f1 f2 c==> c= cdistance c, f1 f2 f3 c= c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f6 f7 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f6 f7 cdist3 f2 f7 cdist3 f2 f6 cradV * * part cINSERT f2 * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f6 f7 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f6 f7 cdist3 f2 f7 cdist3 f2 f6 cradV * * part cINSERT f2 * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY
+ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((distance (pp , v1)) = p1), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- (((!x. (((\p2. ((distance (pp , v2)) = p2)) x) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((?p2. ((distance (pp , v2)) = p2)) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) = ((?p2. ((distance (pp , v2)) = p2)) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f1 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cdistance c, f4 f0 f6 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 c= c==> ! c==> * / c= cdistance c, f4 f1 b1 b0 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c==> c? / c= cdistance c, f4 f1 b0 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c==> c? / c= cdistance c, f4 f1 b0 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY
+ |- (((?p3. ((distance (pp , v3)) = p3)) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c= c==> c? / c= cdistance c, f0 f1 b0 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f5 f1 cdist3 f4 f1 cdist3 f4 f5 cradV * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f6 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f5 f1 cdist3 f4 f1 cdist3 f4 f5 cradV * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f1 * * part cINSERT f6 part cEMPTY
- (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c? / c? / c? / c/\ c= creal_mul b0 creal_inv b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 f1 creal_mul f2 b0 creal_mul b0 creal_sub f2 creal_mul creal_mul f0 f1 creal_inv b0 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= creal_mul b0 creal_inv b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 f1 creal_mul f2 b0 creal_mul b0 creal_sub f2 creal_mul creal_mul f0 f1 creal_inv b0 b2 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((\P. (!x. ((x IN P) = (P x)))) P)
T * / ! c= cIN b1 b0 * b0 b1 f0
+ (r = (distance (pp , v4))) |- (((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))) = ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))))
T c==> c= f0 cdistance c, f1 f2 c= c==> c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 f0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 f0 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 f0 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2
+ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((distance (pp , v1)) = p1), ((distance (pp , v2)) = p2), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f1 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cdistance c, f4 f0 f6 c==> c= cdistance c, f4 f1 f7 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> q')))
T c==> c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f5 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f5
+ |- (((!y. (((real_lt (real_of_num (NUMERAL _0))) x) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) y)))) ==> ((\y. (((real_lt (real_of_num (NUMERAL _0))) x) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) y)))) y)) = ((\y. (((real_lt (real_of_num (NUMERAL _0))) x) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) y)))) y))
T c= c==> ! c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 creal_le creal_of_num cNUMERAL c_0 b0 * / c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 creal_le creal_of_num cNUMERAL c_0 b0 f1 * / c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 creal_le creal_of_num cNUMERAL c_0 b0 f1
- |- ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) = (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))))
T c= c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F) = F)
T c= c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 cF cF
+ (!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) |- (!a. (!b. (((~ ((real_le (real_of_num (NUMERAL _0))) a)) \/ (~ ((real_le (real_of_num (NUMERAL _0))) b))) \/ ((((real_le a) b) \/ (~ ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) /\ ((~ ((real_le a) b)) \/ ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))))
T c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 ! ! c\/ c\/ c~ creal_le creal_of_num cNUMERAL c_0 b0 c~ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c\/ creal_le b0 b1 c~ creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c\/ c~ creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)) = (p' ==> q'))))
T c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c==> f4 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f0 f5 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f0 c==> f4 f5
- |- ((((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) = (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c= c==> c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((distance (pp , v1)) = p1), ((distance (pp , v3)) = p3), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cdistance c, f4 f0 f6 c==> c= cdistance c, f4 f2 f7 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY
+ |- ((\y. (((real_lt (real_of_num (NUMERAL _0))) x) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) y)))) y)
T * / c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 creal_le creal_of_num cNUMERAL c_0 b0 f1
+ (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) |- (!v1. (!v2. (!v3. ((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) \/ (!v. (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY))))))))))
T c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! ! ! c\/ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
+ |- ((\q'. ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (p' ==> q'))))) q')
T * / c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c==> f4 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY b0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c==> f4 b0 f6
+ |- (((r = (distance (pp , v4))) = p') ==> ((p' ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = r) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)))) = q')) ==> (((r = (distance (pp , v4))) ==> (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = r) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r))))) = (p' ==> q'))))
T c==> c= c= f0 cdistance c, f1 f2 f3 c==> c==> f3 c= c==> c= cradV * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f2 part cEMPTY f0 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f6 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f5 f6 cdist3 f4 f6 cdist3 f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f5 f6 cdist3 f4 f6 cdist3 f4 f5 f0 f7 c= c==> c= f0 cdistance c, f1 f2 c==> c= cradV * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f2 part cEMPTY f0 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f6 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f5 f6 cdist3 f4 f6 cdist3 f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f5 f6 cdist3 f4 f6 cdist3 f4 f5 f0 c==> f3 f7
+ |- ((a /\ (b /\ c)) = ((a /\ b) /\ c))
T c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2
+ |- ((!b. (!a. (((a /\ b) /\ T) = (a /\ (b /\ T))))) = ((!a. (((a /\ T) /\ T) = (a /\ (T /\ T)))) /\ (!a. (((a /\ F) /\ T) = (a /\ (F /\ T))))))
T c= ! ! c= c/\ c/\ b1 b0 cT c/\ b1 c/\ b0 cT c/\ ! c= c/\ c/\ b0 cT cT c/\ b0 c/\ cT cT ! c= c/\ c/\ b0 cF cT c/\ b0 c/\ cF cT
- |- ((!v3'. ((~ (collinear (v1 INSERT (v2 INSERT (v3' INSERT EMPTY))))) \/ (!v. (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))) = ((!v3. (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) \/ (!v. (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY))))))))
T c= ! c\/ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ! ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c\/ ! c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY ! ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY
+ (r = (distance (pp , v1))), ((distance (pp , v1)) = p1) |- ((((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> c= f0 cdistance c, f1 f2 c==> c= cdistance c, f1 f2 f3 c= c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f6 f7 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f6 f7 cdist3 f2 f7 cdist3 f2 f6 cradV * * part cINSERT f2 * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f6 f7 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f6 f7 cdist3 f2 f7 cdist3 f2 f6 cradV * * part cINSERT f2 * * part cINSERT f6 * * part cINSERT f7 * * part cINSERT f8 part cEMPTY
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_mul (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> q')))
T c==> c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_mul cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f5 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_mul cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f5
+ |- (((!x. (((\a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) x) ==> F)) ==> ((?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F)) = ((?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c/\ c= creal_mul b1 creal_inv b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 f1 creal_mul f2 b1 creal_mul b1 creal_sub f2 creal_mul creal_mul f0 f1 creal_inv b1 b3 creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c/\ c= creal_mul b0 creal_inv b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 f1 creal_mul f2 b0 creal_mul b0 creal_sub f2 creal_mul creal_mul f0 f1 creal_inv b0 b2 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c/\ c= creal_mul b0 creal_inv b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 f1 creal_mul f2 b0 creal_mul b0 creal_sub f2 creal_mul creal_mul f0 f1 creal_inv b0 b2 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (radV (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))) = (!v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> ((real_le (radV (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))))
T c= ! ! ! ! c==> c/\ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_le cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! ! ! ! c==> c/\ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
+ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- ((((\p1. ((distance (pp , v1)) = p1)) p1) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = T)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f1 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 c= c==> * / c= cdistance c, f4 f0 b0 f6 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cT
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))), ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4)))))))) ==> (p = pp))) /\ (((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END (pp = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))), ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) |- (((!x. (((\r. ((r = (distance (pp , v1))) /\ ((r = (distance (pp , v2))) /\ ((r = (distance (pp , v3))) /\ (r = (distance (pp , v4))))))) x) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) ==> ((?r. ((r = (distance (pp , v1))) /\ ((r = (distance (pp , v2))) /\ ((r = (distance (pp , v3))) /\ (r = (distance (pp , v4))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = ((?r. ((r = (distance (pp , v1))) /\ ((r = (distance (pp , v2))) /\ ((r = (distance (pp , v3))) /\ (r = (distance (pp , v4))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f0 c==> c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 f4 c/\ cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= f4 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> ! c==> * / c/\ c= b1 cdistance c, f4 f0 c/\ c= b1 cdistance c, f4 f1 c/\ c= b1 cdistance c, f4 f2 c= b1 cdistance c, f4 f3 b0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b0 cdistance c, f4 f0 c/\ c= b0 cdistance c, f4 f1 c/\ c= b0 cdistance c, f4 f2 c= b0 cdistance c, f4 f3 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c/\ c= b0 cdistance c, f4 f0 c/\ c= b0 cdistance c, f4 f1 c/\ c= b0 cdistance c, f4 f2 c= b0 cdistance c, f4 f3 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) |- (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4
+ |- ((\p'. (!q'. (((r = (distance (pp , v4))) = p') ==> ((p' ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = r) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)))) = q')) ==> (((r = (distance (pp , v4))) ==> (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = r) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r))))) = (p' ==> q')))))) p')
T * / ! c==> c= c= f0 cdistance c, f1 f2 b0 c==> c==> b0 c= c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f0 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 f0 b1 c= c==> c= f0 cdistance c, f1 f2 c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f0 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 f0 c==> b0 b1 f6
+ (~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) |- (((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))) ==> F)
T c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 cF
+ ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) |- (((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)))) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1))))) = ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= c==> c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4
- ((distance (pp , v3)) = p3), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v3))) |- ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p3)
T c==> c= cdistance c, f0 f1 f2 c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY cdistance c, f0 f1 c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f2
+ (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))), ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4)))))))) ==> (p = pp))) /\ (((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END (pp = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))), ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) |- ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))
T c==> c= f0 cdistance c, f1 f2 c==> c= f0 cdistance c, f1 f3 c==> c= f0 cdistance c, f1 f4 c==> c= f0 cdistance c, f1 f5 c==> c= cradV * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cdistance c, f1 f2 c==> c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c? / c/\ c= b1 cdistance c, b0 f2 c/\ c= b1 cdistance c, b0 f3 c/\ c= b1 cdistance c, b0 f4 c= b1 cdistance c, b0 f5 c= b0 f1 c/\ cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= f1 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f2 cvector_add c% b7 f3 cvector_add c% b8 f4 c% b9 f5 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f3 f4 cdist3 f2 f4 cdist3 f2 f3 cradV * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- ((real_lt (real_of_num (NUMERAL _0))) y) |- (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) x))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul f1 f0 creal_le creal_of_num cNUMERAL c_0 f1
+ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((distance (pp , v1)) = p1), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f1 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cdistance c, f4 f0 f6 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY
+ |- (((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> q')))) = ((((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> q'))))
T c= c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_pow ceta_y cdist3 f4 f2 cdist3 f4 f3 cdist3 f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> creal_le creal_pow ceta_y cdist3 f4 f2 cdist3 f4 f3 cdist3 f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cdistance c, f0 f1 f5 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cdistance c, f0 f1 c==> creal_le creal_pow ceta_y cdist3 f4 f2 cdist3 f4 f3 cdist3 f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c==> creal_le creal_pow ceta_y cdist3 f4 f2 cdist3 f4 f3 cdist3 f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cdistance c, f0 f1 f5 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cdistance c, f0 f1 c==> creal_le creal_pow ceta_y cdist3 f4 f2 cdist3 f4 f3 cdist3 f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 f5
+ |- (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1))))
T c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4
- |- ((!a'. ((~ (a = (real_of_num (NUMERAL _0)))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a')) \/ ((real_of_num (NUMERAL _0)) = a')) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a')) = ((real_mul a') ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a')))))))) = ((~ (a = (real_of_num (NUMERAL _0)))) \/ (!a. (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))))))
T c= ! c\/ c~ c= f0 creal_of_num cNUMERAL c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_of_num cNUMERAL c_0 b0 c= creal_add creal_mul creal_neg f1 f2 creal_mul f3 b0 creal_mul b0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv b0 c\/ c~ c= f0 creal_of_num cNUMERAL c_0 ! c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_of_num cNUMERAL c_0 b0 c= creal_add creal_mul creal_neg f1 f2 creal_mul f3 b0 creal_mul b0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv b0
+ |- ((((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (!w. (((v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))) w) ==> ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , w))))))) /\ ((pp IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (pp , v)))))) /\ ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = pp))) /\ ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END (pp = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> c/\ c/\ c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 b0 c/\ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / ! c==> cIN b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b0 cdistance c, f4 b1 c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 f4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= f4 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\v2. (!v1. ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F))))))) v2)
T * / ! c==> c~ c==> creal_le creal_pow ceta_y cdist3 b1 b0 cdist3 b1 f0 cdist3 b0 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 b1 b0 cdist3 b1 f0 cdist3 b0 f0 cdistance c, f1 f2 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b2 b2 cdist3 b2 b2 cdist3 b2 b2 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le creal_of_num cNUMERAL c_0 b3 c= creal_le b2 b3 creal_le creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b3 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b2 b3 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b2 b3 cF f3
+ |- (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) /\ ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))) = ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4)))))
T c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4
- ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) |- (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) /\ ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c/\ c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3
+ |- ((!b. (!a. ((a ==> (b ==> T)) = ((a /\ b) ==> T)))) = ((!a. ((a ==> (T ==> T)) = ((a /\ T) ==> T))) /\ (!a. ((a ==> (F ==> T)) = ((a /\ F) ==> T)))))
T c= ! ! c= c==> b1 c==> b0 cT c==> c/\ b1 b0 cT c/\ ! c= c==> b0 c==> cT cT c==> c/\ b0 cT cT ! c= c==> b0 c==> cF cT c==> c/\ b0 cF cT
- |- (((!v1. (!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)))) ==> ((\v1. (!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)))) v1)) = ((\v1. (!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)))) v1))
T c= c==> ! ! c==> c~ c==> c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar_alt * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF * / ! c==> c~ c==> c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar_alt * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF f2 * / ! c==> c~ c==> c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar_alt * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF f2
- ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp) |- ((\pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp)) pp)
T c==> c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 * / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f4
- |- (!v3. (!v2. (!v1. (!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (~ (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY))))))))))))))))
T c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
+ |- ((\c. (!a. ((~ (a = (real_of_num (NUMERAL _0)))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a))))))))) c)
T * / ! c\/ c~ c= b1 creal_of_num cNUMERAL c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_of_num cNUMERAL c_0 b1 c= creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- ((((~ (a = (real_of_num (NUMERAL _0)))) ==> (((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0))))) ==> (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a))))))) = (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))))
T c= c==> c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_of_num cNUMERAL c_0 f0 c= creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_of_num cNUMERAL c_0 f0 c= creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0
+ |- ((\c. (!b. (!a. ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)))) c)
T * / ! ! c==> c~ c= c/\ b2 c/\ b1 b0 c/\ c/\ b2 b1 b0 cF f0
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- ((!v1. (!v2. (!v3. (!v4. ((((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) /\ (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , v)))))) /\ ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = (circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) /\ ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))) = (!v1. (!v2. (!v3. (!v4. (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))))
T c= ! ! ! ! c==> c/\ c/\ c/\ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN ccircumcenter * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c? / ! c==> cIN b5 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b4 cdistance c, ccircumcenter * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b5 c/\ ! c==> c/\ cIN b4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c? / ! c==> cIN b6 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b5 cdistance c, b4 b6 c= b4 ccircumcenter * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= ccircumcenter * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b4 b5 b6 b7 b8 b9 cvector_add c% b10 b0 cvector_add c% b11 b1 cvector_add c% b12 b2 c% b13 b3 cchi b9 b8 b6 b7 b5 b4 cchi b9 b5 b7 b6 b8 b4 cchi b4 b8 b7 b6 b5 b9 cchi b4 b5 b6 b7 b8 b9 creal_pow cdistance c, b2 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b1 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b1 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 b3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 b2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 b1 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_le ceta_y cdist3 b1 b2 cdist3 b0 b2 cdist3 b0 b1 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! ! ! ! c==> c/\ c/\ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_le ceta_y cdist3 b1 b2 cdist3 b0 b2 cdist3 b0 b1 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
- |- ((((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)) ==> ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))) ==> (((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)) ==> ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))))
T c==> c==> c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
+ |- ((((\r. (?b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))))) r) ==> F) = T)
T c= c==> * / c? / c? / c? / c? / c? / c/\ c= creal_mul b3 creal_inv b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 b5 creal_of_num cNUMERAL cBIT1 c_0 f0 cF cT
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
+ (!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) |- (((!b. ((((~ ((real_le (real_of_num (NUMERAL _0))) _2178550)) \/ (~ ((real_le (real_of_num (NUMERAL _0))) b))) \/ (((real_le _2178550) b) \/ (~ ((real_le ((real_pow _2178550) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (((~ ((real_le (real_of_num (NUMERAL _0))) _2178550)) \/ (~ ((real_le (real_of_num (NUMERAL _0))) b))) \/ ((~ ((real_le _2178550) b)) \/ ((real_le ((real_pow _2178550) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((\b. ((((~ ((real_le (real_of_num (NUMERAL _0))) _2178550)) \/ (~ ((real_le (real_of_num (NUMERAL _0))) b))) \/ (((real_le _2178550) b) \/ (~ ((real_le ((real_pow _2178550) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (((~ ((real_le (real_of_num (NUMERAL _0))) _2178550)) \/ (~ ((real_le (real_of_num (NUMERAL _0))) b))) \/ ((~ ((real_le _2178550) b)) \/ ((real_le ((real_pow _2178550) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) _2178551)) = ((\b. ((((~ ((real_le (real_of_num (NUMERAL _0))) _2178550)) \/ (~ ((real_le (real_of_num (NUMERAL _0))) b))) \/ (((real_le _2178550) b) \/ (~ ((real_le ((real_pow _2178550) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0)))))))) /\ (((~ ((real_le (real_of_num (NUMERAL _0))) _2178550)) \/ (~ ((real_le (real_of_num (NUMERAL _0))) b))) \/ ((~ ((real_le _2178550) b)) \/ ((real_le ((real_pow _2178550) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) _2178551))
T c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c= c==> ! c/\ c\/ c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 b0 c\/ creal_le f0 b0 c~ creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 b0 c\/ c~ creal_le f0 b0 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 * / c/\ c\/ c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 b0 c\/ creal_le f0 b0 c~ creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 b0 c\/ c~ creal_le f0 b0 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 f1 * / c/\ c\/ c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 b0 c\/ creal_le f0 b0 c~ creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c\/ c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 b0 c\/ c~ creal_le f0 b0 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 f1
+ (~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) |- ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) /\ F)
T c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c/\ c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 cF
+ (!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))), (!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))), (~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) |- ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) /\ ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> (~ (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))))))
T c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c/\ ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c~ ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1
+ |- (((!q'. ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)) = (p' ==> q'))))) ==> ((\q'. ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)) = (p' ==> q'))))) q')) = ((\q'. ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c==> f4 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f0 b0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f0 c==> f4 b0 * / c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c==> f4 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f0 b0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f0 c==> f4 b0 f5 * / c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 f4 c==> c==> f4 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f0 b0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 f0 c==> f4 b0 f5
+ (r = (distance (pp , v2))), ((distance (pp , v2)) = p2) |- ((((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> c= f0 cdistance c, f1 f2 c==> c= cdistance c, f1 f2 f3 c= c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f2 f6 cdist3 f5 f6 cdist3 f5 f2 cradV * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f2 f6 cdist3 f5 f6 cdist3 f5 f2 cradV * * part cINSERT f5 * * part cINSERT f2 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
+ (r = (distance (pp , v4))) |- ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))
T c==> c= f0 cdistance c, f1 f2 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 f0 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2
- (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))), (~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))
T c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))) = T)
T c= ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 f0 f1 cdist3 f0 b0 cdist3 f1 b0 cT
+ |- (((!r. (!b. (!c. (!a. ((~ (((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a))))))))))) ==> ((\r. (!b. (!c. (!a. ((~ (((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a))))))))))) r)) = ((\r. (!b. (!c. (!a. ((~ (((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a))))))))))) r))
T c= c==> ! ! ! ! c\/ c~ c= creal_mul b3 creal_inv b3 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_of_num cNUMERAL c_0 b3 c= creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 * / ! ! ! c\/ c~ c= creal_mul b3 creal_inv b3 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_of_num cNUMERAL c_0 b3 c= creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 f0 * / ! ! ! c\/ c~ c= creal_mul b3 creal_inv b3 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_of_num cNUMERAL c_0 b3 c= creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 f0
- ((~ (a ==> (b ==> a))) ==> F) |- (((~ (a ==> (b ==> a))) ==> F) /\ ((~ (a ==> (b ==> a))) ==> F))
T c==> c==> c~ c==> f0 c==> f1 f0 cF c/\ c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF
+ ((\z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) z') |- (((\z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) z') /\ F)
T c==> * / c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 b0 creal_of_num cNUMERAL cBIT1 c_0 f5 c/\ * / c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 b0 creal_of_num cNUMERAL cBIT1 c_0 f5 cF
- |- ((((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F))))) ==> ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F)))))) = ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F))))))
T c= c==> c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 cF c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 cF c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 cF
+ |- (((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> q')))) = ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> q'))))
T c= c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f5 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f5 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 f5
- (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))), (~ F), (~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- ((~ F) /\ F)
T c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> c~ cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cF cF
+ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((distance (pp , v1)) = p1), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))), ((\p2. ((distance (pp , v2)) = p2)) p2) |- (((\p2. ((distance (pp , v2)) = p2)) p2) /\ (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f1 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cdistance c, f4 f0 f6 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 c==> * / c= cdistance c, f4 f1 b0 f7 c/\ * / c= cdistance c, f4 f1 b0 f7 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY
+ |- (((!c. (!a. ((~ (a = (real_of_num (NUMERAL _0)))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a))))))))) ==> ((\c. (!a. ((~ (a = (real_of_num (NUMERAL _0)))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a))))))))) c)) = ((\c. (!a. ((~ (a = (real_of_num (NUMERAL _0)))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a))))))))) c))
T c= c==> ! ! c\/ c~ c= b1 creal_of_num cNUMERAL c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_of_num cNUMERAL c_0 b1 c= creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 * / ! c\/ c~ c= b1 creal_of_num cNUMERAL c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_of_num cNUMERAL c_0 b1 c= creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 f2 * / ! c\/ c~ c= b1 creal_of_num cNUMERAL c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_of_num cNUMERAL c_0 b1 c= creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 f2
+ ((\b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) b) |- (((\b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) b) /\ F)
T c==> * / c? / c? / c? / c? / c/\ c= creal_mul b2 creal_inv b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b0 b1 creal_mul f0 b2 creal_mul b2 creal_sub f0 creal_mul creal_mul b0 b1 creal_inv b2 b4 creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ * / c? / c? / c? / c? / c/\ c= creal_mul b2 creal_inv b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b0 b1 creal_mul f0 b2 creal_mul b2 creal_sub f0 creal_mul creal_mul b0 b1 creal_inv b2 b4 creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))), (~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (_2178538 INSERT EMPTY)))))
T c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
- (((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ |- (((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) = ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1)) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1))) = q')) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)))) = (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) ==> q')))) = ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1))) = q')) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)))) = (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) ==> q'))))
T c= c==> c= c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 f6 c= c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 f6 c==> c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 f6 c= c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 f6
+ |- ((\pp. (!v3. (!v2. (!v1. ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F))))))))) pp)
T * / ! ! ! c==> c~ c==> creal_le creal_pow ceta_y cdist3 b3 b2 cdist3 b3 b1 cdist3 b2 b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, b0 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 b3 b2 cdist3 b3 b1 cdist3 b2 b1 cdistance c, b0 f0 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b4 b4 cdist3 b4 b4 cdist3 b4 b4 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b4 creal_le creal_of_num cNUMERAL c_0 b5 c= creal_le b4 b5 creal_le creal_pow b4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b5 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b4 b5 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b4 b5 cF f1
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (r = (distance (pp , v4))) |- (((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r) = ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) = ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))
T c==> c= f0 cdistance c, f1 f2 c= c==> c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 f0 creal_le ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 cdistance c, f1 f2 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 f0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 cdistance c, f1 f2 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 f0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f3 f4 cdist3 f5 f4 cdist3 f5 f3 cdistance c, f1 f2
+ (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))), (~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) |- (((real_le (real_of_num (NUMERAL _0))) (distance (pp , v4))) /\ ((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c/\ creal_le creal_of_num cNUMERAL c_0 cdistance c, f3 f4 creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0
+ ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))), ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4)))))))) ==> (p = pp))) /\ (((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END (pp = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))), ((r = (distance (pp , v1))) /\ ((r = (distance (pp , v2))) /\ ((r = (distance (pp , v3))) /\ (r = (distance (pp , v4)))))), ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) |- (((r = (distance (pp , v1))) /\ ((r = (distance (pp , v2))) /\ ((r = (distance (pp , v3))) /\ (r = (distance (pp , v4)))))) /\ ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f0 c==> c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 f4 c/\ cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= f4 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c= f5 cdistance c, f4 f0 c/\ c= f5 cdistance c, f4 f1 c/\ c= f5 cdistance c, f4 f2 c= f5 cdistance c, f4 f3 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c/\ c/\ c= f5 cdistance c, f4 f0 c/\ c= f5 cdistance c, f4 f1 c/\ c= f5 cdistance c, f4 f2 c= f5 cdistance c, f4 f3 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) |- (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 _2178547) _2178548)) ((dist3 _2178547) v3)) ((dist3 _2178548) v3))))
T c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 f0 f1 cdist3 f0 b0 cdist3 f1 b0
- |- (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp) = ((\pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp)) pp))
T c= c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 * / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f4
- (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((distance (pp , v1)) = p1), ((distance (pp , v2)) = p2), ((distance (pp , v3)) = p3), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- (((((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((distance (pp , v3)) = p3) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) = (((distance (pp , v3)) = p3) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f1 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cdistance c, f4 f0 f6 c==> c= cdistance c, f4 f1 f7 c==> c= cdistance c, f4 f2 f8 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 c= c==> c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f8 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c==> c= cdistance c, f4 f2 f8 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f8 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c==> c= cdistance c, f4 f2 f8 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f8 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY
- (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) = F)
T c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1), ((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4
- |- (((~ ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) ==> (((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) = F)) = (((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) = F))
T c= c==> c~ c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 cF
- (!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))), (~ ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))) |- ((~ ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))) /\ ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))))
T c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> c~ creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 c/\ c~ creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2
+ |- (((!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) x) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) y))))) ==> ((\x. (!y. (((real_lt (real_of_num (NUMERAL _0))) x) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) y))))) x)) = ((\x. (!y. (((real_lt (real_of_num (NUMERAL _0))) x) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) y))))) x))
T c= c==> ! ! c==> creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 creal_le creal_of_num cNUMERAL c_0 b1 * / ! c==> creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 creal_le creal_of_num cNUMERAL c_0 b1 f0 * / ! c==> creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 creal_le creal_of_num cNUMERAL c_0 b1 f0
+ |- ((\p'. (!q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1))) = (p' ==> q')))))) p')
T * / ! c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 b1 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 c==> b0 b1 f5
+ |- ((!b. (!a. ((a /\ (b /\ T)) = ((a /\ b) /\ T)))) = ((!a. ((a /\ (T /\ T)) = ((a /\ T) /\ T))) /\ (!a. ((a /\ (F /\ T)) = ((a /\ F) /\ T)))))
T c= ! ! c= c/\ b1 c/\ b0 cT c/\ c/\ b1 b0 cT c/\ ! c= c/\ b0 c/\ cT cT c/\ c/\ b0 cT cT ! c= c/\ b0 c/\ cF cT c/\ c/\ b0 cF cT
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- (!v1. (!v2. (!v3. (!v4. ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (radV (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))))
T c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((!a'. ((~ (((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a')) \/ ((real_of_num (NUMERAL _0)) = a')) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a')) = ((real_mul a') ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a')))))))) = ((~ (((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (!a. (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))))))
T c= ! c\/ c~ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_of_num cNUMERAL c_0 b0 c= creal_add creal_mul creal_neg f1 f2 creal_mul f3 b0 creal_mul b0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv b0 c\/ c~ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 ! c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_of_num cNUMERAL c_0 b0 c= creal_add creal_mul creal_neg f1 f2 creal_mul f3 b0 creal_mul b0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv b0
+ |- ((!b. ((F ==> b) ==> (F = (F /\ b)))) = (((F ==> T) ==> (F = (F /\ T))) /\ ((F ==> F) ==> (F = (F /\ F)))))
T c= ! c==> c==> cF b0 c= cF c/\ cF b0 c/\ c==> c==> cF cT c= cF c/\ cF cT c==> c==> cF cF c= cF c/\ cF cF
- |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) ==> (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)))
T c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
+ |- (((!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) ==> ((\y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) y)) = ((\y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) y))
T c= c==> ! ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 * / ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 f1 * / ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 f1
+ ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) |- (((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)))) = ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= c==> c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4
+ (~ (((real_le (real_of_num (NUMERAL _0))) ((real_sub a) b)) = ((real_le b) a))) |- ((((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0)))))
T c==> c~ c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0 c\/ c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((~ (((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a))))))) = (((~ (a = (real_of_num (NUMERAL _0)))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a))))))) /\ ((~ (((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))))))
T c= c\/ c~ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_of_num cNUMERAL c_0 f0 c= creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0 c/\ c\/ c~ c= f0 creal_of_num cNUMERAL c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_of_num cNUMERAL c_0 f0 c= creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0 c\/ c~ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_of_num cNUMERAL c_0 f0 c= creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0
+ |- ((((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (!w. (((v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))) w) ==> ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , w)))))) ==> ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (!w. (((v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))) w) ==> ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , w)))))))) = ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (!w. (((v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))) w) ==> ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) , w))))))))
T c= c==> c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
- ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F) |- (((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F) /\ ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F))
T c==> c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c/\ c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF
+ |- ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> F)
T c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 cF
+ (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) /\ (((real_le (radV (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_le cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (r = (distance (pp , v1))), (r = (distance (pp , v4))), ((distance (pp , v1)) = p1), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> c= f0 cdistance c, f1 f2 c==> c= f0 cdistance c, f1 f3 c==> c= cdistance c, f1 f2 f4 c==> c= cradV * * part cINSERT f2 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f3 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f2 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f6 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f5 f6 cdist3 f2 f6 cdist3 f2 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f5 f6 cdist3 f2 f6 cdist3 f2 f5 cradV * * part cINSERT f2 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f3 part cEMPTY
+ |- ((\b. (!c. (!a. ((~ (((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0))))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))))))) b)
T * / ! ! c\/ c~ c= creal_mul b2 creal_inv b2 creal_of_num cNUMERAL cBIT1 c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 b2 c= creal_of_num cNUMERAL c_0 b2 c= creal_add creal_mul creal_neg b0 b1 creal_mul f0 b2 creal_mul b2 creal_sub f0 creal_mul creal_mul b0 b1 creal_inv b2 f1
+ (r = (distance (pp , v4))) |- ((r = (distance (pp , v4))) /\ ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = r) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)))) = (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))))
T c==> c= f0 cdistance c, f1 f2 c/\ c= f0 cdistance c, f1 f2 c= c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f0 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 f0 c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((distance (pp , v3)) = p3) |- ((((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> c= cdistance c, f0 f1 f2 c= c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f6 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f6 f1 cdist3 f5 f1 cdist3 f5 f6 cradV * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f1 * * part cINSERT f7 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f6 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f6 f1 cdist3 f5 f1 cdist3 f5 f6 cradV * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f1 * * part cINSERT f7 part cEMPTY
+ |- (((~ q) = (?r. (?b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> q)
T c==> c= c~ f0 c? / c? / c? / c? / c? / c? / c/\ c= creal_mul b3 creal_inv b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 b5 creal_of_num cNUMERAL cBIT1 c_0 f0
- ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (!w. (((v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))) w) ==> ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , w))))))) /\ ((pp IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ ((?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (pp , v)))))) /\ ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. (!v. ((v IN (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) ==> (r = (distance (p , v))))))) ==> (p = pp))) /\ ((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END (pp = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ c/\ c/\ c= cCARD * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c= cradV * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cdistance c, f0 b0 c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c? / ! c==> cIN b1 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= b0 cdistance c, f0 b1 c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c? / ! c==> cIN b2 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= b1 cdistance c, b0 b2 c= b0 f0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= f0 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f1 cvector_add c% b7 f2 cvector_add c% b8 f3 c% b9 f4 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le ceta_y cdist3 f2 f3 cdist3 f1 f3 cdist3 f1 f2 cradV * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))), ((!p. (((p IN ((hull affine) (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (?r. ((r = (distance (p , v1))) /\ ((r = (distance (p , v2))) /\ ((r = (distance (p , v3))) /\ (r = (distance (p , v4)))))))) ==> (p = pp))) /\ (((LET (\x12. (LET_END ((LET (\x13. (LET_END ((LET (\x14. (LET_END ((LET (\x23. (LET_END ((LET (\x24. (LET_END ((LET (\x34. (LET_END ((LET (\chi11. (LET_END ((LET (\chi22. (LET_END ((LET (\chi33. (LET_END ((LET (\chi44. (LET_END (pp = ((% ((real_div (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((((((delta x12) x13) x14) x23) x24) x34)))) ((vector_add ((% chi11) v1)) ((vector_add ((% chi22) v2)) ((vector_add ((% chi33) v3)) ((% chi44) v4))))))))) ((((((chi x34) x24) x14) x23) x13) x12))))) ((((((chi x34) x13) x23) x14) x24) x12))))) ((((((chi x12) x24) x23) x14) x13) x34))))) ((((((chi x12) x13) x14) x23) x24) x34))))) ((real_pow (distance (v3 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v4))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))), ((r = (distance (pp , v1))) /\ ((r = (distance (pp , v2))) /\ ((r = (distance (pp , v3))) /\ (r = (distance (pp , v4)))))), ((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow (distance (pp , v1))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) |- ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f0 c==> c/\ ! c==> c/\ cIN b0 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ c= b1 cdistance c, b0 f0 c/\ c= b1 cdistance c, b0 f1 c/\ c= b1 cdistance c, b0 f2 c= b1 cdistance c, b0 f3 c= b0 f4 c/\ cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c= f4 c% creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdelta b0 b1 b2 b3 b4 b5 cvector_add c% b6 f0 cvector_add c% b7 f1 cvector_add c% b8 f2 c% b9 f3 cchi b5 b4 b2 b3 b1 b0 cchi b5 b1 b3 b2 b4 b0 cchi b0 b4 b3 b2 b1 b5 cchi b0 b1 b2 b3 b4 b5 creal_pow cdistance c, f2 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c= f5 cdistance c, f4 f0 c/\ c= f5 cdistance c, f4 f1 c/\ c= f5 cdistance c, f4 f2 c= f5 cdistance c, f4 f3 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow cdistance c, f4 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((!q'. ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = (p' ==> q'))))) ==> ((\q'. ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = (p' ==> q'))))) q')) = ((\q'. ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))) = q')) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c==> f5 c= creal_le ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cdistance c, f0 f1 b0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cdistance c, f0 f1 c==> f5 b0 * / c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c==> f5 c= creal_le ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cdistance c, f0 f1 b0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cdistance c, f0 f1 c==> f5 b0 f6 * / c==> c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c==> f5 c= creal_le ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cdistance c, f0 f1 b0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cdistance c, f0 f1 c==> f5 b0 f6
+ (r = (distance (pp , v1))), ((distance (pp , v1)) = p1) |- ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = r) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) r)))) = (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p1) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)))))
T c==> c= f0 cdistance c, f1 f2 c==> c= cdistance c, f1 f2 f3 c= c==> c= cradV * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f2 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f2 f5 cdist3 f2 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f2 f5 cdist3 f2 f4 f0 c==> c= cradV * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f2 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f2 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f2 f5 cdist3 f2 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f2 f5 cdist3 f2 f4 f3
+ (r = (distance (pp , v3))), ((distance (pp , v3)) = p3) |- (p3 = r)
T c==> c= f0 cdistance c, f1 f2 c==> c= cdistance c, f1 f2 f3 c= f3 f0
+ |- ((((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4)))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))
T c= c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4
- |- ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (!r. (((\r. (?b. (?c. (?a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))))) r) ==> F))
T c==> * / c? / c? / c? / c? / c? / c/\ c= b3 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 b5 creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))
T c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ (((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0)))) |- ((((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 cF
+ |- (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))) = ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))
T c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cdistance c, f0 f1 creal_le ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cdistance c, f0 f1
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ ((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1)) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) p1))))
T c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 f4
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- (((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) = ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c= c==> c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
+ |- (((real_le (real_of_num (NUMERAL _0))) ((real_mul (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 creal_mul cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
- |- ((!b. ((P b) \/ Q)) = ((!b. (P b)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)), (((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)) ==> ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))) |- ((((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)) ==> ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))) /\ ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)))
T c==> c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c==> c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c/\ c==> c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
- ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F), (((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F) ==> ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)) |- (((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F) /\ ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F))
T c==> c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c==> c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c/\ c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF
- |- (((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))) = ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))))
T c= c==> c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
- ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F), (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) /\ ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- ((((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F))))) ==> ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F)))))) ==> (((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F))))) ==> ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F)))))))
T c==> c==> c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 cF c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 cF c==> c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 cF c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 cF
- ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((real_lt (real_of_num (NUMERAL _0))) a)
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) = F) ==> (~ ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) = (~ ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> c= c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!v3. (!v2. (!v1. (!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (~ (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))))))))) = (!v3. (!v2. (!v1. (!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)))))))
T c= ! ! ! ! c==> c~ c==> c~ ccoplanar_alt * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ ! ! ! ! c==> ccollinear * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b4 part cEMPTY ccoplanar_alt * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b4 part cEMPTY ! ! ! ! c==> c~ c==> c~ ccoplanar_alt * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b4 part cEMPTY ccoplanar_alt * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b4 part cEMPTY cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) = F)
T c= c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((((~ (a ==> (b ==> a))) ==> F) ==> ((~ (a ==> (b ==> a))) ==> F)) = ((~ (a ==> (b ==> a))) ==> F))
T c= c==> c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF
- ((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cT
- |- ((!a'. ((~ (a' = (real_of_num (NUMERAL _0)))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))))) = ((!a. (~ (a = (real_of_num (NUMERAL _0))))) \/ (((~ ((real_lt (real_of_num (NUMERAL _0))) a)) \/ ((real_of_num (NUMERAL _0)) = a)) \/ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a))))))))
T c= ! c\/ c~ c= b0 creal_of_num cNUMERAL c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_of_num cNUMERAL c_0 f0 c= creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0 c\/ ! c~ c= b0 creal_of_num cNUMERAL c_0 c\/ c\/ c~ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_of_num cNUMERAL c_0 f0 c= creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0
- ((distance (pp , v1)) = p1) |- ((\p1. ((distance (pp , v1)) = p1)) p1)
T c==> c= cdistance c, f0 f1 f2 * / c= cdistance c, f0 f1 b0 f2
- |- (!p1. (((\p1. ((distance (pp , v1)) = p1)) p1) ==> (?p1. ((distance (pp , v1)) = p1))))
T c==> * / c= cdistance c, f0 f1 b0 f2 c? / c= cdistance c, f0 f1 b0
- ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) |- ((((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) ==> ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F)) ==> ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F))
T c==> c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c==> c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF
- (~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- ((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) ==> (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))
T c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) /\ (~ (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY))))))))))))
T c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) ==> ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F)) = ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F))
T c= c==> c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF
- (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))
T c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- ((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 cT
- (!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))), (!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))), (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))), (~ F), (~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) |- ((~ F) /\ F)
T c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> c~ cF c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c/\ c~ cF cF
- |- ((\p'. (!q'. ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) = p') ==> ((p' ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = q')) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 b0 c==> c==> b0 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3 b1 c= c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3 c==> b0 b1 f5
- (?b. (?c. (?a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) |- ((?b. (?c. (?a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) /\ F)
T c==> c? / c? / c? / c? / c? / c/\ c= b2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b0 b1 creal_mul f0 b2 creal_mul b2 creal_sub f0 creal_mul creal_mul b0 b1 creal_inv b2 b4 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c? / c? / c/\ c= b2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b0 b1 creal_mul f0 b2 creal_mul b2 creal_sub f0 creal_mul creal_mul b0 b1 creal_inv b2 b4 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((!x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z))))) /\ (!w. (!x. (!y. (!z. ((((real_add ((real_mul w) y)) ((real_mul x) z)) = ((real_add ((real_mul w) z)) ((real_mul x) y))) = ((w = x) \/ (y = z))))))))
T c/\ ! ! ! c= c= creal_add b0 b1 creal_add b0 b2 c= b1 b2 ! ! ! ! c= c= creal_add creal_mul b0 b2 creal_mul b1 b3 creal_add creal_mul b0 b3 creal_mul b1 b2 c\/ c= b0 b1 c= b2 b3
- |- ((x = x) = T)
T c= c= f0 f0 cT
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((distance (pp , v1)) = p1), ((distance (pp , v2)) = p2), ((distance (pp , v3)) = p3), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- (((distance (pp , v1)) = p1) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f1 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cdistance c, f4 f0 f6 c==> c= cdistance c, f4 f1 f7 c==> c= cdistance c, f4 f2 f8 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 c==> c= cdistance c, f4 f0 f6 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f8 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY
- ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z)) = ((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((distance (pp , v2)) = p2), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v2))) |- ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = p2)
T c==> c= cdistance c, f0 f1 f2 c==> c= cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cdistance c, f0 f1 c= cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2
- |- (((((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) ==> ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F)) ==> (((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) ==> ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F))) = (((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) ==> ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F)))
T c= c==> c==> c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF
- (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) /\ F)
T c==> c? / c? / c? / c? / c/\ c= creal_mul b1 creal_inv b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c? / c/\ c= creal_mul b1 creal_inv b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 b0 creal_mul f1 b1 creal_mul b1 creal_sub f1 creal_mul creal_mul f0 b0 creal_inv b1 b3 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((!x. (((\pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp)) x) ==> (?pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp)))) ==> ((?pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp)) ==> (?pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp)))) = ((?pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp)) ==> (?pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp))))
T c= c==> ! c==> * / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 b0 c? / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c==> c? / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c? / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c? / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c? / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
- |- (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> q')))
T c==> c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
- |- (((~ ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) ==> (((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) = F)) = (((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) = F))
T c= c==> c~ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 cF
- (((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) ==> ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F)) |- ((((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) ==> ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F)) /\ (((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) ==> ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F)))
T c==> c==> c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c/\ c==> c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF
- (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((distance (pp , v1)) = p1), ((distance (pp , v2)) = p2), ((distance (pp , v3)) = p3), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- (((distance (pp , v3)) = p3) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f1 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cdistance c, f4 f0 f6 c==> c= cdistance c, f4 f1 f7 c==> c= cdistance c, f4 f2 f8 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 c==> c= cdistance c, f4 f2 f8 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f8 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
- |- (((!p'. (!q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 b1 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 c==> b0 b1 * / ! c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 b1 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 c==> b0 b1 f5 * / ! c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 b1 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 c==> b0 b1 f5
- |- ((!v1. (!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (~ (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))))))) = T)
T c= ! ! c==> c~ c==> c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ ! ! ! ! c==> ccollinear * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar_alt * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cT
- |- (((!q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = (p' ==> q'))))) ==> ((\q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = (p' ==> q'))))) q')) = ((\q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> f3 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f5 b0 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f5 c==> f3 b0 * / c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> f3 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f5 b0 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f5 c==> f3 b0 f6 * / c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> f3 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f5 b0 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f5 c==> f3 b0 f6
- |- ((!b'. (((~ ((real_le (real_of_num (NUMERAL _0))) a)) \/ (~ ((real_le (real_of_num (NUMERAL _0))) b'))) \/ ((((real_le a) b) \/ (~ ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) /\ ((~ ((real_le a) b)) \/ ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) = ((!b. ((~ ((real_le (real_of_num (NUMERAL _0))) a)) \/ (~ ((real_le (real_of_num (NUMERAL _0))) b)))) \/ ((((real_le a) b) \/ (~ ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) /\ ((~ ((real_le a) b)) \/ ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c= ! c\/ c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c\/ creal_le f0 f1 c~ creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 c\/ c~ creal_le f0 f1 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 c\/ ! c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c\/ creal_le f0 f1 c~ creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 c\/ c~ creal_le f0 f1 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (?a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((?a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c? / c? / c? / c/\ c= b0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 f1 creal_mul f2 b0 creal_mul b0 creal_sub f2 creal_mul creal_mul f0 f1 creal_inv b0 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= b0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f0 f1 creal_mul f2 b0 creal_mul b0 creal_sub f2 creal_mul creal_mul f0 f1 creal_inv b0 b2 creal_of_num cNUMERAL cBIT1 c_0 cF
- (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) |- ((~ ((real_le (real_of_num (NUMERAL _0))) (distance (pp , v4)))) ==> ((real_le (real_of_num (NUMERAL _0))) (distance (pp , v4))))
T c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> c~ creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 f1
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F), (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) /\ ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c/\ c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- (((!v2. (!v1. (!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))))) ==> ((\v2. (!v1. (!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))))) v2)) = ((\v2. (!v1. (!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))))) v2))
T c= c==> ! ! ! c==> c~ c==> c~ ccoplanar_alt * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY ccoplanar_alt * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF * / ! ! c==> c~ c==> c~ ccoplanar_alt * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY ccoplanar_alt * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF f1 * / ! ! c==> c~ c==> c~ ccoplanar_alt * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY ccoplanar_alt * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF f1
- (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- (((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) ==> ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) = F)) = ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) = F))
T c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- (((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) ==> ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F))
T c==> c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF
- (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- (T = (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))
T c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cT c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((((~ (a ==> (b ==> a))) ==> F) ==> ((~ (a ==> (b ==> a))) ==> F)) ==> (((~ (a ==> (b ==> a))) ==> F) ==> ((~ (a ==> (b ==> a))) ==> F))) = (((~ (a ==> (b ==> a))) ==> F) ==> ((~ (a ==> (b ==> a))) ==> F)))
T c= c==> c==> c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF c==> c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF c==> c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF
- (?b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) |- ((?b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) /\ F)
T c==> c? / c? / c? / c? / c? / c/\ c= creal_mul b2 creal_inv b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b0 b1 creal_mul f0 b2 creal_mul b2 creal_sub f0 creal_mul creal_mul b0 b1 creal_inv b2 b4 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c? / c? / c/\ c= creal_mul b2 creal_inv b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b0 b1 creal_mul f0 b2 creal_mul b2 creal_sub f0 creal_mul creal_mul b0 b1 creal_inv b2 b4 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- ((real_lt (real_of_num (NUMERAL _0))) y) |- (((real_lt (real_of_num (NUMERAL _0))) y) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) x)))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul f1 f0 creal_le creal_of_num cNUMERAL c_0 f1
- |- ((\p'. (!q'. (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> b0 b1 f4
- ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F))))) |- (((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F))))) /\ ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F))))))
T c==> c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 cF c/\ c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 cF c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 cF
- (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ F)
T c==> c? / c? / c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_mul creal_mul f1 f2 creal_inv f0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
- (!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) |- (((~ ((real_le (real_of_num (NUMERAL _0))) _2178550)) \/ (~ ((real_le (real_of_num (NUMERAL _0))) _2178551))) \/ ((~ ((real_le _2178550) _2178551)) \/ ((real_le ((real_pow _2178550) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow _2178551) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c\/ c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 f1 c\/ c~ creal_le f0 f1 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0
- (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) /\ (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((distance (pp , v1)) = p1), ((distance (pp , v2)) = p2), ((distance (pp , v3)) = p3), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- (((((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((distance (pp , v2)) = p2) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) = (((distance (pp , v2)) = p2) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f1 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cdistance c, f4 f0 f6 c==> c= cdistance c, f4 f1 f7 c==> c= cdistance c, f4 f2 f8 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 c= c==> c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f8 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c==> c= cdistance c, f4 f1 f7 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f8 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c==> c= cdistance c, f4 f1 f7 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f8 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4
- |- (T = (((~ ((real_le (real_of_num (NUMERAL _0))) _2178550)) \/ ((~ ((real_le (real_of_num (NUMERAL _0))) _2178551)) \/ (((real_le _2178550) _2178551) \/ (~ ((real_le ((real_pow _2178550) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow _2178551) (NUMERAL (BIT0 (BIT1 _0))))))))) = (((real_le _2178550) _2178551) \/ ((~ ((real_le (real_of_num (NUMERAL _0))) _2178550)) \/ ((~ ((real_le (real_of_num (NUMERAL _0))) _2178551)) \/ (~ ((real_le ((real_pow _2178550) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow _2178551) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c= cT c= c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c\/ c~ creal_le creal_of_num cNUMERAL c_0 f1 c\/ creal_le f0 f1 c~ creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 c\/ creal_le f0 f1 c\/ c~ creal_le creal_of_num cNUMERAL c_0 f0 c\/ c~ creal_le creal_of_num cNUMERAL c_0 f1 c~ creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0
- |- ((\p'. (!q'. (((r = (distance (pp , v4))) = p') ==> ((p' ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) = q')) ==> (((r = (distance (pp , v4))) ==> (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c= f0 cdistance c, f1 f2 b0 c==> c==> b0 c= c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2 b1 c= c==> c= f0 cdistance c, f1 f2 c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2 c==> b0 b1 f6
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- ((~ (a ==> (b ==> a))) ==> F), (((~ (a ==> (b ==> a))) ==> F) ==> ((~ (a ==> (b ==> a))) ==> F)) |- (((~ (a ==> (b ==> a))) ==> F) /\ ((~ (a ==> (b ==> a))) ==> F))
T c==> c==> c~ c==> f0 c==> f1 f0 cF c==> c==> c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF c/\ c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((\pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp)) pp) |- (((\pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp)) pp) /\ (?pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp)))
T c==> * / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f4 c/\ * / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f4 c? / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
- ((real_lt (real_of_num (NUMERAL _0))) x) |- (((real_lt (real_of_num (NUMERAL _0))) x) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) y)))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1 creal_le creal_of_num cNUMERAL c_0 f1
- ((\pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp)) pp) |- ((((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp) ==> (?pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp))) = (?pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp)))
T c==> * / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f4 c= c==> c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c? / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c? / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
- ((distance (pp , v1)) = p1) |- (((distance (pp , v1)) = p1) /\ (?p1. ((distance (pp , v1)) = p1)))
T c==> c= cdistance c, f0 f1 f2 c/\ c= cdistance c, f0 f1 f2 c? / c= cdistance c, f0 f1 b0
- (r = (distance (pp , v4))) |- ((r = (distance (pp , v4))) /\ ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) = (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))))
T c==> c= f0 cdistance c, f1 f2 c/\ c= f0 cdistance c, f1 f2 c= c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2 c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2
- |- (((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> q')))) = ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> q'))))
T c= c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 f5 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f5 c==> c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 f5 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f5
- (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- ((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) /\ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- ((~ (a ==> (b ==> a))) ==> F) |- ((((~ (a ==> (b ==> a))) ==> F) ==> ((~ (a ==> (b ==> a))) ==> F)) ==> ((~ (a ==> (b ==> a))) ==> F))
T c==> c==> c~ c==> f0 c==> f1 f0 cF c==> c==> c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF
- |- (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- (((a ==> (b ==> a)) ==> (a ==> (b ==> a))) = (a ==> (b ==> a)))
T c= c==> c==> f0 c==> f1 f0 c==> f0 c==> f1 f0 c==> f0 c==> f1 f0
- (?r. (?b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))))) |- ((?r. (?b. (?c. (?a. (?z. (?z'. ((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))))) /\ F)
T c==> c? / c? / c? / c? / c? / c? / c/\ c= creal_mul b3 creal_inv b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 b5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c? / c? / c? / c/\ c= creal_mul b3 creal_inv b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 b5 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((((real_mul a) (real_inv a)) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) = F)
T c= c/\ c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))) ==> ((\v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))) v4)) = ((\v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))) v4))
T c= c==> ! c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar_alt * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF * / c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar_alt * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF f3 * / c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar_alt * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF f3
- |- (!pp. (((\pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp)) pp) ==> (?pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp))))
T c==> * / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f4 c? / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
- |- ((?p1. ((distance (pp , v1)) = p1)) ==> (?p1. ((distance (pp , v1)) = p1)))
T c==> c? / c= cdistance c, f0 f1 b0 c? / c= cdistance c, f0 f1 b0
- |- (((r = (distance (pp , v4))) = p') ==> ((p' ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) = q')) ==> (((r = (distance (pp , v4))) ==> (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))) = (p' ==> q'))))
T c==> c= c= f0 cdistance c, f1 f2 f3 c==> c==> f3 c= c==> c= cradV * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f6 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f5 f6 cdist3 f4 f6 cdist3 f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f5 f6 cdist3 f4 f6 cdist3 f4 f5 cdistance c, f1 f2 f7 c= c==> c= f0 cdistance c, f1 f2 c==> c= cradV * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f6 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f5 f6 cdist3 f4 f6 cdist3 f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f5 f6 cdist3 f4 f6 cdist3 f4 f5 cdistance c, f1 f2 c==> f3 f7
- (((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)) ==> ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))) |- ((((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)) ==> ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))) /\ (((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)) ==> ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))))
T c==> c==> c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c/\ c==> c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
- |- (((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (~ (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))))) = T)
T c= c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((\q'. ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) = p') ==> ((p' ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = q')) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) = (p' ==> q'))))) q')
T * / c==> c= c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 f5 c==> c==> f5 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3 b0 c= c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3 c==> f5 b0 f6
- ((~ (a ==> (b ==> a))) ==> F), (((~ (a ==> (b ==> a))) ==> F) ==> ((~ (a ==> (b ==> a))) ==> F)) |- ((((~ (a ==> (b ==> a))) ==> F) ==> ((~ (a ==> (b ==> a))) ==> F)) /\ ((~ (a ==> (b ==> a))) ==> F))
T c==> c==> c~ c==> f0 c==> f1 f0 cF c==> c==> c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF c/\ c==> c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF
- (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))), (~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- ((~ F) ==> F)
T c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cF cF
- |- (((((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) = F) ==> (~ ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) = (~ ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> c= c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F) ==> ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)) ==> (((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F) ==> ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F))) = (((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F) ==> ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)))
T c= c==> c==> c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF
- |- ((\q'. (((r = (distance (pp , v4))) = p') ==> ((p' ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) = q')) ==> (((r = (distance (pp , v4))) ==> (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))) = (p' ==> q'))))) q')
T * / c==> c= c= f0 cdistance c, f1 f2 f3 c==> c==> f3 c= c==> c= cradV * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f6 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f5 f6 cdist3 f4 f6 cdist3 f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f5 f6 cdist3 f4 f6 cdist3 f4 f5 cdistance c, f1 f2 b0 c= c==> c= f0 cdistance c, f1 f2 c==> c= cradV * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f5 f6 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f5 f6 cdist3 f4 f6 cdist3 f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f5 f6 cdist3 f4 f6 cdist3 f4 f5 cdistance c, f1 f2 c==> f3 b0 f7
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add (real_neg (real_of_num (NUMERAL _0)))) a) = ((real_add (real_neg (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_neg creal_of_num cNUMERAL c_0 f0 creal_add creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((!q'. (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (p' ==> q'))))) ==> ((\q'. (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (p' ==> q'))))) q')) = ((\q'. (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c==> f4 c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> f4 b0 * / c==> c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c==> f4 c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> f4 b0 f5 * / c==> c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c==> f4 c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> f4 b0 f5
- |- (((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) ==> (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))) = (((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)))
T c= c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- ((\p1. ((distance (pp , v1)) = p1)) p1) |- (((\p1. ((distance (pp , v1)) = p1)) p1) /\ (?p1. ((distance (pp , v1)) = p1)))
T c==> * / c= cdistance c, f0 f1 b0 f2 c/\ * / c= cdistance c, f0 f1 b0 f2 c? / c= cdistance c, f0 f1 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = (p' ==> q'))))
T c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> f3 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f5 f6 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f5 c==> f3 f6
- |- (((!y. (((real_lt (real_of_num (NUMERAL _0))) y) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) x)))) ==> ((\y. (((real_lt (real_of_num (NUMERAL _0))) y) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) x)))) y)) = ((\y. (((real_lt (real_of_num (NUMERAL _0))) y) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) x)))) y))
T c= c==> ! c==> creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 creal_le creal_of_num cNUMERAL c_0 f0 * / c==> creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 creal_le creal_of_num cNUMERAL c_0 f0 f1 * / c==> creal_lt creal_of_num cNUMERAL c_0 b0 c= creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 creal_le creal_of_num cNUMERAL c_0 f0 f1
- (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))), (~ ((real_le (real_of_num (NUMERAL _0))) (distance (pp , v4)))) |- ((~ ((real_le (real_of_num (NUMERAL _0))) (distance (pp , v4)))) /\ ((real_le (real_of_num (NUMERAL _0))) (distance (pp , v4))))
T c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> c~ creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 f1 c/\ c~ creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL c_0 cdistance c, f0 f1
- |- ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cradV * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
- |- (((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F) ==> ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F))
T c==> c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF
- (~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) |- ((~ ((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> c~ creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0
- (~ (a ==> (b ==> a))) |- ((~ (a ==> (b ==> a))) /\ F)
T c==> c~ c==> f0 c==> f1 f0 c/\ c~ c==> f0 c==> f1 f0 cF
- ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add ((real_mul a) ((real_mul b) ((real_mul c) ((real_mul z') (real_inv a)))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul b) ((real_mul c) z')))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul f0 creal_mul f2 creal_mul f3 creal_mul f5 creal_inv f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f2 creal_mul f3 f5 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F), (((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) ==> ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F)) |- ((((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) ==> ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F)) /\ ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F))
T c==> c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c==> c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c/\ c==> c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF
- a |- ((a ==> (b ==> a)) ==> (b ==> a))
T c==> f0 c==> c==> f0 c==> f1 f0 c==> f1 f0
- (((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- (((distance (pp , v1)) = p1) ==> (?p1. ((distance (pp , v1)) = p1)))
T c==> c= cdistance c, f0 f1 f2 c? / c= cdistance c, f0 f1 b0
- (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))), (~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))), (~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))
T c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((\q'. (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c==> f4 c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> f4 b0 f5
- (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((distance (pp , v1)) = p1), ((distance (pp , v2)) = p2), ((distance (pp , v3)) = p3), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- (((((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) ==> (((distance (pp , v1)) = p1) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))) = (((distance (pp , v1)) = p1) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f1 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cdistance c, f4 f0 f6 c==> c= cdistance c, f4 f1 f7 c==> c= cdistance c, f4 f2 f8 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 c= c==> c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f8 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c==> c= cdistance c, f4 f0 f6 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f8 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY c==> c= cdistance c, f4 f0 f6 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f8 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY
- |- ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) = p') ==> ((p' ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = q')) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) = (p' ==> q'))))
T c==> c= c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 f5 c==> c==> f5 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3 f6 c= c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3 c==> f5 f6
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) |- (((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) /\ ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F))
T c==> c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c/\ c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF
- |- ((a ==> (b ==> a)) ==> (a ==> (b ==> a)))
T c==> c==> f0 c==> f1 f0 c==> f0 c==> f1 f0
- (((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F) ==> ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)) |- ((((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F) ==> ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)) /\ (((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F) ==> ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)))
T c==> c==> c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c/\ c==> c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF
- |- ((\v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))) v4)
T * / c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar_alt * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF f3
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!v3'. ((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) \/ (!v. (coplanar_alt (v1 INSERT (v2 INSERT (v3' INSERT (v INSERT EMPTY)))))))) = ((~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) \/ (!v3. (!v. (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))
T c= ! c\/ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! ! ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
- |- ((((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) ==> ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F)) ==> (((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F) ==> ((~ (((a ==> (b ==> c)) = ((a /\ b) ==> c)) /\ (((a /\ b) /\ c) = (a /\ (b /\ c))))) ==> F)))
T c==> c==> c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF c==> c~ c/\ c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2 cF
- ((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = T)
T c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f2 f3 cdist3 f4 f3 cdist3 f4 f2 cNUMERAL cBIT0 cBIT1 c_0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> q')))
T c==> c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 f5 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f5
- |- (((r = (distance (pp , v4))) ==> (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))) = ((r = (distance (pp , v4))) ==> (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))))
T c= c==> c= f0 cdistance c, f1 f2 c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2 c==> c= f0 cdistance c, f1 f2 c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2
- |- (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3
- |- ((!v2. (!v1. (!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (~ (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY))))))))))))))) = T)
T c= ! ! ! c==> c~ c==> c~ ccoplanar_alt * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c~ ! ! ! ! c==> ccollinear * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 part cEMPTY ccoplanar_alt * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cT
- |- ((((eta_y x) y) z) = (((eta_y y) x) z))
T c= ceta_y f0 f1 f2 ceta_y f1 f0 f2
- (((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) |- (((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> ((coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = F)) = ((coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = F))
T c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)) |- ((((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)) ==> ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))) ==> ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)))
T c==> c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c==> c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
- (?r. (?b. (?c. (?a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))))) |- ((?r. (?b. (?c. (?a. (?z. (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))))) /\ F)
T c==> c? / c? / c? / c? / c? / c? / c/\ c= b3 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 b5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c? / c? / c? / c/\ c= b3 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg b1 b2 creal_mul b0 b3 creal_mul b3 creal_sub b0 creal_mul creal_mul b1 b2 creal_inv b3 b5 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((~ (a ==> (b ==> a))) ==> F) ==> ((~ (a ==> (b ==> a))) ==> F)) |- ((((~ (a ==> (b ==> a))) ==> F) ==> ((~ (a ==> (b ==> a))) ==> F)) /\ (((~ (a ==> (b ==> a))) ==> F) ==> ((~ (a ==> (b ==> a))) ==> F)))
T c==> c==> c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF c/\ c==> c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF c==> c==> c~ c==> f0 c==> f1 f0 cF c==> c~ c==> f0 c==> f1 f0 cF
- ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z')) = ((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))), (!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))), (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))), (~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) |- ((~ ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4)))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))
T c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> c~ creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4
- (!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))), (!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))), (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))), (~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))), (~ ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4)))) |- ((~ ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4)))) /\ ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))
T c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> c~ creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c/\ c~ creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4
- |- (((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp) ==> (?pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp)))
T c==> c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c? / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
- a, (a ==> (b ==> a)) |- (a /\ (b ==> a))
T c==> f0 c==> c==> f0 c==> f1 f0 c/\ f0 c==> f1 f0
- |- ((r = (distance (pp , v4))) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) = (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))))
T c==> c= f0 cdistance c, f1 f2 c= c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2 c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2
- ((real_lt (real_of_num (NUMERAL _0))) a) |- (((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a)) = ((real_mul a) ((real_sub r) ((real_div ((real_mul b) c)) a)))))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_add creal_mul creal_neg f1 f2 creal_mul f3 f0 creal_mul f0 creal_sub f3 creal_div creal_mul f1 f2 f0
- |- (((!v3. (!v2. (!v1. (!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)))))) ==> ((\v3. (!v2. (!v1. (!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)))))) v3)) = ((\v3. (!v2. (!v1. (!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)))))) v3))
T c= c==> ! ! ! ! c==> c~ c==> c~ ccoplanar_alt * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b4 part cEMPTY ccoplanar_alt * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b4 part cEMPTY cF * / ! ! ! c==> c~ c==> c~ ccoplanar_alt * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b4 part cEMPTY ccoplanar_alt * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b4 part cEMPTY cF f0 * / ! ! ! c==> c~ c==> c~ ccoplanar_alt * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b4 part cEMPTY ccoplanar_alt * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b4 part cEMPTY cF f0
- a, (a ==> (b ==> a)) |- ((a ==> (b ==> a)) /\ (b ==> a))
T c==> f0 c==> c==> f0 c==> f1 f0 c/\ c==> f0 c==> f1 f0 c==> f1 f0
- (?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) |- ((?z'. ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) /\ F)
T c==> c? / c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 b0 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((((\p1. ((distance (pp , v1)) = p1)) p1) ==> (?p1. ((distance (pp , v1)) = p1))) = T)
T c= c==> * / c= cdistance c, f0 f1 b0 f2 c? / c= cdistance c, f0 f1 b0 cT
- |- (((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) = ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4)))) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = q')) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) = (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> q')))) = ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = q')) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) = (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> q'))))
T c= c==> c= c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c==> c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3 f5 c= c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 f5 c==> c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3 f5 c= c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f3 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cdistance c, f4 f3 f5
- ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- (((!x. (((\p1. ((distance (pp , v1)) = p1)) x) ==> (?p1. ((distance (pp , v1)) = p1)))) ==> ((?p1. ((distance (pp , v1)) = p1)) ==> (?p1. ((distance (pp , v1)) = p1)))) = ((?p1. ((distance (pp , v1)) = p1)) ==> (?p1. ((distance (pp , v1)) = p1))))
T c= c==> ! c==> * / c= cdistance c, f0 f1 b1 b0 c? / c= cdistance c, f0 f1 b1 c==> c? / c= cdistance c, f0 f1 b0 c? / c= cdistance c, f0 f1 b0 c==> c? / c= cdistance c, f0 f1 b0 c? / c= cdistance c, f0 f1 b0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)), (((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)) ==> ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))) |- (((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)) /\ ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)))
T c==> c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c==> c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c/\ c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (p' ==> q'))))
T c==> c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> c==> f4 c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> f4 f5
- |- ((((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)) ==> ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F))) = ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)))
T c= c==> c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
- ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F), (((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F) ==> ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)) |- ((((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F) ==> ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F)) /\ ((~ ((a /\ (b /\ c)) = ((a /\ b) /\ c))) ==> F))
T c==> c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c==> c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c/\ c==> c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF c==> c~ c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 cF
- |- ((\p'. (!q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = (p' ==> q')))))) p')
T * / ! c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 b1 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 c==> b0 b1 f5
- |- (((!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) y) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) x))))) ==> ((\x. (!y. (((real_lt (real_of_num (NUMERAL _0))) y) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) x))))) x)) = ((\x. (!y. (((real_lt (real_of_num (NUMERAL _0))) y) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)) = ((real_le (real_of_num (NUMERAL _0))) x))))) x))
T c= c==> ! ! c==> creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 creal_le creal_of_num cNUMERAL c_0 b0 * / ! c==> creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 creal_le creal_of_num cNUMERAL c_0 b0 f0 * / ! c==> creal_lt creal_of_num cNUMERAL c_0 b1 c= creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 creal_le creal_of_num cNUMERAL c_0 b0 f0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) b))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) b)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- ((\v3. (!v2. (!v1. (!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)))))) v3)
T * / ! ! ! c==> c~ c==> c~ ccoplanar_alt * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b4 part cEMPTY ccoplanar_alt * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b4 part cEMPTY cF f0
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = ((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> (~ (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY))))))))))))) = T)
T c= ! c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ! ! ! ! c==> ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar_alt * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cT
- |- ((\v1. (!v4. ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)))) v1)
T * / ! c==> c~ c==> c~ ccoplanar_alt * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar_alt * * part cINSERT b2 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f3 f4
- |- ((((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F) ==> ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F)) = ((~ (!a. (!b. ((a ==> b) ==> (a = (a /\ b)))))) ==> F))
T c= c==> c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF c==> c~ ! ! c==> c==> b0 b1 c= b0 c/\ b0 b1 cF
- |- (((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F))))) ==> ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F))))))
T c==> c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 cF c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 cF
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)) |- (((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)) /\ ((~ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) ==> (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))) ==> F)))
T c==> c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c/\ c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ c==> c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
- |- ((\q'. ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))) = q')) ==> ((((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))) = (p' ==> q'))))) q')
T * / c==> c= creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 f3 c==> c==> f3 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f5 b0 c= c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cdistance c, f4 f5 c==> f3 b0 f6
- ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F))))) |- ((((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F))))) ==> ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F)))))) ==> ((~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) ==> ((!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))) ==> ((!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> ((!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))) ==> F))))))
T c==> c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 cF c==> c==> c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 cF c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 cF c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_lt (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_div ((real_mul ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0))))))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f3 f2 cdist3 f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 creal_sub creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_pow cdistance c, f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 cups_x creal_pow cdistance c, f3 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0
- |- (((r = (distance (pp , v4))) ==> ((((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4)))))) = q')) ==> (((r = (distance (pp , v4))) ==> (((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v4))) ==> (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (distance (pp , v4))))))) = ((r = (distance (pp , v4))) ==> q')))
T c==> c==> c= f0 cdistance c, f1 f2 c= c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2 f6 c= c==> c= f0 cdistance c, f1 f2 c==> c= cradV * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY cdistance c, f1 f2 c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f4 f5 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f4 f5 cdist3 f3 f5 cdist3 f3 f4 cdistance c, f1 f2 c==> c= f0 cdistance c, f1 f2 f6
- (!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))))), (!v1. (!v2. (!v3. ((real_le (real_of_num (NUMERAL _0))) (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3)))))), (!x. (!y. ((real_le (real_of_num (NUMERAL _0))) (distance (x , y))))), (~ (((real_le ((real_pow (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (pp , v4))) (NUMERAL (BIT0 (BIT1 _0))))) ==> ((real_le (((eta_y ((dist3 v1) v2)) ((dist3 v1) v3)) ((dist3 v2) v3))) (distance (pp , v4))))) |- ((~ F) ==> F)
T c==> ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 c= creal_le b0 b1 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! ! creal_le creal_of_num cNUMERAL c_0 ceta_y cdist3 b0 b1 cdist3 b0 b2 cdist3 b1 b2 c==> ! ! creal_le creal_of_num cNUMERAL c_0 cdistance c, b0 b1 c==> c~ c==> creal_le creal_pow ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f3 f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f0 f1 cdist3 f0 f2 cdist3 f1 f2 cdistance c, f3 f4 c==> c~ cF cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!p'. (!q'. (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) = p') ==> ((p' ==> (((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) = q')) ==> (((((CARD (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))) /\ (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> b0 b1 * / ! c==> c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> b0 b1 f4 * / ! c==> c= c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> c==> b0 c= creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> b0 b1 f4
- (~ (collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))), (r = (distance (pp , v1))), (r = (distance (pp , v2))), (r = (distance (pp , v3))), (r = (distance (pp , v4))), ((distance (pp , v1)) = p1), ((distance (pp , v2)) = p2), ((distance (pp , v3)) = p3), ((radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = (distance (pp , v1))) |- (((distance (pp , v2)) = p2) ==> (((real_le (real_of_num (NUMERAL _0))) ((((((delta ((real_pow p1) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p2) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow p3) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= f3 cdistance c, f4 f0 c==> c= f3 cdistance c, f4 f1 c==> c= f3 cdistance c, f4 f2 c==> c= f3 cdistance c, f4 f5 c==> c= cdistance c, f4 f0 f6 c==> c= cdistance c, f4 f1 f7 c==> c= cdistance c, f4 f2 f8 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY cdistance c, f4 f0 c==> c= cdistance c, f4 f1 f7 c==> creal_le creal_of_num cNUMERAL c_0 cdelta creal_pow f6 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f7 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f8 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f5 part cEMPTY
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- ((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_lt (real_of_num (NUMERAL _0))) (((ups_x ((real_pow (distance (v1 , v2))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v1 , v3))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance (v2 , v3))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))))) = (((real_le (real_of_num (NUMERAL _0))) ((real_sub ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((real_le (((eta_y ((dist3 v2) v3)) ((dist3 v1) v3)) ((dist3 v1) v2))) (radV (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY)))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_lt creal_of_num cNUMERAL c_0 cups_x creal_pow cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f0 f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c= c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_sub creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 creal_pow ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le ceta_y cdist3 f1 f2 cdist3 f0 f2 cdist3 f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (a ==> (b ==> a)) |- ((a ==> (b ==> a)) /\ (a ==> (b ==> a)))
T c==> c==> f0 c==> f1 f0 c/\ c==> f0 c==> f1 f0 c==> f0 c==> f1 f0
- |- (~ ((a = (real_of_num (NUMERAL _0))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_mul ((real_sub (real_of_num (NUMERAL _0))) a)) z) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_mul ((real_sub ((real_add ((real_mul (real_neg b)) c)) ((real_mul r) a))) ((real_mul a) ((real_sub r) ((real_mul ((real_mul b) c)) (real_inv a)))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))
T c~ c/\ c= f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= creal_mul creal_sub creal_of_num cNUMERAL c_0 f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_mul creal_neg f2 f3 creal_mul f4 f0 creal_mul f0 creal_sub f4 creal_mul creal_mul f2 f3 creal_inv f0 f5 creal_of_num cNUMERAL cBIT1 c_0
- |- ((?pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp)) ==> (?pp. ((circumcenter (v1 INSERT (v2 INSERT (v3 INSERT (v4 INSERT EMPTY))))) = pp)))
T c==> c? / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c? / c= ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
