N Tame_list.indexf_mem1
C |- (!x. (!y. (!s. ((~ ((MEM x) s)) ==> ((((indexf x) y) s) = (sizel s))))))
T c==> c~ cMEM f0 f1 c= cindexf f0 f2 f1 csizel f1
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D Tame_list.indexf
A |- (!y. (!x. (!s. ((((indexf x) y) s) = (((COND (((MEM x) s) /\ ((MEM y) s))) ((((indexl y) s) + ((sizel s) - ((indexl x) s))) MOD (sizel s))) (sizel s))))))
T c= cindexf f0 f1 f2 cCOND c/\ cMEM f0 f2 cMEM f1 f2 cMOD c+ cindexl f1 f2 c- csizel f2 cindexl f0 f2 csizel f2 csizel f2
+ |- ((\g'. (!t'. (!e'. (((((MEM x) s) /\ ((MEM y) s)) = g') ==> ((g' ==> (((((indexl y) s) + ((sizel s) - ((indexl x) s))) MOD (sizel s)) = t')) ==> (((~ g') ==> ((sizel s) = e')) ==> ((((COND (((MEM x) s) /\ ((MEM y) s))) ((((indexl y) s) + ((sizel s) - ((indexl x) s))) MOD (sizel s))) (sizel s)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c/\ cMEM f0 f1 cMEM f2 f1 b0 c==> c==> b0 c= cMOD c+ cindexl f2 f1 c- csizel f1 cindexl f0 f1 csizel f1 b1 c==> c==> c~ b0 c= csizel f1 b2 c= cCOND c/\ cMEM f0 f1 cMEM f2 f1 cMOD c+ cindexl f2 f1 c- csizel f1 cindexl f0 f1 csizel f1 csizel f1 cCOND b0 b1 b2 f3
+ |- (((!y. (!x. (!s. ((((indexf x) y) s) = (((COND (((MEM x) s) /\ ((MEM y) s))) ((((indexl y) s) + ((sizel s) - ((indexl x) s))) MOD (sizel s))) (sizel s)))))) ==> ((\y. (!x. (!s. ((((indexf x) y) s) = (((COND (((MEM x) s) /\ ((MEM y) s))) ((((indexl y) s) + ((sizel s) - ((indexl x) s))) MOD (sizel s))) (sizel s)))))) y)) = ((\y. (!x. (!s. ((((indexf x) y) s) = (((COND (((MEM x) s) /\ ((MEM y) s))) ((((indexl y) s) + ((sizel s) - ((indexl x) s))) MOD (sizel s))) (sizel s)))))) y))
T c= c==> ! ! ! c= cindexf b1 b0 b2 cCOND c/\ cMEM b1 b2 cMEM b0 b2 cMOD c+ cindexl b0 b2 c- csizel b2 cindexl b1 b2 csizel b2 csizel b2 * / ! ! c= cindexf b1 b0 b2 cCOND c/\ cMEM b1 b2 cMEM b0 b2 cMOD c+ cindexl b0 b2 c- csizel b2 cindexl b1 b2 csizel b2 csizel b2 f0 * / ! ! c= cindexf b1 b0 b2 cCOND c/\ cMEM b1 b2 cMEM b0 b2 cMOD c+ cindexl b0 b2 c- csizel b2 cindexl b1 b2 csizel b2 csizel b2 f0
+ (~ ((MEM x) s)) |- (((~ F) ==> ((sizel s) = e')) ==> ((((COND (((MEM x) s) /\ ((MEM y) s))) ((((indexl y) s) + ((sizel s) - ((indexl x) s))) MOD (sizel s))) (sizel s)) = (((COND F) ((((indexl y) s) + ((sizel s) - ((indexl x) s))) MOD (sizel s))) e')))
T c==> c~ cMEM f0 f1 c==> c==> c~ cF c= csizel f1 f2 c= cCOND c/\ cMEM f0 f1 cMEM f3 f1 cMOD c+ cindexl f3 f1 c- csizel f1 cindexl f0 f1 csizel f1 csizel f1 cCOND cF cMOD c+ cindexl f3 f1 c- csizel f1 cindexl f0 f1 csizel f1 f2
+ |- (((!p'. (!q'. (((~ ((MEM x) s)) = p') ==> ((p' ==> (((((indexf x) y) s) = (sizel s)) = q')) ==> (((~ ((MEM x) s)) ==> ((((indexf x) y) s) = (sizel s))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((~ ((MEM x) s)) = p') ==> ((p' ==> (((((indexf x) y) s) = (sizel s)) = q')) ==> (((~ ((MEM x) s)) ==> ((((indexf x) y) s) = (sizel s))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((~ ((MEM x) s)) = p') ==> ((p' ==> (((((indexf x) y) s) = (sizel s)) = q')) ==> (((~ ((MEM x) s)) ==> ((((indexf x) y) s) = (sizel s))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c~ cMEM f0 f1 b0 c==> c==> b0 c= c= cindexf f0 f2 f1 csizel f1 b1 c= c==> c~ cMEM f0 f1 c= cindexf f0 f2 f1 csizel f1 c==> b0 b1 * / ! c==> c= c~ cMEM f0 f1 b0 c==> c==> b0 c= c= cindexf f0 f2 f1 csizel f1 b1 c= c==> c~ cMEM f0 f1 c= cindexf f0 f2 f1 csizel f1 c==> b0 b1 f3 * / ! c==> c= c~ cMEM f0 f1 b0 c==> c==> b0 c= c= cindexf f0 f2 f1 csizel f1 b1 c= c==> c~ cMEM f0 f1 c= cindexf f0 f2 f1 csizel f1 c==> b0 b1 f3
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((!x. (!s. ((((indexf x) y) s) = (((COND (((MEM x) s) /\ ((MEM y) s))) ((((indexl y) s) + ((sizel s) - ((indexl x) s))) MOD (sizel s))) (sizel s))))) ==> ((\x. (!s. ((((indexf x) y) s) = (((COND (((MEM x) s) /\ ((MEM y) s))) ((((indexl y) s) + ((sizel s) - ((indexl x) s))) MOD (sizel s))) (sizel s))))) x)) = ((\x. (!s. ((((indexf x) y) s) = (((COND (((MEM x) s) /\ ((MEM y) s))) ((((indexl y) s) + ((sizel s) - ((indexl x) s))) MOD (sizel s))) (sizel s))))) x))
T c= c==> ! ! c= cindexf b0 f0 b1 cCOND c/\ cMEM b0 b1 cMEM f0 b1 cMOD c+ cindexl f0 b1 c- csizel b1 cindexl b0 b1 csizel b1 csizel b1 * / ! c= cindexf b0 f0 b1 cCOND c/\ cMEM b0 b1 cMEM f0 b1 cMOD c+ cindexl f0 b1 c- csizel b1 cindexl b0 b1 csizel b1 csizel b1 f1 * / ! c= cindexf b0 f0 b1 cCOND c/\ cMEM b0 b1 cMEM f0 b1 cMOD c+ cindexl f0 b1 c- csizel b1 cindexl b0 b1 csizel b1 csizel b1 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((!s. t) = t)
T c= ! f0 f0
+ |- (((!t'. (!e'. (((((MEM x) s) /\ ((MEM y) s)) = g') ==> ((g' ==> (((((indexl y) s) + ((sizel s) - ((indexl x) s))) MOD (sizel s)) = t')) ==> (((~ g') ==> ((sizel s) = e')) ==> ((((COND (((MEM x) s) /\ ((MEM y) s))) ((((indexl y) s) + ((sizel s) - ((indexl x) s))) MOD (sizel s))) (sizel s)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((((MEM x) s) /\ ((MEM y) s)) = g') ==> ((g' ==> (((((indexl y) s) + ((sizel s) - ((indexl x) s))) MOD (sizel s)) = t')) ==> (((~ g') ==> ((sizel s) = e')) ==> ((((COND (((MEM x) s) /\ ((MEM y) s))) ((((indexl y) s) + ((sizel s) - ((indexl x) s))) MOD (sizel s))) (sizel s)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((((MEM x) s) /\ ((MEM y) s)) = g') ==> ((g' ==> (((((indexl y) s) + ((sizel s) - ((indexl x) s))) MOD (sizel s)) = t')) ==> (((~ g') ==> ((sizel s) = e')) ==> ((((COND (((MEM x) s) /\ ((MEM y) s))) ((((indexl y) s) + ((sizel s) - ((indexl x) s))) MOD (sizel s))) (sizel s)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c/\ cMEM f0 f1 cMEM f2 f1 f3 c==> c==> f3 c= cMOD c+ cindexl f2 f1 c- csizel f1 cindexl f0 f1 csizel f1 b0 c==> c==> c~ f3 c= csizel f1 b1 c= cCOND c/\ cMEM f0 f1 cMEM f2 f1 cMOD c+ cindexl f2 f1 c- csizel f1 cindexl f0 f1 csizel f1 csizel f1 cCOND f3 b0 b1 * / ! c==> c= c/\ cMEM f0 f1 cMEM f2 f1 f3 c==> c==> f3 c= cMOD c+ cindexl f2 f1 c- csizel f1 cindexl f0 f1 csizel f1 b0 c==> c==> c~ f3 c= csizel f1 b1 c= cCOND c/\ cMEM f0 f1 cMEM f2 f1 cMOD c+ cindexl f2 f1 c- csizel f1 cindexl f0 f1 csizel f1 csizel f1 cCOND f3 b0 b1 f4 * / ! c==> c= c/\ cMEM f0 f1 cMEM f2 f1 f3 c==> c==> f3 c= cMOD c+ cindexl f2 f1 c- csizel f1 cindexl f0 f1 csizel f1 b0 c==> c==> c~ f3 c= csizel f1 b1 c= cCOND c/\ cMEM f0 f1 cMEM f2 f1 cMOD c+ cindexl f2 f1 c- csizel f1 cindexl f0 f1 csizel f1 csizel f1 cCOND f3 b0 b1 f4
+ |- (((~ ((MEM x) s)) ==> ((((indexf x) y) s) = (sizel s))) = ((~ ((MEM x) s)) ==> T))
T c= c==> c~ cMEM f0 f1 c= cindexf f0 f2 f1 csizel f1 c==> c~ cMEM f0 f1 cT
- |- (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t)))
T c= cMEM f0 cCONS f1 f2 c\/ c= f0 f1 cMEM f0 f2
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
- |- (T = (!x. (!y. (!s. ((((indexf x) y) NIL) = (NUMERAL _0))))))
T c= cT ! ! ! c= cindexf b0 b1 cNIL cNUMERAL c_0
- F |- (F = T)
T c==> cF c= cF cT
- |- (!x. (!y. (!s. ((((indexf x) y) NIL) = (NUMERAL _0)))))
T c= cindexf f0 f1 cNIL cNUMERAL c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (~ F) |- (F = F)
T c==> c~ cF c= cF cF
- |- (((MEM x) NIL) = F)
T c= cMEM f0 cNIL cF
