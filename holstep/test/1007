N EXISTS_SUBPATH_OF_PATH
C |- (!g. (!a. (!b. (((path g) /\ ((a IN (path_image g)) /\ (b IN (path_image g)))) ==> (?h. ((path h) /\ (((pathstart h) = a) /\ (((pathfinish h) = b) /\ ((path_image h) SUBSET (path_image g))))))))))
T c==> c/\ cpath f0 c/\ cIN f1 * part cpath_image f0 cIN f2 * part cpath_image f0 c? / c/\ cpath b0 c/\ c= cpathstart b0 f1 c/\ c= cpathfinish b0 f2 cSUBSET * part cpath_image b0 * part cpath_image f0
D TRUTH
A |- T
T cT
D EMPTY_SUBSET
A |- (!s. (EMPTY SUBSET s))
T cSUBSET part cEMPTY f0
D INSERT_SUBSET
A |- (!x. (!s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t))))))
T c= cSUBSET * * part cINSERT f0 f1 f2 c/\ cIN f0 f2 cSUBSET f1 f2
D IMAGE_SUBSET
A |- (!f. (!s. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t))))))
T c==> cSUBSET f0 f1 cSUBSET * * part cIMAGE f2 f0 * * part cIMAGE f2 f1
D FORALL_IN_IMAGE
A |- (!f. (!s. ((!y. ((y IN ((IMAGE f) s)) ==> (P y))) = (!x. ((x IN s) ==> (P (f x)))))))
T c= ! c==> cIN b0 * * part cIMAGE f0 f1 * f2 b0 ! c==> cIN b0 f1 * f2 * f0 b0
D SUBSET_HULL
A |- (!P. (!s. (!t. ((P t) ==> ((((hull P) s) SUBSET t) = (s SUBSET t))))))
T c==> * f0 f1 c= cSUBSET * * part chull f0 f2 f1 cSUBSET f2 f1
D CONVEX_INTERVAL
A |- (!a. (!b. ((convex (closed_interval ((CONS (a , b)) NIL))) /\ (convex (open_interval (a , b))))))
T c/\ cconvex * part cclosed_interval cCONS c, f0 f1 cNIL cconvex * part copen_interval c, f0 f1
D SEGMENT_CONVEX_HULL
A |- (!a. (!b. ((closed_segment ((CONS (a , b)) NIL)) = ((hull convex) (a INSERT (b INSERT EMPTY))))))
T c= * part cclosed_segment cCONS c, f0 f1 cNIL * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
D path_image
A |- (!g. ((path_image g) = ((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c= * part cpath_image f0 * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
D PATH_IMAGE_SUBPATH_GEN
A |- (!u. (!v. (!g. ((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_segment ((CONS (u , v)) NIL)))))))
T c= * part cpath_image * * * part csubpath f0 f1 f2 * * part cIMAGE f2 * part cclosed_segment cCONS c, f0 f1 cNIL
D PATH_SUBPATH
A |- (!u. (!v. (!g. (((path g) /\ ((u IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (v IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> (path (((subpath u) v) g))))))
T c==> c/\ cpath f0 c/\ cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath * * * part csubpath f1 f2 f0
D PATHSTART_SUBPATH
A |- (!u. (!v. (!g. ((pathstart (((subpath u) v) g)) = (g u)))))
T c= cpathstart * * * part csubpath f0 f1 f2 * f2 f0
D PATHFINISH_SUBPATH
A |- (!u. (!v. (!g. ((pathfinish (((subpath u) v) g)) = (g v)))))
T c= cpathfinish * * * part csubpath f0 f1 f2 * f2 f1
+ |- ((\a. (!b. ((closed_segment ((CONS (a , b)) NIL)) = ((hull convex) (a INSERT (b INSERT EMPTY)))))) a)
T * / ! c= * part cclosed_segment cCONS c, b0 b1 cNIL * * part chull part cconvex * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
+ |- ((\v. (!g. ((path_image (((subpath u) v) g)) = ((IMAGE g) (closed_segment ((CONS (u , v)) NIL)))))) v)
T * / ! c= * part cpath_image * * * part csubpath f0 b0 b1 * * part cIMAGE b1 * part cclosed_segment cCONS c, f0 b0 cNIL f1
+ |- (((!s. (!f. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))))) ==> ((\s. (!f. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))))) s)) = ((\s. (!f. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))))) s))
T c= c==> ! ! ! c==> cSUBSET b0 b2 cSUBSET * * part cIMAGE b1 b0 * * part cIMAGE b1 b2 * / ! ! c==> cSUBSET b0 b2 cSUBSET * * part cIMAGE b1 b0 * * part cIMAGE b1 b2 f0 * / ! ! c==> cSUBSET b0 b2 cSUBSET * * part cIMAGE b1 b0 * * part cIMAGE b1 b2 f0
+ |- ((\t. ((P t) ==> ((((hull P) s) SUBSET t) = (s SUBSET t)))) t)
T * / c==> * f0 b0 c= cSUBSET * * part chull f0 f1 b0 cSUBSET f1 b0 f2
+ |- ((((IMAGE g) (closed_segment ((CONS (u , v)) NIL))) SUBSET ((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) = (((IMAGE g) (closed_segment ((CONS (u , v)) NIL))) SUBSET (path_image g)))
T c= cSUBSET * * part cIMAGE f0 * part cclosed_segment cCONS c, f1 f2 cNIL * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cSUBSET * * part cIMAGE f0 * part cclosed_segment cCONS c, f1 f2 cNIL * part cpath_image f0
- |- ((!g'. ((path g) ==> (!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x'. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (?h. ((path h) /\ (((pathstart h) = (g' x)) /\ (((pathfinish h) = (g' x')) /\ (((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET ((IMAGE g') (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))))))))))) = ((path g) ==> (!g. (!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x'. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (?h. ((path h) /\ (((pathstart h) = (g x)) /\ (((pathfinish h) = (g x')) /\ (((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET ((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))))))))))))
T c= ! c==> cpath f0 ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c? / c/\ cpath b3 c/\ c= cpathstart b3 * b0 b1 c/\ c= cpathfinish b3 * b0 b2 cSUBSET * * part cIMAGE b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cpath f0 ! ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c? / c/\ cpath b3 c/\ c= cpathstart b3 * b0 b1 c/\ c= cpathfinish b3 * b0 b2 cSUBSET * * part cIMAGE b3 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cIMAGE b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- ((\b. ((convex (closed_interval ((CONS (a , b)) NIL))) /\ (convex (open_interval (a , b))))) b)
T * / c/\ cconvex * part cclosed_interval cCONS c, f0 b0 cNIL cconvex * part copen_interval c, f0 b0 f1
+ |- ((\s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t))))) s)
T * / ! c= cSUBSET * * part cINSERT f0 b0 b1 c/\ cIN f0 b1 cSUBSET b0 b1 f1
+ ((path g) /\ ((u IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (v IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) |- (((path g) /\ ((u IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (v IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) /\ ((path (((subpath u) v) g)) = T))
T c==> c/\ cpath f0 c/\ cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ c/\ cpath f0 c/\ cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpath * * * part csubpath f1 f2 f0 cT
+ (path g), (u IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), (v IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- (T = ((path g) /\ ((u IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (v IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))
T c==> cpath f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cT c/\ cpath f0 c/\ cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ (path g) |- ((u IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x'. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (?h. ((path h) /\ (((pathstart h) = (g u)) /\ (((pathfinish h) = (g x')) /\ (((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET ((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))))))))
T c==> cpath f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c? / c/\ cpath b1 c/\ c= cpathstart b1 * f0 f1 c/\ c= cpathfinish b1 * f0 b0 cSUBSET * * part cIMAGE b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cIMAGE f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ (path g) |- ((path g) = T)
T c==> cpath f0 c= cpath f0 cT
+ |- ((\b. ((closed_segment ((CONS (a , b)) NIL)) = ((hull convex) (a INSERT (b INSERT EMPTY))))) b)
T * / c= * part cclosed_segment cCONS c, f0 b0 cNIL * * part chull part cconvex * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
+ |- (((u INSERT (v INSERT EMPTY)) SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = ((closed_segment ((CONS (u , v)) NIL)) SUBSET (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))
T c= cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- ((\g. (((path g) /\ ((u IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (v IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> (path (((subpath u) v) g)))) g)
T * / c==> c/\ cpath b0 c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath * * * part csubpath f0 f1 b0 f2
+ |- ((\s. (!t. ((P t) ==> ((((hull P) s) SUBSET t) = (s SUBSET t))))) s)
T * / ! c==> * f0 b1 c= cSUBSET * * part chull f0 b0 b1 cSUBSET b0 b1 f1
+ (path g), (u IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))), (v IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) |- ((path g) /\ ((u IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (v IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))
T c==> cpath f0 c==> cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cpath f0 c/\ cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ (!f. (!s. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))))) |- (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t))))
T c==> ! ! ! c==> cSUBSET b1 b2 cSUBSET * * part cIMAGE b0 b1 * * part cIMAGE b0 b2 ! c==> cSUBSET f0 b0 cSUBSET * * part cIMAGE f1 f0 * * part cIMAGE f1 b0
+ |- (((!v. (!g. (((path g) /\ ((u IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (v IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> (path (((subpath u) v) g))))) ==> ((\v. (!g. (((path g) /\ ((u IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (v IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> (path (((subpath u) v) g))))) v)) = ((\v. (!g. (((path g) /\ ((u IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ (v IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> (path (((subpath u) v) g))))) v))
T c= c==> ! ! c==> c/\ cpath b1 c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath * * * part csubpath f0 b0 b1 * / ! c==> c/\ cpath b1 c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath * * * part csubpath f0 b0 b1 f1 * / ! c==> c/\ cpath b1 c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cpath * * * part csubpath f0 b0 b1 f1
+ |- ((\P. (!s. (!t. ((P t) ==> ((((hull P) s) SUBSET t) = (s SUBSET t)))))) P)
T * / ! ! c==> * b0 b2 c= cSUBSET * * part chull b0 b1 b2 cSUBSET b1 b2 f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((!x'. t) = t)
T c= ! f0 f0
- |- ((convex (open_interval (a , b))) = T)
T c= cconvex * part copen_interval c, f0 f1 cT
- |- ((!x''. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (?h. ((path h) /\ (((pathstart h) = (g x)) /\ (((pathfinish h) = (g x'')) /\ (((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET ((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))))))) = ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x'. (?h. ((path h) /\ (((pathstart h) = (g x)) /\ (((pathfinish h) = (g x')) /\ (((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET ((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))))))))
T c= ! c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c? / c/\ cpath b1 c/\ c= cpathstart b1 * f1 f2 c/\ c= cpathfinish b1 * f1 b0 cSUBSET * * part cIMAGE b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cIMAGE f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c? / c/\ cpath b1 c/\ c= cpathstart b1 * f1 f2 c/\ c= cpathfinish b1 * f1 b0 cSUBSET * * part cIMAGE b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cIMAGE f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- |- ((?h. t) = t)
T c= c? / f0 f0
- (!f. (!s. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))))) |- ((\t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))) t)
T c==> ! ! ! c==> cSUBSET b1 b2 cSUBSET * * part cIMAGE b0 b1 * * part cIMAGE b0 b2 * / c==> cSUBSET f0 b0 cSUBSET * * part cIMAGE f1 f0 * * part cIMAGE f1 b0 f2
- (!f. (!s. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))))) |- (((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t))) = T)
T c==> ! ! ! c==> cSUBSET b1 b2 cSUBSET * * part cIMAGE b0 b1 * * part cIMAGE b0 b2 c= c==> cSUBSET f0 f1 cSUBSET * * part cIMAGE f2 f0 * * part cIMAGE f2 f1 cT
- (!f. (!s. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))))), (s SUBSET t) |- (((IMAGE f) s) SUBSET ((IMAGE f) t))
T c==> ! ! ! c==> cSUBSET b1 b2 cSUBSET * * part cIMAGE b0 b1 * * part cIMAGE b0 b2 c==> cSUBSET f0 f1 cSUBSET * * part cIMAGE f2 f0 * * part cIMAGE f2 f1
- (!f. (!s. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))))), (s SUBSET t) |- ((!f. (!s. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))))) /\ (((IMAGE f) s) SUBSET ((IMAGE f) t)))
T c==> ! ! ! c==> cSUBSET b1 b2 cSUBSET * * part cIMAGE b0 b1 * * part cIMAGE b0 b2 c==> cSUBSET f0 f1 c/\ ! ! ! c==> cSUBSET b1 b2 cSUBSET * * part cIMAGE b0 b1 * * part cIMAGE b0 b2 cSUBSET * * part cIMAGE f2 f0 * * part cIMAGE f2 f1
- |- ((!b'. (((path g) /\ ((a IN (path_image g)) /\ (b IN (path_image g)))) ==> (?h. ((path h) /\ (((pathstart h) = a) /\ (((pathfinish h) = b') /\ ((path_image h) SUBSET (path_image g)))))))) = (((path g) /\ ((a IN (path_image g)) /\ (b IN (path_image g)))) ==> (!b. (?h. ((path h) /\ (((pathstart h) = a) /\ (((pathfinish h) = b) /\ ((path_image h) SUBSET (path_image g)))))))))
T c= ! c==> c/\ cpath f0 c/\ cIN f1 * part cpath_image f0 cIN f2 * part cpath_image f0 c? / c/\ cpath b1 c/\ c= cpathstart b1 f1 c/\ c= cpathfinish b1 b0 cSUBSET * part cpath_image b1 * part cpath_image f0 c==> c/\ cpath f0 c/\ cIN f1 * part cpath_image f0 cIN f2 * part cpath_image f0 ! c? / c/\ cpath b1 c/\ c= cpathstart b1 f1 c/\ c= cpathfinish b1 b0 cSUBSET * part cpath_image b1 * part cpath_image f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (convex (open_interval (a , b)))
T cconvex * part copen_interval c, f0 f1
- (!f. (!s. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))))) |- (((!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))) ==> ((\t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))) t)) = ((\t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))) t))
T c==> ! ! ! c==> cSUBSET b1 b2 cSUBSET * * part cIMAGE b0 b1 * * part cIMAGE b0 b2 c= c==> ! c==> cSUBSET f0 b0 cSUBSET * * part cIMAGE f1 f0 * * part cIMAGE f1 b0 * / c==> cSUBSET f0 b0 cSUBSET * * part cIMAGE f1 f0 * * part cIMAGE f1 b0 f2 * / c==> cSUBSET f0 b0 cSUBSET * * part cIMAGE f1 f0 * * part cIMAGE f1 b0 f2
- (!f. (!s. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))))), (s SUBSET t) |- ((s SUBSET t) /\ (((IMAGE f) s) SUBSET ((IMAGE f) t)))
T c==> ! ! ! c==> cSUBSET b1 b2 cSUBSET * * part cIMAGE b0 b1 * * part cIMAGE b0 b2 c==> cSUBSET f0 f1 c/\ cSUBSET f0 f1 cSUBSET * * part cIMAGE f2 f0 * * part cIMAGE f2 f1
- |- ((!x'. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (?h. ((path h) /\ (((pathstart h) = a) /\ (((pathfinish h) = (g x')) /\ (((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET ((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))))))) = ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x. (?h. ((path h) /\ (((pathstart h) = a) /\ (((pathfinish h) = (g x)) /\ (((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET ((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))))))))
T c= ! c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c? / c/\ cpath b1 c/\ c= cpathstart b1 f1 c/\ c= cpathfinish b1 * f2 b0 cSUBSET * * part cIMAGE b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cIMAGE f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c? / c/\ cpath b1 c/\ c= cpathstart b1 f1 c/\ c= cpathfinish b1 * f2 b0 cSUBSET * * part cIMAGE b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cIMAGE f2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- |- ((!x'. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x''. ((x'' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (?h. ((path h) /\ (((pathstart h) = (g x')) /\ (((pathfinish h) = (g x'')) /\ (((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET ((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))))))))) = ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x. (!x'. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (?h. ((path h) /\ (((pathstart h) = (g x)) /\ (((pathfinish h) = (g x')) /\ (((IMAGE h) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) SUBSET ((IMAGE g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))))))))))
T c= ! c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c? / c/\ cpath b2 c/\ c= cpathstart b2 * f1 b0 c/\ c= cpathfinish b2 * f1 b1 cSUBSET * * part cIMAGE b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cIMAGE f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c? / c/\ cpath b2 c/\ c= cpathstart b2 * f1 b0 c/\ c= cpathfinish b2 * f1 b1 cSUBSET * * part cIMAGE b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * * part cIMAGE f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
- (s SUBSET t) |- ((!f. (!s. (!t. ((s SUBSET t) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))))) ==> (((IMAGE f) s) SUBSET ((IMAGE f) t)))
T c==> cSUBSET f0 f1 c==> ! ! ! c==> cSUBSET b1 b2 cSUBSET * * part cIMAGE b0 b1 * * part cIMAGE b0 b2 cSUBSET * * part cIMAGE f2 f0 * * part cIMAGE f2 f1
- (P t) |- ((P t) /\ ((((hull P) s) SUBSET t) = (s SUBSET t)))
T c==> * f0 f1 c/\ * f0 f1 c= cSUBSET * * part chull f0 f2 f1 cSUBSET f2 f1
