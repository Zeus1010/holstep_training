N ROTATE2D_SUB_ARG
C |- (!w. (!z. (((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))) ==> ((rotate2d ((real_sub (Arg w)) (Arg z))) = (rotate2d (Arg ((complex_div w) z)))))))
T c==> c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c~ c= f1 cCx creal_of_num cNUMERAL c_0 c= * part crotate2d creal_sub cArg f0 cArg f1 * part crotate2d cArg ccomplex_div f0 f1
D TRUTH
A |- T
T cT
D FUN_EQ_THM
A |- (!f. (!g. ((f = g) = (!x. ((f x) = (g x))))))
T c= c= f0 f1 ! c= * f0 b0 * f1 b0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D BIT0
A |- (!n. ((BIT0 n) = (n + n)))
T c= cBIT0 f0 c+ f0 f0
D BIT1
A |- (!n. ((BIT1 n) = (SUC (n + n))))
T c= cBIT1 f0 cSUC c+ f0 f0
D Ssrnat.expnS
A |- (!m. (!n. ((m EXP (SUC n)) = (m * (m EXP n)))))
T c= cEXP f0 cSUC f1 c* f0 cEXP f0 f1
D Ssrnat.expn0
A |- (!m. ((m EXP (NUMERAL _0)) = (NUMERAL (BIT1 _0))))
T c= cEXP f0 cNUMERAL c_0 cNUMERAL cBIT1 c_0
D EXP_ADD
A |- (!m. (!n. (!p. ((m EXP (n + p)) = ((m EXP n) * (m EXP p))))))
T c= cEXP f0 c+ f1 f2 c* cEXP f0 f1 cEXP f0 f2
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D ARITH_EVEN
A |- ((!n. ((EVEN (NUMERAL n)) = (EVEN n))) /\ (((EVEN _0) = T) /\ ((!n. ((EVEN (BIT0 n)) = T)) /\ (!n. ((EVEN (BIT1 n)) = F)))))
T c/\ ! c= cEVEN cNUMERAL b0 cEVEN b0 c/\ c= cEVEN c_0 cT c/\ ! c= cEVEN cBIT0 b0 cT ! c= cEVEN cBIT1 b0 cF
D real_sub
A |- (!x. (!y. (((real_sub x) y) = ((real_add x) (real_neg y)))))
T c= creal_sub f0 f1 creal_add f0 creal_neg f1
D REAL_OF_NUM_POW
A |- (!x. (!n. (((real_pow (real_of_num x)) n) = (real_of_num (x EXP n)))))
T c= creal_pow creal_of_num f0 f1 creal_of_num cEXP f0 f1
D REAL_POW_NEG
A |- (!x. (!n. (((real_pow (real_neg x)) n) = (((COND (EVEN n)) ((real_pow x) n)) (real_neg ((real_pow x) n))))))
T c= creal_pow creal_neg f0 f1 cCOND cEVEN f1 creal_pow f0 f1 creal_neg creal_pow f0 f1
D REAL_INV_1
A |- ((real_inv (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))
T c= creal_inv creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
D COMPLEX_MUL_LID
A |- (!x. (((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) x) = x))
T c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D COMPLEX_ADD_RID
A |- (!x. (((vector_add x) (Cx (real_of_num (NUMERAL _0)))) = x))
T c= cvector_add f0 cCx creal_of_num cNUMERAL c_0 f0
D COMPLEX_MUL_RZERO
A |- (!x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0)))))
T c= ccomplex_mul f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
D COMPLEX_NEG_0
A |- ((vector_neg (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0))))
T c= cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
D CX_NEG
A |- (!x. ((Cx (real_neg x)) = (vector_neg (Cx x))))
T c= cCx creal_neg f0 cvector_neg cCx f0
D RE_CX
A |- (!x. ((Re (Cx x)) = x))
T c= cRe cCx f0 f0
D IM_CX
A |- (!x. ((Im (Cx x)) = (real_of_num (NUMERAL _0))))
T c= cIm cCx f0 creal_of_num cNUMERAL c_0
D RE_MUL_II
A |- (!z. (((Re ((complex_mul z) ii)) = (real_neg (Im z))) /\ ((Re ((complex_mul ii) z)) = (real_neg (Im z)))))
T c/\ c= cRe ccomplex_mul f0 cii creal_neg cIm f0 c= cRe ccomplex_mul cii f0 creal_neg cIm f0
D IM_MUL_II
A |- (!z. (((Im ((complex_mul z) ii)) = (Re z)) /\ ((Im ((complex_mul ii) z)) = (Re z))))
T c/\ c= cIm ccomplex_mul f0 cii cRe f0 c= cIm ccomplex_mul cii f0 cRe f0
D Real_ext.REAL_SV_EXP_0
A |- ((exp (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL (BIT1 _0))))
T c= cexp creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
D REAL_EXP_NEG
A |- (!x. ((exp (real_neg x)) = (real_inv (exp x))))
T c= cexp creal_neg f0 creal_inv cexp f0
D Trigonometry.KGLLRQT2
A |- (!x. ((sin (real_neg x)) = (real_neg (sin x))))
T c= csin creal_neg f0 creal_neg csin f0
D Trigonometry.KGLLRQT1
A |- (!x. ((cos (real_neg x)) = (cos x)))
T c= ccos creal_neg f0 ccos f0
D EULER
A |- (!z. ((cexp z) = ((complex_mul (Cx (exp (Re z)))) ((vector_add (Cx (cos (Im z)))) ((complex_mul ii) (Cx (sin (Im z))))))))
T c= ccexp f0 ccomplex_mul cCx cexp cRe f0 cvector_add cCx ccos cIm f0 ccomplex_mul cii cCx csin cIm f0
D SIN_NPI
A |- (!n. ((sin ((real_mul (real_of_num n)) pi)) = (real_of_num (NUMERAL _0))))
T c= csin creal_mul creal_of_num f0 cpi creal_of_num cNUMERAL c_0
D COS_NPI
A |- (!n. ((cos ((real_mul (real_of_num n)) pi)) = ((real_pow (real_neg (real_of_num (NUMERAL (BIT1 _0))))) n)))
T c= ccos creal_mul creal_of_num f0 cpi creal_pow creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_SUB_ARG
A |- (!w. (!z. (((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))) ==> (((real_sub (Arg w)) (Arg z)) = (((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))))
T c==> c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c~ c= f1 cCx creal_of_num cNUMERAL c_0 c= creal_sub cArg f0 cArg f1 cCOND creal_le cArg f1 cArg f0 cArg ccomplex_div f0 f1 creal_sub cArg ccomplex_div f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi
D ROTATE2D_ADD
A |- (!s. (!t. (!x. (((rotate2d ((real_add s) t)) x) = ((rotate2d s) ((rotate2d t) x))))))
T c= crotate2d creal_add f0 f1 f2 crotate2d f0 crotate2d f1 f2
D ROTATE2D_COMPLEX
A |- (!t. (!z. (((rotate2d t) z) = ((complex_mul (cexp ((complex_mul ii) (Cx t)))) z))))
T c= crotate2d f0 f1 ccomplex_mul ccexp ccomplex_mul cii cCx f0 f1
+ |- ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0))))
T c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
+ |- (((((BIT1 _0) EXP _0) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0))))) = ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0)))))
T c= c==> c= cEXP cBIT1 c_0 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
+ |- (((!s. (!t. (!x. (((rotate2d ((real_add s) t)) x) = ((rotate2d s) ((rotate2d t) x)))))) ==> ((\s. (!t. (!x. (((rotate2d ((real_add s) t)) x) = ((rotate2d s) ((rotate2d t) x)))))) s)) = ((\s. (!t. (!x. (((rotate2d ((real_add s) t)) x) = ((rotate2d s) ((rotate2d t) x)))))) s))
T c= c==> ! ! ! c= crotate2d creal_add b0 b1 b2 crotate2d b0 crotate2d b1 b2 * / ! ! c= crotate2d creal_add b0 b1 b2 crotate2d b0 crotate2d b1 b2 f0 * / ! ! c= crotate2d creal_add b0 b1 b2 crotate2d b0 crotate2d b1 b2 f0
- ((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))) |- (((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))) /\ (((real_sub (Arg w)) (Arg z)) = (((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))
T c==> c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c~ c= f1 cCx creal_of_num cNUMERAL c_0 c/\ c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c~ c= f1 cCx creal_of_num cNUMERAL c_0 c= creal_sub cArg f0 cArg f1 cCOND creal_le cArg f1 cArg f0 cArg ccomplex_div f0 f1 creal_sub cArg ccomplex_div f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi
+ |- ((\z. ((cexp z) = ((complex_mul (Cx (exp (Re z)))) ((vector_add (Cx (cos (Im z)))) ((complex_mul ii) (Cx (sin (Im z)))))))) z)
T * / c= ccexp b0 ccomplex_mul cCx cexp cRe b0 cvector_add cCx ccos cIm b0 ccomplex_mul cii cCx csin cIm b0 f0
+ |- (((!t. (!x. (((rotate2d ((real_add s) t)) x) = ((rotate2d s) ((rotate2d t) x))))) ==> ((\t. (!x. (((rotate2d ((real_add s) t)) x) = ((rotate2d s) ((rotate2d t) x))))) t)) = ((\t. (!x. (((rotate2d ((real_add s) t)) x) = ((rotate2d s) ((rotate2d t) x))))) t))
T c= c==> ! ! c= crotate2d creal_add f0 b0 b1 crotate2d f0 crotate2d b0 b1 * / ! c= crotate2d creal_add f0 b0 b1 crotate2d f0 crotate2d b0 b1 f1 * / ! c= crotate2d creal_add f0 b0 b1 crotate2d f0 crotate2d b0 b1 f1
+ |- ((~ ((real_le (Arg z)) (Arg w))) ==> ((rotate2d ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (rotate2d (Arg ((complex_div w) z)))))
T c==> c~ creal_le cArg f0 cArg f1 c= * part crotate2d creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi * part crotate2d cArg ccomplex_div f1 f0
+ (~ (w = (Cx (real_of_num (NUMERAL _0))))), (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- ((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0))))))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c~ c= f1 cCx creal_of_num cNUMERAL c_0 c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c~ c= f1 cCx creal_of_num cNUMERAL c_0
+ |- ((((real_le (Arg z)) (Arg w)) ==> ((rotate2d (Arg ((complex_div w) z))) = (rotate2d (Arg ((complex_div w) z))))) /\ ((~ ((real_le (Arg z)) (Arg w))) ==> ((rotate2d ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (rotate2d (Arg ((complex_div w) z))))))
T c/\ c==> creal_le cArg f0 cArg f1 c= * part crotate2d cArg ccomplex_div f1 f0 * part crotate2d cArg ccomplex_div f1 f0 c==> c~ creal_le cArg f0 cArg f1 c= * part crotate2d creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi * part crotate2d cArg ccomplex_div f1 f0
+ |- (((!x. ((Cx (real_neg x)) = (vector_neg (Cx x)))) ==> ((\x. ((Cx (real_neg x)) = (vector_neg (Cx x)))) x)) = ((\x. ((Cx (real_neg x)) = (vector_neg (Cx x)))) x))
T c= c==> ! c= cCx creal_neg b0 cvector_neg cCx b0 * / c= cCx creal_neg b0 cvector_neg cCx b0 f0 * / c= cCx creal_neg b0 cvector_neg cCx b0 f0
+ |- (((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0))) = (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0)))
T c= c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
+ (~ (w = (Cx (real_of_num (NUMERAL _0))))), (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- (T = ((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c~ c= f1 cCx creal_of_num cNUMERAL c_0 c= cT c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c~ c= f1 cCx creal_of_num cNUMERAL c_0
+ |- ((\x. (!y. (((real_sub x) y) = ((real_add x) (real_neg y))))) x)
T * / ! c= creal_sub b0 b1 creal_add b0 creal_neg b1 f0
+ |- (((complex_mul ((complex_mul (Cx (real_inv (real_of_num (NUMERAL (BIT1 _0)))))) (Cx ((real_pow (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (NUMERAL (BIT0 (BIT1 _0))))))) x) = x)
T c= ccomplex_mul ccomplex_mul cCx creal_inv creal_of_num cNUMERAL cBIT1 c_0 cCx creal_pow creal_neg creal_of_num cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 f0 f0
+ |- ((\x. (((vector_add x) (Cx (real_of_num (NUMERAL _0)))) = x)) x)
T * / c= cvector_add b0 cCx creal_of_num cNUMERAL c_0 b0 f0
+ |- (((!x. (!y. (((real_sub x) y) = ((real_add x) (real_neg y))))) ==> ((\x. (!y. (((real_sub x) y) = ((real_add x) (real_neg y))))) x)) = ((\x. (!y. (((real_sub x) y) = ((real_add x) (real_neg y))))) x))
T c= c==> ! ! c= creal_sub b0 b1 creal_add b0 creal_neg b1 * / ! c= creal_sub b0 b1 creal_add b0 creal_neg b1 f0 * / ! c= creal_sub b0 b1 creal_add b0 creal_neg b1 f0
- (~ ((real_le (Arg z)) (Arg w))) |- ((~ ((real_le (Arg z)) (Arg w))) /\ (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))
T c==> c~ creal_le cArg f0 cArg f1 c/\ c~ creal_le cArg f0 cArg f1 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi
- |- ((Re ((complex_mul z) ii)) = (real_neg (Im z)))
T c= cRe ccomplex_mul f0 cii creal_neg cIm f0
+ |- (((BIT1 _0) * (BIT1 _0)) = (BIT1 _0))
T c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
+ |- ((\x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0))))) x)
T * / c= ccomplex_mul b0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 f0
- (~ ((real_le (Arg z)) (Arg w))) |- (((rotate2d ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (rotate2d (Arg ((complex_div w) z)))) = ((rotate2d ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (rotate2d (Arg ((complex_div w) z)))))
T c==> c~ creal_le cArg f0 cArg f1 c= c= * part crotate2d creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi * part crotate2d cArg ccomplex_div f1 f0 c= * part crotate2d creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi * part crotate2d cArg ccomplex_div f1 f0
+ |- (((((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0)) ==> ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT0 (BIT1 _0))) = (BIT1 _0)))) = ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT0 (BIT1 _0))) = (BIT1 _0))))
T c= c==> c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT0 cBIT1 c_0 cBIT1 c_0 c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT0 cBIT1 c_0 cBIT1 c_0
+ |- ((\y. (((real_sub x) y) = ((real_add x) (real_neg y)))) y)
T * / c= creal_sub f0 b0 creal_add f0 creal_neg b0 f1
+ |- ((!z. (((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))) ==> ((rotate2d ((real_sub (Arg w)) (Arg z))) = (rotate2d (Arg ((complex_div w) z)))))) = T)
T c= ! c==> c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= * part crotate2d creal_sub cArg f0 cArg b0 * part crotate2d cArg ccomplex_div f0 b0 cT
+ (~ ((real_le (Arg z)) (Arg w))) |- ((~ ((real_le (Arg z)) (Arg w))) /\ ((rotate2d ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (rotate2d (Arg ((complex_div w) z)))))
T c==> c~ creal_le cArg f0 cArg f1 c/\ c~ creal_le cArg f0 cArg f1 c= * part crotate2d creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi * part crotate2d cArg ccomplex_div f1 f0
- |- ((!x. t) = t)
T c= ! f0 f0
+ |- ((\n. ((cos ((real_mul (real_of_num n)) pi)) = ((real_pow (real_neg (real_of_num (NUMERAL (BIT1 _0))))) n))) n)
T * / c= ccos creal_mul creal_of_num b0 cpi creal_pow creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 f0
+ |- ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT1 _0)) = (BIT1 _0)))
T c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT1 c_0 cBIT1 c_0
- |- (((~ ((real_le (Arg z)) (Arg w))) ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) e')))
T c==> c==> c~ creal_le cArg f0 cArg f1 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f2 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 f2
+ |- (!x. (((rotate2d (Arg ((complex_div w) z))) ((rotate2d (real_neg ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) x)) = ((rotate2d (Arg ((complex_div w) z))) x)))
T c= crotate2d cArg ccomplex_div f0 f1 crotate2d creal_neg creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f2 crotate2d cArg ccomplex_div f0 f1 f2
- |- (T = (((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) x) = x))
T c= cT c= ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 f0
+ |- ((\n. ((sin ((real_mul (real_of_num n)) pi)) = (real_of_num (NUMERAL _0)))) n)
T * / c= csin creal_mul creal_of_num b0 cpi creal_of_num cNUMERAL c_0 f0
+ |- ((\x. ((sin (real_neg x)) = (real_neg (sin x)))) x)
T * / c= csin creal_neg b0 creal_neg csin b0 f0
+ |- ((\x. ((exp (real_neg x)) = (real_inv (exp x)))) x)
T * / c= cexp creal_neg b0 creal_inv cexp b0 f0
+ |- ((Im ((complex_mul ii) z)) = (Re z))
T c= cIm ccomplex_mul cii f0 cRe f0
- ((real_le (Arg z)) (Arg w)) |- (((rotate2d (Arg ((complex_div w) z))) = (rotate2d (Arg ((complex_div w) z)))) = ((rotate2d (Arg ((complex_div w) z))) = (rotate2d (Arg ((complex_div w) z)))))
T c==> creal_le cArg f0 cArg f1 c= c= * part crotate2d cArg ccomplex_div f1 f0 * part crotate2d cArg ccomplex_div f1 f0 c= * part crotate2d cArg ccomplex_div f1 f0 * part crotate2d cArg ccomplex_div f1 f0
+ |- (((!w. (!z. (((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))) ==> (((real_sub (Arg w)) (Arg z)) = (((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))))) ==> ((\w. (!z. (((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))) ==> (((real_sub (Arg w)) (Arg z)) = (((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))))) w)) = ((\w. (!z. (((~ (w = (Cx (real_of_num (NUMERAL _0))))) /\ (~ (z = (Cx (real_of_num (NUMERAL _0)))))) ==> (((real_sub (Arg w)) (Arg z)) = (((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))))) w))
T c= c==> ! ! c==> c/\ c~ c= b0 cCx creal_of_num cNUMERAL c_0 c~ c= b1 cCx creal_of_num cNUMERAL c_0 c= creal_sub cArg b0 cArg b1 cCOND creal_le cArg b1 cArg b0 cArg ccomplex_div b0 b1 creal_sub cArg ccomplex_div b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi * / ! c==> c/\ c~ c= b0 cCx creal_of_num cNUMERAL c_0 c~ c= b1 cCx creal_of_num cNUMERAL c_0 c= creal_sub cArg b0 cArg b1 cCOND creal_le cArg b1 cArg b0 cArg ccomplex_div b0 b1 creal_sub cArg ccomplex_div b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f0 * / ! c==> c/\ c~ c= b0 cCx creal_of_num cNUMERAL c_0 c~ c= b1 cCx creal_of_num cNUMERAL c_0 c= creal_sub cArg b0 cArg b1 cCOND creal_le cArg b1 cArg b0 cArg ccomplex_div b0 b1 creal_sub cArg ccomplex_div b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f0
+ |- (((!t. (!z. (((rotate2d t) z) = ((complex_mul (cexp ((complex_mul ii) (Cx t)))) z)))) ==> ((\t. (!z. (((rotate2d t) z) = ((complex_mul (cexp ((complex_mul ii) (Cx t)))) z)))) t)) = ((\t. (!z. (((rotate2d t) z) = ((complex_mul (cexp ((complex_mul ii) (Cx t)))) z)))) t))
T c= c==> ! ! c= crotate2d b0 b1 ccomplex_mul ccexp ccomplex_mul cii cCx b0 b1 * / ! c= crotate2d b0 b1 ccomplex_mul ccexp ccomplex_mul cii cCx b0 b1 f0 * / ! c= crotate2d b0 b1 ccomplex_mul ccexp ccomplex_mul cii cCx b0 b1 f0
+ |- ((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT0 (BIT1 _0))) = (BIT1 _0)))
T c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT0 cBIT1 c_0 cBIT1 c_0
+ |- ((\z. (((Re ((complex_mul z) ii)) = (real_neg (Im z))) /\ ((Re ((complex_mul ii) z)) = (real_neg (Im z))))) z)
T * / c/\ c= cRe ccomplex_mul b0 cii creal_neg cIm b0 c= cRe ccomplex_mul cii b0 creal_neg cIm b0 f0
+ |- ((\x. ((Re (Cx x)) = x)) x)
T * / c= cRe cCx b0 b0 f0
+ |- (((((BIT1 _0) * (BIT1 _0)) = (BIT1 _0)) ==> (((BIT1 _0) EXP (BIT0 (BIT1 _0))) = (BIT1 _0))) = (((BIT1 _0) EXP (BIT0 (BIT1 _0))) = (BIT1 _0)))
T c= c==> c= c* cBIT1 c_0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT0 cBIT1 c_0 cBIT1 c_0 c= cEXP cBIT1 c_0 cBIT0 cBIT1 c_0 cBIT1 c_0
+ |- (((((real_le (Arg z)) (Arg w)) ==> ((rotate2d (Arg ((complex_div w) z))) = (rotate2d (Arg ((complex_div w) z))))) /\ ((~ ((real_le (Arg z)) (Arg w))) ==> ((rotate2d ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (rotate2d (Arg ((complex_div w) z)))))) = ((rotate2d (((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))) = (rotate2d (Arg ((complex_div w) z)))))
T c= c/\ c==> creal_le cArg f0 cArg f1 c= * part crotate2d cArg ccomplex_div f1 f0 * part crotate2d cArg ccomplex_div f1 f0 c==> c~ creal_le cArg f0 cArg f1 c= * part crotate2d creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi * part crotate2d cArg ccomplex_div f1 f0 c= * part crotate2d cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi * part crotate2d cArg ccomplex_div f1 f0
+ |- ((\x. (((rotate2d ((real_add s) t)) x) = ((rotate2d s) ((rotate2d t) x)))) x)
T * / c= crotate2d creal_add f0 f1 b0 crotate2d f0 crotate2d f1 b0 f2
- |- (T = ((rotate2d (Arg ((complex_div w) z))) = (rotate2d (Arg ((complex_div w) z)))))
T c= cT c= * part crotate2d cArg ccomplex_div f0 f1 * part crotate2d cArg ccomplex_div f0 f1
+ |- ((\t. (!z. (((rotate2d t) z) = ((complex_mul (cexp ((complex_mul ii) (Cx t)))) z)))) t)
T * / ! c= crotate2d b0 b1 ccomplex_mul ccexp ccomplex_mul cii cCx b0 b1 f0
+ |- (((!g. ((f = g) = (!x. ((f x) = (g x))))) ==> ((\g. ((f = g) = (!x. ((f x) = (g x))))) g)) = ((\g. ((f = g) = (!x. ((f x) = (g x))))) g))
T c= c==> ! c= c= f0 b0 ! c= * f0 b1 * b0 b1 * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1 * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1
- |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- |- ((Im ((complex_mul z) ii)) = (Re z))
T c= cIm ccomplex_mul f0 cii cRe f0
- |- (((((real_le (Arg z)) (Arg w)) ==> ((Arg ((complex_div w) z)) = (Arg ((complex_div w) z)))) ==> (((~ ((real_le (Arg z)) (Arg w))) ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) e')))) = (((~ ((real_le (Arg z)) (Arg w))) ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) e'))))
T c= c==> c==> creal_le cArg f0 cArg f1 c= cArg ccomplex_div f1 f0 cArg ccomplex_div f1 f0 c==> c==> c~ creal_le cArg f0 cArg f1 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f2 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 f2 c==> c==> c~ creal_le cArg f0 cArg f1 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f2 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 f2
- |- (((!g'. (!t'. (!e'. ((((real_le (Arg z)) (Arg w)) = g') ==> ((g' ==> ((Arg ((complex_div w) z)) = t')) ==> (((~ g') ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((real_le (Arg z)) (Arg w)) = g') ==> ((g' ==> ((Arg ((complex_div w) z)) = t')) ==> (((~ g') ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((real_le (Arg z)) (Arg w)) = g') ==> ((g' ==> ((Arg ((complex_div w) z)) = t')) ==> (((~ g') ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= creal_le cArg f0 cArg f1 b0 c==> c==> b0 c= cArg ccomplex_div f1 f0 b1 c==> c==> c~ b0 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi b2 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND b0 b1 b2 * / ! ! c==> c= creal_le cArg f0 cArg f1 b0 c==> c==> b0 c= cArg ccomplex_div f1 f0 b1 c==> c==> c~ b0 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi b2 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND b0 b1 b2 f2 * / ! ! c==> c= creal_le cArg f0 cArg f1 b0 c==> c==> b0 c= cArg ccomplex_div f1 f0 b1 c==> c==> c~ b0 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi b2 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND b0 b1 b2 f2
- |- ((x = x) = T)
T c= c= f0 f0 cT
- ((Cx (real_of_num (NUMERAL _0))) = z) |- (z = (Cx (real_of_num (NUMERAL _0))))
T c==> c= cCx creal_of_num cNUMERAL c_0 f0 c= f0 cCx creal_of_num cNUMERAL c_0
- (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- (~ ((Cx (real_of_num (NUMERAL _0))) = z))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c~ c= cCx creal_of_num cNUMERAL c_0 f0
- |- ((((real_le (Arg z)) (Arg w)) ==> ((Arg ((complex_div w) z)) = t')) ==> (((~ ((real_le (Arg z)) (Arg w))) ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND ((real_le (Arg z)) (Arg w))) t') e'))))
T c==> c==> creal_le cArg f0 cArg f1 c= cArg ccomplex_div f1 f0 f2 c==> c==> c~ creal_le cArg f0 cArg f1 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f3 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND creal_le cArg f0 cArg f1 f2 f3
- |- (((((real_le (Arg z)) (Arg w)) = ((real_le (Arg z)) (Arg w))) ==> ((((real_le (Arg z)) (Arg w)) ==> ((Arg ((complex_div w) z)) = t')) ==> (((~ ((real_le (Arg z)) (Arg w))) ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND ((real_le (Arg z)) (Arg w))) t') e'))))) = ((((real_le (Arg z)) (Arg w)) ==> ((Arg ((complex_div w) z)) = t')) ==> (((~ ((real_le (Arg z)) (Arg w))) ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND ((real_le (Arg z)) (Arg w))) t') e')))))
T c= c==> c= creal_le cArg f0 cArg f1 creal_le cArg f0 cArg f1 c==> c==> creal_le cArg f0 cArg f1 c= cArg ccomplex_div f1 f0 f2 c==> c==> c~ creal_le cArg f0 cArg f1 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f3 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND creal_le cArg f0 cArg f1 f2 f3 c==> c==> creal_le cArg f0 cArg f1 c= cArg ccomplex_div f1 f0 f2 c==> c==> c~ creal_le cArg f0 cArg f1 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f3 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND creal_le cArg f0 cArg f1 f2 f3
- |- ((((real_le (Arg z)) (Arg w)) = g') ==> ((g' ==> ((Arg ((complex_div w) z)) = t')) ==> (((~ g') ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND g') t') e')))))
T c==> c= creal_le cArg f0 cArg f1 f2 c==> c==> f2 c= cArg ccomplex_div f1 f0 f3 c==> c==> c~ f2 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f4 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND f2 f3 f4
- |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
- |- ((\t'. (!e'. ((((real_le (Arg z)) (Arg w)) = g') ==> ((g' ==> ((Arg ((complex_div w) z)) = t')) ==> (((~ g') ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= creal_le cArg f0 cArg f1 f2 c==> c==> f2 c= cArg ccomplex_div f1 f0 b0 c==> c==> c~ f2 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi b1 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND f2 b0 b1 f3
- ((real_le (Arg z)) (Arg w)) |- (((real_le (Arg z)) (Arg w)) /\ ((Arg ((complex_div w) z)) = (Arg ((complex_div w) z))))
T c==> creal_le cArg f0 cArg f1 c/\ creal_le cArg f0 cArg f1 c= cArg ccomplex_div f1 f0 cArg ccomplex_div f1 f0
- |- ((\g'. (!t'. (!e'. ((((real_le (Arg z)) (Arg w)) = g') ==> ((g' ==> ((Arg ((complex_div w) z)) = t')) ==> (((~ g') ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= creal_le cArg f0 cArg f1 b0 c==> c==> b0 c= cArg ccomplex_div f1 f0 b1 c==> c==> c~ b0 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi b2 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND b0 b1 b2 f2
- |- ((~ ((real_le (Arg z)) (Arg w))) ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))
T c==> c~ creal_le cArg f0 cArg f1 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
- |- (((real_le (Arg z)) (Arg w)) ==> ((Arg ((complex_div w) z)) = (Arg ((complex_div w) z))))
T c==> creal_le cArg f0 cArg f1 c= cArg ccomplex_div f1 f0 cArg ccomplex_div f1 f0
- ((real_le (Arg z)) (Arg w)) |- (((real_le (Arg z)) (Arg w)) = T)
T c==> creal_le cArg f0 cArg f1 c= creal_le cArg f0 cArg f1 cT
- |- ((((~ ((real_le (Arg z)) (Arg w))) ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) = ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))
T c= c==> c==> c~ creal_le cArg f0 cArg f1 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi
- (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- (((~ ((Cx (real_of_num (NUMERAL _0))) = z)) ==> (((Cx (real_of_num (NUMERAL _0))) = z) = F)) = (((Cx (real_of_num (NUMERAL _0))) = z) = F))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= c==> c~ c= cCx creal_of_num cNUMERAL c_0 f0 c= c= cCx creal_of_num cNUMERAL c_0 f0 cF c= c= cCx creal_of_num cNUMERAL c_0 f0 cF
- |- (((!t'. (!e'. ((((real_le (Arg z)) (Arg w)) = g') ==> ((g' ==> ((Arg ((complex_div w) z)) = t')) ==> (((~ g') ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((real_le (Arg z)) (Arg w)) = g') ==> ((g' ==> ((Arg ((complex_div w) z)) = t')) ==> (((~ g') ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((real_le (Arg z)) (Arg w)) = g') ==> ((g' ==> ((Arg ((complex_div w) z)) = t')) ==> (((~ g') ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= creal_le cArg f0 cArg f1 f2 c==> c==> f2 c= cArg ccomplex_div f1 f0 b0 c==> c==> c~ f2 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi b1 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND f2 b0 b1 * / ! c==> c= creal_le cArg f0 cArg f1 f2 c==> c==> f2 c= cArg ccomplex_div f1 f0 b0 c==> c==> c~ f2 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi b1 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND f2 b0 b1 f3 * / ! c==> c= creal_le cArg f0 cArg f1 f2 c==> c==> f2 c= cArg ccomplex_div f1 f0 b0 c==> c==> c~ f2 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi b1 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND f2 b0 b1 f3
- (~ ((real_le (Arg z)) (Arg w))) |- (((real_le (Arg z)) (Arg w)) = F)
T c==> c~ creal_le cArg f0 cArg f1 c= creal_le cArg f0 cArg f1 cF
- |- ((\e'. ((((real_le (Arg z)) (Arg w)) = g') ==> ((g' ==> ((Arg ((complex_div w) z)) = t')) ==> (((~ g') ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND g') t') e')))))) e')
T * / c==> c= creal_le cArg f0 cArg f1 f2 c==> c==> f2 c= cArg ccomplex_div f1 f0 f3 c==> c==> c~ f2 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi b0 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND f2 f3 b0 f4
- |- ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))
T c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi
- (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- (((Cx (real_of_num (NUMERAL _0))) = z) = F)
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= c= cCx creal_of_num cNUMERAL c_0 f0 cF
- (z = (Cx (real_of_num (NUMERAL _0)))) |- ((Cx (real_of_num (NUMERAL _0))) = z)
T c==> c= f0 cCx creal_of_num cNUMERAL c_0 c= cCx creal_of_num cNUMERAL c_0 f0
- |- (((!e'. ((((real_le (Arg z)) (Arg w)) = g') ==> ((g' ==> ((Arg ((complex_div w) z)) = t')) ==> (((~ g') ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND g') t') e')))))) ==> ((\e'. ((((real_le (Arg z)) (Arg w)) = g') ==> ((g' ==> ((Arg ((complex_div w) z)) = t')) ==> (((~ g') ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND g') t') e')))))) e')) = ((\e'. ((((real_le (Arg z)) (Arg w)) = g') ==> ((g' ==> ((Arg ((complex_div w) z)) = t')) ==> (((~ g') ==> (((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) = e')) ==> ((((COND ((real_le (Arg z)) (Arg w))) (Arg ((complex_div w) z))) ((real_sub (Arg ((complex_div w) z))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= creal_le cArg f0 cArg f1 f2 c==> c==> f2 c= cArg ccomplex_div f1 f0 f3 c==> c==> c~ f2 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi b0 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND f2 f3 b0 * / c==> c= creal_le cArg f0 cArg f1 f2 c==> c==> f2 c= cArg ccomplex_div f1 f0 f3 c==> c==> c~ f2 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi b0 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND f2 f3 b0 f4 * / c==> c= creal_le cArg f0 cArg f1 f2 c==> c==> f2 c= cArg ccomplex_div f1 f0 f3 c==> c==> c~ f2 c= creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi b0 c= cCOND creal_le cArg f0 cArg f1 cArg ccomplex_div f1 f0 creal_sub cArg ccomplex_div f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cCOND f2 f3 b0 f4
- |- ((!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))) = T)
T c= ! ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= f3 b1 c= cCOND f0 f2 f3 cCOND f1 b0 b1 cT
