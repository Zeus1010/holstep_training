N List_hypermap.flatten_filter_empty
C |- (!L. ((flatten ((filter (\l. (~ (l = NIL)))) L)) = (flatten L)))
T c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D list_INDUCT
A |- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
D ssreflect_eq_def
A |- (!v. (!P. (((ssreflect_eq v) P) = P)))
T c= cssreflect_eq f0 f1 f1
D bool_elim
A |- (!P. (((P T) /\ (P F)) ==> (!x. (P x))))
T c==> c/\ * f0 cT * f0 cF ! * f0 b0
D Seq.cat
A |- (!x. (!t. (!s2. ((((cat NIL) s2) = s2) /\ (((cat ((CONS x) t)) s2) = ((CONS x) ((cat t) s2)))))))
T c/\ c= ccat cNIL f0 f0 c= ccat cCONS f1 f2 f0 cCONS f1 ccat f2 f0
D Seq.filter
A |- (!a. (!x. (!s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s')))))))
T c/\ c= cfilter f0 cNIL cNIL c= cfilter f0 cCONS f1 f2 cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2
D Seq.foldr
A |- (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))
T c/\ c= cfoldr f0 f1 cCONS f2 f3 * * f0 f2 cfoldr f0 f1 f3 c= cfoldr f0 f1 cNIL f1
D Seq.flatten
A |- (flatten = ((foldr cat) NIL))
T c= part cflatten * * part cfoldr part ccat cNIL
- |- (((!g'. (!t'. (!e'. ((((\l. (~ (l = NIL))) h) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((\l. (~ (l = NIL))) h) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((\l. (~ (l = NIL))) h) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= * / c~ c= b3 cNIL f0 b0 c==> c==> b0 c= cCONS f0 cfilter / c~ c= b3 cNIL f1 b1 c==> c==> c~ b0 c= cfilter / c~ c= b3 cNIL f1 b2 c= cCOND * / c~ c= b3 cNIL f0 cCONS f0 cfilter / c~ c= b3 cNIL f1 cfilter / c~ c= b3 cNIL f1 cCOND b0 b1 b2 * / ! ! c==> c= * / c~ c= b3 cNIL f0 b0 c==> c==> b0 c= cCONS f0 cfilter / c~ c= b3 cNIL f1 b1 c==> c==> c~ b0 c= cfilter / c~ c= b3 cNIL f1 b2 c= cCOND * / c~ c= b3 cNIL f0 cCONS f0 cfilter / c~ c= b3 cNIL f1 cfilter / c~ c= b3 cNIL f1 cCOND b0 b1 b2 f2 * / ! ! c==> c= * / c~ c= b3 cNIL f0 b0 c==> c==> b0 c= cCONS f0 cfilter / c~ c= b3 cNIL f1 b1 c==> c==> c~ b0 c= cfilter / c~ c= b3 cNIL f1 b2 c= cCOND * / c~ c= b3 cNIL f0 cCONS f0 cfilter / c~ c= b3 cNIL f1 cfilter / c~ c= b3 cNIL f1 cCOND b0 b1 b2 f2
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- (((ssreflect_eq eq) ((h = NIL) = T)) ==> ((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c==> cssreflect_eq f1 c= c= f2 cNIL cT c= cflatten cCOND c~ cT cCONS f2 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f2 cflatten f0
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
+ |- (((!a. (!x. (!s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s'))))))) ==> ((\a. (!x. (!s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s'))))))) a)) = ((\a. (!x. (!s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s'))))))) a))
T c= c==> ! ! ! c/\ c= cfilter b0 cNIL cNIL c= cfilter b0 cCONS b1 b2 cCOND * b0 b1 cCONS b1 cfilter b0 b2 cfilter b0 b2 * / ! ! c/\ c= cfilter b0 cNIL cNIL c= cfilter b0 cCONS b1 b2 cCOND * b0 b1 cCONS b1 cfilter b0 b2 cfilter b0 b2 f0 * / ! ! c/\ c= cfilter b0 cNIL cNIL c= cfilter b0 cCONS b1 b2 cCOND * b0 b1 cCONS b1 cfilter b0 b2 cfilter b0 b2 f0
+ |- (T ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = ((CONS h) ((filter (\l. (~ (l = NIL)))) t))))
T c==> cT c= cCONS f0 cfilter / c~ c= b0 cNIL f1 cCONS f0 cfilter / c~ c= b0 cNIL f1
+ |- ((\s2. ((((cat NIL) s2) = s2) /\ (((cat ((CONS x) t)) s2) = ((CONS x) ((cat t) s2))))) s2)
T * / c/\ c= ccat cNIL b0 b0 c= ccat cCONS f0 f1 b0 cCONS f0 ccat f1 b0 f2
- ((P T) /\ (P F)) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!x. (P x)))
T c==> c/\ * f0 cT * f0 cF c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! * f0 b0
- (~ (h = NIL)) |- ((NIL = h) = F)
T c==> c~ c= f0 cNIL c= c= cNIL f0 cF
+ |- (((flatten ((filter (\l. (~ (l = NIL)))) NIL)) = (flatten NIL)) /\ (!a0. (!a1. (((flatten ((filter (\l. (~ (l = NIL)))) a1)) = (flatten a1)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) ((CONS a0) a1))) = (flatten ((CONS a0) a1)))))))
T c/\ c= cflatten cfilter / c~ c= b0 cNIL cNIL cflatten cNIL ! ! c==> c= cflatten cfilter / c~ c= b2 cNIL b1 cflatten b1 c= cflatten cfilter / c~ c= b2 cNIL cCONS b0 b1 cflatten cCONS b0 b1
+ |- ((\t. (!s2. ((((cat NIL) s2) = s2) /\ (((cat ((CONS x) t)) s2) = ((CONS x) ((cat t) s2)))))) t)
T * / ! c/\ c= ccat cNIL b1 b1 c= ccat cCONS f0 b0 b1 cCONS f0 ccat b0 b1 f1
+ |- ((flatten ((filter (\l. (~ (l = NIL)))) NIL)) = (flatten NIL))
T c= cflatten cfilter / c~ c= b0 cNIL cNIL cflatten cNIL
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
+ |- (P = ((ssreflect_eq eq) P))
T c= f0 cssreflect_eq f1 f0
+ |- ((!a1. (((flatten ((filter (\l. (~ (l = NIL)))) a1)) = (flatten a1)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) ((CONS h) a1))) = (flatten ((CONS h) a1))))) = T)
T c= ! c==> c= cflatten cfilter / c~ c= b1 cNIL b0 cflatten b0 c= cflatten cfilter / c~ c= b1 cNIL cCONS f0 b0 cflatten cCONS f0 b0 cT
- ((\L1. (L = L1)) L1) |- (((\L1. (L = L1)) L1) /\ (((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L)))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c==> c/\ cuniq cflatten f0 call / c~ c= b0 cNIL f0 cuniq f0
- |- ((((\x. ((h = NIL) = x)) x) ==> (?x. ((h = NIL) = x))) = T)
T c= c==> * / c= c= f0 cNIL b0 f1 c? / c= c= f0 cNIL b0 cT
+ |- (((?x. ((h = NIL) = x)) ==> ((flatten (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = ((flatten (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))
T c= c==> c? / c= c= f0 cNIL b0 c= cflatten cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 ccat f0 cflatten f1 c= cflatten cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 ccat f0 cflatten f1
- |- ((\t'. (!e'. (((~ (h = NIL)) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c~ c= f0 cNIL f1 c==> c==> f1 c= cCONS f0 cfilter / c~ c= b2 cNIL f2 b0 c==> c==> c~ f1 c= cfilter / c~ c= b2 cNIL f2 b1 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 cCOND f1 b0 b1 f3
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
+ ((h = NIL) = x), ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((flatten (((COND (~ x)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))
T c==> c= c= f0 cNIL f1 c==> c= cflatten cfilter / c~ c= b0 cNIL f2 cflatten f2 c= cflatten cCOND c~ f1 cCONS f0 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f0 cflatten f2
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- (((flatten t) = ((cat h) (flatten t))) = ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= c= cflatten f0 ccat f1 cflatten f0 c= cflatten cfilter / c~ c= b0 cNIL f0 ccat f1 cflatten f0
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- (((ssreflect_eq eq) ((h = NIL) = x)) ==> ((flatten (((COND (~ x)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c==> cssreflect_eq f1 c= c= f2 cNIL f3 c= cflatten cCOND c~ f3 cCONS f2 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f2 cflatten f0
- |- (((!t'. (!e'. (((~ (h = NIL)) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((~ (h = NIL)) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((~ (h = NIL)) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c~ c= f0 cNIL f1 c==> c==> f1 c= cCONS f0 cfilter / c~ c= b2 cNIL f2 b0 c==> c==> c~ f1 c= cfilter / c~ c= b2 cNIL f2 b1 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 cCOND f1 b0 b1 * / ! c==> c= c~ c= f0 cNIL f1 c==> c==> f1 c= cCONS f0 cfilter / c~ c= b2 cNIL f2 b0 c==> c==> c~ f1 c= cfilter / c~ c= b2 cNIL f2 b1 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 cCOND f1 b0 b1 f3 * / ! c==> c= c~ c= f0 cNIL f1 c==> c==> f1 c= cCONS f0 cfilter / c~ c= b2 cNIL f2 b0 c==> c==> c~ f1 c= cfilter / c~ c= b2 cNIL f2 b1 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 cCOND f1 b0 b1 f3
- ((ssreflect_eq eq) (~ (h = NIL))) |- (((ssreflect_eq eq) (~ (h = NIL))) /\ (((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))))
T c==> cssreflect_eq f0 c~ c= f1 cNIL c/\ cssreflect_eq f0 c~ c= f1 cNIL c= c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2
+ |- ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND F) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)))
T c= cCOND c~ cT cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND cF cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1
- ((ssreflect_eq eq) (~ (h = NIL))) |- ((h = NIL) = F)
T c==> cssreflect_eq f0 c~ c= f1 cNIL c= c= f1 cNIL cF
- |- (((!q'. ((((ssreflect_eq eq) (h = NIL)) = p') ==> ((p' ==> (((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq eq) (h = NIL)) = p') ==> ((p' ==> (((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq eq) (h = NIL)) = p') ==> ((p' ==> (((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c= f1 cNIL f2 c==> c==> f2 c= c= cflatten cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 b0 c= c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 c==> f2 b0 * / c==> c= cssreflect_eq f0 c= f1 cNIL f2 c==> c==> f2 c= c= cflatten cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 b0 c= c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 c==> f2 b0 f4 * / c==> c= cssreflect_eq f0 c= f1 cNIL f2 c==> c==> f2 c= c= cflatten cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 b0 c= c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 c==> f2 b0 f4
+ |- ((\v. (!P. (((ssreflect_eq v) P) = P))) v)
T * / ! c= cssreflect_eq b0 b1 b1 f0
- (L = L1) |- (((uniq (flatten L1)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L))
T c==> c= f0 f1 c==> c/\ cuniq cflatten f1 call / c~ c= b0 cNIL f0 cuniq f0
- |- ((\x. (!s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))))) x)
T * / ! ! ! c/\ c= cfoldr b2 b3 cCONS b0 b1 * * b2 b0 cfoldr b2 b3 b1 c= cfoldr b2 b3 cNIL b3 f0
+ |- (((!e'. (((~ F) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))) ==> ((\e'. (((~ F) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))) e')) = ((\e'. (((~ F) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c~ cF f0 c==> c==> f0 c= cCONS f1 cfilter / c~ c= b1 cNIL f2 f3 c==> c==> c~ f0 c= cfilter / c~ c= b1 cNIL f2 b0 c= cCOND c~ cF cCONS f1 cfilter / c~ c= b1 cNIL f2 cfilter / c~ c= b1 cNIL f2 cCOND f0 f3 b0 * / c==> c= c~ cF f0 c==> c==> f0 c= cCONS f1 cfilter / c~ c= b1 cNIL f2 f3 c==> c==> c~ f0 c= cfilter / c~ c= b1 cNIL f2 b0 c= cCOND c~ cF cCONS f1 cfilter / c~ c= b1 cNIL f2 cfilter / c~ c= b1 cNIL f2 cCOND f0 f3 b0 f4 * / c==> c= c~ cF f0 c==> c==> f0 c= cCONS f1 cfilter / c~ c= b1 cNIL f2 f3 c==> c==> c~ f0 c= cfilter / c~ c= b1 cNIL f2 b0 c= cCOND c~ cF cCONS f1 cfilter / c~ c= b1 cNIL f2 cfilter / c~ c= b1 cNIL f2 cCOND f0 f3 b0 f4
- |- (((cat ((CONS x) t)) s2) = ((CONS x) ((cat t) s2)))
T c= ccat cCONS f0 f1 f2 cCONS f0 ccat f1 f2
- |- ((?x. ((h = NIL) = x)) ==> (?x. ((h = NIL) = x)))
T c==> c? / c= c= f0 cNIL b0 c? / c= c= f0 cNIL b0
+ |- ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P)
T * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0
+ |- (((!p'. (!q'. ((((ssreflect_eq eq) ((h = NIL) = F)) = p') ==> ((p' ==> (((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq eq) ((h = NIL) = F)) = p') ==> ((p' ==> (((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq eq) ((h = NIL) = F)) = p') ==> ((p' ==> (((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 c= c= f1 cNIL cF b0 c==> c==> b0 c= c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 b1 c= c==> cssreflect_eq f0 c= c= f1 cNIL cF c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 c= c= f1 cNIL cF b0 c==> c==> b0 c= c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 b1 c= c==> cssreflect_eq f0 c= c= f1 cNIL cF c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 c==> b0 b1 f3 * / ! c==> c= cssreflect_eq f0 c= c= f1 cNIL cF b0 c==> c==> b0 c= c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 b1 c= c==> cssreflect_eq f0 c= c= f1 cNIL cF c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 c==> b0 b1 f3
- |- ((?L1. (L = L1)) ==> (((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L)))
T c==> c? / c= f0 b0 c==> c/\ cuniq cflatten f0 call / c~ c= b0 cNIL f0 cuniq f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- (((((\l. (~ (l = NIL))) h) = (~ (h = NIL))) ==> (((~ (h = NIL)) ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ (~ (h = NIL))) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND (~ (h = NIL))) t') e'))))) = (((~ (h = NIL)) ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ (~ (h = NIL))) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND (~ (h = NIL))) t') e')))))
T c= c==> c= * / c~ c= b0 cNIL f0 c~ c= f0 cNIL c==> c==> c~ c= f0 cNIL c= cCONS f0 cfilter / c~ c= b0 cNIL f1 f2 c==> c==> c~ c~ c= f0 cNIL c= cfilter / c~ c= b0 cNIL f1 f3 c= cCOND * / c~ c= b0 cNIL f0 cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND c~ c= f0 cNIL f2 f3 c==> c==> c~ c= f0 cNIL c= cCONS f0 cfilter / c~ c= b0 cNIL f1 f2 c==> c==> c~ c~ c= f0 cNIL c= cfilter / c~ c= b0 cNIL f1 f3 c= cCOND * / c~ c= b0 cNIL f0 cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND c~ c= f0 cNIL f2 f3
+ ((h = NIL) = x), ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((flatten (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))
T c==> c= c= f0 cNIL f1 c==> c= cflatten cfilter / c~ c= b0 cNIL f2 cflatten f2 c= cflatten cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f0 cflatten f2
- |- ((((foldr f) z0) NIL) = z0)
T c= cfoldr f0 f1 cNIL f1
+ |- (((flatten t) = (flatten t)) = ((flatten t) = ((cat NIL) (flatten t))))
T c= c= cflatten f0 cflatten f0 c= cflatten f0 ccat cNIL cflatten f0
- |- (((~ (~ (h = NIL))) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) e')))
T c==> c==> c~ c~ c= f0 cNIL c= cfilter / c~ c= b0 cNIL f1 f2 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 f2
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((((((ssreflect_eq eq) ((h = NIL) = T)) ==> ((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) /\ (((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))) ==> (!x. (((ssreflect_eq eq) ((h = NIL) = x)) ==> ((flatten (((COND (~ x)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))))) = (!x. (((ssreflect_eq eq) ((h = NIL) = x)) ==> ((flatten (((COND (~ x)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= c==> c/\ c==> cssreflect_eq f1 c= c= f2 cNIL cT c= cflatten cCOND c~ cT cCONS f2 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f2 cflatten f0 c==> cssreflect_eq f1 c= c= f2 cNIL cF c= cflatten cCOND c~ cF cCONS f2 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f2 cflatten f0 ! c==> cssreflect_eq f1 c= c= f2 cNIL b0 c= cflatten cCOND c~ b0 cCONS f2 cfilter / c~ c= b1 cNIL f0 cfilter / c~ c= b1 cNIL f0 ccat f2 cflatten f0 ! c==> cssreflect_eq f1 c= c= f2 cNIL b0 c= cflatten cCOND c~ b0 cCONS f2 cfilter / c~ c= b1 cNIL f0 cfilter / c~ c= b1 cNIL f0 ccat f2 cflatten f0
- |- ((\g'. (!t'. (!e'. (((~ (h = NIL)) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c~ c= f0 cNIL b0 c==> c==> b0 c= cCONS f0 cfilter / c~ c= b3 cNIL f1 b1 c==> c==> c~ b0 c= cfilter / c~ c= b3 cNIL f1 b2 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b3 cNIL f1 cfilter / c~ c= b3 cNIL f1 cCOND b0 b1 b2 f2
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((\P. (((P T) /\ (P F)) ==> (!x. (P x)))) P)
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 * / c==> c/\ * b0 cT * b0 cF ! * b0 b1 f0
- ((ssreflect_eq eq) (~ (h = NIL))) |- (((ssreflect_eq eq) (~ (h = NIL))) = T)
T c==> cssreflect_eq f0 c~ c= f1 cNIL c= cssreflect_eq f0 c~ c= f1 cNIL cT
+ ((ssreflect_eq eq) (h = NIL)) |- ((flatten t) = ((cat h) (flatten t)))
T c==> cssreflect_eq f0 c= f1 cNIL c= cflatten f2 ccat f1 cflatten f2
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((((foldr cat) NIL) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= cfoldr part ccat cNIL cCONS f1 cfilter / c~ c= b0 cNIL f0 ccat f1 cflatten f0
+ |- ((((~ T) ==> (((filter (\l. (~ (l = NIL)))) t) = ((filter (\l. (~ (l = NIL)))) t))) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND T) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)))) = ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND T) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))))
T c= c==> c==> c~ cT c= cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 c= cCOND c~ cF cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 cCOND cT cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 c= cCOND c~ cF cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 cCOND cT cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0
- |- (((~ (~ (h = NIL))) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) e')))
T c==> c==> c~ c~ c= f0 cNIL c= cfilter / c~ c= b0 cNIL f1 f2 c= cCOND * / c~ c= b0 cNIL f0 cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 f2
- |- (((!L. (((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L))) ==> ((\L. (((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L))) L1)) = ((\L. (((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L))) L1))
T c= c==> ! c==> c/\ cuniq cflatten b0 call / c~ c= b1 cNIL b0 cuniq b0 * / c==> c/\ cuniq cflatten b0 call / c~ c= b1 cNIL b0 cuniq b0 f0 * / c==> c/\ cuniq cflatten b0 call / c~ c= b1 cNIL b0 cuniq b0 f0
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((((foldr cat) NIL) (((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = (((foldr cat) NIL) ((CONS h) t)))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= cfoldr part ccat cNIL cCOND * / c~ c= b0 cNIL f1 cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 cfoldr part ccat cNIL cCONS f1 f0
- |- (((!t'. (!e'. ((((\l. (~ (l = NIL))) h) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((\l. (~ (l = NIL))) h) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((\l. (~ (l = NIL))) h) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= * / c~ c= b2 cNIL f0 f1 c==> c==> f1 c= cCONS f0 cfilter / c~ c= b2 cNIL f2 b0 c==> c==> c~ f1 c= cfilter / c~ c= b2 cNIL f2 b1 c= cCOND * / c~ c= b2 cNIL f0 cCONS f0 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 cCOND f1 b0 b1 * / ! c==> c= * / c~ c= b2 cNIL f0 f1 c==> c==> f1 c= cCONS f0 cfilter / c~ c= b2 cNIL f2 b0 c==> c==> c~ f1 c= cfilter / c~ c= b2 cNIL f2 b1 c= cCOND * / c~ c= b2 cNIL f0 cCONS f0 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 cCOND f1 b0 b1 f3 * / ! c==> c= * / c~ c= b2 cNIL f0 f1 c==> c==> f1 c= cCONS f0 cfilter / c~ c= b2 cNIL f2 b0 c==> c==> c~ f1 c= cfilter / c~ c= b2 cNIL f2 b1 c= cCOND * / c~ c= b2 cNIL f0 cCONS f0 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 cCOND f1 b0 b1 f3
+ |- ((\P. (P = ((ssreflect_eq eq) P))) P)
T * / c= b0 cssreflect_eq f0 b0 f1
- ((ssreflect_eq eq) (~ (h = NIL))) |- (~ (h = NIL))
T c==> cssreflect_eq f0 c~ c= f1 cNIL c~ c= f1 cNIL
- |- (!L1. (((\L1. (L = L1)) L1) ==> (?L1. (L = L1))))
T c==> * / c= f0 b0 f1 c? / c= f0 b0
- |- ((\L. (((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L))) L1)
T * / c==> c/\ cuniq cflatten b0 call / c~ c= b1 cNIL b0 cuniq b0 f0
+ |- (((((foldr cat) NIL) ((filter (\l. (~ (l = NIL)))) NIL)) = (((foldr cat) NIL) NIL)) = ((((foldr cat) NIL) ((filter (\l. (~ (l = NIL)))) NIL)) = (flatten NIL)))
T c= c= cfoldr part ccat cNIL cfilter / c~ c= b0 cNIL cNIL cfoldr part ccat cNIL cNIL c= cfoldr part ccat cNIL cfilter / c~ c= b0 cNIL cNIL cflatten cNIL
+ |- ((flatten t) = ((cat NIL) (flatten t)))
T c= cflatten f0 ccat cNIL cflatten f0
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((((foldr cat) NIL) ((filter (\l. (~ (l = NIL)))) ((CONS h) t))) = (((foldr cat) NIL) ((CONS h) t)))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= cfoldr part ccat cNIL cfilter / c~ c= b0 cNIL cCONS f1 f0 cfoldr part ccat cNIL cCONS f1 f0
- |- ((\L1. (L = L1)) L)
T * / c= f0 b0 f0
+ |- (((!s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s'))))) ==> ((\s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s'))))) s')) = ((\s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s'))))) s'))
T c= c==> ! c/\ c= cfilter f0 cNIL cNIL c= cfilter f0 cCONS f1 b0 cCOND * f0 f1 cCONS f1 cfilter f0 b0 cfilter f0 b0 * / c/\ c= cfilter f0 cNIL cNIL c= cfilter f0 cCONS f1 b0 cCOND * f0 f1 cCONS f1 cfilter f0 b0 cfilter f0 b0 f2 * / c/\ c= cfilter f0 cNIL cNIL c= cfilter f0 cCONS f1 b0 cCOND * f0 f1 cCONS f1 cfilter f0 b0 cfilter f0 b0 f2
+ |- (((!t'. (!e'. (((~ T) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((~ T) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((~ T) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c~ cT f0 c==> c==> f0 c= cCONS f1 cfilter / c~ c= b2 cNIL f2 b0 c==> c==> c~ f0 c= cfilter / c~ c= b2 cNIL f2 b1 c= cCOND c~ cT cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 cCOND f0 b0 b1 * / ! c==> c= c~ cT f0 c==> c==> f0 c= cCONS f1 cfilter / c~ c= b2 cNIL f2 b0 c==> c==> c~ f0 c= cfilter / c~ c= b2 cNIL f2 b1 c= cCOND c~ cT cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 cCOND f0 b0 b1 f3 * / ! c==> c= c~ cT f0 c==> c==> f0 c= cCONS f1 cfilter / c~ c= b2 cNIL f2 b0 c==> c==> c~ f0 c= cfilter / c~ c= b2 cNIL f2 b1 c= cCOND c~ cT cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 cCOND f0 b0 b1 f3
- |- ((((~ (h = NIL)) ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = ((CONS h) ((filter (\l. (~ (l = NIL)))) t)))) ==> (((~ (~ (h = NIL))) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) e')))) = (((~ (~ (h = NIL))) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) e'))))
T c= c==> c==> c~ c= f0 cNIL c= cCONS f0 cfilter / c~ c= b0 cNIL f1 cCONS f0 cfilter / c~ c= b0 cNIL f1 c==> c==> c~ c~ c= f0 cNIL c= cfilter / c~ c= b0 cNIL f1 f2 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 f2 c==> c==> c~ c~ c= f0 cNIL c= cfilter / c~ c= b0 cNIL f1 f2 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 f2
+ |- (((((ssreflect_eq eq) ((h = NIL) = T)) = ((ssreflect_eq eq) (h = NIL))) ==> ((((ssreflect_eq eq) (h = NIL)) ==> (((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = T)) ==> ((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (h = NIL)) ==> q')))) = ((((ssreflect_eq eq) (h = NIL)) ==> (((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = T)) ==> ((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (h = NIL)) ==> q'))))
T c= c==> c= cssreflect_eq f0 c= c= f1 cNIL cT cssreflect_eq f0 c= f1 cNIL c==> c==> cssreflect_eq f0 c= f1 cNIL c= c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 f3 c= c==> cssreflect_eq f0 c= c= f1 cNIL cT c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c= f1 cNIL f3 c==> c==> cssreflect_eq f0 c= f1 cNIL c= c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 f3 c= c==> cssreflect_eq f0 c= c= f1 cNIL cT c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c= f1 cNIL f3
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- (((cat h) (flatten ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (((foldr cat) NIL) t)))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= ccat f1 cflatten cfilter / c~ c= b0 cNIL f0 ccat f1 cfoldr part ccat cNIL f0
+ |- (((!P. (((ssreflect_eq v) P) = P)) ==> ((\P. (((ssreflect_eq v) P) = P)) P)) = ((\P. (((ssreflect_eq v) P) = P)) P))
T c= c==> ! c= cssreflect_eq f0 b0 b0 * / c= cssreflect_eq f0 b0 b0 f1 * / c= cssreflect_eq f0 b0 b0 f1
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))), ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 c/\ ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! * f0 b0
+ |- ((\P. (((ssreflect_eq v) P) = P)) P)
T * / c= cssreflect_eq f0 b0 b0 f1
+ |- (((((foldr cat) NIL) ((filter (\l. (~ (l = NIL)))) ((CONS h) t))) = (flatten ((CONS h) t))) = ((flatten ((filter (\l. (~ (l = NIL)))) ((CONS h) t))) = (flatten ((CONS h) t))))
T c= c= cfoldr part ccat cNIL cfilter / c~ c= b0 cNIL cCONS f0 f1 cflatten cCONS f0 f1 c= cflatten cfilter / c~ c= b0 cNIL cCONS f0 f1 cflatten cCONS f0 f1
- |- (T = (((cat h) (flatten t)) = ((cat h) (flatten t))))
T c= cT c= ccat f0 cflatten f1 ccat f0 cflatten f1
+ |- ((((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))))
T c= c==> cssreflect_eq f0 c= c= f1 cNIL cF c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2
- |- ((\q'. ((((ssreflect_eq eq) (~ (h = NIL))) = p') ==> ((p' ==> (((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 c~ c= f1 cNIL f2 c==> c==> f2 c= c= cflatten cCONS f1 cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 b0 c= c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 c==> f2 b0 f4
- ((ssreflect_eq eq) (h = NIL)) |- (((ssreflect_eq eq) (h = NIL)) /\ (((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))) = ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))))
T c==> cssreflect_eq f0 c= f1 cNIL c/\ cssreflect_eq f0 c= f1 cNIL c= c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2
- |- (((h = NIL) = x) ==> (?x. ((h = NIL) = x)))
T c==> c= c= f0 cNIL f1 c? / c= c= f0 cNIL b0
+ F |- (F /\ (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = ((CONS h) ((filter (\l. (~ (l = NIL)))) t))))
T c==> cF c/\ cF c= cCONS f0 cfilter / c~ c= b0 cNIL f1 cCONS f0 cfilter / c~ c= b0 cNIL f1
- |- (((!p'. (!q'. ((((ssreflect_eq eq) (h = NIL)) = p') ==> ((p' ==> (((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq eq) (h = NIL)) = p') ==> ((p' ==> (((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq eq) (h = NIL)) = p') ==> ((p' ==> (((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 c= f1 cNIL b0 c==> c==> b0 c= c= cflatten cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 b1 c= c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 c= f1 cNIL b0 c==> c==> b0 c= c= cflatten cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 b1 c= c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 c==> b0 b1 f3 * / ! c==> c= cssreflect_eq f0 c= f1 cNIL b0 c==> c==> b0 c= c= cflatten cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 b1 c= c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 c==> b0 b1 f3
- |- ((\g'. (!t'. (!e'. ((((\l. (~ (l = NIL))) h) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= * / c~ c= b3 cNIL f0 b0 c==> c==> b0 c= cCONS f0 cfilter / c~ c= b3 cNIL f1 b1 c==> c==> c~ b0 c= cfilter / c~ c= b3 cNIL f1 b2 c= cCOND * / c~ c= b3 cNIL f0 cCONS f0 cfilter / c~ c= b3 cNIL f1 cfilter / c~ c= b3 cNIL f1 cCOND b0 b1 b2 f2
+ |- (((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P)) = ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P))
T c= c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0 * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))), ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- (!x. (P x))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
- T |- (T = T)
T c==> cT c= cT cT
- |- ((((~ (h = NIL)) ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = ((CONS h) ((filter (\l. (~ (l = NIL)))) t)))) ==> (((~ (~ (h = NIL))) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) e')))) = (((~ (~ (h = NIL))) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) e'))))
T c= c==> c==> c~ c= f0 cNIL c= cCONS f0 cfilter / c~ c= b0 cNIL f1 cCONS f0 cfilter / c~ c= b0 cNIL f1 c==> c==> c~ c~ c= f0 cNIL c= cfilter / c~ c= b0 cNIL f1 f2 c= cCOND * / c~ c= b0 cNIL f0 cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 f2 c==> c==> c~ c~ c= f0 cNIL c= cfilter / c~ c= b0 cNIL f1 f2 c= cCOND * / c~ c= b0 cNIL f0 cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 f2
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- (((cat h) (((foldr cat) NIL) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (((foldr cat) NIL) t)))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= ccat f1 cfoldr part ccat cNIL cfilter / c~ c= b0 cNIL f0 ccat f1 cfoldr part ccat cNIL f0
- |- (((((ssreflect_eq eq) (h = NIL)) ==> (((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))) = ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))))) ==> ((((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))))) = ((((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))))))
T c= c==> c==> cssreflect_eq f0 c= f1 cNIL c= c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2
- ((h = NIL) = x) |- ((\x. ((h = NIL) = x)) x)
T c==> c= c= f0 cNIL f1 * / c= c= f0 cNIL b0 f1
- |- ((((~ (h = NIL)) = (~ (h = NIL))) ==> (((~ (h = NIL)) ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ (~ (h = NIL))) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND (~ (h = NIL))) t') e'))))) = (((~ (h = NIL)) ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ (~ (h = NIL))) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND (~ (h = NIL))) t') e')))))
T c= c==> c= c~ c= f0 cNIL c~ c= f0 cNIL c==> c==> c~ c= f0 cNIL c= cCONS f0 cfilter / c~ c= b0 cNIL f1 f2 c==> c==> c~ c~ c= f0 cNIL c= cfilter / c~ c= b0 cNIL f1 f3 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND c~ c= f0 cNIL f2 f3 c==> c==> c~ c= f0 cNIL c= cCONS f0 cfilter / c~ c= b0 cNIL f1 f2 c==> c==> c~ c~ c= f0 cNIL c= cfilter / c~ c= b0 cNIL f1 f3 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND c~ c= f0 cNIL f2 f3
- (L = L1) |- ((L = L1) /\ (((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L)))
T c==> c= f0 f1 c/\ c= f0 f1 c==> c/\ cuniq cflatten f0 call / c~ c= b0 cNIL f0 cuniq f0
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- (!x. (P x))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF ! * f0 b0
- |- ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)))
T c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1
+ (flatten = ((foldr cat) NIL)) |- (((foldr cat) NIL) = flatten)
T c==> c= part cflatten * * part cfoldr part ccat cNIL c= * * part cfoldr part ccat cNIL part cflatten
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s')))
T c= cfilter f0 cCONS f1 f2 cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)), ((ssreflect_eq eq) (~ (h = NIL))) |- (((ssreflect_eq eq) (~ (h = NIL))) /\ ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c==> cssreflect_eq f1 c~ c= f2 cNIL c/\ cssreflect_eq f1 c~ c= f2 cNIL c= cflatten cCONS f2 cfilter / c~ c= b0 cNIL f0 ccat f2 cflatten f0
- |- ((\z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))) z0)
T * / c/\ c= cfoldr f0 b0 cCONS f1 f2 * * f0 f1 cfoldr f0 b0 f2 c= cfoldr f0 b0 cNIL b0 f3
+ |- ((!a0. (!a1. (((flatten ((filter (\l. (~ (l = NIL)))) a1)) = (flatten a1)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) ((CONS a0) a1))) = (flatten ((CONS a0) a1)))))) = (((flatten ((filter (\l. (~ (l = NIL)))) NIL)) = (flatten NIL)) /\ (!a0. (!a1. (((flatten ((filter (\l. (~ (l = NIL)))) a1)) = (flatten a1)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) ((CONS a0) a1))) = (flatten ((CONS a0) a1))))))))
T c= ! ! c==> c= cflatten cfilter / c~ c= b2 cNIL b1 cflatten b1 c= cflatten cfilter / c~ c= b2 cNIL cCONS b0 b1 cflatten cCONS b0 b1 c/\ c= cflatten cfilter / c~ c= b0 cNIL cNIL cflatten cNIL ! ! c==> c= cflatten cfilter / c~ c= b2 cNIL b1 cflatten b1 c= cflatten cfilter / c~ c= b2 cNIL cCONS b0 b1 cflatten cCONS b0 b1
- ((ssreflect_eq eq) (h = NIL)) |- (((ssreflect_eq eq) (h = NIL)) = T)
T c==> cssreflect_eq f0 c= f1 cNIL c= cssreflect_eq f0 c= f1 cNIL cT
- |- ((((ssreflect_eq eq) (h = NIL)) = p') ==> ((p' ==> (((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 c= f1 cNIL f2 c==> c==> f2 c= c= cflatten cfilter / c~ c= b0 cNIL f3 ccat f1 cflatten f3 f4 c= c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b0 cNIL f3 ccat f1 cflatten f3 c==> f2 f4
+ |- (((F ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = ((CONS h) ((filter (\l. (~ (l = NIL)))) t)))) ==> (((~ F) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND F) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) e')))) = (((~ F) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND F) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) e'))))
T c= c==> c==> cF c= cCONS f0 cfilter / c~ c= b0 cNIL f1 cCONS f0 cfilter / c~ c= b0 cNIL f1 c==> c==> c~ cF c= cfilter / c~ c= b0 cNIL f1 f2 c= cCOND c~ cT cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND cF cCONS f0 cfilter / c~ c= b0 cNIL f1 f2 c==> c==> c~ cF c= cfilter / c~ c= b0 cNIL f1 f2 c= cCOND c~ cT cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND cF cCONS f0 cfilter / c~ c= b0 cNIL f1 f2
+ ((ssreflect_eq eq) (~ (h = NIL))) |- (((ssreflect_eq eq) (~ (h = NIL))) /\ (((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))))
T c==> cssreflect_eq f0 c~ c= f1 cNIL c/\ cssreflect_eq f0 c~ c= f1 cNIL c= c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2
- |- ((L = L1) = ((\L1. (L = L1)) L1))
T c= c= f0 f1 * / c= f0 b0 f1
- |- (T = ((flatten t) = (flatten t)))
T c= cT c= cflatten f0 cflatten f0
- |- ((\t'. (!e'. ((((\l. (~ (l = NIL))) h) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= * / c~ c= b2 cNIL f0 f1 c==> c==> f1 c= cCONS f0 cfilter / c~ c= b2 cNIL f2 b0 c==> c==> c~ f1 c= cfilter / c~ c= b2 cNIL f2 b1 c= cCOND * / c~ c= b2 cNIL f0 cCONS f0 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 cCOND f1 b0 b1 f3
- (~ (~ (h = NIL))) |- ((~ (h = NIL)) = F)
T c==> c~ c~ c= f0 cNIL c= c~ c= f0 cNIL cF
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- (~ (h = NIL)) |- ((~ (h = NIL)) /\ (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = ((CONS h) ((filter (\l. (~ (l = NIL)))) t))))
T c==> c~ c= f0 cNIL c/\ c~ c= f0 cNIL c= cCONS f0 cfilter / c~ c= b0 cNIL f1 cCONS f0 cfilter / c~ c= b0 cNIL f1
+ |- ((((ssreflect_eq eq) (h = NIL)) ==> (((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = T)) ==> ((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (h = NIL)) ==> q')))
T c==> c==> cssreflect_eq f0 c= f1 cNIL c= c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 f3 c= c==> cssreflect_eq f0 c= c= f1 cNIL cT c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c= f1 cNIL f3
- |- (((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L))
T c==> c/\ cuniq cflatten f0 call / c~ c= b0 cNIL f0 cuniq f0
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((flatten (((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (((foldr cat) NIL) t)))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= cflatten cCOND * / c~ c= b0 cNIL f1 cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f1 cfoldr part ccat cNIL f0
- |- (((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))) = (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))))
T c= c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1
- |- ((\f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))) f)
T * / ! c/\ c= cfoldr b0 b1 cCONS f0 f1 * * b0 f0 cfoldr b0 b1 f1 c= cfoldr b0 b1 cNIL b1 f2
+ |- (((~ T) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))
T c==> c= c~ cT f0 c==> c==> f0 c= cCONS f1 cfilter / c~ c= b0 cNIL f2 f3 c==> c==> c~ f0 c= cfilter / c~ c= b0 cNIL f2 f4 c= cCOND c~ cT cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 cCOND f0 f3 f4
+ |- ((\a. (!x. (!s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s'))))))) a)
T * / ! ! c/\ c= cfilter b0 cNIL cNIL c= cfilter b0 cCONS b1 b2 cCOND * b0 b1 cCONS b1 cfilter b0 b2 cfilter b0 b2 f0
+ ((ssreflect_eq eq) (h = NIL)) |- (((flatten t) = ((cat NIL) (flatten t))) = ((flatten t) = ((cat h) (flatten t))))
T c==> cssreflect_eq f0 c= f1 cNIL c= c= cflatten f2 ccat cNIL cflatten f2 c= cflatten f2 ccat f1 cflatten f2
- (L = L1) |- (((flatten ((filter (\l. (~ (l = NIL)))) L1)) = (flatten L)) = ((flatten ((filter (\l. (~ (l = NIL)))) L)) = (flatten L)))
T c==> c= f0 f1 c= c= cflatten cfilter / c~ c= b0 cNIL f1 cflatten f0 c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0
+ |- (((!t'. (!e'. (((~ F) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((~ F) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((~ F) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c~ cF f0 c==> c==> f0 c= cCONS f1 cfilter / c~ c= b2 cNIL f2 b0 c==> c==> c~ f0 c= cfilter / c~ c= b2 cNIL f2 b1 c= cCOND c~ cF cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 cCOND f0 b0 b1 * / ! c==> c= c~ cF f0 c==> c==> f0 c= cCONS f1 cfilter / c~ c= b2 cNIL f2 b0 c==> c==> c~ f0 c= cfilter / c~ c= b2 cNIL f2 b1 c= cCOND c~ cF cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 cCOND f0 b0 b1 f3 * / ! c==> c= c~ cF f0 c==> c==> f0 c= cCONS f1 cfilter / c~ c= b2 cNIL f2 b0 c==> c==> c~ f0 c= cfilter / c~ c= b2 cNIL f2 b1 c= cCOND c~ cF cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 cCOND f0 b0 b1 f3
- (L = L1) |- (((uniq (flatten L1)) /\ ((all (\l. (~ (l = NIL)))) L1)) ==> (uniq L))
T c==> c= f0 f1 c==> c/\ cuniq cflatten f1 call / c~ c= b0 cNIL f1 cuniq f0
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))), ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 c/\ c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
- ((ssreflect_eq eq) (~ (h = NIL))) |- (~ (NIL = h))
T c==> cssreflect_eq f0 c~ c= f1 cNIL c~ c= cNIL f1
+ |- (((cat NIL) s2) = s2)
T c= ccat cNIL f0 f0
- ((h = NIL) = x) |- (((h = NIL) = x) /\ (?x. ((h = NIL) = x)))
T c==> c= c= f0 cNIL f1 c/\ c= c= f0 cNIL f1 c? / c= c= f0 cNIL b0
- |- ((((\l. (~ (l = NIL))) h) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))
T c==> c= * / c~ c= b0 cNIL f0 f1 c==> c==> f1 c= cCONS f0 cfilter / c~ c= b0 cNIL f2 f3 c==> c==> c~ f1 c= cfilter / c~ c= b0 cNIL f2 f4 c= cCOND * / c~ c= b0 cNIL f0 cCONS f0 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 cCOND f1 f3 f4
- |- ((((ssreflect_eq eq) (~ (h = NIL))) ==> (((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (~ (h = NIL))) ==> q')))
T c==> c==> cssreflect_eq f0 c~ c= f1 cNIL c= c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 f3 c= c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c~ c= f1 cNIL f3
- ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> (!x. (P x)))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! * f0 b0
+ T |- (T /\ (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = ((CONS h) ((filter (\l. (~ (l = NIL)))) t))))
T c==> cT c/\ cT c= cCONS f0 cfilter / c~ c= b0 cNIL f1 cCONS f0 cfilter / c~ c= b0 cNIL f1
+ |- (((T ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = ((CONS h) ((filter (\l. (~ (l = NIL)))) t)))) ==> (((~ T) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND T) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) e')))) = (((~ T) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND T) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) e'))))
T c= c==> c==> cT c= cCONS f0 cfilter / c~ c= b0 cNIL f1 cCONS f0 cfilter / c~ c= b0 cNIL f1 c==> c==> c~ cT c= cfilter / c~ c= b0 cNIL f1 f2 c= cCOND c~ cF cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND cT cCONS f0 cfilter / c~ c= b0 cNIL f1 f2 c==> c==> c~ cT c= cfilter / c~ c= b0 cNIL f1 f2 c= cCOND c~ cF cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND cT cCONS f0 cfilter / c~ c= b0 cNIL f1 f2
- |- ((L = L1) ==> (((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L)))
T c==> c= f0 f1 c==> c/\ cuniq cflatten f0 call / c~ c= b0 cNIL f0 cuniq f0
- (NIL = h) |- (h = NIL)
T c==> c= cNIL f0 c= f0 cNIL
- ((ssreflect_eq eq) (~ (h = NIL))) |- (((~ (NIL = h)) ==> ((NIL = h) = F)) = ((NIL = h) = F))
T c==> cssreflect_eq f0 c~ c= f1 cNIL c= c==> c~ c= cNIL f1 c= c= cNIL f1 cF c= c= cNIL f1 cF
+ |- ((\s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s'))))) s')
T * / c/\ c= cfilter f0 cNIL cNIL c= cfilter f0 cCONS f1 b0 cCOND * f0 f1 cCONS f1 cfilter f0 b0 cfilter f0 b0 f2
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = ((((ssreflect_eq eq) ((h = NIL) = T)) ==> ((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) /\ (((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= c==> cssreflect_eq f1 c= c= f2 cNIL cF c= cflatten cCOND c~ cF cCONS f2 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f2 cflatten f0 c/\ c==> cssreflect_eq f1 c= c= f2 cNIL cT c= cflatten cCOND c~ cT cCONS f2 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f2 cflatten f0 c==> cssreflect_eq f1 c= c= f2 cNIL cF c= cflatten cCOND c~ cF cCONS f2 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f2 cflatten f0
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
+ |- ((\P. (((P T) /\ (P F)) ==> (!x. (P x)))) P)
T * / c==> c/\ * b0 cT * b0 cF ! * b0 b1 f0
+ |- ((((ssreflect_eq eq) (~ (h = NIL))) ==> (((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (~ (h = NIL))) ==> q')))
T c==> c==> cssreflect_eq f0 c~ c= f1 cNIL c= c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 f3 c= c==> cssreflect_eq f0 c= c= f1 cNIL cF c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c~ c= f1 cNIL f3
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((((foldr cat) NIL) ((filter (\l. (~ (l = NIL)))) ((CONS h) t))) = (flatten ((CONS h) t)))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= cfoldr part ccat cNIL cfilter / c~ c= b0 cNIL cCONS f1 f0 cflatten cCONS f1 f0
+ |- ((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s)))
T c= cfoldr f0 f1 cCONS f2 f3 * * f0 f2 cfoldr f0 f1 f3
+ |- (((h = NIL) = (h = NIL)) = ((\x. ((h = NIL) = x)) (h = NIL)))
T c= c= c= f0 cNIL c= f0 cNIL * / c= c= f0 cNIL b0 c= f0 cNIL
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((((ssreflect_eq eq) ((h = NIL) = T)) ==> ((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) /\ (((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c/\ c==> cssreflect_eq f1 c= c= f2 cNIL cT c= cflatten cCOND c~ cT cCONS f2 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f2 cflatten f0 c==> cssreflect_eq f1 c= c= f2 cNIL cF c= cflatten cCOND c~ cF cCONS f2 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f2 cflatten f0
+ |- (((((foldr cat) NIL) (((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = (((foldr cat) NIL) ((CONS h) t))) = ((((foldr cat) NIL) ((filter (\l. (~ (l = NIL)))) ((CONS h) t))) = (((foldr cat) NIL) ((CONS h) t))))
T c= c= cfoldr part ccat cNIL cCOND * / c~ c= b0 cNIL f0 cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cfoldr part ccat cNIL cCONS f0 f1 c= cfoldr part ccat cNIL cfilter / c~ c= b0 cNIL cCONS f0 f1 cfoldr part ccat cNIL cCONS f0 f1
+ |- (((!q'. ((((ssreflect_eq eq) ((h = NIL) = F)) = p') ==> ((p' ==> (((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq eq) ((h = NIL) = F)) = p') ==> ((p' ==> (((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq eq) ((h = NIL) = F)) = p') ==> ((p' ==> (((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c= c= f1 cNIL cF f2 c==> c==> f2 c= c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b1 cNIL f3 cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 b0 c= c==> cssreflect_eq f0 c= c= f1 cNIL cF c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b1 cNIL f3 cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 c==> f2 b0 * / c==> c= cssreflect_eq f0 c= c= f1 cNIL cF f2 c==> c==> f2 c= c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b1 cNIL f3 cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 b0 c= c==> cssreflect_eq f0 c= c= f1 cNIL cF c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b1 cNIL f3 cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 c==> f2 b0 f4 * / c==> c= cssreflect_eq f0 c= c= f1 cNIL cF f2 c==> c==> f2 c= c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b1 cNIL f3 cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 b0 c= c==> cssreflect_eq f0 c= c= f1 cNIL cF c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b1 cNIL f3 cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 c==> f2 b0 f4
+ |- (((((foldr cat) NIL) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (((foldr cat) NIL) t))) = ((((foldr cat) NIL) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))
T c= c= cfoldr part ccat cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 ccat f0 cfoldr part ccat cNIL f1 c= cfoldr part ccat cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 ccat f0 cflatten f1
- |- ((?L1. (L = L1)) ==> (?L1. (L = L1)))
T c==> c? / c= f0 b0 c? / c= f0 b0
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- (((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) /\ ((flatten ((filter (\l. (~ (l = NIL)))) ((CONS h) t))) = (flatten ((CONS h) t))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c/\ c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= cflatten cfilter / c~ c= b0 cNIL cCONS f1 f0 cflatten cCONS f1 f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) |- ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P)
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0
- |- ((\s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))))) s)
T * / ! ! c/\ c= cfoldr b1 b2 cCONS f0 b0 * * b1 f0 cfoldr b1 b2 b0 c= cfoldr b1 b2 cNIL b2 f1
+ (((ssreflect_eq eq) P) = P) |- (P = ((ssreflect_eq eq) P))
T c==> c= cssreflect_eq f0 f1 f1 c= f1 cssreflect_eq f0 f1
+ |- ((((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) ((h = NIL) = T)) ==> ((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))))
T c= c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c= c= f1 cNIL cT c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2
- (L = L1) |- (L1 = L)
T c==> c= f0 f1 c= f1 f0
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((?x. ((h = NIL) = x)) ==> ((flatten (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c==> c? / c= c= f1 cNIL b0 c= cflatten cCOND c~ c= f1 cNIL cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f1 cflatten f0
- |- (((~ (h = NIL)) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))
T c==> c= c~ c= f0 cNIL f1 c==> c==> f1 c= cCONS f0 cfilter / c~ c= b0 cNIL f2 f3 c==> c==> c~ f1 c= cfilter / c~ c= b0 cNIL f2 f4 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 cCOND f1 f3 f4
- |- (T = ((((foldr cat) NIL) NIL) = (((foldr cat) NIL) NIL)))
T c= cT c= cfoldr part ccat cNIL cNIL cfoldr part ccat cNIL cNIL
- F |- (F = T)
T c==> cF c= cF cT
+ |- ((t = T) = t)
T c= c= f0 cT f0
- |- (((ssreflect_eq eq) (~ (h = NIL))) ==> (((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))))
T c==> cssreflect_eq f0 c~ c= f1 cNIL c= c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2
+ |- ((\t'. (!e'. (((~ F) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c~ cF f0 c==> c==> f0 c= cCONS f1 cfilter / c~ c= b2 cNIL f2 b0 c==> c==> c~ f0 c= cfilter / c~ c= b2 cNIL f2 b1 c= cCOND c~ cF cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 cCOND f0 b0 b1 f3
+ |- (((((ssreflect_eq eq) (h = NIL)) ==> (((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))))) ==> ((((ssreflect_eq eq) ((h = NIL) = T)) ==> ((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))))) = ((((ssreflect_eq eq) ((h = NIL) = T)) ==> ((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))))))
T c= c==> c==> cssreflect_eq f0 c= f1 cNIL c= c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= c==> cssreflect_eq f0 c= c= f1 cNIL cT c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= c==> cssreflect_eq f0 c= c= f1 cNIL cT c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2
+ |- ((((~ F) ==> (((filter (\l. (~ (l = NIL)))) t) = ((filter (\l. (~ (l = NIL)))) t))) ==> ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND F) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)))) = ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND F) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))))
T c= c==> c==> c~ cF c= cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 c= cCOND c~ cT cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 cCOND cF cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 c= cCOND c~ cT cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 cCOND cF cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0
- (~ (h = NIL)) |- (~ (NIL = h))
T c==> c~ c= f0 cNIL c~ c= cNIL f0
+ |- ((\g'. (!t'. (!e'. (((~ T) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c~ cT b0 c==> c==> b0 c= cCONS f0 cfilter / c~ c= b3 cNIL f1 b1 c==> c==> c~ b0 c= cfilter / c~ c= b3 cNIL f1 b2 c= cCOND c~ cT cCONS f0 cfilter / c~ c= b3 cNIL f1 cfilter / c~ c= b3 cNIL f1 cCOND b0 b1 b2 f2
- (L = L1) |- (((flatten ((filter (\l. (~ (l = NIL)))) L1)) = (flatten L1)) = ((flatten ((filter (\l. (~ (l = NIL)))) L1)) = (flatten L)))
T c==> c= f0 f1 c= c= cflatten cfilter / c~ c= b0 cNIL f1 cflatten f1 c= cflatten cfilter / c~ c= b0 cNIL f1 cflatten f0
- ((\L1. (L = L1)) L1) |- (((L = L1) ==> (?L1. (L = L1))) = (?L1. (L = L1)))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c? / c= f0 b0 c? / c= f0 b0
+ |- (((~ F) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND F) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) e')))
T c==> c==> c~ cF c= cfilter / c~ c= b0 cNIL f0 f1 c= cCOND c~ cT cCONS f2 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 cCOND cF cCONS f2 cfilter / c~ c= b0 cNIL f0 f1
+ |- (F ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = ((CONS h) ((filter (\l. (~ (l = NIL)))) t))))
T c==> cF c= cCONS f0 cfilter / c~ c= b0 cNIL f1 cCONS f0 cfilter / c~ c= b0 cNIL f1
+ |- (((ssreflect_eq eq) (~ (h = NIL))) ==> (((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))))
T c==> cssreflect_eq f0 c~ c= f1 cNIL c= c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2
+ ((h = NIL) = x), ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- (((h = NIL) = x) /\ ((flatten (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))
T c==> c= c= f0 cNIL f1 c==> c= cflatten cfilter / c~ c= b0 cNIL f2 cflatten f2 c/\ c= c= f0 cNIL f1 c= cflatten cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f0 cflatten f2
+ |- (((((flatten ((filter (\l. (~ (l = NIL)))) NIL)) = (flatten NIL)) /\ (!a0. (!a1. (((flatten ((filter (\l. (~ (l = NIL)))) a1)) = (flatten a1)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) ((CONS a0) a1))) = (flatten ((CONS a0) a1))))))) ==> (!L. ((flatten ((filter (\l. (~ (l = NIL)))) L)) = (flatten L)))) = (!L. ((flatten ((filter (\l. (~ (l = NIL)))) L)) = (flatten L))))
T c= c==> c/\ c= cflatten cfilter / c~ c= b0 cNIL cNIL cflatten cNIL ! ! c==> c= cflatten cfilter / c~ c= b2 cNIL b1 cflatten b1 c= cflatten cfilter / c~ c= b2 cNIL cCONS b0 b1 cflatten cCONS b0 b1 ! c= cflatten cfilter / c~ c= b1 cNIL b0 cflatten b0 ! c= cflatten cfilter / c~ c= b1 cNIL b0 cflatten b0
- |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1
+ |- (((!g'. (!t'. (!e'. (((~ F) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((~ F) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((~ F) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c~ cF b0 c==> c==> b0 c= cCONS f0 cfilter / c~ c= b3 cNIL f1 b1 c==> c==> c~ b0 c= cfilter / c~ c= b3 cNIL f1 b2 c= cCOND c~ cF cCONS f0 cfilter / c~ c= b3 cNIL f1 cfilter / c~ c= b3 cNIL f1 cCOND b0 b1 b2 * / ! ! c==> c= c~ cF b0 c==> c==> b0 c= cCONS f0 cfilter / c~ c= b3 cNIL f1 b1 c==> c==> c~ b0 c= cfilter / c~ c= b3 cNIL f1 b2 c= cCOND c~ cF cCONS f0 cfilter / c~ c= b3 cNIL f1 cfilter / c~ c= b3 cNIL f1 cCOND b0 b1 b2 f2 * / ! ! c==> c= c~ cF b0 c==> c==> b0 c= cCONS f0 cfilter / c~ c= b3 cNIL f1 b1 c==> c==> c~ b0 c= cfilter / c~ c= b3 cNIL f1 b2 c= cCOND c~ cF cCONS f0 cfilter / c~ c= b3 cNIL f1 cfilter / c~ c= b3 cNIL f1 cCOND b0 b1 b2 f2
+ |- (((flatten (((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (((foldr cat) NIL) t))) = ((((foldr cat) NIL) (((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (((foldr cat) NIL) t))))
T c= c= cflatten cCOND * / c~ c= b0 cNIL f0 cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 ccat f0 cfoldr part ccat cNIL f1 c= cfoldr part ccat cNIL cCOND * / c~ c= b0 cNIL f0 cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 ccat f0 cfoldr part ccat cNIL f1
- |- ((L = L) = ((\L1. (L = L1)) L))
T c= c= f0 f0 * / c= f0 b0 f0
- |- (((!e'. ((((\l. (~ (l = NIL))) h) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))) ==> ((\e'. ((((\l. (~ (l = NIL))) h) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))) e')) = ((\e'. ((((\l. (~ (l = NIL))) h) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= * / c~ c= b1 cNIL f0 f1 c==> c==> f1 c= cCONS f0 cfilter / c~ c= b1 cNIL f2 f3 c==> c==> c~ f1 c= cfilter / c~ c= b1 cNIL f2 b0 c= cCOND * / c~ c= b1 cNIL f0 cCONS f0 cfilter / c~ c= b1 cNIL f2 cfilter / c~ c= b1 cNIL f2 cCOND f1 f3 b0 * / c==> c= * / c~ c= b1 cNIL f0 f1 c==> c==> f1 c= cCONS f0 cfilter / c~ c= b1 cNIL f2 f3 c==> c==> c~ f1 c= cfilter / c~ c= b1 cNIL f2 b0 c= cCOND * / c~ c= b1 cNIL f0 cCONS f0 cfilter / c~ c= b1 cNIL f2 cfilter / c~ c= b1 cNIL f2 cCOND f1 f3 b0 f4 * / c==> c= * / c~ c= b1 cNIL f0 f1 c==> c==> f1 c= cCONS f0 cfilter / c~ c= b1 cNIL f2 f3 c==> c==> c~ f1 c= cfilter / c~ c= b1 cNIL f2 b0 c= cCOND * / c~ c= b1 cNIL f0 cCONS f0 cfilter / c~ c= b1 cNIL f2 cfilter / c~ c= b1 cNIL f2 cCOND f1 f3 b0 f4
+ |- (((((ssreflect_eq eq) ((h = NIL) = T)) ==> ((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) /\ (((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))) ==> (!x. (((ssreflect_eq eq) ((h = NIL) = x)) ==> ((flatten (((COND (~ x)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))))
T c==> c/\ c==> cssreflect_eq f0 c= c= f1 cNIL cT c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c= c= f1 cNIL cF c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 ! c==> cssreflect_eq f0 c= c= f1 cNIL b0 c= cflatten cCOND c~ b0 cCONS f1 cfilter / c~ c= b1 cNIL f2 cfilter / c~ c= b1 cNIL f2 ccat f1 cflatten f2
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((flatten (((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= cflatten cCOND * / c~ c= b0 cNIL f1 cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f1 cflatten f0
+ (~ T) |- ((~ T) /\ (((filter (\l. (~ (l = NIL)))) t) = ((filter (\l. (~ (l = NIL)))) t)))
T c==> c~ cT c/\ c~ cT c= cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0
+ |- (((!s2. ((((cat NIL) s2) = s2) /\ (((cat ((CONS x) t)) s2) = ((CONS x) ((cat t) s2))))) ==> ((\s2. ((((cat NIL) s2) = s2) /\ (((cat ((CONS x) t)) s2) = ((CONS x) ((cat t) s2))))) s2)) = ((\s2. ((((cat NIL) s2) = s2) /\ (((cat ((CONS x) t)) s2) = ((CONS x) ((cat t) s2))))) s2))
T c= c==> ! c/\ c= ccat cNIL b0 b0 c= ccat cCONS f0 f1 b0 cCONS f0 ccat f1 b0 * / c/\ c= ccat cNIL b0 b0 c= ccat cCONS f0 f1 b0 cCONS f0 ccat f1 b0 f2 * / c/\ c= ccat cNIL b0 b0 c= ccat cCONS f0 f1 b0 cCONS f0 ccat f1 b0 f2
- |- ((((~ (~ (h = NIL))) ==> (((filter (\l. (~ (l = NIL)))) t) = ((filter (\l. (~ (l = NIL)))) t))) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)))) = ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))))
T c= c==> c==> c~ c~ c= f0 cNIL c= cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 c= cCOND * / c~ c= b0 cNIL f0 cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 c= cCOND * / c~ c= b0 cNIL f0 cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1
- ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((((cat h) (flatten t)) = ((cat h) (flatten t))) = (((cat h) (flatten ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= c= ccat f1 cflatten f0 ccat f1 cflatten f0 c= ccat f1 cflatten cfilter / c~ c= b0 cNIL f0 ccat f1 cflatten f0
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((((P T) /\ (P F)) ==> (!x. (P x))) = T)
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c= c==> c/\ * f0 cT * f0 cF ! * f0 b0 cT
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- (!x. (((ssreflect_eq eq) ((h = NIL) = x)) ==> ((flatten (((COND (~ x)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 ! c==> cssreflect_eq f1 c= c= f2 cNIL b0 c= cflatten cCOND c~ b0 cCONS f2 cfilter / c~ c= b1 cNIL f0 cfilter / c~ c= b1 cNIL f0 ccat f2 cflatten f0
- |- ((\e'. (((~ (h = NIL)) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))) e')
T * / c==> c= c~ c= f0 cNIL f1 c==> c==> f1 c= cCONS f0 cfilter / c~ c= b1 cNIL f2 f3 c==> c==> c~ f1 c= cfilter / c~ c= b1 cNIL f2 b0 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b1 cNIL f2 cfilter / c~ c= b1 cNIL f2 cCOND f1 f3 b0 f4
+ ((h = NIL) = x) |- ((ssreflect_eq eq) ((h = NIL) = x))
T c==> c= c= f0 cNIL f1 cssreflect_eq f2 c= c= f0 cNIL f1
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((flatten (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= cflatten cCOND c~ c= f1 cNIL cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f1 cflatten f0
- |- (((~ (h = NIL)) ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ (~ (h = NIL))) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND (~ (h = NIL))) t') e'))))
T c==> c==> c~ c= f0 cNIL c= cCONS f0 cfilter / c~ c= b0 cNIL f1 f2 c==> c==> c~ c~ c= f0 cNIL c= cfilter / c~ c= b0 cNIL f1 f3 c= cCOND * / c~ c= b0 cNIL f0 cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND c~ c= f0 cNIL f2 f3
- |- (((((ssreflect_eq eq) (h = NIL)) = ((ssreflect_eq eq) (h = NIL))) ==> ((((ssreflect_eq eq) (h = NIL)) ==> (((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (h = NIL)) ==> q')))) = ((((ssreflect_eq eq) (h = NIL)) ==> (((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (h = NIL)) ==> q'))))
T c= c==> c= cssreflect_eq f0 c= f1 cNIL cssreflect_eq f0 c= f1 cNIL c==> c==> cssreflect_eq f0 c= f1 cNIL c= c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 f3 c= c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c= f1 cNIL f3 c==> c==> cssreflect_eq f0 c= f1 cNIL c= c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 f3 c= c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c= f1 cNIL f3
+ |- ((((~ F) = T) ==> ((T ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ T) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND T) t') e'))))) = ((T ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ T) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND T) t') e')))))
T c= c==> c= c~ cF cT c==> c==> cT c= cCONS f0 cfilter / c~ c= b0 cNIL f1 f2 c==> c==> c~ cT c= cfilter / c~ c= b0 cNIL f1 f3 c= cCOND c~ cF cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND cT f2 f3 c==> c==> cT c= cCONS f0 cfilter / c~ c= b0 cNIL f1 f2 c==> c==> c~ cT c= cfilter / c~ c= b0 cNIL f1 f3 c= cCOND c~ cF cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND cT f2 f3
+ |- ((~ F) ==> (((filter (\l. (~ (l = NIL)))) t) = ((filter (\l. (~ (l = NIL)))) t)))
T c==> c~ cF c= cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0
- ((\L1. (L = L1)) L1) |- (L = L1)
T c==> * / c= f0 b0 f1 c= f0 f1
- (L = L1) |- ((L = L1) /\ (?L1. (L = L1)))
T c==> c= f0 f1 c/\ c= f0 f1 c? / c= f0 b0
+ ((\x. ((h = NIL) = x)) x) |- ((h = NIL) = x)
T c==> * / c= c= f0 cNIL b0 f1 c= c= f0 cNIL f1
+ |- (((!p'. (!q'. ((((ssreflect_eq eq) ((h = NIL) = T)) = p') ==> ((p' ==> (((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = T)) ==> ((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq eq) ((h = NIL) = T)) = p') ==> ((p' ==> (((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = T)) ==> ((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq eq) ((h = NIL) = T)) = p') ==> ((p' ==> (((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = T)) ==> ((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 c= c= f1 cNIL cT b0 c==> c==> b0 c= c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 b1 c= c==> cssreflect_eq f0 c= c= f1 cNIL cT c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 c= c= f1 cNIL cT b0 c==> c==> b0 c= c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 b1 c= c==> cssreflect_eq f0 c= c= f1 cNIL cT c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 c==> b0 b1 f3 * / ! c==> c= cssreflect_eq f0 c= c= f1 cNIL cT b0 c==> c==> b0 c= c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 b1 c= c==> cssreflect_eq f0 c= c= f1 cNIL cT c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 c==> b0 b1 f3
+ |- ((((ssreflect_eq eq) ((h = NIL) = F)) = p') ==> ((p' ==> (((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 c= c= f1 cNIL cF f2 c==> c==> f2 c= c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b0 cNIL f3 cfilter / c~ c= b0 cNIL f3 ccat f1 cflatten f3 f4 c= c==> cssreflect_eq f0 c= c= f1 cNIL cF c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b0 cNIL f3 cfilter / c~ c= b0 cNIL f3 ccat f1 cflatten f3 c==> f2 f4
- |- ((~ (~ (h = NIL))) ==> (((filter (\l. (~ (l = NIL)))) t) = ((filter (\l. (~ (l = NIL)))) t)))
T c==> c~ c~ c= f0 cNIL c= cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1
- ((\L1. (L = L1)) L1) |- (((\L1. (L = L1)) L1) /\ (?L1. (L = L1)))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c? / c= f0 b0
+ |- (((flatten (((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = ((flatten (((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (((foldr cat) NIL) t))))
T c= c= cflatten cCOND * / c~ c= b0 cNIL f0 cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 ccat f0 cflatten f1 c= cflatten cCOND * / c~ c= b0 cNIL f0 cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 ccat f0 cfoldr part ccat cNIL f1
+ |- ((((cat h) (flatten ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (((foldr cat) NIL) t))) = (((cat h) (((foldr cat) NIL) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (((foldr cat) NIL) t))))
T c= c= ccat f0 cflatten cfilter / c~ c= b0 cNIL f1 ccat f0 cfoldr part ccat cNIL f1 c= ccat f0 cfoldr part ccat cNIL cfilter / c~ c= b0 cNIL f1 ccat f0 cfoldr part ccat cNIL f1
+ |- ((\x. ((h = NIL) = x)) (h = NIL))
T * / c= c= f0 cNIL b0 c= f0 cNIL
+ |- ((\e'. (((~ T) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))) e')
T * / c==> c= c~ cT f0 c==> c==> f0 c= cCONS f1 cfilter / c~ c= b1 cNIL f2 f3 c==> c==> c~ f0 c= cfilter / c~ c= b1 cNIL f2 b0 c= cCOND c~ cT cCONS f1 cfilter / c~ c= b1 cNIL f2 cfilter / c~ c= b1 cNIL f2 cCOND f0 f3 b0 f4
+ |- ((\q'. ((((ssreflect_eq eq) ((h = NIL) = T)) = p') ==> ((p' ==> (((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = T)) ==> ((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 c= c= f1 cNIL cT f2 c==> c==> f2 c= c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b1 cNIL f3 cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 b0 c= c==> cssreflect_eq f0 c= c= f1 cNIL cT c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b1 cNIL f3 cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 c==> f2 b0 f4
+ |- (((~ T) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND T) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) e')))
T c==> c==> c~ cT c= cfilter / c~ c= b0 cNIL f0 f1 c= cCOND c~ cF cCONS f2 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 cCOND cT cCONS f2 cfilter / c~ c= b0 cNIL f0 f1
+ |- (((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> ((\P. (((P T) /\ (P F)) ==> (!x. (P x)))) P)) = ((\P. (((P T) /\ (P F)) ==> (!x. (P x)))) P))
T c= c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 * / c==> c/\ * b0 cT * b0 cF ! * b0 b1 f0 * / c==> c/\ * b0 cT * b0 cF ! * b0 b1 f0
+ ((ssreflect_eq eq) (h = NIL)) |- (h = NIL)
T c==> cssreflect_eq f0 c= f1 cNIL c= f1 cNIL
- |- (((~ (h = NIL)) ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ (~ (h = NIL))) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND (~ (h = NIL))) t') e'))))
T c==> c==> c~ c= f0 cNIL c= cCONS f0 cfilter / c~ c= b0 cNIL f1 f2 c==> c==> c~ c~ c= f0 cNIL c= cfilter / c~ c= b0 cNIL f1 f3 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND c~ c= f0 cNIL f2 f3
- |- (!L1. (((\L1. (L = L1)) L1) ==> (((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L))))
T c==> * / c= f0 b0 f1 c==> c/\ cuniq cflatten f0 call / c~ c= b0 cNIL f0 cuniq f0
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- (((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c==> cssreflect_eq f1 c= c= f2 cNIL cF c= cflatten cCOND c~ cF cCONS f2 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f2 cflatten f0
- ((h = NIL) = x) |- (x = (h = NIL))
T c==> c= c= f0 cNIL f1 c= f1 c= f0 cNIL
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- (((h = NIL) = x) ==> ((flatten (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c==> c= c= f1 cNIL f2 c= cflatten cCOND c~ c= f1 cNIL cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f1 cflatten f0
- |- ((((ssreflect_eq eq) (~ (h = NIL))) = p') ==> ((p' ==> (((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 c~ c= f1 cNIL f2 c==> c==> f2 c= c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f3 ccat f1 cflatten f3 f4 c= c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f3 ccat f1 cflatten f3 c==> f2 f4
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
- (~ (h = NIL)) |- (((~ (NIL = h)) ==> ((NIL = h) = F)) = ((NIL = h) = F))
T c==> c~ c= f0 cNIL c= c==> c~ c= cNIL f0 c= c= cNIL f0 cF c= c= cNIL f0 cF
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- (((\x. ((h = NIL) = x)) x) ==> ((flatten (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c==> * / c= c= f1 cNIL b0 f2 c= cflatten cCOND c~ c= f1 cNIL cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f1 cflatten f0
- |- (((!x. (((\L1. (L = L1)) x) ==> (((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L)))) ==> ((?L1. (L = L1)) ==> (((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L)))) = ((?L1. (L = L1)) ==> (((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L))))
T c= c==> ! c==> * / c= f0 b1 b0 c==> c/\ cuniq cflatten f0 call / c~ c= b1 cNIL f0 cuniq f0 c==> c? / c= f0 b0 c==> c/\ cuniq cflatten f0 call / c~ c= b0 cNIL f0 cuniq f0 c==> c? / c= f0 b0 c==> c/\ cuniq cflatten f0 call / c~ c= b0 cNIL f0 cuniq f0
+ |- ((((cat h) (((foldr cat) NIL) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (((foldr cat) NIL) t))) = ((((foldr cat) NIL) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (((foldr cat) NIL) t))))
T c= c= ccat f0 cfoldr part ccat cNIL cfilter / c~ c= b0 cNIL f1 ccat f0 cfoldr part ccat cNIL f1 c= cfoldr part ccat cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 ccat f0 cfoldr part ccat cNIL f1
- |- (((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!P. (((P T) /\ (P F)) ==> (!x. (P x))))) = (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c= c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
+ |- (((ssreflect_eq eq) (h = NIL)) ==> (((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))))
T c==> cssreflect_eq f0 c= f1 cNIL c= c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2
+ |- (((((ssreflect_eq eq) (~ (h = NIL))) ==> (((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))) ==> ((((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))))) = ((((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))))
T c= c==> c==> cssreflect_eq f0 c~ c= f1 cNIL c= c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= c==> cssreflect_eq f0 c= c= f1 cNIL cF c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= c==> cssreflect_eq f0 c= c= f1 cNIL cF c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2
+ |- ((\x. (!s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s')))))) x)
T * / ! c/\ c= cfilter f0 cNIL cNIL c= cfilter f0 cCONS b0 b1 cCOND * f0 b0 cCONS b0 cfilter f0 b1 cfilter f0 b1 f1
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) /\ (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c/\ ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
+ |- (!a0. (!a1. (((flatten ((filter (\l. (~ (l = NIL)))) a1)) = (flatten a1)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) ((CONS a0) a1))) = (flatten ((CONS a0) a1))))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= cflatten cfilter / c~ c= b0 cNIL cCONS f1 f0 cflatten cCONS f1 f0
- |- ((((ssreflect_eq eq) (h = NIL)) ==> (((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (h = NIL)) ==> q')))
T c==> c==> cssreflect_eq f0 c= f1 cNIL c= c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 f3 c= c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c= f1 cNIL f3
- |- (((!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))) ==> ((\z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))) z0)) = ((\z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))) z0))
T c= c==> ! c/\ c= cfoldr f0 b0 cCONS f1 f2 * * f0 f1 cfoldr f0 b0 f2 c= cfoldr f0 b0 cNIL b0 * / c/\ c= cfoldr f0 b0 cCONS f1 f2 * * f0 f1 cfoldr f0 b0 f2 c= cfoldr f0 b0 cNIL b0 f3 * / c/\ c= cfoldr f0 b0 cCONS f1 f2 * * f0 f1 cfoldr f0 b0 f2 c= cfoldr f0 b0 cNIL b0 f3
+ |- ((((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) ((CONS h) t))) = (flatten ((CONS h) t)))) = T)
T c= c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= cflatten cfilter / c~ c= b0 cNIL cCONS f1 f0 cflatten cCONS f1 f0 cT
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((((\x. ((h = NIL) = x)) x) ==> ((flatten (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = T)
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= c==> * / c= c= f1 cNIL b0 f2 c= cflatten cCOND c~ c= f1 cNIL cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f1 cflatten f0 cT
+ |- ((((cat h) (flatten ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = (((cat h) (flatten ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (((foldr cat) NIL) t))))
T c= c= ccat f0 cflatten cfilter / c~ c= b0 cNIL f1 ccat f0 cflatten f1 c= ccat f0 cflatten cfilter / c~ c= b0 cNIL f1 ccat f0 cfoldr part ccat cNIL f1
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((((foldr cat) NIL) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (((foldr cat) NIL) t)))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= cfoldr part ccat cNIL cCONS f1 cfilter / c~ c= b0 cNIL f0 ccat f1 cfoldr part ccat cNIL f0
+ |- ((((foldr cat) NIL) ((filter (\l. (~ (l = NIL)))) NIL)) = (flatten NIL))
T c= cfoldr part ccat cNIL cfilter / c~ c= b0 cNIL cNIL cflatten cNIL
+ |- (((!x. (!s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s')))))) ==> ((\x. (!s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s')))))) x)) = ((\x. (!s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s')))))) x))
T c= c==> ! ! c/\ c= cfilter f0 cNIL cNIL c= cfilter f0 cCONS b0 b1 cCOND * f0 b0 cCONS b0 cfilter f0 b1 cfilter f0 b1 * / ! c/\ c= cfilter f0 cNIL cNIL c= cfilter f0 cCONS b0 b1 cCOND * f0 b0 cCONS b0 cfilter f0 b1 cfilter f0 b1 f1 * / ! c/\ c= cfilter f0 cNIL cNIL c= cfilter f0 cCONS b0 b1 cCOND * f0 b0 cCONS b0 cfilter f0 b1 cfilter f0 b1 f1
+ |- (((!x. (!t. (!s2. ((((cat NIL) s2) = s2) /\ (((cat ((CONS x) t)) s2) = ((CONS x) ((cat t) s2))))))) ==> ((\x. (!t. (!s2. ((((cat NIL) s2) = s2) /\ (((cat ((CONS x) t)) s2) = ((CONS x) ((cat t) s2))))))) x)) = ((\x. (!t. (!s2. ((((cat NIL) s2) = s2) /\ (((cat ((CONS x) t)) s2) = ((CONS x) ((cat t) s2))))))) x))
T c= c==> ! ! ! c/\ c= ccat cNIL b2 b2 c= ccat cCONS b0 b1 b2 cCONS b0 ccat b1 b2 * / ! ! c/\ c= ccat cNIL b2 b2 c= ccat cCONS b0 b1 b2 cCONS b0 ccat b1 b2 f0 * / ! ! c/\ c= ccat cNIL b2 b2 c= ccat cCONS b0 b1 b2 cCONS b0 ccat b1 b2 f0
- |- (((!x. (((\L1. (L = L1)) x) ==> (?L1. (L = L1)))) ==> ((?L1. (L = L1)) ==> (?L1. (L = L1)))) = ((?L1. (L = L1)) ==> (?L1. (L = L1))))
T c= c==> ! c==> * / c= f0 b1 b0 c? / c= f0 b1 c==> c? / c= f0 b0 c? / c= f0 b0 c==> c? / c= f0 b0 c? / c= f0 b0
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((((foldr cat) NIL) (((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (((foldr cat) NIL) t)))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= cfoldr part ccat cNIL cCOND * / c~ c= b0 cNIL f1 cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f1 cfoldr part ccat cNIL f0
+ (((foldr cat) NIL) = flatten) |- (flatten = ((foldr cat) NIL))
T c==> c= * * part cfoldr part ccat cNIL part cflatten c= part cflatten * * part cfoldr part ccat cNIL
- |- ((((\L1. (L = L1)) L1) ==> (((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L))) = T)
T c= c==> * / c= f0 b0 f1 c==> c/\ cuniq cflatten f0 call / c~ c= b0 cNIL f0 cuniq f0 cT
- |- (((((ssreflect_eq eq) (~ (h = NIL))) = ((ssreflect_eq eq) (~ (h = NIL)))) ==> ((((ssreflect_eq eq) (~ (h = NIL))) ==> (((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (~ (h = NIL))) ==> q')))) = ((((ssreflect_eq eq) (~ (h = NIL))) ==> (((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (~ (h = NIL))) ==> q'))))
T c= c==> c= cssreflect_eq f0 c~ c= f1 cNIL cssreflect_eq f0 c~ c= f1 cNIL c==> c==> cssreflect_eq f0 c~ c= f1 cNIL c= c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 f3 c= c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c~ c= f1 cNIL f3 c==> c==> cssreflect_eq f0 c~ c= f1 cNIL c= c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 f3 c= c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c~ c= f1 cNIL f3
+ |- ((((flatten ((filter (\l. (~ (l = NIL)))) NIL)) = (flatten NIL)) /\ (!a0. (!a1. (((flatten ((filter (\l. (~ (l = NIL)))) a1)) = (flatten a1)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) ((CONS a0) a1))) = (flatten ((CONS a0) a1))))))) ==> (!L. ((flatten ((filter (\l. (~ (l = NIL)))) L)) = (flatten L))))
T c==> c/\ c= cflatten cfilter / c~ c= b0 cNIL cNIL cflatten cNIL ! ! c==> c= cflatten cfilter / c~ c= b2 cNIL b1 cflatten b1 c= cflatten cfilter / c~ c= b2 cNIL cCONS b0 b1 cflatten cCONS b0 b1 ! c= cflatten cfilter / c~ c= b1 cNIL b0 cflatten b0
+ |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
- ((ssreflect_eq eq) (~ (h = NIL))) |- (((~ (h = NIL)) ==> ((h = NIL) = F)) = ((h = NIL) = F))
T c==> cssreflect_eq f0 c~ c= f1 cNIL c= c==> c~ c= f1 cNIL c= c= f1 cNIL cF c= c= f1 cNIL cF
- |- (((!x. (((\x. ((h = NIL) = x)) x) ==> (?x. ((h = NIL) = x)))) ==> ((?x. ((h = NIL) = x)) ==> (?x. ((h = NIL) = x)))) = ((?x. ((h = NIL) = x)) ==> (?x. ((h = NIL) = x))))
T c= c==> ! c==> * / c= c= f0 cNIL b1 b0 c? / c= c= f0 cNIL b1 c==> c? / c= c= f0 cNIL b0 c? / c= c= f0 cNIL b0 c==> c? / c= c= f0 cNIL b0 c? / c= c= f0 cNIL b0
+ |- ((T ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ T) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND T) t') e'))))
T c==> c==> cT c= cCONS f0 cfilter / c~ c= b0 cNIL f1 f2 c==> c==> c~ cT c= cfilter / c~ c= b0 cNIL f1 f3 c= cCOND c~ cF cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND cT f2 f3
+ |- ((\p'. (!q'. ((((ssreflect_eq eq) ((h = NIL) = T)) = p') ==> ((p' ==> (((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = T)) ==> ((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q')))))) p')
T * / ! c==> c= cssreflect_eq f0 c= c= f1 cNIL cT b0 c==> c==> b0 c= c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 b1 c= c==> cssreflect_eq f0 c= c= f1 cNIL cT c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 c==> b0 b1 f3
+ |- ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND T) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)))
T c= cCOND c~ cF cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND cT cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1
- |- ((L = L1) ==> (?L1. (L = L1)))
T c==> c= f0 f1 c? / c= f0 b0
+ (P = ((ssreflect_eq eq) P)) |- (((ssreflect_eq eq) P) = P)
T c==> c= f0 cssreflect_eq f1 f0 c= cssreflect_eq f1 f0 f0
- |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((\x. (((ssreflect_eq eq) ((h = NIL) = x)) ==> ((flatten (((COND (~ x)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))) x)
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 * / c==> cssreflect_eq f1 c= c= f2 cNIL b0 c= cflatten cCOND c~ b0 cCONS f2 cfilter / c~ c= b1 cNIL f0 cfilter / c~ c= b1 cNIL f0 ccat f2 cflatten f0 f3
- |- (((!s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))))) ==> ((\s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))))) s)) = ((\s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))))) s))
T c= c==> ! ! ! c/\ c= cfoldr b1 b2 cCONS f0 b0 * * b1 f0 cfoldr b1 b2 b0 c= cfoldr b1 b2 cNIL b2 * / ! ! c/\ c= cfoldr b1 b2 cCONS f0 b0 * * b1 f0 cfoldr b1 b2 b0 c= cfoldr b1 b2 cNIL b2 f1 * / ! ! c/\ c= cfoldr b1 b2 cCONS f0 b0 * * b1 f0 cfoldr b1 b2 b0 c= cfoldr b1 b2 cNIL b2 f1
+ |- ((~ T) = F)
T c= c~ cT cF
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- (((!x. (((\x. ((h = NIL) = x)) x) ==> ((flatten (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))) ==> ((?x. ((h = NIL) = x)) ==> ((flatten (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))) = ((?x. ((h = NIL) = x)) ==> ((flatten (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= c==> ! c==> * / c= c= f1 cNIL b1 b0 c= cflatten cCOND c~ c= f1 cNIL cCONS f1 cfilter / c~ c= b1 cNIL f0 cfilter / c~ c= b1 cNIL f0 ccat f1 cflatten f0 c==> c? / c= c= f1 cNIL b0 c= cflatten cCOND c~ c= f1 cNIL cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f1 cflatten f0 c==> c? / c= c= f1 cNIL b0 c= cflatten cCOND c~ c= f1 cNIL cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f1 cflatten f0
+ |- (((!g'. (!t'. (!e'. (((~ T) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((~ T) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((~ T) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c~ cT b0 c==> c==> b0 c= cCONS f0 cfilter / c~ c= b3 cNIL f1 b1 c==> c==> c~ b0 c= cfilter / c~ c= b3 cNIL f1 b2 c= cCOND c~ cT cCONS f0 cfilter / c~ c= b3 cNIL f1 cfilter / c~ c= b3 cNIL f1 cCOND b0 b1 b2 * / ! ! c==> c= c~ cT b0 c==> c==> b0 c= cCONS f0 cfilter / c~ c= b3 cNIL f1 b1 c==> c==> c~ b0 c= cfilter / c~ c= b3 cNIL f1 b2 c= cCOND c~ cT cCONS f0 cfilter / c~ c= b3 cNIL f1 cfilter / c~ c= b3 cNIL f1 cCOND b0 b1 b2 f2 * / ! ! c==> c= c~ cT b0 c==> c==> b0 c= cCONS f0 cfilter / c~ c= b3 cNIL f1 b1 c==> c==> c~ b0 c= cfilter / c~ c= b3 cNIL f1 b2 c= cCOND c~ cT cCONS f0 cfilter / c~ c= b3 cNIL f1 cfilter / c~ c= b3 cNIL f1 cCOND b0 b1 b2 f2
- ((ssreflect_eq eq) (~ (h = NIL))) |- ((NIL = h) = F)
T c==> cssreflect_eq f0 c~ c= f1 cNIL c= c= cNIL f1 cF
- (~ F) |- (F = F)
T c==> c~ cF c= cF cF
- |- (((((ssreflect_eq eq) (~ (h = NIL))) ==> (((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))) ==> ((((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))))) = ((((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))))
T c= c==> c==> cssreflect_eq f0 c~ c= f1 cNIL c= c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2
+ |- (((((ssreflect_eq eq) ((h = NIL) = F)) = ((ssreflect_eq eq) (~ (h = NIL)))) ==> ((((ssreflect_eq eq) (~ (h = NIL))) ==> (((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (~ (h = NIL))) ==> q')))) = ((((ssreflect_eq eq) (~ (h = NIL))) ==> (((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (~ (h = NIL))) ==> q'))))
T c= c==> c= cssreflect_eq f0 c= c= f1 cNIL cF cssreflect_eq f0 c~ c= f1 cNIL c==> c==> cssreflect_eq f0 c~ c= f1 cNIL c= c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 f3 c= c==> cssreflect_eq f0 c= c= f1 cNIL cF c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c~ c= f1 cNIL f3 c==> c==> cssreflect_eq f0 c~ c= f1 cNIL c= c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 f3 c= c==> cssreflect_eq f0 c= c= f1 cNIL cF c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c~ c= f1 cNIL f3
- |- (((!e'. (((~ (h = NIL)) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))) ==> ((\e'. (((~ (h = NIL)) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))) e')) = ((\e'. (((~ (h = NIL)) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c~ c= f0 cNIL f1 c==> c==> f1 c= cCONS f0 cfilter / c~ c= b1 cNIL f2 f3 c==> c==> c~ f1 c= cfilter / c~ c= b1 cNIL f2 b0 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b1 cNIL f2 cfilter / c~ c= b1 cNIL f2 cCOND f1 f3 b0 * / c==> c= c~ c= f0 cNIL f1 c==> c==> f1 c= cCONS f0 cfilter / c~ c= b1 cNIL f2 f3 c==> c==> c~ f1 c= cfilter / c~ c= b1 cNIL f2 b0 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b1 cNIL f2 cfilter / c~ c= b1 cNIL f2 cCOND f1 f3 b0 f4 * / c==> c= c~ c= f0 cNIL f1 c==> c==> f1 c= cCONS f0 cfilter / c~ c= b1 cNIL f2 f3 c==> c==> c~ f1 c= cfilter / c~ c= b1 cNIL f2 b0 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b1 cNIL f2 cfilter / c~ c= b1 cNIL f2 cCOND f1 f3 b0 f4
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- (((P T) /\ (P F)) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF c/\ c/\ * f0 cT * f0 cF ! * f0 b0
- |- (((h = NIL) = x) = ((\x. ((h = NIL) = x)) x))
T c= c= c= f0 cNIL f1 * / c= c= f0 cNIL b0 f1
- (~ (h = NIL)) |- ((h = NIL) = F)
T c==> c~ c= f0 cNIL c= c= f0 cNIL cF
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- ((\x. ((h = NIL) = x)) x) |- (((\x. ((h = NIL) = x)) x) /\ (?x. ((h = NIL) = x)))
T c==> * / c= c= f0 cNIL b0 f1 c/\ * / c= c= f0 cNIL b0 f1 c? / c= c= f0 cNIL b0
- |- ((\p'. (!q'. ((((ssreflect_eq eq) (h = NIL)) = p') ==> ((p' ==> (((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))) = (p' ==> q')))))) p')
T * / ! c==> c= cssreflect_eq f0 c= f1 cNIL b0 c==> c==> b0 c= c= cflatten cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 b1 c= c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 c==> b0 b1 f3
- |- (((((foldr cat) NIL) NIL) = (((foldr cat) NIL) NIL)) = ((((foldr cat) NIL) ((filter (\l. (~ (l = NIL)))) NIL)) = (((foldr cat) NIL) NIL)))
T c= c= cfoldr part ccat cNIL cNIL cfoldr part ccat cNIL cNIL c= cfoldr part ccat cNIL cfilter / c~ c= b0 cNIL cNIL cfoldr part ccat cNIL cNIL
+ |- (((((foldr cat) NIL) ((filter (\l. (~ (l = NIL)))) NIL)) = (flatten NIL)) = ((flatten ((filter (\l. (~ (l = NIL)))) NIL)) = (flatten NIL)))
T c= c= cfoldr part ccat cNIL cfilter / c~ c= b0 cNIL cNIL cflatten cNIL c= cflatten cfilter / c~ c= b0 cNIL cNIL cflatten cNIL
+ |- (((!e'. (((~ T) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))) ==> ((\e'. (((~ T) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))) e')) = ((\e'. (((~ T) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c~ cT f0 c==> c==> f0 c= cCONS f1 cfilter / c~ c= b1 cNIL f2 f3 c==> c==> c~ f0 c= cfilter / c~ c= b1 cNIL f2 b0 c= cCOND c~ cT cCONS f1 cfilter / c~ c= b1 cNIL f2 cfilter / c~ c= b1 cNIL f2 cCOND f0 f3 b0 * / c==> c= c~ cT f0 c==> c==> f0 c= cCONS f1 cfilter / c~ c= b1 cNIL f2 f3 c==> c==> c~ f0 c= cfilter / c~ c= b1 cNIL f2 b0 c= cCOND c~ cT cCONS f1 cfilter / c~ c= b1 cNIL f2 cfilter / c~ c= b1 cNIL f2 cCOND f0 f3 b0 f4 * / c==> c= c~ cT f0 c==> c==> f0 c= cCONS f1 cfilter / c~ c= b1 cNIL f2 f3 c==> c==> c~ f0 c= cfilter / c~ c= b1 cNIL f2 b0 c= cCOND c~ cT cCONS f1 cfilter / c~ c= b1 cNIL f2 cfilter / c~ c= b1 cNIL f2 cCOND f0 f3 b0 f4
+ |- ((\g'. (!t'. (!e'. (((~ F) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c~ cF b0 c==> c==> b0 c= cCONS f0 cfilter / c~ c= b3 cNIL f1 b1 c==> c==> c~ b0 c= cfilter / c~ c= b3 cNIL f1 b2 c= cCOND c~ cF cCONS f0 cfilter / c~ c= b3 cNIL f1 cfilter / c~ c= b3 cNIL f1 cCOND b0 b1 b2 f2
- |- (((!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))) ==> ((\f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))) f)) = ((\f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))) f))
T c= c==> ! ! c/\ c= cfoldr b0 b1 cCONS f0 f1 * * b0 f0 cfoldr b0 b1 f1 c= cfoldr b0 b1 cNIL b1 * / ! c/\ c= cfoldr b0 b1 cCONS f0 f1 * * b0 f0 cfoldr b0 b1 f1 c= cfoldr b0 b1 cNIL b1 f2 * / ! c/\ c= cfoldr b0 b1 cCONS f0 f1 * * b0 f0 cfoldr b0 b1 f1 c= cfoldr b0 b1 cNIL b1 f2
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- (((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c==> cssreflect_eq f1 c~ c= f2 cNIL c= cflatten cCONS f2 cfilter / c~ c= b0 cNIL f0 ccat f2 cflatten f0
- (L = L1) |- (((uniq (flatten L1)) /\ ((all (\l. (~ (l = NIL)))) L1)) ==> (uniq L1))
T c==> c= f0 f1 c==> c/\ cuniq cflatten f1 call / c~ c= b0 cNIL f1 cuniq f1
+ |- (((!P. (P = ((ssreflect_eq eq) P))) ==> ((\P. (P = ((ssreflect_eq eq) P))) P)) = ((\P. (P = ((ssreflect_eq eq) P))) P))
T c= c==> ! c= b0 cssreflect_eq f0 b0 * / c= b0 cssreflect_eq f0 b0 f1 * / c= b0 cssreflect_eq f0 b0 f1
- (~ (~ (h = NIL))) |- ((~ (~ (h = NIL))) /\ (((filter (\l. (~ (l = NIL)))) t) = ((filter (\l. (~ (l = NIL)))) t)))
T c==> c~ c~ c= f0 cNIL c/\ c~ c~ c= f0 cNIL c= cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- (((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c==> cssreflect_eq f1 c= f2 cNIL c= cflatten cfilter / c~ c= b0 cNIL f0 ccat f2 cflatten f0
- |- (((!x. (!s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))))) ==> ((\x. (!s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))))) x)) = ((\x. (!s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))))) x))
T c= c==> ! ! ! ! c/\ c= cfoldr b2 b3 cCONS b0 b1 * * b2 b0 cfoldr b2 b3 b1 c= cfoldr b2 b3 cNIL b3 * / ! ! ! c/\ c= cfoldr b2 b3 cCONS b0 b1 * * b2 b0 cfoldr b2 b3 b1 c= cfoldr b2 b3 cNIL b3 f0 * / ! ! ! c/\ c= cfoldr b2 b3 cCONS b0 b1 * * b2 b0 cfoldr b2 b3 b1 c= cfoldr b2 b3 cNIL b3 f0
- |- (!x. (((\x. ((h = NIL) = x)) x) ==> (?x. ((h = NIL) = x))))
T c==> * / c= c= f0 cNIL b0 f1 c? / c= c= f0 cNIL b0
- (L = L1) |- (((flatten ((filter (\l. (~ (l = NIL)))) L1)) = (flatten L1)) = ((flatten ((filter (\l. (~ (l = NIL)))) L)) = (flatten L)))
T c==> c= f0 f1 c= c= cflatten cfilter / c~ c= b0 cNIL f1 cflatten f1 c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0
+ |- (((((foldr cat) NIL) ((filter (\l. (~ (l = NIL)))) ((CONS h) t))) = (((foldr cat) NIL) ((CONS h) t))) = ((((foldr cat) NIL) ((filter (\l. (~ (l = NIL)))) ((CONS h) t))) = (flatten ((CONS h) t))))
T c= c= cfoldr part ccat cNIL cfilter / c~ c= b0 cNIL cCONS f0 f1 cfoldr part ccat cNIL cCONS f0 f1 c= cfoldr part ccat cNIL cfilter / c~ c= b0 cNIL cCONS f0 f1 cflatten cCONS f0 f1
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) |- ((((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))) = T)
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c= c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0 cT
+ |- ((\p'. (!q'. ((((ssreflect_eq eq) ((h = NIL) = F)) = p') ==> ((p' ==> (((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q')))))) p')
T * / ! c==> c= cssreflect_eq f0 c= c= f1 cNIL cF b0 c==> c==> b0 c= c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 b1 c= c==> cssreflect_eq f0 c= c= f1 cNIL cF c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b2 cNIL f2 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 c==> b0 b1 f3
+ |- (((!v. (!P. (((ssreflect_eq v) P) = P))) ==> ((\v. (!P. (((ssreflect_eq v) P) = P))) v)) = ((\v. (!P. (((ssreflect_eq v) P) = P))) v))
T c= c==> ! ! c= cssreflect_eq b0 b1 b1 * / ! c= cssreflect_eq b0 b1 b1 f0 * / ! c= cssreflect_eq b0 b1 b1 f0
+ |- (?x. ((h = NIL) = x))
T c? / c= c= f0 cNIL b0
+ |- ((~ F) = T)
T c= c~ cF cT
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)) |- ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f0 ccat f1 cflatten f0
+ |- ((F ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ F) ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND F) t') e'))))
T c==> c==> cF c= cCONS f0 cfilter / c~ c= b0 cNIL f1 f2 c==> c==> c~ cF c= cfilter / c~ c= b0 cNIL f1 f3 c= cCOND c~ cT cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND cF f2 f3
- (L = L1) |- ((\L1. (L = L1)) L1)
T c==> c= f0 f1 * / c= f0 b0 f1
+ ((flatten ((filter (\l. (~ (l = NIL)))) t)) = (flatten t)), ((\x. ((h = NIL) = x)) x) |- (((\x. ((h = NIL) = x)) x) /\ ((flatten (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))
T c==> c= cflatten cfilter / c~ c= b0 cNIL f0 cflatten f0 c==> * / c= c= f1 cNIL b0 f2 c/\ * / c= c= f1 cNIL b0 f2 c= cflatten cCOND c~ c= f1 cNIL cCONS f1 cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0 ccat f1 cflatten f0
+ |- ((((ssreflect_eq eq) ((h = NIL) = T)) = p') ==> ((p' ==> (((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = T)) ==> ((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 c= c= f1 cNIL cT f2 c==> c==> f2 c= c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b0 cNIL f3 cfilter / c~ c= b0 cNIL f3 ccat f1 cflatten f3 f4 c= c==> cssreflect_eq f0 c= c= f1 cNIL cT c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b0 cNIL f3 cfilter / c~ c= b0 cNIL f3 ccat f1 cflatten f3 c==> f2 f4
+ |- ((\e'. (((~ F) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))) e')
T * / c==> c= c~ cF f0 c==> c==> f0 c= cCONS f1 cfilter / c~ c= b1 cNIL f2 f3 c==> c==> c~ f0 c= cfilter / c~ c= b1 cNIL f2 b0 c= cCOND c~ cF cCONS f1 cfilter / c~ c= b1 cNIL f2 cfilter / c~ c= b1 cNIL f2 cCOND f0 f3 b0 f4
- |- (((!p'. (!q'. ((((ssreflect_eq eq) (~ (h = NIL))) = p') ==> ((p' ==> (((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq eq) (~ (h = NIL))) = p') ==> ((p' ==> (((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq eq) (~ (h = NIL))) = p') ==> ((p' ==> (((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 c~ c= f1 cNIL b0 c==> c==> b0 c= c= cflatten cCONS f1 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 b1 c= c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 c~ c= f1 cNIL b0 c==> c==> b0 c= c= cflatten cCONS f1 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 b1 c= c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 c==> b0 b1 f3 * / ! c==> c= cssreflect_eq f0 c~ c= f1 cNIL b0 c==> c==> b0 c= c= cflatten cCONS f1 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 b1 c= c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 c==> b0 b1 f3
+ |- ((((ssreflect_eq eq) ((h = NIL) = T)) ==> ((flatten (((COND (~ T)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))))
T c= c==> cssreflect_eq f0 c= c= f1 cNIL cT c= cflatten cCOND c~ cT cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2
+ |- ((~ T) ==> (((filter (\l. (~ (l = NIL)))) t) = ((filter (\l. (~ (l = NIL)))) t)))
T c==> c~ cT c= cfilter / c~ c= b0 cNIL f0 cfilter / c~ c= b0 cNIL f0
- |- (((!g'. (!t'. (!e'. (((~ (h = NIL)) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((~ (h = NIL)) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((~ (h = NIL)) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c~ c= f0 cNIL b0 c==> c==> b0 c= cCONS f0 cfilter / c~ c= b3 cNIL f1 b1 c==> c==> c~ b0 c= cfilter / c~ c= b3 cNIL f1 b2 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b3 cNIL f1 cfilter / c~ c= b3 cNIL f1 cCOND b0 b1 b2 * / ! ! c==> c= c~ c= f0 cNIL b0 c==> c==> b0 c= cCONS f0 cfilter / c~ c= b3 cNIL f1 b1 c==> c==> c~ b0 c= cfilter / c~ c= b3 cNIL f1 b2 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b3 cNIL f1 cfilter / c~ c= b3 cNIL f1 cCOND b0 b1 b2 f2 * / ! ! c==> c= c~ c= f0 cNIL b0 c==> c==> b0 c= cCONS f0 cfilter / c~ c= b3 cNIL f1 b1 c==> c==> c~ b0 c= cfilter / c~ c= b3 cNIL f1 b2 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b3 cNIL f1 cfilter / c~ c= b3 cNIL f1 cCOND b0 b1 b2 f2
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- (~ T) |- (T = F)
T c==> c~ cT c= cT cF
- ((\x. ((h = NIL) = x)) x) |- ((((h = NIL) = x) ==> (?x. ((h = NIL) = x))) = (?x. ((h = NIL) = x)))
T c==> * / c= c= f0 cNIL b0 f1 c= c==> c= c= f0 cNIL f1 c? / c= c= f0 cNIL b0 c? / c= c= f0 cNIL b0
+ |- (((foldr cat) NIL) = flatten)
T c= * * part cfoldr part ccat cNIL part cflatten
- |- ((\q'. ((((ssreflect_eq eq) (h = NIL)) = p') ==> ((p' ==> (((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 c= f1 cNIL f2 c==> c==> f2 c= c= cflatten cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 b0 c= c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 c==> f2 b0 f4
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- |- ((((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (h = NIL)) ==> ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))))
T c= c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c= f1 cNIL c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF c/\ ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! * f0 b0
- |- (((?L1. (L = L1)) ==> (((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L))) = (((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L)))
T c= c==> c? / c= f0 b0 c==> c/\ cuniq cflatten f0 call / c~ c= b0 cNIL f0 cuniq f0 c==> c/\ cuniq cflatten f0 call / c~ c= b0 cNIL f0 cuniq f0
- |- (((\l. (f l)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((\p'. (!q'. ((((ssreflect_eq eq) (~ (h = NIL))) = p') ==> ((p' ==> (((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q')))))) p')
T * / ! c==> c= cssreflect_eq f0 c~ c= f1 cNIL b0 c==> c==> b0 c= c= cflatten cCONS f1 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 b1 c= c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b2 cNIL f2 ccat f1 cflatten f2 c==> b0 b1 f3
- ((\L1. (L = L1)) L1) |- (((L = L1) ==> (((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L))) = (((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L)))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c==> c/\ cuniq cflatten f0 call / c~ c= b0 cNIL f0 cuniq f0 c==> c/\ cuniq cflatten f0 call / c~ c= b0 cNIL f0 cuniq f0
+ |- (!p'. (!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3
- |- (?L1. (L = L1))
T c? / c= f0 b0
+ |- ((\q'. ((((ssreflect_eq eq) ((h = NIL) = F)) = p') ==> ((p' ==> (((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 c= c= f1 cNIL cF f2 c==> c==> f2 c= c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b1 cNIL f3 cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 b0 c= c==> cssreflect_eq f0 c= c= f1 cNIL cF c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b1 cNIL f3 cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 c==> f2 b0 f4
- |- ((((~ (~ (h = NIL))) ==> (((filter (\l. (~ (l = NIL)))) t) = ((filter (\l. (~ (l = NIL)))) t))) ==> ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)))) = ((((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))))
T c= c==> c==> c~ c~ c= f0 cNIL c= cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 c= cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1
+ ((h = NIL) = x) |- ((((ssreflect_eq eq) ((h = NIL) = x)) ==> ((flatten (((COND (~ x)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = ((flatten (((COND (~ x)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))
T c==> c= c= f0 cNIL f1 c= c==> cssreflect_eq f2 c= c= f0 cNIL f1 c= cflatten cCOND c~ f1 cCONS f0 cfilter / c~ c= b0 cNIL f3 cfilter / c~ c= b0 cNIL f3 ccat f0 cflatten f3 c= cflatten cCOND c~ f1 cCONS f0 cfilter / c~ c= b0 cNIL f3 cfilter / c~ c= b0 cNIL f3 ccat f0 cflatten f3
+ |- (((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q')))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3 cT
+ |- (((((foldr cat) NIL) (((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (((foldr cat) NIL) t))) = ((((foldr cat) NIL) (((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = (((foldr cat) NIL) ((CONS h) t))))
T c= c= cfoldr part ccat cNIL cCOND * / c~ c= b0 cNIL f0 cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 ccat f0 cfoldr part ccat cNIL f1 c= cfoldr part ccat cNIL cCOND * / c~ c= b0 cNIL f0 cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cfoldr part ccat cNIL cCONS f0 f1
+ ((\x. ((h = NIL) = x)) x) |- ((((h = NIL) = x) ==> ((flatten (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = ((flatten (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))))
T c==> * / c= c= f0 cNIL b0 f1 c= c==> c= c= f0 cNIL f1 c= cflatten cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f0 cflatten f2 c= cflatten cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f0 cflatten f2
- |- ((~ (h = NIL)) ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = ((CONS h) ((filter (\l. (~ (l = NIL)))) t))))
T c==> c~ c= f0 cNIL c= cCONS f0 cfilter / c~ c= b0 cNIL f1 cCONS f0 cfilter / c~ c= b0 cNIL f1
+ |- ((((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) ((h = NIL) = F)) ==> ((flatten (((COND (~ F)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))))
T c= c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c= c= f1 cNIL cF c= cflatten cCOND c~ cF cCONS f1 cfilter / c~ c= b0 cNIL f2 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2
- |- (((ssreflect_eq eq) (h = NIL)) ==> (((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t))) = ((flatten ((filter (\l. (~ (l = NIL)))) t)) = ((cat h) (flatten t)))))
T c==> cssreflect_eq f0 c= f1 cNIL c= c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c= cflatten cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2
- |- (((!q'. ((((ssreflect_eq eq) (~ (h = NIL))) = p') ==> ((p' ==> (((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq eq) (~ (h = NIL))) = p') ==> ((p' ==> (((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq eq) (~ (h = NIL))) = p') ==> ((p' ==> (((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t))) = q')) ==> ((((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c~ c= f1 cNIL f2 c==> c==> f2 c= c= cflatten cCONS f1 cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 b0 c= c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 c==> f2 b0 * / c==> c= cssreflect_eq f0 c~ c= f1 cNIL f2 c==> c==> f2 c= c= cflatten cCONS f1 cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 b0 c= c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 c==> f2 b0 f4 * / c==> c= cssreflect_eq f0 c~ c= f1 cNIL f2 c==> c==> f2 c= c= cflatten cCONS f1 cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 b0 c= c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b1 cNIL f3 ccat f1 cflatten f3 c==> f2 b0 f4
- |- (((((foldr cat) NIL) (((COND (~ (h = NIL))) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = (((foldr cat) NIL) ((CONS h) t))) = ((((foldr cat) NIL) (((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t))) = (((foldr cat) NIL) ((CONS h) t))))
T c= c= cfoldr part ccat cNIL cCOND c~ c= f0 cNIL cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cfoldr part ccat cNIL cCONS f0 f1 c= cfoldr part ccat cNIL cCOND * / c~ c= b0 cNIL f0 cCONS f0 cfilter / c~ c= b0 cNIL f1 cfilter / c~ c= b0 cNIL f1 cfoldr part ccat cNIL cCONS f0 f1
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- |- ((((uniq (flatten L)) /\ ((all (\l. (~ (l = NIL)))) L)) ==> (uniq L)) = T)
T c= c==> c/\ cuniq cflatten f0 call / c~ c= b0 cNIL f0 cuniq f0 cT
- |- ((((\L1. (L = L1)) L1) ==> (?L1. (L = L1))) = T)
T c= c==> * / c= f0 b0 f1 c? / c= f0 b0 cT
- (h = NIL) |- (NIL = h)
T c==> c= f0 cNIL c= cNIL f0
- |- ((\e'. ((((\l. (~ (l = NIL))) h) = g') ==> ((g' ==> (((CONS h) ((filter (\l. (~ (l = NIL)))) t)) = t')) ==> (((~ g') ==> (((filter (\l. (~ (l = NIL)))) t) = e')) ==> ((((COND ((\l. (~ (l = NIL))) h)) ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) ((filter (\l. (~ (l = NIL)))) t)) = (((COND g') t') e')))))) e')
T * / c==> c= * / c~ c= b1 cNIL f0 f1 c==> c==> f1 c= cCONS f0 cfilter / c~ c= b1 cNIL f2 f3 c==> c==> c~ f1 c= cfilter / c~ c= b1 cNIL f2 b0 c= cCOND * / c~ c= b1 cNIL f0 cCONS f0 cfilter / c~ c= b1 cNIL f2 cfilter / c~ c= b1 cNIL f2 cCOND f1 f3 b0 f4
- |- ((((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))) = (((ssreflect_eq eq) (~ (h = NIL))) ==> ((flatten ((CONS h) ((filter (\l. (~ (l = NIL)))) t))) = ((cat h) (flatten t)))))
T c= c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2 c==> cssreflect_eq f0 c~ c= f1 cNIL c= cflatten cCONS f1 cfilter / c~ c= b0 cNIL f2 ccat f1 cflatten f2
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) /\ (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c/\ ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1
