N Planarity.remark012_fan
C |- (!x. (!V. (!E. (!u. (!w. (!a. (((FAN (x , (V , E))) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0))))))) ==> (~ (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 f5 creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c~ cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f3 c% f5 f4 f1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D SKOLEM_THM
A |- (!P. ((!x. (?y. ((P x) y))) = (?y. (!x. ((P x) (y x))))))
T c= ! c? / * * f0 b0 b1 c? / ! * * f0 b1 * b0 b1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D Misc_defs_and_lemmas.IN_ELIM_THM'
A |- ((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D UNION
A |- (!s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))))
T c= * * part cUNION f0 f1 * part cGSPEC / c? / cSETSPEC b0 c\/ cIN b1 f0 cIN b1 f1 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D DISJOINT
A |- (!s. (!t. (((DISJOINT s) t) = ((s INTER t) = EMPTY))))
T c= cDISJOINT f0 f1 c= * * part cINTER f0 f1 part cEMPTY
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_mul
A |- (!c. (!x. (((% c) x) = (lambdai. ((real_mul c) (x $ i))))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
D vec
A |- (!n. ((vec n) = (lambdai. (real_of_num n))))
T c= cvec f0 clambda / creal_of_num f0
D AFF_GE_EQ_AFFINE_HULL
A |- (!s. (!t. (((aff_ge s) EMPTY) = ((hull affine) s))))
T c= * * part caff_ge f0 part cEMPTY * * part chull part caffine f0
D Fan.fan2
A |- (!E. (!x. (!V. ((fan2 (x , (V , E))) = (~ (x IN V))))))
T c= cfan2 c, f0 c, f1 f2 c~ cIN f0 f1
D Fan.fan7
A |- (!E. (!V. (!x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2))))))))))
T c= cfan7 c, f0 c, f1 f2 ! ! c==> c/\ cIN b0 * * part cUNION f2 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f2 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER b0 b1
D Fan.FAN
A |- (!x. (!V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E))))))))))))
T c= cFAN c, f0 c, f1 f2 c/\ cSUBSET * part cUNIONS f2 f1 c/\ cgraph f2 c/\ cfan1 c, f0 c, f1 f2 c/\ cfan2 c, f0 c, f1 f2 c/\ cfan6 c, f0 c, f1 f2 cfan7 c, f0 c, f1 f2
D Fan.th3
A |- (!x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
D Fan.remark1_fan
A |- (!x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
D Topology.AFF_GE_1_1
A |- (!x. (!v. ((~ (x = v)) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) v)))))))) y))))))))
T c==> c~ c= f0 f1 c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 c% b3 f1 b1
D Planarity.aff_ge1_subset_aff_ge
A |- (!x. (!v. (!u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (collinear (x INSERT (v1 INSERT (u INSERT EMPTY))))) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT (u INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))))
T c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D Planarity.aff_ge_eq_aff_gt_union_aff_ge
A |- (!x. (!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY
D Planarity.AFFINE_HULL_1
A |- (!a. (((hull affine) (a INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5568. (?u. (((SETSPEC GEN%PVAR%5568) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) a)))))))
T c= * * part chull part caffine * * part cINSERT f0 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c= b1 creal_of_num cNUMERAL cBIT1 c_0 c% b1 f0
D Planarity.properties1_inside_fan
A |- (!x. (!u. (!w. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))))))
T c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f1 c% f3 f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D Planarity.properties_inside_collinear_fan
A |- (!x. (!u. (!w. (!a. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY)))))))))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f2 c% f0 f3 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f1 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f2 c% f0 f3 * * part cINSERT f3 part cEMPTY
+ (~ (x = u)), (~ (x = w)), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- ((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1) ==> F)
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f6 cF
- ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F) |- ((((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F)) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
- (~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) |- F
T c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) _2889501) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) _2889501))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
- |- ((!u. (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) = T)
T c= ! c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b1 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 cT
- (graph E) |- ((graph E) = T)
T c==> cgraph f0 c= cgraph f0 cT
+ (!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) |- (((~ (_2889546 = x)) \/ (~ (_2889546 = u))) /\ ((~ (_2889546 = v1)) \/ (~ (_2889546 = u))))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c\/ c~ c= f3 f0 c~ c= f3 f2 c\/ c~ c= f3 f1 c~ c= f3 f2
+ |- ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)
T * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
- ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) |- ((((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) ==> ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)) ==> ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F))
T c==> c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c==> c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) |- ((~ F) ==> F)
T c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c==> c~ cF cF
+ (FAN (x , (V , E))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V) |- ((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V) /\ F)
T c==> cFAN c, f0 c, f1 f2 c==> creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f5 f1 c/\ cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f5 f1 cF
+ ((~ (v1 = w)) /\ (~ (v1 = u))), (((x = u) \/ (x = w)) /\ (x = v1)) |- ((x = w) ==> F)
T c==> c/\ c~ c= f0 f1 c~ c= f0 f2 c==> c/\ c\/ c= f3 f2 c= f3 f1 c= f3 f0 c==> c= f3 f1 cF
+ (fan6 (x , (V , E))), (((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT EMPTY)) = EMPTY), ((u INSERT (w INSERT EMPTY)) IN E) |- ((~ ((((v1 INSERT EMPTY) IN E) \/ (?v. ((v IN V) /\ ((v1 INSERT EMPTY) = (v INSERT EMPTY))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY)))) = (((((u INSERT (w INSERT EMPTY)) IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ ((v1 INSERT EMPTY) IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT EMPTY))))) ==> (~ (fan6 (x , (V , E))))))
T c==> cfan6 c, f0 c, f1 f2 c==> c= * * part cINTER * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c= c~ c==> c\/ cIN * * part cINSERT f5 part cEMPTY f2 c? / c/\ cIN b0 f1 c= * * part cINSERT f5 part cEMPTY * * part cINSERT b0 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY c==> c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cUNION f2 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f1 * * part cINSERT b1 part cEMPTY cIN * * part cINSERT f5 part cEMPTY * * part cUNION f2 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f1 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c~ cfan6 c, f0 c, f1 f2
- (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')), (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- ((~ F) ==> F)
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c~ cF cF
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
- ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) |- ((((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) ==> ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F)) ==> ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F))
T c==> c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c==> c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF
+ |- (((!s. (!t. (((aff_ge s) EMPTY) = ((hull affine) s)))) ==> ((\s. (!t. (((aff_ge s) EMPTY) = ((hull affine) s)))) s)) = ((\s. (!t. (((aff_ge s) EMPTY) = ((hull affine) s)))) s))
T c= c==> ! ! c= * * part caff_ge b0 part cEMPTY * * part chull part caffine b0 * / ! c= * * part caff_ge b0 part cEMPTY * * part chull part caffine b0 f0 * / ! c= * * part caff_ge b0 part cEMPTY * * part chull part caffine b0 f0
- (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V) |- ((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V) = T)
T c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 c= cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 cT
+ (~ (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))), ((((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) ==> F), ((((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) ==> F) |- F
T c==> c~ c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c==> c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 cF c==> c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 cF cF
- ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F), (((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) ==> ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F)) |- (((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) /\ ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F))
T c==> c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c==> c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c/\ c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF
+ |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ |- (((!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) ==> ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t)) = ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t))
T c= c==> ! c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1 * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1
- |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ (x = w), ((~ (v1 = w)) /\ (~ (v1 = u))), (((x = u) \/ (x = w)) /\ (x = v1)) |- F
T c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c~ c= f2 f3 c==> c/\ c\/ c= f0 f3 c= f0 f1 c= f0 f2 cF
+ |- ((\x. (!u. (!w. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))))) x)
T * / ! ! c==> c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b1 c% f0 b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
+ |- (((!V. ((fan2 (x , (V , E))) = (~ (x IN V)))) ==> ((\V. ((fan2 (x , (V , E))) = (~ (x IN V)))) V)) = ((\V. ((fan2 (x , (V , E))) = (~ (x IN V)))) V))
T c= c==> ! c= cfan2 c, f0 c, b0 f1 c~ cIN f0 b0 * / c= cfan2 c, f0 c, b0 f1 c~ cIN f0 b0 f2 * / c= cfan2 c, f0 c, b0 f1 c~ cIN f0 b0 f2
+ (~ (x = u)), (~ (x = v1)), (~ (x = w)), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((~ (collinear (x INSERT (v1 INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY)))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (((~ (collinear (x INSERT (v1 INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY)))))) /\ (~ (fan6 (x , (V , E)))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> cFAN c, f0 c, f4 f5 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f3 f2 c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cfan6 c, f0 c, f4 f5
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (u = u)) ==> (u = u))
T c==> c~ c= f0 f0 c= f0 f0
- |- (((((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) ==> ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)) ==> (((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) ==> ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F))) = (((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) ==> ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)))
T c= c==> c==> c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- (((!y. ((x IN (y INSERT EMPTY)) = (x = y))) ==> ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)) = ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y))
T c= c==> ! c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
+ (x = u), ((~ (v1 = w)) /\ (~ (v1 = u))), (((x = u) \/ (x = w)) /\ (x = v1)) |- (~ (v1 = v1))
T c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c~ c= f2 f1 c==> c/\ c\/ c= f0 f1 c= f0 f3 c= f0 f2 c~ c= f2 f2
+ (~ (x = v1)), (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))), (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) |- (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY)))
T c==> c~ c= f0 f1 c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
+ |- ((\v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) u)
T * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (fan6 (x , (V , E))), (((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT EMPTY)) = EMPTY), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (((((u INSERT (w INSERT EMPTY)) IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ ((v1 INSERT EMPTY) IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT EMPTY))))) ==> (~ (fan6 (x , (V , E)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> cfan6 c, f0 c, f3 f4 c==> c= * * part cINTER * * part cINSERT f5 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f5 c% f6 f2 f1 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f5 c% f6 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> c==> c/\ cIN * * part cINSERT f5 * * part cINSERT f2 part cEMPTY * * part cUNION f4 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f3 * * part cINSERT b1 part cEMPTY cIN * * part cINSERT f1 part cEMPTY * * part cUNION f4 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f3 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f5 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c~ cfan6 c, f0 c, f3 f4
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- |- (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F) = (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')))))
T c= c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((~ (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))))) /\ F)
T c==> c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 cF
+ (~ (x = v1)), (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) |- ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))) ==> (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY))))
T c==> c~ c= f0 f1 c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
+ |- (((% (real_of_num (NUMERAL (BIT1 _0)))) a) = a)
T c= c% creal_of_num cNUMERAL cBIT1 c_0 f0 f0
- |- ((!x''. (((~ (x'' = x)) /\ (~ (x'' = v1))) \/ (~ (x' = u)))) = ((!x'. ((~ (x' = x)) /\ (~ (x' = v1)))) \/ (~ (x' = u))))
T c= ! c\/ c/\ c~ c= b0 f0 c~ c= b0 f1 c~ c= f2 f3 c\/ ! c/\ c~ c= b0 f0 c~ c= b0 f1 c~ c= f2 f3
- |- ((!V. (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) = T)
T c= ! c==> c/\ c~ * b0 f0 * b0 f1 c~ c= f0 f1 cT
- |- (((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v')))))) = T)
T c= c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cT
+ ((~ (v1 = w)) /\ (~ (v1 = u))) |- ((~ (((x = u) \/ (x = w)) /\ (x = v1))) = T)
T c==> c/\ c~ c= f0 f1 c~ c= f0 f2 c= c~ c/\ c\/ c= f3 f2 c= f3 f1 c= f3 f0 cT
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- ((((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = T)
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c= c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 cT
+ (~ (?v'. ((V v') /\ (!x. ((x = v1) = (x = v')))))), (V v1) |- ((~ (?v'. ((V v') /\ (!x. ((x = v1) = (x = v')))))) /\ F)
T c==> c~ c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 c==> * f0 f1 c/\ c~ c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF
+ |- ((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w))) = ((\v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w))))
T c= c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2
- (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) |- (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')
T c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ ((\v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)) v1) |- (((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1) ==> F) = F)
T c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 f3 c= c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 cF cF
+ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))) |- ((((u INSERT (w INSERT EMPTY)) IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ ((v1 INSERT EMPTY) IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT EMPTY)))))
T c==> ! ! c==> c/\ cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f1 * * part cINSERT b1 part cEMPTY cIN * * part cINSERT f5 part cEMPTY * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f1 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY
- |- ((((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F)) ==> (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
- |- ((!v1. (!x. ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u))))) = T)
T c= ! ! c==> ! c~ c/\ c\/ c= b2 b1 c= b2 b0 c= b2 f0 c~ c= b0 f0 cT
- |- ((!v1. (!x. (!w. (!u. (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')))))))) = (!v1. (!x. (!w. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F))))))
T c= ! ! ! ! c==> c/\ ! c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 ! c= caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b4 c\/ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b4 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b4 ! c= c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 ! ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 ! c= caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b4 c\/ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b4 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b4 ! c= c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 cF
+ (V v1) |- ((~ (?v'. ((V v') /\ (!x. ((x = v1) = (x = v')))))) ==> F)
T c==> * f0 f1 c==> c~ c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF
+ |- ((\v. ((~ (x = v)) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) v)))))))) y))))))) v1)
T * / c==> c~ c= f0 b0 c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f0 c% b4 b0 b2 f1
+ |- ((t \/ T) = T)
T c= c\/ f0 cT cT
+ |- (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add (real_of_num (NUMERAL _0))) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (v1 = ((vector_add ((% (real_of_num (NUMERAL _0))) x)) ((% t2) v1))))))
T c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_of_num cNUMERAL c_0 f1 c% b0 f0
+ ((~ (V x)) /\ (V v1)) |- (((~ (V x)) /\ (V v1)) /\ (~ (x = v1)))
T c==> c/\ c~ * f0 f1 * f0 f2 c/\ c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2
- (~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) |- ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) /\ F)
T c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c/\ c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v1 INSERT EMPTY))) (u INSERT EMPTY)), ((DISJOINT (x INSERT (v1 INSERT EMPTY))) (w INSERT EMPTY)) |- ((((DISJOINT (x INSERT (v1 INSERT EMPTY))) (u INSERT EMPTY)) ==> (~ (v1 = u))) ==> (~ (fan6 (x , (V , E)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> cFAN c, f0 c, f3 f4 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f6 c% f5 f2 f1 c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f6 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f6 c% f5 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f6 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f6 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f6 part cEMPTY c~ c= f1 f6 c~ cfan6 c, f0 c, f3 f4
- |- (((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) ==> ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F))
T c==> c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ ((u INSERT (w INSERT EMPTY)) IN E) |- (((u INSERT (w INSERT EMPTY)) IN E) = T)
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cT
+ (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v')))))), (V v1) |- (((x v1) = v1) = (((x v1) = v1) /\ ((x v1) = v1)))
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> * f0 f2 c= c= * f1 f2 f2 c/\ c= * f1 f2 f2 c= * f1 f2 f2
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((~ (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0
- (~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')), ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))), (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- ((~ F) ==> F)
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c==> c~ cF cF
+ ((\u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (v1 = ((% u) x)))) u') |- ((u' = (real_of_num (NUMERAL (BIT1 _0)))) /\ (v1 = ((% u') x)))
T c==> * / c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 f2 c/\ c= f2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% f2 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((v1 IN (GSPEC (\GEN%PVAR%5568. (?u. (((SETSPEC GEN%PVAR%5568) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) x)))))) = (?u. (((\p. (\t. (p /\ (v1 = t)))) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) x))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c= b1 creal_of_num cNUMERAL cBIT1 c_0 c% b1 f1 c? / * * / / c/\ b1 c= f0 b2 c= b0 creal_of_num cNUMERAL cBIT1 c_0 c% b0 f1
+ (~ (x = u)), (~ (x = w)), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((~ (x IN V)) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- ((((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((~ (x IN V)) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))))))) /\ F)
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f6 c==> c/\ cSUBSET * part cUNIONS f4 f3 c/\ cgraph f4 c/\ cfan1 c, f0 c, f3 f4 c/\ c~ cIN f0 f3 c/\ cfan6 c, f0 c, f3 f4 cfan7 c, f0 c, f3 f4 c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cSUBSET * part cUNIONS f4 f3 c/\ cgraph f4 c/\ cfan1 c, f0 c, f3 f4 c/\ c~ cIN f0 f3 c/\ cfan6 c, f0 c, f3 f4 cfan7 c, f0 c, f3 f4 cF
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))) = (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (v1 = ((vector_add ((% (real_of_num (NUMERAL _0))) x)) ((% (real_of_num (NUMERAL (BIT1 _0)))) v1))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_of_num cNUMERAL c_0 f1 c% creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((!x. (!v. ((~ (x = v)) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) v)))))))) y)))))))) ==> ((\x. (!v. ((~ (x = v)) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) v)))))))) y)))))))) x)) = ((\x. (!v. ((~ (x = v)) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) v)))))))) y)))))))) x))
T c= c==> ! ! c==> c~ c= b0 b1 c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b4 b0 c% b5 b1 b3 * / ! c==> c~ c= b0 b1 c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b4 b0 c% b5 b1 b3 f0 * / ! c==> c~ c= b0 b1 c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b4 b0 c% b5 b1 b3 f0
+ (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) |- (((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') ==> F) = F)
T c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c= c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 cF cF
+ (~ (x = u)), (~ (x = w)), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((graph E) /\ ((fan1 (x , (V , E))) /\ ((~ (x IN V)) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- F
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f6 c==> c/\ cgraph f4 c/\ cfan1 c, f0 c, f3 f4 c/\ c~ cIN f0 f3 c/\ cfan6 c, f0 c, f3 f4 cfan7 c, f0 c, f3 f4 c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- (~ ((x v1) = v1)), ((x v1) = v1) |- (((x v1) = v1) /\ (~ ((x v1) = v1)))
T c==> c~ c= * f0 f1 f1 c==> c= * f0 f1 f1 c/\ c= * f0 f1 f1 c~ c= * f0 f1 f1
+ ((~ (v1 = w)) /\ (~ (v1 = u))) |- (((~ (v1 = w)) /\ (~ (v1 = u))) /\ (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))
T c==> c/\ c~ c= f0 f1 c~ c= f0 f2 c/\ c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0
+ (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v')))))) |- (!v'. (((~ (V v')) \/ (((x v') = v1) \/ ((x v') = v'))) /\ ((~ (V v')) \/ ((~ ((x v') = v1)) \/ (~ ((x v') = v'))))))
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 ! c/\ c\/ c~ * f0 b0 c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ * f0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0
- |- ((?v'. (P v')) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (FAN (x , (V , E))), (((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT EMPTY)) = EMPTY), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- ((((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT EMPTY)) = EMPTY) /\ (~ (fan6 (x , (V , E)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> cFAN c, f0 c, f3 f4 c==> c= * * part cINTER * * part cINSERT f5 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f5 c% f6 f2 f1 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f5 c% f6 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c/\ c= * * part cINTER * * part cINSERT f5 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c~ cfan6 c, f0 c, f3 f4
+ |- ((\t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (v1 = ((vector_add ((% t1) x)) ((% t2) v1))))))) (real_of_num (NUMERAL _0)))
T * / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f0 creal_of_num cNUMERAL c_0
+ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))) |- (!e2. ((((u INSERT (w INSERT EMPTY)) IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER e2)))))
T c==> ! ! c==> c/\ cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 ! c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f1 * * part cINSERT b2 part cEMPTY cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0
+ (~ (x = v1)) |- (((u' = (real_of_num (NUMERAL (BIT1 _0)))) /\ (v1 = ((% u') x))) ==> F)
T c==> c~ c= f0 f1 c==> c/\ c= f2 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% f2 f0 cF
+ |- ((\a. (((hull affine) (a INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5568. (?u. (((SETSPEC GEN%PVAR%5568) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) a))))))) a)
T * / c= * * part chull part caffine * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c= b2 creal_of_num cNUMERAL cBIT1 c_0 c% b2 b0 f0
+ |- (((~ (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) ==> F) = (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')))
T c= c==> c~ c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 cF c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3
+ ((\x. (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v'))))))) x) |- (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v'))))))
T c==> * / ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1 f2 ! c\/ c~ * f0 b0 c/\ c\/ c= * f2 b0 f1 c= * f2 b0 b0 c\/ c~ c= * f2 b0 f1 c~ c= * f2 b0 b0
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (v1 = ((vector_add ((% (real_of_num (NUMERAL _0))) x)) ((% (real_of_num (NUMERAL (BIT1 _0)))) v1))))) = ((\t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add (real_of_num (NUMERAL _0))) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (v1 = ((vector_add ((% (real_of_num (NUMERAL _0))) x)) ((% t2) v1)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_of_num cNUMERAL c_0 f1 c% creal_of_num cNUMERAL cBIT1 c_0 f0 * / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_of_num cNUMERAL c_0 f1 c% b0 f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) |- (((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) /\ ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F))
T c==> c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c/\ c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF
+ |- (((!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) ==> ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) w)) = ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) w))
T c= c==> ! ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f3 * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f3
+ (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v')))))), (V v1) |- F
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> * f0 f2 cF
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))), (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x'))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
- ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) |- (((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) /\ ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F))
T c==> c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c/\ c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF
+ (~ (x = u)), (~ (x = v1)), (~ (x = w)), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))))))) ==> (~ (fan6 (x , (V , E)))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f3 f2 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f6 c/\ creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f3 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f3 * * part cINSERT f3 part cEMPTY c~ cfan6 c, f0 c, f4 f5
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((~ (v1 = w)) /\ (~ (v1 = u))), (((x = u) \/ (x = w)) /\ (x = v1)) |- ((((x = u) \/ (x = w)) /\ (x = v1)) /\ F)
T c==> c/\ c~ c= f0 f1 c~ c= f0 f2 c==> c/\ c\/ c= f3 f2 c= f3 f1 c= f3 f0 c/\ c/\ c\/ c= f3 f2 c= f3 f1 c= f3 f0 cF
+ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))) |- ((\e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))) (u INSERT (w INSERT EMPTY)))
T c==> ! ! c==> c/\ cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 * / ! c==> c/\ cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v')))))) |- (((x _2889506) = _2889506) \/ ((~ (V _2889506)) \/ ((x _2889506) = v1)))
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c\/ c= * f1 f3 f3 c\/ c~ * f0 f3 c= * f1 f3 f2
+ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))), (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) |- ((((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) ==> (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY)))) = ((((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)))) ==> (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY)))))
T c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c= c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY c==> c==> c/\ cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
+ (v1 = u) |- (((~ (_2889546 = v1)) \/ (~ (_2889546 = u))) = ((~ (_2889546 = u)) \/ (~ (_2889546 = u))))
T c==> c= f0 f1 c= c\/ c~ c= f2 f0 c~ c= f2 f1 c\/ c~ c= f2 f1 c~ c= f2 f1
+ |- (((!x. (!V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))))))))))) ==> ((\x. (!V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))))))))))) x)) = ((\x. (!V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))))))))))) x))
T c= c==> ! ! ! c= cFAN c, b0 c, b1 b2 c/\ cSUBSET * part cUNIONS b2 b1 c/\ cgraph b2 c/\ cfan1 c, b0 c, b1 b2 c/\ cfan2 c, b0 c, b1 b2 c/\ cfan6 c, b0 c, b1 b2 cfan7 c, b0 c, b1 b2 * / ! ! c= cFAN c, b0 c, b1 b2 c/\ cSUBSET * part cUNIONS b2 b1 c/\ cgraph b2 c/\ cfan1 c, b0 c, b1 b2 c/\ cfan2 c, b0 c, b1 b2 c/\ cfan6 c, b0 c, b1 b2 cfan7 c, b0 c, b1 b2 f0 * / ! ! c= cFAN c, b0 c, b1 b2 c/\ cSUBSET * part cUNIONS b2 b1 c/\ cgraph b2 c/\ cfan1 c, b0 c, b1 b2 c/\ cfan2 c, b0 c, b1 b2 c/\ cfan6 c, b0 c, b1 b2 cfan7 c, b0 c, b1 b2 f0
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ (FAN (x , (V , E))), (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0))))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E) |- (~ (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c~ cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f5 f1
- |- (((!x. (((\v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)) x) ==> (?v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)))) ==> ((?v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)) ==> (?v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)))) = ((?v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)) ==> (?v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1))))
T c= c==> ! c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b1 b0 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b1 c==> c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 c==> c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0
+ (~ (?v'. ((V v') /\ (!x. ((x = v1) = (x = v')))))), (V v1) |- F
T c==> c~ c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 c==> * f0 f1 cF
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- ((!x'. ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) \/ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((~ (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) /\ (!x'. ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) \/ ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c/\ ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 c/\ ! c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0
- |- ((\x. (!w. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F)))) x)
T * / ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 ! c= caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b3 c\/ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b3 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 ! c= c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 cF f1
- |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
- (!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))), (v1 = u) |- ((~ F) ==> F)
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c==> c= f1 f2 c==> c~ cF cF
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (A $ i))) $ i) = (A $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (real_of_num (NUMERAL (BIT1 _0)))) A) $ i) = (A $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f1 b0 f0 c$ f1 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_of_num cNUMERAL cBIT1 c_0 f1 f0 c$ f1 f0
+ (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- (((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x'))
T c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c= c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f3
+ (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) |- (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')
T c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) |- (((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))) ==> (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 f1 c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 * * part cINSERT f2 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
- |- ((((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) ==> ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)) ==> (((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) ==> ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)))
T c==> c==> c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF
- |- ((\v1. (!V. ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F))) v1)
T * / ! c==> c~ c==> * b1 b0 c? / c/\ * b1 b2 ! c= c= b3 b0 c= b3 b2 cF f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))) ==> ((\x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))) x)) = ((\x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))) x))
T c= c==> ! c= cfan7 c, b0 c, f0 f1 ! ! c==> c/\ cIN b1 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY cIN b2 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b0 part cEMPTY b1 * * part caff_ge * * part cINSERT b0 part cEMPTY b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINTER b1 b2 * / c= cfan7 c, b0 c, f0 f1 ! ! c==> c/\ cIN b1 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY cIN b2 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b0 part cEMPTY b1 * * part caff_ge * * part cINSERT b0 part cEMPTY b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINTER b1 b2 f2 * / c= cfan7 c, b0 c, f0 f1 ! ! c==> c/\ cIN b1 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY cIN b2 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b0 part cEMPTY b1 * * part caff_ge * * part cINSERT b0 part cEMPTY b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINTER b1 b2 f2
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ ((~ (v1 = w)) /\ (~ (v1 = u))) |- ((((x = u) \/ (x = w)) /\ (x = v1)) ==> F)
T c==> c/\ c~ c= f0 f1 c~ c= f0 f2 c==> c/\ c\/ c= f3 f2 c= f3 f1 c= f3 f0 cF
+ ((~ (v1 = w)) /\ (~ (v1 = u))), (((x = u) \/ (x = w)) /\ (x = v1)) |- ((x = u) ==> F)
T c==> c/\ c~ c= f0 f1 c~ c= f0 f2 c==> c/\ c\/ c= f3 f2 c= f3 f1 c= f3 f0 c==> c= f3 f2 cF
+ |- ((~ (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((~ (x IN V)) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E))))))))) = ((FAN (x , (V , E))) ==> F))
T c= c~ c/\ cSUBSET * part cUNIONS f0 f1 c/\ cgraph f0 c/\ cfan1 c, f2 c, f1 f0 c/\ c~ cIN f2 f1 c/\ cfan6 c, f2 c, f1 f0 cfan7 c, f2 c, f1 f0 c==> cFAN c, f2 c, f1 f0 cF
+ |- ((\x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))) x)
T * / c= cfan7 c, b0 c, f0 f1 ! ! c==> c/\ cIN b1 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY cIN b2 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b0 part cEMPTY b1 * * part caff_ge * * part cINSERT b0 part cEMPTY b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINTER b1 b2 f2
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))), (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- (((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c= c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4
+ |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((u = u) = ((u = u) /\ (u = u)))
T c= c= f0 f0 c/\ c= f0 f0 c= f0 f0
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), (v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))) ==> (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 f1 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY c==> c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
+ (FAN (x , (V , E))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E) |- ((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V) ==> F)
T c==> cFAN c, f0 c, f1 f2 c==> creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f5 f1 cF
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))), (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4
- |- (((!v1. (!V. ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F))) ==> ((\v1. (!V. ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F))) v1)) = ((\v1. (!V. ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F))) v1))
T c= c==> ! ! c==> c~ c==> * b1 b0 c? / c/\ * b1 b2 ! c= c= b3 b0 c= b3 b2 cF * / ! c==> c~ c==> * b1 b0 c? / c/\ * b1 b2 ! c= c= b3 b0 c= b3 b2 cF f0 * / ! c==> c~ c==> * b1 b0 c? / c/\ * b1 b2 ! c= c= b3 b0 c= b3 b2 cF f0
+ |- (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (v1 = ((vector_add ((% (real_of_num (NUMERAL _0))) x)) ((% (real_of_num (NUMERAL (BIT1 _0)))) v1)))))
T c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_of_num cNUMERAL c_0 f1 c% creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((\t. (((aff_ge s) EMPTY) = ((hull affine) s))) t)
T * / c= * * part caff_ge f0 part cEMPTY * * part chull part caffine f0 f1
- |- ((!e2. t) = t)
T c= ! f0 f0
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- (((!x'. ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) \/ ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))) ==> ((\x'. ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) \/ ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))) _2889505)) = ((\x'. ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) \/ ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))) _2889505))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c= c==> ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 * / c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 f4 * / c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 f4
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- (((u INSERT (w INSERT EMPTY)) IN (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN E) \/ (?v. ((v IN V) /\ (x = (v INSERT EMPTY)))))) x))))) = (((u INSERT (w INSERT EMPTY)) IN E) \/ (?v. ((v IN V) /\ ((u INSERT (w INSERT EMPTY)) = (v INSERT EMPTY))))))
T c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c\/ cIN b1 f2 c? / c/\ cIN b2 f3 c= b1 * * part cINSERT b2 part cEMPTY b1 c\/ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c? / c/\ cIN b0 f3 c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY
+ (x = w), (((x = u) \/ (x = w)) /\ (x = v1)) |- (w = v1)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c= f0 f3 c= f1 f3
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))), (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- ((((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ F)
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c/\ c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 cF
+ |- ((((FAN (x , (V , E))) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0))))))) ==> (~ (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V))) = T)
T c= c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 f5 creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c~ cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f3 c% f5 f4 f1 cT
+ |- ((\v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))
T * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2
+ |- (((!t. (((aff_ge s) EMPTY) = ((hull affine) s))) ==> ((\t. (((aff_ge s) EMPTY) = ((hull affine) s))) t)) = ((\t. (((aff_ge s) EMPTY) = ((hull affine) s))) t))
T c= c==> ! c= * * part caff_ge f0 part cEMPTY * * part chull part caffine f0 * / c= * * part caff_ge f0 part cEMPTY * * part chull part caffine f0 f1 * / c= * * part caff_ge f0 part cEMPTY * * part chull part caffine f0 f1
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (((v1 IN V) ==> (?v'. ((v' IN V) /\ ((v1 INSERT EMPTY) = (v' INSERT EMPTY))))) ==> (~ ((((v1 INSERT EMPTY) IN E) \/ (?v. ((v IN V) /\ ((v1 INSERT EMPTY) = (v INSERT EMPTY))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 f1 c==> creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY c==> c==> cIN f1 f5 c? / c/\ cIN b0 f5 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c~ c==> c\/ cIN * * part cINSERT f1 part cEMPTY f6 c? / c/\ cIN b0 f5 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
+ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')), (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- F
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 cF
+ |- ((((!x'. ((x' IN ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY)))) ==> (x' IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) /\ (!x'. ((x' IN ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY)))) = (x' IN (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))))) ==> (!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)))) = (x' IN ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)))))) = (((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)))))
T c= c==> c/\ ! c==> cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY ! c= cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY ! c= cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c/\ cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY
- (x = v1) |- ((V v1) = (V v1))
T c==> c= f0 f1 c= * f2 f1 * f2 f1
+ |- (((% (real_of_num (NUMERAL _0))) a) = (vec (NUMERAL _0)))
T c= c% creal_of_num cNUMERAL c_0 f0 cvec cNUMERAL c_0
+ |- (((((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2))))))))))) ==> (~ (fan6 (x , (V , E))))) = ((FAN (x , (V , E))) ==> (~ (fan6 (x , (V , E))))))
T c= c==> c/\ cSUBSET * part cUNIONS f0 f1 c/\ cgraph f0 c/\ cfan1 c, f2 c, f1 f0 c/\ cfan2 c, f2 c, f1 f0 c/\ cfan6 c, f2 c, f1 f0 ! ! c==> c/\ cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 c~ cfan6 c, f2 c, f1 f0 c==> cFAN c, f2 c, f1 f0 c~ cfan6 c, f2 c, f1 f0
- (((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) ==> ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)) |- ((((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) ==> ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)) /\ (((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) ==> ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)))
T c==> c==> c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c/\ c==> c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((!x''. ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) \/ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x''))) = ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) \/ (!x'. (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))))
T c= ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0
+ |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V) |- ((v1 IN V) = T)
T c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f4 c= cIN f3 f4 cT
+ (v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) |- ((v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) = T)
T c==> cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- ((((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) ==> ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)) = ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F))
T c= c==> c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF
- (x = u), (((x = u) \/ (x = w)) /\ (x = v1)) |- ((~ (v1 = w)) = (~ (v1 = w)))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c= c~ c= f3 f2 c~ c= f3 f2
- ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F), (((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) ==> ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)) |- ((((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) ==> ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)) /\ ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F))
T c==> c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c==> c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c/\ c==> c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF
+ |- (((!w'. ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w' INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w' INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w' INSERT EMPTY))))))) ==> ((\w'. ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w' INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w' INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w' INSERT EMPTY))))))) w)) = ((\w'. ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w' INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w' INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w' INSERT EMPTY))))))) w))
T c= c==> ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY f3 * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY f3
- |- ((((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) ==> ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)) = ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F))
T c= c==> c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF
+ (V v1) |- ((((\x. (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v'))))))) x) ==> F) = T)
T c==> * f0 f1 c= c==> * / ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1 f2 cF cT
+ |- (?v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1))
T c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0
- |- (((!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) ==> ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)) = ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x))
T c= c==> ! ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
- |- ((!v1. (!w. (!u. (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))))) = (!v1. (!w. (!u. ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)))))
T c= ! ! ! c==> c/\ c~ c= b0 b1 c~ c= b0 b2 ! c~ c/\ c\/ c= b3 b2 c= b3 b1 c= b3 b0 ! ! ! c==> c~ c==> c/\ c~ c= b0 b1 c~ c= b0 b2 ! c~ c/\ c\/ c= b3 b2 c= b3 b1 c= b3 b0 cF
- |- ((\v1. (!x. (!w. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F))))) v1)
T * / ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 ! c= caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b4 c\/ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b4 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b4 ! c= c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 cF f0
+ (~ (x = v1)) |- ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (v1 = ((% u) x)))) ==> F)
T c==> c~ c= f0 f1 c==> c? / c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% b0 f0 cF
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- ((!x''. ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) \/ ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x'') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x''))))) = ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) \/ (!x'. ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))))
T c= ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) _2889500) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) _2889500)))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?u. t) = t)
T c= c? / f0 f0
- (u IN V) |- ((u IN V) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
+ (~ (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))), ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- ((~ (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ F)
T c==> c~ c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c/\ c~ c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 cF
- (x = w) |- ((~ (v1 = u)) = (~ (v1 = u)))
T c==> c= f0 f1 c= c~ c= f2 f3 c~ c= f2 f3
- (v1 = u) |- (((~ (_2889546 = x)) \/ (~ (_2889546 = u))) = ((~ (_2889546 = x)) \/ (~ (_2889546 = u))))
T c==> c= f0 f1 c= c\/ c~ c= f2 f3 c~ c= f2 f1 c\/ c~ c= f2 f3 c~ c= f2 f1
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c/\ c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (A $ i))) $ i) = (A $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f1 b0 f0 c$ f1 f0
+ |- ((\x. (!V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))))))))))) x)
T * / ! ! c= cFAN c, b0 c, b1 b2 c/\ cSUBSET * part cUNIONS b2 b1 c/\ cgraph b2 c/\ cfan1 c, b0 c, b1 b2 c/\ cfan2 c, b0 c, b1 b2 c/\ cfan6 c, b0 c, b1 b2 cfan7 c, b0 c, b1 b2 f0
- (~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) |- F
T c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF
+ |- ((\s. (!t. (((aff_ge s) EMPTY) = ((hull affine) s)))) s)
T * / ! c= * * part caff_ge b0 part cEMPTY * * part chull part caffine b0 f0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- |- ((!u. (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) = T)
T c= ! c==> c/\ c~ c= f0 f1 c~ c= f0 b0 ! c~ c/\ c\/ c= b1 b0 c= b1 f1 c= b1 f0 cT
+ |- ((\u'. (!v1. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY))) /\ ((~ (collinear (x INSERT (v1 INSERT (u' INSERT EMPTY))))) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT (u' INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY))))))) w)
T * / ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
+ (~ (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))), ((((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) ==> F) |- F
T c==> c~ c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c==> c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 cF cF
+ (V v1) |- (((!x. (((\x. (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v'))))))) x) ==> F)) ==> ((?x. (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v'))))))) ==> F)) = ((?x. (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v'))))))) ==> F))
T c==> * f0 f1 c= c==> ! c==> * / ! c\/ c~ * f0 b1 c/\ c\/ c= * b1 b1 f1 c= * b1 b1 b1 c\/ c~ c= * b1 b1 f1 c~ c= * b1 b1 b1 b0 cF c==> c? / ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1 cF c==> c? / ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (T = (((~ (V _2889506)) \/ (((x _2889506) = v1) \/ ((x _2889506) = _2889506))) = (((x _2889506) = _2889506) \/ ((~ (V _2889506)) \/ ((x _2889506) = v1)))))
T c= cT c= c\/ c~ * f0 f1 c\/ c= * f2 f1 f3 c= * f2 f1 f1 c\/ c= * f2 f1 f1 c\/ c~ * f0 f1 c= * f2 f1 f3
+ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) |- ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) = T)
T c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c= cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY cT
+ (FAN (x , (V , E))), ((FAN (x , (V , E))) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0))))))) |- (~ (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 f5 creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c~ cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f3 c% f5 f4 f1
+ (!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))), (v1 = u) |- (((_2889546 = u) /\ (_2889546 = u)) ==> F)
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c==> c= f1 f2 c==> c/\ c= f3 f2 c= f3 f2 cF
+ |- ((\x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))) x)
T * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
- |- ((!v1. (!x. (!V. (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))))) = (!v1. (!x. (!V. ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)))))
T c= ! ! ! c==> c/\ c~ * b2 b1 * b2 b0 c~ c= b1 b0 ! ! ! c==> c~ c==> c/\ c~ * b2 b1 * b2 b0 c~ c= b1 b0 cF
- |- (((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u))) = T)
T c= c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (x = u)), (~ (x = w)), (FAN (x , (V , E))), ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- F
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFAN c, f0 c, f3 f4 c==> c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v')))))), (V v1) |- ((x v1) = v1)
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> * f0 f2 c= * f1 f2 f2
+ (~ (x = u)), (~ (x = w)), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (!v1. (((\v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)) v1) ==> F))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 b1 b0 cF
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- ((\v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)) v1) |- (((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1) ==> (?v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1))) = (?v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)))
T c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 f3 c= c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0
+ |- ((\x. (!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))))))) x)
T * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY f0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- |- ((!x''. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((~ (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x'')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'')) /\ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'')))))) = ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ (!x'. ((~ (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))))
T c= ! c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c/\ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0
+ (x = v1), ((~ (V x)) /\ (V v1)) |- (~ (V v1))
T c==> c= f0 f1 c==> c/\ c~ * f2 f0 * f2 f1 c~ * f2 f1
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (real_of_num (NUMERAL (BIT1 _0)))) A) $ i) = (A $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_of_num cNUMERAL cBIT1 c_0 f1 f0 c$ f1 f0
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (v1 = u)), (~ (v1 = w)), (~ (x = v1)), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- ((~ (v1 = w)) /\ (~ (fan6 (x , (V , E)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f3 c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> cFAN c, f0 c, f4 f5 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f3 c% f6 f2 f1 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f5 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f3 c% f6 f2 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c/\ c~ c= f1 f2 c~ cfan6 c, f0 c, f4 f5
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (v1 = u)), (~ (v1 = w)), (~ (x = v1)), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- ((((~ (v1 = w)) /\ (~ (v1 = u))) ==> (((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT EMPTY)) = EMPTY)) ==> (~ (fan6 (x , (V , E)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f3 c==> c~ c= f1 f2 c==> c~ c= f0 f1 c==> cFAN c, f0 c, f4 f5 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f3 c% f6 f2 f1 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f5 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f3 c% f6 f2 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c==> c/\ c~ c= f1 f2 c~ c= f1 f3 c= * * part cINTER * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c~ cfan6 c, f0 c, f4 f5
+ (FAN (x , (V , E))), (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))) |- (~ (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 f5 creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c~ cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f3 c% f5 f4 f1
+ (~ (x = u)), (~ (x = w)), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (~ (x IN V)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- F
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ cIN f0 f3 c==> cFAN c, f0 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f6 c==> c/\ cfan6 c, f0 c, f3 f4 cfan7 c, f0 c, f3 f4 c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- (!x'. ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) \/ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0
- ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F) |- (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F) /\ ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c/\ c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
- |- ((((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) ==> ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)) ==> (((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) ==> ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)))
T c==> c==> c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF
+ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) |- ((((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- (x = w) |- ((~ (v1 = w)) = (~ (v1 = w)))
T c==> c= f0 f1 c= c~ c= f2 f1 c~ c= f2 f1
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((((~ (x = v1)) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) v1)))))))) y)))))) ==> (v1 IN ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)))) = (v1 IN ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))))
T c= c==> c==> c~ c= f0 f1 c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 c% b3 f1 b1 cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ |- (((((~ (v1 = w)) /\ (~ (v1 = u))) ==> (((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT EMPTY)) = EMPTY)) ==> (~ (fan6 (x , (V , E))))) = (~ (fan6 (x , (V , E)))))
T c= c==> c==> c/\ c~ c= f0 f1 c~ c= f0 f2 c= * * part cINTER * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY part cEMPTY c~ cfan6 c, f3 c, f4 f5 c~ cfan6 c, f3 c, f4 f5
+ |- ((\w'. ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w' INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w' INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w' INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w' INSERT EMPTY))))))) w)
T * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY f3
- |- ((\w. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F))) w)
T * / ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b2 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b2 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 cF f2
+ (FAN (x , (V , E))), ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V) |- F
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cIN f3 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f3 c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f2 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f4 c% f5 f3 f1 cF
+ (~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) |- ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') ==> F)
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- (~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) |- F
T c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF
- |- ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)
T * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ |- ((((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))) ==> (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY)))) = (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY))))
T c= c==> c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
+ (~ (x = u)), (~ (x = v1)), (~ (x = w)), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- ((~ (x = v1)) /\ (~ (fan6 (x , (V , E)))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f4 f5 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f3 f2 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f2 c~ cfan6 c, f0 c, f4 f5
- |- ((!v''. ((~ (V v'')) \/ (?x. (((x = v1) \/ (x = v')) /\ ((~ (x = v1)) \/ (~ (x = v'))))))) = ((!v'. (~ (V v'))) \/ (?x. (((x = v1) \/ (x = v')) /\ ((~ (x = v1)) \/ (~ (x = v')))))))
T c= ! c\/ c~ * f0 b0 c? / c/\ c\/ c= b1 f1 c= b1 f2 c\/ c~ c= b1 f1 c~ c= b1 f2 c\/ ! c~ * f0 b0 c? / c/\ c\/ c= b0 f1 c= b0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2
+ |- (((((DISJOINT (x INSERT (v1 INSERT EMPTY))) (u INSERT EMPTY)) ==> (~ (v1 = u))) ==> (~ (fan6 (x , (V , E))))) = (~ (fan6 (x , (V , E)))))
T c= c==> c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c~ c= f1 f2 c~ cfan6 c, f0 c, f3 f4 c~ cfan6 c, f0 c, f3 f4
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1) |- ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) ==> (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 f1 c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
- (~ F), (~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')), ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))), (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c/\ c~ cF cF
- |- ((\v1. (!x. ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F))) v1)
T * / ! c==> c~ c==> ! c~ c/\ c\/ c= b2 b1 c= b2 b0 c= b2 f0 c~ c= b0 f0 cF f1
+ (x = w), (((x = u) \/ (x = w)) /\ (x = v1)) |- ((~ (v1 = w)) = (~ (v1 = v1)))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c= f0 f3 c= c~ c= f3 f1 c~ c= f3 f3
+ |- ((((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1))))) = (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. ((x IN ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT EMPTY))) = (x IN EMPTY)))))
T c= c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c= cIN b0 * * part cINTER * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY cIN b0 part cEMPTY
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- |- (((!v1. (!x. (!w. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F))))) ==> ((\v1. (!x. (!w. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F))))) v1)) = ((\v1. (!x. (!w. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F))))) v1))
T c= c==> ! ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 ! c= caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b4 c\/ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b4 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b4 ! c= c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 cF * / ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 ! c= caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b4 c\/ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b4 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b4 ! c= c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 cF f0 * / ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 ! c= caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b4 c\/ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b4 c\/ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b4 ! c= c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 cF f0
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v1 INSERT EMPTY))) (w INSERT EMPTY)) |- ((~ (v1 = u)) ==> (~ (fan6 (x , (V , E)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> cFAN c, f0 c, f3 f4 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f6 c% f5 f2 f1 c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f6 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f6 c% f5 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f6 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f6 c~ cfan6 c, f0 c, f3 f4
- |- ((?x'. (((x = v1) \/ (x = v')) /\ ((~ (x' = v1)) \/ (~ (x' = v'))))) = (((x = v1) \/ (x = v')) /\ (?x. ((~ (x = v1)) \/ (~ (x = v'))))))
T c= c? / c/\ c\/ c= f0 f1 c= f0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2 c/\ c\/ c= f0 f1 c= f0 f2 c? / c\/ c~ c= b0 f1 c~ c= b0 f2
+ (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v')))))), (V v1) |- ((((V v1) /\ (((x v1) = v1) /\ ((x v1) = v1))) ==> F) = F)
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> * f0 f2 c= c==> c/\ * f0 f2 c/\ c= * f1 f2 f2 c= * f1 f2 f2 cF cF
- |- (T = (((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) _2889500)) \/ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) _2889500)) = ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) _2889500) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) _2889500)))))
T c= cT c= c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f3 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ |- (((!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) ==> ((\v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) u)) = ((\v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge v) V) E))) /\ (((v INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) u))
T c= c==> ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4 * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4
- |- ((_2889507 = _2889508) ==> ((V _2889508) \/ (~ (V _2889507))))
T c==> c= f0 f1 c\/ * f2 f1 c~ * f2 f0
+ |- (((!a. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY)))))))) ==> ((\a. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY)))))))) a)) = ((\a. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY)))))))) a))
T c= c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 * * part cINSERT f2 part cEMPTY * / c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 * * part cINSERT f2 part cEMPTY f3 * / c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 * * part cINSERT f2 part cEMPTY f3
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT EMPTY)) = EMPTY), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2))))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (~ (fan6 (x , (V , E))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c= * * part cINTER * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f3 c% f4 f2 f1 c==> c/\ cSUBSET * part cUNIONS f5 f6 c/\ cgraph f5 c/\ cfan1 c, f0 c, f6 f5 c/\ cfan2 c, f0 c, f6 f5 c/\ cfan6 c, f0 c, f6 f5 ! ! c==> c/\ cIN b0 * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f6 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f6 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER b0 b1 c==> creal_lt f4 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f4 c==> cIN * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f5 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f3 c% f4 f2 f6 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c~ cfan6 c, f0 c, f6 f5
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')))) = (((!x'. ((x' IN ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY)))) ==> (x' IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) /\ (!x'. ((x' IN ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY)))) = (x' IN (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))))) ==> (!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)))) = (x' IN ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)))))))
T c= c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c==> c/\ ! c==> cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY ! c= cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY ! c= cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ |- ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT f3 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY
- |- ((\V. ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F)) V)
T * / c==> c~ c==> * b0 f0 c? / c/\ * b0 b1 ! c= c= b2 f0 c= b2 b1 cF f1
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) ==> ((~ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 c/\ c~ c= f0 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY
+ (~ (x = v1)), (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) EMPTY)), (v1 IN ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) |- F
T c==> c~ c= f0 f1 c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cF
- |- ((!v'. ((P v') \/ Q)) = ((!v'. (P v')) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- |- (((!w. (!u. ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F))) ==> ((\w. (!u. ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F))) w)) = ((\w. (!u. ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F))) w))
T c= c==> ! ! c==> c~ c==> c/\ c~ c= f0 b0 c~ c= f0 b1 ! c~ c/\ c\/ c= b2 b1 c= b2 b0 c= b2 f0 cF * / ! c==> c~ c==> c/\ c~ c= f0 b0 c~ c= f0 b1 ! c~ c/\ c\/ c= b2 b1 c= b2 b0 c= b2 f0 cF f1 * / ! c==> c~ c==> c/\ c~ c= f0 b0 c~ c= f0 b1 ! c~ c/\ c\/ c= b2 b1 c= b2 b0 c= b2 f0 cF f1
+ (~ (x = u)), (~ (x = w)), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- ((((\v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)) v1) ==> F) = T)
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 b0 f6 cF cT
- (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v')))))), (V v1) |- ((~ F) ==> F)
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> * f0 f2 c==> c~ cF cF
- (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1) |- ((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1) /\ (?v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)))
T c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 c/\ c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0
+ (~ (x = u)), (~ (x = w)), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- F
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- (((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) = (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1))))))
T c= c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0
+ (~ (x = v1)), ((\u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (v1 = ((% u) x)))) u') |- (((\u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (v1 = ((% u) x)))) u') /\ F)
T c==> c~ c= f0 f1 c==> * / c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% b0 f0 f2 c/\ * / c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% b0 f0 f2 cF
+ (~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')), ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))), (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) /\ F)
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (V v1) |- ((!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v')))))) ==> F)
T c==> * f0 f1 c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f2 b0 f1 c= * f2 b0 b0 c\/ c~ c= * f2 b0 f1 c~ c= * f2 b0 b0 cF
- ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F), (((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) ==> ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)) |- (((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) /\ ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F))
T c==> c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c==> c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c/\ c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!w. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F))) ==> ((\w. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F))) w)) = ((\w. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F))) w))
T c= c==> ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b2 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b2 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 cF * / ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b2 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b2 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 cF f2 * / ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b2 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b2 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 cF f2
+ (~ (x = u)), (~ (x = w)), (FAN (x , (V , E))), (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- F
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFAN c, f0 c, f3 f4 c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 f1 c==> creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
- |- ((((~ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (A $ i)) = (A $ i))) ==> F) ==> (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (A $ i)) = (A $ i))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (A $ i)) = (A $ i)))
T c= c==> c==> c~ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1 cF c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F)) u)
T * / c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b1 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 cF f3
- |- (((!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F)) ==> ((\u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F)) u)) = ((\u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F)) u))
T c= c==> ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b1 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 cF * / c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b1 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 cF f3 * / c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b1 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 cF f3
+ |- ((\u. (!w. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))))) u)
T * / ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 c% f1 b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))), (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) ==> F)
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4 cF
- (x = u), (((x = u) \/ (x = w)) /\ (x = v1)) |- (F = F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c= cF cF
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ |- (((v1 = v1) ==> F) = F)
T c= c==> c= f0 f0 cF cF
+ (~ (x = v1)), (u' = (real_of_num (NUMERAL (BIT1 _0)))) |- (T = ((v1 = ((% u') x)) ==> F))
T c==> c~ c= f0 f1 c==> c= f2 creal_of_num cNUMERAL cBIT1 c_0 c= cT c==> c= f1 c% f2 f0 cF
+ |- (((!u'. ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u' INSERT EMPTY))))) ==> ((~ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) /\ ((~ (x = u')) /\ (((DISJOINT (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY))) (u' INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u' INSERT EMPTY))) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u' INSERT EMPTY))) /\ (~ (u' IN (aff (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)))))))))))) ==> ((\u'. ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u' INSERT EMPTY))))) ==> ((~ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) /\ ((~ (x = u')) /\ (((DISJOINT (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY))) (u' INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u' INSERT EMPTY))) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u' INSERT EMPTY))) /\ (~ (u' IN (aff (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)))))))))))) u)) = ((\u'. ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u' INSERT EMPTY))))) ==> ((~ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) /\ ((~ (x = u')) /\ (((DISJOINT (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY))) (u' INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u' INSERT EMPTY))) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u' INSERT EMPTY))) /\ (~ (u' IN (aff (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)))))))))))) u))
T c= c==> ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 c/\ c~ c= f0 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 c/\ c~ c= f0 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY f2 * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 c/\ c~ c= f0 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY f2
+ (~ (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))), ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- F
T c==> c~ c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 cF
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1) |- (((((DISJOINT (x INSERT (v1 INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) /\ (~ (w IN (aff (x INSERT (v1 INSERT EMPTY)))))))) ==> (~ (fan6 (x , (V , E))))) = (((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))))) ==> ((~ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) /\ ((~ (x = w)) /\ (((DISJOINT (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))) /\ (~ (w IN (aff (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY))))))))))) ==> (~ (fan6 (x , (V , E))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 f1 c= c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cfan6 c, f0 c, f5 f6 c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 c/\ c~ c= f0 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 part cEMPTY c~ cfan6 c, f0 c, f5 f6
- ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F), (((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) ==> ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)) |- (((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) /\ ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F))
T c==> c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c==> c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c/\ c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF
- |- ((\v1. (!x. (!V. ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)))) v1)
T * / ! ! c==> c~ c==> c/\ c~ * b2 b1 * b2 b0 c~ c= b1 b0 cF f0
- (~ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (A $ i)) = (A $ i))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (~ (x = v1)) |- (((\u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (v1 = ((% u) x)))) u') ==> F)
T c==> c~ c= f0 f1 c==> * / c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% b0 f0 f2 cF
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) _2889504) \/ (~ (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) _2889504)))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
+ (~ (x = v1)) |- (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) EMPTY)))
T c==> c~ c= f0 f1 c~ c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
+ |- ((((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))) ==> (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY)))) = (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY))))
T c= c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT f3 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT f3 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
- (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')), (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) |- ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2
+ |- ((!x'. (((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((~ (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))) /\ ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) \/ ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) = ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((~ (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) /\ (!x'. ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) \/ ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))))
T c= ! c/\ c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c/\ ! c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0
+ |- ((\x. (!u. (!w. (!a. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))))))))))) x)
T * / ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt b3 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b1 c% b3 b2 * * part cINSERT b1 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b1 c% b3 b2 * * part cINSERT b2 part cEMPTY f0
- |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))))
T c==> c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c\/ creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) _2889500) ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) _2889500))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (A $ i)) = (A $ i)) = (((lambdai. ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (A $ i))) $ i) = (A $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f0 c$ f1 f0 c= c$ clambda / creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f1 b0 f0 c$ f1 f0
+ (FAN (x , (V , E))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V) |- (((FINITE (((set_of_edge u) V) E)) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))))))) ==> F)
T c==> cFAN c, f0 c, f1 f2 c==> creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f5 f1 c==> c/\ cFINITE * * * part cset_of_edge f4 f1 f2 c/\ cIN f5 * * * part cset_of_edge f4 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY cF
- |- ((((\v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)) v1) ==> (?v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1))) = T)
T c= c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 f3 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 cT
+ (~ (x = u)), (~ (x = w)), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- F
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (~ (x = u)), (~ (x = w)), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- ((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1) /\ F)
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f6 c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f6 cF
- |- ((!x''. (((~ (x' = x)) /\ (~ (x' = v1))) \/ (~ (x'' = u)))) = (((~ (x' = x)) /\ (~ (x' = v1))) \/ (!x'. (~ (x' = u)))))
T c= ! c\/ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= b0 f3 c\/ c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c= b0 f3
+ (~ (x = u)), (~ (x = w)), (FAN (x , (V , E))), ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V) |- F
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFAN c, f0 c, f3 f4 c==> c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f3 cF
- |- ((!x. (!V. (((~ (V x)) /\ (V v1)) ==> (~ (x = v1))))) = T)
T c= ! ! c==> c/\ c~ * b1 b0 * b1 f0 c~ c= b0 f0 cT
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- |- (((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) = ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v')))))))
T c= c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0
+ |- (((!v1. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) ==> ((\v1. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) v1)) = ((\v1. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) v1))
T c= c==> ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f2 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * / c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f2 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 * / c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f2 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ (~ (x = v1)) |- ((((\u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (v1 = ((% u) x)))) u') ==> F) = T)
T c==> c~ c= f0 f1 c= c==> * / c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% b0 f0 f2 cF cT
- (~ F), (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c/\ c~ cF cF
- |- ((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1) = ((\v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)) v1))
T c= c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 f3
- |- ((((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) ==> ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F)) = ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F))
T c= c==> c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF
+ |- ((\E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))))))))) E)
T * / c= cFAN c, f0 c, f1 b0 c/\ cSUBSET * part cUNIONS b0 f1 c/\ cgraph b0 c/\ cfan1 c, f0 c, f1 b0 c/\ cfan2 c, f0 c, f1 b0 c/\ cfan6 c, f0 c, f1 b0 cfan7 c, f0 c, f1 b0 f2
+ (~ (collinear (x INSERT (v1 INSERT (u INSERT EMPTY))))), (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = v1)), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), (((DISJOINT (x INSERT (v1 INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) /\ (~ (w IN (aff (x INSERT (v1 INSERT EMPTY)))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (~ (fan6 (x , (V , E))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f0 f1 c==> cFAN c, f0 c, f4 f5 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 c% f6 f3 f1 c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 c% f6 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ cfan6 c, f0 c, f4 f5
+ (~ (?v'. ((V v') /\ (!x. ((x = v1) = (x = v')))))) |- (?x. (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v')))))))
T c==> c~ c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 c? / ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1
- |- ((!w. (!u. (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1))))))) = T)
T c= ! ! c==> c/\ c~ c= f0 b0 c~ c= f0 b1 ! c~ c/\ c\/ c= b2 b1 c= b2 b0 c= b2 f0 cT
- (_2889509 = _2889510) |- ((_2889509 = _2889510) /\ ((x _2889509) = (x _2889510)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * f2 f0 * f2 f1
- |- (((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) = (((~ (V x)) /\ (V v1)) ==> (~ (x = v1))))
T c= c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2
+ (x = w), ((~ (v1 = w)) /\ (~ (v1 = u))), (((x = u) \/ (x = w)) /\ (x = v1)) |- ((x = w) /\ F)
T c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c~ c= f2 f3 c==> c/\ c\/ c= f0 f3 c= f0 f1 c= f0 f2 c/\ c= f0 f1 cF
- (((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) ==> ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)) |- ((((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) ==> ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)) /\ (((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) ==> ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)))
T c==> c==> c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c/\ c==> c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF
+ |- ((((aff_ge (x INSERT EMPTY)) EMPTY) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) v1)))))))) y))))) ==> (v1 IN ((aff_ge (x INSERT EMPTY)) EMPTY)))
T c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 c% b3 f1 b1 cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
+ |- ((((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) ==> ((~ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY))))))))))) ==> (~ (fan6 (x , (V , E))))) = (~ (fan6 (x , (V , E)))))
T c= c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 c/\ c~ c= f0 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY c~ cfan6 c, f0 c, f4 f5 c~ cfan6 c, f0 c, f4 f5
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))), (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4
+ |- (((!s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) ==> ((\s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) s)) = ((\s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) s))
T c= c==> ! ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 * / ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 f0 * / ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 f0
- |- ((x IN (y INSERT EMPTY)) = (x = y))
T c= cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
+ (!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))), (v1 = u) |- ((~ (_2889546 = u)) \/ (~ (_2889546 = u)))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c==> c= f1 f2 c\/ c~ c= f3 f2 c~ c= f3 f2
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- ((((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT EMPTY)) = EMPTY) ==> (~ (fan6 (x , (V , E)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> cFAN c, f0 c, f3 f4 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f6 c% f5 f2 f1 c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f6 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f6 c% f5 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f6 * * part cINSERT f2 part cEMPTY c==> c= * * part cINTER * * part cINSERT f6 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c~ cfan6 c, f0 c, f3 f4
- (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) |- ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))
T c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3
- (x = w), (((x = u) \/ (x = w)) /\ (x = v1)) |- (F = F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c= f0 f3 c= cF cF
+ |- ((\V. ((fan2 (x , (V , E))) = (~ (x IN V)))) V)
T * / c= cfan2 c, f0 c, b0 f1 c~ cIN f0 b0 f2
- |- ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)
T * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) ==> ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)) = ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F))
T c= c==> c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF
+ |- (((!v. (!u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (collinear (x INSERT (v1 INSERT (u INSERT EMPTY))))) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT (u INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))) ==> ((\v. (!u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (collinear (x INSERT (v1 INSERT (u INSERT EMPTY))))) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT (u INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))) u)) = ((\v. (!u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (collinear (x INSERT (v1 INSERT (u INSERT EMPTY))))) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT (u INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))) u))
T c= c==> ! ! ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 * / ! ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
- (((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) ==> ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F)) |- ((((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) ==> ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F)) /\ (((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) ==> ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F)))
T c==> c==> c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c/\ c==> c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF
+ |- (((!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) ==> ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)) = ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V))
T c= c==> ! ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1 * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
+ |- (((!u. (!w. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))))) ==> ((\u. (!w. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))))) u)) = ((\u. (!w. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))))) u))
T c= c==> ! ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 c% f1 b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 c% f1 b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 * / ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 c% f1 b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
+ (~ (x = u)), (~ (x = w)), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- ((FAN (x , (V , E))) ==> F)
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f6 c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFAN c, f0 c, f3 f4 cF
+ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) |- ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) EMPTY))) = (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY))))
T c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY c= c~ c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1) |- (((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))) ==> (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY)))) = (((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))) ==> (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 f1 c= c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 * * part cINSERT f2 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
- (~ (V v1)), ((~ (V x)) /\ (V v1)) |- ((~ (V v1)) /\ (V v1))
T c==> c~ * f0 f1 c==> c/\ c~ * f0 f2 * f0 f1 c/\ c~ * f0 f1 * f0 f1
+ |- (((!u. (!w. (!a. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY)))))))))) ==> ((\u. (!w. (!a. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY)))))))))) u)) = ((\u. (!w. (!a. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY)))))))))) u))
T c= c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt b2 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b0 c% b2 b1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b0 c% b2 b1 * * part cINSERT b1 part cEMPTY * / ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt b2 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b0 c% b2 b1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b0 c% b2 b1 * * part cINSERT b1 part cEMPTY f1 * / ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt b2 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b0 c% b2 b1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b0 c% b2 b1 * * part cINSERT b1 part cEMPTY f1
- |- ((\u. (!v1. (!x. ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)))) u)
T * / ! ! c==> c~ c==> ! c~ c/\ c\/ c= b3 b2 c= b3 b1 c= b3 b0 c~ c= b1 b0 cF f0
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (fan6 (x , (V , E))), (((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT EMPTY)) = EMPTY), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((fan6 (x , (V , E))) /\ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (~ (fan6 (x , (V , E))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> cfan6 c, f0 c, f3 f4 c==> c= * * part cINTER * * part cINSERT f5 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f5 c% f6 f2 f1 c==> c/\ cfan6 c, f0 c, f3 f4 ! ! c==> c/\ cIN b0 * * part cUNION f4 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f3 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f4 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f3 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER b0 b1 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f5 c% f6 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c~ cfan6 c, f0 c, f3 f4
+ |- ((((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge u) V) E)) /\ ((((u INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge u) V) E))) /\ (((u INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))))))))) ==> F) = F)
T c= c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cF cF
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v')))))) |- (((!v'. (((~ (V v')) \/ (((x v') = v1) \/ ((x v') = v'))) /\ ((~ (V v')) \/ ((~ ((x v') = v1)) \/ (~ ((x v') = v')))))) ==> ((\v'. (((~ (V v')) \/ (((x v') = v1) \/ ((x v') = v'))) /\ ((~ (V v')) \/ ((~ ((x v') = v1)) \/ (~ ((x v') = v')))))) _2889506)) = ((\v'. (((~ (V v')) \/ (((x v') = v1) \/ ((x v') = v'))) /\ ((~ (V v')) \/ ((~ ((x v') = v1)) \/ (~ ((x v') = v')))))) _2889506))
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c= c==> ! c/\ c\/ c~ * f0 b0 c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ * f0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 * / c/\ c\/ c~ * f0 b0 c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ * f0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 f3 * / c/\ c\/ c~ * f0 b0 c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ * f0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 f3
+ (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v')))))) |- (((~ (V _2889506)) \/ (((x _2889506) = v1) \/ ((x _2889506) = _2889506))) /\ ((~ (V _2889506)) \/ ((~ ((x _2889506) = v1)) \/ (~ ((x _2889506) = _2889506)))))
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c/\ c\/ c~ * f0 f3 c\/ c= * f1 f3 f2 c= * f1 f3 f3 c\/ c~ * f0 f3 c\/ c~ c= * f1 f3 f2 c~ c= * f1 f3 f3
+ |- ((\x. (!v. (!u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (collinear (x INSERT (v1 INSERT (u INSERT EMPTY))))) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT (u INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))))) x)
T * / ! ! ! c==> c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cIN b3 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
- ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F), (((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) ==> ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)) |- (((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) /\ ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F))
T c==> c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c==> c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c/\ c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF
+ |- (((!x. (!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))))))) ==> ((\x. (!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))))))) x)) = ((\x. (!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))))))) x))
T c= c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY f0 * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY f0
+ (x = v1), ((~ (V x)) /\ (V v1)) |- ((V v1) ==> F)
T c==> c= f0 f1 c==> c/\ c~ * f2 f0 * f2 f1 c==> * f2 f1 cF
- |- ((!u. (!v1. (!x. ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))))) = (!u. (!v1. (!x. ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)))))
T c= ! ! ! c==> ! c~ c/\ c\/ c= b3 b2 c= b3 b1 c= b3 b0 c~ c= b1 b0 ! ! ! c==> c~ c==> ! c~ c/\ c\/ c= b3 b2 c= b3 b1 c= b3 b0 c~ c= b1 b0 cF
+ |- (((~ a) \/ (~ b)) = (~ (a /\ b)))
T c= c\/ c~ f0 c~ f1 c~ c/\ f0 f1
- |- ((\V. ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)) V)
T * / c==> c~ c==> c/\ c~ * b0 f0 * b0 f1 c~ c= f0 f1 cF f2
+ |- ((\x. (!v. ((~ (x = v)) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) v)))))))) y)))))))) x)
T * / ! c==> c~ c= b0 b1 c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b4 b0 c% b5 b1 b3 f0
+ ((((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) ==> F), (((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF c==> c\/ creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((~ (V _2889506)) \/ (((x _2889506) = v1) \/ ((x _2889506) = _2889506))) = (((x _2889506) = _2889506) \/ ((~ (V _2889506)) \/ ((x _2889506) = v1))))
T c= c\/ c~ * f0 f1 c\/ c= * f2 f1 f3 c= * f2 f1 f1 c\/ c= * f2 f1 f1 c\/ c~ * f0 f1 c= * f2 f1 f3
+ (~ (collinear (x INSERT (v1 INSERT (u INSERT EMPTY))))), (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = v1)), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), (((DISJOINT (x INSERT (v1 INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) /\ (~ (w IN (aff (x INSERT (v1 INSERT EMPTY)))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- ((((DISJOINT (x INSERT (v1 INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) /\ (~ (w IN (aff (x INSERT (v1 INSERT EMPTY)))))))) /\ (~ (fan6 (x , (V , E)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f0 f1 c==> cFAN c, f0 c, f4 f5 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 c% f6 f3 f1 c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 c% f6 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cfan6 c, f0 c, f4 f5
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), (v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- ((v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) /\ (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 f1 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY c/\ cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
- (~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) |- F
T c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF
+ (~ (x IN V)) |- ((x IN V) = F)
T c==> c~ cIN f0 f1 c= cIN f0 f1 cF
+ |- (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) |- F
T c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
+ (~ (x = v1)) |- ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) EMPTY)) ==> F)
T c==> c~ c= f0 f1 c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY cF
+ (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V) |- F
T c==> cFAN c, f0 c, f1 f2 c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f3 c% f5 f4 f1 cF
+ (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a) |- ((((~ (collinear (x INSERT (v1 INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY)))))) ==> (~ (fan6 (x , (V , E))))) = (((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))))))) ==> (~ (fan6 (x , (V , E))))))
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f2 c% f3 f0 f4 c==> creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c= c==> c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f0 part cEMPTY c~ cfan6 c, f1 c, f5 f6 c==> c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f3 c/\ creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f2 c% f3 f0 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f1 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f2 c% f3 f0 * * part cINSERT f0 part cEMPTY c~ cfan6 c, f1 c, f5 f6
+ |- (((!E. (!V. (!x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))))) ==> ((\E. (!V. (!x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))))) E)) = ((\E. (!V. (!x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))))) E))
T c= c==> ! ! ! c= cfan7 c, b2 c, b1 b0 ! ! c==> c/\ cIN b3 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY cIN b4 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b2 part cEMPTY b3 * * part caff_ge * * part cINSERT b2 part cEMPTY b4 * * part caff_ge * * part cINSERT b2 part cEMPTY * * part cINTER b3 b4 * / ! ! c= cfan7 c, b2 c, b1 b0 ! ! c==> c/\ cIN b3 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY cIN b4 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b2 part cEMPTY b3 * * part caff_ge * * part cINSERT b2 part cEMPTY b4 * * part caff_ge * * part cINSERT b2 part cEMPTY * * part cINTER b3 b4 f0 * / ! ! c= cfan7 c, b2 c, b1 b0 ! ! c==> c/\ cIN b3 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY cIN b4 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b2 part cEMPTY b3 * * part caff_ge * * part cINSERT b2 part cEMPTY b4 * * part caff_ge * * part cINSERT b2 part cEMPTY * * part cINTER b3 b4 f0
+ |- ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))))) ==> ((~ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) /\ ((~ (x = w)) /\ (((DISJOINT (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))) /\ (~ (w IN (aff (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 c/\ c~ c= f0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY
+ |- ((!v'. (?x. ((~ (V v')) \/ (((x = v1) \/ (x = v')) /\ ((~ (x = v1)) \/ (~ (x = v'))))))) = (?x. (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v'))))))))
T c= ! c? / c\/ c~ * f0 b0 c/\ c\/ c= b1 f1 c= b1 b0 c\/ c~ c= b1 f1 c~ c= b1 b0 c? / ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1
+ |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- (~ F), (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')), (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c/\ c~ cF cF
- |- ((((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F)) = ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F))
T c= c==> c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
+ |- ((((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))) ==> (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY)))) = (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY))))
T c= c==> c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f1 c% f3 f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (A $ i))) $ i) = (A $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f1 b0 f0 c$ f1 f0
- |- ((p ==> (~ p)) = (~ p))
T c= c==> f0 c~ f0 c~ f0
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (FAN (x , (V , E))), (((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT EMPTY)) = EMPTY), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (~ (fan6 (x , (V , E))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> cFAN c, f0 c, f3 f4 c==> c= * * part cINTER * * part cINSERT f5 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f5 c% f6 f2 f1 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f5 c% f6 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c~ cfan6 c, f0 c, f3 f4
+ (~ (collinear (x INSERT (v1 INSERT (u INSERT EMPTY))))), (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = v1)), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v1 INSERT EMPTY))) (w INSERT EMPTY)) |- (~ (fan6 (x , (V , E))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f0 f1 c==> cFAN c, f0 c, f4 f5 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 c% f6 f3 f1 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 c% f6 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c~ cfan6 c, f0 c, f4 f5
- |- ((_2889509 = _2889510) ==> ((x _2889509) = (x _2889510)))
T c==> c= f0 f1 c= * f2 f0 * f2 f1
+ |- (((!a. (((hull affine) (a INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5568. (?u. (((SETSPEC GEN%PVAR%5568) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) a))))))) ==> ((\a. (((hull affine) (a INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5568. (?u. (((SETSPEC GEN%PVAR%5568) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) a))))))) a)) = ((\a. (((hull affine) (a INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5568. (?u. (((SETSPEC GEN%PVAR%5568) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) a))))))) a))
T c= c==> ! c= * * part chull part caffine * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c= b2 creal_of_num cNUMERAL cBIT1 c_0 c% b2 b0 * / c= * * part chull part caffine * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c= b2 creal_of_num cNUMERAL cBIT1 c_0 c% b2 b0 f0 * / c= * * part chull part caffine * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c= b2 creal_of_num cNUMERAL cBIT1 c_0 c% b2 b0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((~ (?v'. ((V v') /\ (!x. ((x = v1) = (x = v')))))) ==> F) = (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))
T c= c==> c~ c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0
- |- ((real_neg ((real_sub ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (A $ i))) (A $ i))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1 creal_of_num cNUMERAL c_0
+ (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')), ((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) ==> F), ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) ==> F) |- F
T c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c==> c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF c==> c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 cF cF
+ (V v1) |- (((\x. (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v'))))))) x) ==> F)
T c==> * f0 f1 c==> * / ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1 f2 cF
+ (~ (collinear (x INSERT (v1 INSERT (u INSERT EMPTY))))), (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = v1)), (~ (x = w)), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))))) ==> ((~ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) /\ ((~ (x = w)) /\ (((DISJOINT (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))) /\ (~ (w IN (aff (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY))))))))))) ==> (~ (fan6 (x , (V , E)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> cFAN c, f0 c, f4 f5 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 c% f6 f3 f1 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 c% f6 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 c% f6 f3 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 c% f6 f3 c/\ c~ c= f0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 c% f6 f3 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 c% f6 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 c% f6 f3 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f2 c% f6 f3 part cEMPTY c~ cfan6 c, f0 c, f4 f5
+ |- (((!x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))) ==> ((\x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))) x)) = ((\x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))) x))
T c= c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (v1 = u)), (~ (x = v1)), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- ((~ (v1 = w)) ==> (~ (fan6 (x , (V , E)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f3 c==> c~ c= f0 f1 c==> cFAN c, f0 c, f4 f5 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f3 c% f6 f2 f1 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f5 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f3 c% f6 f2 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c~ cfan6 c, f0 c, f4 f5
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))), (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4
- |- ((((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1))))) = T)
T c= c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cT
+ (~ (x = u)), (~ (x = v1)), (~ (x = w)), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((~ (collinear (x INSERT (v1 INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY)))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (~ (fan6 (x , (V , E))))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> cFAN c, f0 c, f4 f5 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f3 f2 c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f5 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f3 f4 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ cfan6 c, f0 c, f4 f5
+ |- ((((u = u) /\ (u = u)) ==> F) = F)
T c= c==> c/\ c= f0 f0 c= f0 f0 cF cF
+ (~ (x = v1)) |- (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) ==> (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY))))
T c==> c~ c= f0 f1 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
+ (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V) |- (v1 IN V)
T c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f4 cIN f3 f4
+ |- (((!u'. ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u' INSERT EMPTY))))) ==> ((~ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) /\ ((~ (x = u')) /\ (((DISJOINT (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY))) (u' INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u' INSERT EMPTY))) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u' INSERT EMPTY))) /\ (~ (u' IN (aff (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)))))))))))) ==> ((\u'. ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u' INSERT EMPTY))))) ==> ((~ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) /\ ((~ (x = u')) /\ (((DISJOINT (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY))) (u' INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u' INSERT EMPTY))) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u' INSERT EMPTY))) /\ (~ (u' IN (aff (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)))))))))))) w)) = ((\u'. ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u' INSERT EMPTY))))) ==> ((~ (x = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) /\ ((~ (x = u')) /\ (((DISJOINT (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY))) (u' INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u' INSERT EMPTY))) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u' INSERT EMPTY))) /\ (~ (u' IN (aff (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)))))))))))) w))
T c= c==> ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 c/\ c~ c= f0 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 c/\ c~ c= f0 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY f3 * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 c/\ c~ c= f0 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f3 part cEMPTY f3
+ |- ((!V. (!E. (!u. (!w. (!a. (((FAN (x , (V , E))) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0))))))) ==> (~ (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V)))))))) = T)
T c= ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt b4 creal_of_num cNUMERAL cBIT1 c_0 c~ cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b2 c% b4 b3 b0 cT
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- ((?v'. ((v' IN V) /\ ((v1 INSERT EMPTY) = (v' INSERT EMPTY)))) ==> (~ ((((v1 INSERT EMPTY) IN E) \/ (?v. ((v IN V) /\ ((v1 INSERT EMPTY) = (v INSERT EMPTY))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f2 f1 c==> creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY c==> c? / c/\ cIN b0 f5 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c~ c==> c\/ cIN * * part cINSERT f1 part cEMPTY f6 c? / c/\ cIN b0 f5 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
- (_2889507 = _2889508) |- ((_2889507 = _2889508) /\ ((V _2889508) \/ (~ (V _2889507))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
+ |- ((((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) ==> F)
T c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 cF
- (x = v1) |- (F = F)
T c==> c= f0 f1 c= cF cF
+ ((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- (((!u. (!v1. (!x. ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)))) ==> ((\u. (!v1. (!x. ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)))) u)) = ((\u. (!v1. (!x. ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)))) u))
T c= c==> ! ! ! c==> c~ c==> ! c~ c/\ c\/ c= b3 b2 c= b3 b1 c= b3 b0 c~ c= b1 b0 cF * / ! ! c==> c~ c==> ! c~ c/\ c\/ c= b3 b2 c= b3 b1 c= b3 b0 c~ c= b1 b0 cF f0 * / ! ! c==> c~ c==> ! c~ c/\ c\/ c= b3 b2 c= b3 b1 c= b3 b0 c~ c= b1 b0 cF f0
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- (!x'. (((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ (~ (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x'))) /\ (((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c/\ c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT EMPTY)) = EMPTY), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (~ (fan6 (x , (V , E))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c= * * part cINTER * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f3 c% f4 f2 f1 c==> c/\ cfan1 c, f0 c, f5 f6 c/\ cfan2 c, f0 c, f5 f6 c/\ cfan6 c, f0 c, f5 f6 ! ! c==> c/\ cIN b0 * * part cUNION f6 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f5 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f6 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f5 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER b0 b1 c==> creal_lt f4 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f4 c==> cIN * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f6 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f3 c% f4 f2 f5 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c~ cfan6 c, f0 c, f5 f6
+ (~ (x = u)), (~ (x = w)), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- F
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f6 c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- (?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (v1 = ((% u) x)))), (~ (x = v1)) |- F
T c==> c? / c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c==> c~ c= f1 f0 cF
+ |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))
T c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3
- |- ((!x''. ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x'')) \/ ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))) = ((!x'. (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x'))) \/ ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))
T c= ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f3 c\/ ! c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f3
+ (~ (x = u)), (~ (x = w)), (FAN (x , (V , E))), (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V) |- F
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFAN c, f0 c, f3 f4 c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f3 cF
+ |- ((u = u) /\ (u = u))
T c/\ c= f0 f0 c= f0 f0
+ (~ (x = u)), (~ (x = w)), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((~ (x IN V)) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- F
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f3 f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f6 c==> c/\ cSUBSET * part cUNIONS f4 f3 c/\ cgraph f4 c/\ cfan1 c, f0 c, f3 f4 c/\ c~ cIN f0 f3 c/\ cfan6 c, f0 c, f3 f4 cfan7 c, f0 c, f3 f4 c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ (~ (x = v1)), (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))), (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) |- ((((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) UNION (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) UNION ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)))) ==> (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY))))
T c==> c~ c= f0 f1 c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c==> c/\ cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cUNION * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY
+ (~ (x = u)), (~ (x = w)), (FAN (x , (V , E))), (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V) |- F
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFAN c, f0 c, f3 f4 c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f3 cF
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
+ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))) |- ((\e2. ((((u INSERT (w INSERT EMPTY)) IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER e2))))) (v1 INSERT EMPTY))
T c==> ! ! c==> c/\ cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 * / c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f1 * * part cINSERT b2 part cEMPTY cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * * part cINSERT f5 part cEMPTY
+ (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) |- ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') ==> F)
T c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 cF
+ |- (((vector_add (vec (NUMERAL _0))) a) = a)
T c= cvector_add cvec cNUMERAL c_0 f0 f0
- (w IN (((set_of_edge u) V) E)) |- ((w IN (((set_of_edge u) V) E)) = T)
T c==> cIN f0 * * * part cset_of_edge f1 f2 f3 c= cIN f0 * * * part cset_of_edge f1 f2 f3 cT
+ |- ((v1 IN (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) v1)))))))) y))))) = (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (v1 = ((vector_add ((% t1) x)) ((% t2) v1))))))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f1 c% b3 f0 b1 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (real_of_num (NUMERAL (BIT1 _0)))) A) $ i) = (A $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_of_num cNUMERAL cBIT1 c_0 f1 f0 c$ f1 f0 cT
+ (?v'. ((v' IN V) /\ ((v1 INSERT EMPTY) = (v' INSERT EMPTY)))), (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (~ ((((v1 INSERT EMPTY) IN E) \/ (?v. ((v IN V) /\ ((v1 INSERT EMPTY) = (v INSERT EMPTY))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY))))
T c==> c? / c/\ cIN b0 f0 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f2 f1 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 c% f4 f3 f1 c==> creal_lt f4 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f4 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c~ c==> c\/ cIN * * part cINSERT f1 part cEMPTY f6 c? / c/\ cIN b0 f0 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY part cEMPTY
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ (FAN (x , (V , E))), ((~ (x = u)) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V) |- F
T c==> cFAN c, f0 c, f1 f2 c==> c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f3 c% f5 f4 f1 cF
+ |- ((~ (a \/ b)) = ((~ a) /\ (~ b)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
+ |- ((\v1. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) v1)
T * / c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f2 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- (((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) = ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u))))
T c= c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2
- |- ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)
T * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
+ (~ (?v'. ((V v') /\ (!x. ((x = v1) = (x = v')))))) |- (((?x. (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v'))))))) ==> F) = F)
T c==> c~ c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 c= c==> c? / ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1 cF cF
+ |- ((((~ (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F) ==> (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c==> c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 cF c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ F), (x = v1), ((~ (V x)) /\ (V v1)) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c~ * f2 f0 * f2 f1 c/\ c~ cF cF
- |- (((!x. ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)) ==> ((\x. ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)) x)) = ((\x. ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)) x))
T c= c==> ! c==> c~ c==> ! c~ c/\ c\/ c= b1 b0 c= b1 f0 c= b1 f1 c~ c= f0 f1 cF * / c==> c~ c==> ! c~ c/\ c\/ c= b1 b0 c= b1 f0 c= b1 f1 c~ c= f0 f1 cF f2 * / c==> c~ c==> ! c~ c/\ c\/ c= b1 b0 c= b1 f0 c= b1 f1 c~ c= f0 f1 cF f2
+ (((x = u) \/ (x = w)) /\ (x = v1)), ((x = u) ==> F), ((x = w) ==> F) |- F
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c= f0 f3 c==> c==> c= f0 f1 cF c==> c==> c= f0 f2 cF cF
+ (!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) |- ((~ (_2889546 = v1)) \/ (~ (_2889546 = u)))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c~ c= f3 f1 c~ c= f3 f2
+ (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) ==> F)
T c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 cF
+ |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
+ |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ |- ((\x. (!V. ((fan2 (x , (V , E))) = (~ (x IN V))))) x)
T * / ! c= cfan2 c, b0 c, b1 f0 c~ cIN b0 b1 f1
+ (~ (x = v1)), (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) EMPTY)) |- (v1 IN ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)))
T c==> c~ c= f0 f1 c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY part cEMPTY cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (((v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) ==> (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY)))) = (((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))) ==> (~ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY))) = ((aff_ge (x INSERT EMPTY)) EMPTY)))))
T c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 c==> creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f0 c==> cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN f3 * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY part cEMPTY c==> c==> c/\ cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= * * part cINTER * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY part cEMPTY
- |- ((((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) ==> ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)) ==> (((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) ==> ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF
+ (FAN (x , (V , E))), (((u INSERT (w INSERT EMPTY)) IN E) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))), ((u INSERT (w INSERT EMPTY)) IN E) |- (~ (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 f5 creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c~ cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f3 c% f5 f4 f1
+ (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v')))))), (V v1) |- (((x v1) = v1) /\ ((x v1) = v1))
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> * f0 f2 c/\ c= * f1 f2 f2 c= * f1 f2 f2
+ (~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))), (~ (x = v1)), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (v1 INSERT EMPTY))) (w INSERT EMPTY)) |- ((((DISJOINT (x INSERT (v1 INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v1 INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v1 INSERT EMPTY)))))))) ==> (~ (fan6 (x , (V , E)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> cFAN c, f0 c, f3 f4 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f6 c% f5 f2 f1 c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f6 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f6 c% f5 f2 f3 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f6 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f6 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ cfan6 c, f0 c, f3 f4
+ (~ (x = u)), (~ (x = w)), (FAN (x , (V , E))), ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN V) |- F
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFAN c, f0 c, f3 f4 c==> c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f1 c% f5 f2 f3 cF
+ |- (((!x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) ==> ((\x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) x)) = ((\x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) x))
T c= c==> ! ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * / ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY f0 * / ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY f0
+ ((\v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)) v1) |- (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)
T c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 f3 c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3
- |- ((?v''. ((V v') /\ (!x. ((x = v1) = (x = v''))))) = ((V v') /\ (?v'. (!x. ((x = v1) = (x = v'))))))
T c= c? / c/\ * f0 f1 ! c= c= b1 f2 c= b1 b0 c/\ * f0 f1 c? / ! c= c= b1 f2 c= b1 b0
- (?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (v1 = ((% u) x)))), (~ (x = v1)) |- ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (v1 = ((% u) x)))) /\ F)
T c==> c? / c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c==> c~ c= f1 f0 c/\ c? / c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 cF
- |- (((((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) ==> ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)) ==> (((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) ==> ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F))) = (((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) ==> ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)))
T c= c==> c==> c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF
- |- ((~ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (A $ i)) = (A $ i))) ==> F)
T c==> c~ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1 cF
+ (x = u), ((~ (v1 = w)) /\ (~ (v1 = u))), (((x = u) \/ (x = w)) /\ (x = v1)) |- ((x = u) /\ F)
T c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c~ c= f2 f1 c==> c/\ c\/ c= f0 f1 c= f0 f3 c= f0 f2 c/\ c= f0 f1 cF
- |- ((((~ (V x)) /\ (V v1)) ==> (~ (x = v1))) = T)
T c= c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cT
+ |- (((DISJOINT (x INSERT (v1 INSERT EMPTY))) (u INSERT EMPTY)) ==> (~ (v1 = u)))
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c~ c= f1 f2
+ (fan6 (x , (V , E))) |- ((fan6 (x , (V , E))) = T)
T c==> cfan6 c, f0 c, f1 f2 c= cfan6 c, f0 c, f1 f2 cT
- (!v'. ((~ (V v')) \/ ((((x v') = v1) \/ ((x v') = v')) /\ ((~ ((x v') = v1)) \/ (~ ((x v') = v')))))), (~ F), (V v1) |- ((~ F) /\ F)
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> c~ cF c==> * f0 f2 c/\ c~ cF cF
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) _2889504) \/ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) _2889504)))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f4
- ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) |- ((((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) ==> ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)) ==> ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F))
T c==> c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c==> c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF
- (~ (V v1)), (V v1) |- ((~ (V v1)) /\ (V v1))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ * f0 f1 * f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')), ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))), (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x'))
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- ((!v'. (P \/ (Q v'))) = (P \/ (!v'. (Q v'))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- ((UNIONS E) SUBSET V) |- (((UNIONS E) SUBSET V) = T)
T c==> cSUBSET * part cUNIONS f0 f1 c= cSUBSET * part cUNIONS f0 f1 cT
- |- (((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) ==> ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F))
T c==> c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t)
T * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1
- (~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) |- ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) /\ F)
T c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 c/\ c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!V. ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F)) ==> ((\V. ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F)) V)) = ((\V. ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F)) V))
T c= c==> ! c==> c~ c==> * b0 f0 c? / c/\ * b0 b1 ! c= c= b2 f0 c= b2 b1 cF * / c==> c~ c==> * b0 f0 c? / c/\ * b0 b1 ! c= c= b2 f0 c= b2 b1 cF f1 * / c==> c~ c==> * b0 f0 c? / c/\ * b0 b1 ! c= c= b2 f0 c= b2 b1 cF f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!v1. (((\v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)) v1) ==> (?v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1))))
T c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 f3 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- |- (((!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) ==> ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t)) = ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t))
T c= c==> ! c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1 * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1
- |- (((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) ==> ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F))
T c==> c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF
- |- ((~ (_2889509 = _2889510)) \/ ((x _2889509) = (x _2889510)))
T c\/ c~ c= f0 f1 c= * f2 f0 * f2 f1
- |- ((\v1. (!w. (!u. ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)))) v1)
T * / ! ! c==> c~ c==> c/\ c~ c= b0 b1 c~ c= b0 b2 ! c~ c/\ c\/ c= b3 b2 c= b3 b1 c= b3 b0 cF f0
- (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1) |- ((\v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)) v1)
T c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 f3
- ((~ (V x)) /\ (V v1)) |- ((~ (V v1)) ==> (V v1))
T c==> c/\ c~ * f0 f1 * f0 f2 c==> c~ * f0 f2 * f0 f2
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ F), (x = w), ((~ (v1 = w)) /\ (~ (v1 = u))), (((x = u) \/ (x = w)) /\ (x = v1)) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c~ c= f2 f3 c==> c/\ c\/ c= f0 f3 c= f0 f1 c= f0 f2 c/\ c~ cF cF
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- (fan1 (x , (V , E))) |- ((fan1 (x , (V , E))) = T)
T c==> cfan1 c, f0 c, f1 f2 c= cfan1 c, f0 c, f1 f2 cT
- ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) |- ((((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) ==> ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)) ==> ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F))
T c==> c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c==> c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F), (((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) ==> ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F)) |- ((((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) ==> ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F)) /\ ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F))
T c==> c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c==> c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c/\ c==> c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF
- |- (((((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) ==> ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F)) ==> (((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) ==> ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F))) = (((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) ==> ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F)))
T c= c==> c==> c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')), (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2
- (!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))), (~ F), (v1 = u) |- ((~ F) /\ F)
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c==> c~ cF c==> c= f1 f2 c/\ c~ cF cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((x v1) = v1)) |- (((x v1) = v1) ==> (~ ((x v1) = v1)))
T c==> c~ c= * f0 f1 f1 c==> c= * f0 f1 f1 c~ c= * f0 f1 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!V. ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)) ==> ((\V. ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)) V)) = ((\V. ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)) V))
T c= c==> ! c==> c~ c==> c/\ c~ * b0 f0 * b0 f1 c~ c= f0 f1 cF * / c==> c~ c==> c/\ c~ * b0 f0 * b0 f1 c~ c= f0 f1 cF f2 * / c==> c~ c==> c/\ c~ * b0 f0 * b0 f1 c~ c= f0 f1 cF f2
- ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F), (((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) ==> ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)) |- ((((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) ==> ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)) /\ ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F))
T c==> c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c==> c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c/\ c==> c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF
- |- (((!x. (!V. ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F))) ==> ((\x. (!V. ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F))) x)) = ((\x. (!V. ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F))) x))
T c= c==> ! ! c==> c~ c==> c/\ c~ * b1 b0 * b1 f0 c~ c= b0 f0 cF * / ! c==> c~ c==> c/\ c~ * b1 b0 * b1 f0 c~ c= b0 f0 cF f1 * / ! c==> c~ c==> c/\ c~ * b1 b0 * b1 f0 c~ c= b0 f0 cF f1
- |- (((!v1. (!x. ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F))) ==> ((\v1. (!x. ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F))) v1)) = ((\v1. (!x. ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F))) v1))
T c= c==> ! ! c==> c~ c==> ! c~ c/\ c\/ c= b2 b1 c= b2 b0 c= b2 f0 c~ c= b0 f0 cF * / ! c==> c~ c==> ! c~ c/\ c\/ c= b2 b1 c= b2 b0 c= b2 f0 c~ c= b0 f0 cF f1 * / ! c==> c~ c==> ! c~ c/\ c\/ c= b2 b1 c= b2 b0 c= b2 f0 c~ c= b0 f0 cF f1
- |- (((!x. (!w. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F)))) ==> ((\x. (!w. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F)))) x)) = ((\x. (!w. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F)))) x))
T c= c==> ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 ! c= caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b3 c\/ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b3 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 ! c= c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 cF * / ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 ! c= caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b3 c\/ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b3 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 ! c= c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 cF f1 * / ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 ! c= caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b3 c\/ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b3 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 ! c= c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 cF f1
- ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) |- (((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) /\ ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F))
T c==> c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c/\ c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF
- (~ F), (x = u), ((~ (v1 = w)) /\ (~ (v1 = u))), (((x = u) \/ (x = w)) /\ (x = v1)) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c~ c= f2 f1 c==> c/\ c\/ c= f0 f1 c= f0 f3 c= f0 f2 c/\ c~ cF cF
- |- ((!w. (!u. (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')))))) = T)
T c= ! ! c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b2 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b2 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 cT
- |- (((!u. ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)) ==> ((\u. ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)) u)) = ((\u. ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)) u))
T c= c==> ! c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 b0 ! c~ c/\ c\/ c= b1 b0 c= b1 f1 c= b1 f0 cF * / c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 b0 ! c~ c/\ c\/ c= b1 b0 c= b1 f1 c= b1 f0 cF f2 * / c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 b0 ! c~ c/\ c\/ c= b1 b0 c= b1 f1 c= b1 f0 cF f2
- (x = w), (((x = u) \/ (x = w)) /\ (x = v1)) |- ((~ (v1 = u)) = (~ (v1 = u)))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c= f0 f3 c= c~ c= f3 f2 c~ c= f3 f2
- |- ((!x''. ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x'')) \/ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) = ((!x'. (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x'))) \/ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')))
T c= ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4 c\/ ! c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f4
- |- (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
- |- (((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) ==> ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F))
T c==> c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- ((\x'. ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) \/ ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))) _2889505)
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 * / c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 f4
- |- ((!x. ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) = T)
T c= ! c==> ! c~ c/\ c\/ c= b1 b0 c= b1 f0 c= b1 f1 c~ c= f0 f1 cT
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) |- ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) /\ F)
T c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 c/\ c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF
- |- ((!V. (P V)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) |- ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) /\ F)
T c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 c/\ c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF
- (~ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (A $ i)) = (A $ i))) |- ((~ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (A $ i)) = (A $ i))) /\ F)
T c==> c~ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1 c/\ c~ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1 cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- (((((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) ==> ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)) ==> (((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) ==> ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F))) = (((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F) ==> ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)))
T c= c==> c==> c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF c==> c~ c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f1 f2 cF
- (x = u), ((~ (v1 = w)) /\ (~ (v1 = u))), (((x = u) \/ (x = w)) /\ (x = v1)) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c~ c= f2 f3 c~ c= f2 f1 c==> c/\ c\/ c= f0 f1 c= f0 f3 c= f0 f2 c==> c~ cF cF
- (!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) |- ((~ (_2889546 = x)) \/ (~ (_2889546 = u)))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c~ c= f3 f0 c~ c= f3 f2
- |- ((\x. (!V. ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F))) x)
T * / ! c==> c~ c==> c/\ c~ * b1 b0 * b1 f0 c~ c= b0 f0 cF f1
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (V v1) |- ((~ (V v1)) ==> (V v1))
T c==> * f0 f1 c==> c~ * f0 f1 * f0 f1
- (((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) ==> ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)) |- ((((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) ==> ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)) /\ (((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) ==> ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c/\ c==> c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF
- |- ((((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')))) = T)
T c= c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- |- ((!v''. ((~ (V v')) \/ (?x. (((x = v1) \/ (x = v'')) /\ ((~ (x = v1)) \/ (~ (x = v''))))))) = ((~ (V v')) \/ (!v'. (?x. (((x = v1) \/ (x = v')) /\ ((~ (x = v1)) \/ (~ (x = v'))))))))
T c= ! c\/ c~ * f0 f1 c? / c/\ c\/ c= b1 f2 c= b1 b0 c\/ c~ c= b1 f2 c~ c= b1 b0 c\/ c~ * f0 f1 ! c? / c/\ c\/ c= b1 f2 c= b1 b0 c\/ c~ c= b1 f2 c~ c= b1 b0
- |- (((\t. (f t)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1) ==> (?v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)))
T c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0
- |- ((?v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)) ==> (?v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)))
T c==> c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0
- (_2889507 = _2889508) |- ((((V _2889507) = (V _2889508)) ==> ((V _2889508) \/ (~ (V _2889507)))) = ((V _2889508) \/ (~ (V _2889507))))
T c==> c= f0 f1 c= c==> c= * f2 f0 * f2 f1 c\/ * f2 f1 c~ * f2 f0 c\/ * f2 f1 c~ * f2 f0
- (~ (u = u)) |- ((~ (u = u)) /\ (u = u))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- |- ((~ (_2889507 = _2889508)) \/ ((V _2889508) \/ (~ (V _2889507))))
T c\/ c~ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
- |- ((!v1. (!V. ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v')))))))) = (!v1. (!V. ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F))))
T c= ! ! c==> * b1 b0 c? / c/\ * b1 b2 ! c= c= b3 b0 c= b3 b2 ! ! c==> c~ c==> * b1 b0 c? / c/\ * b1 b2 ! c= c= b3 b0 c= b3 b2 cF
- ((\v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)) v1) |- (((\v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)) v1) /\ (?v1. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = v1)))
T c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 f3 c/\ * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 f3 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- (!x'. ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) \/ ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) _2889505)) \/ ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) _2889505) \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) _2889505) \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) _2889505))))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f4
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F), (((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) ==> ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)) |- ((((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F) ==> ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)) /\ ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F))
T c==> c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c==> c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c/\ c==> c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c/\ c\/ c= b0 f2 c= b0 f1 c= b0 f0 cF
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!v1. (!w. (!u. ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)))) ==> ((\v1. (!w. (!u. ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)))) v1)) = ((\v1. (!w. (!u. ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)))) v1))
T c= c==> ! ! ! c==> c~ c==> c/\ c~ c= b0 b1 c~ c= b0 b2 ! c~ c/\ c\/ c= b3 b2 c= b3 b1 c= b3 b0 cF * / ! ! c==> c~ c==> c/\ c~ c= b0 b1 c~ c= b0 b2 ! c~ c/\ c\/ c= b3 b2 c= b3 b1 c= b3 b0 cF f0 * / ! ! c==> c~ c==> c/\ c~ c= b0 b1 c~ c= b0 b2 ! c~ c/\ c\/ c= b3 b2 c= b3 b1 c= b3 b0 cF f0
- |- ((\w. (!u. ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F))) w)
T * / ! c==> c~ c==> c/\ c~ c= f0 b0 c~ c= f0 b1 ! c~ c/\ c\/ c= b2 b1 c= b2 b0 c= b2 f0 cF f1
- (x = v1), ((~ (V x)) /\ (V v1)) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c~ * f2 f0 * f2 f1 c==> c~ cF cF
- (~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')), ((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))), (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) /\ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F), (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F)) |- (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F) /\ ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c/\ c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 ! c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
- |- ((!x. (!w. (!u. (((!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') = ((((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x') \/ ((((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x') \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x'))))))) = T)
T c= ! ! ! c==> c/\ ! c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 ! c= caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b3 c\/ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b3 c\/ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 ! c= c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 cT
- |- ((?x'. (((x' = v1) \/ (x' = v')) /\ ((~ (x = v1)) \/ (~ (x = v'))))) = ((?x. ((x = v1) \/ (x = v'))) /\ ((~ (x = v1)) \/ (~ (x = v')))))
T c= c? / c/\ c\/ c= b0 f0 c= b0 f1 c\/ c~ c= f2 f0 c~ c= f2 f1 c/\ c? / c\/ c= b0 f0 c= b0 f1 c\/ c~ c= f2 f0 c~ c= f2 f1
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) |- (((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F) /\ ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F))
T c==> c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c/\ c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF c==> c~ c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c~ c= f1 f2 cF
- (fan2 (x , (V , E))) |- ((fan2 (x , (V , E))) = T)
T c==> cfan2 c, f0 c, f1 f2 c= cfan2 c, f0 c, f1 f2 cT
- |- ((\u. ((~ (((~ (v1 = w)) /\ (~ (v1 = u))) ==> (!x. (~ (((x = u) \/ (x = w)) /\ (x = v1)))))) ==> F)) u)
T * / c==> c~ c==> c/\ c~ c= f0 f1 c~ c= f0 b0 ! c~ c/\ c\/ c= b1 b0 c= b1 f1 c= b1 f0 cF f2
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) ==> ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F)) ==> (((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F) ==> ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) ==> F)))
T c==> c==> c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF
- (FINITE (((set_of_edge u) V) E)) |- ((FINITE (((set_of_edge u) V) E)) = T)
T c==> cFINITE * * * part cset_of_edge f0 f1 f2 c= cFINITE * * * part cset_of_edge f0 f1 f2 cT
- |- ((!V. ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) = T)
T c= ! c==> * b0 f0 c? / c/\ * b0 b1 ! c= c= b2 f0 c= b2 b1 cT
- |- ((\x. ((~ ((!x'. (~ (((x' = x) \/ (x' = v1)) /\ (x' = u)))) ==> (~ (v1 = u)))) ==> F)) x)
T * / c==> c~ c==> ! c~ c/\ c\/ c= b1 b0 c= b1 f0 c= b1 f1 c~ c= f0 f1 cF f2
- |- ((?x. ((P x) /\ Q)) = ((?x. (P x)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- |- (((!v1. (!x. (!V. ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)))) ==> ((\v1. (!x. (!V. ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)))) v1)) = ((\v1. (!x. (!V. ((~ (((~ (V x)) /\ (V v1)) ==> (~ (x = v1)))) ==> F)))) v1))
T c= c==> ! ! ! c==> c~ c==> c/\ c~ * b2 b1 * b2 b0 c~ c= b1 b0 cF * / ! ! c==> c~ c==> c/\ c~ * b2 b1 * b2 b0 c~ c= b1 b0 cF f0 * / ! ! c==> c~ c==> c/\ c~ * b2 b1 * b2 b0 c~ c= b1 b0 cF f0
- (~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) |- ((~ ((V v1) ==> (?v'. ((V v') /\ (!x. ((x = v1) = (x = v'))))))) /\ F)
T c==> c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 c/\ c~ c==> * f0 f1 c? / c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 cF
- |- ((!x''. ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x'') \/ ((~ (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) = ((!x'. (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) \/ ((~ (((aff_gt (x INSERT EMPTY)) (v1 INSERT (w INSERT EMPTY))) x')) /\ ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))))
T c= ! c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f3 c\/ ! caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c/\ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f3
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x = w), ((~ (v1 = w)) /\ (~ (v1 = u))), (((x = u) \/ (x = w)) /\ (x = v1)) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c~ c= f2 f1 c~ c= f2 f3 c==> c/\ c\/ c= f0 f3 c= f0 f1 c= f0 f2 c==> c~ cF cF
