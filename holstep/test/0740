N UNIFORMLY_CONTINUOUS_ON_MUL
C |- (!f. (!g. (!s. ((((uniformly_continuous_on (lift o f)) s) /\ (((uniformly_continuous_on g) s) /\ ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s))))) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)))))
T c==> c/\ cuniformly_continuous_on * * part co part clift f0 f1 c/\ cuniformly_continuous_on f2 f1 c/\ cbounded * * part cIMAGE * * part co part clift f0 f1 cbounded * * part cIMAGE f2 f1 cuniformly_continuous_on / c% * f0 b0 * f2 b0 f1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_mul
A |- (!c. (!x. (((% c) x) = (lambdai. ((real_mul c) (x $ i))))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
D linear
A |- (!f. ((linear f) = ((!x. (!y. ((f ((vector_add x) y)) = ((vector_add (f x)) (f y))))) /\ (!c. (!x. ((f ((% c) x)) = ((% c) (f x))))))))
T c= clinear f0 c/\ ! ! c= * f0 cvector_add b0 b1 cvector_add * f0 b0 * f0 b1 ! ! c= * f0 c% b0 b1 c% b0 * f0 b1
D bilinear
A |- (!f. ((bilinear f) = ((!x. (linear (\y. ((f x) y)))) /\ (!y. (linear (\x. ((f x) y)))))))
T c= cbilinear f0 c/\ ! clinear / * * f0 b0 b1 ! clinear / * * f0 b1 b0
D LIFT_DROP
A |- ((!x. ((lift (drop x)) = x)) /\ (!x. ((drop (lift x)) = x)))
T c/\ ! c= clift cdrop b0 b0 ! c= cdrop clift b0 b0
D DROP_ADD
A |- (!x. (!y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y)))))
T c= cdrop cvector_add f0 f1 creal_add cdrop f0 cdrop f1
D DROP_CMUL
A |- (!x. (!c. ((drop ((% c) x)) = ((real_mul c) (drop x)))))
T c= cdrop c% f0 f1 creal_mul f0 cdrop f1
D BILINEAR_UNIFORMLY_CONTINUOUS_ON_COMPOSE
A |- (!f. (!g. (!h. (!s. ((((uniformly_continuous_on f) s) /\ (((uniformly_continuous_on g) s) /\ ((bilinear h) /\ ((bounded ((IMAGE f) s)) /\ (bounded ((IMAGE g) s)))))) ==> ((uniformly_continuous_on (\x. ((h (f x)) (g x)))) s))))))
T c==> c/\ cuniformly_continuous_on f0 f1 c/\ cuniformly_continuous_on f2 f1 c/\ cbilinear f3 c/\ cbounded * * part cIMAGE f0 f1 cbounded * * part cIMAGE f2 f1 cuniformly_continuous_on / * * f3 * f0 b0 * f2 b0 f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_mul ((real_add (drop x)) (drop y'))) (y $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul (drop x)) (y $ i))) $ i)) ((lambdai. ((real_mul (drop y')) (y $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul creal_add cdrop f1 cdrop f2 c$ f3 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul cdrop f1 c$ f3 b1 b0 c$ clambda / creal_mul cdrop f2 c$ f3 b1 b0 f0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_mul ((real_mul c) (drop x))) (y $ i))) $ i) = ((lambdai. ((real_mul c) ((lambdai. ((real_mul (drop x)) (y $ i))) $ i))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul c) (drop x))) y) $ i) = (((% c) ((% (drop x)) y)) $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul creal_mul f1 cdrop f2 c$ f3 b0 f0 c$ clambda / creal_mul f1 c$ clambda / creal_mul cdrop f2 c$ f3 b1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_mul f1 cdrop f2 f3 f0 c$ c% f1 c% cdrop f2 f3 f0
+ |- ((((% (drop x)) ((% c) x')) = ((% c) ((% (drop x)) x'))) = T)
T c= c= c% cdrop f0 c% f1 f2 c% f1 c% cdrop f0 f2 cT
+ (bounded ((IMAGE g) s)), (bounded ((IMAGE (lift o f)) s)), ((uniformly_continuous_on g) s), ((uniformly_continuous_on (lift o f)) s) |- ((((bilinear (\c. (\v. ((% (drop c)) v)))) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)) = (((((uniformly_continuous_on (lift o f)) s) /\ (((uniformly_continuous_on g) s) /\ ((bilinear (\c. (\v. ((% (drop c)) v)))) /\ ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s)))))) ==> ((uniformly_continuous_on (\x. (((\c. (\v. ((% (drop c)) v))) ((lift o f) x)) (g x)))) s)) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)))
T c==> cbounded * * part cIMAGE f0 f1 c==> cbounded * * part cIMAGE * * part co part clift f2 f1 c==> cuniformly_continuous_on f0 f1 c==> cuniformly_continuous_on * * part co part clift f2 f1 c= c==> c==> cbilinear / / c% cdrop b0 b1 cuniformly_continuous_on / c% * f2 b0 * f0 b0 f1 cuniformly_continuous_on / c% * f2 b0 * f0 b0 f1 c==> c==> c/\ cuniformly_continuous_on * * part co part clift f2 f1 c/\ cuniformly_continuous_on f0 f1 c/\ cbilinear / / c% cdrop b0 b1 c/\ cbounded * * part cIMAGE * * part co part clift f2 f1 cbounded * * part cIMAGE f0 f1 cuniformly_continuous_on / * * / / c% cdrop b1 b2 co part clift f2 b0 * f0 b0 f1 cuniformly_continuous_on / c% * f2 b0 * f0 b0 f1
- |- (((!x. ((lift (drop x)) = x)) ==> ((\x. ((lift (drop x)) = x)) x)) = ((\x. ((lift (drop x)) = x)) x))
T c= c==> ! c= clift cdrop b0 b0 * / c= clift cdrop b0 b0 f0 * / c= clift cdrop b0 b0 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_mul (drop x)) ((lambdai. ((real_add (x' $ i)) (y $ i))) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul (drop x)) (x' $ i))) $ i)) ((lambdai. ((real_mul (drop x)) (y $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul cdrop f1 c$ clambda / creal_add c$ f2 b1 c$ f3 b1 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul cdrop f1 c$ f2 b1 b0 c$ clambda / creal_mul cdrop f1 c$ f3 b1 b0 f0
- |- ((real_neg ((real_sub ((real_mul ((real_mul c) (drop x))) (y $ i))) ((real_mul c) ((real_mul (drop x)) (y $ i))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul creal_mul f0 cdrop f1 c$ f2 f3 creal_mul f0 creal_mul cdrop f1 c$ f2 f3 creal_of_num cNUMERAL c_0
+ |- (((!f. (!g. (!h. (!s. ((((uniformly_continuous_on f) s) /\ (((uniformly_continuous_on g) s) /\ ((bilinear h) /\ ((bounded ((IMAGE f) s)) /\ (bounded ((IMAGE g) s)))))) ==> ((uniformly_continuous_on (\x. ((h (f x)) (g x)))) s)))))) ==> ((\f. (!g. (!h. (!s. ((((uniformly_continuous_on f) s) /\ (((uniformly_continuous_on g) s) /\ ((bilinear h) /\ ((bounded ((IMAGE f) s)) /\ (bounded ((IMAGE g) s)))))) ==> ((uniformly_continuous_on (\x. ((h (f x)) (g x)))) s)))))) (lift o f))) = ((\f. (!g. (!h. (!s. ((((uniformly_continuous_on f) s) /\ (((uniformly_continuous_on g) s) /\ ((bilinear h) /\ ((bounded ((IMAGE f) s)) /\ (bounded ((IMAGE g) s)))))) ==> ((uniformly_continuous_on (\x. ((h (f x)) (g x)))) s)))))) (lift o f)))
T c= c==> ! ! ! ! c==> c/\ cuniformly_continuous_on b0 b3 c/\ cuniformly_continuous_on b1 b3 c/\ cbilinear b2 c/\ cbounded * * part cIMAGE b0 b3 cbounded * * part cIMAGE b1 b3 cuniformly_continuous_on / * * b2 * b0 b4 * b1 b4 b3 * / ! ! ! c==> c/\ cuniformly_continuous_on b0 b3 c/\ cuniformly_continuous_on b1 b3 c/\ cbilinear b2 c/\ cbounded * * part cIMAGE b0 b3 cbounded * * part cIMAGE b1 b3 cuniformly_continuous_on / * * b2 * b0 b4 * b1 b4 b3 * * part co part clift f0 * / ! ! ! c==> c/\ cuniformly_continuous_on b0 b3 c/\ cuniformly_continuous_on b1 b3 c/\ cbilinear b2 c/\ cbounded * * part cIMAGE b0 b3 cbounded * * part cIMAGE b1 b3 cuniformly_continuous_on / * * b2 * b0 b4 * b1 b4 b3 * * part co part clift f0
+ |- (((!x. ((drop (lift x)) = x)) ==> ((\x. ((drop (lift x)) = x)) x)) = ((\x. ((drop (lift x)) = x)) x))
T c= c==> ! c= cdrop clift b0 b0 * / c= cdrop clift b0 b0 f0 * / c= cdrop clift b0 b0 f0
+ (bounded ((IMAGE g) s)) |- ((bounded ((IMAGE g) s)) = T)
T c==> cbounded * * part cIMAGE f0 f1 c= cbounded * * part cIMAGE f0 f1 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((bilinear (\c. (\v. ((% (drop c)) v)))) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)) = ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s))
T c= c==> cbilinear / / c% cdrop b0 b1 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2
- |- (((bilinear (\c. (\v. ((% (drop c)) v)))) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)) ==> ((bilinear (\c. (\v. ((% (drop c)) v)))) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)))
T c==> c==> cbilinear / / c% cdrop b0 b1 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2 c==> cbilinear / / c% cdrop b0 b1 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2
+ |- (((!y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y)))) ==> ((\y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y)))) y)) = ((\y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y)))) y))
T c= c==> ! c= cdrop cvector_add f0 b0 creal_add cdrop f0 cdrop b0 * / c= cdrop cvector_add f0 b0 creal_add cdrop f0 cdrop b0 f1 * / c= cdrop cvector_add f0 b0 creal_add cdrop f0 cdrop b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((!y. (((% ((real_add (drop x)) (drop y))) y) = ((vector_add ((% (drop x)) y)) ((% (drop y)) y)))) = T)
T c= ! c= c% creal_add cdrop f0 cdrop b0 f1 cvector_add c% cdrop f0 f1 c% cdrop b0 f1 cT
- |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
+ (bounded ((IMAGE (lift o f)) s)) |- ((bounded ((IMAGE (lift o f)) s)) = T)
T c==> cbounded * * part cIMAGE * * part co part clift f0 f1 c= cbounded * * part cIMAGE * * part co part clift f0 f1 cT
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul c) (drop x))) y) $ i) = (((% c) ((% (drop x)) y)) $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_mul f1 cdrop f2 f3 f0 c$ c% f1 c% cdrop f2 f3 f0 cT
- (bilinear (\c. (\v. ((% (drop c)) v)))), ((bilinear (\c. (\v. ((% (drop c)) v)))) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)) |- ((bilinear (\c. (\v. ((% (drop c)) v)))) /\ ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s))
T c==> cbilinear / / c% cdrop b0 b1 c==> c==> cbilinear / / c% cdrop b0 b1 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2 c/\ cbilinear / / c% cdrop b0 b1 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2
+ |- ((!x. ((!x. (!y. (((% (drop x)) ((vector_add x) y)) = ((vector_add ((% (drop x)) x)) ((% (drop x)) y))))) /\ (!c. (!x. (((% (drop x)) ((% c) x)) = ((% c) ((% (drop x)) x))))))) /\ (!y. ((!x. (!y. (((% ((real_add (drop x)) (drop y))) y) = ((vector_add ((% (drop x)) y)) ((% (drop y)) y))))) /\ (!c. (!x. (((% ((real_mul c) (drop x))) y) = ((% c) ((% (drop x)) y))))))))
T c/\ ! c/\ ! ! c= c% cdrop b0 cvector_add b1 b2 cvector_add c% cdrop b0 b1 c% cdrop b0 b2 ! ! c= c% cdrop b0 c% b1 b2 c% b1 c% cdrop b0 b2 ! c/\ ! ! c= c% creal_add cdrop b1 cdrop b2 b0 cvector_add c% cdrop b1 b0 c% cdrop b2 b0 ! ! c= c% creal_mul b1 cdrop b2 b0 c% b1 c% cdrop b2 b0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
+ |- ((!x. (((% (drop x)) ((% c) x)) = ((% c) ((% (drop x)) x)))) = T)
T c= ! c= c% cdrop f0 c% f1 b0 c% f1 c% cdrop f0 b0 cT
- |- ((!i. t) = t)
T c= ! f0 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_add (drop x)) (drop y'))) y) $ i) = (((vector_add ((% (drop x)) y)) ((% (drop y')) y)) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_add cdrop f1 cdrop f2 f3 f0 c$ cvector_add c% cdrop f1 f3 c% cdrop f2 f3 f0
+ |- ((\x. (!y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y))))) x)
T * / ! c= cdrop cvector_add b0 b1 creal_add cdrop b0 cdrop b1 f0
+ |- ((!c. (!x. (((% ((real_mul c) (drop x))) y) = ((% c) ((% (drop x)) y))))) = ((!x. (!y. (((% ((real_add (drop x)) (drop y))) y) = ((vector_add ((% (drop x)) y)) ((% (drop y)) y))))) /\ (!c. (!x. (((% ((real_mul c) (drop x))) y) = ((% c) ((% (drop x)) y)))))))
T c= ! ! c= c% creal_mul b0 cdrop b1 f0 c% b0 c% cdrop b1 f0 c/\ ! ! c= c% creal_add cdrop b0 cdrop b1 f0 cvector_add c% cdrop b0 f0 c% cdrop b1 f0 ! ! c= c% creal_mul b0 cdrop b1 f0 c% b0 c% cdrop b1 f0
+ |- (((!f. ((linear f) = ((!x. (!y. ((f ((vector_add x) y)) = ((vector_add (f x)) (f y))))) /\ (!c. (!x. ((f ((% c) x)) = ((% c) (f x)))))))) ==> ((\f. ((linear f) = ((!x. (!y. ((f ((vector_add x) y)) = ((vector_add (f x)) (f y))))) /\ (!c. (!x. ((f ((% c) x)) = ((% c) (f x)))))))) f)) = ((\f. ((linear f) = ((!x. (!y. ((f ((vector_add x) y)) = ((vector_add (f x)) (f y))))) /\ (!c. (!x. ((f ((% c) x)) = ((% c) (f x)))))))) f))
T c= c==> ! c= clinear b0 c/\ ! ! c= * b0 cvector_add b1 b2 cvector_add * b0 b1 * b0 b2 ! ! c= * b0 c% b1 b2 c% b1 * b0 b2 * / c= clinear b0 c/\ ! ! c= * b0 cvector_add b1 b2 cvector_add * b0 b1 * b0 b2 ! ! c= * b0 c% b1 b2 c% b1 * b0 b2 f0 * / c= clinear b0 c/\ ! ! c= * b0 cvector_add b1 b2 cvector_add * b0 b1 * b0 b2 ! ! c= * b0 c% b1 b2 c% b1 * b0 b2 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (drop x)) ((vector_add x') y)) $ i) = (((vector_add ((% (drop x)) x')) ((% (drop x)) y)) $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% cdrop f1 cvector_add f2 f3 f0 c$ cvector_add c% cdrop f1 f2 c% cdrop f1 f3 f0 cT
- (~ (((real_mul (drop x)) ((real_mul c) (x' $ i))) = ((real_mul c) ((real_mul (drop x)) (x' $ i))))) |- ((~ (((real_mul (drop x)) ((real_mul c) (x' $ i))) = ((real_mul c) ((real_mul (drop x)) (x' $ i))))) /\ F)
T c==> c~ c= creal_mul cdrop f0 creal_mul f1 c$ f2 f3 creal_mul f1 creal_mul cdrop f0 c$ f2 f3 c/\ c~ c= creal_mul cdrop f0 creal_mul f1 c$ f2 f3 creal_mul f1 creal_mul cdrop f0 c$ f2 f3 cF
+ |- ((drop (lift x)) = x)
T c= cdrop clift f0 f0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_mul ((real_add (drop x)) (drop y'))) (y $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul (drop x)) (y $ i))) $ i)) ((lambdai. ((real_mul (drop y')) (y $ i))) $ i))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_add (drop x)) (drop y'))) y) $ i) = (((vector_add ((% (drop x)) y)) ((% (drop y')) y)) $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul creal_add cdrop f1 cdrop f2 c$ f3 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul cdrop f1 c$ f3 b1 b0 c$ clambda / creal_mul cdrop f2 c$ f3 b1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_add cdrop f1 cdrop f2 f3 f0 c$ cvector_add c% cdrop f1 f3 c% cdrop f2 f3 f0
- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((!g. (!x. (((f o g) x) = (f (g x))))) ==> ((\g. (!x. (((f o g) x) = (f (g x))))) g)) = ((\g. (!x. (((f o g) x) = (f (g x))))) g))
T c= c==> ! ! c= co f0 b0 b1 * f0 * b0 b1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1
+ ((uniformly_continuous_on (lift o f)) s) |- (((uniformly_continuous_on (lift o f)) s) = T)
T c==> cuniformly_continuous_on * * part co part clift f0 f1 c= cuniformly_continuous_on * * part co part clift f0 f1 cT
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (drop x)) ((% c) x')) $ i) = (((% c) ((% (drop x)) x')) $ i)))) = (((% (drop x)) ((% c) x')) = ((% c) ((% (drop x)) x'))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% cdrop f0 c% f1 f2 b0 c$ c% f1 c% cdrop f0 f2 b0 c= c% cdrop f0 c% f1 f2 c% f1 c% cdrop f0 f2
+ |- (((bilinear (\c. (\v. ((% (drop c)) v)))) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s))
T c==> c==> cbilinear / / c% cdrop b0 b1 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2
+ |- ((!c. (!x. (((% (drop x)) ((% c) x)) = ((% c) ((% (drop x)) x))))) = ((!x. (!y. (((% (drop x)) ((vector_add x) y)) = ((vector_add ((% (drop x)) x)) ((% (drop x)) y))))) /\ (!c. (!x. (((% (drop x)) ((% c) x)) = ((% c) ((% (drop x)) x)))))))
T c= ! ! c= c% cdrop f0 c% b0 b1 c% b0 c% cdrop f0 b1 c/\ ! ! c= c% cdrop f0 cvector_add b0 b1 cvector_add c% cdrop f0 b0 c% cdrop f0 b1 ! ! c= c% cdrop f0 c% b0 b1 c% b0 c% cdrop f0 b1
- (bilinear (\c. (\v. ((% (drop c)) v)))) |- (((bilinear (\c. (\v. ((% (drop c)) v)))) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s))
T c==> cbilinear / / c% cdrop b0 b1 c==> c==> cbilinear / / c% cdrop b0 b1 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2
+ |- ((!s. ((((uniformly_continuous_on (lift o f)) s) /\ (((uniformly_continuous_on g) s) /\ ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s))))) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s))) = T)
T c= ! c==> c/\ cuniformly_continuous_on * * part co part clift f0 b0 c/\ cuniformly_continuous_on f1 b0 c/\ cbounded * * part cIMAGE * * part co part clift f0 b0 cbounded * * part cIMAGE f1 b0 cuniformly_continuous_on / c% * f0 b1 * f1 b1 b0 cT
+ |- (((!f. (!g. (!x. (((f o g) x) = (f (g x)))))) ==> ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f)) = ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f))
T c= c==> ! ! ! c= co b0 b1 b2 * b0 * b1 b2 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (!c. (!x. (((% ((real_mul c) (drop x))) y) = ((% c) ((% (drop x)) y)))))
T c= c% creal_mul f0 cdrop f1 f2 c% f0 c% cdrop f1 f2
+ |- (((!g. (!h. (!s. ((((uniformly_continuous_on (lift o f)) s) /\ (((uniformly_continuous_on g) s) /\ ((bilinear h) /\ ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s)))))) ==> ((uniformly_continuous_on (\x. ((h ((lift o f) x)) (g x)))) s))))) ==> ((\g. (!h. (!s. ((((uniformly_continuous_on (lift o f)) s) /\ (((uniformly_continuous_on g) s) /\ ((bilinear h) /\ ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s)))))) ==> ((uniformly_continuous_on (\x. ((h ((lift o f) x)) (g x)))) s))))) g)) = ((\g. (!h. (!s. ((((uniformly_continuous_on (lift o f)) s) /\ (((uniformly_continuous_on g) s) /\ ((bilinear h) /\ ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s)))))) ==> ((uniformly_continuous_on (\x. ((h ((lift o f) x)) (g x)))) s))))) g))
T c= c==> ! ! ! c==> c/\ cuniformly_continuous_on * * part co part clift f0 b2 c/\ cuniformly_continuous_on b0 b2 c/\ cbilinear b1 c/\ cbounded * * part cIMAGE * * part co part clift f0 b2 cbounded * * part cIMAGE b0 b2 cuniformly_continuous_on / * * b1 co part clift f0 b3 * b0 b3 b2 * / ! ! c==> c/\ cuniformly_continuous_on * * part co part clift f0 b2 c/\ cuniformly_continuous_on b0 b2 c/\ cbilinear b1 c/\ cbounded * * part cIMAGE * * part co part clift f0 b2 cbounded * * part cIMAGE b0 b2 cuniformly_continuous_on / * * b1 co part clift f0 b3 * b0 b3 b2 f1 * / ! ! c==> c/\ cuniformly_continuous_on * * part co part clift f0 b2 c/\ cuniformly_continuous_on b0 b2 c/\ cbilinear b1 c/\ cbounded * * part cIMAGE * * part co part clift f0 b2 cbounded * * part cIMAGE b0 b2 cuniformly_continuous_on / * * b1 co part clift f0 b3 * b0 b3 b2 f1
- ((bilinear (\c. (\v. ((% (drop c)) v)))) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)) |- (((bilinear (\c. (\v. ((% (drop c)) v)))) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)) /\ ((bilinear (\c. (\v. ((% (drop c)) v)))) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)))
T c==> c==> cbilinear / / c% cdrop b0 b1 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2 c/\ c==> cbilinear / / c% cdrop b0 b1 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2 c==> cbilinear / / c% cdrop b0 b1 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2
+ (bounded ((IMAGE g) s)), (bounded ((IMAGE (lift o f)) s)), ((uniformly_continuous_on g) s), ((uniformly_continuous_on (lift o f)) s) |- ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)
T c==> cbounded * * part cIMAGE f0 f1 c==> cbounded * * part cIMAGE * * part co part clift f2 f1 c==> cuniformly_continuous_on f0 f1 c==> cuniformly_continuous_on * * part co part clift f2 f1 cuniformly_continuous_on / c% * f2 b0 * f0 b0 f1
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. (!y. (((% ((real_add (drop x)) (drop y))) y) = ((vector_add ((% (drop x)) y)) ((% (drop y)) y))))) /\ (!c. (!x. (((% ((real_mul c) (drop x))) y) = ((% c) ((% (drop x)) y)))))) = T)
T c= c/\ ! ! c= c% creal_add cdrop b0 cdrop b1 f0 cvector_add c% cdrop b0 f0 c% cdrop b1 f0 ! ! c= c% creal_mul b0 cdrop b1 f0 c% b0 c% cdrop b1 f0 cT
+ |- (((!s. ((((uniformly_continuous_on (lift o f)) s) /\ (((uniformly_continuous_on g) s) /\ ((bilinear (\c. (\v. ((% (drop c)) v)))) /\ ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s)))))) ==> ((uniformly_continuous_on (\x. (((\c. (\v. ((% (drop c)) v))) ((lift o f) x)) (g x)))) s))) ==> ((\s. ((((uniformly_continuous_on (lift o f)) s) /\ (((uniformly_continuous_on g) s) /\ ((bilinear (\c. (\v. ((% (drop c)) v)))) /\ ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s)))))) ==> ((uniformly_continuous_on (\x. (((\c. (\v. ((% (drop c)) v))) ((lift o f) x)) (g x)))) s))) s)) = ((\s. ((((uniformly_continuous_on (lift o f)) s) /\ (((uniformly_continuous_on g) s) /\ ((bilinear (\c. (\v. ((% (drop c)) v)))) /\ ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s)))))) ==> ((uniformly_continuous_on (\x. (((\c. (\v. ((% (drop c)) v))) ((lift o f) x)) (g x)))) s))) s))
T c= c==> ! c==> c/\ cuniformly_continuous_on * * part co part clift f0 b0 c/\ cuniformly_continuous_on f1 b0 c/\ cbilinear / / c% cdrop b1 b2 c/\ cbounded * * part cIMAGE * * part co part clift f0 b0 cbounded * * part cIMAGE f1 b0 cuniformly_continuous_on / * * / / c% cdrop b2 b3 co part clift f0 b1 * f1 b1 b0 * / c==> c/\ cuniformly_continuous_on * * part co part clift f0 b0 c/\ cuniformly_continuous_on f1 b0 c/\ cbilinear / / c% cdrop b1 b2 c/\ cbounded * * part cIMAGE * * part co part clift f0 b0 cbounded * * part cIMAGE f1 b0 cuniformly_continuous_on / * * / / c% cdrop b2 b3 co part clift f0 b1 * f1 b1 b0 f2 * / c==> c/\ cuniformly_continuous_on * * part co part clift f0 b0 c/\ cuniformly_continuous_on f1 b0 c/\ cbilinear / / c% cdrop b1 b2 c/\ cbounded * * part cIMAGE * * part co part clift f0 b0 cbounded * * part cIMAGE f1 b0 cuniformly_continuous_on / * * / / c% cdrop b2 b3 co part clift f0 b1 * f1 b1 b0 f2
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s))), ((uniformly_continuous_on g) s), ((uniformly_continuous_on (lift o f)) s) |- ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)
T c==> c/\ cbounded * * part cIMAGE * * part co part clift f0 f1 cbounded * * part cIMAGE f2 f1 c==> cuniformly_continuous_on f2 f1 c==> cuniformly_continuous_on * * part co part clift f0 f1 cuniformly_continuous_on / c% * f0 b0 * f2 b0 f1
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_add (drop x)) (drop y'))) y) $ i) = (((vector_add ((% (drop x)) y)) ((% (drop y')) y)) $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_add cdrop f1 cdrop f2 f3 f0 c$ cvector_add c% cdrop f1 f3 c% cdrop f2 f3 f0 cT
- |- ((((~ (((real_mul (drop x)) ((real_add (x' $ i)) (y $ i))) = ((real_add ((real_mul (drop x)) (x' $ i))) ((real_mul (drop x)) (y $ i))))) ==> F) ==> (((real_mul (drop x)) ((real_add (x' $ i)) (y $ i))) = ((real_add ((real_mul (drop x)) (x' $ i))) ((real_mul (drop x)) (y $ i))))) = (((real_mul (drop x)) ((real_add (x' $ i)) (y $ i))) = ((real_add ((real_mul (drop x)) (x' $ i))) ((real_mul (drop x)) (y $ i)))))
T c= c==> c==> c~ c= creal_mul cdrop f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul cdrop f0 c$ f1 f2 creal_mul cdrop f0 c$ f3 f2 cF c= creal_mul cdrop f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul cdrop f0 c$ f1 f2 creal_mul cdrop f0 c$ f3 f2 c= creal_mul cdrop f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul cdrop f0 c$ f1 f2 creal_mul cdrop f0 c$ f3 f2
- (~ (((real_mul (drop x)) ((real_mul c) (x' $ i))) = ((real_mul c) ((real_mul (drop x)) (x' $ i))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_mul cdrop f0 creal_mul f1 c$ f2 f3 creal_mul f1 creal_mul cdrop f0 c$ f2 f3 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((uniformly_continuous_on (lift o f)) s) /\ (((uniformly_continuous_on g) s) /\ ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s))))) |- ((((uniformly_continuous_on (lift o f)) s) /\ (((uniformly_continuous_on g) s) /\ ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s))))) /\ ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s))
T c==> c/\ cuniformly_continuous_on * * part co part clift f0 f1 c/\ cuniformly_continuous_on f2 f1 c/\ cbounded * * part cIMAGE * * part co part clift f0 f1 cbounded * * part cIMAGE f2 f1 c/\ c/\ cuniformly_continuous_on * * part co part clift f0 f1 c/\ cuniformly_continuous_on f2 f1 c/\ cbounded * * part cIMAGE * * part co part clift f0 f1 cbounded * * part cIMAGE f2 f1 cuniformly_continuous_on / c% * f0 b0 * f2 b0 f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_mul (drop x)) ((real_mul c) (x' $ i))) = ((real_mul c) ((real_mul (drop x)) (x' $ i)))) = (((lambdai. ((real_mul (drop x)) ((lambdai. ((real_mul c) (x' $ i))) $ i))) $ i) = ((lambdai. ((real_mul c) ((lambdai. ((real_mul (drop x)) (x' $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_mul cdrop f1 creal_mul f2 c$ f3 f0 creal_mul f2 creal_mul cdrop f1 c$ f3 f0 c= c$ clambda / creal_mul cdrop f1 c$ clambda / creal_mul f2 c$ f3 b1 b0 f0 c$ clambda / creal_mul f2 c$ clambda / creal_mul cdrop f1 c$ f3 b1 b0 f0
+ ((bilinear (\c. (\v. ((% (drop c)) v)))) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)) |- (((bilinear (\c. (\v. ((% (drop c)) v)))) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)) /\ ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s))
T c==> c==> cbilinear / / c% cdrop b0 b1 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2 c/\ c==> cbilinear / / c% cdrop b0 b1 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((real_mul (drop x)) ((real_add (x' $ i)) (y $ i))) = ((real_add ((real_mul (drop x)) (x' $ i))) ((real_mul (drop x)) (y $ i))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_mul cdrop f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul cdrop f0 c$ f1 f2 creal_mul cdrop f0 c$ f3 f2 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((((% (drop x)) ((vector_add x') y)) = ((vector_add ((% (drop x)) x')) ((% (drop x)) y))) = T)
T c= c= c% cdrop f0 cvector_add f1 f2 cvector_add c% cdrop f0 f1 c% cdrop f0 f2 cT
- |- ((~ (((real_mul (drop x)) ((real_mul c) (x' $ i))) = ((real_mul c) ((real_mul (drop x)) (x' $ i))))) ==> F)
T c==> c~ c= creal_mul cdrop f0 creal_mul f1 c$ f2 f3 creal_mul f1 creal_mul cdrop f0 c$ f2 f3 cF
- (~ (((real_mul ((real_mul c) (drop x))) (y $ i)) = ((real_mul c) ((real_mul (drop x)) (y $ i))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_mul creal_mul f0 cdrop f1 c$ f2 f3 creal_mul f0 creal_mul cdrop f1 c$ f2 f3 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (~ (((real_mul ((real_mul c) (drop x))) (y $ i)) = ((real_mul c) ((real_mul (drop x)) (y $ i))))) |- ((~ (((real_mul ((real_mul c) (drop x))) (y $ i)) = ((real_mul c) ((real_mul (drop x)) (y $ i))))) /\ F)
T c==> c~ c= creal_mul creal_mul f0 cdrop f1 c$ f2 f3 creal_mul f0 creal_mul cdrop f1 c$ f2 f3 c/\ c~ c= creal_mul creal_mul f0 cdrop f1 c$ f2 f3 creal_mul f0 creal_mul cdrop f1 c$ f2 f3 cF
+ (bounded ((IMAGE (lift o f)) s)), ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s))), ((uniformly_continuous_on g) s), ((uniformly_continuous_on (lift o f)) s) |- ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)
T c==> cbounded * * part cIMAGE * * part co part clift f0 f1 c==> c/\ cbounded * * part cIMAGE * * part co part clift f0 f1 cbounded * * part cIMAGE f2 f1 c==> cuniformly_continuous_on f2 f1 c==> cuniformly_continuous_on * * part co part clift f0 f1 cuniformly_continuous_on / c% * f0 b0 * f2 b0 f1
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((\h. (!s. ((((uniformly_continuous_on (lift o f)) s) /\ (((uniformly_continuous_on g) s) /\ ((bilinear h) /\ ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s)))))) ==> ((uniformly_continuous_on (\x. ((h ((lift o f) x)) (g x)))) s)))) (\c. (\v. ((% (drop c)) v))))
T * / ! c==> c/\ cuniformly_continuous_on * * part co part clift f0 b1 c/\ cuniformly_continuous_on f1 b1 c/\ cbilinear b0 c/\ cbounded * * part cIMAGE * * part co part clift f0 b1 cbounded * * part cIMAGE f1 b1 cuniformly_continuous_on / * * b0 co part clift f0 b2 * f1 b2 b1 / / c% cdrop b0 b1
+ |- (((!x. (!y. (((% (drop x)) ((vector_add x) y)) = ((vector_add ((% (drop x)) x)) ((% (drop x)) y))))) /\ (!c. (!x. (((% (drop x)) ((% c) x)) = ((% c) ((% (drop x)) x)))))) = T)
T c= c/\ ! ! c= c% cdrop f0 cvector_add b0 b1 cvector_add c% cdrop f0 b0 c% cdrop f0 b1 ! ! c= c% cdrop f0 c% b0 b1 c% b0 c% cdrop f0 b1 cT
+ |- ((\x. ((drop (lift x)) = x)) x)
T * / c= cdrop clift b0 b0 f0
+ |- (((!x. (!c. ((drop ((% c) x)) = ((real_mul c) (drop x))))) ==> ((\x. (!c. ((drop ((% c) x)) = ((real_mul c) (drop x))))) x)) = ((\x. (!c. ((drop ((% c) x)) = ((real_mul c) (drop x))))) x))
T c= c==> ! ! c= cdrop c% b1 b0 creal_mul b1 cdrop b0 * / ! c= cdrop c% b1 b0 creal_mul b1 cdrop b0 f0 * / ! c= cdrop c% b1 b0 creal_mul b1 cdrop b0 f0
- |- ((((~ (((real_mul ((real_add (drop x)) (drop y'))) (y $ i)) = ((real_add ((real_mul (drop x)) (y $ i))) ((real_mul (drop y')) (y $ i))))) ==> F) ==> (((real_mul ((real_add (drop x)) (drop y'))) (y $ i)) = ((real_add ((real_mul (drop x)) (y $ i))) ((real_mul (drop y')) (y $ i))))) = (((real_mul ((real_add (drop x)) (drop y'))) (y $ i)) = ((real_add ((real_mul (drop x)) (y $ i))) ((real_mul (drop y')) (y $ i)))))
T c= c==> c==> c~ c= creal_mul creal_add cdrop f0 cdrop f1 c$ f2 f3 creal_add creal_mul cdrop f0 c$ f2 f3 creal_mul cdrop f1 c$ f2 f3 cF c= creal_mul creal_add cdrop f0 cdrop f1 c$ f2 f3 creal_add creal_mul cdrop f0 c$ f2 f3 creal_mul cdrop f1 c$ f2 f3 c= creal_mul creal_add cdrop f0 cdrop f1 c$ f2 f3 creal_add creal_mul cdrop f0 c$ f2 f3 creal_mul cdrop f1 c$ f2 f3
+ (bounded ((IMAGE g) s)), (bounded ((IMAGE (lift o f)) s)), ((uniformly_continuous_on g) s), ((uniformly_continuous_on (lift o f)) s) |- (((((uniformly_continuous_on (lift o f)) s) /\ (((uniformly_continuous_on g) s) /\ ((bilinear (\c. (\v. ((% (drop c)) v)))) /\ ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s)))))) ==> ((uniformly_continuous_on (\x. (((\c. (\v. ((% (drop c)) v))) ((lift o f) x)) (g x)))) s)) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s))
T c==> cbounded * * part cIMAGE f0 f1 c==> cbounded * * part cIMAGE * * part co part clift f2 f1 c==> cuniformly_continuous_on f0 f1 c==> cuniformly_continuous_on * * part co part clift f2 f1 c==> c==> c/\ cuniformly_continuous_on * * part co part clift f2 f1 c/\ cuniformly_continuous_on f0 f1 c/\ cbilinear / / c% cdrop b0 b1 c/\ cbounded * * part cIMAGE * * part co part clift f2 f1 cbounded * * part cIMAGE f0 f1 cuniformly_continuous_on / * * / / c% cdrop b1 b2 co part clift f2 b0 * f0 b0 f1 cuniformly_continuous_on / c% * f2 b0 * f0 b0 f1
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul c) (drop x))) y) $ i) = (((% c) ((% (drop x)) y)) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_mul f1 cdrop f2 f3 f0 c$ c% f1 c% cdrop f2 f3 f0
+ (((uniformly_continuous_on (lift o f)) s) /\ (((uniformly_continuous_on g) s) /\ ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s))))), ((uniformly_continuous_on (lift o f)) s) |- ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)
T c==> c/\ cuniformly_continuous_on * * part co part clift f0 f1 c/\ cuniformly_continuous_on f2 f1 c/\ cbounded * * part cIMAGE * * part co part clift f0 f1 cbounded * * part cIMAGE f2 f1 c==> cuniformly_continuous_on * * part co part clift f0 f1 cuniformly_continuous_on / c% * f0 b0 * f2 b0 f1
- |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- (!x. (!y. (((% ((real_add (drop x)) (drop y))) y) = ((vector_add ((% (drop x)) y)) ((% (drop y)) y)))))
T c= c% creal_add cdrop f0 cdrop f1 f2 cvector_add c% cdrop f0 f2 c% cdrop f1 f2
+ |- (((!x. (((f o g) x) = (f (g x)))) ==> ((\x. (((f o g) x) = (f (g x)))) x)) = ((\x. (((f o g) x) = (f (g x)))) x))
T c= c==> ! c= co f0 f1 b0 * f0 * f1 b0 * / c= co f0 f1 b0 * f0 * f1 b0 f2 * / c= co f0 f1 b0 * f0 * f1 b0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\x. ((lift (drop x)) = x)) x)
T * / c= clift cdrop b0 b0 f0
+ |- (!x. (!y. (((% (drop x)) ((vector_add x) y)) = ((vector_add ((% (drop x)) x)) ((% (drop x)) y)))))
T c= c% cdrop f0 cvector_add f1 f2 cvector_add c% cdrop f0 f1 c% cdrop f0 f2
- |- ((~ (((real_mul ((real_mul c) (drop x))) (y $ i)) = ((real_mul c) ((real_mul (drop x)) (y $ i))))) ==> F)
T c==> c~ c= creal_mul creal_mul f0 cdrop f1 c$ f2 f3 creal_mul f0 creal_mul cdrop f1 c$ f2 f3 cF
- |- ((real_neg ((real_sub ((real_mul ((real_add (drop x)) (drop y'))) (y $ i))) ((real_add ((real_mul (drop x)) (y $ i))) ((real_mul (drop y')) (y $ i))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul creal_add cdrop f0 cdrop f1 c$ f2 f3 creal_add creal_mul cdrop f0 c$ f2 f3 creal_mul cdrop f1 c$ f2 f3 creal_of_num cNUMERAL c_0
- |- ((((~ (((real_mul (drop x)) ((real_mul c) (x' $ i))) = ((real_mul c) ((real_mul (drop x)) (x' $ i))))) ==> F) ==> (((real_mul (drop x)) ((real_mul c) (x' $ i))) = ((real_mul c) ((real_mul (drop x)) (x' $ i))))) = (((real_mul (drop x)) ((real_mul c) (x' $ i))) = ((real_mul c) ((real_mul (drop x)) (x' $ i)))))
T c= c==> c==> c~ c= creal_mul cdrop f0 creal_mul f1 c$ f2 f3 creal_mul f1 creal_mul cdrop f0 c$ f2 f3 cF c= creal_mul cdrop f0 creal_mul f1 c$ f2 f3 creal_mul f1 creal_mul cdrop f0 c$ f2 f3 c= creal_mul cdrop f0 creal_mul f1 c$ f2 f3 creal_mul f1 creal_mul cdrop f0 c$ f2 f3
+ |- (!y. ((!x. (!y. (((% ((real_add (drop x)) (drop y))) y) = ((vector_add ((% (drop x)) y)) ((% (drop y)) y))))) /\ (!c. (!x. (((% ((real_mul c) (drop x))) y) = ((% c) ((% (drop x)) y)))))))
T c/\ ! ! c= c% creal_add cdrop b0 cdrop b1 f0 cvector_add c% cdrop b0 f0 c% cdrop b1 f0 ! ! c= c% creal_mul b0 cdrop b1 f0 c% b0 c% cdrop b1 f0
- |- ((~ (((real_mul (drop x)) ((real_add (x' $ i)) (y $ i))) = ((real_add ((real_mul (drop x)) (x' $ i))) ((real_mul (drop x)) (y $ i))))) ==> F)
T c==> c~ c= creal_mul cdrop f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul cdrop f0 c$ f1 f2 creal_mul cdrop f0 c$ f3 f2 cF
+ |- ((\g. (!h. (!s. ((((uniformly_continuous_on (lift o f)) s) /\ (((uniformly_continuous_on g) s) /\ ((bilinear h) /\ ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s)))))) ==> ((uniformly_continuous_on (\x. ((h ((lift o f) x)) (g x)))) s))))) g)
T * / ! ! c==> c/\ cuniformly_continuous_on * * part co part clift f0 b2 c/\ cuniformly_continuous_on b0 b2 c/\ cbilinear b1 c/\ cbounded * * part cIMAGE * * part co part clift f0 b2 cbounded * * part cIMAGE b0 b2 cuniformly_continuous_on / * * b1 co part clift f0 b3 * b0 b3 b2 f1
- |- (((real_gt x) y) = ((real_lt y) x))
T c= creal_gt f0 f1 creal_lt f1 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_mul ((real_mul c) (drop x))) (y $ i)) = ((real_mul c) ((real_mul (drop x)) (y $ i)))) = (((lambdai. ((real_mul ((real_mul c) (drop x))) (y $ i))) $ i) = ((lambdai. ((real_mul c) ((lambdai. ((real_mul (drop x)) (y $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_mul creal_mul f1 cdrop f2 c$ f3 f0 creal_mul f1 creal_mul cdrop f2 c$ f3 f0 c= c$ clambda / creal_mul creal_mul f1 cdrop f2 c$ f3 b0 f0 c$ clambda / creal_mul f1 c$ clambda / creal_mul cdrop f2 c$ f3 b1 b0 f0
+ |- (((((uniformly_continuous_on (lift o f)) s) /\ (((uniformly_continuous_on g) s) /\ ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s))))) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)) = T)
T c= c==> c/\ cuniformly_continuous_on * * part co part clift f0 f1 c/\ cuniformly_continuous_on f2 f1 c/\ cbounded * * part cIMAGE * * part co part clift f0 f1 cbounded * * part cIMAGE f2 f1 cuniformly_continuous_on / c% * f0 b0 * f2 b0 f1 cT
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_mul (drop x)) ((real_add (x' $ i)) (y $ i))) = ((real_add ((real_mul (drop x)) (x' $ i))) ((real_mul (drop x)) (y $ i)))) = (((lambdai. ((real_mul (drop x)) ((lambdai. ((real_add (x' $ i)) (y $ i))) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul (drop x)) (x' $ i))) $ i)) ((lambdai. ((real_mul (drop x)) (y $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_mul cdrop f1 creal_add c$ f2 f0 c$ f3 f0 creal_add creal_mul cdrop f1 c$ f2 f0 creal_mul cdrop f1 c$ f3 f0 c= c$ clambda / creal_mul cdrop f1 c$ clambda / creal_add c$ f2 b1 c$ f3 b1 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul cdrop f1 c$ f2 b1 b0 c$ clambda / creal_mul cdrop f1 c$ f3 b1 b0 f0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_mul ((real_mul c) (drop x))) (y $ i))) $ i) = ((lambdai. ((real_mul c) ((lambdai. ((real_mul (drop x)) (y $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul creal_mul f1 cdrop f2 c$ f3 b0 f0 c$ clambda / creal_mul f1 c$ clambda / creal_mul cdrop f2 c$ f3 b1 b0 f0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_mul (drop x)) ((lambdai. ((real_mul c) (x' $ i))) $ i))) $ i) = ((lambdai. ((real_mul c) ((lambdai. ((real_mul (drop x)) (x' $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul cdrop f1 c$ clambda / creal_mul f2 c$ f3 b1 b0 f0 c$ clambda / creal_mul f2 c$ clambda / creal_mul cdrop f1 c$ f3 b1 b0 f0
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
+ |- (!h. (!s. ((((uniformly_continuous_on (lift o f)) s) /\ (((uniformly_continuous_on g) s) /\ ((bilinear h) /\ ((bounded ((IMAGE (lift o f)) s)) /\ (bounded ((IMAGE g) s)))))) ==> ((uniformly_continuous_on (\x. ((h ((lift o f) x)) (g x)))) s))))
T c==> c/\ cuniformly_continuous_on * * part co part clift f0 f1 c/\ cuniformly_continuous_on f2 f1 c/\ cbilinear f3 c/\ cbounded * * part cIMAGE * * part co part clift f0 f1 cbounded * * part cIMAGE f2 f1 cuniformly_continuous_on / * * f3 co part clift f0 b0 * f2 b0 f1
+ |- ((\f. ((bilinear f) = ((!x. (linear (\y. ((f x) y)))) /\ (!y. (linear (\x. ((f x) y))))))) f)
T * / c= cbilinear b0 c/\ ! clinear / * * b0 b1 b2 ! clinear / * * b0 b2 b1 f0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_mul (drop x)) ((lambdai. ((real_add (x' $ i)) (y $ i))) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul (drop x)) (x' $ i))) $ i)) ((lambdai. ((real_mul (drop x)) (y $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul cdrop f1 c$ clambda / creal_add c$ f2 b1 c$ f3 b1 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul cdrop f1 c$ f2 b1 b0 c$ clambda / creal_mul cdrop f1 c$ f3 b1 b0 f0
+ |- (bilinear (\c. (\v. ((% (drop c)) v))))
T cbilinear / / c% cdrop b0 b1
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- (~ (((real_mul ((real_add (drop x)) (drop y'))) (y $ i)) = ((real_add ((real_mul (drop x)) (y $ i))) ((real_mul (drop y')) (y $ i))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_mul creal_add cdrop f0 cdrop f1 c$ f2 f3 creal_add creal_mul cdrop f0 c$ f2 f3 creal_mul cdrop f1 c$ f2 f3 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((~ (((real_mul ((real_add (drop x)) (drop y'))) (y $ i)) = ((real_add ((real_mul (drop x)) (y $ i))) ((real_mul (drop y')) (y $ i))))) ==> F)
T c==> c~ c= creal_mul creal_add cdrop f0 cdrop f1 c$ f2 f3 creal_add creal_mul cdrop f0 c$ f2 f3 creal_mul cdrop f1 c$ f2 f3 cF
- |- ((real_neg ((real_sub ((real_mul (drop x)) ((real_add (x' $ i)) (y $ i)))) ((real_add ((real_mul (drop x)) (x' $ i))) ((real_mul (drop x)) (y $ i))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul cdrop f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul cdrop f0 c$ f1 f2 creal_mul cdrop f0 c$ f3 f2 creal_of_num cNUMERAL c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) |- F
T c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((real_mul (drop x)) ((real_add (x' $ i)) (y $ i))) = ((real_add ((real_mul (drop x)) (x' $ i))) ((real_mul (drop x)) (y $ i))))) |- ((~ (((real_mul (drop x)) ((real_add (x' $ i)) (y $ i))) = ((real_add ((real_mul (drop x)) (x' $ i))) ((real_mul (drop x)) (y $ i))))) /\ F)
T c==> c~ c= creal_mul cdrop f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul cdrop f0 c$ f1 f2 creal_mul cdrop f0 c$ f3 f2 c/\ c~ c= creal_mul cdrop f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul cdrop f0 c$ f1 f2 creal_mul cdrop f0 c$ f3 f2 cF
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (bilinear (\c. (\v. ((% (drop c)) v)))), ((bilinear (\c. (\v. ((% (drop c)) v)))) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)) |- (((bilinear (\c. (\v. ((% (drop c)) v)))) ==> ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s)) /\ ((uniformly_continuous_on (\x. ((% (f x)) (g x)))) s))
T c==> cbilinear / / c% cdrop b0 b1 c==> c==> cbilinear / / c% cdrop b0 b1 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2 c/\ c==> cbilinear / / c% cdrop b0 b1 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2 cuniformly_continuous_on / c% * f0 b0 * f1 b0 f2
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_neg ((real_sub ((real_mul (drop x)) ((real_mul c) (x' $ i)))) ((real_mul c) ((real_mul (drop x)) (x' $ i))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul cdrop f0 creal_mul f1 c$ f2 f3 creal_mul f1 creal_mul cdrop f0 c$ f2 f3 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (((real_mul ((real_mul c) (drop x))) (y $ i)) = ((real_mul c) ((real_mul (drop x)) (y $ i))))) ==> F) ==> (((real_mul ((real_mul c) (drop x))) (y $ i)) = ((real_mul c) ((real_mul (drop x)) (y $ i))))) = (((real_mul ((real_mul c) (drop x))) (y $ i)) = ((real_mul c) ((real_mul (drop x)) (y $ i)))))
T c= c==> c==> c~ c= creal_mul creal_mul f0 cdrop f1 c$ f2 f3 creal_mul f0 creal_mul cdrop f1 c$ f2 f3 cF c= creal_mul creal_mul f0 cdrop f1 c$ f2 f3 creal_mul f0 creal_mul cdrop f1 c$ f2 f3 c= creal_mul creal_mul f0 cdrop f1 c$ f2 f3 creal_mul f0 creal_mul cdrop f1 c$ f2 f3
- |- ((lift (drop x)) = x)
T c= clift cdrop f0 f0
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- (~ (((real_mul ((real_add (drop x)) (drop y'))) (y $ i)) = ((real_add ((real_mul (drop x)) (y $ i))) ((real_mul (drop y')) (y $ i))))) |- ((~ (((real_mul ((real_add (drop x)) (drop y'))) (y $ i)) = ((real_add ((real_mul (drop x)) (y $ i))) ((real_mul (drop y')) (y $ i))))) /\ F)
T c==> c~ c= creal_mul creal_add cdrop f0 cdrop f1 c$ f2 f3 creal_add creal_mul cdrop f0 c$ f2 f3 creal_mul cdrop f1 c$ f2 f3 c/\ c~ c= creal_mul creal_add cdrop f0 cdrop f1 c$ f2 f3 creal_add creal_mul cdrop f0 c$ f2 f3 creal_mul cdrop f1 c$ f2 f3 cF
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
