N Lp_ineqs_proofs.sol_hi
C |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!f. ((f IN (face_set (hypermap_of_fan (V , E)))) ==> ((real_le ((sol_fan (V , E)) f)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) pi))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * part cface_set chypermap_of_fan c, f0 f1 creal_le csol_fan c, f0 f1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D pair_INDUCT
A |- (!P. ((!x. (!y. (P (x , y)))) ==> (!p. (P p))))
T c==> ! ! * f0 c, b0 b1 ! * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D REAL_LE_MUL
A |- (!x. (!y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_EQ_IMP_LE
A |- (!x. (!y. ((x = y) ==> ((real_le x) y))))
T c==> c= f0 f1 creal_le f0 f1
D REAL_ABS_REFL
A |- (!x. (((real_abs x) = x) = ((real_le (real_of_num (NUMERAL _0))) x)))
T c= c= creal_abs f0 f0 creal_le creal_of_num cNUMERAL c_0 f0
D REAL_POW_LE
A |- (!x. (!n. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_pow x) n)))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 creal_pow f0 f1
D REAL_LE_DIV
A |- (!x. (!y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_div x) y)))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 creal_le creal_of_num cNUMERAL c_0 creal_div f0 f1
D INTER_COMM
A |- (!s. (!t. ((s INTER t) = (t INTER s))))
T c= * * part cINTER f0 f1 * * part cINTER f1 f0
D SUM_POS_BOUND
A |- (!f. (!b. (!s. (((FINITE s) /\ ((!x. ((x IN s) ==> ((real_le (real_of_num (NUMERAL _0))) (f x)))) /\ ((real_le ((sum s) f)) b))) ==> (!x. ((x IN s) ==> ((real_le (f x)) b)))))))
T c==> c/\ cFINITE f0 c/\ ! c==> cIN b0 f0 creal_le creal_of_num cNUMERAL c_0 * f1 b0 creal_le csum f0 f1 f2 ! c==> cIN b0 f0 creal_le * f1 b0 f2
D Sphere.eventually_radial
A |- (!C. (!x. (((eventually_radial x) C) = (?r. (((real_gt r) (real_of_num (NUMERAL _0))) /\ (((radial r) x) (C INTER (ball (x , r)))))))))
T c= ceventually_radial f0 f1 c? / c/\ creal_gt b0 creal_of_num cNUMERAL c_0 cradial b0 f0 * * part cINTER f1 * part cball c, f0 b0
D Vol1.VOLUME_PROPS_MEASURABLE
A |- (!C. ((measurable C) ==> ((real_ge (measure C)) (real_of_num (NUMERAL _0)))))
T c==> cmeasurable f0 creal_ge cmeasure f0 creal_of_num cNUMERAL c_0
D Vol1.sol_spec
A |- (!x. (!C. (!r. ((((real_gt r) (real_of_num (NUMERAL _0))) /\ ((measurable (C INTER (ball (x , r)))) /\ (((radial r) x) (C INTER (ball (x , r)))))) ==> (((sol x) C) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_div (measure (C INTER (ball (x , r))))) ((real_pow r) (NUMERAL (BIT1 (BIT1 _0)))))))))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 c/\ cmeasurable * * part cINTER f1 * part cball c, f2 f0 cradial f0 f2 * * part cINTER f1 * part cball c, f2 f0 c= csol f2 f1 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_div cmeasure * * part cINTER f1 * part cball c, f2 f0 creal_pow f0 cNUMERAL cBIT1 cBIT1 c_0
D Hypermap.lemma_in_face_set
A |- (!H. (!x. ((x IN (dart H)) = (((face H) x) IN (face_set H)))))
T c= cIN f0 * part cdart f1 cIN * * part cface f1 f0 * part cface_set f1
D Hypermap.lemma_face_representation
A |- (!H. (!u. ((u IN (face_set H)) ==> (?x. ((x IN (dart H)) /\ (u = ((face H) x)))))))
T c==> cIN f0 * part cface_set f1 c? / c/\ cIN b0 * part cdart f1 c= f0 * * part cface f1 b0
D Hypermap.FINITE_HYPERMAP_ORBITS
A |- (!H. ((FINITE (edge_set H)) /\ ((FINITE (node_set H)) /\ (FINITE (face_set H)))))
T c/\ cFINITE * part cedge_set f0 c/\ cFINITE * part cnode_set f0 cFINITE * part cface_set f0
D Hypermap_and_fan.COMPONENTS_HYPERMAP_OF_FAN
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((dart (hypermap_of_fan (V , E))) = (dart_of_fan (V , E))) /\ (((edge_map (hypermap_of_fan (V , E))) = (e_fan_pair_ext (V , E))) /\ (((node_map (hypermap_of_fan (V , E))) = (n_fan_pair_ext (V , E))) /\ ((face_map (hypermap_of_fan (V , E))) = (f_fan_pair_ext (V , E)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ c= * part cdart chypermap_of_fan c, f0 f1 * part cdart_of_fan c, f0 f1 c/\ c= * part cedge_map chypermap_of_fan c, f0 f1 * part ce_fan_pair_ext c, f0 f1 c/\ c= * part cnode_map chypermap_of_fan c, f0 f1 * part cn_fan_pair_ext c, f0 f1 c= * part cface_map chypermap_of_fan c, f0 f1 * part cf_fan_pair_ext c, f0 f1
D Conforming.conforming_solid_angle_fan
A |- (!x. (!V. (!E. ((conforming_solid_angle_fan (x , (V , E))) = (!f. ((f IN (face_set (hypermap1_of_fanx (x , (V , E))))) ==> ((LET (\U. (LET_END ((!r. (measurable ((ball (x , r)) INTER U))) /\ (((eventually_radial x) U) /\ (((sol x) U) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum f) (\y. ((real_sub (((((azim_fan x) V) E) (pr2 y)) (pr3 y))) pi)))))))))) ((((dartset_leads_into_fan x) V) E) f))))))))
T c= cconforming_solid_angle_fan c, f0 c, f1 f2 ! c==> cIN b0 * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 cLET / cLET_END c/\ ! cmeasurable * * part cINTER * part cball c, f0 b2 b1 c/\ ceventually_radial f0 b1 c= csol f0 b1 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum b0 / creal_sub cazim_fan f0 f1 f2 cpr2 b2 cpr3 b2 cpi * * * * part cdartset_leads_into_fan f0 f1 f2 b0
D Conforming.conforming_fan
A |- (!x. (!V. (!E. ((conforming_fan (x , (V , E))) = ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((conforming_bijection_fan (x , (V , E))) /\ ((conforming_half_space_fan (x , (V , E))) /\ ((conforming_solid_angle_fan (x , (V , E))) /\ (conforming_diagonal_fan (x , (V , E))))))))))))
T c= cconforming_fan c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cconforming_bijection_fan c, f0 c, f1 f2 c/\ cconforming_half_space_fan c, f0 c, f1 f2 c/\ cconforming_solid_angle_fan c, f0 c, f1 f2 cconforming_diagonal_fan c, f0 c, f1 f2
D Conforming.SUM_SOL_IN_FACE_SET_EQ_4PI
A |- (!x. (!V. (!E. (((FAN (x , (V , E))) /\ (conforming_fan (x , (V , E)))) ==> (((sum (face_set (hypermap1_of_fanx (x , (V , E))))) (\f. ((sol x) ((((dartset_leads_into_fan x) V) E) f)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) pi))))))
T c==> c/\ cFAN c, f0 c, f1 f2 cconforming_fan c, f0 c, f1 f2 c= csum * part cface_set chypermap1_of_fanx c, f0 c, f1 f2 / csol f0 * * * * part cdartset_leads_into_fan f0 f1 f2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cpi
D Ssrbool.andTb
A |- (!b. ((T /\ b) = b))
T c= c/\ cT f0 f0
D Hypermap_iso.hyp_iso_dart
A |- (!H. (!f. (!G. (((hyp_iso f) (H , G)) ==> (!x. ((x IN (dart H)) ==> ((f x) IN (dart G))))))))
T c==> chyp_iso f0 c, f1 f2 ! c==> cIN b0 * part cdart f1 cIN * f0 b0 * part cdart f2
D Hypermap_iso.iso_components
A |- (!G. (!f. (!H. (((hyp_iso f) (H , G)) ==> (!d. ((d IN (dart H)) ==> ((((node G) (f d)) = ((IMAGE f) ((node H) d))) /\ ((((face G) (f d)) = ((IMAGE f) ((face H) d))) /\ (((edge G) (f d)) = ((IMAGE f) ((edge H) d)))))))))))
T c==> chyp_iso f0 c, f1 f2 ! c==> cIN b0 * part cdart f1 c/\ c= * * part cnode f2 * f0 b0 * * part cIMAGE f0 * * part cnode f1 b0 c/\ c= * * part cface f2 * f0 b0 * * part cIMAGE f0 * * part cface f1 b0 c= * * part cedge f2 * f0 b0 * * part cIMAGE f0 * * part cedge f1 b0
D Hypermap_iso.hypermap_of_fan_rep_alt
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((dart (hypermap1_of_fanx ((vec (NUMERAL _0)) , (V , E)))) = (d_fan ((vec (NUMERAL _0)) , (V , E)))) /\ (((edge_map (hypermap1_of_fanx ((vec (NUMERAL _0)) , (V , E)))) = ((res (((e_fan (vec (NUMERAL _0))) V) E)) (d1_fan ((vec (NUMERAL _0)) , (V , E))))) /\ (((node_map (hypermap1_of_fanx ((vec (NUMERAL _0)) , (V , E)))) = ((res (((n_fan (vec (NUMERAL _0))) V) E)) (d1_fan ((vec (NUMERAL _0)) , (V , E))))) /\ ((face_map (hypermap1_of_fanx ((vec (NUMERAL _0)) , (V , E)))) = ((res (((f1_fan (vec (NUMERAL _0))) V) E)) (d1_fan ((vec (NUMERAL _0)) , (V , E)))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ c= * part cdart chypermap1_of_fanx c, cvec cNUMERAL c_0 c, f0 f1 * part cd_fan c, cvec cNUMERAL c_0 c, f0 f1 c/\ c= * part cedge_map chypermap1_of_fanx c, cvec cNUMERAL c_0 c, f0 f1 * * part cres * * * part ce_fan cvec cNUMERAL c_0 f0 f1 * part cd1_fan c, cvec cNUMERAL c_0 c, f0 f1 c/\ c= * part cnode_map chypermap1_of_fanx c, cvec cNUMERAL c_0 c, f0 f1 * * part cres * * * part cn_fan cvec cNUMERAL c_0 f0 f1 * part cd1_fan c, cvec cNUMERAL c_0 c, f0 f1 c= * part cface_map chypermap1_of_fanx c, cvec cNUMERAL c_0 c, f0 f1 * * part cres * * * part cf1_fan cvec cNUMERAL c_0 f0 f1 * part cd1_fan c, cvec cNUMERAL c_0 c, f0 f1
D Hypermap_iso.fan_hypermaps_iso_explicit
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((hyp_iso contracted_dart) ((hypermap1_of_fanx ((vec (NUMERAL _0)) , (V , E))) , (hypermap_of_fan (V , E)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 chyp_iso part ccontracted_dart c, chypermap1_of_fanx c, cvec cNUMERAL c_0 c, f0 f1 chypermap_of_fan c, f0 f1
D Hypermap_iso.fan_hypermaps_iso_explicit2
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((hyp_iso (ext_dart (V , E))) ((hypermap_of_fan (V , E)) , (hypermap1_of_fanx ((vec (NUMERAL _0)) , (V , E))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 chyp_iso * part cext_dart c, f0 f1 c, chypermap_of_fan c, f0 f1 chypermap1_of_fanx c, cvec cNUMERAL c_0 c, f0 f1
D Add_triangle.ext_contracted
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!d. ((d IN (d_fan ((vec (NUMERAL _0)) , (V , E)))) ==> (((ext_dart (V , E)) (contracted_dart d)) = d))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! c==> cIN b0 * part cd_fan c, cvec cNUMERAL c_0 c, f0 f1 c= cext_dart c, f0 f1 ccontracted_dart b0 b0
D Add_triangle.pair_expand
A |- (!p. (p = ((FST p) , (SND p))))
T c= f0 c, cFST f0 cSND f0
D Add_triangle.fully_surrounded_imp_conforming
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> (conforming_fan ((vec (NUMERAL _0)) , (V , E)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 cconforming_fan c, cvec cNUMERAL c_0 c, f0 f1
D Tame_lemmas.dart_leads_into_eq1
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> (!v. (!w. (((v , w) IN (dart_of_fan (V , E))) ==> ((((((dart_leads_into (vec (NUMERAL _0))) V) E) v) w) = ((((dartset_leads_into_fan (vec (NUMERAL _0))) V) E) ((IMAGE (ext_dart (V , E))) ((face (hypermap_of_fan (V , E))) (v , w))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 ! ! c==> cIN c, b0 b1 * part cdart_of_fan c, f0 f1 c= * * * * * part cdart_leads_into cvec cNUMERAL c_0 f0 f1 b0 b1 * * * * part cdartset_leads_into_fan cvec cNUMERAL c_0 f0 f1 * * part cIMAGE * part cext_dart c, f0 f1 * * part cface chypermap_of_fan c, f0 f1 c, b0 b1
D Tame_lemmas.fully_surrounded_sol
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> (!v. (!w. (((v , w) IN (dart_of_fan (V , E))) ==> (((sol (vec (NUMERAL _0))) (((((dart_leads_into (vec (NUMERAL _0))) V) E) v) w)) = ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((sum ((face (hypermap_of_fan (V , E))) (v , w))) (\x. ((real_sub ((azim_dart (V , E)) x)) pi))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 ! ! c==> cIN c, b0 b1 * part cdart_of_fan c, f0 f1 c= csol cvec cNUMERAL c_0 * * * * * part cdart_leads_into cvec cNUMERAL c_0 f0 f1 b0 b1 creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi csum * * part cface chypermap_of_fan c, f0 f1 c, b0 b1 / creal_sub cazim_dart c, f0 f1 b2 cpi
D Lp_ineqs_def.sol_fan
A |- (!f. (!V. (!E. (((sol_fan (V , E)) f) = (real_abs ((real_add ((sum f) (\x. ((real_sub ((azim_dart (V , E)) x)) pi)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)))))))
T c= csol_fan c, f0 f1 f2 creal_abs creal_add csum f2 / creal_sub cazim_dart c, f0 f1 b0 cpi creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi
