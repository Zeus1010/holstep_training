N ARC_SUBPATH_EQ
C |- (!g. (!u. (!v. ((arc (((subpath u) v) g)) = ((path (((subpath u) v) g)) /\ ((~ (u = v)) /\ (!x. (!y. (((x IN (closed_segment ((CONS (u , v)) NIL))) /\ ((y IN (closed_segment ((CONS (u , v)) NIL))) /\ ((g x) = (g y)))) ==> (x = y))))))))))
T c= carc * * * part csubpath f0 f1 f2 c/\ cpath * * * part csubpath f0 f1 f2 c/\ c~ c= f0 f1 ! ! c==> c/\ cIN b0 * part cclosed_segment cCONS c, f0 f1 cNIL c/\ cIN b1 * part cclosed_segment cCONS c, f0 f1 cNIL c= * f2 b0 * f2 b1 c= b0 b1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D BIT0
A |- (!n. ((BIT0 n) = (n + n)))
T c= cBIT0 f0 c+ f0 f0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D EQ_MULT_LCANCEL
A |- (!m. (!n. (!p. (((m * n) = (m * p)) = ((m = (NUMERAL _0)) \/ (n = p))))))
T c= c= c* f0 f1 c* f0 f2 c\/ c= f0 cNUMERAL c_0 c= f1 f2
D MULT_2
A |- (!n. (((NUMERAL (BIT0 (BIT1 _0))) * n) = (n + n)))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 f0 c+ f0 f0
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D LE_ADD
A |- (!m. (!n. (m <= (m + n))))
T c<= f0 c+ f0 f1
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D ARITH_EQ
A |- ((!m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) /\ (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))))
T c/\ ! ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D real_div
A |- (!x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y)))))
T c= creal_div f0 f1 creal_mul f0 creal_inv f1
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D Real_ext.REAL_SV_LMUL_0
A |- (!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))))
T c= creal_mul creal_of_num cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_LT_01
A |- ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))
T creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
D REAL_DIV_1
A |- (!x. (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D DECIMAL
A |- (!x. (!y. (((DECIMAL x) y) = ((real_div (real_of_num x)) (real_of_num y)))))
T c= cDECIMAL f0 f1 creal_div creal_of_num f0 creal_of_num f1
D RAT_LEMMA4
A |- ((((real_lt (real_of_num (NUMERAL _0))) y1) /\ ((real_lt (real_of_num (NUMERAL _0))) y2)) ==> (((real_le ((real_div x1) y1)) ((real_div x2) y2)) = ((real_le ((real_mul x1) y2)) ((real_mul x2) y1))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_le creal_div f2 f0 creal_div f3 f1 creal_le creal_mul f2 f1 creal_mul f3 f0
D RAT_LEMMA5
A |- ((((real_lt (real_of_num (NUMERAL _0))) y1) /\ ((real_lt (real_of_num (NUMERAL _0))) y2)) ==> ((((real_div x1) y1) = ((real_div x2) y2)) = (((real_mul x1) y2) = ((real_mul x2) y1))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= c= creal_div f2 f0 creal_div f3 f1 c= creal_mul f2 f1 creal_mul f3 f0
D FORALL_IN_IMAGE
A |- (!f. (!s. ((!y. ((y IN ((IMAGE f) s)) ==> (P y))) = (!x. ((x IN s) ==> (P (f x)))))))
T c= ! c==> cIN b0 * * part cIMAGE f0 f1 * f2 b0 ! c==> cIN b0 f1 * f2 * f0 b0
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_sub
A |- (!x. (!y. (((vector_sub x) y) = (lambdai. ((real_sub (x $ i)) (y $ i))))))
T c= cvector_sub f0 f1 clambda / creal_sub c$ f0 b0 c$ f1 b0
D vector_mul
A |- (!c. (!x. (((% c) x) = (lambdai. ((real_mul c) (x $ i))))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
D vec
A |- (!n. ((vec n) = (lambdai. (real_of_num n))))
T c= cvec f0 clambda / creal_of_num f0
D VECTOR_SUB_REFL
A |- (!x. (((vector_sub x) x) = (vec (NUMERAL _0))))
T c= cvector_sub f0 f0 cvec cNUMERAL c_0
D VECTOR_SUB_EQ
A |- (!x. (!y. ((((vector_sub x) y) = (vec (NUMERAL _0))) = (x = y))))
T c= c= cvector_sub f0 f1 cvec cNUMERAL c_0 c= f0 f1
D VECTOR_MUL_LZERO
A |- (!x. (((% (real_of_num (NUMERAL _0))) x) = (vec (NUMERAL _0))))
T c= c% creal_of_num cNUMERAL c_0 f0 cvec cNUMERAL c_0
D VECTOR_MUL_EQ_0
A |- (!a. (!x. ((((% a) x) = (vec (NUMERAL _0))) = ((a = (real_of_num (NUMERAL _0))) \/ (x = (vec (NUMERAL _0)))))))
T c= c= c% f0 f1 cvec cNUMERAL c_0 c\/ c= f0 creal_of_num cNUMERAL c_0 c= f1 cvec cNUMERAL c_0
D LIFT_DROP
A |- ((!x. ((lift (drop x)) = x)) /\ (!x. ((drop (lift x)) = x)))
T c/\ ! c= clift cdrop b0 b0 ! c= cdrop clift b0 b0
D DROP_EQ
A |- (!x. (!y. (((drop x) = (drop y)) = (x = y))))
T c= c= cdrop f0 cdrop f1 c= f0 f1
D DROP_VEC
A |- (!n. ((drop (vec n)) = (real_of_num n)))
T c= cdrop cvec f0 creal_of_num f0
D DROP_EQ_0
A |- (!x. (((drop x) = (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0)))))
T c= c= cdrop f0 creal_of_num cNUMERAL c_0 c= f0 cvec cNUMERAL c_0
D IN_INTERVAL_1
A |- (!a. (!b. (!x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b))))))))
T c/\ c= cIN f0 * part cclosed_interval cCONS c, f1 f2 cNIL c/\ creal_le cdrop f1 cdrop f0 creal_le cdrop f0 cdrop f2 c= cIN f0 * part copen_interval c, f1 f2 c/\ creal_lt cdrop f1 cdrop f0 creal_lt cdrop f0 cdrop f2
D arc
A |- (!g. ((arc g) = ((path g) /\ (!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((g x) = (g y)))) ==> (x = y)))))))
T c= carc f0 c/\ cpath f0 ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b0 * f0 b1 c= b0 b1
D subpath
A |- (!g. (!v. (!u. ((((subpath u) v) g) = (\x. (g ((vector_add u) ((% (drop ((vector_sub v) u))) x))))))))
T c= * * * part csubpath f0 f1 f2 / * f2 cvector_add f0 c% cdrop cvector_sub f1 f0 b0
D SUBPATH_SCALING_LEMMA
A |- (!u. (!v. (((IMAGE (\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = (closed_segment ((CONS (u , v)) NIL)))))
T c= * * part cIMAGE / cvector_add f0 c% cdrop cvector_sub f1 f0 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL * part cclosed_segment cCONS c, f0 f1 cNIL
+ |- ((!i. ((P i) ==> (Q i))) ==> ((!i. (P i)) ==> (!i. (Q i))))
T c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
- ((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0
+ |- (((((% a) ((vector_sub x) y)) = (vec (NUMERAL _0))) ==> (((vector_add u) ((% a) x)) = ((vector_add u) ((% a) y)))) = (((((vector_add u) ((% a) x)) = ((vector_add u) ((% a) y))) ==> (((% a) ((vector_sub x) y)) = (vec (NUMERAL _0)))) /\ ((((% a) ((vector_sub x) y)) = (vec (NUMERAL _0))) ==> (((vector_add u) ((% a) x)) = ((vector_add u) ((% a) y))))))
T c= c==> c= c% f0 cvector_sub f1 f2 cvec cNUMERAL c_0 c= cvector_add f3 c% f0 f1 cvector_add f3 c% f0 f2 c/\ c==> c= cvector_add f3 c% f0 f1 cvector_add f3 c% f0 f2 c= c% f0 cvector_sub f1 f2 cvec cNUMERAL c_0 c==> c= c% f0 cvector_sub f1 f2 cvec cNUMERAL c_0 c= cvector_add f3 c% f0 f1 cvector_add f3 c% f0 f2
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
- ((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i)))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0
+ |- (((!g. (!v. (!u. ((((subpath u) v) g) = (\x. (g ((vector_add u) ((% (drop ((vector_sub v) u))) x)))))))) ==> ((\g. (!v. (!u. ((((subpath u) v) g) = (\x. (g ((vector_add u) ((% (drop ((vector_sub v) u))) x)))))))) g)) = ((\g. (!v. (!u. ((((subpath u) v) g) = (\x. (g ((vector_add u) ((% (drop ((vector_sub v) u))) x)))))))) g))
T c= c==> ! ! ! c= * * * part csubpath b2 b1 b0 / * b0 cvector_add b2 c% cdrop cvector_sub b1 b2 b3 * / ! ! c= * * * part csubpath b2 b1 b0 / * b0 cvector_add b2 c% cdrop cvector_sub b1 b2 b3 f0 * / ! ! c= * * * part csubpath b2 b1 b0 / * b0 cvector_add b2 c% cdrop cvector_sub b1 b2 b3 f0
- ((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i)))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0
+ |- (((NUMERAL _0) < (NUMERAL (BIT0 (BIT1 _0)))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 cT
- ((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i)))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i)))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0
+ |- ((~ ((((real_le (real_of_num (NUMERAL _0))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((real_le ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) /\ ((real_le ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) = ((((lift ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((lift ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((lift ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (lift ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> F))
T c= c~ c==> c/\ creal_le creal_of_num cNUMERAL c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_le creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c==> cIN clift creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN clift creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= clift creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 clift creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
- |- (((!x. ((lift (drop x)) = x)) ==> ((\x. ((lift (drop x)) = x)) x)) = ((\x. ((lift (drop x)) = x)) x))
T c= c==> ! c= clift cdrop b0 b0 * / c= clift cdrop b0 b0 f0 * / c= clift cdrop b0 b0 f0
+ |- ((\x. (((% (real_of_num (NUMERAL _0))) x) = (vec (NUMERAL _0)))) x)
T * / c= c% creal_of_num cNUMERAL c_0 b0 cvec cNUMERAL c_0 f0
+ |- ((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add u) ((% a) x)) $ i) = (((vector_add u) ((% a) y)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% a) ((vector_sub x) y)) $ i) = ((vec (NUMERAL _0)) $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add u) ((% a) x)) $ i) = (((vector_add u) ((% a) y)) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% a) ((vector_sub x) y)) $ i) = ((vec (NUMERAL _0)) $ i))))))
T c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f0 c% f1 f2 b0 c$ cvector_add f0 c% f1 f3 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% f1 cvector_sub f2 f3 b0 c$ cvec cNUMERAL c_0 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f0 c% f1 f2 b0 c$ cvector_add f0 c% f1 f3 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% f1 cvector_sub f2 f3 b0 c$ cvec cNUMERAL c_0 b0
+ |- (!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% a) ((vector_sub x) y)) $ i) = ((vec (NUMERAL _0)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add u) ((% a) x)) $ i) = (((vector_add u) ((% a) y)) $ i)))))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% f1 cvector_sub f2 f3 f0 c$ cvec cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f4 c% f1 f2 f0 c$ cvector_add f4 c% f1 f3 f0
+ |- ((!x. (!y. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) y)))))) ==> (x = y)))) = ((~ (u = v)) /\ (!x. (!y. (((x IN ((IMAGE (\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((y IN ((IMAGE (\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((g x) = (g y)))) ==> (x = y))))))
T c= ! ! c==> c/\ cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 cvector_add f1 c% cdrop cvector_sub f2 f1 b0 * f0 cvector_add f1 c% cdrop cvector_sub f2 f1 b1 c= b0 b1 c/\ c~ c= f1 f2 ! ! c==> c/\ cIN b0 * * part cIMAGE / cvector_add f1 c% cdrop cvector_sub f2 f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN b1 * * part cIMAGE / cvector_add f1 c% cdrop cvector_sub f2 f1 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f0 b0 * f0 b1 c= b0 b1
+ |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
+ |- (((!x. ((drop (lift x)) = x)) ==> ((\x. ((drop (lift x)) = x)) x)) = ((\x. ((drop (lift x)) = x)) x))
T c= c==> ! c= cdrop clift b0 b0 * / c= cdrop clift b0 b0 f0 * / c= cdrop clift b0 b0 f0
+ |- (T = (~ ((((real_le (real_of_num (NUMERAL _0))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((real_le ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) /\ ((real_le ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))
T c= cT c~ c==> c/\ creal_le creal_of_num cNUMERAL c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_le creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((% a) ((vector_sub x) y)) $ i) = ((vec (NUMERAL _0)) $ i)) ==> ((((vector_add u) ((% a) x)) $ i) = (((vector_add u) ((% a) y)) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ c% f1 cvector_sub f2 f3 f0 c$ cvec cNUMERAL c_0 f0 c= c$ cvector_add f4 c% f1 f2 f0 c$ cvector_add f4 c% f1 f3 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ |- (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!y. ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (x = y)))) = (!y. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (x = y)))))
T c= c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= f0 b0 ! c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= f0 b0
+ |- ((!v. ((arc (((subpath u) v) g)) = ((path (((subpath u) v) g)) /\ ((~ (u = v)) /\ (!x. (!y. (((x IN (closed_segment ((CONS (u , v)) NIL))) /\ ((y IN (closed_segment ((CONS (u , v)) NIL))) /\ ((g x) = (g y)))) ==> (x = y)))))))) = T)
T c= ! c= carc * * * part csubpath f0 b0 f1 c/\ cpath * * * part csubpath f0 b0 f1 c/\ c~ c= f0 b0 ! ! c==> c/\ cIN b1 * part cclosed_segment cCONS c, f0 b0 cNIL c/\ cIN b2 * part cclosed_segment cCONS c, f0 b0 cNIL c= * f1 b1 * f1 b2 c= b1 b2 cT
+ (~ ((((real_add (u $ i)) ((real_mul a) (x $ i))) = ((real_add (u $ i)) ((real_mul a) (y $ i)))) ==> (((real_mul a) ((real_sub (x $ i)) (y $ i))) = (real_of_num (NUMERAL _0))))) |- ((~ ((((real_add (u $ i)) ((real_mul a) (x $ i))) = ((real_add (u $ i)) ((real_mul a) (y $ i)))) ==> (((real_mul a) ((real_sub (x $ i)) (y $ i))) = (real_of_num (NUMERAL _0))))) /\ F)
T c==> c~ c==> c= creal_add c$ f0 f1 creal_mul f2 c$ f3 f1 creal_add c$ f0 f1 creal_mul f2 c$ f4 f1 c= creal_mul f2 creal_sub c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 c/\ c~ c==> c= creal_add c$ f0 f1 creal_mul f2 c$ f3 f1 creal_add c$ f0 f1 creal_mul f2 c$ f4 f1 c= creal_mul f2 creal_sub c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0 cF
- |- (((real_gt ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) (real_of_num (NUMERAL _0)))) |- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- (~ (!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!y. ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub u) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub u) u))) y)))) ==> (x = y)))))))
T c~ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f0 cvector_add f1 c% cdrop cvector_sub f1 f1 b0 * f0 cvector_add f1 c% cdrop cvector_sub f1 f1 b1 c= b0 b1
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% a) ((vector_sub x) y)) $ i) = ((vec (NUMERAL _0)) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add u) ((% a) x)) $ i) = (((vector_add u) ((% a) y)) $ i))))) = ((((% a) ((vector_sub x) y)) = (vec (NUMERAL _0))) ==> (((vector_add u) ((% a) x)) = ((vector_add u) ((% a) y)))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% f0 cvector_sub f1 f2 b0 c$ cvec cNUMERAL c_0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f3 c% f0 f1 b0 c$ cvector_add f3 c% f0 f2 b0 c==> c= c% f0 cvector_sub f1 f2 cvec cNUMERAL c_0 c= cvector_add f3 c% f0 f1 cvector_add f3 c% f0 f2
+ |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
+ |- ((!x. ((x IN ((IMAGE (\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> (!x'. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g x) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x')))) ==> (x = ((vector_add u) ((% (drop ((vector_sub v) u))) x')))))))) = (!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x'. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x))) x)) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x')))) ==> (((\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x))) x) = ((vector_add u) ((% (drop ((vector_sub v) u))) x')))))))))
T c= ! c==> cIN b0 * * part cIMAGE / cvector_add f0 c% cdrop cvector_sub f1 f0 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 b0 * f2 cvector_add f0 c% cdrop cvector_sub f1 f0 b1 c= b0 cvector_add f0 c% cdrop cvector_sub f1 f0 b1 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 * / cvector_add f0 c% cdrop cvector_sub f1 f0 b2 b0 * f2 cvector_add f0 c% cdrop cvector_sub f1 f0 b1 c= * / cvector_add f0 c% cdrop cvector_sub f1 f0 b2 b0 cvector_add f0 c% cdrop cvector_sub f1 f0 b1
- ((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0
+ |- ((\u. (!v. ((closed_segment ((CONS (u , v)) NIL)) = ((IMAGE (\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))))) u)
T * / ! c= * part cclosed_segment cCONS c, b0 b1 cNIL * * part cIMAGE / cvector_add b0 c% cdrop cvector_sub b1 b0 b2 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((((real_mul a) ((real_sub (x $ i)) (y $ i))) = (real_of_num (NUMERAL _0))) ==> (((real_add (u $ i)) ((real_mul a) (x $ i))) = ((real_add (u $ i)) ((real_mul a) (y $ i))))) = ((((lambdai. ((real_mul a) ((lambdai. ((real_sub (x $ i)) (y $ i))) $ i))) $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i)) ==> (((lambdai. ((real_add (u $ i)) ((lambdai. ((real_mul a) (x $ i))) $ i))) $ i) = ((lambdai. ((real_add (u $ i)) ((lambdai. ((real_mul a) (y $ i))) $ i))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c= creal_mul f1 creal_sub c$ f2 f0 c$ f3 f0 creal_of_num cNUMERAL c_0 c= creal_add c$ f4 f0 creal_mul f1 c$ f2 f0 creal_add c$ f4 f0 creal_mul f1 c$ f3 f0 c==> c= c$ clambda / creal_mul f1 c$ clambda / creal_sub c$ f2 b1 c$ f3 b1 b0 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0 c= c$ clambda / creal_add c$ f4 b0 c$ clambda / creal_mul f1 c$ f2 b1 b0 f0 c$ clambda / creal_add c$ f4 b0 c$ clambda / creal_mul f1 c$ f3 b1 b0 f0
+ |- (~ ((((real_le (real_of_num (NUMERAL _0))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) /\ ((real_le ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((((real_le (real_of_num (NUMERAL _0))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) /\ ((real_le ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))
T c~ c==> c/\ creal_le creal_of_num cNUMERAL c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_le creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ ((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i)))) ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0
+ |- (((((vector_add u) ((% a) x)) = ((vector_add u) ((% a) y))) ==> (((% a) ((vector_sub x) y)) = (vec (NUMERAL _0)))) /\ ((((% a) ((vector_sub x) y)) = (vec (NUMERAL _0))) ==> (((vector_add u) ((% a) x)) = ((vector_add u) ((% a) y)))))
T c/\ c==> c= cvector_add f0 c% f1 f2 cvector_add f0 c% f1 f3 c= c% f1 cvector_sub f2 f3 cvec cNUMERAL c_0 c==> c= c% f1 cvector_sub f2 f3 cvec cNUMERAL c_0 c= cvector_add f0 c% f1 f2 cvector_add f0 c% f1 f3
+ |- (((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i)))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 cF
+ ((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((lambdai. ((real_add (u $ i)) ((lambdai. ((real_mul a) (x $ i))) $ i))) $ i) = ((lambdai. ((real_add (u $ i)) ((lambdai. ((real_mul a) (y $ i))) $ i))) $ i)) ==> (((lambdai. ((real_mul a) ((lambdai. ((real_sub (x $ i)) (y $ i))) $ i))) $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_add c$ f1 b0 c$ clambda / creal_mul f2 c$ f3 b1 b0 f0 c$ clambda / creal_add c$ f1 b0 c$ clambda / creal_mul f2 c$ f4 b1 b0 f0 c= c$ clambda / creal_mul f2 c$ clambda / creal_sub c$ f3 b1 c$ f4 b1 b0 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- ((\y. ((((vector_sub x) y) = (vec (NUMERAL _0))) = (x = y))) y)
T * / c= c= cvector_sub f0 b0 cvec cNUMERAL c_0 c= f0 b0 f1
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add u) ((% a) x)) $ i) = (((vector_add u) ((% a) y)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% a) ((vector_sub x) y)) $ i) = ((vec (NUMERAL _0)) $ i)))) = T)
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f1 c% f2 f3 f0 c$ cvector_add f1 c% f2 f4 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% f2 cvector_sub f3 f4 f0 c$ cvec cNUMERAL c_0 f0 cT
- ((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0
+ |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (((!x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b)))))) ==> ((\x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b)))))) x)) = ((\x. (((x IN (closed_interval ((CONS (a , b)) NIL))) = (((real_le (drop a)) (drop x)) /\ ((real_le (drop x)) (drop b)))) /\ ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b)))))) x))
T c= c==> ! c/\ c= cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL c/\ creal_le cdrop f0 cdrop b0 creal_le cdrop b0 cdrop f1 c= cIN b0 * part copen_interval c, f0 f1 c/\ creal_lt cdrop f0 cdrop b0 creal_lt cdrop b0 cdrop f1 * / c/\ c= cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL c/\ creal_le cdrop f0 cdrop b0 creal_le cdrop b0 cdrop f1 c= cIN b0 * part copen_interval c, f0 f1 c/\ creal_lt cdrop f0 cdrop b0 creal_lt cdrop b0 cdrop f1 f2 * / c/\ c= cIN b0 * part cclosed_interval cCONS c, f0 f1 cNIL c/\ creal_le cdrop f0 cdrop b0 creal_le cdrop b0 cdrop f1 c= cIN b0 * part copen_interval c, f0 f1 c/\ creal_lt cdrop f0 cdrop b0 creal_lt cdrop b0 cdrop f1 f2
+ |- (((!P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) ==> ((\P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) P)) = ((\P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) P))
T c= c==> ! ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 * / ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 f0 * / ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 f0
+ |- ((drop (lift x)) = x)
T c= cdrop clift f0 f0
+ (v = u) |- ((~ (!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!y. ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub u) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub u) u))) y)))) ==> (x = y))))))) = ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!y. ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) y)))) ==> (x = y)))))) = ((~ (u = v)) /\ (!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x'. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x')))) ==> ((v = u) \/ (x = x'))))))))))
T c==> c= f0 f1 c= c~ ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 cvector_add f1 c% cdrop cvector_sub f1 f1 b0 * f2 cvector_add f1 c% cdrop cvector_sub f1 f1 b1 c= b0 b1 c= ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b0 * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b1 c= b0 b1 c/\ c~ c= f1 f0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b0 * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b1 c\/ c= f0 f1 c= b0 b1
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_add u) ((% a) x)) $ i) = (((vector_add u) ((% a) y)) $ i)) ==> ((((% a) ((vector_sub x) y)) $ i) = ((vec (NUMERAL _0)) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ cvector_add f1 c% f2 f3 f0 c$ cvector_add f1 c% f2 f4 f0 c= c$ c% f2 cvector_sub f3 f4 f0 c$ cvec cNUMERAL c_0 f0
+ (!x. (!y. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (x = y))))) |- (((!y. (((lift ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((lift ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = y)))) ==> ((\y. (((lift ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((lift ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = y)))) (lift ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) = ((\y. (((lift ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> ((lift ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = y)))) (lift ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))
T c==> ! ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= b0 b1 c= c==> ! c==> cIN clift creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= clift creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 * / c==> cIN clift creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= clift creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 clift creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / c==> cIN clift creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= clift creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 clift creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- ((\x. (!y. ((((vector_sub x) y) = (vec (NUMERAL _0))) = (x = y)))) x)
T * / ! c= c= cvector_sub b0 b1 cvec cNUMERAL c_0 c= b0 b1 f0
+ ((~ (v = u)) ==> ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!y. ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) y)))) ==> (x = y)))))) = ((~ (u = v)) /\ (!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x'. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x')))) ==> ((v = u) \/ (x = x')))))))))) |- ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!y. ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) y)))) ==> (x = y)))))) = ((~ (u = v)) /\ (!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x'. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x')))) ==> ((v = u) \/ (x = x')))))))))
T c==> c==> c~ c= f0 f1 c= ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b0 * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b1 c= b0 b1 c/\ c~ c= f1 f0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b0 * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b1 c\/ c= f0 f1 c= b0 b1 c= ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b0 * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b1 c= b0 b1 c/\ c~ c= f1 f0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b0 * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b1 c\/ c= f0 f1 c= b0 b1
+ |- ((((real_add (u $ i)) ((real_mul a) (x $ i))) = ((real_add (u $ i)) ((real_mul a) (y $ i)))) ==> (((real_mul a) ((real_sub (x $ i)) (y $ i))) = (real_of_num (NUMERAL _0))))
T c==> c= creal_add c$ f0 f1 creal_mul f2 c$ f3 f1 creal_add c$ f0 f1 creal_mul f2 c$ f4 f1 c= creal_mul f2 creal_sub c$ f3 f1 c$ f4 f1 creal_of_num cNUMERAL c_0
+ |- (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = T)
T c= c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cT
+ (((drop x) = (drop y)) = (x = y)) |- ((x = y) = ((drop x) = (drop y)))
T c==> c= c= cdrop f0 cdrop f1 c= f0 f1 c= c= f0 f1 c= cdrop f0 cdrop f1
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ ((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- (((!y. ((x = y) = ((drop x) = (drop y)))) ==> ((\y. ((x = y) = ((drop x) = (drop y)))) y)) = ((\y. ((x = y) = ((drop x) = (drop y)))) y))
T c= c==> ! c= c= f0 b0 c= cdrop f0 cdrop b0 * / c= c= f0 b0 c= cdrop f0 cdrop b0 f1 * / c= c= f0 b0 c= cdrop f0 cdrop b0 f1
+ |- ((x = y) = ((drop x) = (drop y)))
T c= c= f0 f1 c= cdrop f0 cdrop f1
+ |- ((~ (v = u)) ==> ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!y. ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) y)))) ==> (x = y)))))) = ((~ (u = v)) /\ (!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x'. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x')))) ==> ((v = u) \/ (x = x'))))))))))
T c==> c~ c= f0 f1 c= ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b0 * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b1 c= b0 b1 c/\ c~ c= f1 f0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b0 * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b1 c\/ c= f0 f1 c= b0 b1
+ |- ((\t. (t \/ (~ t))) (v = u))
T * / c\/ b0 c~ b0 c= f0 f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- ((\g. (!v. (!u. ((((subpath u) v) g) = (\x. (g ((vector_add u) ((% (drop ((vector_sub v) u))) x)))))))) g)
T * / ! ! c= * * * part csubpath b2 b1 b0 / * b0 cvector_add b2 c% cdrop cvector_sub b1 b2 b3 f0
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
+ |- (((!a. (!x. ((((% a) x) = (vec (NUMERAL _0))) = ((a = (real_of_num (NUMERAL _0))) \/ (x = (vec (NUMERAL _0))))))) ==> ((\a. (!x. ((((% a) x) = (vec (NUMERAL _0))) = ((a = (real_of_num (NUMERAL _0))) \/ (x = (vec (NUMERAL _0))))))) a)) = ((\a. (!x. ((((% a) x) = (vec (NUMERAL _0))) = ((a = (real_of_num (NUMERAL _0))) \/ (x = (vec (NUMERAL _0))))))) a))
T c= c==> ! ! c= c= c% b0 b1 cvec cNUMERAL c_0 c\/ c= b0 creal_of_num cNUMERAL c_0 c= b1 cvec cNUMERAL c_0 * / ! c= c= c% b0 b1 cvec cNUMERAL c_0 c\/ c= b0 creal_of_num cNUMERAL c_0 c= b1 cvec cNUMERAL c_0 f0 * / ! c= c= c% b0 b1 cvec cNUMERAL c_0 c\/ c= b0 creal_of_num cNUMERAL c_0 c= b1 cvec cNUMERAL c_0 f0
+ ((~ (v = u)) ==> ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!y. ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) y)))) ==> (x = y)))))) = ((~ (u = v)) /\ (!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x'. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x')))) ==> ((v = u) \/ (x = x')))))))))), ((v = u) ==> ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!y. ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) y)))) ==> (x = y)))))) = ((~ (u = v)) /\ (!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x'. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x')))) ==> ((v = u) \/ (x = x')))))))))) |- ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!y. ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) y)))) ==> (x = y)))))) = ((~ (u = v)) /\ (!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x'. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x')))) ==> ((v = u) \/ (x = x')))))))))
T c==> c==> c~ c= f0 f1 c= ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b0 * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b1 c= b0 b1 c/\ c~ c= f1 f0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b0 * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b1 c\/ c= f0 f1 c= b0 b1 c==> c==> c= f0 f1 c= ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b0 * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b1 c= b0 b1 c/\ c~ c= f1 f0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b0 * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b1 c\/ c= f0 f1 c= b0 b1 c= ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b0 * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b1 c= b0 b1 c/\ c~ c= f1 f0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b0 * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b1 c\/ c= f0 f1 c= b0 b1
- ((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i)))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i)))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((!x'. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!y. ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x'))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) y)))) ==> (x' = y)))))) = ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x. (!y. ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) y)))) ==> (x = y)))))))
T c= ! c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 b0 * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 b1 c= b0 b1 c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 b0 * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 b1 c= b0 b1
+ |- ((v = u) ==> ((!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!y. ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) y)))) ==> (x = y)))))) = ((~ (u = v)) /\ (!x. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x'. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x')))) ==> ((v = u) \/ (x = x'))))))))))
T c==> c= f0 f1 c= ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b0 * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b1 c= b0 b1 c/\ c~ c= f1 f0 ! c==> cIN b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b0 * f2 cvector_add f1 c% cdrop cvector_sub f0 f1 b1 c\/ c= f0 f1 c= b0 b1
- ((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i)))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!x'. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x''. ((x'' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x'))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x'')))) ==> (((vector_add u) ((% (drop ((vector_sub v) u))) x')) = ((vector_add u) ((% (drop ((vector_sub v) u))) x'')))))))) = ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x. (!x'. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x')))) ==> (((vector_add u) ((% (drop ((vector_sub v) u))) x)) = ((vector_add u) ((% (drop ((vector_sub v) u))) x')))))))))
T c= ! c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 b0 * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 b1 c= cvector_add f2 c% cdrop cvector_sub f3 f2 b0 cvector_add f2 c% cdrop cvector_sub f3 f2 b1 c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 b0 * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 b1 c= cvector_add f2 c% cdrop cvector_sub f3 f2 b0 cvector_add f2 c% cdrop cvector_sub f3 f2 b1
- |- ((!x''. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g x) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x'')))) ==> (x = ((vector_add u) ((% (drop ((vector_sub v) u))) x'')))))) = ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x'. (((g x) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x')))) ==> (x = ((vector_add u) ((% (drop ((vector_sub v) u))) x')))))))
T c= ! c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f1 f2 * f1 cvector_add f3 c% cdrop cvector_sub f4 f3 b0 c= f2 cvector_add f3 c% cdrop cvector_sub f4 f3 b0 c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> c= * f1 f2 * f1 cvector_add f3 c% cdrop cvector_sub f4 f3 b0 c= f2 cvector_add f3 c% cdrop cvector_sub f4 f3 b0
- ((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i)))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i)))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i)))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!y'. (((x IN ((IMAGE (\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((y IN ((IMAGE (\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((g x) = (g y)))) ==> (x = y'))) = (((x IN ((IMAGE (\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((y IN ((IMAGE (\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x)))) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) /\ ((g x) = (g y)))) ==> (!y. (x = y))))
T c= ! c==> c/\ cIN f0 * * part cIMAGE / cvector_add f1 c% cdrop cvector_sub f2 f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f3 * * part cIMAGE / cvector_add f1 c% cdrop cvector_sub f2 f1 b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 f0 * f4 f3 c= f0 b0 c==> c/\ cIN f0 * * part cIMAGE / cvector_add f1 c% cdrop cvector_sub f2 f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f3 * * part cIMAGE / cvector_add f1 c% cdrop cvector_sub f2 f1 b0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f4 f0 * f4 f3 ! c= f0 b0
- |- ((!y'. (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) y)))))) ==> (x = y'))) = (((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) /\ ((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) y)))))) ==> (!y. (x = y))))
T c= ! c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 cvector_add f3 c% cdrop cvector_sub f4 f3 f0 * f2 cvector_add f3 c% cdrop cvector_sub f4 f3 f1 c= f0 b0 c==> c/\ cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c/\ cIN f1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= * f2 cvector_add f3 c% cdrop cvector_sub f4 f3 f0 * f2 cvector_add f3 c% cdrop cvector_sub f4 f3 f1 ! c= f0 b0
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\x. ((lift (drop x)) = x)) x)
T * / c= clift cdrop b0 b0 f0
- ((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i)))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i)))) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i)))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0
- |- ((x IN (open_interval (a , b))) = (((real_lt (drop a)) (drop x)) /\ ((real_lt (drop x)) (drop b))))
T c= cIN f0 * part copen_interval c, f1 f2 c/\ creal_lt cdrop f1 cdrop f0 creal_lt cdrop f0 cdrop f2
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((!x''. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x'')))) ==> (((vector_add u) ((% (drop ((vector_sub v) u))) x)) = ((vector_add u) ((% (drop ((vector_sub v) u))) x'')))))) = ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x'. (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x')))) ==> (((vector_add u) ((% (drop ((vector_sub v) u))) x)) = ((vector_add u) ((% (drop ((vector_sub v) u))) x')))))))
T c= ! c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 f4 * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 b0 c= cvector_add f2 c% cdrop cvector_sub f3 f2 f4 cvector_add f2 c% cdrop cvector_sub f3 f2 b0 c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> c= * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 f4 * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 b0 c= cvector_add f2 c% cdrop cvector_sub f3 f2 f4 cvector_add f2 c% cdrop cvector_sub f3 f2 b0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((vector_add u) ((% a) x)) = ((vector_add u) ((% a) y))) |- ((((vector_add u) ((% a) x)) = ((vector_add u) ((% a) y))) /\ (((% a) ((vector_sub x) y)) = (vec (NUMERAL _0))))
T c==> c= cvector_add f0 c% f1 f2 cvector_add f0 c% f1 f3 c/\ c= cvector_add f0 c% f1 f2 cvector_add f0 c% f1 f3 c= c% f1 cvector_sub f2 f3 cvec cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i)))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!y'. ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) y')))) ==> (x = y')))) = ((y IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!y. (((g ((vector_add u) ((% (drop ((vector_sub v) u))) x))) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) y)))) ==> (x = y)))))
T c= ! c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 f4 * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 b0 c= f4 b0 c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> c= * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 f4 * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 b0 c= f4 b0
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_inv (real_of_num n)) = ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num n)))
T c= creal_inv creal_of_num f0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num f0
- ((((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i)))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (x $ i)))) ((real_mul a) (y $ i)))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add ((real_mul a) (x $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) (y $ i))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul f0 c$ f1 f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!x'. ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x''. ((x'' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x))) x')) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x'')))) ==> (((\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x))) x') = ((vector_add u) ((% (drop ((vector_sub v) u))) x'')))))))) = ((x IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x. (!x'. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x))) x)) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x')))) ==> (((\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x))) x) = ((vector_add u) ((% (drop ((vector_sub v) u))) x')))))))))
T c= ! c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f1 * / cvector_add f2 c% cdrop cvector_sub f3 f2 b2 b0 * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 b1 c= * / cvector_add f2 c% cdrop cvector_sub f3 f2 b2 b0 cvector_add f2 c% cdrop cvector_sub f3 f2 b1 c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! ! c==> cIN b1 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f1 * / cvector_add f2 c% cdrop cvector_sub f3 f2 b2 b0 * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 b1 c= * / cvector_add f2 c% cdrop cvector_sub f3 f2 b2 b0 cvector_add f2 c% cdrop cvector_sub f3 f2 b1
- (((% a) ((vector_sub x) y)) = (vec (NUMERAL _0))) |- ((((% a) ((vector_sub x) y)) = (vec (NUMERAL _0))) /\ (((vector_add u) ((% a) x)) = ((vector_add u) ((% a) y))))
T c==> c= c% f0 cvector_sub f1 f2 cvec cNUMERAL c_0 c/\ c= c% f0 cvector_sub f1 f2 cvec cNUMERAL c_0 c= cvector_add f3 c% f0 f1 cvector_add f3 c% f0 f2
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((!x''. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g x) = (g ((\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x))) x''))) ==> (x = ((\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x))) x''))))) = ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x'. (((g x) = (g ((\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x))) x'))) ==> (x = ((\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x))) x'))))))
T c= ! c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f1 f2 * f1 * / cvector_add f3 c% cdrop cvector_sub f4 f3 b1 b0 c= f2 * / cvector_add f3 c% cdrop cvector_sub f4 f3 b1 b0 c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> c= * f1 f2 * f1 * / cvector_add f3 c% cdrop cvector_sub f4 f3 b1 b0 c= f2 * / cvector_add f3 c% cdrop cvector_sub f4 f3 b1 b0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((lift (drop x)) = x)
T c= clift cdrop f0 f0
- |- ((!x''. ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (((g ((\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x))) x)) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x'')))) ==> (((\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x))) x) = ((vector_add u) ((% (drop ((vector_sub v) u))) x'')))))) = ((x' IN (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) ==> (!x'. (((g ((\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x))) x)) = (g ((vector_add u) ((% (drop ((vector_sub v) u))) x')))) ==> (((\x. ((vector_add u) ((% (drop ((vector_sub v) u))) x))) x) = ((vector_add u) ((% (drop ((vector_sub v) u))) x')))))))
T c= ! c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c= * f1 * / cvector_add f2 c% cdrop cvector_sub f3 f2 b1 f4 * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 b0 c= * / cvector_add f2 c% cdrop cvector_sub f3 f2 b1 f4 cvector_add f2 c% cdrop cvector_sub f3 f2 b0 c==> cIN f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL ! c==> c= * f1 * / cvector_add f2 c% cdrop cvector_sub f3 f2 b1 f4 * f1 cvector_add f2 c% cdrop cvector_sub f3 f2 b0 c= * / cvector_add f2 c% cdrop cvector_sub f3 f2 b1 f4 cvector_add f2 c% cdrop cvector_sub f3 f2 b0
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
