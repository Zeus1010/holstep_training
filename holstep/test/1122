N Appendix.LENGTH_s_init_list
C |- ((LENGTH s_init_list_v39) = (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 _0))))))
T c= cLENGTH cs_init_list_v39 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 c_0
D TRUTH
A |- T
T cT
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D ADD_CLAUSES
A |- ((!n. (((NUMERAL _0) + n) = n)) /\ ((!m. ((m + (NUMERAL _0)) = m)) /\ ((!m. (!n. (((SUC m) + n) = (SUC (m + n))))) /\ (!m. (!n. ((m + (SUC n)) = (SUC (m + n))))))))
T c/\ ! c= c+ cNUMERAL c_0 b0 b0 c/\ ! c= c+ b0 cNUMERAL c_0 b0 c/\ ! ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 ! ! c= c+ b0 cSUC b1 cSUC c+ b0 b1
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D LENGTH
A |- (((LENGTH NIL) = (NUMERAL _0)) /\ (!h. (!t. ((LENGTH ((CONS h) t)) = (SUC (LENGTH t))))))
T c/\ c= cLENGTH cNIL cNUMERAL c_0 ! ! c= cLENGTH cCONS b0 b1 cSUC cLENGTH b1
D Appendix.s_init_list_v39
A |- (s_init_list_v39 = ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((CONS ((((mk_unadorned_v39 (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) (d_tame (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) (((cs_adj (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))) (((cs_adj (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))) ((CONS ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (d_tame (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))) ((CONS ((((mk_unadorned_v39 (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) (d_tame (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (((cs_adj (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))) (((cs_adj (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))) ((CONS ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT1 _0)))) (d_tame (NUMERAL (BIT1 (BIT1 _0))))) (((cs_adj (NUMERAL (BIT1 (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))) (((cs_adj (NUMERAL (BIT1 (BIT1 _0)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))) ((CONS ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))) ((CONS ((((mk_unadorned_v39 (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (((cs_adj (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))) ((CONS ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) ((((a_pro (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0))) ((((a_pro (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) sqrt8) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))) ((CONS ((((mk_unadorned_v39 (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) ((((a_pro (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) ((((a_pro (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) sqrt8) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))) NIL))))))))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c= cs_init_list_v39 cLET / cLET_END cLET / cLET_END cCONS cmk_unadorned_v39 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cd_tame cNUMERAL cBIT0 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 * * * part ccs_adj cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 cCONS cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cd_tame cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 cCONS cmk_unadorned_v39 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cd_tame cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 * * * part ccs_adj cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 cCONS cmk_unadorned_v39 cNUMERAL cBIT1 cBIT1 c_0 cd_tame cNUMERAL cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 * * * part ccs_adj cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 cCONS cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 cCONS cmk_unadorned_v39 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 cCONS cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * * b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 * * * * b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 csqrt8 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 cCONS cmk_unadorned_v39 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * * b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * * b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 csqrt8 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 cNIL / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
- |- ((FST (x , y)) = x)
T c= cFST c, f0 f1 f0
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ |- ((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))
T c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- ((SND (x , y)) = y)
T c= cSND c, f0 f1 f1
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
+ |- ((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0)))))
T c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
+ |- ((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0)))
T c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((LENGTH ((CONS h) t)) = (SUC (LENGTH t)))
T c= cLENGTH cCONS f0 f1 cSUC cLENGTH f1
- |- ((\y. ((FST (x , y)) = x)) y)
T * / c= cFST c, f0 b0 f0 f1
- |- (F = (~ T))
T c= cF c~ cT
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- |- (T = ((SUC (SUC (SUC (SUC (SUC (SUC (SUC (SUC (NUMERAL _0))))))))) = (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))
T c= cT c= cSUC cSUC cSUC cSUC cSUC cSUC cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 c_0
- |- (((!y. ((FST (x , y)) = x)) ==> ((\y. ((FST (x , y)) = x)) y)) = ((\y. ((FST (x , y)) = x)) y))
T c= c==> ! c= cFST c, f0 b0 f0 * / c= cFST c, f0 b0 f0 f1 * / c= cFST c, f0 b0 f0 f1
- |- ((~ T) = F)
T c= c~ cT cF
+ |- ((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- ((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))
T c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- ((\x. (!y. ((FST (x , y)) = x))) x)
T * / ! c= cFST c, b0 b1 b0 f0
+ |- ((LENGTH NIL) = (NUMERAL _0))
T c= cLENGTH cNIL cNUMERAL c_0
+ |- ((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- ((\h. (!t. ((LENGTH ((CONS h) t)) = (SUC (LENGTH t))))) h)
T * / ! c= cLENGTH cCONS b0 b1 cSUC cLENGTH b1 f0
+ |- (((!h. (!t. ((LENGTH ((CONS h) t)) = (SUC (LENGTH t))))) ==> ((\h. (!t. ((LENGTH ((CONS h) t)) = (SUC (LENGTH t))))) h)) = ((\h. (!t. ((LENGTH ((CONS h) t)) = (SUC (LENGTH t))))) h))
T c= c==> ! ! c= cLENGTH cCONS b0 b1 cSUC cLENGTH b1 * / ! c= cLENGTH cCONS b0 b1 cSUC cLENGTH b1 f0 * / ! c= cLENGTH cCONS b0 b1 cSUC cLENGTH b1 f0
- |- (((!y. ((SND (x , y)) = y)) ==> ((\y. ((SND (x , y)) = y)) y)) = ((\y. ((SND (x , y)) = y)) y))
T c= c==> ! c= cSND c, f0 b0 b0 * / c= cSND c, f0 b0 b0 f1 * / c= cSND c, f0 b0 b0 f1
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
+ |- ((SUC (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 _0))))))
T c= cSUC cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 c_0
+ |- (((!t. ((LENGTH ((CONS h) t)) = (SUC (LENGTH t)))) ==> ((\t. ((LENGTH ((CONS h) t)) = (SUC (LENGTH t)))) t)) = ((\t. ((LENGTH ((CONS h) t)) = (SUC (LENGTH t)))) t))
T c= c==> ! c= cLENGTH cCONS f0 b0 cSUC cLENGTH b0 * / c= cLENGTH cCONS f0 b0 cSUC cLENGTH b0 f1 * / c= cLENGTH cCONS f0 b0 cSUC cLENGTH b0 f1
- |- (((\a2. (f a2)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
+ |- ((\t. ((LET_END t) = t)) t)
T * / c= cLET_END b0 b0 f0
- |- ((\y. ((SND (x , y)) = y)) y)
T * / c= cSND c, f0 b0 b0 f1
+ |- ((\t. ((LENGTH ((CONS h) t)) = (SUC (LENGTH t)))) t)
T * / c= cLENGTH cCONS f0 b0 cSUC cLENGTH b0 f1
+ |- ((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((SUC (SUC (SUC (SUC (SUC (SUC (SUC (SUC (NUMERAL _0))))))))) = (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 _0)))))) = ((LENGTH s_init_list_v39) = (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))
T c= c= cSUC cSUC cSUC cSUC cSUC cSUC cSUC cSUC cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 c_0 c= cLENGTH cs_init_list_v39 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 c_0
- |- (~ (~ T))
T c~ c~ cT
