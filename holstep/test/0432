N Lp_ineqs_quads.ineq119_std
C |- (!V. (!E. ((lp_fan (V , E)) ==> (quad_nonlinear_v10 ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. ((ineq ((CONS ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) , (y1 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) ((CONS ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) , (y2 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) ((CONS ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) , (y3 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) ((CONS ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) , (y4 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) ((CONS (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) , (y5 , ((DECIMAL (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))) ((CONS ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) , (y6 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) NIL))))))) ((real_gt ((real_add ((real_sub ((((((taum y1) y2) y3) y4) y5) y6)) ((real_mul ((DECIMAL (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 _0))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) ((((((dih_y y1) y2) y3) y4) y5) y6)))) ((real_div ((DECIMAL (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((DECIMAL (NUMERAL _0)) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))))))))) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. ((ineq ((CONS (((DECIMAL (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0))))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) , (y1 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) h0)))) ((CONS (((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0)))))) , (y2 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) ((CONS (((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0)))))) , (y3 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) ((CONS (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) , (y4 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) h0)))) ((CONS (((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0)))))) , (y5 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) ((CONS (((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0)))))) , (y6 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) NIL))))))) ((real_lt ((((((delta_y y1) y2) y3) y4) y5) y6)) (real_of_num (NUMERAL _0)))))))))) ==> ((!V. (!E. (!FF. (((convex_local_fan (V , (E , FF))) /\ ((packing V) /\ ((V SUBSET ball_annulus) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (CARD V)) /\ (((CARD V) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((!v. (!w. (((~ (v = w)) /\ ((v IN V) /\ ((w IN V) /\ (~ ((v INSERT (w INSERT EMPTY)) IN E))))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (v , w)))))) /\ (!v. (!w. (((v INSERT (w INSERT EMPTY)) IN E) ==> (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))))))))))) ==> ((real_le (d_tame (CARD V))) (((tau_fun V) E) FF)))))) ==> ((lp_tau (V , E)) ==> ((E = (ESTD V)) ==> (!d. ((d IN ((darts_k (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) (hypermap_of_fan (V , E)))) ==> ((real_ge ((real_add ((real_sub ((tau_fan (V , E)) ((face (hypermap_of_fan (V , E))) d))) ((real_mul ((DECIMAL (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 _0))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) ((azim_dart (V , E)) d)))) ((DECIMAL (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))))))) (real_of_num (NUMERAL _0))))))))))))))
T c==> clp_fan c, f0 f1 c==> cquad_nonlinear_v10 c==> ! ! ! ! ! ! cineq cCONS c, creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c, b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cCONS c, creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c, b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cCONS c, creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c, b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cCONS c, creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c, b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cCONS c, creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c, b4 cDECIMAL cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cCONS c, creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c, b5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cNIL creal_gt creal_add creal_sub ctaum b0 b1 b2 b3 b4 b5 creal_mul cDECIMAL cNUMERAL cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cdih_y b0 b1 b2 b3 b4 b5 creal_div cDECIMAL cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 c==> ! ! ! ! ! ! cineq cCONS c, cDECIMAL cNUMERAL cBIT1 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c, b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ch0 cCONS c, cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 c, b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cCONS c, cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 c, b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cCONS c, creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c, b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ch0 cCONS c, cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 c, b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cCONS c, cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 c, b5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cNIL creal_lt cdelta_y b0 b1 b2 b3 b4 b5 creal_of_num cNUMERAL c_0 c==> ! ! ! c==> c/\ cconvex_local_fan c, b0 c, b1 b2 c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCARD b0 c/\ c<= cCARD b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ ! ! c==> c/\ c~ c= b3 b4 c/\ cIN b3 b0 c/\ cIN b4 b0 c~ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b3 b4 ! ! c==> cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b3 b4 creal_le cdistance c, b3 b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le cd_tame cCARD b0 ctau_fun b0 b1 b2 c==> clp_tau c, f0 f1 c==> c= f1 * part cESTD f0 ! c==> cIN b0 * * part cdarts_k cNUMERAL cBIT0 cBIT0 cBIT1 c_0 chypermap_of_fan c, f0 f1 creal_ge creal_add creal_sub ctau_fan c, f0 f1 * * part cface chypermap_of_fan c, f0 f1 b0 creal_mul cDECIMAL cNUMERAL cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cazim_dart c, f0 f1 b0 cDECIMAL cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D SELECT_AX
A |- (!P. (!x. ((P x) ==> (P (@ P)))))
T c==> * f0 f1 * f0 c@ f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D GABS_DEF
A |- (!P. ((GABS P) = (@ P)))
T c= cGABS f0 c@ f0
D GEQ_DEF
A |- (!a. (!b. (((GEQ a) b) = (a = b))))
T c= cGEQ f0 f1 c= f0 f1
D pair_RECURSION
A |- (!PAIR'. (?fn. (!a0. (!a1. ((fn (a0 , a1)) = ((PAIR' a0) a1))))))
T c? / ! ! c= * b0 c, b1 b2 * * f0 b1 b2
D Hypermap.EQ_SUC
A |- (!m. (!n. (((SUC m) = (SUC n)) = (m = n))))
T c= c= cSUC f0 cSUC f1 c= f0 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.add0n
A |- (!n. (((NUMERAL _0) + n) = n))
T c= c+ cNUMERAL c_0 f0 f0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D ADD_CLAUSES
A |- ((!n. (((NUMERAL _0) + n) = n)) /\ ((!m. ((m + (NUMERAL _0)) = m)) /\ ((!m. (!n. (((SUC m) + n) = (SUC (m + n))))) /\ (!m. (!n. ((m + (SUC n)) = (SUC (m + n))))))))
T c/\ ! c= c+ cNUMERAL c_0 b0 b0 c/\ ! c= c+ b0 cNUMERAL c_0 b0 c/\ ! ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 ! ! c= c+ b0 cSUC b1 cSUC c+ b0 b1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D ADD_ASSOC
A |- (!m. (!n. (!p. ((m + (n + p)) = ((m + n) + p)))))
T c= c+ f0 c+ f1 f2 c+ c+ f0 f1 f2
D ADD_AC
A |- (((m + n) = (n + m)) /\ ((((m + n) + p) = (m + (n + p))) /\ ((m + (n + p)) = (n + (m + p)))))
T c/\ c= c+ f0 f1 c+ f1 f0 c/\ c= c+ c+ f0 f1 f2 c+ f0 c+ f1 f2 c= c+ f0 c+ f1 f2 c+ f1 c+ f0 f2
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D EQ_ADD_LCANCEL
A |- (!m. (!n. (!p. (((m + n) = (m + p)) = (n = p)))))
T c= c= c+ f0 f1 c+ f0 f2 c= f1 f2
D EQ_ADD_RCANCEL
A |- (!m. (!n. (!p. (((m + p) = (n + p)) = (m = n)))))
T c= c= c+ f0 f1 c+ f2 f1 c= f0 f2
D BIT0
A |- (!n. ((BIT0 n) = (n + n)))
T c= cBIT0 f0 c+ f0 f0
D BIT1
A |- (!n. ((BIT1 n) = (SUC (n + n))))
T c= cBIT1 f0 cSUC c+ f0 f0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D Ssrnat.mulSnr
A |- (!m. (!n. (((SUC m) * n) = ((m * n) + n))))
T c= c* cSUC f0 f1 c+ c* f0 f1 f1
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D LEFT_ADD_DISTRIB
A |- (!m. (!n. (!p. ((m * (n + p)) = ((m * n) + (m * p))))))
T c= c* f0 c+ f1 f2 c+ c* f0 f1 c* f0 f2
D RIGHT_ADD_DISTRIB
A |- (!m. (!n. (!p. (((m + n) * p) = ((m * p) + (n * p))))))
T c= c* c+ f0 f1 f2 c+ c* f0 f2 c* f1 f2
D MULT_ASSOC
A |- (!m. (!n. (!p. ((m * (n * p)) = ((m * n) * p)))))
T c= c* f0 c* f1 f2 c* c* f0 f1 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D EQ_MULT_LCANCEL
A |- (!m. (!n. (!p. (((m * n) = (m * p)) = ((m = (NUMERAL _0)) \/ (n = p))))))
T c= c= c* f0 f1 c* f0 f2 c\/ c= f0 cNUMERAL c_0 c= f1 f2
D MULT_2
A |- (!n. (((NUMERAL (BIT0 (BIT1 _0))) * n) = (n + n)))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 f0 c+ f0 f0
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D GT
A |- (!n. (!m. ((m > n) = (n < m))))
T c= c> f0 f1 c< f1 f0
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D ARITH_EQ
A |- ((!m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) /\ (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))))
T c/\ ! ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
D ALL
A |- ((((ALL P) NIL) = T) /\ (((ALL P) ((CONS h) t)) = ((P h) /\ ((ALL P) t))))
T c/\ c= cALL f0 cNIL cT c= cALL f0 cCONS f1 f2 c/\ * f0 f1 cALL f0 f2
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D REAL_MUL_LINV
A |- (!x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul (real_inv x)) x) = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_mul creal_inv f0 f0 creal_of_num cNUMERAL cBIT1 c_0
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D real_div
A |- (!x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y)))))
T c= creal_div f0 f1 creal_mul f0 creal_inv f1
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D Real_ext.REAL_SV_LMUL_0
A |- (!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))))
T c= creal_mul creal_of_num cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_MUL_RID
A |- (!x. (((real_mul x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_MUL_AC
A |- ((((real_mul m) n) = ((real_mul n) m)) /\ ((((real_mul ((real_mul m) n)) p) = ((real_mul m) ((real_mul n) p))) /\ (((real_mul m) ((real_mul n) p)) = ((real_mul n) ((real_mul m) p)))))
T c/\ c= creal_mul f0 f1 creal_mul f1 f0 c/\ c= creal_mul creal_mul f0 f1 f2 creal_mul f0 creal_mul f1 f2 c= creal_mul f0 creal_mul f1 f2 creal_mul f1 creal_mul f0 f2
D Real_ext.REAL_PROP_POS_MUL2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_mul x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 f1
D REAL_NOT_LE
A |- (!x. (!y. ((~ ((real_le x) y)) = ((real_lt y) x))))
T c= c~ creal_le f0 f1 creal_lt f1 f0
D REAL_LT_01
A |- ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))
T creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
D REAL_INV_INV
A |- (!x. ((real_inv (real_inv x)) = x))
T c= creal_inv creal_inv f0 f0
D REAL_INV_NEG
A |- (!x. ((real_inv (real_neg x)) = (real_neg (real_inv x))))
T c= creal_inv creal_neg f0 creal_neg creal_inv f0
D REAL_DIV_1
A |- (!x. (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_INV_MUL
A |- (!x. (!y. ((real_inv ((real_mul x) y)) = ((real_mul (real_inv x)) (real_inv y)))))
T c= creal_inv creal_mul f0 f1 creal_mul creal_inv f0 creal_inv f1
D REAL_INV_DIV
A |- (!x. (!y. ((real_inv ((real_div x) y)) = ((real_div y) x))))
T c= creal_inv creal_div f0 f1 creal_div f1 f0
D DECIMAL
A |- (!x. (!y. (((DECIMAL x) y) = ((real_div (real_of_num x)) (real_of_num y)))))
T c= cDECIMAL f0 f1 creal_div creal_of_num f0 creal_of_num f1
D RAT_LEMMA2
A |- ((((real_lt (real_of_num (NUMERAL _0))) y1) /\ ((real_lt (real_of_num (NUMERAL _0))) y2)) ==> (((real_add ((real_div x1) y1)) ((real_div x2) y2)) = ((real_mul ((real_add ((real_mul x1) y2)) ((real_mul x2) y1))) ((real_mul (real_inv y1)) (real_inv y2)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_add creal_div f2 f0 creal_div f3 f1 creal_mul creal_add creal_mul f2 f1 creal_mul f3 f0 creal_mul creal_inv f0 creal_inv f1
D RAT_LEMMA4
A |- ((((real_lt (real_of_num (NUMERAL _0))) y1) /\ ((real_lt (real_of_num (NUMERAL _0))) y2)) ==> (((real_le ((real_div x1) y1)) ((real_div x2) y2)) = ((real_le ((real_mul x1) y2)) ((real_mul x2) y1))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_le creal_div f2 f0 creal_div f3 f1 creal_le creal_mul f2 f1 creal_mul f3 f0
D RAT_LEMMA5
A |- ((((real_lt (real_of_num (NUMERAL _0))) y1) /\ ((real_lt (real_of_num (NUMERAL _0))) y2)) ==> ((((real_div x1) y1) = ((real_div x2) y2)) = (((real_mul x1) y2) = ((real_mul x2) y1))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= c= creal_div f2 f0 creal_div f3 f1 c= creal_mul f2 f1 creal_mul f3 f0
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D Sphere.h0
A |- (h0 = ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))
T c= ch0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
D Sphere.tame_table_d
A |- (!r. (!s. (((tame_table_d r) s) = (((COND ((r + ((NUMERAL (BIT0 (BIT1 _0))) * s)) > (NUMERAL (BIT1 (BIT1 _0))))) ((real_add ((real_mul ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) ((real_sub (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num s)))) ((real_mul ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))))))) ((real_add (real_of_num r)) ((real_sub ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num s))) (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ((DECIMAL (NUMERAL _0)) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))
T c= ctame_table_d f0 f1 cCOND c> c+ f0 c* cNUMERAL cBIT0 cBIT1 c_0 f1 cNUMERAL cBIT1 cBIT1 c_0 creal_add creal_mul cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_sub creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num f1 creal_mul cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_of_num f0 creal_sub creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num f1 creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0
D Merge_ineq.delta_y_sym
A |- (!x1. (!x2. (!x3. (!x4. (!x5. (!x6. ((((((((delta_y x1) x2) x3) x4) x5) x6) = ((((((delta_y x2) x1) x3) x5) x4) x6)) /\ ((((((((delta_y x1) x2) x3) x4) x5) x6) = ((((((delta_y x1) x3) x2) x4) x6) x5)) /\ (((((((delta_y x1) x2) x3) x4) x5) x6) = ((((((delta_y x5) x4) x3) x2) x1) x6))))))))))
T c/\ c= cdelta_y f0 f1 f2 f3 f4 f5 cdelta_y f1 f0 f2 f4 f3 f5 c/\ c= cdelta_y f0 f1 f2 f3 f4 f5 cdelta_y f0 f2 f1 f3 f5 f4 c= cdelta_y f0 f1 f2 f3 f4 f5 cdelta_y f4 f3 f2 f1 f0 f5
D Hypermap.lemma_in_face_set
A |- (!H. (!x. ((x IN (dart H)) = (((face H) x) IN (face_set H)))))
T c= cIN f0 * part cdart f1 cIN * * part cface f1 f0 * part cface_set f1
D Hypermap_and_fan.COMPONENTS_HYPERMAP_OF_FAN
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((dart (hypermap_of_fan (V , E))) = (dart_of_fan (V , E))) /\ (((edge_map (hypermap_of_fan (V , E))) = (e_fan_pair_ext (V , E))) /\ (((node_map (hypermap_of_fan (V , E))) = (n_fan_pair_ext (V , E))) /\ ((face_map (hypermap_of_fan (V , E))) = (f_fan_pair_ext (V , E)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ c= * part cdart chypermap_of_fan c, f0 f1 * part cdart_of_fan c, f0 f1 c/\ c= * part cedge_map chypermap_of_fan c, f0 f1 * part ce_fan_pair_ext c, f0 f1 c/\ c= * part cnode_map chypermap_of_fan c, f0 f1 * part cn_fan_pair_ext c, f0 f1 c= * part cface_map chypermap_of_fan c, f0 f1 * part cf_fan_pair_ext c, f0 f1
D Tame_inequalities.INEQ_ALT
A |- (!A. (!bounds. (((ineq bounds) A) = (((ALL (GABS (\f. (!a. (!x. (!b. ((GEQ (f (a , (x , b)))) (((real_le a) x) /\ ((real_le x) b))))))))) bounds) ==> A))))
T c= cineq f0 f1 c==> cALL * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 c/\ creal_le b1 b2 creal_le b2 b3 f0 f1
D Lp_details.quad_3862621143_revised
A |- (quad_nonlinear_v10 ==> (!y0. (!y1. (!y2. (!y3. (!y5. (!y6. (!y7. (!y8. (!y9. ((ineq ((CONS (((DECIMAL (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) , (y0 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) h0)))) ((CONS (((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0)))))) , (y1 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) ((CONS (((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0)))))) , (y2 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) ((CONS (((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0)))))) , (y3 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) ((CONS (((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0)))))) , (y5 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) ((CONS (((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0)))))) , (y6 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) ((CONS (((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0)))))) , (y7 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) ((CONS (((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0)))))) , (y8 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) ((CONS (((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0)))))) , (y9 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) NIL)))))))))) (((real_lt ((real_add ((((((taum y1) y2) y7) y9) y0) y6)) ((((((taum y1) y3) y7) y8) y0) y5))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) \/ (((real_gt ((real_add ((((((taum y1) y2) y7) y9) y0) y6)) ((real_add ((real_sub ((((((taum y1) y3) y7) y8) y0) y5)) ((real_mul ((DECIMAL (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 _0))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) ((real_add ((((((dih_y y1) y2) y7) y9) y0) y6)) ((((((dih_y y1) y3) y7) y8) y0) y5))))) ((DECIMAL (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))))) ((DECIMAL (NUMERAL _0)) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) \/ (((real_lt ((((((delta_y y1) y2) y7) y9) y0) y6)) (real_of_num (NUMERAL _0))) \/ ((real_lt ((((((delta_y y1) y3) y7) y8) y0) y5)) (real_of_num (NUMERAL _0)))))))))))))))))
T c==> cquad_nonlinear_v10 ! ! ! ! ! ! ! ! ! cineq cCONS c, cDECIMAL cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c, b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ch0 cCONS c, cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 c, b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cCONS c, cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 c, b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cCONS c, cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 c, b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cCONS c, cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 c, b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cCONS c, cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 c, b5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cCONS c, cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 c, b6 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cCONS c, cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 c, b7 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cCONS c, cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 c, b8 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cNIL c\/ creal_lt creal_add ctaum b1 b2 b6 b8 b0 b5 ctaum b1 b3 b6 b7 b0 b4 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 c\/ creal_gt creal_add ctaum b1 b2 b6 b8 b0 b5 creal_add creal_sub ctaum b1 b3 b6 b7 b0 b4 creal_mul cDECIMAL cNUMERAL cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_add cdih_y b1 b2 b6 b8 b0 b5 cdih_y b1 b3 b6 b7 b0 b4 cDECIMAL cNUMERAL cBIT1 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cDECIMAL cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 c\/ creal_lt cdelta_y b1 b2 b6 b8 b0 b5 creal_of_num cNUMERAL c_0 creal_lt cdelta_y b1 b3 b6 b7 b0 b4 creal_of_num cNUMERAL c_0
D List_hypermap.darts_k
A |- (!H. (!k. (((darts_k k) H) = (GSPEC (\GEN%PVAR%8595. (?d. (((SETSPEC GEN%PVAR%8595) ((d IN (dart H)) /\ ((CARD ((face H) d)) = k))) d)))))))
T c= * * part cdarts_k f0 f1 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * part cdart f1 c= cCARD * * part cface f1 b1 f0 b1
D Lp_ineqs_proofs.lp_fan
A |- (!E. (!V. ((lp_fan (V , E)) = ((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((fully_surrounded (V , E)) /\ ((!v. (!w. (((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ (~ ((v INSERT (w INSERT EMPTY)) IN E))))) ==> ((real_le ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (distance (v , w)))))) /\ ((V SUBSET ball_annulus) /\ (packing V))))))))
T c= clp_fan c, f0 f1 c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ cfully_surrounded c, f0 f1 c/\ ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c/\ c~ c= b0 b1 c~ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 creal_le cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cdistance c, b0 b1 c/\ cSUBSET f0 part cball_annulus cpacking f0
D Lp_ineqs_proofs.tau_fan_eq_tauVEF
A |- (!V. (!E. (!f. (((lp_tau (V , E)) /\ (f IN (face_set (hypermap_of_fan (V , E))))) ==> (((tau_fan (V , E)) f) = (tauVEF (V , (E , f))))))))
T c==> c/\ clp_tau c, f0 f1 cIN f2 * part cface_set chypermap_of_fan c, f0 f1 c= ctau_fan c, f0 f1 f2 ctauVEF c, f0 c, f1 f2
D Lp_ineqs_proofs.f_fan_pair_ext_in_darts_k
A |- (!V. (!E. (!k. (!d. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ (d IN ((darts_k k) (hypermap_of_fan (V , E))))) ==> ((((f_fan_pair_ext (V , E)) d) IN ((darts_k k) (hypermap_of_fan (V , E)))) /\ (((inverse (f_fan_pair_ext (V , E))) d) IN ((darts_k k) (hypermap_of_fan (V , E))))))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN f2 * * part cdarts_k f3 chypermap_of_fan c, f0 f1 c/\ cIN cf_fan_pair_ext c, f0 f1 f2 * * part cdarts_k f3 chypermap_of_fan c, f0 f1 cIN cinverse * part cf_fan_pair_ext c, f0 f1 f2 * * part cdarts_k f3 chypermap_of_fan c, f0 f1
D Lp_ineqs_proofs.f_fan_pair_ext_in_dart
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> (((f_fan_pair_ext (V , E)) d) IN (dart_of_fan (V , E))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! c==> cIN b0 * part cdart_of_fan c, f0 f1 cIN cf_fan_pair_ext c, f0 f1 b0 * part cdart_of_fan c, f0 f1
D Lp_ineqs_proofs.y1_lo
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (y1_fan d))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * part cdart_of_fan c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cy1_fan b0
D Lp_ineqs_proofs.y2_lo
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (y2_fan d))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * part cdart_of_fan c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cy2_fan b0
D Lp_ineqs_proofs.y1_hi
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> ((real_le (y1_fan d)) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * part cdart_of_fan c, f0 f1 creal_le cy1_fan b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
D Lp_ineqs_proofs.y2_hi
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> ((real_le (y2_fan d)) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * part cdart_of_fan c, f0 f1 creal_le cy2_fan b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
D Lp_ineqs_proofs.y6_lo
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (y6_fan d))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * part cdart_of_fan c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cy6_fan b0
D Lp_ineqs_proofs.y8_hi_std
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> ((E = (ESTD V)) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> ((real_le ((y8_fan (V , E)) d)) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> c= f1 * part cESTD f0 ! c==> cIN b0 * part cdart_of_fan c, f0 f1 creal_le cy8_fan c, f0 f1 b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
D Lp_ineqs_proofs.y9_hi_std
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> ((E = (ESTD V)) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> ((real_le ((y9_fan (V , E)) d)) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> c= f1 * part cESTD f0 ! c==> cIN b0 * part cdart_of_fan c, f0 f1 creal_le cy9_fan c, f0 f1 b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
D Lp_ineqs_proofs.y5_hi_std2
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> ((E = (ESTD V)) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> ((real_le ((y5_fan (V , E)) d)) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> c= f1 * part cESTD f0 ! c==> cIN b0 * part cdart_of_fan c, f0 f1 creal_le cy5_fan c, f0 f1 b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
D Lp_ineqs_proofs.y6_hi_std2
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> ((E = (ESTD V)) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> ((real_le (y6_fan d)) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus c==> c= f1 * part cESTD f0 ! c==> cIN b0 * part cdart_of_fan c, f0 f1 creal_le cy6_fan b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
D Lp_ineqs_proofs.y3_lo
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((y3_fan (V , E)) d))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * part cdart_of_fan c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cy3_fan c, f0 f1 b0
D Lp_ineqs_proofs.y3_hi
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> ((real_le ((y3_fan (V , E)) d)) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * part cdart_of_fan c, f0 f1 creal_le cy3_fan c, f0 f1 b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
D Lp_ineqs_proofs.y5_lo
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((y5_fan (V , E)) d))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * part cdart_of_fan c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cy5_fan c, f0 f1 b0
D Lp_ineqs_proofs.y7_lo
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((y7_fan (V , E)) d))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * part cdart_of_fan c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cy7_fan c, f0 f1 b0
D Lp_ineqs_proofs.y7_hi
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> ((real_le ((y7_fan (V , E)) d)) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * part cdart_of_fan c, f0 f1 creal_le cy7_fan c, f0 f1 b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
D Lp_ineqs_proofs.y8_lo
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((y8_fan (V , E)) d))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * part cdart_of_fan c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cy8_fan c, f0 f1 b0
D Lp_ineqs_proofs.y9_lo
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> ((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((y9_fan (V , E)) d))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * part cdart_of_fan c, f0 f1 creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cy9_fan c, f0 f1 b0
D Lp_ineqs_proofs.delta_y_not_neg
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> (~ ((real_lt ((((((delta_y (y1_fan d)) (y2_fan d)) ((y3_fan (V , E)) d)) ((y4'_fan (V , E)) d)) ((y5_fan (V , E)) d)) (y6_fan d))) (real_of_num (NUMERAL _0))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * part cdart_of_fan c, f0 f1 c~ creal_lt cdelta_y cy1_fan b0 cy2_fan b0 cy3_fan c, f0 f1 b0 cy4'_fan c, f0 f1 b0 cy5_fan c, f0 f1 b0 cy6_fan b0 creal_of_num cNUMERAL c_0
D Lp_ineqs_proofs.dart4_yf_eq
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN ((darts_k (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) (hypermap_of_fan (V , E)))) ==> (((y1_fan ((f_fan_pair_ext (V , E)) d)) = (y2_fan d)) /\ (((y2_fan ((f_fan_pair_ext (V , E)) d)) = ((y7_fan (V , E)) d)) /\ ((((y3_fan (V , E)) ((f_fan_pair_ext (V , E)) d)) = (y1_fan d)) /\ ((((y5_fan (V , E)) ((f_fan_pair_ext (V , E)) d)) = (y6_fan d)) /\ (((y6_fan ((f_fan_pair_ext (V , E)) d)) = ((y9_fan (V , E)) d)) /\ ((((y7_fan (V , E)) ((f_fan_pair_ext (V , E)) d)) = ((y3_fan (V , E)) d)) /\ ((((y8_fan (V , E)) ((f_fan_pair_ext (V , E)) d)) = ((y5_fan (V , E)) d)) /\ (((y9_fan (V , E)) ((f_fan_pair_ext (V , E)) d)) = ((y8_fan (V , E)) d)))))))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * * part cdarts_k cNUMERAL cBIT0 cBIT0 cBIT1 c_0 chypermap_of_fan c, f0 f1 c/\ c= cy1_fan cf_fan_pair_ext c, f0 f1 b0 cy2_fan b0 c/\ c= cy2_fan cf_fan_pair_ext c, f0 f1 b0 cy7_fan c, f0 f1 b0 c/\ c= cy3_fan c, f0 f1 cf_fan_pair_ext c, f0 f1 b0 cy1_fan b0 c/\ c= cy5_fan c, f0 f1 cf_fan_pair_ext c, f0 f1 b0 cy6_fan b0 c/\ c= cy6_fan cf_fan_pair_ext c, f0 f1 b0 cy9_fan c, f0 f1 b0 c/\ c= cy7_fan c, f0 f1 cf_fan_pair_ext c, f0 f1 b0 cy3_fan c, f0 f1 b0 c/\ c= cy8_fan c, f0 f1 cf_fan_pair_ext c, f0 f1 b0 cy5_fan c, f0 f1 b0 c= cy9_fan c, f0 f1 cf_fan_pair_ext c, f0 f1 b0 cy8_fan c, f0 f1 b0
D Lp_ineqs_proofs.dart4_y_invf_eq
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN ((darts_k (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) (hypermap_of_fan (V , E)))) ==> (((y1_fan ((inverse (f_fan_pair_ext (V , E))) d)) = ((y3_fan (V , E)) d)) /\ (((y2_fan ((inverse (f_fan_pair_ext (V , E))) d)) = (y1_fan d)) /\ ((((y3_fan (V , E)) ((inverse (f_fan_pair_ext (V , E))) d)) = ((y7_fan (V , E)) d)) /\ ((((y5_fan (V , E)) ((inverse (f_fan_pair_ext (V , E))) d)) = ((y8_fan (V , E)) d)) /\ (((y6_fan ((inverse (f_fan_pair_ext (V , E))) d)) = ((y5_fan (V , E)) d)) /\ ((((y7_fan (V , E)) ((inverse (f_fan_pair_ext (V , E))) d)) = (y2_fan d)) /\ ((((y8_fan (V , E)) ((inverse (f_fan_pair_ext (V , E))) d)) = ((y9_fan (V , E)) d)) /\ (((y9_fan (V , E)) ((inverse (f_fan_pair_ext (V , E))) d)) = (y6_fan d)))))))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * * part cdarts_k cNUMERAL cBIT0 cBIT0 cBIT1 c_0 chypermap_of_fan c, f0 f1 c/\ c= cy1_fan cinverse * part cf_fan_pair_ext c, f0 f1 b0 cy3_fan c, f0 f1 b0 c/\ c= cy2_fan cinverse * part cf_fan_pair_ext c, f0 f1 b0 cy1_fan b0 c/\ c= cy3_fan c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 b0 cy7_fan c, f0 f1 b0 c/\ c= cy5_fan c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 b0 cy8_fan c, f0 f1 b0 c/\ c= cy6_fan cinverse * part cf_fan_pair_ext c, f0 f1 b0 cy5_fan c, f0 f1 b0 c/\ c= cy7_fan c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 b0 cy2_fan b0 c/\ c= cy8_fan c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 b0 cy9_fan c, f0 f1 b0 c= cy9_fan c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 b0 cy6_fan b0
D Lp_ineqs_proofs.dart4_cross_eq_y4'
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN ((darts_k (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) (hypermap_of_fan (V , E)))) ==> (((y4'_fan (V , E)) ((f_fan_pair_ext (V , E)) d)) = ((y4'_fan (V , E)) ((inverse (f_fan_pair_ext (V , E))) d)))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * * part cdarts_k cNUMERAL cBIT0 cBIT0 cBIT1 c_0 chypermap_of_fan c, f0 f1 c= cy4'_fan c, f0 f1 cf_fan_pair_ext c, f0 f1 b0 cy4'_fan c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 b0
D Lp_ineqs_proofs.dart4_tauVEF_eq_tauq
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN ((darts_k (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) (hypermap_of_fan (V , E)))) ==> ((tauVEF (V , (E , ((face (hypermap_of_fan (V , E))) d)))) = (((((((((tauq (y1_fan d)) (y2_fan d)) ((y3_fan (V , E)) d)) ((y4'_fan (V , E)) d)) ((y5_fan (V , E)) d)) (y6_fan d)) ((y7_fan (V , E)) d)) ((y8_fan (V , E)) d)) ((y9_fan (V , E)) d)))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * * part cdarts_k cNUMERAL cBIT0 cBIT0 cBIT1 c_0 chypermap_of_fan c, f0 f1 c= ctauVEF c, f0 c, f1 * * part cface chypermap_of_fan c, f0 f1 b0 ctauq cy1_fan b0 cy2_fan b0 cy3_fan c, f0 f1 b0 cy4'_fan c, f0 f1 b0 cy5_fan c, f0 f1 b0 cy6_fan b0 cy7_fan c, f0 f1 b0 cy8_fan c, f0 f1 b0 cy9_fan c, f0 f1 b0
D Lp_ineqs_proofs.tauq_cross_split
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN ((darts_k (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) (hypermap_of_fan (V , E)))) ==> ((((((((((tauq (y1_fan d)) (y2_fan d)) ((y3_fan (V , E)) d)) ((y4'_fan (V , E)) d)) ((y5_fan (V , E)) d)) (y6_fan d)) ((y7_fan (V , E)) d)) ((y8_fan (V , E)) d)) ((y9_fan (V , E)) d)) = ((real_add ((((((taum (y1_fan d)) ((y3_fan (V , E)) d)) ((y7_fan (V , E)) d)) ((y8_fan (V , E)) d)) ((y4'_fan (V , E)) ((f_fan_pair_ext (V , E)) d))) ((y5_fan (V , E)) d))) ((((((taum (y1_fan d)) (y2_fan d)) ((y7_fan (V , E)) d)) ((y9_fan (V , E)) d)) ((y4'_fan (V , E)) ((f_fan_pair_ext (V , E)) d))) (y6_fan d))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * * part cdarts_k cNUMERAL cBIT0 cBIT0 cBIT1 c_0 chypermap_of_fan c, f0 f1 c= ctauq cy1_fan b0 cy2_fan b0 cy3_fan c, f0 f1 b0 cy4'_fan c, f0 f1 b0 cy5_fan c, f0 f1 b0 cy6_fan b0 cy7_fan c, f0 f1 b0 cy8_fan c, f0 f1 b0 cy9_fan c, f0 f1 b0 creal_add ctaum cy1_fan b0 cy3_fan c, f0 f1 b0 cy7_fan c, f0 f1 b0 cy8_fan c, f0 f1 b0 cy4'_fan c, f0 f1 cf_fan_pair_ext c, f0 f1 b0 cy5_fan c, f0 f1 b0 ctaum cy1_fan b0 cy2_fan b0 cy7_fan c, f0 f1 b0 cy9_fan c, f0 f1 b0 cy4'_fan c, f0 f1 cf_fan_pair_ext c, f0 f1 b0 cy6_fan b0
D Lp_ineqs_proofs.dart4_azim_cross_split
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((packing V) ==> ((V SUBSET ball_annulus) ==> (!d. ((d IN ((darts_k (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) (hypermap_of_fan (V , E)))) ==> (((azim_dart (V , E)) d) = ((real_add ((((((dih_y (y1_fan d)) ((y3_fan (V , E)) d)) ((y7_fan (V , E)) d)) ((y8_fan (V , E)) d)) ((y4'_fan (V , E)) ((f_fan_pair_ext (V , E)) d))) ((y5_fan (V , E)) d))) ((((((dih_y (y1_fan d)) (y2_fan d)) ((y7_fan (V , E)) d)) ((y9_fan (V , E)) d)) ((y4'_fan (V , E)) ((f_fan_pair_ext (V , E)) d))) (y6_fan d))))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c==> cpacking f0 c==> cSUBSET f0 part cball_annulus ! c==> cIN b0 * * part cdarts_k cNUMERAL cBIT0 cBIT0 cBIT1 c_0 chypermap_of_fan c, f0 f1 c= cazim_dart c, f0 f1 b0 creal_add cdih_y cy1_fan b0 cy3_fan c, f0 f1 b0 cy7_fan c, f0 f1 b0 cy8_fan c, f0 f1 b0 cy4'_fan c, f0 f1 cf_fan_pair_ext c, f0 f1 b0 cy5_fan c, f0 f1 b0 cdih_y cy1_fan b0 cy2_fan b0 cy7_fan c, f0 f1 b0 cy9_fan c, f0 f1 b0 cy4'_fan c, f0 f1 cf_fan_pair_ext c, f0 f1 b0 cy6_fan b0
D Lp_ineqs_proofs.dart4_y4'_lo
A |- (!V. (!E. ((lp_fan (V , E)) ==> (!d. ((d IN ((darts_k (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) (hypermap_of_fan (V , E)))) ==> ((real_le ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((y4'_fan (V , E)) d)))))))
T c==> clp_fan c, f0 f1 ! c==> cIN b0 * * part cdarts_k cNUMERAL cBIT0 cBIT0 cBIT1 c_0 chypermap_of_fan c, f0 f1 creal_le cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cy4'_fan c, f0 f1 b0
D Lp_ineqs_proofs.dart4_y4'_hi
A |- (!V. (!E. ((lp_fan (V , E)) ==> ((!y1. (!y2. (!y3. (!y4. (!y5. (!y6. ((ineq ((CONS (((DECIMAL (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0))))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))) , (y1 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) h0)))) ((CONS (((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0)))))) , (y2 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) ((CONS (((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0)))))) , (y3 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) ((CONS (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) , (y4 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) h0)))) ((CONS (((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0)))))) , (y5 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) ((CONS (((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 _0)))))) , (y6 , ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))) NIL))))))) ((real_lt ((((((delta_y y1) y2) y3) y4) y5) y6)) (real_of_num (NUMERAL _0)))))))))) ==> (!d. ((d IN ((darts_k (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) (hypermap_of_fan (V , E)))) ==> ((((real_le ((y5_fan (V , E)) d)) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) /\ (((real_le (y6_fan d)) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) /\ (((real_le ((y8_fan (V , E)) d)) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) /\ ((real_le ((y9_fan (V , E)) d)) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))) ==> ((real_le ((y4'_fan (V , E)) d)) ((DECIMAL (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0))))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))))))
T c==> clp_fan c, f0 f1 c==> ! ! ! ! ! ! cineq cCONS c, cDECIMAL cNUMERAL cBIT1 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c, b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ch0 cCONS c, cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 c, b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cCONS c, cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 c, b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cCONS c, creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 c, b3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ch0 cCONS c, cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 c, b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cCONS c, cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 c_0 c, b5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cNIL creal_lt cdelta_y b0 b1 b2 b3 b4 b5 creal_of_num cNUMERAL c_0 ! c==> cIN b0 * * part cdarts_k cNUMERAL cBIT0 cBIT0 cBIT1 c_0 chypermap_of_fan c, f0 f1 c==> c/\ creal_le cy5_fan c, f0 f1 b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cy6_fan b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cy8_fan c, f0 f1 b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_le cy9_fan c, f0 f1 b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_le cy4'_fan c, f0 f1 b0 cDECIMAL cNUMERAL cBIT1 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
D Lp_main_estimate.ineq_tau4_tauVEF
A |- (!V. (!E. ((lp_fan (V , E)) ==> ((!V. (!E. (!FF. (((convex_local_fan (V , (E , FF))) /\ ((packing V) /\ ((V SUBSET ball_annulus) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (CARD V)) /\ (((CARD V) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((!v. (!w. (((~ (v = w)) /\ ((v IN V) /\ ((w IN V) /\ (~ ((v INSERT (w INSERT EMPTY)) IN E))))) ==> ((real_le ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (distance (v , w)))))) /\ (!v. (!w. (((v INSERT (w INSERT EMPTY)) IN E) ==> (((real_le (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (distance (v , w))) /\ ((real_le (distance (v , w))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)))))))))))) ==> ((real_le (d_tame (CARD V))) (((tau_fun V) E) FF)))))) ==> (!d. ((d IN ((darts_k (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) (hypermap_of_fan (V , E)))) ==> ((((real_le ((y5_fan (V , E)) d)) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) /\ (((real_le (y6_fan d)) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) /\ (((real_le ((y8_fan (V , E)) d)) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) /\ ((real_le ((y9_fan (V , E)) d)) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))) ==> ((real_le ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (tauVEF (V , (E , ((face (hypermap_of_fan (V , E))) d))))))))))))
T c==> clp_fan c, f0 f1 c==> ! ! ! c==> c/\ cconvex_local_fan c, b0 c, b1 b2 c/\ cpacking b0 c/\ cSUBSET b0 part cball_annulus c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCARD b0 c/\ c<= cCARD b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ ! ! c==> c/\ c~ c= b3 b4 c/\ cIN b3 b0 c/\ cIN b4 b0 c~ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 creal_le creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 cdistance c, b3 b4 ! ! c==> cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ creal_le creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b3 b4 creal_le cdistance c, b3 b4 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_le cd_tame cCARD b0 ctau_fun b0 b1 b2 ! c==> cIN b0 * * part cdarts_k cNUMERAL cBIT0 cBIT0 cBIT1 c_0 chypermap_of_fan c, f0 f1 c==> c/\ creal_le cy5_fan c, f0 f1 b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cy6_fan b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 c/\ creal_le cy8_fan c, f0 f1 b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_le cy9_fan c, f0 f1 b0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_le cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 ctauVEF c, f0 c, f1 * * part cface chypermap_of_fan c, f0 f1 b0
D Lp_ineqs_quads.invf_in_dart
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!d. ((d IN (dart_of_fan (V , E))) ==> (((inverse (f_fan_pair_ext (V , E))) d) IN (dart_of_fan (V , E))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! c==> cIN b0 * part cdart_of_fan c, f0 f1 cIN cinverse * part cf_fan_pair_ext c, f0 f1 b0 * part cdart_of_fan c, f0 f1
