N Topology.union_aff
C |- (!x. (!v. (UNIV = ((aff (x INSERT (v INSERT EMPTY))) UNION (complement_set (x INSERT (v INSERT EMPTY)))))))
T c= part cUNIV * * part cUNION * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part ccomplement_set * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D IN_UNIV
A |- (!x. (x IN UNIV))
T cIN f0 part cUNIV
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D Topology.complement_set
A |- (!x. (!v. ((complement_set (x INSERT (v INSERT EMPTY))) = (GSPEC (\GEN%PVAR%5482. (?y. (((SETSPEC GEN%PVAR%5482) (~ (y IN (aff (x INSERT (v INSERT EMPTY)))))) y)))))))
T c= * part ccomplement_set * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1
- |- (((((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F) ==> ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F)) ==> (((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F) ==> ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F))) = (((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F) ==> ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F)))
T c= c==> c==> c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF
- |- (((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F) = (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x')))))
T c= c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0
+ |- (!x'. ((x' IN UNIV) = (x' IN ((aff (x INSERT (v INSERT EMPTY))) UNION (GSPEC (\GEN%PVAR%5482. (?y. (((SETSPEC GEN%PVAR%5482) (~ (y IN (aff (x INSERT (v INSERT EMPTY)))))) y))))))))
T c= cIN f0 part cUNIV cIN f0 * * part cUNION * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c~ cIN b1 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (~ (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x')))) |- ((~ F) ==> F)
T c==> c~ c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c~ cF cF
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- (((!v. (!x. ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F))) ==> ((\v. (!x. ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F))) v)) = ((\v. (!x. ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F))) v))
T c= c==> ! ! c==> c~ ! c\/ caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 c~ caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 cF * / ! c==> c~ ! c\/ caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 c~ caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 cF f0 * / ! c==> c~ ! c\/ caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 c~ caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 cF f0
- |- ((!x. (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) = T)
T c= ! ! c\/ caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 c~ caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 cT
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((x' IN (GSPEC (\GEN%PVAR%5482. (?y. (((SETSPEC GEN%PVAR%5482) (~ (y IN (aff (x INSERT (v INSERT EMPTY)))))) y))))) = (~ (x' IN (aff (x INSERT (v INSERT EMPTY))))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c~ cIN b1 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- ((!x. t) = t)
T c= ! f0 f0
+ |- (((!x. (!v. ((complement_set (x INSERT (v INSERT EMPTY))) = (GSPEC (\GEN%PVAR%5482. (?y. (((SETSPEC GEN%PVAR%5482) (~ (y IN (aff (x INSERT (v INSERT EMPTY)))))) y))))))) ==> ((\x. (!v. ((complement_set (x INSERT (v INSERT EMPTY))) = (GSPEC (\GEN%PVAR%5482. (?y. (((SETSPEC GEN%PVAR%5482) (~ (y IN (aff (x INSERT (v INSERT EMPTY)))))) y))))))) x)) = ((\x. (!v. ((complement_set (x INSERT (v INSERT EMPTY))) = (GSPEC (\GEN%PVAR%5482. (?y. (((SETSPEC GEN%PVAR%5482) (~ (y IN (aff (x INSERT (v INSERT EMPTY)))))) y))))))) x))
T c= c==> ! ! c= * part ccomplement_set * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b3 * / ! c= * part ccomplement_set * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b3 f0 * / ! c= * part ccomplement_set * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b3 f0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?y. t) = t)
T c= c? / f0 f0
- |- ((\v. (!x. ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F))) v)
T * / ! c==> c~ ! c\/ caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 c~ caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 cF f0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- (((!v. ((complement_set (x INSERT (v INSERT EMPTY))) = (GSPEC (\GEN%PVAR%5482. (?y. (((SETSPEC GEN%PVAR%5482) (~ (y IN (aff (x INSERT (v INSERT EMPTY)))))) y)))))) ==> ((\v. ((complement_set (x INSERT (v INSERT EMPTY))) = (GSPEC (\GEN%PVAR%5482. (?y. (((SETSPEC GEN%PVAR%5482) (~ (y IN (aff (x INSERT (v INSERT EMPTY)))))) y)))))) v)) = ((\v. ((complement_set (x INSERT (v INSERT EMPTY))) = (GSPEC (\GEN%PVAR%5482. (?y. (((SETSPEC GEN%PVAR%5482) (~ (y IN (aff (x INSERT (v INSERT EMPTY)))))) y)))))) v))
T c= c==> ! c= * part ccomplement_set * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b2 * / c= * part ccomplement_set * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b2 f1 * / c= * part ccomplement_set * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b2 f1
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x'. ((P x') \/ Q)) = ((!x'. (P x')) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- |- ((((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F) ==> ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F)) ==> (((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F) ==> ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F)))
T c==> c==> c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF
+ (~ (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x')))) |- (~ ((aff (x INSERT (v INSERT EMPTY))) x'))
T c==> c~ c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
+ (~ (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x')))) |- ((~ ((aff (x INSERT (v INSERT EMPTY))) x')) /\ ((aff (x INSERT (v INSERT EMPTY))) x'))
T c==> c~ c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c/\ c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
- ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F) |- ((((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F) ==> ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F)) ==> ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F))
T c==> c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- (((!x. ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F)) ==> ((\x. ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F)) x)) = ((\x. ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F)) x))
T c= c==> ! c==> c~ ! c\/ caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 c~ caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 cF * / c==> c~ ! c\/ caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 c~ caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 cF f1 * / c==> c~ ! c\/ caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 c~ caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 cF f1
- |- ((!x''. (((aff (x INSERT (v INSERT EMPTY))) x'') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x')))) = ((!x'. ((aff (x INSERT (v INSERT EMPTY))) x')) \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))
T c= ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c\/ ! caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
- ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F), (((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F) ==> ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F)) |- ((((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F) ==> ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F)) /\ ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F))
T c==> c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c/\ c==> c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF
+ |- ((UNIV = ((aff (x INSERT (v INSERT EMPTY))) UNION (complement_set (x INSERT (v INSERT EMPTY))))) = T)
T c= c= part cUNIV * * part cUNION * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part ccomplement_set * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
- |- ((x = x) = T)
T c= c= f0 f0 cT
- ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F), (((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F) ==> ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F)) |- (((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F) /\ ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F))
T c==> c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c/\ c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF
+ |- ((UNIV = ((aff (x INSERT (v INSERT EMPTY))) UNION (GSPEC (\GEN%PVAR%5482. (?y. (((SETSPEC GEN%PVAR%5482) (~ (y IN (aff (x INSERT (v INSERT EMPTY)))))) y)))))) = (UNIV = ((aff (x INSERT (v INSERT EMPTY))) UNION (complement_set (x INSERT (v INSERT EMPTY))))))
T c= c= part cUNIV * * part cUNION * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c= part cUNIV * * part cUNION * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part ccomplement_set * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F) |- (((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F) /\ ((~ (!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))) ==> F))
T c==> c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c/\ c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF
+ |- ((x IN UNIV) = T)
T c= cIN f0 part cUNIV cT
- |- ((!x''. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'')))) = (((aff (x INSERT (v INSERT EMPTY))) x') \/ (!x'. (~ ((aff (x INSERT (v INSERT EMPTY))) x')))))
T c= ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0
+ |- (UNIV = ((aff (x INSERT (v INSERT EMPTY))) UNION (GSPEC (\GEN%PVAR%5482. (?y. (((SETSPEC GEN%PVAR%5482) (~ (y IN (aff (x INSERT (v INSERT EMPTY)))))) y))))))
T c= part cUNIV * * part cUNION * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1
+ (~ (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x')))) |- ((((aff (x INSERT (v INSERT EMPTY))) x') ==> F) = F)
T c==> c~ c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c= c==> caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF cF
+ |- (((~ (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x')))) ==> F) = (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))))
T c= c==> c~ c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
+ |- ((\x. (!v. ((complement_set (x INSERT (v INSERT EMPTY))) = (GSPEC (\GEN%PVAR%5482. (?y. (((SETSPEC GEN%PVAR%5482) (~ (y IN (aff (x INSERT (v INSERT EMPTY)))))) y))))))) x)
T * / ! c= * part ccomplement_set * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b3 f0
+ |- ((\v. ((complement_set (x INSERT (v INSERT EMPTY))) = (GSPEC (\GEN%PVAR%5482. (?y. (((SETSPEC GEN%PVAR%5482) (~ (y IN (aff (x INSERT (v INSERT EMPTY)))))) y)))))) v)
T * / c= * part ccomplement_set * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b2 f1
+ (~ (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x')))) |- (((aff (x INSERT (v INSERT EMPTY))) x') ==> F)
T c==> c~ c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
+ |- ((~ (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x')))) ==> F)
T c==> c~ c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
+ |- ((!x'. ((x' IN UNIV) = (x' IN ((aff (x INSERT (v INSERT EMPTY))) UNION (GSPEC (\GEN%PVAR%5482. (?y. (((SETSPEC GEN%PVAR%5482) (~ (y IN (aff (x INSERT (v INSERT EMPTY)))))) y)))))))) = (UNIV = ((aff (x INSERT (v INSERT EMPTY))) UNION (GSPEC (\GEN%PVAR%5482. (?y. (((SETSPEC GEN%PVAR%5482) (~ (y IN (aff (x INSERT (v INSERT EMPTY)))))) y)))))))
T c= ! c= cIN b0 part cUNIV cIN b0 * * part cUNION * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2 c= part cUNIV * * part cUNION * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1
+ (~ (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x')))) |- ((aff (x INSERT (v INSERT EMPTY))) x')
T c==> c~ c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
+ (~ (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x')))) |- ((~ (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x')))) /\ F)
T c==> c~ c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c/\ c~ c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
+ |- ((!x'. (((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x')))) = (!x'. ((x' IN UNIV) = (x' IN ((aff (x INSERT (v INSERT EMPTY))) UNION (GSPEC (\GEN%PVAR%5482. (?y. (((SETSPEC GEN%PVAR%5482) (~ (y IN (aff (x INSERT (v INSERT EMPTY)))))) y)))))))))
T c= ! c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c= cIN b0 part cUNIV cIN b0 * * part cUNION * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b2
+ |- ((T = t) = t)
T c= c= cT f0 f0
+ |- ((~ p) = (p ==> F))
T c= c~ f0 c==> f0 cF
+ |- ((!v. (UNIV = ((aff (x INSERT (v INSERT EMPTY))) UNION (complement_set (x INSERT (v INSERT EMPTY)))))) = T)
T c= ! c= part cUNIV * * part cUNION * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part ccomplement_set * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cT
+ |- ((x IN (GSPEC (\GEN%PVAR%5482. (?y. (((SETSPEC GEN%PVAR%5482) (p y)) y))))) = (p x))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 * f1 b1 b1 * f1 f0
+ |- ((((aff (x INSERT (v INSERT EMPTY))) x') \/ (~ ((aff (x INSERT (v INSERT EMPTY))) x'))) = T)
T c= c\/ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cT
