N PRODUCT_CLAUSES_RIGHT
C |- (!f. (!m. (!n. ((((NUMERAL _0) < n) /\ (m <= n)) ==> (((product (m .. n)) f) = ((real_mul ((product (m .. (n - (NUMERAL (BIT1 _0))))) f)) (f n)))))))
T c==> c/\ c< cNUMERAL c_0 f0 c<= f1 f0 c= cproduct * * part c.. f1 f0 f2 creal_mul cproduct * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f2 * f2 f0
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D Ssrnat.succnK
A |- (!n. (((SUC n) - (NUMERAL (BIT1 _0))) = n))
T c= c- cSUC f0 cNUMERAL cBIT1 c_0 f0
D PRODUCT_CLAUSES_NUMSEG
A |- ((!m. (((product (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) /\ (!m. (!n. (((product (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) ((product (m .. n)) f))))))
T c/\ ! c= cproduct * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= cproduct * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 creal_mul cproduct * * part c.. b0 b1 f0 * f0 cSUC b1 cproduct * * part c.. b0 b1 f0
+ |- (((!t'. (!e'. (((m <= (SUC n)) = g') ==> ((g' ==> (((real_mul ((product (m .. n)) f)) (f (SUC n))) = t')) ==> (((~ g') ==> (((product (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) ((product (m .. n)) f)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((m <= (SUC n)) = g') ==> ((g' ==> (((real_mul ((product (m .. n)) f)) (f (SUC n))) = t')) ==> (((~ g') ==> (((product (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) ((product (m .. n)) f)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((m <= (SUC n)) = g') ==> ((g' ==> (((real_mul ((product (m .. n)) f)) (f (SUC n))) = t')) ==> (((~ g') ==> (((product (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) ((product (m .. n)) f)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c<= f0 cSUC f1 f2 c==> c==> f2 c= creal_mul cproduct * * part c.. f0 f1 f3 * f3 cSUC f1 b0 c==> c==> c~ f2 c= cproduct * * part c.. f0 f1 f3 b1 c= cCOND c<= f0 cSUC f1 creal_mul cproduct * * part c.. f0 f1 f3 * f3 cSUC f1 cproduct * * part c.. f0 f1 f3 cCOND f2 b0 b1 * / ! c==> c= c<= f0 cSUC f1 f2 c==> c==> f2 c= creal_mul cproduct * * part c.. f0 f1 f3 * f3 cSUC f1 b0 c==> c==> c~ f2 c= cproduct * * part c.. f0 f1 f3 b1 c= cCOND c<= f0 cSUC f1 creal_mul cproduct * * part c.. f0 f1 f3 * f3 cSUC f1 cproduct * * part c.. f0 f1 f3 cCOND f2 b0 b1 f4 * / ! c==> c= c<= f0 cSUC f1 f2 c==> c==> f2 c= creal_mul cproduct * * part c.. f0 f1 f3 * f3 cSUC f1 b0 c==> c==> c~ f2 c= cproduct * * part c.. f0 f1 f3 b1 c= cCOND c<= f0 cSUC f1 creal_mul cproduct * * part c.. f0 f1 f3 * f3 cSUC f1 cproduct * * part c.. f0 f1 f3 cCOND f2 b0 b1 f4
+ |- ((~ T) ==> (((product (m .. n)) f) = ((product (m .. n)) f)))
T c==> c~ cT c= cproduct * * part c.. f0 f1 f2 cproduct * * part c.. f0 f1 f2
- |- (((~ (m = (NUMERAL _0))) ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) e')))
T c==> c==> c~ c= f0 cNUMERAL c_0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 f1
+ (((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) |- (((~ T) ==> (((product (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) ((product (m .. n)) f)) = (((COND T) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) e')))
T c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c==> c==> c~ cT c= cproduct * * part c.. f1 f0 f2 f3 c= cCOND c<= f1 cSUC f0 creal_mul cproduct * * part c.. f1 f0 f2 * f2 cSUC f0 cproduct * * part c.. f1 f0 f2 cCOND cT creal_mul cproduct * * part c.. f1 f0 f2 * f2 cSUC f0 f3
- (~ (m = (NUMERAL _0))) |- (((~ ((NUMERAL _0) = m)) ==> (((NUMERAL _0) = m) = F)) = (((NUMERAL _0) = m) = F))
T c==> c~ c= f0 cNUMERAL c_0 c= c==> c~ c= cNUMERAL c_0 f0 c= c= cNUMERAL c_0 f0 cF c= c= cNUMERAL c_0 f0 cF
+ |- (T = ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n))))))
T c= cT c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= cproduct * * part c.. f1 cSUC f0 f2 creal_mul cproduct * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0
+ |- (T ==> (((real_mul ((product (m .. n)) f)) (f (SUC n))) = ((real_mul ((product (m .. n)) f)) (f (SUC n)))))
T c==> cT c= creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1 creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1
+ |- (((T ==> (((real_mul ((product (m .. n)) f)) (f (SUC n))) = ((real_mul ((product (m .. n)) f)) (f (SUC n))))) ==> (((~ T) ==> (((product (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) ((product (m .. n)) f)) = (((COND T) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) e')))) = (((~ T) ==> (((product (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) ((product (m .. n)) f)) = (((COND T) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) e'))))
T c= c==> c==> cT c= creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1 creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1 c==> c==> c~ cT c= cproduct * * part c.. f0 f1 f2 f3 c= cCOND c<= f0 cSUC f1 creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1 cproduct * * part c.. f0 f1 f2 cCOND cT creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1 f3 c==> c==> c~ cT c= cproduct * * part c.. f0 f1 f2 f3 c= cCOND c<= f0 cSUC f1 creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1 cproduct * * part c.. f0 f1 f2 cCOND cT creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1 f3
+ |- (((!m. (((product (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((\m. (((product (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) m)) = ((\m. (((product (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) m))
T c= c==> ! c= cproduct * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= cproduct * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 f1 * / c= cproduct * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 f1
+ |- (((!n. (((SUC n) - (NUMERAL (BIT1 _0))) = n)) ==> ((\n. (((SUC n) - (NUMERAL (BIT1 _0))) = n)) n)) = ((\n. (((SUC n) - (NUMERAL (BIT1 _0))) = n)) n))
T c= c==> ! c= c- cSUC b0 cNUMERAL cBIT1 c_0 b0 * / c= c- cSUC b0 cNUMERAL cBIT1 c_0 b0 f0 * / c= c- cSUC b0 cNUMERAL cBIT1 c_0 b0 f0
+ |- ((!n. (((((NUMERAL _0) < n) /\ (m <= n)) ==> (((product (m .. n)) f) = ((real_mul ((product (m .. (n - (NUMERAL (BIT1 _0))))) f)) (f n)))) ==> ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n))))))) = (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) ==> (((product (m .. (NUMERAL _0))) f) = ((real_mul ((product (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0))))) /\ (!n. (((((NUMERAL _0) < n) /\ (m <= n)) ==> (((product (m .. n)) f) = ((real_mul ((product (m .. (n - (NUMERAL (BIT1 _0))))) f)) (f n)))) ==> ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))))))))
T c= ! c==> c==> c/\ c< cNUMERAL c_0 b0 c<= f0 b0 c= cproduct * * part c.. f0 b0 f1 creal_mul cproduct * * part c.. f0 c- b0 cNUMERAL cBIT1 c_0 f1 * f1 b0 c==> c/\ c< cNUMERAL c_0 cSUC b0 c<= f0 cSUC b0 c= cproduct * * part c.. f0 cSUC b0 f1 creal_mul cproduct * * part c.. f0 c- cSUC b0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC b0 c/\ c==> c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 c= cproduct * * part c.. f0 cNUMERAL c_0 f1 creal_mul cproduct * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 * f1 cNUMERAL c_0 ! c==> c==> c/\ c< cNUMERAL c_0 b0 c<= f0 b0 c= cproduct * * part c.. f0 b0 f1 creal_mul cproduct * * part c.. f0 c- b0 cNUMERAL cBIT1 c_0 f1 * f1 b0 c==> c/\ c< cNUMERAL c_0 cSUC b0 c<= f0 cSUC b0 c= cproduct * * part c.. f0 cSUC b0 f1 creal_mul cproduct * * part c.. f0 c- cSUC b0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC b0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((!q'. (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) = p') ==> ((p' ==> ((((product (m .. (NUMERAL _0))) f) = ((real_mul ((product (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0)))) = q')) ==> (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) ==> (((product (m .. (NUMERAL _0))) f) = ((real_mul ((product (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0))))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) = p') ==> ((p' ==> ((((product (m .. (NUMERAL _0))) f) = ((real_mul ((product (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0)))) = q')) ==> (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) ==> (((product (m .. (NUMERAL _0))) f) = ((real_mul ((product (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0))))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) = p') ==> ((p' ==> ((((product (m .. (NUMERAL _0))) f) = ((real_mul ((product (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0)))) = q')) ==> (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) ==> (((product (m .. (NUMERAL _0))) f) = ((real_mul ((product (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 f1 c==> c==> f1 c= c= cproduct * * part c.. f0 cNUMERAL c_0 f2 creal_mul cproduct * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 * f2 cNUMERAL c_0 b0 c= c==> c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 c= cproduct * * part c.. f0 cNUMERAL c_0 f2 creal_mul cproduct * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 * f2 cNUMERAL c_0 c==> f1 b0 * / c==> c= c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 f1 c==> c==> f1 c= c= cproduct * * part c.. f0 cNUMERAL c_0 f2 creal_mul cproduct * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 * f2 cNUMERAL c_0 b0 c= c==> c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 c= cproduct * * part c.. f0 cNUMERAL c_0 f2 creal_mul cproduct * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 * f2 cNUMERAL c_0 c==> f1 b0 f3 * / c==> c= c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 f1 c==> c==> f1 c= c= cproduct * * part c.. f0 cNUMERAL c_0 f2 creal_mul cproduct * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 * f2 cNUMERAL c_0 b0 c= c==> c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 c= cproduct * * part c.. f0 cNUMERAL c_0 f2 creal_mul cproduct * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 * f2 cNUMERAL c_0 c==> f1 b0 f3
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((((~ (m = (NUMERAL _0))) ==> ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c==> c~ c= f0 cNUMERAL c_0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((m = (NUMERAL _0)) = (m = (NUMERAL _0))) ==> (((m = (NUMERAL _0)) ==> ((f (NUMERAL _0)) = t')) ==> (((~ (m = (NUMERAL _0))) ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND (m = (NUMERAL _0))) t') e'))))) = (((m = (NUMERAL _0)) ==> ((f (NUMERAL _0)) = t')) ==> (((~ (m = (NUMERAL _0))) ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND (m = (NUMERAL _0))) t') e')))))
T c= c==> c= c= f0 cNUMERAL c_0 c= f0 cNUMERAL c_0 c==> c==> c= f0 cNUMERAL c_0 c= * f1 cNUMERAL c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= creal_of_num cNUMERAL cBIT1 c_0 f3 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL c_0 f2 f3 c==> c==> c= f0 cNUMERAL c_0 c= * f1 cNUMERAL c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= creal_of_num cNUMERAL cBIT1 c_0 f3 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL c_0 f2 f3
- |- (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND g') t') e')))))
T c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * f2 cNUMERAL c_0 f3 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT1 c_0 f4 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 f3 f4
+ |- (((m <= (SUC n)) = g') ==> ((g' ==> (((real_mul ((product (m .. n)) f)) (f (SUC n))) = t')) ==> (((~ g') ==> (((product (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) ((product (m .. n)) f)) = (((COND g') t') e')))))
T c==> c= c<= f0 cSUC f1 f2 c==> c==> f2 c= creal_mul cproduct * * part c.. f0 f1 f3 * f3 cSUC f1 f4 c==> c==> c~ f2 c= cproduct * * part c.. f0 f1 f3 f5 c= cCOND c<= f0 cSUC f1 creal_mul cproduct * * part c.. f0 f1 f3 * f3 cSUC f1 cproduct * * part c.. f0 f1 f3 cCOND f2 f4 f5
+ |- (((!g'. (!t'. (!e'. (((m <= (SUC n)) = g') ==> ((g' ==> (((real_mul ((product (m .. n)) f)) (f (SUC n))) = t')) ==> (((~ g') ==> (((product (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) ((product (m .. n)) f)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((m <= (SUC n)) = g') ==> ((g' ==> (((real_mul ((product (m .. n)) f)) (f (SUC n))) = t')) ==> (((~ g') ==> (((product (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) ((product (m .. n)) f)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((m <= (SUC n)) = g') ==> ((g' ==> (((real_mul ((product (m .. n)) f)) (f (SUC n))) = t')) ==> (((~ g') ==> (((product (m .. n)) f) = e')) ==> ((((COND (m <= (SUC n))) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) ((product (m .. n)) f)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c<= f0 cSUC f1 b0 c==> c==> b0 c= creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1 b1 c==> c==> c~ b0 c= cproduct * * part c.. f0 f1 f2 b2 c= cCOND c<= f0 cSUC f1 creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1 cproduct * * part c.. f0 f1 f2 cCOND b0 b1 b2 * / ! ! c==> c= c<= f0 cSUC f1 b0 c==> c==> b0 c= creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1 b1 c==> c==> c~ b0 c= cproduct * * part c.. f0 f1 f2 b2 c= cCOND c<= f0 cSUC f1 creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1 cproduct * * part c.. f0 f1 f2 cCOND b0 b1 b2 f3 * / ! ! c==> c= c<= f0 cSUC f1 b0 c==> c==> b0 c= creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1 b1 c==> c==> c~ b0 c= cproduct * * part c.. f0 f1 f2 b2 c= cCOND c<= f0 cSUC f1 creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1 cproduct * * part c.. f0 f1 f2 cCOND b0 b1 b2 f3
+ |- ((((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> ((((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))) = T)) ==> (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n))))) = ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> T))) = (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n))))) = ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> T)))
T c= c==> c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= c= cproduct * * part c.. f1 cSUC f0 f2 creal_mul cproduct * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0 cT c= c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= cproduct * * part c.. f1 cSUC f0 f2 creal_mul cproduct * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0 c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 cT c= c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= cproduct * * part c.. f1 cSUC f0 f2 creal_mul cproduct * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0 c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 cT
- |- ((\g'. (!t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= * f1 cNUMERAL c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL cBIT1 c_0 b2 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f2
+ ((((NUMERAL _0) < n) /\ (m <= n)) ==> (((product (m .. n)) f) = ((real_mul ((product (m .. (n - (NUMERAL (BIT1 _0))))) f)) (f n)))) |- (((((NUMERAL _0) < n) /\ (m <= n)) ==> (((product (m .. n)) f) = ((real_mul ((product (m .. (n - (NUMERAL (BIT1 _0))))) f)) (f n)))) /\ ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n))))))
T c==> c==> c/\ c< cNUMERAL c_0 f0 c<= f1 f0 c= cproduct * * part c.. f1 f0 f2 creal_mul cproduct * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f2 * f2 f0 c/\ c==> c/\ c< cNUMERAL c_0 f0 c<= f1 f0 c= cproduct * * part c.. f1 f0 f2 creal_mul cproduct * * part c.. f1 c- f0 cNUMERAL cBIT1 c_0 f2 * f2 f0 c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= cproduct * * part c.. f1 cSUC f0 f2 creal_mul cproduct * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0
+ |- ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> ((((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))) = T))
T c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= c= cproduct * * part c.. f1 cSUC f0 f2 creal_mul cproduct * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0 cT
+ |- (((((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) ==> (((product (m .. (NUMERAL _0))) f) = ((real_mul ((product (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0))))) /\ (!n. (((((NUMERAL _0) < n) /\ (m <= n)) ==> (((product (m .. n)) f) = ((real_mul ((product (m .. (n - (NUMERAL (BIT1 _0))))) f)) (f n)))) ==> ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))))))) ==> (!n. ((((NUMERAL _0) < n) /\ (m <= n)) ==> (((product (m .. n)) f) = ((real_mul ((product (m .. (n - (NUMERAL (BIT1 _0))))) f)) (f n)))))) = (!n. ((((NUMERAL _0) < n) /\ (m <= n)) ==> (((product (m .. n)) f) = ((real_mul ((product (m .. (n - (NUMERAL (BIT1 _0))))) f)) (f n))))))
T c= c==> c/\ c==> c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 c= cproduct * * part c.. f0 cNUMERAL c_0 f1 creal_mul cproduct * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 * f1 cNUMERAL c_0 ! c==> c==> c/\ c< cNUMERAL c_0 b0 c<= f0 b0 c= cproduct * * part c.. f0 b0 f1 creal_mul cproduct * * part c.. f0 c- b0 cNUMERAL cBIT1 c_0 f1 * f1 b0 c==> c/\ c< cNUMERAL c_0 cSUC b0 c<= f0 cSUC b0 c= cproduct * * part c.. f0 cSUC b0 f1 creal_mul cproduct * * part c.. f0 c- cSUC b0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC b0 ! c==> c/\ c< cNUMERAL c_0 b0 c<= f0 b0 c= cproduct * * part c.. f0 b0 f1 creal_mul cproduct * * part c.. f0 c- b0 cNUMERAL cBIT1 c_0 f1 * f1 b0 ! c==> c/\ c< cNUMERAL c_0 b0 c<= f0 b0 c= cproduct * * part c.. f0 b0 f1 creal_mul cproduct * * part c.. f0 c- b0 cNUMERAL cBIT1 c_0 f1 * f1 b0
- (~ (m = (NUMERAL _0))) |- (~ ((NUMERAL _0) = m))
T c==> c~ c= f0 cNUMERAL c_0 c~ c= cNUMERAL c_0 f0
+ |- ((((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) ==> (((product (m .. (NUMERAL _0))) f) = ((real_mul ((product (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0))))) /\ (!n. (((((NUMERAL _0) < n) /\ (m <= n)) ==> (((product (m .. n)) f) = ((real_mul ((product (m .. (n - (NUMERAL (BIT1 _0))))) f)) (f n)))) ==> ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))))))) ==> (!n. ((((NUMERAL _0) < n) /\ (m <= n)) ==> (((product (m .. n)) f) = ((real_mul ((product (m .. (n - (NUMERAL (BIT1 _0))))) f)) (f n))))))
T c==> c/\ c==> c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 c= cproduct * * part c.. f0 cNUMERAL c_0 f1 creal_mul cproduct * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 * f1 cNUMERAL c_0 ! c==> c==> c/\ c< cNUMERAL c_0 b0 c<= f0 b0 c= cproduct * * part c.. f0 b0 f1 creal_mul cproduct * * part c.. f0 c- b0 cNUMERAL cBIT1 c_0 f1 * f1 b0 c==> c/\ c< cNUMERAL c_0 cSUC b0 c<= f0 cSUC b0 c= cproduct * * part c.. f0 cSUC b0 f1 creal_mul cproduct * * part c.. f0 c- cSUC b0 cNUMERAL cBIT1 c_0 f1 * f1 cSUC b0 ! c==> c/\ c< cNUMERAL c_0 b0 c<= f0 b0 c= cproduct * * part c.. f0 b0 f1 creal_mul cproduct * * part c.. f0 c- b0 cNUMERAL cBIT1 c_0 f1 * f1 b0
- T |- (T = T)
T c==> cT c= cT cT
- (~ (m = (NUMERAL _0))) |- ((~ (m = (NUMERAL _0))) /\ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c~ c= f0 cNUMERAL c_0 c/\ c~ c= f0 cNUMERAL c_0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) = (((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n)))) ==> (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> ((((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))) = q')) ==> (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n))))) = ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> q')))) = (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> ((((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))) = q')) ==> (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n))))) = ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> q'))))
T c= c==> c= c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c==> c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= c= cproduct * * part c.. f1 cSUC f0 f2 creal_mul cproduct * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0 f3 c= c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= cproduct * * part c.. f1 cSUC f0 f2 creal_mul cproduct * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0 c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 f3 c==> c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= c= cproduct * * part c.. f1 cSUC f0 f2 creal_mul cproduct * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0 f3 c= c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= cproduct * * part c.. f1 cSUC f0 f2 creal_mul cproduct * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0 c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 f3
+ |- ((((~ T) ==> (((product (m .. n)) f) = ((product (m .. n)) f))) ==> ((((COND (m <= (SUC n))) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) ((product (m .. n)) f)) = (((COND T) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) ((product (m .. n)) f)))) = ((((COND (m <= (SUC n))) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) ((product (m .. n)) f)) = (((COND T) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) ((product (m .. n)) f))))
T c= c==> c==> c~ cT c= cproduct * * part c.. f0 f1 f2 cproduct * * part c.. f0 f1 f2 c= cCOND c<= f0 cSUC f1 creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1 cproduct * * part c.. f0 f1 f2 cCOND cT creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1 cproduct * * part c.. f0 f1 f2 c= cCOND c<= f0 cSUC f1 creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1 cproduct * * part c.. f0 f1 f2 cCOND cT creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1 cproduct * * part c.. f0 f1 f2
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((\p'. (!q'. (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) = p') ==> ((p' ==> ((((product (m .. (NUMERAL _0))) f) = ((real_mul ((product (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0)))) = q')) ==> (((((NUMERAL _0) < (NUMERAL _0)) /\ (m <= (NUMERAL _0))) ==> (((product (m .. (NUMERAL _0))) f) = ((real_mul ((product (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 b0 c==> c==> b0 c= c= cproduct * * part c.. f0 cNUMERAL c_0 f1 creal_mul cproduct * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 * f1 cNUMERAL c_0 b1 c= c==> c/\ c< cNUMERAL c_0 cNUMERAL c_0 c<= f0 cNUMERAL c_0 c= cproduct * * part c.. f0 cNUMERAL c_0 f1 creal_mul cproduct * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 * f1 cNUMERAL c_0 c==> b0 b1 f2
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ F |- (F /\ ((((product (m .. (NUMERAL _0))) f) = ((real_mul ((product (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0)))) = ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul ((product (m .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) f)) (f (NUMERAL _0))))))
T c==> cF c/\ cF c= c= cproduct * * part c.. f0 cNUMERAL c_0 f1 creal_mul cproduct * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 * f1 cNUMERAL c_0 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul cproduct * * part c.. f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 * f1 cNUMERAL c_0
- |- (((!t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * f2 cNUMERAL c_0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 * / ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * f2 cNUMERAL c_0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 f3 * / ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * f2 cNUMERAL c_0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 f3
+ |- ((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))))
T c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= cproduct * * part c.. f1 cSUC f0 f2 creal_mul cproduct * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f2 * f2 cSUC f0
+ |- (((!n. (~ (n < n))) ==> ((\n. (~ (n < n))) n)) = ((\n. (~ (n < n))) n))
T c= c==> ! c~ c< b0 b0 * / c~ c< b0 b0 f0 * / c~ c< b0 b0 f0
+ |- (((!q'. (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) = p') ==> ((p' ==> ((((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))) = q')) ==> (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n))))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) = p') ==> ((p' ==> ((((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))) = q')) ==> (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n))))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) = p') ==> ((p' ==> ((((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n)))) = q')) ==> (((((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) ==> (((product (m .. (SUC n))) f) = ((real_mul ((product (m .. ((SUC n) - (NUMERAL (BIT1 _0))))) f)) (f (SUC n))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 f2 c==> c==> f2 c= c= cproduct * * part c.. f1 cSUC f0 f3 creal_mul cproduct * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f3 * f3 cSUC f0 b0 c= c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= cproduct * * part c.. f1 cSUC f0 f3 creal_mul cproduct * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f3 * f3 cSUC f0 c==> f2 b0 * / c==> c= c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 f2 c==> c==> f2 c= c= cproduct * * part c.. f1 cSUC f0 f3 creal_mul cproduct * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f3 * f3 cSUC f0 b0 c= c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= cproduct * * part c.. f1 cSUC f0 f3 creal_mul cproduct * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f3 * f3 cSUC f0 c==> f2 b0 f4 * / c==> c= c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 f2 c==> c==> f2 c= c= cproduct * * part c.. f1 cSUC f0 f3 creal_mul cproduct * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f3 * f3 cSUC f0 b0 c= c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= cproduct * * part c.. f1 cSUC f0 f3 creal_mul cproduct * * part c.. f1 c- cSUC f0 cNUMERAL cBIT1 c_0 f3 * f3 cSUC f0 c==> f2 b0 f4
- (m = (NUMERAL _0)) |- ((NUMERAL _0) = m)
T c==> c= f0 cNUMERAL c_0 c= cNUMERAL c_0 f0
- (~ (m = (NUMERAL _0))) |- ((m = (NUMERAL _0)) = F)
T c==> c~ c= f0 cNUMERAL c_0 c= c= f0 cNUMERAL c_0 cF
+ |- ((\m. (!n. (((product (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((real_mul ((product (m .. n)) f)) (f (SUC n)))) ((product (m .. n)) f))))) m)
T * / ! c= cproduct * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 creal_mul cproduct * * part c.. b0 b1 f0 * f0 cSUC b1 cproduct * * part c.. b0 b1 f0 f1
+ T |- (T /\ (((real_mul ((product (m .. n)) f)) (f (SUC n))) = ((real_mul ((product (m .. n)) f)) (f (SUC n)))))
T c==> cT c/\ cT c= creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1 creal_mul cproduct * * part c.. f0 f1 f2 * f2 cSUC f1
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
+ |- (((product (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cproduct * * part c.. f0 cNUMERAL c_0 f1 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- F |- (F = T)
T c==> cF c= cF cT
- |- ((~ (m = (NUMERAL _0))) ==> ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c~ c= f0 cNUMERAL c_0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND g') t') e')))))) ==> ((\e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND g') t') e')))))) e')) = ((\e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * f2 cNUMERAL c_0 f3 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 f3 b0 * / c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * f2 cNUMERAL c_0 f3 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 f3 b0 f4 * / c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * f2 cNUMERAL c_0 f3 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 f3 b0 f4
- |- ((\e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * f2 cNUMERAL c_0 f3 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT1 c_0 b0 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 f3 b0 f4
- |- ((m = (NUMERAL _0)) ==> ((f (NUMERAL _0)) = (f (NUMERAL _0))))
T c==> c= f0 cNUMERAL c_0 c= * f1 cNUMERAL c_0 * f1 cNUMERAL c_0
- ((NUMERAL _0) = m) |- (m = (NUMERAL _0))
T c==> c= cNUMERAL c_0 f0 c= f0 cNUMERAL c_0
- |- ((((m = (NUMERAL _0)) ==> ((f (NUMERAL _0)) = (f (NUMERAL _0)))) ==> (((~ (m = (NUMERAL _0))) ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) e')))) = (((~ (m = (NUMERAL _0))) ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) e'))))
T c= c==> c==> c= f0 cNUMERAL c_0 c= * f1 cNUMERAL c_0 * f1 cNUMERAL c_0 c==> c==> c~ c= f0 cNUMERAL c_0 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (~ (m = (NUMERAL _0))) |- (((NUMERAL _0) = m) = F)
T c==> c~ c= f0 cNUMERAL c_0 c= c= cNUMERAL c_0 f0 cF
- (((NUMERAL _0) < (SUC n)) /\ (m <= (SUC n))) |- (((NUMERAL _0) < (SUC n)) = T)
T c==> c/\ c< cNUMERAL c_0 cSUC f0 c<= f1 cSUC f0 c= c< cNUMERAL c_0 cSUC f0 cT
- (~ T) |- (T = F)
T c==> c~ cT c= cT cF
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- (m = (NUMERAL _0)) |- ((m = (NUMERAL _0)) /\ ((f (NUMERAL _0)) = (f (NUMERAL _0))))
T c==> c= f0 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= * f1 cNUMERAL c_0 * f1 cNUMERAL c_0
- |- (((m = (NUMERAL _0)) ==> ((f (NUMERAL _0)) = t')) ==> (((~ (m = (NUMERAL _0))) ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND (m = (NUMERAL _0))) t') e'))))
T c==> c==> c= f0 cNUMERAL c_0 c= * f1 cNUMERAL c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= creal_of_num cNUMERAL cBIT1 c_0 f3 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL c_0 f2 f3
- |- ((\t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * f2 cNUMERAL c_0 b0 c==> c==> c~ f1 c= creal_of_num cNUMERAL cBIT1 c_0 b1 c= cCOND c= f0 cNUMERAL c_0 * f2 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 f3
- |- (((!g'. (!t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> ((f (NUMERAL _0)) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT1 _0))) = e')) ==> ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= * f1 cNUMERAL c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL cBIT1 c_0 b2 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= * f1 cNUMERAL c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL cBIT1 c_0 b2 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f2 * / ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= * f1 cNUMERAL c_0 b1 c==> c==> c~ b0 c= creal_of_num cNUMERAL cBIT1 c_0 b2 c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f2
- |- ((((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cCOND c= f0 cNUMERAL c_0 * f1 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
