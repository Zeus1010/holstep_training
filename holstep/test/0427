N COMPLEX_SUB_POW_L1
C |- (!x. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow x) n)) = ((complex_mul ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) x)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow f1 f0 ccomplex_mul cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0
D TRUTH
A |- T
T cT
D COMPLEX_MUL_LNEG
A |- (!x. (!y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y)))))
T c= ccomplex_mul cvector_neg f0 f1 cvector_neg ccomplex_mul f0 f1
D COMPLEX_NEG_SUB
A |- (!x. (!y. ((vector_neg ((vector_sub x) y)) = ((vector_sub y) x))))
T c= cvector_neg cvector_sub f0 f1 cvector_sub f1 f0
D COMPLEX_SUB_POW_R1
A |- (!x. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0
+ |- ((((NUMERAL (BIT1 _0)) <= n) = p') ==> ((p' ==> (((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (p' ==> q'))))
T c==> c= c<= cNUMERAL cBIT1 c_0 f0 f1 c==> c==> f1 c= c= cvector_neg cvector_sub ccomplex_pow f2 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b0 f3 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg cvector_sub ccomplex_pow f2 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b0 c==> f1 f3
- ((NUMERAL (BIT1 _0)) <= n) |- (((NUMERAL (BIT1 _0)) <= n) = T)
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c<= cNUMERAL cBIT1 c_0 f0 cT
- |- (!g. ((!i. (((a <= i) /\ (i <= b)) ==> ((f i) = (g i)))) ==> (((vsum (a .. b)) (\i. (f i))) = ((vsum (a .. b)) g))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= cvsum * * part c.. f0 f1 / * f2 b0 cvsum * * part c.. f0 f1 f3
- |- (((!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_pow x) x) = ((complex_pow x) x)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\x. ((complex_pow x) x))))) = (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\x. ((complex_pow x) x)))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_pow f1 b0 ccomplex_pow f1 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0
+ |- ((\x. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))))) x)
T * / ! c==> c<= cNUMERAL cBIT1 c_0 b1 c= cvector_sub ccomplex_pow b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- b1 cNUMERAL cBIT1 c_0 / ccomplex_pow b0 b2 f0
+ (((vector_sub y) x) = (vector_neg ((vector_sub x) y))) |- ((vector_neg ((vector_sub x) y)) = ((vector_sub y) x))
T c==> c= cvector_sub f0 f1 cvector_neg cvector_sub f1 f0 c= cvector_neg cvector_sub f1 f0 cvector_sub f0 f1
+ |- (((!x. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))))) ==> ((\x. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))))) x)) = ((\x. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))))) x))
T c= c==> ! ! c==> c<= cNUMERAL cBIT1 c_0 b1 c= cvector_sub ccomplex_pow b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- b1 cNUMERAL cBIT1 c_0 / ccomplex_pow b0 b2 * / ! c==> c<= cNUMERAL cBIT1 c_0 b1 c= cvector_sub ccomplex_pow b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- b1 cNUMERAL cBIT1 c_0 / ccomplex_pow b0 b2 f0 * / ! c==> c<= cNUMERAL cBIT1 c_0 b1 c= cvector_sub ccomplex_pow b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- b1 cNUMERAL cBIT1 c_0 / ccomplex_pow b0 b2 f0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- |- ((!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_pow x) x) = (g x)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_pow f1 b0 * f2 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2
+ |- ((\x. (!y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y))))) x)
T * / ! c= ccomplex_mul cvector_neg b0 b1 cvector_neg ccomplex_mul b0 b1 f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0
+ |- ((!n. t) = t)
T c= ! f0 f0
+ |- ((\n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))))) n)
T * / c==> c<= cNUMERAL cBIT1 c_0 b0 c= cvector_sub ccomplex_pow f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 / ccomplex_pow f0 b1 f1
- |- (((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((vsum s) (\i. (f i))) = ((vsum s) g))) = T)
T c= c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= cvsum f0 / * f1 b0 cvsum f0 f2 cT
+ |- ((\y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y)))) y)
T * / c= ccomplex_mul cvector_neg f0 b0 cvector_neg ccomplex_mul f0 b0 f1
- |- ((!i. ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_pow x) i) = (g i)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))
T c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_pow f1 b0 * f2 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2
+ |- ((\y. (((vector_sub y) x) = (vector_neg ((vector_sub x) y)))) y)
T * / c= cvector_sub b0 f0 cvector_neg cvector_sub f0 b0 f1
- |- (((((NUMERAL (BIT1 _0)) <= n) = ((NUMERAL (BIT1 _0)) <= n)) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> (((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (((NUMERAL (BIT1 _0)) <= n) ==> q')))) = ((((NUMERAL (BIT1 _0)) <= n) ==> (((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (((NUMERAL (BIT1 _0)) <= n) ==> q'))))
T c= c==> c= c<= cNUMERAL cBIT1 c_0 f0 c<= cNUMERAL cBIT1 c_0 f0 c==> c==> c<= cNUMERAL cBIT1 c_0 f0 c= c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 f2 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c==> c<= cNUMERAL cBIT1 c_0 f0 f2 c==> c==> c<= cNUMERAL cBIT1 c_0 f0 c= c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 f2 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c==> c<= cNUMERAL cBIT1 c_0 f0 f2
+ |- ((!x. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))))) = (!x. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) ((complex_pow x) n)) = ((complex_mul ((vector_sub (Cx (real_of_num (NUMERAL (BIT1 _0))))) x)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))))))
T c= ! ! c==> c<= cNUMERAL cBIT1 c_0 b1 c= cvector_neg cvector_sub ccomplex_pow b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- b1 cNUMERAL cBIT1 c_0 / ccomplex_pow b0 b2 ! ! c==> c<= cNUMERAL cBIT1 c_0 b1 c= cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow b0 b1 ccomplex_mul cvector_sub cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cvsum * * part c.. cNUMERAL c_0 c- b1 cNUMERAL cBIT1 c_0 / ccomplex_pow b0 b2
+ |- (!x. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0
+ ((NUMERAL (BIT1 _0)) <= n) |- (((NUMERAL (BIT1 _0)) <= n) /\ (((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c= c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0
+ |- (((!y. (((vector_sub y) x) = (vector_neg ((vector_sub x) y)))) ==> ((\y. (((vector_sub y) x) = (vector_neg ((vector_sub x) y)))) y)) = ((\y. (((vector_sub y) x) = (vector_neg ((vector_sub x) y)))) y))
T c= c==> ! c= cvector_sub b0 f0 cvector_neg cvector_sub f0 b0 * / c= cvector_sub b0 f0 cvector_neg cvector_sub f0 b0 f1 * / c= cvector_sub b0 f0 cvector_neg cvector_sub f0 b0 f1
- |- ((\p'. (!q'. ((((NUMERAL (BIT1 _0)) <= n) = p') ==> ((p' ==> (((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c<= cNUMERAL cBIT1 c_0 f0 b0 c==> c==> b0 c= c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 b1 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 c==> b0 b1 f2
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- |- ((\g. ((!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_pow x) x) = (g x)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_pow f1 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 f2
- |- ((!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_pow x) x) = ((complex_pow x) x)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\x. ((complex_pow x) x)))))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_pow f1 b0 ccomplex_pow f1 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0
- |- ((!i. ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_pow x) i) = ((complex_pow x) i)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))
T c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_pow f1 b0 ccomplex_pow f1 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0
- ((NUMERAL (BIT1 _0)) <= n) |- (T = ((NUMERAL (BIT1 _0)) <= n))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= cT c<= cNUMERAL cBIT1 c_0 f0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (!x. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0
- |- (((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_pow x) i) = ((complex_pow x) i))) = T)
T c= c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 c- f1 cNUMERAL cBIT1 c_0 c= ccomplex_pow f2 f0 ccomplex_pow f2 f0 cT
- |- (((((NUMERAL (BIT1 _0)) <= n) ==> (((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))))) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))))) = ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))))))
T c= c==> c==> c<= cNUMERAL cBIT1 c_0 f0 c= c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0
- |- (((!i. (((a <= i) /\ (i <= b)) ==> ((f i) = (g i)))) ==> (((vsum (a .. b)) (\i. (f i))) = ((vsum (a .. b)) g))) = T)
T c= c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= cvsum * * part c.. f0 f1 / * f2 b0 cvsum * * part c.. f0 f1 f3 cT
- |- ((\q'. ((((NUMERAL (BIT1 _0)) <= n) = p') ==> ((p' ==> (((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (p' ==> q'))))) q')
T * / c==> c= c<= cNUMERAL cBIT1 c_0 f0 f1 c==> c==> f1 c= c= cvector_neg ccomplex_mul cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 b0 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 c==> f1 b0 f3
- |- (((!g. ((!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_pow x) x) = (g x)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) ==> ((\g. ((!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_pow x) x) = (g x)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) g)) = ((\g. ((!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_pow x) x) = (g x)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_pow f1 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_pow f1 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 f2 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_pow f1 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 f2
- |- ((((NUMERAL (BIT1 _0)) <= n) = p') ==> ((p' ==> (((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (p' ==> q'))))
T c==> c= c<= cNUMERAL cBIT1 c_0 f0 f1 c==> c==> f1 c= c= cvector_neg ccomplex_mul cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b0 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b0 f3 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b0 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b0 c==> f1 f3
- |- ((((NUMERAL (BIT1 _0)) <= n) ==> (((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (((NUMERAL (BIT1 _0)) <= n) ==> q')))
T c==> c==> c<= cNUMERAL cBIT1 c_0 f0 c= c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 f2 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c==> c<= cNUMERAL cBIT1 c_0 f0 f2
- (x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) |- ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) = T)
T c==> cIN f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c= cIN f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 cT
- ((NUMERAL (BIT1 _0)) <= n) |- (((NUMERAL (BIT1 _0)) <= n) /\ (((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c= cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0
+ |- ((!x. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))))) = (!x. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))))))
T c= ! ! c==> c<= cNUMERAL cBIT1 c_0 b1 c= cvector_neg ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- b1 cNUMERAL cBIT1 c_0 / ccomplex_pow b0 b2 ccomplex_mul cvector_neg cvector_sub b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- b1 cNUMERAL cBIT1 c_0 / ccomplex_pow b0 b2 ! ! c==> c<= cNUMERAL cBIT1 c_0 b1 c= cvector_neg cvector_sub ccomplex_pow b0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- b1 cNUMERAL cBIT1 c_0 / ccomplex_pow b0 b2
+ |- (T = (!x. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))))))
T c= cT ! ! c==> c<= cNUMERAL cBIT1 c_0 b1 c= cvector_neg ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- b1 cNUMERAL cBIT1 c_0 / ccomplex_pow b0 b2 ccomplex_mul cvector_neg cvector_sub b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- b1 cNUMERAL cBIT1 c_0 / ccomplex_pow b0 b2
- |- (((!q'. ((((NUMERAL (BIT1 _0)) <= n) = p') ==> ((p' ==> (((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (p' ==> q'))))) ==> ((\q'. ((((NUMERAL (BIT1 _0)) <= n) = p') ==> ((p' ==> (((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (p' ==> q'))))) q')) = ((\q'. ((((NUMERAL (BIT1 _0)) <= n) = p') ==> ((p' ==> (((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c<= cNUMERAL cBIT1 c_0 f0 f1 c==> c==> f1 c= c= cvector_neg ccomplex_mul cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 b0 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 c==> f1 b0 * / c==> c= c<= cNUMERAL cBIT1 c_0 f0 f1 c==> c==> f1 c= c= cvector_neg ccomplex_mul cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 b0 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 c==> f1 b0 f3 * / c==> c= c<= cNUMERAL cBIT1 c_0 f0 f1 c==> c==> f1 c= c= cvector_neg ccomplex_mul cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 b0 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 c==> f1 b0 f3
- |- (((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_pow x) x) = ((complex_pow x) x))) = T)
T c= c==> cIN f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c= ccomplex_pow f2 f0 ccomplex_pow f2 f0 cT
+ |- (((!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))))) ==> ((\n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))))) n)) = ((\n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) = ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))))) n))
T c= c==> ! c==> c<= cNUMERAL cBIT1 c_0 b0 c= cvector_sub ccomplex_pow f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 / ccomplex_pow f0 b1 * / c==> c<= cNUMERAL cBIT1 c_0 b0 c= cvector_sub ccomplex_pow f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 / ccomplex_pow f0 b1 f1 * / c==> c<= cNUMERAL cBIT1 c_0 b0 c= cvector_sub ccomplex_pow f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 / ccomplex_pow f0 b1 f1
+ |- ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))))
T c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0
- |- (((!i. ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_pow x) i) = ((complex_pow x) i)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))
T c= c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_pow f1 b0 ccomplex_pow f1 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0
- |- (!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_pow x) x) = ((complex_pow x) x))))
T c==> cIN f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c= ccomplex_pow f2 f0 ccomplex_pow f2 f0
- (((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) |- (((NUMERAL _0) <= i) = T)
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 c- f1 cNUMERAL cBIT1 c_0 c= c<= cNUMERAL c_0 f0 cT
+ |- (((!q'. ((((NUMERAL (BIT1 _0)) <= n) = p') ==> ((p' ==> (((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (p' ==> q'))))) ==> ((\q'. ((((NUMERAL (BIT1 _0)) <= n) = p') ==> ((p' ==> (((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (p' ==> q'))))) q')) = ((\q'. ((((NUMERAL (BIT1 _0)) <= n) = p') ==> ((p' ==> (((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c<= cNUMERAL cBIT1 c_0 f0 f1 c==> c==> f1 c= c= cvector_neg cvector_sub ccomplex_pow f2 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 b0 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg cvector_sub ccomplex_pow f2 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 c==> f1 b0 * / c==> c= c<= cNUMERAL cBIT1 c_0 f0 f1 c==> c==> f1 c= c= cvector_neg cvector_sub ccomplex_pow f2 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 b0 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg cvector_sub ccomplex_pow f2 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 c==> f1 b0 f3 * / c==> c= c<= cNUMERAL cBIT1 c_0 f0 f1 c==> c==> f1 c= c= cvector_neg cvector_sub ccomplex_pow f2 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 b0 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg cvector_sub ccomplex_pow f2 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 c==> f1 b0 f3
- |- (!i. ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_pow x) i) = ((complex_pow x) i))))
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 c- f1 cNUMERAL cBIT1 c_0 c= ccomplex_pow f2 f0 ccomplex_pow f2 f0
+ |- (((!x. (!y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y))))) ==> ((\x. (!y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y))))) x)) = ((\x. (!y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y))))) x))
T c= c==> ! ! c= ccomplex_mul cvector_neg b0 b1 cvector_neg ccomplex_mul b0 b1 * / ! c= ccomplex_mul cvector_neg b0 b1 cvector_neg ccomplex_mul b0 b1 f0 * / ! c= ccomplex_mul cvector_neg b0 b1 cvector_neg ccomplex_mul b0 b1 f0
+ |- (((!p'. (!q'. ((((NUMERAL (BIT1 _0)) <= n) = p') ==> ((p' ==> (((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((NUMERAL (BIT1 _0)) <= n) = p') ==> ((p' ==> (((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((NUMERAL (BIT1 _0)) <= n) = p') ==> ((p' ==> (((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c<= cNUMERAL cBIT1 c_0 f0 b0 c==> c==> b0 c= c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 b1 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 c==> b0 b1 * / ! c==> c= c<= cNUMERAL cBIT1 c_0 f0 b0 c==> c==> b0 c= c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 b1 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 c==> b0 b1 f2 * / ! c==> c= c<= cNUMERAL cBIT1 c_0 f0 b0 c==> c==> b0 c= c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 b1 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 c==> b0 b1 f2
+ ((vector_neg ((vector_sub x) y)) = ((vector_sub y) x)) |- (((vector_sub y) x) = (vector_neg ((vector_sub x) y)))
T c==> c= cvector_neg cvector_sub f0 f1 cvector_sub f1 f0 c= cvector_sub f1 f0 cvector_neg cvector_sub f0 f1
+ |- (((vector_sub y) x) = (vector_neg ((vector_sub x) y)))
T c= cvector_sub f0 f1 cvector_neg cvector_sub f1 f0
- ((NUMERAL (BIT1 _0)) <= n) |- (((NUMERAL (BIT1 _0)) <= n) /\ (((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c= c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0
- |- (!g. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((vsum s) (\i. (f i))) = ((vsum s) g))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= cvsum f0 / * f1 b0 cvsum f0 f2
+ |- ((\p'. (!q'. ((((NUMERAL (BIT1 _0)) <= n) = p') ==> ((p' ==> (((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c<= cNUMERAL cBIT1 c_0 f0 b0 c==> c==> b0 c= c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 b1 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 c==> b0 b1 f2
+ |- (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0
+ |- (((((NUMERAL (BIT1 _0)) <= n) ==> (((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))))) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))))) = ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))))))
T c= c==> c==> c<= cNUMERAL cBIT1 c_0 f0 c= c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0
+ |- ((((NUMERAL (BIT1 _0)) <= n) ==> (((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (((NUMERAL (BIT1 _0)) <= n) ==> q')))
T c==> c==> c<= cNUMERAL cBIT1 c_0 f0 c= c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 f2 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c==> c<= cNUMERAL cBIT1 c_0 f0 f2
+ |- (!p'. (!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3
- (((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) |- ((i <= (n - (NUMERAL (BIT1 _0)))) = T)
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 c- f1 cNUMERAL cBIT1 c_0 c= c<= f0 c- f1 cNUMERAL cBIT1 c_0 cT
- |- (((!p'. (!q'. ((((NUMERAL (BIT1 _0)) <= n) = p') ==> ((p' ==> (((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((NUMERAL (BIT1 _0)) <= n) = p') ==> ((p' ==> (((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((NUMERAL (BIT1 _0)) <= n) = p') ==> ((p' ==> (((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c<= cNUMERAL cBIT1 c_0 f0 b0 c==> c==> b0 c= c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 b1 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 c==> b0 b1 * / ! c==> c= c<= cNUMERAL cBIT1 c_0 f0 b0 c==> c==> b0 c= c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 b1 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 c==> b0 b1 f2 * / ! c==> c= c<= cNUMERAL cBIT1 c_0 f0 b0 c==> c==> b0 c= c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 b1 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b2 c==> b0 b1 f2
+ |- (((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q')))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3 cT
+ |- ((\q'. ((((NUMERAL (BIT1 _0)) <= n) = p') ==> ((p' ==> (((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (p' ==> q'))))) q')
T * / c==> c= c<= cNUMERAL cBIT1 c_0 f0 f1 c==> c==> f1 c= c= cvector_neg cvector_sub ccomplex_pow f2 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 b0 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg cvector_sub ccomplex_pow f2 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f2 b1 c==> f1 b0 f3
- |- ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((complex_mul ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))))
T c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg ccomplex_mul cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0
- |- (((!g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_pow x) i) = (g i)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) ==> ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_pow x) i) = (g i)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) g)) = ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_pow x) i) = (g i)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_pow f1 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_pow f1 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 f2 * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_pow f1 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 f2
- |- (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\x. ((complex_pow x) x))))
T c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0
+ |- (((((NUMERAL (BIT1 _0)) <= n) = ((NUMERAL (BIT1 _0)) <= n)) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> (((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (((NUMERAL (BIT1 _0)) <= n) ==> q')))) = ((((NUMERAL (BIT1 _0)) <= n) ==> (((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i))))) = q')) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> ((vector_neg ((vector_sub ((complex_pow x) n)) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul (vector_neg ((vector_sub x) (Cx (real_of_num (NUMERAL (BIT1 _0))))))) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_pow x) i)))))) = (((NUMERAL (BIT1 _0)) <= n) ==> q'))))
T c= c==> c= c<= cNUMERAL cBIT1 c_0 f0 c<= cNUMERAL cBIT1 c_0 f0 c==> c==> c<= cNUMERAL cBIT1 c_0 f0 c= c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 f2 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c==> c<= cNUMERAL cBIT1 c_0 f0 f2 c==> c==> c<= cNUMERAL cBIT1 c_0 f0 c= c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 f2 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_neg cvector_sub ccomplex_pow f1 f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_neg cvector_sub f1 cCx creal_of_num cNUMERAL cBIT1 c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_pow f1 b0 c==> c<= cNUMERAL cBIT1 c_0 f0 f2
+ |- (((!y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y)))) ==> ((\y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y)))) y)) = ((\y. (((complex_mul (vector_neg x)) y) = (vector_neg ((complex_mul x) y)))) y))
T c= c==> ! c= ccomplex_mul cvector_neg f0 b0 cvector_neg ccomplex_mul f0 b0 * / c= ccomplex_mul cvector_neg f0 b0 cvector_neg ccomplex_mul f0 b0 f1 * / c= ccomplex_mul cvector_neg f0 b0 cvector_neg ccomplex_mul f0 b0 f1
+ |- ((\x. (!y. (((vector_sub y) x) = (vector_neg ((vector_sub x) y))))) x)
T * / ! c= cvector_sub b1 b0 cvector_neg cvector_sub b0 b1 f0
- (((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) |- ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) /\ (((complex_pow x) i) = ((complex_pow x) i)))
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 c- f1 cNUMERAL cBIT1 c_0 c/\ c/\ c<= cNUMERAL c_0 f0 c<= f0 c- f1 cNUMERAL cBIT1 c_0 c= ccomplex_pow f2 f0 ccomplex_pow f2 f0
+ |- (((!x. (!y. (((vector_sub y) x) = (vector_neg ((vector_sub x) y))))) ==> ((\x. (!y. (((vector_sub y) x) = (vector_neg ((vector_sub x) y))))) x)) = ((\x. (!y. (((vector_sub y) x) = (vector_neg ((vector_sub x) y))))) x))
T c= c==> ! ! c= cvector_sub b1 b0 cvector_neg cvector_sub b0 b1 * / ! c= cvector_sub b1 b0 cvector_neg cvector_sub b0 b1 f0 * / ! c= cvector_sub b1 b0 cvector_neg cvector_sub b0 b1 f0
