N Seq.all_predT
C |- (!s. ((all predT) s))
T call part cpredT f0
D Seq.all_count
A |- (!a. (!s. (((all a) s) = (((count a) s) = (sizel s)))))
T c= call f0 f1 c= ccount f0 f1 csizel f1
D Seq.count_predT
A |- (!s. (((count predT) s) = (sizel s)))
T c= ccount part cpredT f0 csizel f0
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- |- (T = ((sizel s) = (sizel s)))
T c= cT c= csizel f0 csizel f0
+ |- ((\s. (((count predT) s) = (sizel s))) s)
T * / c= ccount part cpredT b0 csizel b0 f0
+ |- (((!s. (((count predT) s) = (sizel s))) ==> ((\s. (((count predT) s) = (sizel s))) s)) = ((\s. (((count predT) s) = (sizel s))) s))
T c= c==> ! c= ccount part cpredT b0 csizel b0 * / c= ccount part cpredT b0 csizel b0 f0 * / c= ccount part cpredT b0 csizel b0 f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- |- (((sizel s) = (sizel s)) = (((count predT) s) = (sizel s)))
T c= c= csizel f0 csizel f0 c= ccount part cpredT f0 csizel f0
+ |- ((\s. (((all a) s) = (((count a) s) = (sizel s)))) s)
T * / c= call f0 b0 c= ccount f0 b0 csizel b0 f1
+ |- ((((count predT) s) = (sizel s)) = ((all predT) s))
T c= c= ccount part cpredT f0 csizel f0 call part cpredT f0
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
+ |- ((\a. (!s. (((all a) s) = (((count a) s) = (sizel s))))) a)
T * / ! c= call b0 b1 c= ccount b0 b1 csizel b1 f0
+ |- (((all predT) s) = T)
T c= call part cpredT f0 cT
+ |- (((!s. (((all a) s) = (((count a) s) = (sizel s)))) ==> ((\s. (((all a) s) = (((count a) s) = (sizel s)))) s)) = ((\s. (((all a) s) = (((count a) s) = (sizel s)))) s))
T c= c==> ! c= call f0 b0 c= ccount f0 b0 csizel b0 * / c= call f0 b0 c= ccount f0 b0 csizel b0 f1 * / c= call f0 b0 c= ccount f0 b0 csizel b0 f1
+ |- (((!a. (!s. (((all a) s) = (((count a) s) = (sizel s))))) ==> ((\a. (!s. (((all a) s) = (((count a) s) = (sizel s))))) a)) = ((\a. (!s. (((all a) s) = (((count a) s) = (sizel s))))) a))
T c= c==> ! ! c= call b0 b1 c= ccount b0 b1 csizel b1 * / ! c= call b0 b1 c= ccount b0 b1 csizel b1 f0 * / ! c= call b0 b1 c= ccount b0 b1 csizel b1 f0
