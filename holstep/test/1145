N REAL_SUMMABLE_ZETA
C |- (!n. (!x. (((real_lt (real_of_num (NUMERAL (BIT1 _0)))) x) ==> ((real_summable (from n)) (\k. (real_inv ((rpow (real_of_num k)) x)))))))
T c==> creal_lt creal_of_num cNUMERAL cBIT1 c_0 f0 creal_summable * part cfrom f1 / creal_inv crpow creal_of_num b0 f0
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D LE_1
A |- ((!n. ((~ (n = (NUMERAL _0))) ==> ((NUMERAL _0) < n))) /\ ((!n. ((~ (n = (NUMERAL _0))) ==> ((NUMERAL (BIT1 _0)) <= n))) /\ ((!n. (((NUMERAL _0) < n) ==> (~ (n = (NUMERAL _0))))) /\ ((!n. (((NUMERAL _0) < n) ==> ((NUMERAL (BIT1 _0)) <= n))) /\ ((!n. (((NUMERAL (BIT1 _0)) <= n) ==> ((NUMERAL _0) < n))) /\ (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (~ (n = (NUMERAL _0))))))))))
T c/\ ! c==> c~ c= b0 cNUMERAL c_0 c< cNUMERAL c_0 b0 c/\ ! c==> c~ c= b0 cNUMERAL c_0 c<= cNUMERAL cBIT1 c_0 b0 c/\ ! c==> c< cNUMERAL c_0 b0 c~ c= b0 cNUMERAL c_0 c/\ ! c==> c< cNUMERAL c_0 b0 c<= cNUMERAL cBIT1 c_0 b0 c/\ ! c==> c<= cNUMERAL cBIT1 c_0 b0 c< cNUMERAL c_0 b0 ! c==> c<= cNUMERAL cBIT1 c_0 b0 c~ c= b0 cNUMERAL c_0
D REAL_OF_NUM_EQ
A |- (!m. (!n. (((real_of_num m) = (real_of_num n)) = (m = n))))
T c= c= creal_of_num f0 creal_of_num f1 c= f0 f1
D Float.REAL_LT
A |- (!m. (!n. (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
D IN_FROM
A |- (!m. (!n. ((m IN (from n)) = (n <= m))))
T c= cIN f0 * part cfrom f1 c<= f1 f0
D SUMMABLE_EQ
A |- (!f. (!g. (!k. (((!x. ((x IN k) ==> ((f x) = (g x)))) /\ ((summable k) f)) ==> ((summable k) g)))))
T c==> c/\ ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 csummable f0 f1 csummable f0 f2
D CX_INJ
A |- (!x. (!y. (((Cx x) = (Cx y)) = (x = y))))
T c= c= cCx f0 cCx f1 c= f0 f1
D CX_INV
A |- (!x. ((Cx (real_inv x)) = (complex_inv (Cx x))))
T c= cCx creal_inv f0 ccomplex_inv cCx f0
D CX_MUL
A |- (!x. (!y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y)))))
T c= cCx creal_mul f0 f1 ccomplex_mul cCx f0 cCx f1
D RE_CX
A |- (!x. ((Re (Cx x)) = x))
T c= cRe cCx f0 f0
D CX_EXP
A |- (!x. ((Cx (exp x)) = (cexp (Cx x))))
T c= cCx cexp f0 ccexp cCx f0
D CX_LOG
A |- (!z. (((real_lt (real_of_num (NUMERAL _0))) z) ==> ((Cx (log z)) = (clog (Cx z)))))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= cCx clog f0 cclog cCx f0
D cpow
A |- (!z. (!w. (((cpow w) z) = (((COND (w = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul z) (clog w)))))))
T c= ccpow f0 f1 cCOND c= f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul f1 cclog f0
D rpow
A |- (!y. (!x. (((rpow x) y) = (((COND ((real_lt (real_of_num (NUMERAL _0))) x)) (exp ((real_mul y) (log x)))) (((COND (x = (real_of_num (NUMERAL _0)))) (((COND (y = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs y) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul y) (log (real_neg x)))))) (exp ((real_mul y) (log (real_neg x))))))))))
T c= crpow f0 f1 cCOND creal_lt creal_of_num cNUMERAL c_0 f0 cexp creal_mul f1 clog f0 cCOND c= f0 creal_of_num cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg f0 cexp creal_mul f1 clog creal_neg f0
D SUMMABLE_ZETA
A |- (!n. (!z. (((real_lt (real_of_num (NUMERAL (BIT1 _0)))) (Re z)) ==> ((summable (from n)) (\k. (complex_inv ((cpow (Cx (real_of_num k))) z)))))))
T c==> creal_lt creal_of_num cNUMERAL cBIT1 c_0 cRe f0 csummable * part cfrom f1 / ccomplex_inv ccpow cCx creal_of_num b0 f0
D REAL_SUMMABLE_COMPLEX
A |- (((real_summable s) f) = ((summable s) (Cx o f)))
T c= creal_summable f0 f1 csummable f0 * * part co part cCx f1
D REAL_SUMMABLE_FROM_ELSEWHERE
A |- (!f. (!m. (!n. (((real_summable (from m)) f) ==> ((real_summable (from n)) f)))))
T c==> creal_summable * part cfrom f0 f1 creal_summable * part cfrom f2 f1
+ ((NUMERAL (BIT1 _0)) <= n) |- ((NUMERAL _0) < n)
T c==> c<= cNUMERAL cBIT1 c_0 f0 c< cNUMERAL c_0 f0
+ |- (((!g'. (!t'. (!e'. ((((real_of_num x) = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((real_of_num x) = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((real_of_num x) = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= creal_of_num f0 creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 c==> c==> c~ b0 c= cCOND c? / c? / c/\ cODD b3 c/\ cODD b4 c= creal_abs f1 creal_div creal_of_num b3 creal_of_num b4 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 b2 c= cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b3 c/\ cODD b4 c= creal_abs f1 creal_div creal_of_num b3 creal_of_num b4 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND b0 b1 b2 * / ! ! c==> c= c= creal_of_num f0 creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 c==> c==> c~ b0 c= cCOND c? / c? / c/\ cODD b3 c/\ cODD b4 c= creal_abs f1 creal_div creal_of_num b3 creal_of_num b4 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 b2 c= cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b3 c/\ cODD b4 c= creal_abs f1 creal_div creal_of_num b3 creal_of_num b4 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND b0 b1 b2 f2 * / ! ! c==> c= c= creal_of_num f0 creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 c==> c==> c~ b0 c= cCOND c? / c? / c/\ cODD b3 c/\ cODD b4 c= creal_abs f1 creal_div creal_of_num b3 creal_of_num b4 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 b2 c= cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b3 c/\ cODD b4 c= creal_abs f1 creal_div creal_of_num b3 creal_of_num b4 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND b0 b1 b2 f2
+ |- (((((real_of_num x) = (real_of_num (NUMERAL _0))) = (x = (NUMERAL _0))) ==> (((x = (NUMERAL _0)) ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ (x = (NUMERAL _0))) ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND (x = (NUMERAL _0))) t') e'))))) = (((x = (NUMERAL _0)) ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ (x = (NUMERAL _0))) ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND (x = (NUMERAL _0))) t') e')))))
T c= c==> c= c= creal_of_num f0 creal_of_num cNUMERAL c_0 c= f0 cNUMERAL c_0 c==> c==> c= f0 cNUMERAL c_0 c= cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 f3 c= cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND c= f0 cNUMERAL c_0 f2 f3 c==> c==> c= f0 cNUMERAL c_0 c= cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 f3 c= cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND c= f0 cNUMERAL c_0 f2 f3
+ |- (((!e'. (((x = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. (((x = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. (((x = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f1 f2 b0 * / c==> c= c= f0 creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f1 f2 b0 f3 * / c==> c= c= f0 creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f1 f2 b0 f3
+ (!f. (!g. (!k. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g)))))) |- ((\g. (!k. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g))))) g)
T c==> ! ! ! c==> ! c==> cIN b3 b2 c= * b0 b3 * b1 b3 c==> csummable b2 b0 csummable b2 b1 * / ! c==> ! c==> cIN b2 b1 c= * f0 b2 * b0 b2 c==> csummable b1 f0 csummable b1 b0 f1
- ((NUMERAL (BIT1 _0)) <= x) |- (((NUMERAL (BIT1 _0)) <= x) = T)
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c<= cNUMERAL cBIT1 c_0 f0 cT
+ |- (((!t'. (!e'. ((((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((Cx (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x))))) = e')) ==> ((((COND ((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x)))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((Cx (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x))))) = e')) ==> ((((COND ((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x)))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((Cx (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x))))) = e')) ==> ((((COND ((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x)))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= cCx creal_of_num cNUMERAL c_0 b0 c==> c==> c~ f1 c= ccexp ccomplex_mul cCx f2 cclog cCx creal_of_num f0 b1 c= cCOND c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul cCx f2 cclog cCx creal_of_num f0 cCOND f1 b0 b1 * / ! c==> c= c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= cCx creal_of_num cNUMERAL c_0 b0 c==> c==> c~ f1 c= ccexp ccomplex_mul cCx f2 cclog cCx creal_of_num f0 b1 c= cCOND c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul cCx f2 cclog cCx creal_of_num f0 cCOND f1 b0 b1 f3 * / ! c==> c= c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= cCx creal_of_num cNUMERAL c_0 b0 c==> c==> c~ f1 c= ccexp ccomplex_mul cCx f2 cclog cCx creal_of_num f0 b1 c= cCOND c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul cCx f2 cclog cCx creal_of_num f0 cCOND f1 b0 b1 f3
+ |- (((!e'. ((((real_of_num x) = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e')))))) ==> ((\e'. ((((real_of_num x) = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e')))))) e')) = ((\e'. ((((real_of_num x) = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= creal_of_num f0 creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f3 c==> c==> c~ f1 c= cCOND c? / c? / c/\ cODD b1 c/\ cODD b2 c= creal_abs f2 creal_div creal_of_num b1 creal_of_num b2 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 b0 c= cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b1 c/\ cODD b2 c= creal_abs f2 creal_div creal_of_num b1 creal_of_num b2 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 cCOND f1 f3 b0 * / c==> c= c= creal_of_num f0 creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f3 c==> c==> c~ f1 c= cCOND c? / c? / c/\ cODD b1 c/\ cODD b2 c= creal_abs f2 creal_div creal_of_num b1 creal_of_num b2 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 b0 c= cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b1 c/\ cODD b2 c= creal_abs f2 creal_div creal_of_num b1 creal_of_num b2 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 cCOND f1 f3 b0 f4 * / c==> c= c= creal_of_num f0 creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f3 c==> c==> c~ f1 c= cCOND c? / c? / c/\ cODD b1 c/\ cODD b2 c= creal_abs f2 creal_div creal_of_num b1 creal_of_num b2 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 b0 c= cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b1 c/\ cODD b2 c= creal_abs f2 creal_div creal_of_num b1 creal_of_num b2 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 cCOND f1 f3 b0 f4
- |- (((NUMERAL _0) < n) ==> (((NUMERAL (BIT1 _0)) <= n) = T))
T c==> c< cNUMERAL c_0 f0 c= c<= cNUMERAL cBIT1 c_0 f0 cT
- (~ (x = (NUMERAL _0))) |- (((~ ((NUMERAL _0) = x)) ==> (((NUMERAL _0) = x) = F)) = (((NUMERAL _0) = x) = F))
T c==> c~ c= f0 cNUMERAL c_0 c= c==> c~ c= cNUMERAL c_0 f0 c= c= cNUMERAL c_0 f0 cF c= c= cNUMERAL c_0 f0 cF
+ |- ((~ (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) ==> ((exp ((real_mul x) (log (real_neg (real_of_num x))))) = (exp ((real_mul x) (log (real_neg (real_of_num x)))))))
T c==> c~ c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f0 creal_div creal_of_num b0 creal_of_num b1 c= cexp creal_mul f0 clog creal_neg creal_of_num f1 cexp creal_mul f0 clog creal_neg creal_of_num f1
+ |- (((((real_lt (real_of_num (NUMERAL (BIT1 _0)))) (Re (Cx x))) ==> ((summable (from (NUMERAL (BIT1 _0)))) (\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))))) ==> ((summable (from (NUMERAL (BIT1 _0)))) (Cx o (\k. (real_inv ((rpow (real_of_num k)) x)))))) = ((summable (from (NUMERAL (BIT1 _0)))) (Cx o (\k. (real_inv ((rpow (real_of_num k)) x))))))
T c= c==> c==> creal_lt creal_of_num cNUMERAL cBIT1 c_0 cRe cCx f0 csummable * part cfrom cNUMERAL cBIT1 c_0 / ccomplex_inv ccpow cCx creal_of_num b0 cCx f0 csummable * part cfrom cNUMERAL cBIT1 c_0 * * part co part cCx / creal_inv crpow creal_of_num b0 f0 csummable * part cfrom cNUMERAL cBIT1 c_0 * * part co part cCx / creal_inv crpow creal_of_num b0 f0
+ ((real_lt (real_of_num (NUMERAL (BIT1 _0)))) x) |- ((((summable (from (NUMERAL (BIT1 _0)))) (\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x))))) ==> ((summable (from (NUMERAL (BIT1 _0)))) (\x. (Cx (real_inv ((rpow (real_of_num x)) x)))))) = ((((real_lt (real_of_num (NUMERAL (BIT1 _0)))) (Re (Cx x))) ==> ((summable (from (NUMERAL (BIT1 _0)))) (\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))))) ==> ((summable (from (NUMERAL (BIT1 _0)))) (Cx o (\k. (real_inv ((rpow (real_of_num k)) x)))))))
T c==> creal_lt creal_of_num cNUMERAL cBIT1 c_0 f0 c= c==> csummable * part cfrom cNUMERAL cBIT1 c_0 / ccomplex_inv ccpow cCx creal_of_num b0 cCx f0 csummable * part cfrom cNUMERAL cBIT1 c_0 / cCx creal_inv crpow creal_of_num b0 f0 c==> c==> creal_lt creal_of_num cNUMERAL cBIT1 c_0 cRe cCx f0 csummable * part cfrom cNUMERAL cBIT1 c_0 / ccomplex_inv ccpow cCx creal_of_num b0 cCx f0 csummable * part cfrom cNUMERAL cBIT1 c_0 * * part co part cCx / creal_inv crpow creal_of_num b0 f0
+ ((NUMERAL (BIT1 _0)) <= x) |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num x)) ==> ((clog (Cx (real_of_num x))) = (Cx (log (real_of_num x))))) = ((clog (Cx (real_of_num x))) = (Cx (log (real_of_num x)))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num f0 c= cclog cCx creal_of_num f0 cCx clog creal_of_num f0 c= cclog cCx creal_of_num f0 cCx clog creal_of_num f0
+ |- (((!f. (!g. (!k. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g)))))) ==> (!f. (!k. (!g. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g))))))) = (!f. (!k. (!g. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g)))))))
T c= c==> ! ! ! c==> ! c==> cIN b3 b2 c= * b0 b3 * b1 b3 c==> csummable b2 b0 csummable b2 b1 ! ! ! c==> ! c==> cIN b3 b1 c= * b0 b3 * b2 b3 c==> csummable b1 b0 csummable b1 b2 ! ! ! c==> ! c==> cIN b3 b1 c= * b0 b3 * b2 b3 c==> csummable b1 b0 csummable b1 b2
+ |- ((\k. (!g. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g))))) k)
T * / ! c==> ! c==> cIN b2 b0 c= * f0 b2 * b1 b2 c==> csummable b0 f0 csummable b0 b1 f1
- (~ (x = (real_of_num (NUMERAL _0)))) |- (~ ((real_of_num (NUMERAL _0)) = x))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c~ c= creal_of_num cNUMERAL c_0 f0
+ |- ((\t'. (!e'. ((((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((Cx (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x))))) = e')) ==> ((((COND ((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x)))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= cCx creal_of_num cNUMERAL c_0 b0 c==> c==> c~ f1 c= ccexp ccomplex_mul cCx f2 cclog cCx creal_of_num f0 b1 c= cCOND c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul cCx f2 cclog cCx creal_of_num f0 cCOND f1 b0 b1 f3
+ |- ((!x. (((real_lt (real_of_num (NUMERAL (BIT1 _0)))) x) ==> ((real_summable (from n)) (\k. (real_inv ((rpow (real_of_num k)) x)))))) = T)
T c= ! c==> creal_lt creal_of_num cNUMERAL cBIT1 c_0 b0 creal_summable * part cfrom f0 / creal_inv crpow creal_of_num b1 b0 cT
+ |- (((~ (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) ==> ((exp ((real_mul x) (log (real_neg (real_of_num x))))) = e')) ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) e')))
T c==> c==> c~ c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f0 creal_div creal_of_num b0 creal_of_num b1 c= cexp creal_mul f0 clog creal_neg creal_of_num f1 f2 c= cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f0 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f0 clog creal_neg creal_of_num f1 cexp creal_mul f0 clog creal_neg creal_of_num f1 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f0 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f0 clog creal_neg creal_of_num f1 f2
+ |- ((\x. ((cexp (Cx x)) = (Cx (exp x)))) x)
T * / c= ccexp cCx b0 cCx cexp b0 f0
+ |- (T = (!x. ((x IN (from (NUMERAL (BIT1 _0)))) ==> (((\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))) x) = ((\x. (Cx (real_inv ((rpow (real_of_num x)) x)))) x)))))
T c= cT ! c==> cIN b0 * part cfrom cNUMERAL cBIT1 c_0 c= * / ccomplex_inv ccpow cCx creal_of_num b1 cCx f0 b0 * / cCx creal_inv crpow creal_of_num b1 f0 b0
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num x)) = g') ==> ((g' ==> ((exp ((real_mul x) (log (real_of_num x)))) = t')) ==> (((~ g') ==> ((((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = e')) ==> ((((COND ((real_lt (real_of_num (NUMERAL _0))) (real_of_num x))) (exp ((real_mul x) (log (real_of_num x))))) (((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))))) = (((COND g') t') e')))))
T c==> c= creal_lt creal_of_num cNUMERAL c_0 creal_of_num f0 f1 c==> c==> f1 c= cexp creal_mul f2 clog creal_of_num f0 f3 c==> c==> c~ f1 c= cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f2 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 f4 c= cCOND creal_lt creal_of_num cNUMERAL c_0 creal_of_num f0 cexp creal_mul f2 clog creal_of_num f0 cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f2 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 cCOND f1 f3 f4
+ (!f. (!m. (!n. (((real_summable (from m)) f) ==> ((real_summable (from n)) f))))), (?m. ((real_summable (from m)) f)) |- ((?m. ((real_summable (from m)) f)) /\ ((real_summable (from n)) f))
T c==> ! ! ! c==> creal_summable * part cfrom b1 b0 creal_summable * part cfrom b2 b0 c==> c? / creal_summable * part cfrom b0 f0 c/\ c? / creal_summable * part cfrom b0 f0 creal_summable * part cfrom f1 f0
+ |- (((!g'. (!t'. (!e'. ((((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((Cx (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x))))) = e')) ==> ((((COND ((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x)))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((Cx (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x))))) = e')) ==> ((((COND ((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x)))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((Cx (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x))))) = e')) ==> ((((COND ((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x)))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= cCx creal_of_num cNUMERAL c_0 b1 c==> c==> c~ b0 c= ccexp ccomplex_mul cCx f1 cclog cCx creal_of_num f0 b2 c= cCOND c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul cCx f1 cclog cCx creal_of_num f0 cCOND b0 b1 b2 * / ! ! c==> c= c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= cCx creal_of_num cNUMERAL c_0 b1 c==> c==> c~ b0 c= ccexp ccomplex_mul cCx f1 cclog cCx creal_of_num f0 b2 c= cCOND c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul cCx f1 cclog cCx creal_of_num f0 cCOND b0 b1 b2 f2 * / ! ! c==> c= c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= cCx creal_of_num cNUMERAL c_0 b1 c==> c==> c~ b0 c= ccexp ccomplex_mul cCx f1 cclog cCx creal_of_num f0 b2 c= cCOND c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul cCx f1 cclog cCx creal_of_num f0 cCOND b0 b1 b2 f2
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ (!f. (!m. (!n. (((real_summable (from m)) f) ==> ((real_summable (from n)) f))))) |- ((!f. (!m. (!n. (((real_summable (from m)) f) ==> ((real_summable (from n)) f))))) /\ (!n. (!f. ((?m. ((real_summable (from m)) f)) ==> ((real_summable (from n)) f)))))
T c==> ! ! ! c==> creal_summable * part cfrom b1 b0 creal_summable * part cfrom b2 b0 c/\ ! ! ! c==> creal_summable * part cfrom b1 b0 creal_summable * part cfrom b2 b0 ! ! c==> c? / creal_summable * part cfrom b2 b1 creal_summable * part cfrom b0 b1
+ |- (((x IN (from (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((((\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))) x) = ((\x. (Cx (real_inv ((rpow (real_of_num x)) x)))) x)) = q')) ==> (((x IN (from (NUMERAL (BIT1 _0)))) ==> (((\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))) x) = ((\x. (Cx (real_inv ((rpow (real_of_num x)) x)))) x))) = (p' ==> q'))))
T c==> c= cIN f0 * part cfrom cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= * / ccomplex_inv ccpow cCx creal_of_num b0 cCx f2 f0 * / cCx creal_inv crpow creal_of_num b0 f2 f0 f3 c= c==> cIN f0 * part cfrom cNUMERAL cBIT1 c_0 c= * / ccomplex_inv ccpow cCx creal_of_num b0 cCx f2 f0 * / cCx creal_inv crpow creal_of_num b0 f2 f0 c==> f1 f3
- (x = (real_of_num (NUMERAL _0))) |- ((real_of_num (NUMERAL _0)) = x)
T c==> c= f0 creal_of_num cNUMERAL c_0 c= creal_of_num cNUMERAL c_0 f0
+ |- (((!x. (((rpow x) y) = (((COND ((real_lt (real_of_num (NUMERAL _0))) x)) (exp ((real_mul y) (log x)))) (((COND (x = (real_of_num (NUMERAL _0)))) (((COND (y = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs y) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul y) (log (real_neg x)))))) (exp ((real_mul y) (log (real_neg x))))))))) ==> ((\x. (((rpow x) y) = (((COND ((real_lt (real_of_num (NUMERAL _0))) x)) (exp ((real_mul y) (log x)))) (((COND (x = (real_of_num (NUMERAL _0)))) (((COND (y = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs y) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul y) (log (real_neg x)))))) (exp ((real_mul y) (log (real_neg x))))))))) x)) = ((\x. (((rpow x) y) = (((COND ((real_lt (real_of_num (NUMERAL _0))) x)) (exp ((real_mul y) (log x)))) (((COND (x = (real_of_num (NUMERAL _0)))) (((COND (y = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs y) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul y) (log (real_neg x)))))) (exp ((real_mul y) (log (real_neg x))))))))) x))
T c= c==> ! c= crpow b0 f0 cCOND creal_lt creal_of_num cNUMERAL c_0 b0 cexp creal_mul f0 clog b0 cCOND c= b0 creal_of_num cNUMERAL c_0 cCOND c= f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b1 c/\ cODD b2 c= creal_abs f0 creal_div creal_of_num b1 creal_of_num b2 creal_neg cexp creal_mul f0 clog creal_neg b0 cexp creal_mul f0 clog creal_neg b0 * / c= crpow b0 f0 cCOND creal_lt creal_of_num cNUMERAL c_0 b0 cexp creal_mul f0 clog b0 cCOND c= b0 creal_of_num cNUMERAL c_0 cCOND c= f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b1 c/\ cODD b2 c= creal_abs f0 creal_div creal_of_num b1 creal_of_num b2 creal_neg cexp creal_mul f0 clog creal_neg b0 cexp creal_mul f0 clog creal_neg b0 f1 * / c= crpow b0 f0 cCOND creal_lt creal_of_num cNUMERAL c_0 b0 cexp creal_mul f0 clog b0 cCOND c= b0 creal_of_num cNUMERAL c_0 cCOND c= f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b1 c/\ cODD b2 c= creal_abs f0 creal_div creal_of_num b1 creal_of_num b2 creal_neg cexp creal_mul f0 clog creal_neg b0 cexp creal_mul f0 clog creal_neg b0 f1
- |- (((!n. ((~ (n = (NUMERAL _0))) ==> ((NUMERAL (BIT1 _0)) <= n))) ==> ((\n. ((~ (n = (NUMERAL _0))) ==> ((NUMERAL (BIT1 _0)) <= n))) n)) = ((\n. ((~ (n = (NUMERAL _0))) ==> ((NUMERAL (BIT1 _0)) <= n))) n))
T c= c==> ! c==> c~ c= b0 cNUMERAL c_0 c<= cNUMERAL cBIT1 c_0 b0 * / c==> c~ c= b0 cNUMERAL c_0 c<= cNUMERAL cBIT1 c_0 b0 f0 * / c==> c~ c= b0 cNUMERAL c_0 c<= cNUMERAL cBIT1 c_0 b0 f0
- (~ (x = (real_of_num (NUMERAL _0)))) |- ((x = (real_of_num (NUMERAL _0))) = F)
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= c= f0 creal_of_num cNUMERAL c_0 cF
- (!f. (!g. (!k. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g)))))), (!x. ((x IN k) ==> ((f x) = (g x)))) |- ((!x. ((x IN k) ==> ((f x) = (g x)))) /\ (((summable k) f) ==> ((summable k) g)))
T c==> ! ! ! c==> ! c==> cIN b3 b2 c= * b0 b3 * b1 b3 c==> csummable b2 b0 csummable b2 b1 c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c/\ ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c==> csummable f0 f1 csummable f0 f2
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\q'. (((x IN (from (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((((\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))) x) = ((\x. (Cx (real_inv ((rpow (real_of_num x)) x)))) x)) = q')) ==> (((x IN (from (NUMERAL (BIT1 _0)))) ==> (((\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))) x) = ((\x. (Cx (real_inv ((rpow (real_of_num x)) x)))) x))) = (p' ==> q'))))) q')
T * / c==> c= cIN f0 * part cfrom cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= * / ccomplex_inv ccpow cCx creal_of_num b1 cCx f2 f0 * / cCx creal_inv crpow creal_of_num b1 f2 f0 b0 c= c==> cIN f0 * part cfrom cNUMERAL cBIT1 c_0 c= * / ccomplex_inv ccpow cCx creal_of_num b1 cCx f2 f0 * / cCx creal_inv crpow creal_of_num b1 f2 f0 c==> f1 b0 f3
+ |- (((x = (real_of_num (NUMERAL _0))) ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ (x = (real_of_num (NUMERAL _0)))) ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND (x = (real_of_num (NUMERAL _0)))) t') e'))))
T c==> c==> c= f0 creal_of_num cNUMERAL c_0 c= creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_of_num cNUMERAL c_0 f2 c= cCOND c= f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= f0 creal_of_num cNUMERAL c_0 f1 f2
+ (!f. (!g. (!k. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g)))))) |- (!g. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g))))
T c==> ! ! ! c==> ! c==> cIN b3 b2 c= * b0 b3 * b1 b3 c==> csummable b2 b0 csummable b2 b1 ! c==> ! c==> cIN b1 f0 c= * f1 b1 * b0 b1 c==> csummable f0 f1 csummable f0 b0
- ((real_lt (real_of_num (NUMERAL _0))) z) |- (((real_lt (real_of_num (NUMERAL _0))) z) /\ ((clog (Cx z)) = (Cx (log z))))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c= cclog cCx f0 cCx clog f0
+ ((real_lt (real_of_num (NUMERAL (BIT1 _0)))) x) |- (((real_lt (real_of_num (NUMERAL (BIT1 _0)))) x) /\ ((real_summable (from n)) (\k. (real_inv ((rpow (real_of_num k)) x)))))
T c==> creal_lt creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ creal_lt creal_of_num cNUMERAL cBIT1 c_0 f0 creal_summable * part cfrom f1 / creal_inv crpow creal_of_num b0 f0
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- ((NUMERAL _0) < n) |- (((~ (n = (NUMERAL _0))) ==> ((n = (NUMERAL _0)) = F)) = ((n = (NUMERAL _0)) = F))
T c==> c< cNUMERAL c_0 f0 c= c==> c~ c= f0 cNUMERAL c_0 c= c= f0 cNUMERAL c_0 cF c= c= f0 cNUMERAL c_0 cF
+ |- ((((~ (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) ==> ((exp ((real_mul x) (log (real_neg (real_of_num x))))) = (exp ((real_mul x) (log (real_neg (real_of_num x))))))) ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))))) = ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))))
T c= c==> c==> c~ c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f0 creal_div creal_of_num b0 creal_of_num b1 c= cexp creal_mul f0 clog creal_neg creal_of_num f1 cexp creal_mul f0 clog creal_neg creal_of_num f1 c= cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f0 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f0 clog creal_neg creal_of_num f1 cexp creal_mul f0 clog creal_neg creal_of_num f1 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f0 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f0 clog creal_neg creal_of_num f1 cexp creal_mul f0 clog creal_neg creal_of_num f1 c= cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f0 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f0 clog creal_neg creal_of_num f1 cexp creal_mul f0 clog creal_neg creal_of_num f1 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f0 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f0 clog creal_neg creal_of_num f1 cexp creal_mul f0 clog creal_neg creal_of_num f1
+ |- (!z. (((real_lt (real_of_num (NUMERAL (BIT1 _0)))) (Re z)) ==> ((summable (from (NUMERAL (BIT1 _0)))) (\k. (complex_inv ((cpow (Cx (real_of_num k))) z))))))
T c==> creal_lt creal_of_num cNUMERAL cBIT1 c_0 cRe f0 csummable * part cfrom cNUMERAL cBIT1 c_0 / ccomplex_inv ccpow cCx creal_of_num b0 f0
+ ((NUMERAL (BIT1 _0)) <= x) |- (((NUMERAL _0) < x) = T)
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c< cNUMERAL c_0 f0 cT
+ |- ((\t'. (!e'. ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num x)) = g') ==> ((g' ==> ((exp ((real_mul x) (log (real_of_num x)))) = t')) ==> (((~ g') ==> ((((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = e')) ==> ((((COND ((real_lt (real_of_num (NUMERAL _0))) (real_of_num x))) (exp ((real_mul x) (log (real_of_num x))))) (((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= creal_lt creal_of_num cNUMERAL c_0 creal_of_num f0 f1 c==> c==> f1 c= cexp creal_mul f2 clog creal_of_num f0 b0 c==> c==> c~ f1 c= cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs f2 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 b1 c= cCOND creal_lt creal_of_num cNUMERAL c_0 creal_of_num f0 cexp creal_mul f2 clog creal_of_num f0 cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs f2 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 cCOND f1 b0 b1 f3
+ ((NUMERAL (BIT1 _0)) <= n) |- (((NUMERAL (BIT1 _0)) <= n) /\ ((n = (NUMERAL _0)) = F))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c= c= f0 cNUMERAL c_0 cF
+ (!f. (!g. (!k. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g)))))) |- ((!k. (!g. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g))))) = T)
T c==> ! ! ! c==> ! c==> cIN b3 b2 c= * b0 b3 * b1 b3 c==> csummable b2 b0 csummable b2 b1 c= ! ! c==> ! c==> cIN b2 b0 c= * f0 b2 * b1 b2 c==> csummable b0 f0 csummable b0 b1 cT
+ (!f. (!g. (!k. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g)))))) |- ((\k. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g)))) k)
T c==> ! ! ! c==> ! c==> cIN b3 b2 c= * b0 b3 * b1 b3 c==> csummable b2 b0 csummable b2 b1 * / c==> ! c==> cIN b1 b0 c= * f0 b1 * f1 b1 c==> csummable b0 f0 csummable b0 f1 f2
+ ((NUMERAL (BIT1 _0)) <= x) |- ((clog (Cx (real_of_num x))) = (Cx (log (real_of_num x))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= cclog cCx creal_of_num f0 cCx clog creal_of_num f0
+ |- (((NUMERAL (BIT1 _0)) <= x) ==> ((((\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))) x) = ((\x. (Cx (real_inv ((rpow (real_of_num x)) x)))) x)) = T))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c= * / ccomplex_inv ccpow cCx creal_of_num b0 cCx f1 f0 * / cCx creal_inv crpow creal_of_num b0 f1 f0 cT
+ |- (T ==> ((exp ((real_mul x) (log (real_of_num x)))) = (exp ((real_mul x) (log (real_of_num x))))))
T c==> cT c= cexp creal_mul f0 clog creal_of_num f1 cexp creal_mul f0 clog creal_of_num f1
+ |- ((cexp (Cx x)) = (Cx (exp x)))
T c= ccexp cCx f0 cCx cexp f0
- ((NUMERAL (BIT1 _0)) <= n) |- (((~ ((NUMERAL _0) = n)) ==> (((NUMERAL _0) = n) = F)) = (((NUMERAL _0) = n) = F))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c==> c~ c= cNUMERAL c_0 f0 c= c= cNUMERAL c_0 f0 cF c= c= cNUMERAL c_0 f0 cF
+ |- ((\e'. (((x = (real_of_num (NUMERAL _0))) = g') ==> ((g' ==> ((real_of_num (NUMERAL (BIT1 _0))) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL _0)) = e')) ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> c~ f1 c= creal_of_num cNUMERAL c_0 b0 c= cCOND c= f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND f1 f2 b0 f3
+ |- ((\w. (((cpow w) z) = (((COND (w = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul z) (clog w)))))) w)
T * / c= ccpow b0 f0 cCOND c= b0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul f0 cclog b0 f1
+ |- ((\n. (!z. (((real_lt (real_of_num (NUMERAL (BIT1 _0)))) (Re z)) ==> ((summable (from n)) (\k. (complex_inv ((cpow (Cx (real_of_num k))) z))))))) (NUMERAL (BIT1 _0)))
T * / ! c==> creal_lt creal_of_num cNUMERAL cBIT1 c_0 cRe b1 csummable * part cfrom b0 / ccomplex_inv ccpow cCx creal_of_num b2 b1 cNUMERAL cBIT1 c_0
+ ((NUMERAL (BIT1 _0)) <= n) |- (~ (n = (NUMERAL _0)))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c~ c= f0 cNUMERAL c_0
+ |- (((!y. (!x. (((rpow x) y) = (((COND ((real_lt (real_of_num (NUMERAL _0))) x)) (exp ((real_mul y) (log x)))) (((COND (x = (real_of_num (NUMERAL _0)))) (((COND (y = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs y) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul y) (log (real_neg x)))))) (exp ((real_mul y) (log (real_neg x)))))))))) ==> ((\y. (!x. (((rpow x) y) = (((COND ((real_lt (real_of_num (NUMERAL _0))) x)) (exp ((real_mul y) (log x)))) (((COND (x = (real_of_num (NUMERAL _0)))) (((COND (y = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs y) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul y) (log (real_neg x)))))) (exp ((real_mul y) (log (real_neg x)))))))))) y)) = ((\y. (!x. (((rpow x) y) = (((COND ((real_lt (real_of_num (NUMERAL _0))) x)) (exp ((real_mul y) (log x)))) (((COND (x = (real_of_num (NUMERAL _0)))) (((COND (y = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs y) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul y) (log (real_neg x)))))) (exp ((real_mul y) (log (real_neg x)))))))))) y))
T c= c==> ! ! c= crpow b1 b0 cCOND creal_lt creal_of_num cNUMERAL c_0 b1 cexp creal_mul b0 clog b1 cCOND c= b1 creal_of_num cNUMERAL c_0 cCOND c= b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs b0 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul b0 clog creal_neg b1 cexp creal_mul b0 clog creal_neg b1 * / ! c= crpow b1 b0 cCOND creal_lt creal_of_num cNUMERAL c_0 b1 cexp creal_mul b0 clog b1 cCOND c= b1 creal_of_num cNUMERAL c_0 cCOND c= b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs b0 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul b0 clog creal_neg b1 cexp creal_mul b0 clog creal_neg b1 f0 * / ! c= crpow b1 b0 cCOND creal_lt creal_of_num cNUMERAL c_0 b1 cexp creal_mul b0 clog b1 cCOND c= b1 creal_of_num cNUMERAL c_0 cCOND c= b0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs b0 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul b0 clog creal_neg b1 cexp creal_mul b0 clog creal_neg b1 f0
+ (x = (real_of_num (NUMERAL _0))) |- ((x = (real_of_num (NUMERAL _0))) /\ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 c/\ c= f0 creal_of_num cNUMERAL c_0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\n. (((NUMERAL (BIT1 _0)) <= n) ==> ((NUMERAL _0) < n))) n)
T * / c==> c<= cNUMERAL cBIT1 c_0 b0 c< cNUMERAL c_0 b0 f0
+ |- ((\n. ((m IN (from n)) = (n <= m))) n)
T * / c= cIN f0 * part cfrom b0 c<= b0 f0 f1
+ |- (((!m. (!n. (((real_lt (real_of_num m)) (real_of_num n)) = (m < n)))) ==> ((\m. (!n. (((real_lt (real_of_num m)) (real_of_num n)) = (m < n)))) m)) = ((\m. (!n. (((real_lt (real_of_num m)) (real_of_num n)) = (m < n)))) m))
T c= c==> ! ! c= creal_lt creal_of_num b0 creal_of_num b1 c< b0 b1 * / ! c= creal_lt creal_of_num b0 creal_of_num b1 c< b0 b1 f0 * / ! c= creal_lt creal_of_num b0 creal_of_num b1 c< b0 b1 f0
+ (!f. (!m. (!n. (((real_summable (from m)) f) ==> ((real_summable (from n)) f))))) |- (((!m. (!n. (((real_summable (from m)) f) ==> ((real_summable (from n)) f)))) ==> ((\m. (!n. (((real_summable (from m)) f) ==> ((real_summable (from n)) f)))) m)) = ((\m. (!n. (((real_summable (from m)) f) ==> ((real_summable (from n)) f)))) m))
T c==> ! ! ! c==> creal_summable * part cfrom b1 b0 creal_summable * part cfrom b2 b0 c= c==> ! ! c==> creal_summable * part cfrom b0 f0 creal_summable * part cfrom b1 f0 * / ! c==> creal_summable * part cfrom b0 f0 creal_summable * part cfrom b1 f0 f1 * / ! c==> creal_summable * part cfrom b0 f0 creal_summable * part cfrom b1 f0 f1
- |- ((\n. ((~ (n = (NUMERAL _0))) ==> ((NUMERAL _0) < n))) n)
T * / c==> c~ c= b0 cNUMERAL c_0 c< cNUMERAL c_0 b0 f0
- |- ((?n. t) = t)
T c= c? / f0 f0
+ |- (((x = (NUMERAL _0)) ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ (x = (NUMERAL _0))) ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND (x = (NUMERAL _0))) t') e'))))
T c==> c==> c= f0 cNUMERAL c_0 c= cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 f3 c= cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND c= f0 cNUMERAL c_0 f2 f3
+ ((NUMERAL (BIT1 _0)) <= x) |- (((NUMERAL (BIT1 _0)) <= x) /\ ((((\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))) x) = ((\x. (Cx (real_inv ((rpow (real_of_num x)) x)))) x)) = T))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c= c= * / ccomplex_inv ccpow cCx creal_of_num b0 cCx f1 f0 * / cCx creal_inv crpow creal_of_num b0 f1 f0 cT
- (~ (x = (NUMERAL _0))) |- (~ ((NUMERAL _0) = x))
T c==> c~ c= f0 cNUMERAL c_0 c~ c= cNUMERAL c_0 f0
+ |- ((\p'. (!q'. (((x IN (from (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((((\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))) x) = ((\x. (Cx (real_inv ((rpow (real_of_num x)) x)))) x)) = q')) ==> (((x IN (from (NUMERAL (BIT1 _0)))) ==> (((\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))) x) = ((\x. (Cx (real_inv ((rpow (real_of_num x)) x)))) x))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN f0 * part cfrom cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= * / ccomplex_inv ccpow cCx creal_of_num b2 cCx f1 f0 * / cCx creal_inv crpow creal_of_num b2 f1 f0 b1 c= c==> cIN f0 * part cfrom cNUMERAL cBIT1 c_0 c= * / ccomplex_inv ccpow cCx creal_of_num b2 cCx f1 f0 * / cCx creal_inv crpow creal_of_num b2 f1 f0 c==> b0 b1 f2
+ ((NUMERAL (BIT1 _0)) <= x) |- ((~ F) ==> ((cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x))))) = (Cx (exp ((real_mul x) (log (real_of_num x)))))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c==> c~ cF c= ccexp ccomplex_mul cCx f1 cclog cCx creal_of_num f0 cCx cexp creal_mul f1 clog creal_of_num f0
+ ((Cx (real_inv x)) = (complex_inv (Cx x))) |- ((complex_inv (Cx x)) = (Cx (real_inv x)))
T c==> c= cCx creal_inv f0 ccomplex_inv cCx f0 c= ccomplex_inv cCx f0 cCx creal_inv f0
+ |- (((!f. (!k. (!g. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g)))))) ==> ((\f. (!k. (!g. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g)))))) f)) = ((\f. (!k. (!g. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g)))))) f))
T c= c==> ! ! ! c==> ! c==> cIN b3 b1 c= * b0 b3 * b2 b3 c==> csummable b1 b0 csummable b1 b2 * / ! ! c==> ! c==> cIN b3 b1 c= * b0 b3 * b2 b3 c==> csummable b1 b0 csummable b1 b2 f0 * / ! ! c==> ! c==> cIN b3 b1 c= * b0 b3 * b2 b3 c==> csummable b1 b0 csummable b1 b2 f0
+ |- ((\f. (!k. (!g. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g)))))) f)
T * / ! ! c==> ! c==> cIN b3 b1 c= * b0 b3 * b2 b3 c==> csummable b1 b0 csummable b1 b2 f0
+ |- ((((\m. ((real_summable (from m)) f)) m) ==> ((!f. (!m. (!n. (((real_summable (from m)) f) ==> ((real_summable (from n)) f))))) ==> ((real_summable (from n)) f))) = T)
T c= c==> * / creal_summable * part cfrom b0 f0 f1 c==> ! ! ! c==> creal_summable * part cfrom b1 b0 creal_summable * part cfrom b2 b0 creal_summable * part cfrom f2 f0 cT
+ |- (((!n. ((m IN (from n)) = (n <= m))) ==> ((\n. ((m IN (from n)) = (n <= m))) n)) = ((\n. ((m IN (from n)) = (n <= m))) n))
T c= c==> ! c= cIN f0 * part cfrom b0 c<= b0 f0 * / c= cIN f0 * part cfrom b0 c<= b0 f0 f1 * / c= cIN f0 * part cfrom b0 c<= b0 f0 f1
+ (!f. (!m. (!n. (((real_summable (from m)) f) ==> ((real_summable (from n)) f))))) |- ((!f. ((?m. ((real_summable (from m)) f)) ==> ((real_summable (from n)) f))) = T)
T c==> ! ! ! c==> creal_summable * part cfrom b1 b0 creal_summable * part cfrom b2 b0 c= ! c==> c? / creal_summable * part cfrom b1 b0 creal_summable * part cfrom f0 b0 cT
+ |- ((((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0)))) = g') ==> ((g' ==> ((Cx (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x))))) = e')) ==> ((((COND ((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x)))))) = (((COND g') t') e')))))
T c==> c= c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= cCx creal_of_num cNUMERAL c_0 f2 c==> c==> c~ f1 c= ccexp ccomplex_mul cCx f3 cclog cCx creal_of_num f0 f4 c= cCOND c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul cCx f3 cclog cCx creal_of_num f0 cCOND f1 f2 f4
+ |- ((?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n))))))) ==> ((real_neg (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))))
T c==> c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f0 creal_div creal_of_num b0 creal_of_num b1 c= creal_neg cexp creal_mul f0 clog creal_neg creal_of_num f1 creal_neg cexp creal_mul f0 clog creal_neg creal_of_num f1
+ |- ((!n. (((NUMERAL _0) < n) ==> ((NUMERAL (BIT1 _0)) <= n))) /\ ((!n. (((NUMERAL (BIT1 _0)) <= n) ==> ((NUMERAL _0) < n))) /\ (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (~ (n = (NUMERAL _0)))))))
T c/\ ! c==> c< cNUMERAL c_0 b0 c<= cNUMERAL cBIT1 c_0 b0 c/\ ! c==> c<= cNUMERAL cBIT1 c_0 b0 c< cNUMERAL c_0 b0 ! c==> c<= cNUMERAL cBIT1 c_0 b0 c~ c= b0 cNUMERAL c_0
+ |- (((!t'. (!e'. ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num x)) = g') ==> ((g' ==> ((exp ((real_mul x) (log (real_of_num x)))) = t')) ==> (((~ g') ==> ((((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = e')) ==> ((((COND ((real_lt (real_of_num (NUMERAL _0))) (real_of_num x))) (exp ((real_mul x) (log (real_of_num x))))) (((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num x)) = g') ==> ((g' ==> ((exp ((real_mul x) (log (real_of_num x)))) = t')) ==> (((~ g') ==> ((((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = e')) ==> ((((COND ((real_lt (real_of_num (NUMERAL _0))) (real_of_num x))) (exp ((real_mul x) (log (real_of_num x))))) (((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num x)) = g') ==> ((g' ==> ((exp ((real_mul x) (log (real_of_num x)))) = t')) ==> (((~ g') ==> ((((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = e')) ==> ((((COND ((real_lt (real_of_num (NUMERAL _0))) (real_of_num x))) (exp ((real_mul x) (log (real_of_num x))))) (((COND ((real_of_num x) = (real_of_num (NUMERAL _0)))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= creal_lt creal_of_num cNUMERAL c_0 creal_of_num f0 f1 c==> c==> f1 c= cexp creal_mul f2 clog creal_of_num f0 b0 c==> c==> c~ f1 c= cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs f2 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 b1 c= cCOND creal_lt creal_of_num cNUMERAL c_0 creal_of_num f0 cexp creal_mul f2 clog creal_of_num f0 cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs f2 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 cCOND f1 b0 b1 * / ! c==> c= creal_lt creal_of_num cNUMERAL c_0 creal_of_num f0 f1 c==> c==> f1 c= cexp creal_mul f2 clog creal_of_num f0 b0 c==> c==> c~ f1 c= cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs f2 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 b1 c= cCOND creal_lt creal_of_num cNUMERAL c_0 creal_of_num f0 cexp creal_mul f2 clog creal_of_num f0 cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs f2 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 cCOND f1 b0 b1 f3 * / ! c==> c= creal_lt creal_of_num cNUMERAL c_0 creal_of_num f0 f1 c==> c==> f1 c= cexp creal_mul f2 clog creal_of_num f0 b0 c==> c==> c~ f1 c= cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs f2 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 b1 c= cCOND creal_lt creal_of_num cNUMERAL c_0 creal_of_num f0 cexp creal_mul f2 clog creal_of_num f0 cCOND c= creal_of_num f0 creal_of_num cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs f2 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 cCOND f1 b0 b1 f3
+ |- ((((NUMERAL (BIT1 _0)) <= x) ==> ((((\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))) x) = ((\x. (Cx (real_inv ((rpow (real_of_num x)) x)))) x)) = q')) ==> (((x IN (from (NUMERAL (BIT1 _0)))) ==> (((\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))) x) = ((\x. (Cx (real_inv ((rpow (real_of_num x)) x)))) x))) = (((NUMERAL (BIT1 _0)) <= x) ==> q')))
T c==> c==> c<= cNUMERAL cBIT1 c_0 f0 c= c= * / ccomplex_inv ccpow cCx creal_of_num b0 cCx f1 f0 * / cCx creal_inv crpow creal_of_num b0 f1 f0 f2 c= c==> cIN f0 * part cfrom cNUMERAL cBIT1 c_0 c= * / ccomplex_inv ccpow cCx creal_of_num b0 cCx f1 f0 * / cCx creal_inv crpow creal_of_num b0 f1 f0 c==> c<= cNUMERAL cBIT1 c_0 f0 f2
- |- (((!n. (((NUMERAL _0) < n) ==> ((NUMERAL (BIT1 _0)) <= n))) ==> ((\n. (((NUMERAL _0) < n) ==> ((NUMERAL (BIT1 _0)) <= n))) n)) = ((\n. (((NUMERAL _0) < n) ==> ((NUMERAL (BIT1 _0)) <= n))) n))
T c= c==> ! c==> c< cNUMERAL c_0 b0 c<= cNUMERAL cBIT1 c_0 b0 * / c==> c< cNUMERAL c_0 b0 c<= cNUMERAL cBIT1 c_0 b0 f0 * / c==> c< cNUMERAL c_0 b0 c<= cNUMERAL cBIT1 c_0 b0 f0
- (~ T), ((NUMERAL (BIT1 _0)) <= x) |- (F = ((NUMERAL (BIT1 _0)) <= x))
T c==> c~ cT c==> c<= cNUMERAL cBIT1 c_0 f0 c= cF c<= cNUMERAL cBIT1 c_0 f0
+ |- (((!p'. (!q'. (((x IN (from (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((((\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))) x) = ((\x. (Cx (real_inv ((rpow (real_of_num x)) x)))) x)) = q')) ==> (((x IN (from (NUMERAL (BIT1 _0)))) ==> (((\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))) x) = ((\x. (Cx (real_inv ((rpow (real_of_num x)) x)))) x))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((x IN (from (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((((\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))) x) = ((\x. (Cx (real_inv ((rpow (real_of_num x)) x)))) x)) = q')) ==> (((x IN (from (NUMERAL (BIT1 _0)))) ==> (((\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))) x) = ((\x. (Cx (real_inv ((rpow (real_of_num x)) x)))) x))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((x IN (from (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((((\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))) x) = ((\x. (Cx (real_inv ((rpow (real_of_num x)) x)))) x)) = q')) ==> (((x IN (from (NUMERAL (BIT1 _0)))) ==> (((\k. (complex_inv ((cpow (Cx (real_of_num k))) (Cx x)))) x) = ((\x. (Cx (real_inv ((rpow (real_of_num x)) x)))) x))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN f0 * part cfrom cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= * / ccomplex_inv ccpow cCx creal_of_num b2 cCx f1 f0 * / cCx creal_inv crpow creal_of_num b2 f1 f0 b1 c= c==> cIN f0 * part cfrom cNUMERAL cBIT1 c_0 c= * / ccomplex_inv ccpow cCx creal_of_num b2 cCx f1 f0 * / cCx creal_inv crpow creal_of_num b2 f1 f0 c==> b0 b1 * / ! c==> c= cIN f0 * part cfrom cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= * / ccomplex_inv ccpow cCx creal_of_num b2 cCx f1 f0 * / cCx creal_inv crpow creal_of_num b2 f1 f0 b1 c= c==> cIN f0 * part cfrom cNUMERAL cBIT1 c_0 c= * / ccomplex_inv ccpow cCx creal_of_num b2 cCx f1 f0 * / cCx creal_inv crpow creal_of_num b2 f1 f0 c==> b0 b1 f2 * / ! c==> c= cIN f0 * part cfrom cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= * / ccomplex_inv ccpow cCx creal_of_num b2 cCx f1 f0 * / cCx creal_inv crpow creal_of_num b2 f1 f0 b1 c= c==> cIN f0 * part cfrom cNUMERAL cBIT1 c_0 c= * / ccomplex_inv ccpow cCx creal_of_num b2 cCx f1 f0 * / cCx creal_inv crpow creal_of_num b2 f1 f0 c==> b0 b1 f2
- (~ (n = (NUMERAL _0))) |- ((NUMERAL (BIT1 _0)) <= n)
T c==> c~ c= f0 cNUMERAL c_0 c<= cNUMERAL cBIT1 c_0 f0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ ((NUMERAL (BIT1 _0)) <= x) |- (((((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0)))) = F) ==> ((F ==> ((Cx (real_of_num (NUMERAL _0))) = t')) ==> (((~ F) ==> ((cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x))))) = e')) ==> ((((COND ((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x)))))) = (((COND F) t') e'))))) = ((F ==> ((Cx (real_of_num (NUMERAL _0))) = t')) ==> (((~ F) ==> ((cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x))))) = e')) ==> ((((COND ((Cx (real_of_num x)) = (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))) (cexp ((complex_mul (Cx x)) (clog (Cx (real_of_num x)))))) = (((COND F) t') e')))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c==> c= c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 cF c==> c==> cF c= cCx creal_of_num cNUMERAL c_0 f1 c==> c==> c~ cF c= ccexp ccomplex_mul cCx f2 cclog cCx creal_of_num f0 f3 c= cCOND c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul cCx f2 cclog cCx creal_of_num f0 cCOND cF f1 f3 c==> c==> cF c= cCx creal_of_num cNUMERAL c_0 f1 c==> c==> c~ cF c= ccexp ccomplex_mul cCx f2 cclog cCx creal_of_num f0 f3 c= cCOND c= cCx creal_of_num f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 ccexp ccomplex_mul cCx f2 cclog cCx creal_of_num f0 cCOND cF f1 f3
- T |- (T = T)
T c==> cT c= cT cT
+ |- ((?m. ((real_summable (from m)) f)) ==> ((real_summable (from n)) f))
T c==> c? / creal_summable * part cfrom b0 f0 creal_summable * part cfrom f1 f0
+ (!f. (!m. (!n. (((real_summable (from m)) f) ==> ((real_summable (from n)) f))))), ((real_summable (from m)) f) |- ((!f. (!m. (!n. (((real_summable (from m)) f) ==> ((real_summable (from n)) f))))) /\ ((real_summable (from n)) f))
T c==> ! ! ! c==> creal_summable * part cfrom b1 b0 creal_summable * part cfrom b2 b0 c==> creal_summable * part cfrom f0 f1 c/\ ! ! ! c==> creal_summable * part cfrom b1 b0 creal_summable * part cfrom b2 b0 creal_summable * part cfrom f2 f1
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ (!f. (!g. (!k. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g)))))) |- (((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g))) = T)
T c==> ! ! ! c==> ! c==> cIN b3 b2 c= * b0 b3 * b1 b3 c==> csummable b2 b0 csummable b2 b1 c= c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c==> csummable f0 f1 csummable f0 f2 cT
+ (((complex_mul (Cx x)) (Cx y)) = (Cx ((real_mul x) y))) |- ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y)))
T c==> c= ccomplex_mul cCx f0 cCx f1 cCx creal_mul f0 f1 c= cCx creal_mul f0 f1 ccomplex_mul cCx f0 cCx f1
- ((NUMERAL _0) < n) |- (((NUMERAL _0) < n) /\ ((n = (NUMERAL _0)) = F))
T c==> c< cNUMERAL c_0 f0 c/\ c< cNUMERAL c_0 f0 c= c= f0 cNUMERAL c_0 cF
- |- (((x = (NUMERAL _0)) ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ (x = (NUMERAL _0))) ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND (x = (NUMERAL _0))) t') e'))))
T c==> c==> c= f0 cNUMERAL c_0 c= cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 f3 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND c= f0 cNUMERAL c_0 f2 f3
- |- (((NUMERAL (BIT1 _0)) <= n) ==> (((NUMERAL _0) = n) = F))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c= cNUMERAL c_0 f0 cF
- (~ (n = (NUMERAL _0))) |- ((NUMERAL _0) < n)
T c==> c~ c= f0 cNUMERAL c_0 c< cNUMERAL c_0 f0
- |- ((\n. (((NUMERAL _0) < n) ==> ((NUMERAL (BIT1 _0)) <= n))) n)
T * / c==> c< cNUMERAL c_0 b0 c<= cNUMERAL cBIT1 c_0 b0 f0
- (x = (NUMERAL _0)) |- ((NUMERAL _0) = x)
T c==> c= f0 cNUMERAL c_0 c= cNUMERAL c_0 f0
- (~ (x = (NUMERAL _0))) |- ((x = (NUMERAL _0)) = F)
T c==> c~ c= f0 cNUMERAL c_0 c= c= f0 cNUMERAL c_0 cF
- ((NUMERAL _0) < n) |- (((NUMERAL _0) < n) /\ (((NUMERAL _0) = n) = F))
T c==> c< cNUMERAL c_0 f0 c/\ c< cNUMERAL c_0 f0 c= c= cNUMERAL c_0 f0 cF
- ((NUMERAL (BIT1 _0)) <= x) |- (T = ((NUMERAL (BIT1 _0)) <= x))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= cT c<= cNUMERAL cBIT1 c_0 f0
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
- (~ (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) |- ((?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n))))))) = F)
T c==> c~ c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f0 creal_div creal_of_num b0 creal_of_num b1 c= c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f0 creal_div creal_of_num b0 creal_of_num b1 cF
- |- ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))))
T c= cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0
- (~ (x = (real_of_num (NUMERAL _0)))) |- (((~ ((real_of_num (NUMERAL _0)) = x)) ==> (((real_of_num (NUMERAL _0)) = x) = F)) = (((real_of_num (NUMERAL _0)) = x) = F))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= c==> c~ c= creal_of_num cNUMERAL c_0 f0 c= c= creal_of_num cNUMERAL c_0 f0 cF c= c= creal_of_num cNUMERAL c_0 f0 cF
- |- ((((x = (NUMERAL _0)) = (x = (NUMERAL _0))) ==> (((x = (NUMERAL _0)) ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ (x = (NUMERAL _0))) ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND (x = (NUMERAL _0))) t') e'))))) = (((x = (NUMERAL _0)) ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ (x = (NUMERAL _0))) ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND (x = (NUMERAL _0))) t') e')))))
T c= c==> c= c= f0 cNUMERAL c_0 c= f0 cNUMERAL c_0 c==> c==> c= f0 cNUMERAL c_0 c= cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 f3 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND c= f0 cNUMERAL c_0 f2 f3 c==> c==> c= f0 cNUMERAL c_0 c= cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 f3 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND c= f0 cNUMERAL c_0 f2 f3
- ((NUMERAL (BIT1 _0)) <= n) |- (((NUMERAL (BIT1 _0)) <= n) /\ (((NUMERAL _0) = n) = F))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c= c= cNUMERAL c_0 f0 cF
- F |- (F = T)
T c==> cF c= cF cT
- |- (((!n. (((NUMERAL _0) < n) ==> (~ (n = (NUMERAL _0))))) ==> ((\n. (((NUMERAL _0) < n) ==> (~ (n = (NUMERAL _0))))) n)) = ((\n. (((NUMERAL _0) < n) ==> (~ (n = (NUMERAL _0))))) n))
T c= c==> ! c==> c< cNUMERAL c_0 b0 c~ c= b0 cNUMERAL c_0 * / c==> c< cNUMERAL c_0 b0 c~ c= b0 cNUMERAL c_0 f0 * / c==> c< cNUMERAL c_0 b0 c~ c= b0 cNUMERAL c_0 f0
- ((NUMERAL _0) < n) |- (~ ((NUMERAL _0) = n))
T c==> c< cNUMERAL c_0 f0 c~ c= cNUMERAL c_0 f0
- |- (((NUMERAL _0) < n) ==> (((NUMERAL _0) = n) = F))
T c==> c< cNUMERAL c_0 f0 c= c= cNUMERAL c_0 f0 cF
- |- ((~ (n = (NUMERAL _0))) ==> (((NUMERAL (BIT1 _0)) <= n) = T))
T c==> c~ c= f0 cNUMERAL c_0 c= c<= cNUMERAL cBIT1 c_0 f0 cT
- (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n))))))) |- ((?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n))))))) = T)
T c==> c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f0 creal_div creal_of_num b0 creal_of_num b1 c= c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f0 creal_div creal_of_num b0 creal_of_num b1 cT
- (~ (n = (NUMERAL _0))) |- ((~ (n = (NUMERAL _0))) /\ (((NUMERAL _0) < n) = T))
T c==> c~ c= f0 cNUMERAL c_0 c/\ c~ c= f0 cNUMERAL c_0 c= c< cNUMERAL c_0 f0 cT
- |- (((!t'. (!e'. (((x = (NUMERAL _0)) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((x = (NUMERAL _0)) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((x = (NUMERAL _0)) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 c==> c==> c~ f1 c= cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs f2 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 b1 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs f2 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 cCOND f1 b0 b1 * / ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 c==> c==> c~ f1 c= cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs f2 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 b1 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs f2 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 cCOND f1 b0 b1 f3 * / ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 c==> c==> c~ f1 c= cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs f2 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 b1 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs f2 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 cCOND f1 b0 b1 f3
- ((NUMERAL _0) < n) |- (~ (n = (NUMERAL _0)))
T c==> c< cNUMERAL c_0 f0 c~ c= f0 cNUMERAL c_0
- (!x. ((x IN k) ==> ((f x) = (g x)))) |- ((!f. (!g. (!k. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g)))))) ==> (((summable k) f) ==> ((summable k) g)))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c==> ! ! ! c==> ! c==> cIN b3 b2 c= * b0 b3 * b1 b3 c==> csummable b2 b0 csummable b2 b1 c==> csummable f0 f1 csummable f0 f2
- ((NUMERAL _0) < n) |- (((~ ((NUMERAL _0) = n)) ==> (((NUMERAL _0) = n) = F)) = (((NUMERAL _0) = n) = F))
T c==> c< cNUMERAL c_0 f0 c= c==> c~ c= cNUMERAL c_0 f0 c= c= cNUMERAL c_0 f0 cF c= c= cNUMERAL c_0 f0 cF
- |- (((NUMERAL _0) < n) ==> ((n = (NUMERAL _0)) = F))
T c==> c< cNUMERAL c_0 f0 c= c= f0 cNUMERAL c_0 cF
- |- ((~ (n = (NUMERAL _0))) ==> (((NUMERAL _0) < n) = T))
T c==> c~ c= f0 cNUMERAL c_0 c= c< cNUMERAL c_0 f0 cT
- ((NUMERAL _0) = x) |- (x = (NUMERAL _0))
T c==> c= cNUMERAL c_0 f0 c= f0 cNUMERAL c_0
- |- (((~ (x = (NUMERAL _0))) ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) e')))
T c==> c==> c~ c= f0 cNUMERAL c_0 c= cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 f2 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((x = (NUMERAL _0)) ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))) ==> (((~ (x = (NUMERAL _0))) ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) e')))) = (((~ (x = (NUMERAL _0))) ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) e'))))
T c= c==> c==> c= f0 cNUMERAL c_0 c= cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c==> c==> c~ c= f0 cNUMERAL c_0 c= cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 f2 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 f2 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f2
- (~ (x = (NUMERAL _0))) |- (((NUMERAL _0) = x) = F)
T c==> c~ c= f0 cNUMERAL c_0 c= c= cNUMERAL c_0 f0 cF
- ((NUMERAL _0) < n) |- ((NUMERAL (BIT1 _0)) <= n)
T c==> c< cNUMERAL c_0 f0 c<= cNUMERAL cBIT1 c_0 f0
- |- ((((~ (x = (NUMERAL _0))) ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))))) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))))) = ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))))))
T c= c==> c==> c~ c= f0 cNUMERAL c_0 c= cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f1 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0
- (~ F) |- (F = F)
T c==> c~ cF c= cF cF
- |- (((!g'. (!t'. (!e'. (((x = (NUMERAL _0)) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((x = (NUMERAL _0)) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((x = (NUMERAL _0)) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 c==> c==> c~ b0 c= cCOND c? / c? / c/\ cODD b3 c/\ cODD b4 c= creal_abs f1 creal_div creal_of_num b3 creal_of_num b4 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 b2 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b3 c/\ cODD b4 c= creal_abs f1 creal_div creal_of_num b3 creal_of_num b4 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 c==> c==> c~ b0 c= cCOND c? / c? / c/\ cODD b3 c/\ cODD b4 c= creal_abs f1 creal_div creal_of_num b3 creal_of_num b4 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 b2 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b3 c/\ cODD b4 c= creal_abs f1 creal_div creal_of_num b3 creal_of_num b4 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND b0 b1 b2 f2 * / ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 c==> c==> c~ b0 c= cCOND c? / c? / c/\ cODD b3 c/\ cODD b4 c= creal_abs f1 creal_div creal_of_num b3 creal_of_num b4 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 b2 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b3 c/\ cODD b4 c= creal_abs f1 creal_div creal_of_num b3 creal_of_num b4 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND b0 b1 b2 f2
- |- ((\g'. (!t'. (!e'. (((x = (NUMERAL _0)) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b1 c==> c==> c~ b0 c= cCOND c? / c? / c/\ cODD b3 c/\ cODD b4 c= creal_abs f1 creal_div creal_of_num b3 creal_of_num b4 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 b2 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b3 c/\ cODD b4 c= creal_abs f1 creal_div creal_of_num b3 creal_of_num b4 creal_neg cexp creal_mul f1 clog creal_neg creal_of_num f0 cexp creal_mul f1 clog creal_neg creal_of_num f0 cCOND b0 b1 b2 f2
- (~ (n = (NUMERAL _0))) |- ((~ (n = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= n) = T))
T c==> c~ c= f0 cNUMERAL c_0 c/\ c~ c= f0 cNUMERAL c_0 c= c<= cNUMERAL cBIT1 c_0 f0 cT
- |- (((!n. ((~ (n = (NUMERAL _0))) ==> ((NUMERAL _0) < n))) ==> ((\n. ((~ (n = (NUMERAL _0))) ==> ((NUMERAL _0) < n))) n)) = ((\n. ((~ (n = (NUMERAL _0))) ==> ((NUMERAL _0) < n))) n))
T c= c==> ! c==> c~ c= b0 cNUMERAL c_0 c< cNUMERAL c_0 b0 * / c==> c~ c= b0 cNUMERAL c_0 c< cNUMERAL c_0 b0 f0 * / c==> c~ c= b0 cNUMERAL c_0 c< cNUMERAL c_0 b0 f0
- (~ (x = (real_of_num (NUMERAL _0)))) |- (((real_of_num (NUMERAL _0)) = x) = F)
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= c= creal_of_num cNUMERAL c_0 f0 cF
- |- ((\n. (((NUMERAL _0) < n) ==> (~ (n = (NUMERAL _0))))) n)
T * / c==> c< cNUMERAL c_0 b0 c~ c= b0 cNUMERAL c_0 f0
- ((real_of_num (NUMERAL _0)) = x) |- (x = (real_of_num (NUMERAL _0)))
T c==> c= creal_of_num cNUMERAL c_0 f0 c= f0 creal_of_num cNUMERAL c_0
- ((NUMERAL _0) < n) |- (((NUMERAL _0) < n) /\ (((NUMERAL (BIT1 _0)) <= n) = T))
T c==> c< cNUMERAL c_0 f0 c/\ c< cNUMERAL c_0 f0 c= c<= cNUMERAL cBIT1 c_0 f0 cT
- (~ T) |- (T = F)
T c==> c~ cT c= cT cF
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- ((NUMERAL (BIT1 _0)) <= n) |- (~ ((NUMERAL _0) = n))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c~ c= cNUMERAL c_0 f0
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (!f. (!g. (!k. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g)))))), (!x. ((x IN k) ==> ((f x) = (g x)))) |- ((!f. (!g. (!k. ((!x. ((x IN k) ==> ((f x) = (g x)))) ==> (((summable k) f) ==> ((summable k) g)))))) /\ (((summable k) f) ==> ((summable k) g)))
T c==> ! ! ! c==> ! c==> cIN b3 b2 c= * b0 b3 * b1 b3 c==> csummable b2 b0 csummable b2 b1 c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c/\ ! ! ! c==> ! c==> cIN b3 b2 c= * b0 b3 * b1 b3 c==> csummable b2 b0 csummable b2 b1 c==> csummable f0 f1 csummable f0 f2
- |- (((!e'. (((x = (NUMERAL _0)) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e')))))) ==> ((\e'. (((x = (NUMERAL _0)) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e')))))) e')) = ((\e'. (((x = (NUMERAL _0)) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f3 c==> c==> c~ f1 c= cCOND c? / c? / c/\ cODD b1 c/\ cODD b2 c= creal_abs f2 creal_div creal_of_num b1 creal_of_num b2 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 b0 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b1 c/\ cODD b2 c= creal_abs f2 creal_div creal_of_num b1 creal_of_num b2 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 cCOND f1 f3 b0 * / c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f3 c==> c==> c~ f1 c= cCOND c? / c? / c/\ cODD b1 c/\ cODD b2 c= creal_abs f2 creal_div creal_of_num b1 creal_of_num b2 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 b0 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b1 c/\ cODD b2 c= creal_abs f2 creal_div creal_of_num b1 creal_of_num b2 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 cCOND f1 f3 b0 f4 * / c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f3 c==> c==> c~ f1 c= cCOND c? / c? / c/\ cODD b1 c/\ cODD b2 c= creal_abs f2 creal_div creal_of_num b1 creal_of_num b2 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 b0 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b1 c/\ cODD b2 c= creal_abs f2 creal_div creal_of_num b1 creal_of_num b2 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 cCOND f1 f3 b0 f4
- |- (((x = (NUMERAL _0)) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e')))))
T c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f3 c==> c==> c~ f1 c= cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f2 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 f4 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b0 c/\ cODD b1 c= creal_abs f2 creal_div creal_of_num b0 creal_of_num b1 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 cCOND f1 f3 f4
- |- ((\n. ((~ (n = (NUMERAL _0))) ==> ((NUMERAL (BIT1 _0)) <= n))) n)
T * / c==> c~ c= b0 cNUMERAL c_0 c<= cNUMERAL cBIT1 c_0 b0 f0
- |- ((\t'. (!e'. (((x = (NUMERAL _0)) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 b0 c==> c==> c~ f1 c= cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs f2 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 b1 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b2 c/\ cODD b3 c= creal_abs f2 creal_div creal_of_num b2 creal_of_num b3 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 cCOND f1 b0 b1 f3
- |- ((\e'. (((x = (NUMERAL _0)) = g') ==> ((g' ==> ((((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = t')) ==> (((~ g') ==> ((((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x)))))) = e')) ==> ((((COND (x = (NUMERAL _0))) (((COND (x = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (((COND (?m. (?n. ((ODD m) /\ ((ODD n) /\ ((real_abs x) = ((real_div (real_of_num m)) (real_of_num n)))))))) (real_neg (exp ((real_mul x) (log (real_neg (real_of_num x))))))) (exp ((real_mul x) (log (real_neg (real_of_num x))))))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f3 c==> c==> c~ f1 c= cCOND c? / c? / c/\ cODD b1 c/\ cODD b2 c= creal_abs f2 creal_div creal_of_num b1 creal_of_num b2 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 b0 c= cCOND c= f0 cNUMERAL c_0 cCOND c= f2 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c? / c? / c/\ cODD b1 c/\ cODD b2 c= creal_abs f2 creal_div creal_of_num b1 creal_of_num b2 creal_neg cexp creal_mul f2 clog creal_neg creal_of_num f0 cexp creal_mul f2 clog creal_neg creal_of_num f0 cCOND f1 f3 b0 f4
