N BOUNDED_RECTIFIABLE_PATH_IMAGE
C |- (!g. ((rectifiable_path g) ==> (bounded (path_image g))))
T c==> crectifiable_path f0 cbounded * part cpath_image f0
D TRUTH
A |- T
T cT
D BOUNDED_PATH_IMAGE
A |- (!g. ((path g) ==> (bounded (path_image g))))
T c==> cpath f0 cbounded * part cpath_image f0
D rectifiable_path
A |- (!g. ((rectifiable_path g) = ((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))))
T c= crectifiable_path f0 c/\ cpath f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL
+ |- ((((rectifiable_path g) = ((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))))) ==> ((((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((bounded (path_image g)) = q')) ==> (((rectifiable_path g) ==> (bounded (path_image g))) = (((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> q')))) = ((((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> ((bounded (path_image g)) = q')) ==> (((rectifiable_path g) ==> (bounded (path_image g))) = (((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) ==> q'))))
T c= c==> c= crectifiable_path f0 c/\ cpath f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c==> c==> c/\ cpath f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cbounded * part cpath_image f0 f1 c= c==> crectifiable_path f0 cbounded * part cpath_image f0 c==> c/\ cpath f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1 c==> c==> c/\ cpath f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cbounded * part cpath_image f0 f1 c= c==> crectifiable_path f0 cbounded * part cpath_image f0 c==> c/\ cpath f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL f1
+ |- (((!g. ((path g) ==> (bounded (path_image g)))) ==> ((\g. ((path g) ==> (bounded (path_image g)))) g)) = ((\g. ((path g) ==> (bounded (path_image g)))) g))
T c= c==> ! c==> cpath b0 cbounded * part cpath_image b0 * / c==> cpath b0 cbounded * part cpath_image b0 f0 * / c==> cpath b0 cbounded * part cpath_image b0 f0
+ |- (T = (!g. ((rectifiable_path g) ==> (bounded (path_image g)))))
T c= cT ! c==> crectifiable_path b0 cbounded * part cpath_image b0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ (path g) |- ((path g) /\ ((bounded (path_image g)) = T))
T c==> cpath f0 c/\ cpath f0 c= cbounded * part cpath_image f0 cT
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- ((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- ((path g) = T)
T c==> c/\ cpath f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cpath f0 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- ((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- (T = (path g))
T c==> c/\ cpath f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= cT cpath f0
- ((path g) /\ ((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL)))) |- (((has_bounded_variation_on g) (closed_interval ((CONS ((vec (NUMERAL _0)) , (vec (NUMERAL (BIT1 _0))))) NIL))) = T)
T c==> c/\ cpath f0 chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL c= chas_bounded_variation_on f0 * part cclosed_interval cCONS c, cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cNIL cT
