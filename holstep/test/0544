N CARD_EXP_C
C |- (!s. (!t. (((FINITE s) /\ (FINITE t)) ==> ((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))))))
T c==> c/\ cFINITE f0 cFINITE f1 c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.add0n
A |- (!n. (((NUMERAL _0) + n) = n))
T c= c+ cNUMERAL c_0 f0 f0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D ADD_ASSOC
A |- (!m. (!n. (!p. ((m + (n + p)) = ((m + n) + p)))))
T c= c+ f0 c+ f1 f2 c+ c+ f0 f1 f2
D ADD_AC
A |- (((m + n) = (n + m)) /\ ((((m + n) + p) = (m + (n + p))) /\ ((m + (n + p)) = (n + (m + p)))))
T c/\ c= c+ f0 f1 c+ f1 f0 c/\ c= c+ c+ f0 f1 f2 c+ f0 c+ f1 f2 c= c+ f0 c+ f1 f2 c+ f1 c+ f0 f2
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D Ssrnat.mul0n
A |- (!n. (((NUMERAL _0) * n) = (NUMERAL _0)))
T c= c* cNUMERAL c_0 f0 cNUMERAL c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D Ssrnat.mul1n
A |- (!n. (((NUMERAL (BIT1 _0)) * n) = n))
T c= c* cNUMERAL cBIT1 c_0 f0 f0
D LEFT_ADD_DISTRIB
A |- (!m. (!n. (!p. ((m * (n + p)) = ((m * n) + (m * p))))))
T c= c* f0 c+ f1 f2 c+ c* f0 f1 c* f0 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D Ssrnat.expnS
A |- (!m. (!n. ((m EXP (SUC n)) = (m * (m EXP n)))))
T c= cEXP f0 cSUC f1 c* f0 cEXP f0 f1
D Ssrnat.expn0
A |- (!m. ((m EXP (NUMERAL _0)) = (NUMERAL (BIT1 _0))))
T c= cEXP f0 cNUMERAL c_0 cNUMERAL cBIT1 c_0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_EQ
A |- (!x. (!y. ((~ (x = y)) = (((int_lt x) y) \/ ((int_lt y) x)))))
T c= c~ c= f0 f1 c\/ cint_lt f0 f1 cint_lt f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D FINITE_INDUCT_STRONG
A |- (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s)))))
T c==> c/\ * f0 part cEMPTY ! ! c==> c/\ * f0 b1 c/\ c~ cIN b0 b1 cFINITE b1 * f0 * * part cINSERT b0 b1 ! c==> cFINITE b0 * f0 b0
D FINITE_INSERT
A |- (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s))))
T c= cFINITE * * part cINSERT f0 f1 cFINITE f1
D FINITE_SING
A |- (!a. (FINITE (a INSERT EMPTY)))
T cFINITE * * part cINSERT f0 part cEMPTY
D Oxl_2012.CARD_INSERT
A |- (!x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))))
T c==> cFINITE f0 c= cCARD * * part cINSERT f1 f0 cCOND cIN f1 f0 cCARD f0 cSUC cCARD f0
D Oxl_2012.CARD_EMPTY
A |- ((CARD EMPTY) = (NUMERAL _0))
T c= cCARD part cEMPTY cNUMERAL c_0
D CARD_SING
A |- (!a. ((CARD (a INSERT EMPTY)) = (NUMERAL (BIT1 _0))))
T c= cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0
D CARD_EQ_REFL
A |- (!s. (s =_c s))
T c=_c f0 f0
D CARD_EQ_CARD_IMP
A |- (!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t)))))
T c==> c/\ cFINITE f0 c=_c f1 f0 c= cCARD f1 cCARD f0
D CARD_EQ_CARD
A |- (!s. (!t. (((FINITE s) /\ (FINITE t)) ==> ((s =_c t) = ((CARD s) = (CARD t))))))
T c==> c/\ cFINITE f0 cFINITE f1 c= c=_c f0 f1 c= cCARD f0 cCARD f1
D CARD_ADD_C
A |- (!s. (!t. (((FINITE s) /\ (FINITE t)) ==> ((CARD ((+_c s) t)) = ((CARD s) + (CARD t))))))
T c==> c/\ cFINITE f0 cFINITE f1 c= cCARD * * part c+_c f0 f1 c+ cCARD f0 cCARD f1
D CARD_MUL_C
A |- (!s. (!t. (((FINITE s) /\ (FINITE t)) ==> ((CARD ((*_c s) t)) = ((CARD s) * (CARD t))))))
T c==> c/\ cFINITE f0 cFINITE f1 c= cCARD * * part c*_c f0 f1 c* cCARD f0 cCARD f1
D CARD_ADD_FINITE
A |- (!s. (!t. (((FINITE s) /\ (FINITE t)) ==> (FINITE ((+_c s) t)))))
T c==> c/\ cFINITE f0 cFINITE f1 cFINITE * * part c+_c f0 f1
D CARD_MUL_FINITE
A |- (!s. (!t. (((FINITE s) /\ (FINITE t)) ==> (FINITE ((*_c s) t)))))
T c==> c/\ cFINITE f0 cFINITE f1 cFINITE * * part c*_c f0 f1
D CARD_EXP_0
A |- (!s. (!c. (((^_c s) EMPTY) =_c (c INSERT EMPTY))))
T c=_c * * part c^_c f0 part cEMPTY * * part cINSERT f1 part cEMPTY
D CARD_EXP_ADD
A |- (!s. (!t. (!u. (((^_c s) ((+_c t) u)) =_c ((*_c ((^_c s) t)) ((^_c s) u))))))
T c=_c * * part c^_c f0 * * part c+_c f1 f2 * * part c*_c * * part c^_c f0 f1 * * part c^_c f0 f2
D CARD_EXP_SING
A |- (!s. (!b. (((^_c s) (b INSERT EMPTY)) =_c s)))
T c=_c * * part c^_c f0 * * part cINSERT f1 part cEMPTY f0
D CARD_EXP_CONG
A |- (!s. (!s'. (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t')))))))
T c==> c/\ c=_c f0 f1 c=_c f2 f3 c=_c * * part c^_c f0 f2 * * part c^_c f1 f3
D CARD_EXP_FINITE
A |- (!s. (!t. (((FINITE s) /\ (FINITE t)) ==> (FINITE ((^_c s) t)))))
T c==> c/\ cFINITE f0 cFINITE f1 cFINITE * * part c^_c f0 f1
+ (FINITE t) |- ((FINITE t) = T)
T c==> cFINITE f0 c= cFINITE f0 cT
- (!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))) |- ((!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t)))) = T)
T c==> ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 c= ! c==> c/\ cFINITE b0 c=_c f0 b0 c= cCARD f0 cCARD b0 cT
+ |- (((!s. (!t. (!s'. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))) ==> ((\s. (!t. (!s'. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))) s)) = ((\s. (!t. (!s'. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))) s))
T c= c==> ! ! ! ! c==> c/\ c=_c b0 b2 c=_c b1 b3 c=_c * * part c^_c b0 b1 * * part c^_c b2 b3 * / ! ! ! c==> c/\ c=_c b0 b2 c=_c b1 b3 c=_c * * part c^_c b0 b1 * * part c^_c b2 b3 f0 * / ! ! ! c==> c/\ c=_c b0 b2 c=_c b1 b3 c=_c * * part c^_c b0 b1 * * part c^_c b2 b3 f0
+ |- (((!q'. (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) = p') ==> ((p' ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t))))) = (p' ==> q'))))) ==> ((\q'. (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) = p') ==> ((p' ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t))))) = (p' ==> q'))))) q')) = ((\q'. (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) = p') ==> ((p' ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 f3 c==> c==> f3 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 b0 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 c==> f3 b0 * / c==> c= c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 f3 c==> c==> f3 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 b0 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 c==> f3 b0 f4 * / c==> c= c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 f3 c==> c==> f3 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 b0 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 c==> f3 b0 f4
+ |- ((CARD ((^_c s) EMPTY)) = (NUMERAL (BIT1 _0)))
T c= cCARD * * part c^_c f0 part cEMPTY cNUMERAL cBIT1 c_0
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- (((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) |- (T = (FINITE t))
T c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cT cFINITE f1
- (!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))), ((FINITE t) /\ (s =_c t)) |- (((FINITE t) /\ (s =_c t)) /\ ((CARD s) = (CARD t)))
T c==> ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 c==> c/\ cFINITE f0 c=_c f1 f0 c/\ c/\ cFINITE f0 c=_c f1 f0 c= cCARD f1 cCARD f0
+ |- (((!x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) ==> ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x)) = ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x))
T c= c==> ! ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0 * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0
+ (FINITE t) |- (T = ((FINITE (b INSERT t)) /\ (FINITE ((+_c (b INSERT EMPTY)) t))))
T c==> cFINITE f0 c= cT c/\ cFINITE * * part cINSERT f1 f0 cFINITE * * part c+_c * * part cINSERT f1 part cEMPTY f0
+ (FINITE s) |- (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (b IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (b INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))) = T)
T c==> cFINITE f0 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 cT
+ |- (((!a. ((CARD (a INSERT EMPTY)) = (NUMERAL (BIT1 _0)))) ==> ((\a. ((CARD (a INSERT EMPTY)) = (NUMERAL (BIT1 _0)))) a)) = ((\a. ((CARD (a INSERT EMPTY)) = (NUMERAL (BIT1 _0)))) a))
T c= c==> ! c= cCARD * * part cINSERT b0 part cEMPTY cNUMERAL cBIT1 c_0 * / c= cCARD * * part cINSERT b0 part cEMPTY cNUMERAL cBIT1 c_0 f0 * / c= cCARD * * part cINSERT b0 part cEMPTY cNUMERAL cBIT1 c_0 f0
+ |- ((\t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t')))) t')
T * / c==> c/\ c=_c f0 f1 c=_c f2 b0 c=_c * * part c^_c f0 f2 * * part c^_c f1 b0 f3
+ (~ (b IN t)) |- ((((COND (b IN t)) (CARD t)) (SUC (CARD t))) = (((COND F) (CARD t)) (SUC (CARD t))))
T c==> c~ cIN f0 f1 c= cCOND cIN f0 f1 cCARD f1 cSUC cCARD f1 cCOND cF cCARD f1 cSUC cCARD f1
+ (~ F) |- ((~ F) /\ ((SUC (CARD t)) = (SUC (CARD t))))
T c==> c~ cF c/\ c~ cF c= cSUC cCARD f0 cSUC cCARD f0
+ (!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))), (?y. ((x = y) /\ (y = z))) |- ((?y. ((x = y) /\ (y = z))) /\ (x = z))
T c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 c==> c? / c/\ c= f0 b0 c= b0 f1 c/\ c? / c/\ c= f0 b0 c= b0 f1 c= f0 f1
+ (FINITE s) |- ((((FINITE s) /\ (FINITE (b INSERT EMPTY))) ==> ((FINITE ((^_c s) (b INSERT EMPTY))) = T)) = ((FINITE ((^_c s) (b INSERT EMPTY))) = T))
T c==> cFINITE f0 c= c==> c/\ cFINITE f0 cFINITE * * part cINSERT f1 part cEMPTY c= cFINITE * * part c^_c f0 * * part cINSERT f1 part cEMPTY cT c= cFINITE * * part c^_c f0 * * part cINSERT f1 part cEMPTY cT
+ |- (((!a. ((CARD (a INSERT EMPTY)) = (NUMERAL (BIT1 _0)))) ==> ((\a. ((CARD (a INSERT EMPTY)) = (NUMERAL (BIT1 _0)))) (NUMERAL _0))) = ((\a. ((CARD (a INSERT EMPTY)) = (NUMERAL (BIT1 _0)))) (NUMERAL _0)))
T c= c==> ! c= cCARD * * part cINSERT b0 part cEMPTY cNUMERAL cBIT1 c_0 * / c= cCARD * * part cINSERT b0 part cEMPTY cNUMERAL cBIT1 c_0 cNUMERAL c_0 * / c= cCARD * * part cINSERT b0 part cEMPTY cNUMERAL cBIT1 c_0 cNUMERAL c_0
- (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))), ((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) |- (!s. ((FINITE s) ==> (P s)))
T c==> ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 c==> c/\ * f0 part cEMPTY ! ! c==> c/\ * f0 b1 c/\ c~ cIN b0 b1 cFINITE b1 * f0 * * part cINSERT b0 b1 ! c==> cFINITE b0 * f0 b0
+ (!s. (!s'. (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))) |- ((!s. (!s'. (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))) /\ (!s. (!t. (!s'. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))))
T c==> ! ! ! ! c==> c/\ c=_c b0 b1 c=_c b2 b3 c=_c * * part c^_c b0 b2 * * part c^_c b1 b3 c/\ ! ! ! ! c==> c/\ c=_c b0 b1 c=_c b2 b3 c=_c * * part c^_c b0 b2 * * part c^_c b1 b3 ! ! ! ! c==> c/\ c=_c b0 b2 c=_c b1 b3 c=_c * * part c^_c b0 b1 * * part c^_c b2 b3
- |- ((\q'. (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) = p') ==> ((p' ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 f3 c==> c==> f3 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 b0 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c==> f3 b0 f4
+ (FINITE s), (FINITE t) |- ((((FINITE s) /\ (FINITE ((+_c (b INSERT EMPTY)) t))) ==> ((FINITE ((^_c s) ((+_c (b INSERT EMPTY)) t))) = T)) = ((FINITE ((^_c s) ((+_c (b INSERT EMPTY)) t))) = T))
T c==> cFINITE f0 c==> cFINITE f1 c= c==> c/\ cFINITE f0 cFINITE * * part c+_c * * part cINSERT f2 part cEMPTY f1 c= cFINITE * * part c^_c f0 * * part c+_c * * part cINSERT f2 part cEMPTY f1 cT c= cFINITE * * part c^_c f0 * * part c+_c * * part cINSERT f2 part cEMPTY f1 cT
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ (~ (b IN t)), (FINITE t) |- ((((s =_c s) /\ ((b INSERT t) =_c ((+_c (b INSERT EMPTY)) t))) ==> (((^_c s) (b INSERT t)) =_c ((^_c s) ((+_c (b INSERT EMPTY)) t)))) = (((^_c s) (b INSERT t)) =_c ((^_c s) ((+_c (b INSERT EMPTY)) t))))
T c==> c~ cIN f0 f1 c==> cFINITE f1 c= c==> c/\ c=_c f2 f2 c=_c * * part cINSERT f0 f1 * * part c+_c * * part cINSERT f0 part cEMPTY f1 c=_c * * part c^_c f2 * * part cINSERT f0 f1 * * part c^_c f2 * * part c+_c * * part cINSERT f0 part cEMPTY f1 c=_c * * part c^_c f2 * * part cINSERT f0 f1 * * part c^_c f2 * * part c+_c * * part cINSERT f0 part cEMPTY f1
+ (!s. (!s'. (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))) |- (!s'. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t')))))
T c==> ! ! ! ! c==> c/\ c=_c b0 b1 c=_c b2 b3 c=_c * * part c^_c b0 b2 * * part c^_c b1 b3 ! ! c==> c/\ c=_c f0 b0 c=_c f1 b1 c=_c * * part c^_c f0 f1 * * part c^_c b0 b1
+ |- (((!t'. (!e'. (((b IN t) = g') ==> ((g' ==> ((CARD t) = t')) ==> (((~ g') ==> ((SUC (CARD t)) = e')) ==> ((((COND (b IN t)) (CARD t)) (SUC (CARD t))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((b IN t) = g') ==> ((g' ==> ((CARD t) = t')) ==> (((~ g') ==> ((SUC (CARD t)) = e')) ==> ((((COND (b IN t)) (CARD t)) (SUC (CARD t))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((b IN t) = g') ==> ((g' ==> ((CARD t) = t')) ==> (((~ g') ==> ((SUC (CARD t)) = e')) ==> ((((COND (b IN t)) (CARD t)) (SUC (CARD t))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 f1 f2 c==> c==> f2 c= cCARD f1 b0 c==> c==> c~ f2 c= cSUC cCARD f1 b1 c= cCOND cIN f0 f1 cCARD f1 cSUC cCARD f1 cCOND f2 b0 b1 * / ! c==> c= cIN f0 f1 f2 c==> c==> f2 c= cCARD f1 b0 c==> c==> c~ f2 c= cSUC cCARD f1 b1 c= cCOND cIN f0 f1 cCARD f1 cSUC cCARD f1 cCOND f2 b0 b1 f3 * / ! c==> c= cIN f0 f1 f2 c==> c==> f2 c= cCARD f1 b0 c==> c==> c~ f2 c= cSUC cCARD f1 b1 c= cCOND cIN f0 f1 cCARD f1 cSUC cCARD f1 cCOND f2 b0 b1 f3
+ |- (((CARD ((^_c s) EMPTY)) = (CARD ((NUMERAL _0) INSERT EMPTY))) = ((CARD ((^_c s) EMPTY)) = (NUMERAL (BIT1 _0))))
T c= c= cCARD * * part c^_c f0 part cEMPTY cCARD * * part cINSERT cNUMERAL c_0 part cEMPTY c= cCARD * * part c^_c f0 part cEMPTY cNUMERAL cBIT1 c_0
+ |- (((FINITE s) /\ (FINITE t)) ==> ((FINITE ((*_c s) t)) = T))
T c==> c/\ cFINITE f0 cFINITE f1 c= cFINITE * * part c*_c f0 f1 cT
+ (~ (b IN t)), (FINITE s), (FINITE t), ((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) |- (?y. (((CARD ((^_c s) (b INSERT t))) = y) /\ (y = ((CARD s) * ((CARD s) EXP (CARD t))))))
T c==> c~ cIN f0 f1 c==> cFINITE f2 c==> cFINITE f1 c==> c= cCARD * * part c^_c f2 f1 cEXP cCARD f2 cCARD f1 c? / c/\ c= cCARD * * part c^_c f2 * * part cINSERT f0 f1 b0 c= b0 c* cCARD f2 cEXP cCARD f2 cCARD f1
+ |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ ((x = y) /\ (y = z)) |- (((x = y) /\ (y = z)) /\ ((!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) ==> (x = z)))
T c==> c/\ c= f0 f1 c= f1 f2 c/\ c/\ c= f0 f1 c= f1 f2 c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 c= f0 f2
+ (FINITE s) |- ((FINITE s) /\ (FINITE (b INSERT EMPTY)))
T c==> cFINITE f0 c/\ cFINITE f0 cFINITE * * part cINSERT f1 part cEMPTY
+ (((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) |- ((x IN t) = F)
T c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cIN f2 f1 cF
+ |- ((\m. (!n. ((m EXP (SUC n)) = (m * (m EXP n))))) m)
T * / ! c= cEXP b0 cSUC b1 c* b0 cEXP b0 b1 f0
+ |- (((!p'. (!q'. (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) = p') ==> ((p' ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) = p') ==> ((p' ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) = p') ==> ((p' ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 b0 c==> c==> b0 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 b1 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 c==> b0 b1 * / ! c==> c= c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 b0 c==> c==> b0 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 b1 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 c==> b0 b1 f3 * / ! c==> c= c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 b0 c==> c==> b0 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 b1 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 c==> b0 b1 f3
+ ((FINITE s) /\ (FINITE t)) |- (((FINITE s) /\ (FINITE t)) /\ ((FINITE ((*_c s) t)) = T))
T c==> c/\ cFINITE f0 cFINITE f1 c/\ c/\ cFINITE f0 cFINITE f1 c= cFINITE * * part c*_c f0 f1 cT
+ |- ((?y. ((x = y) /\ (y = z))) ==> (x = z))
T c==> c? / c/\ c= f0 b0 c= b0 f1 c= f0 f1
+ |- ((\e'. (((b IN t) = g') ==> ((g' ==> ((CARD t) = t')) ==> (((~ g') ==> ((SUC (CARD t)) = e')) ==> ((((COND (b IN t)) (CARD t)) (SUC (CARD t))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 f1 f2 c==> c==> f2 c= cCARD f1 f3 c==> c==> c~ f2 c= cSUC cCARD f1 b0 c= cCOND cIN f0 f1 cCARD f1 cSUC cCARD f1 cCOND f2 f3 b0 f4
+ |- ((~ F) ==> ((SUC (CARD t)) = (SUC (CARD t))))
T c==> c~ cF c= cSUC cCARD f0 cSUC cCARD f0
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _142514)) /\ (((real_le ((real_add ((real_add (real_of_int _142514)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _142514)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _142514)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _142514)) (real_of_num (NUMERAL (BIT1 _0))))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _142514) ==> (((int_add _142514) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add _142514) (int_of_num (NUMERAL (BIT1 _0))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c= cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add f0 cint_of_num cNUMERAL cBIT1 c_0
+ |- ((\s. (!t. (((FINITE s) /\ (FINITE t)) ==> (FINITE ((+_c s) t))))) s)
T * / ! c==> c/\ cFINITE b0 cFINITE b1 cFINITE * * part c+_c b0 b1 f0
+ |- (((!s. (!s'. (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))) ==> (!s. (!t. (!s'. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t')))))))) = (!s. (!t. (!s'. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))))
T c= c==> ! ! ! ! c==> c/\ c=_c b0 b1 c=_c b2 b3 c=_c * * part c^_c b0 b2 * * part c^_c b1 b3 ! ! ! ! c==> c/\ c=_c b0 b2 c=_c b1 b3 c=_c * * part c^_c b0 b1 * * part c^_c b2 b3 ! ! ! ! c==> c/\ c=_c b0 b2 c=_c b1 b3 c=_c * * part c^_c b0 b1 * * part c^_c b2 b3
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) |- ((CARD (x INSERT t)) = (((COND (x IN t)) (CARD t)) (SUC (CARD t))))
T c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part cINSERT f2 f1 cCOND cIN f2 f1 cCARD f1 cSUC cCARD f1
+ |- ((((CARD ((^_c s) EMPTY)) = (NUMERAL (BIT1 _0))) /\ (!x. (!t. ((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t)))))))) = (((CARD ((^_c s) EMPTY)) = ((CARD s) EXP (CARD EMPTY))) /\ (!x. (!t. ((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t)))))))))
T c= c/\ c= cCARD * * part c^_c f0 part cEMPTY cNUMERAL cBIT1 c_0 ! ! c==> c/\ c= cCARD * * part c^_c f0 b1 cEXP cCARD f0 cCARD b1 c/\ c~ cIN b0 b1 cFINITE b1 c= cCARD * * part c^_c f0 * * part cINSERT b0 b1 c* cCARD f0 cEXP cCARD f0 cCARD b1 c/\ c= cCARD * * part c^_c f0 part cEMPTY cEXP cCARD f0 cCARD part cEMPTY ! ! c==> c/\ c= cCARD * * part c^_c f0 b1 cEXP cCARD f0 cCARD b1 c/\ c~ cIN b0 b1 cFINITE b1 c= cCARD * * part c^_c f0 * * part cINSERT b0 b1 cEXP cCARD f0 cCARD * * part cINSERT b0 b1
+ |- ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x)
T * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0
- |- ((((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) = (((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t)))) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))) = ((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> q')))) = (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))) = ((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> q'))))
T c= c==> c= c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c==> c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 f3 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 f3 c==> c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 f3 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 f3
+ |- (((!t. (((FINITE s) /\ (FINITE t)) ==> ((CARD ((*_c s) t)) = ((CARD s) * (CARD t))))) ==> ((\t. (((FINITE s) /\ (FINITE t)) ==> ((CARD ((*_c s) t)) = ((CARD s) * (CARD t))))) t)) = ((\t. (((FINITE s) /\ (FINITE t)) ==> ((CARD ((*_c s) t)) = ((CARD s) * (CARD t))))) t))
T c= c==> ! c==> c/\ cFINITE f0 cFINITE b0 c= cCARD * * part c*_c f0 b0 c* cCARD f0 cCARD b0 * / c==> c/\ cFINITE f0 cFINITE b0 c= cCARD * * part c*_c f0 b0 c* cCARD f0 cCARD b0 f1 * / c==> c/\ cFINITE f0 cFINITE b0 c= cCARD * * part c*_c f0 b0 c* cCARD f0 cCARD b0 f1
+ |- ((((^_c s) ((+_c t) u)) =_c ((*_c ((^_c s) t)) ((^_c s) u))) = T)
T c= c=_c * * part c^_c f0 * * part c+_c f1 f2 * * part c*_c * * part c^_c f0 f1 * * part c^_c f0 f2 cT
+ |- ((((FINITE ((NUMERAL _0) INSERT EMPTY)) /\ (((^_c s) EMPTY) =_c ((NUMERAL _0) INSERT EMPTY))) ==> ((CARD ((^_c s) EMPTY)) = (CARD ((NUMERAL _0) INSERT EMPTY)))) = ((CARD ((^_c s) EMPTY)) = (CARD ((NUMERAL _0) INSERT EMPTY))))
T c= c==> c/\ cFINITE * * part cINSERT cNUMERAL c_0 part cEMPTY c=_c * * part c^_c f0 part cEMPTY * * part cINSERT cNUMERAL c_0 part cEMPTY c= cCARD * * part c^_c f0 part cEMPTY cCARD * * part cINSERT cNUMERAL c_0 part cEMPTY c= cCARD * * part c^_c f0 part cEMPTY cCARD * * part cINSERT cNUMERAL c_0 part cEMPTY
+ |- (((!g'. (!t'. (!e'. (((b IN t) = g') ==> ((g' ==> ((CARD t) = t')) ==> (((~ g') ==> ((SUC (CARD t)) = e')) ==> ((((COND (b IN t)) (CARD t)) (SUC (CARD t))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((b IN t) = g') ==> ((g' ==> ((CARD t) = t')) ==> (((~ g') ==> ((SUC (CARD t)) = e')) ==> ((((COND (b IN t)) (CARD t)) (SUC (CARD t))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((b IN t) = g') ==> ((g' ==> ((CARD t) = t')) ==> (((~ g') ==> ((SUC (CARD t)) = e')) ==> ((((COND (b IN t)) (CARD t)) (SUC (CARD t))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= cCARD f1 b1 c==> c==> c~ b0 c= cSUC cCARD f1 b2 c= cCOND cIN f0 f1 cCARD f1 cSUC cCARD f1 cCOND b0 b1 b2 * / ! ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= cCARD f1 b1 c==> c==> c~ b0 c= cSUC cCARD f1 b2 c= cCOND cIN f0 f1 cCARD f1 cSUC cCARD f1 cCOND b0 b1 b2 f2 * / ! ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= cCARD f1 b1 c==> c==> c~ b0 c= cSUC cCARD f1 b2 c= cCOND cIN f0 f1 cCARD f1 cSUC cCARD f1 cCOND b0 b1 b2 f2
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- ((\p'. (!q'. (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) = p') ==> ((p' ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 b0 c==> c==> b0 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 b1 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 c==> b0 b1 f3
+ (!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) |- (!z. ((?y. ((x = y) /\ (y = z))) ==> (x = z)))
T c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 ! c==> c? / c/\ c= f0 b1 c= b1 b0 c= f0 b0
+ (FINITE s), (FINITE t), ((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) |- ((\y. (((CARD ((^_c s) ((+_c (b INSERT EMPTY)) t))) = y) /\ (y = ((CARD s) * ((CARD s) EXP (CARD t)))))) (CARD ((*_c ((^_c s) (b INSERT EMPTY))) ((^_c s) t))))
T c==> cFINITE f0 c==> cFINITE f1 c==> c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 * / c/\ c= cCARD * * part c^_c f0 * * part c+_c * * part cINSERT f2 part cEMPTY f1 b0 c= b0 c* cCARD f0 cEXP cCARD f0 cCARD f1 cCARD * * part c*_c * * part c^_c f0 * * part cINSERT f2 part cEMPTY * * part c^_c f0 f1
+ |- ((!t. ((FINITE s) ==> ((FINITE t) ==> ((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t)))))) = ((FINITE s) ==> (!t. ((FINITE t) ==> ((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t)))))))
T c= ! c==> cFINITE f0 c==> cFINITE b0 c= cCARD * * part c^_c f0 b0 cEXP cCARD f0 cCARD b0 c==> cFINITE f0 ! c==> cFINITE b0 c= cCARD * * part c^_c f0 b0 cEXP cCARD f0 cCARD b0
+ |- ((\s. (!t. (((FINITE s) /\ (FINITE t)) ==> (FINITE ((*_c s) t))))) s)
T * / ! c==> c/\ cFINITE b0 cFINITE b1 cFINITE * * part c*_c b0 b1 f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (FINITE t) |- ((((FINITE (b INSERT EMPTY)) /\ (FINITE t)) ==> ((FINITE ((+_c (b INSERT EMPTY)) t)) = T)) = ((FINITE ((+_c (b INSERT EMPTY)) t)) = T))
T c==> cFINITE f0 c= c==> c/\ cFINITE * * part cINSERT f1 part cEMPTY cFINITE f0 c= cFINITE * * part c+_c * * part cINSERT f1 part cEMPTY f0 cT c= cFINITE * * part c+_c * * part cINSERT f1 part cEMPTY f0 cT
- (!s. (!s'. (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))) |- ((((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))) = T)
T c==> ! ! ! ! c==> c/\ c=_c b0 b1 c=_c b2 b3 c=_c * * part c^_c b0 b2 * * part c^_c b1 b3 c= c==> c/\ c=_c f0 f1 c=_c f2 f3 c=_c * * part c^_c f0 f2 * * part c^_c f1 f3 cT
+ (((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) |- (((~ (x IN t)) ==> ((x IN t) = F)) = ((x IN t) = F))
T c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= c==> c~ cIN f2 f1 c= cIN f2 f1 cF c= cIN f2 f1 cF
- |- ((FINITE EMPTY) = T)
T c= cFINITE part cEMPTY cT
+ |- ((\g'. (!t'. (!e'. (((b IN t) = g') ==> ((g' ==> ((CARD t) = t')) ==> (((~ g') ==> ((SUC (CARD t)) = e')) ==> ((((COND (b IN t)) (CARD t)) (SUC (CARD t))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN f0 f1 b0 c==> c==> b0 c= cCARD f1 b1 c==> c==> c~ b0 c= cSUC cCARD f1 b2 c= cCOND cIN f0 f1 cCARD f1 cSUC cCARD f1 cCOND b0 b1 b2 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- ((!x. t) = t)
T c= ! f0 f0
+ (FINITE s), (FINITE t) |- ((CARD ((^_c s) ((+_c (b INSERT EMPTY)) t))) = (CARD ((*_c ((^_c s) (b INSERT EMPTY))) ((^_c s) t))))
T c==> cFINITE f0 c==> cFINITE f1 c= cCARD * * part c^_c f0 * * part c+_c * * part cINSERT f2 part cEMPTY f1 cCARD * * part c*_c * * part c^_c f0 * * part cINSERT f2 part cEMPTY * * part c^_c f0 f1
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
+ |- ((((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) = (((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t)))) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t))))) = ((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> q')))) = (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t))))) = ((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> q'))))
T c= c==> c= c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c==> c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 f3 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 f3 c==> c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 f3 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 f3
+ |- ((\t. (((FINITE s) /\ (FINITE t)) ==> (FINITE ((^_c s) t)))) t)
T * / c==> c/\ cFINITE f0 cFINITE b0 cFINITE * * part c^_c f0 b0 f1
- |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ (!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))), ((x = y) /\ (y = z)) |- (x = z)
T c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 c==> c/\ c= f0 f1 c= f1 f2 c= f0 f2
+ (~ (b IN t)), (FINITE s), (FINITE t) |- (((CARD ((^_c s) ((+_c (b INSERT EMPTY)) t))) = ((CARD s) * ((CARD s) EXP (CARD t)))) = (((CARD ((^_c s) (b INSERT t))) = (CARD ((^_c s) ((+_c (b INSERT EMPTY)) t)))) /\ ((CARD ((^_c s) ((+_c (b INSERT EMPTY)) t))) = ((CARD s) * ((CARD s) EXP (CARD t))))))
T c==> c~ cIN f0 f1 c==> cFINITE f2 c==> cFINITE f1 c= c= cCARD * * part c^_c f2 * * part c+_c * * part cINSERT f0 part cEMPTY f1 c* cCARD f2 cEXP cCARD f2 cCARD f1 c/\ c= cCARD * * part c^_c f2 * * part cINSERT f0 f1 cCARD * * part c^_c f2 * * part c+_c * * part cINSERT f0 part cEMPTY f1 c= cCARD * * part c^_c f2 * * part c+_c * * part cINSERT f0 part cEMPTY f1 c* cCARD f2 cEXP cCARD f2 cCARD f1
+ (~ (b IN t)) |- (((~ F) ==> ((SUC (CARD t)) = e')) ==> ((((COND (b IN t)) (CARD t)) (SUC (CARD t))) = (((COND F) (CARD t)) e')))
T c==> c~ cIN f0 f1 c==> c==> c~ cF c= cSUC cCARD f1 f2 c= cCOND cIN f0 f1 cCARD f1 cSUC cCARD f1 cCOND cF cCARD f1 f2
- (!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))), ((FINITE t) /\ (s =_c t)) |- ((CARD s) = (CARD t))
T c==> ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 c==> c/\ cFINITE f0 c=_c f1 f0 c= cCARD f1 cCARD f0
+ (!s. (!s'. (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))) |- (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t')))))
T c==> ! ! ! ! c==> c/\ c=_c b0 b1 c=_c b2 b3 c=_c * * part c^_c b0 b2 * * part c^_c b1 b3 ! ! c==> c/\ c=_c f0 f1 c=_c b0 b1 c=_c * * part c^_c f0 b0 * * part c^_c f1 b1
+ |- (((!P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) ==> ((\P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) P)) = ((\P. (!Q. ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))))) P))
T c= c==> ! ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 * / ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 f0 * / ! c= ! c==> b0 * b1 b2 c==> b0 ! * b1 b2 f0
+ (~ (b IN t)), (FINITE s), (FINITE t), ((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) |- ((\y. (((CARD ((^_c s) (b INSERT t))) = y) /\ (y = ((CARD s) * ((CARD s) EXP (CARD t)))))) (CARD ((^_c s) ((+_c (b INSERT EMPTY)) t))))
T c==> c~ cIN f0 f1 c==> cFINITE f2 c==> cFINITE f1 c==> c= cCARD * * part c^_c f2 f1 cEXP cCARD f2 cCARD f1 * / c/\ c= cCARD * * part c^_c f2 * * part cINSERT f0 f1 b0 c= b0 c* cCARD f2 cEXP cCARD f2 cCARD f1 cCARD * * part c^_c f2 * * part c+_c * * part cINSERT f0 part cEMPTY f1
+ (FINITE s), (FINITE t) |- ((((FINITE ((*_c ((^_c s) (b INSERT EMPTY))) ((^_c s) t))) /\ (((^_c s) ((+_c (b INSERT EMPTY)) t)) =_c ((*_c ((^_c s) (b INSERT EMPTY))) ((^_c s) t)))) ==> ((CARD ((^_c s) ((+_c (b INSERT EMPTY)) t))) = (CARD ((*_c ((^_c s) (b INSERT EMPTY))) ((^_c s) t))))) = ((CARD ((^_c s) ((+_c (b INSERT EMPTY)) t))) = (CARD ((*_c ((^_c s) (b INSERT EMPTY))) ((^_c s) t)))))
T c==> cFINITE f0 c==> cFINITE f1 c= c==> c/\ cFINITE * * part c*_c * * part c^_c f0 * * part cINSERT f2 part cEMPTY * * part c^_c f0 f1 c=_c * * part c^_c f0 * * part c+_c * * part cINSERT f2 part cEMPTY f1 * * part c*_c * * part c^_c f0 * * part cINSERT f2 part cEMPTY * * part c^_c f0 f1 c= cCARD * * part c^_c f0 * * part c+_c * * part cINSERT f2 part cEMPTY f1 cCARD * * part c*_c * * part c^_c f0 * * part cINSERT f2 part cEMPTY * * part c^_c f0 f1 c= cCARD * * part c^_c f0 * * part c+_c * * part cINSERT f2 part cEMPTY f1 cCARD * * part c*_c * * part c^_c f0 * * part cINSERT f2 part cEMPTY * * part c^_c f0 f1
+ (FINITE s), (FINITE t) |- ((FINITE ((*_c ((^_c s) (b INSERT EMPTY))) ((^_c s) t))) /\ (((^_c s) ((+_c (b INSERT EMPTY)) t)) =_c ((*_c ((^_c s) (b INSERT EMPTY))) ((^_c s) t))))
T c==> cFINITE f0 c==> cFINITE f1 c/\ cFINITE * * part c*_c * * part c^_c f0 * * part cINSERT f2 part cEMPTY * * part c^_c f0 f1 c=_c * * part c^_c f0 * * part c+_c * * part cINSERT f2 part cEMPTY f1 * * part c*_c * * part c^_c f0 * * part cINSERT f2 part cEMPTY * * part c^_c f0 f1
+ (!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))), ((x = y) /\ (y = z)) |- ((!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) /\ (x = z))
T c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 c==> c/\ c= f0 f1 c= f1 f2 c/\ ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 c= f0 f2
+ |- ((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) EXP (CARD (x INSERT t)))) = ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))))
T c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 cEXP cCARD f0 cCARD * * part cINSERT f2 f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1
+ (!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) |- ((\x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) x)
T c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 * / ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 f0
+ (!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) |- ((!z. ((?y. ((x = y) /\ (y = z))) ==> (x = z))) = T)
T c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 c= ! c==> c? / c/\ c= f0 b1 c= b1 b0 c= f0 b0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!t. (((FINITE s) /\ (FINITE t)) ==> ((CARD ((+_c s) t)) = ((CARD s) + (CARD t))))) ==> ((\t. (((FINITE s) /\ (FINITE t)) ==> ((CARD ((+_c s) t)) = ((CARD s) + (CARD t))))) t)) = ((\t. (((FINITE s) /\ (FINITE t)) ==> ((CARD ((+_c s) t)) = ((CARD s) + (CARD t))))) t))
T c= c==> ! c==> c/\ cFINITE f0 cFINITE b0 c= cCARD * * part c+_c f0 b0 c+ cCARD f0 cCARD b0 * / c==> c/\ cFINITE f0 cFINITE b0 c= cCARD * * part c+_c f0 b0 c+ cCARD f0 cCARD b0 f1 * / c==> c/\ cFINITE f0 cFINITE b0 c= cCARD * * part c+_c f0 b0 c+ cCARD f0 cCARD b0 f1
+ |- (((!t. (((FINITE s) /\ (FINITE t)) ==> (FINITE ((*_c s) t)))) ==> ((\t. (((FINITE s) /\ (FINITE t)) ==> (FINITE ((*_c s) t)))) t)) = ((\t. (((FINITE s) /\ (FINITE t)) ==> (FINITE ((*_c s) t)))) t))
T c= c==> ! c==> c/\ cFINITE f0 cFINITE b0 cFINITE * * part c*_c f0 b0 * / c==> c/\ cFINITE f0 cFINITE b0 cFINITE * * part c*_c f0 b0 f1 * / c==> c/\ cFINITE f0 cFINITE b0 cFINITE * * part c*_c f0 b0 f1
+ (FINITE s), ((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))), ((~ (b IN t)) /\ (FINITE t)) |- ((CARD ((^_c s) (b INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))
T c==> cFINITE f0 c==> c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c==> c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1
+ |- ((\t. (((FINITE s) /\ (FINITE t)) ==> ((CARD ((*_c s) t)) = ((CARD s) * (CARD t))))) t)
T * / c==> c/\ cFINITE f0 cFINITE b0 c= cCARD * * part c*_c f0 b0 c* cCARD f0 cCARD b0 f1
+ |- ((\n. ((m EXP (SUC n)) = (m * (m EXP n)))) n)
T * / c= cEXP f0 cSUC b0 c* f0 cEXP f0 b0 f1
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _142514)) /\ (((real_le ((real_add ((real_add (real_of_int _142514)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _142514)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _142514)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _142514)) (real_of_num (NUMERAL (BIT1 _0))))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _142514)) /\ (((real_le ((real_add ((real_add (real_of_int _142514)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _142514)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _142514)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _142514)) (real_of_num (NUMERAL (BIT1 _0))))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _142514)) /\ (((real_le ((real_add ((real_add (real_of_int _142514)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _142514)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _142514)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _142514)) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c\/ creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\t. (((FINITE s) /\ (FINITE t)) ==> (FINITE ((*_c s) t)))) t)
T * / c==> c/\ cFINITE f0 cFINITE b0 cFINITE * * part c*_c f0 b0 f1
+ |- ((\s'. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))) s')
T * / ! c==> c/\ c=_c f0 b0 c=_c f1 b1 c=_c * * part c^_c f0 f1 * * part c^_c b0 b1 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) ==> (!x. (!z. ((?y. ((x = y) /\ (y = z))) ==> (x = z))))) = (!x. (!z. ((?y. ((x = y) /\ (y = z))) ==> (x = z)))))
T c= c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 ! ! c==> c? / c/\ c= b0 b2 c= b2 b1 c= b0 b1 ! ! c==> c? / c/\ c= b0 b2 c= b2 b1 c= b0 b1
+ (FINITE t) |- ((FINITE ((+_c (b INSERT EMPTY)) t)) = T)
T c==> cFINITE f0 c= cFINITE * * part c+_c * * part cINSERT f1 part cEMPTY f0 cT
+ |- (((!m. (!n. ((m EXP (SUC n)) = (m * (m EXP n))))) ==> ((\m. (!n. ((m EXP (SUC n)) = (m * (m EXP n))))) m)) = ((\m. (!n. ((m EXP (SUC n)) = (m * (m EXP n))))) m))
T c= c==> ! ! c= cEXP b0 cSUC b1 c* b0 cEXP b0 b1 * / ! c= cEXP b0 cSUC b1 c* b0 cEXP b0 b1 f0 * / ! c= cEXP b0 cSUC b1 c* b0 cEXP b0 b1 f0
+ |- (((!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))) ==> ((\s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))) s)) = ((\s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))) s))
T c= c==> ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 * / ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 f0 * / ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 f0
+ |- (((!t. (((FINITE s) /\ (FINITE t)) ==> (FINITE ((^_c s) t)))) ==> ((\t. (((FINITE s) /\ (FINITE t)) ==> (FINITE ((^_c s) t)))) t)) = ((\t. (((FINITE s) /\ (FINITE t)) ==> (FINITE ((^_c s) t)))) t))
T c= c==> ! c==> c/\ cFINITE f0 cFINITE b0 cFINITE * * part c^_c f0 b0 * / c==> c/\ cFINITE f0 cFINITE b0 cFINITE * * part c^_c f0 b0 f1 * / c==> c/\ cFINITE f0 cFINITE b0 cFINITE * * part c^_c f0 b0 f1
- (!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))) |- ((!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))) /\ (!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))))
T c==> ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 c/\ ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1
+ (!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) |- (!z. (((x = y) /\ (y = z)) ==> (x = z)))
T c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 ! c==> c/\ c= f0 f1 c= f1 b0 c= f0 b0
+ |- (((!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t)))) ==> ((\t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t)))) t)) = ((\t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t)))) t))
T c= c==> ! c==> c/\ cFINITE b0 c=_c f0 b0 c= cCARD f0 cCARD b0 * / c==> c/\ cFINITE b0 c=_c f0 b0 c= cCARD f0 cCARD b0 f1 * / c==> c/\ cFINITE b0 c=_c f0 b0 c= cCARD f0 cCARD b0 f1
+ (FINITE s) |- (!t. ((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (b IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (b INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))))
T c==> cFINITE f0 ! c==> c/\ c= cCARD * * part c^_c f0 b0 cEXP cCARD f0 cCARD b0 c/\ c~ cIN f1 b0 cFINITE b0 c= cCARD * * part c^_c f0 * * part cINSERT f1 b0 c* cCARD f0 cEXP cCARD f0 cCARD b0
+ (~ (b IN t)), (FINITE t) |- (((SUC (CARD t)) = ((NUMERAL (BIT1 _0)) + (CARD t))) = ((b INSERT t) =_c ((+_c (b INSERT EMPTY)) t)))
T c==> c~ cIN f0 f1 c==> cFINITE f1 c= c= cSUC cCARD f1 c+ cNUMERAL cBIT1 c_0 cCARD f1 c=_c * * part cINSERT f0 f1 * * part c+_c * * part cINSERT f0 part cEMPTY f1
- ((FINITE s) /\ (FINITE t)) |- (((FINITE s) /\ (FINITE t)) /\ ((CARD ((*_c s) t)) = ((CARD s) * (CARD t))))
T c==> c/\ cFINITE f0 cFINITE f1 c/\ c/\ cFINITE f0 cFINITE f1 c= cCARD * * part c*_c f0 f1 c* cCARD f0 cCARD f1
+ |- (((!t. (!s'. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t')))))) ==> ((\t. (!s'. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t')))))) t)) = ((\t. (!s'. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t')))))) t))
T c= c==> ! ! ! c==> c/\ c=_c f0 b1 c=_c b0 b2 c=_c * * part c^_c f0 b0 * * part c^_c b1 b2 * / ! ! c==> c/\ c=_c f0 b1 c=_c b0 b2 c=_c * * part c^_c f0 b0 * * part c^_c b1 b2 f1 * / ! ! c==> c/\ c=_c f0 b1 c=_c b0 b2 c=_c * * part c^_c f0 b0 * * part c^_c b1 b2 f1
+ (((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) |- ((F ==> ((CARD t) = t')) ==> (((~ F) ==> ((SUC (CARD t)) = e')) ==> ((((COND (x IN t)) (CARD t)) (SUC (CARD t))) = (((COND F) t') e'))))
T c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c==> c==> cF c= cCARD f1 f3 c==> c==> c~ cF c= cSUC cCARD f1 f4 c= cCOND cIN f2 f1 cCARD f1 cSUC cCARD f1 cCOND cF f3 f4
+ |- ((\s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) s)
T * / c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 f1
+ (((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) |- (((FINITE t) ==> ((CARD (x INSERT t)) = (((COND (x IN t)) (CARD t)) (SUC (CARD t))))) = ((CARD (x INSERT t)) = (((COND (x IN t)) (CARD t)) (SUC (CARD t)))))
T c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= c==> cFINITE f1 c= cCARD * * part cINSERT f2 f1 cCOND cIN f2 f1 cCARD f1 cSUC cCARD f1 c= cCARD * * part cINSERT f2 f1 cCOND cIN f2 f1 cCARD f1 cSUC cCARD f1
+ |- (((!x'. (((\y. ((x = y) /\ (y = z))) x') ==> ((!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) ==> (x = z)))) ==> ((?y. ((x = y) /\ (y = z))) ==> ((!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) ==> (x = z)))) = ((?y. ((x = y) /\ (y = z))) ==> ((!x. (!y. (!z. (((x = y) /\ (y = z)) ==> (x = z))))) ==> (x = z))))
T c= c==> ! c==> * / c/\ c= f0 b1 c= b1 f1 b0 c==> ! ! ! c==> c/\ c= b1 b2 c= b2 b3 c= b1 b3 c= f0 f1 c==> c? / c/\ c= f0 b0 c= b0 f1 c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 c= f0 f1 c==> c? / c/\ c= f0 b0 c= b0 f1 c==> ! ! ! c==> c/\ c= b0 b1 c= b1 b2 c= b0 b2 c= f0 f1
+ |- ((FINITE ((NUMERAL _0) INSERT EMPTY)) /\ (((^_c s) EMPTY) =_c ((NUMERAL _0) INSERT EMPTY)))
T c/\ cFINITE * * part cINSERT cNUMERAL c_0 part cEMPTY c=_c * * part c^_c f0 part cEMPTY * * part cINSERT cNUMERAL c_0 part cEMPTY
+ |- ((((CARD ((^_c s) (b INSERT t))) = (CARD ((^_c s) ((+_c (b INSERT EMPTY)) t)))) /\ ((CARD ((^_c s) ((+_c (b INSERT EMPTY)) t))) = ((CARD s) * ((CARD s) EXP (CARD t))))) = ((\y. (((CARD ((^_c s) (b INSERT t))) = y) /\ (y = ((CARD s) * ((CARD s) EXP (CARD t)))))) (CARD ((^_c s) ((+_c (b INSERT EMPTY)) t)))))
T c= c/\ c= cCARD * * part c^_c f0 * * part cINSERT f1 f2 cCARD * * part c^_c f0 * * part c+_c * * part cINSERT f1 part cEMPTY f2 c= cCARD * * part c^_c f0 * * part c+_c * * part cINSERT f1 part cEMPTY f2 c* cCARD f0 cEXP cCARD f0 cCARD f2 * / c/\ c= cCARD * * part c^_c f0 * * part cINSERT f1 f2 b0 c= b0 c* cCARD f0 cEXP cCARD f0 cCARD f2 cCARD * * part c^_c f0 * * part c+_c * * part cINSERT f1 part cEMPTY f2
+ |- (((!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) ==> ((\P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) P)) = ((\P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) P))
T c= c==> ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 * / c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 f0 * / c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 f0
+ |- (((FINITE s) /\ (FINITE t)) ==> ((FINITE ((+_c s) t)) = T))
T c==> c/\ cFINITE f0 cFINITE f1 c= cFINITE * * part c+_c f0 f1 cT
+ |- (((int_add (int_of_num (CARD t))) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add (int_of_num (CARD t))) (int_of_num (NUMERAL (BIT1 _0)))))
T c= cint_add cint_of_num cCARD f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num cCARD f0 cint_of_num cNUMERAL cBIT1 c_0
+ |- (F ==> ((CARD t) = (CARD t)))
T c==> cF c= cCARD f0 cCARD f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!s. (!s'. (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))) |- ((\t. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))) t)
T c==> ! ! ! ! c==> c/\ c=_c b0 b1 c=_c b2 b3 c=_c * * part c^_c b0 b2 * * part c^_c b1 b3 * / ! c==> c/\ c=_c f0 f1 c=_c b0 b1 c=_c * * part c^_c f0 b0 * * part c^_c f1 b1 f2
- (((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) |- ((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) /\ (((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t)))) = ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))))
T c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c/\ c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1
- |- ((!t'. (((FINITE s) /\ (FINITE t)) ==> ((CARD ((^_c s) t')) = ((CARD s) EXP (CARD t'))))) = (((FINITE s) /\ (FINITE t)) ==> (!t. ((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))))))
T c= ! c==> c/\ cFINITE f0 cFINITE f1 c= cCARD * * part c^_c f0 b0 cEXP cCARD f0 cCARD b0 c==> c/\ cFINITE f0 cFINITE f1 ! c= cCARD * * part c^_c f0 b0 cEXP cCARD f0 cCARD b0
- (((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) |- ((FINITE t) = T)
T c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cFINITE f1 cT
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((!q'. (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) = p') ==> ((p' ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))) = (p' ==> q'))))) ==> ((\q'. (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) = p') ==> ((p' ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))) = (p' ==> q'))))) q')) = ((\q'. (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) = p') ==> ((p' ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 f3 c==> c==> f3 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 b0 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c==> f3 b0 * / c==> c= c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 f3 c==> c==> f3 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 b0 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c==> f3 b0 f4 * / c==> c= c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 f3 c==> c==> f3 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 b0 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c==> f3 b0 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!t'. ((FINITE t) ==> ((CARD ((^_c s) t')) = ((CARD s) EXP (CARD t'))))) = ((FINITE t) ==> (!t. ((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))))))
T c= ! c==> cFINITE f0 c= cCARD * * part c^_c f1 b0 cEXP cCARD f1 cCARD b0 c==> cFINITE f0 ! c= cCARD * * part c^_c f1 b0 cEXP cCARD f1 cCARD b0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) |- ((\P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) P)
T c==> ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 * / c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
- |- (((!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) ==> (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s)))))) = (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))))
T c= c==> ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1
- |- ((((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t)))) = ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t)))))) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))) = ((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))))) = (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))) = ((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t)))))))
T c= c==> c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1
- (!s. (!s'. (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))) |- (((!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t')))) ==> ((\t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t')))) t')) = ((\t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t')))) t'))
T c==> ! ! ! ! c==> c/\ c=_c b0 b1 c=_c b2 b3 c=_c * * part c^_c b0 b2 * * part c^_c b1 b3 c= c==> ! c==> c/\ c=_c f0 f1 c=_c f2 b0 c=_c * * part c^_c f0 f2 * * part c^_c f1 b0 * / c==> c/\ c=_c f0 f1 c=_c f2 b0 c=_c * * part c^_c f0 f2 * * part c^_c f1 b0 f3 * / c==> c/\ c=_c f0 f1 c=_c f2 b0 c=_c * * part c^_c f0 f2 * * part c^_c f1 b0 f3
- |- ((!s'. ((FINITE s) ==> (!t. ((FINITE t) ==> ((CARD ((^_c s') t)) = ((CARD s') EXP (CARD t))))))) = ((FINITE s) ==> (!s. (!t. ((FINITE t) ==> ((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))))))))
T c= ! c==> cFINITE f0 ! c==> cFINITE b1 c= cCARD * * part c^_c b0 b1 cEXP cCARD b0 cCARD b1 c==> cFINITE f0 ! ! c==> cFINITE b1 c= cCARD * * part c^_c b0 b1 cEXP cCARD b0 cCARD b1
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))) = ((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))))
T c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1
- (!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))) |- (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))
T c==> ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 ! c==> c/\ cFINITE b0 c=_c f0 b0 c= cCARD f0 cCARD b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((SUC (CARD t)) = ((NUMERAL (BIT1 _0)) + (CARD t))))
T c= cT c= cSUC cCARD f0 c+ cNUMERAL cBIT1 c_0 cCARD f0
- F |- (F = T)
T c==> cF c= cF cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!s. (!s'. (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))), ((s =_c s') /\ (t =_c t')) |- (((^_c s) t) =_c ((^_c s') t'))
T c==> ! ! ! ! c==> c/\ c=_c b0 b1 c=_c b2 b3 c=_c * * part c^_c b0 b2 * * part c^_c b1 b3 c==> c/\ c=_c f0 f1 c=_c f2 f3 c=_c * * part c^_c f0 f2 * * part c^_c f1 f3
- |- ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) |- ((!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) ==> (!s. ((FINITE s) ==> (P s))))
T c==> c/\ * f0 part cEMPTY ! ! c==> c/\ * f0 b1 c/\ c~ cIN b0 b1 cFINITE b1 * f0 * * part cINSERT b0 b1 c==> ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 ! c==> cFINITE b0 * f0 b0
- (FINITE t) |- (T = (FINITE t))
T c==> cFINITE f0 c= cT cFINITE f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- ((\p'. (!q'. (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) = p') ==> ((p' ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 b0 c==> c==> b0 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 b1 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c==> b0 b1 f3
- |- (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) = p') ==> ((p' ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))) = (p' ==> q'))))
T c==> c= c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 f3 c==> c==> f3 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 f4 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c==> f3 f4
- |- ((!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))) ==> (!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))))
T c==> ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1
- ((FINITE s) /\ (FINITE t)) |- (((FINITE s) /\ (FINITE t)) /\ ((CARD ((+_c s) t)) = ((CARD s) + (CARD t))))
T c==> c/\ cFINITE f0 cFINITE f1 c/\ c/\ cFINITE f0 cFINITE f1 c= cCARD * * part c+_c f0 f1 c+ cCARD f0 cCARD f1
- (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) |- ((((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s)))) = T)
T c==> ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 c= c==> c/\ * f0 part cEMPTY ! ! c==> c/\ * f0 b1 c/\ c~ cIN b0 b1 cFINITE b1 * f0 * * part cINSERT b0 b1 ! c==> cFINITE b0 * f0 b0 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) |- ((!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) /\ (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))))
T c==> ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 c/\ ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1
- |- ((!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) ==> (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))))
T c==> ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (FINITE s) |- ((FINITE s) /\ ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))
T c==> cFINITE f0 c/\ cFINITE f0 c= cCARD * * part cINSERT f1 f0 cCOND cIN f1 f0 cCARD f0 cSUC cCARD f0
- (~ F) |- (F = F)
T c==> c~ cF c= cF cF
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((FINITE s) /\ (FINITE t)) |- (((FINITE s) /\ (FINITE t)) /\ ((s =_c t) = ((CARD s) = (CARD t))))
T c==> c/\ cFINITE f0 cFINITE f1 c/\ c/\ cFINITE f0 cFINITE f1 c= c=_c f0 f1 c= cCARD f0 cCARD f1
- |- (((SUC (CARD t)) = ((NUMERAL (BIT1 _0)) + (CARD t))) = T)
T c= c= cSUC cCARD f0 c+ cNUMERAL cBIT1 c_0 cCARD f0 cT
- (!s. (!s'. (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))), ((s =_c s') /\ (t =_c t')) |- (((s =_c s') /\ (t =_c t')) /\ (((^_c s) t) =_c ((^_c s') t')))
T c==> ! ! ! ! c==> c/\ c=_c b0 b1 c=_c b2 b3 c=_c * * part c^_c b0 b2 * * part c^_c b1 b3 c==> c/\ c=_c f0 f1 c=_c f2 f3 c/\ c/\ c=_c f0 f1 c=_c f2 f3 c=_c * * part c^_c f0 f2 * * part c^_c f1 f3
- (!s. (!s'. (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))) |- ((\t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t')))) t')
T c==> ! ! ! ! c==> c/\ c=_c b0 b1 c=_c b2 b3 c=_c * * part c^_c b0 b2 * * part c^_c b1 b3 * / c==> c/\ c=_c f0 f1 c=_c f2 b0 c=_c * * part c^_c f0 f2 * * part c^_c f1 b0 f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))), ((FINITE t) /\ (s =_c t)) |- ((!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))) /\ ((CARD s) = (CARD t)))
T c==> ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 c==> c/\ cFINITE f0 c=_c f1 f0 c/\ ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 c= cCARD f1 cCARD f0
- (!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))) |- ((\t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t)))) t)
T c==> ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 * / c==> c/\ cFINITE b0 c=_c f0 b0 c= cCARD f0 cCARD b0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))) |- ((((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))) = T)
T c==> ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 c= c==> c/\ cFINITE f0 c=_c f1 f0 c= cCARD f1 cCARD f0 cT
- (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))), ((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) |- ((!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))) /\ (!s. ((FINITE s) ==> (P s))))
T c==> ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 c==> c/\ * f0 part cEMPTY ! ! c==> c/\ * f0 b1 c/\ c~ cIN b0 b1 cFINITE b1 * f0 * * part cINSERT b0 b1 c/\ ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 ! c==> cFINITE b0 * f0 b0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!s. (!s'. (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))), ((s =_c s') /\ (t =_c t')) |- ((!s. (!s'. (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))) /\ (((^_c s) t) =_c ((^_c s') t')))
T c==> ! ! ! ! c==> c/\ c=_c b0 b1 c=_c b2 b3 c=_c * * part c^_c b0 b2 * * part c^_c b1 b3 c==> c/\ c=_c f0 f1 c=_c f2 f3 c/\ ! ! ! ! c==> c/\ c=_c b0 b1 c=_c b2 b3 c=_c * * part c^_c b0 b2 * * part c^_c b1 b3 c=_c * * part c^_c f0 f2 * * part c^_c f1 f3
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!p'. (!q'. (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) = p') ==> ((p' ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) = p') ==> ((p' ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) = p') ==> ((p' ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 b0 c==> c==> b0 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 b1 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c==> b0 b1 * / ! c==> c= c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 b0 c==> c==> b0 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 b1 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c==> b0 b1 f3 * / ! c==> c= c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 b0 c==> c==> b0 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 b1 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c==> b0 b1 f3
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- ((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t)))) = ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))))
T c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1
- (!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))) |- (((!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t)))) ==> ((\t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t)))) t)) = ((\t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t)))) t))
T c==> ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 c= c==> ! c==> c/\ cFINITE b0 c=_c f0 b0 c= cCARD f0 cCARD b0 * / c==> c/\ cFINITE b0 c=_c f0 b0 c= cCARD f0 cCARD b0 f1 * / c==> c/\ cFINITE b0 c=_c f0 b0 c= cCARD f0 cCARD b0 f1
- (!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))) |- ((\s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))) s)
T c==> ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 * / ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 f0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (!P. (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) ==> (!s. ((FINITE s) ==> (P s))))), ((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) |- (((P EMPTY) /\ (!x. (!s. (((P s) /\ ((~ (x IN s)) /\ (FINITE s))) ==> (P (x INSERT s)))))) /\ (!s. ((FINITE s) ==> (P s))))
T c==> ! c==> c/\ * b0 part cEMPTY ! ! c==> c/\ * b0 b2 c/\ c~ cIN b1 b2 cFINITE b2 * b0 * * part cINSERT b1 b2 ! c==> cFINITE b1 * b0 b1 c==> c/\ * f0 part cEMPTY ! ! c==> c/\ * f0 b1 c/\ c~ cIN b0 b1 cFINITE b1 * f0 * * part cINSERT b0 b1 c/\ c/\ * f0 part cEMPTY ! ! c==> c/\ * f0 b1 c/\ c~ cIN b0 b1 cFINITE b1 * f0 * * part cINSERT b0 b1 ! c==> cFINITE b0 * f0 b0
- |- (((!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))) ==> (!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t)))))) = (!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))))
T c= c==> ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1
- |- (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> (((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t)))) = q')) ==> (((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> ((CARD ((^_c s) (x INSERT t))) = ((CARD s) * ((CARD s) EXP (CARD t))))) = ((((CARD ((^_c s) t)) = ((CARD s) EXP (CARD t))) /\ ((~ (x IN t)) /\ (FINITE t))) ==> q')))
T c==> c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 f3 c= c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 c= cCARD * * part c^_c f0 * * part cINSERT f2 f1 c* cCARD f0 cEXP cCARD f0 cCARD f1 c==> c/\ c= cCARD * * part c^_c f0 f1 cEXP cCARD f0 cCARD f1 c/\ c~ cIN f2 f1 cFINITE f1 f3
- ((FINITE t) /\ (s =_c t)) |- ((!s. (!t. (((FINITE t) /\ (s =_c t)) ==> ((CARD s) = (CARD t))))) ==> ((CARD s) = (CARD t)))
T c==> c/\ cFINITE f0 c=_c f1 f0 c==> ! ! c==> c/\ cFINITE b1 c=_c b0 b1 c= cCARD b0 cCARD b1 c= cCARD f1 cCARD f0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((s =_c s') /\ (t =_c t')) |- ((!s. (!s'. (!t. (!t'. (((s =_c s') /\ (t =_c t')) ==> (((^_c s) t) =_c ((^_c s') t'))))))) ==> (((^_c s) t) =_c ((^_c s') t')))
T c==> c/\ c=_c f0 f1 c=_c f2 f3 c==> ! ! ! ! c==> c/\ c=_c b0 b1 c=_c b2 b3 c=_c * * part c^_c b0 b2 * * part c^_c b1 b3 c=_c * * part c^_c f0 f2 * * part c^_c f1 f3
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
