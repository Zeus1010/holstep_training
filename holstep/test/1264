N IMAGE_STRETCH_REAL_INTERVAL
C |- (!a. (!b. (!m. (((IMAGE (\x. ((real_mul m) x))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_mul m) a) , ((real_mul m) b))) NIL))) (closed_real_interval ((CONS (((real_mul m) b) , ((real_mul m) a))) NIL))))))))
T c= * * part cIMAGE / creal_mul f0 b0 * part cclosed_real_interval cCONS c, f1 f2 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, f1 f2 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 f0 * part cclosed_real_interval cCONS c, creal_mul f0 f1 creal_mul f0 f2 cNIL * part cclosed_real_interval cCONS c, creal_mul f0 f2 creal_mul f0 f1 cNIL
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D IMAGE_AFFINITY_REAL_INTERVAL
A |- (!a. (!b. (!m. (!c. (((IMAGE (\x. ((real_add ((real_mul m) x)) c))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) c) , ((real_add ((real_mul m) b)) c))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) c) , ((real_add ((real_mul m) a)) c))) NIL)))))))))
T c= * * part cIMAGE / creal_add creal_mul f0 b0 f1 * part cclosed_real_interval cCONS c, f2 f3 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, f2 f3 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 f0 * part cclosed_real_interval cCONS c, creal_add creal_mul f0 f2 f1 creal_add creal_mul f0 f3 f1 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul f0 f3 f1 creal_add creal_mul f0 f2 f1 cNIL
+ |- ((!a. (!b. (!m. (((IMAGE (\x. ((real_add ((real_mul m) x)) (real_of_num (NUMERAL _0))))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) (real_of_num (NUMERAL _0))) , ((real_add ((real_mul m) b)) (real_of_num (NUMERAL _0))))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) (real_of_num (NUMERAL _0))) , ((real_add ((real_mul m) a)) (real_of_num (NUMERAL _0))))) NIL)))))))) = (!a. (!b. (!m. (((IMAGE (\x. ((real_mul m) x))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_mul m) a) , ((real_mul m) b))) NIL))) (closed_real_interval ((CONS (((real_mul m) b) , ((real_mul m) a))) NIL)))))))))
T c= ! ! ! c= * * part cIMAGE / creal_add creal_mul b2 b3 creal_of_num cNUMERAL c_0 * part cclosed_real_interval cCONS c, b0 b1 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, b0 b1 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 b2 * part cclosed_real_interval cCONS c, creal_add creal_mul b2 b0 creal_of_num cNUMERAL c_0 creal_add creal_mul b2 b1 creal_of_num cNUMERAL c_0 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul b2 b1 creal_of_num cNUMERAL c_0 creal_add creal_mul b2 b0 creal_of_num cNUMERAL c_0 cNIL ! ! ! c= * * part cIMAGE / creal_mul b2 b3 * part cclosed_real_interval cCONS c, b0 b1 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, b0 b1 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 b2 * part cclosed_real_interval cCONS c, creal_mul b2 b0 creal_mul b2 b1 cNIL * part cclosed_real_interval cCONS c, creal_mul b2 b1 creal_mul b2 b0 cNIL
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((~ (((real_mul m) x) = ((real_add ((real_mul m) x)) (real_of_num (NUMERAL _0))))) ==> F)
T c==> c~ c= creal_mul f0 f1 creal_add creal_mul f0 f1 creal_of_num cNUMERAL c_0 cF
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
+ |- ((!m. t) = t)
T c= ! f0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((~ (((real_mul m) x) = ((real_add ((real_mul m) x)) (real_of_num (NUMERAL _0))))) ==> F) ==> (((real_mul m) x) = ((real_add ((real_mul m) x)) (real_of_num (NUMERAL _0))))) = (((real_mul m) x) = ((real_add ((real_mul m) x)) (real_of_num (NUMERAL _0)))))
T c= c==> c==> c~ c= creal_mul f0 f1 creal_add creal_mul f0 f1 creal_of_num cNUMERAL c_0 cF c= creal_mul f0 f1 creal_add creal_mul f0 f1 creal_of_num cNUMERAL c_0 c= creal_mul f0 f1 creal_add creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (!a. (!b. (!m. (((IMAGE (\x. ((real_add ((real_mul m) x)) (real_of_num (NUMERAL _0))))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) (real_of_num (NUMERAL _0))) , ((real_add ((real_mul m) b)) (real_of_num (NUMERAL _0))))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) (real_of_num (NUMERAL _0))) , ((real_add ((real_mul m) a)) (real_of_num (NUMERAL _0))))) NIL))))))))
T c= * * part cIMAGE / creal_add creal_mul f0 b0 creal_of_num cNUMERAL c_0 * part cclosed_real_interval cCONS c, f1 f2 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, f1 f2 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 f0 * part cclosed_real_interval cCONS c, creal_add creal_mul f0 f1 creal_of_num cNUMERAL c_0 creal_add creal_mul f0 f2 creal_of_num cNUMERAL c_0 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul f0 f2 creal_of_num cNUMERAL c_0 creal_add creal_mul f0 f1 creal_of_num cNUMERAL c_0 cNIL
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ (~ (((real_mul m) x) = ((real_add ((real_mul m) x)) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_mul f0 f1 creal_add creal_mul f0 f1 creal_of_num cNUMERAL c_0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((real_neg ((real_sub ((real_mul m) x)) ((real_add ((real_mul m) x)) (real_of_num (NUMERAL _0))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul f0 f1 creal_add creal_mul f0 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((\m. (!c. (((IMAGE (\x. ((real_add ((real_mul m) x)) c))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) c) , ((real_add ((real_mul m) b)) c))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) c) , ((real_add ((real_mul m) a)) c))) NIL))))))) m)
T * / ! c= * * part cIMAGE / creal_add creal_mul b0 b2 b1 * part cclosed_real_interval cCONS c, f0 f1 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, f0 f1 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 b0 * part cclosed_real_interval cCONS c, creal_add creal_mul b0 f0 b1 creal_add creal_mul b0 f1 b1 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul b0 f1 b1 creal_add creal_mul b0 f0 b1 cNIL f2
+ |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (((real_mul m) x) = ((real_add ((real_mul m) x)) (real_of_num (NUMERAL _0))))) |- ((~ (((real_mul m) x) = ((real_add ((real_mul m) x)) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c~ c= creal_mul f0 f1 creal_add creal_mul f0 f1 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_mul f0 f1 creal_add creal_mul f0 f1 creal_of_num cNUMERAL c_0 cF
+ |- (((!c. (((IMAGE (\x. ((real_add ((real_mul m) x)) c))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) c) , ((real_add ((real_mul m) b)) c))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) c) , ((real_add ((real_mul m) a)) c))) NIL)))))) ==> ((\c. (((IMAGE (\x. ((real_add ((real_mul m) x)) c))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) c) , ((real_add ((real_mul m) b)) c))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) c) , ((real_add ((real_mul m) a)) c))) NIL)))))) c)) = ((\c. (((IMAGE (\x. ((real_add ((real_mul m) x)) c))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) c) , ((real_add ((real_mul m) b)) c))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) c) , ((real_add ((real_mul m) a)) c))) NIL)))))) c))
T c= c==> ! c= * * part cIMAGE / creal_add creal_mul f0 b1 b0 * part cclosed_real_interval cCONS c, f1 f2 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, f1 f2 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 f0 * part cclosed_real_interval cCONS c, creal_add creal_mul f0 f1 b0 creal_add creal_mul f0 f2 b0 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul f0 f2 b0 creal_add creal_mul f0 f1 b0 cNIL * / c= * * part cIMAGE / creal_add creal_mul f0 b1 b0 * part cclosed_real_interval cCONS c, f1 f2 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, f1 f2 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 f0 * part cclosed_real_interval cCONS c, creal_add creal_mul f0 f1 b0 creal_add creal_mul f0 f2 b0 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul f0 f2 b0 creal_add creal_mul f0 f1 b0 cNIL f3 * / c= * * part cIMAGE / creal_add creal_mul f0 b1 b0 * part cclosed_real_interval cCONS c, f1 f2 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, f1 f2 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 f0 * part cclosed_real_interval cCONS c, creal_add creal_mul f0 f1 b0 creal_add creal_mul f0 f2 b0 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul f0 f2 b0 creal_add creal_mul f0 f1 b0 cNIL f3
+ |- (((!b. (!m. (!c. (((IMAGE (\x. ((real_add ((real_mul m) x)) c))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) c) , ((real_add ((real_mul m) b)) c))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) c) , ((real_add ((real_mul m) a)) c))) NIL)))))))) ==> ((\b. (!m. (!c. (((IMAGE (\x. ((real_add ((real_mul m) x)) c))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) c) , ((real_add ((real_mul m) b)) c))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) c) , ((real_add ((real_mul m) a)) c))) NIL)))))))) b)) = ((\b. (!m. (!c. (((IMAGE (\x. ((real_add ((real_mul m) x)) c))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) c) , ((real_add ((real_mul m) b)) c))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) c) , ((real_add ((real_mul m) a)) c))) NIL)))))))) b))
T c= c==> ! ! ! c= * * part cIMAGE / creal_add creal_mul b1 b3 b2 * part cclosed_real_interval cCONS c, f0 b0 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, f0 b0 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 b1 * part cclosed_real_interval cCONS c, creal_add creal_mul b1 f0 b2 creal_add creal_mul b1 b0 b2 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul b1 b0 b2 creal_add creal_mul b1 f0 b2 cNIL * / ! ! c= * * part cIMAGE / creal_add creal_mul b1 b3 b2 * part cclosed_real_interval cCONS c, f0 b0 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, f0 b0 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 b1 * part cclosed_real_interval cCONS c, creal_add creal_mul b1 f0 b2 creal_add creal_mul b1 b0 b2 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul b1 b0 b2 creal_add creal_mul b1 f0 b2 cNIL f1 * / ! ! c= * * part cIMAGE / creal_add creal_mul b1 b3 b2 * part cclosed_real_interval cCONS c, f0 b0 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, f0 b0 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 b1 * part cclosed_real_interval cCONS c, creal_add creal_mul b1 f0 b2 creal_add creal_mul b1 b0 b2 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul b1 b0 b2 creal_add creal_mul b1 f0 b2 cNIL f1
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (((!a. (!b. (!m. (!c. (((IMAGE (\x. ((real_add ((real_mul m) x)) c))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) c) , ((real_add ((real_mul m) b)) c))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) c) , ((real_add ((real_mul m) a)) c))) NIL))))))))) ==> ((\a. (!b. (!m. (!c. (((IMAGE (\x. ((real_add ((real_mul m) x)) c))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) c) , ((real_add ((real_mul m) b)) c))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) c) , ((real_add ((real_mul m) a)) c))) NIL))))))))) a)) = ((\a. (!b. (!m. (!c. (((IMAGE (\x. ((real_add ((real_mul m) x)) c))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) c) , ((real_add ((real_mul m) b)) c))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) c) , ((real_add ((real_mul m) a)) c))) NIL))))))))) a))
T c= c==> ! ! ! ! c= * * part cIMAGE / creal_add creal_mul b2 b4 b3 * part cclosed_real_interval cCONS c, b0 b1 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, b0 b1 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 b2 * part cclosed_real_interval cCONS c, creal_add creal_mul b2 b0 b3 creal_add creal_mul b2 b1 b3 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul b2 b1 b3 creal_add creal_mul b2 b0 b3 cNIL * / ! ! ! c= * * part cIMAGE / creal_add creal_mul b2 b4 b3 * part cclosed_real_interval cCONS c, b0 b1 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, b0 b1 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 b2 * part cclosed_real_interval cCONS c, creal_add creal_mul b2 b0 b3 creal_add creal_mul b2 b1 b3 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul b2 b1 b3 creal_add creal_mul b2 b0 b3 cNIL f0 * / ! ! ! c= * * part cIMAGE / creal_add creal_mul b2 b4 b3 * part cclosed_real_interval cCONS c, b0 b1 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, b0 b1 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 b2 * part cclosed_real_interval cCONS c, creal_add creal_mul b2 b0 b3 creal_add creal_mul b2 b1 b3 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul b2 b1 b3 creal_add creal_mul b2 b0 b3 cNIL f0
+ |- (T = (!a. (!b. (!m. (((IMAGE (\x. ((real_add ((real_mul m) x)) (real_of_num (NUMERAL _0))))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) (real_of_num (NUMERAL _0))) , ((real_add ((real_mul m) b)) (real_of_num (NUMERAL _0))))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) (real_of_num (NUMERAL _0))) , ((real_add ((real_mul m) a)) (real_of_num (NUMERAL _0))))) NIL)))))))))
T c= cT ! ! ! c= * * part cIMAGE / creal_add creal_mul b2 b3 creal_of_num cNUMERAL c_0 * part cclosed_real_interval cCONS c, b0 b1 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, b0 b1 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 b2 * part cclosed_real_interval cCONS c, creal_add creal_mul b2 b0 creal_of_num cNUMERAL c_0 creal_add creal_mul b2 b1 creal_of_num cNUMERAL c_0 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul b2 b1 creal_of_num cNUMERAL c_0 creal_add creal_mul b2 b0 creal_of_num cNUMERAL c_0 cNIL
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\a. (!b. (!m. (!c. (((IMAGE (\x. ((real_add ((real_mul m) x)) c))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) c) , ((real_add ((real_mul m) b)) c))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) c) , ((real_add ((real_mul m) a)) c))) NIL))))))))) a)
T * / ! ! ! c= * * part cIMAGE / creal_add creal_mul b2 b4 b3 * part cclosed_real_interval cCONS c, b0 b1 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, b0 b1 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 b2 * part cclosed_real_interval cCONS c, creal_add creal_mul b2 b0 b3 creal_add creal_mul b2 b1 b3 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul b2 b1 b3 creal_add creal_mul b2 b0 b3 cNIL f0
+ |- ((\b. (!m. (!c. (((IMAGE (\x. ((real_add ((real_mul m) x)) c))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) c) , ((real_add ((real_mul m) b)) c))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) c) , ((real_add ((real_mul m) a)) c))) NIL)))))))) b)
T * / ! ! c= * * part cIMAGE / creal_add creal_mul b1 b3 b2 * part cclosed_real_interval cCONS c, f0 b0 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, f0 b0 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 b1 * part cclosed_real_interval cCONS c, creal_add creal_mul b1 f0 b2 creal_add creal_mul b1 b0 b2 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul b1 b0 b2 creal_add creal_mul b1 f0 b2 cNIL f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!m. (!c. (((IMAGE (\x. ((real_add ((real_mul m) x)) c))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) c) , ((real_add ((real_mul m) b)) c))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) c) , ((real_add ((real_mul m) a)) c))) NIL))))))) ==> ((\m. (!c. (((IMAGE (\x. ((real_add ((real_mul m) x)) c))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) c) , ((real_add ((real_mul m) b)) c))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) c) , ((real_add ((real_mul m) a)) c))) NIL))))))) m)) = ((\m. (!c. (((IMAGE (\x. ((real_add ((real_mul m) x)) c))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) c) , ((real_add ((real_mul m) b)) c))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) c) , ((real_add ((real_mul m) a)) c))) NIL))))))) m))
T c= c==> ! ! c= * * part cIMAGE / creal_add creal_mul b0 b2 b1 * part cclosed_real_interval cCONS c, f0 f1 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, f0 f1 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 b0 * part cclosed_real_interval cCONS c, creal_add creal_mul b0 f0 b1 creal_add creal_mul b0 f1 b1 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul b0 f1 b1 creal_add creal_mul b0 f0 b1 cNIL * / ! c= * * part cIMAGE / creal_add creal_mul b0 b2 b1 * part cclosed_real_interval cCONS c, f0 f1 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, f0 f1 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 b0 * part cclosed_real_interval cCONS c, creal_add creal_mul b0 f0 b1 creal_add creal_mul b0 f1 b1 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul b0 f1 b1 creal_add creal_mul b0 f0 b1 cNIL f2 * / ! c= * * part cIMAGE / creal_add creal_mul b0 b2 b1 * part cclosed_real_interval cCONS c, f0 f1 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, f0 f1 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 b0 * part cclosed_real_interval cCONS c, creal_add creal_mul b0 f0 b1 creal_add creal_mul b0 f1 b1 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul b0 f1 b1 creal_add creal_mul b0 f0 b1 cNIL f2
+ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) |- F
T c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\c. (((IMAGE (\x. ((real_add ((real_mul m) x)) c))) (closed_real_interval ((CONS (a , b)) NIL))) = (((COND ((closed_real_interval ((CONS (a , b)) NIL)) = EMPTY)) EMPTY) (((COND ((real_le (real_of_num (NUMERAL _0))) m)) (closed_real_interval ((CONS (((real_add ((real_mul m) a)) c) , ((real_add ((real_mul m) b)) c))) NIL))) (closed_real_interval ((CONS (((real_add ((real_mul m) b)) c) , ((real_add ((real_mul m) a)) c))) NIL)))))) c)
T * / c= * * part cIMAGE / creal_add creal_mul f0 b1 b0 * part cclosed_real_interval cCONS c, f1 f2 cNIL * * * part cCOND c= * part cclosed_real_interval cCONS c, f1 f2 cNIL part cEMPTY part cEMPTY * * * part cCOND creal_le creal_of_num cNUMERAL c_0 f0 * part cclosed_real_interval cCONS c, creal_add creal_mul f0 f1 b0 creal_add creal_mul f0 f2 b0 cNIL * part cclosed_real_interval cCONS c, creal_add creal_mul f0 f2 b0 creal_add creal_mul f0 f1 b0 cNIL f3
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_mul m) x) = ((real_add ((real_mul m) x)) (real_of_num (NUMERAL _0))))
T c= creal_mul f0 f1 creal_add creal_mul f0 f1 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
