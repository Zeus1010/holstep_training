N COBOUNDED_HAS_BOUNDED_COMPONENT
C |- (!s. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ (~ (connected s)))) ==> (?c. ((c IN (components s)) /\ (bounded c)))))
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c~ cconnected f0 c? / c/\ cIN b0 * part ccomponents f0 cbounded b0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D RIGHT_OR_FORALL_THM
A |- (!P. (!Q. ((P \/ (!x. (Q x))) = (!x. (P \/ (Q x))))))
T c= c\/ f0 ! * f1 b0 ! c\/ f0 * f1 b0
D SKOLEM_THM
A |- (!P. ((!x. (?y. ((P x) y))) = (?y. (!x. ((P x) (y x))))))
T c= ! c? / * * f0 b0 b1 c? / ! * * f0 b1 * b0 b1
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D DIFF_EMPTY
A |- (!s. ((s DIFF EMPTY) = s))
T c= * * part cDIFF f0 part cEMPTY f0
D NOT_BOUNDED_UNIV
A |- (~ (bounded UNIV))
T c~ cbounded part cUNIV
D COMPONENTS_EQ_EMPTY
A |- (!s. (((components s) = EMPTY) = (s = EMPTY)))
T c= c= * part ccomponents f0 part cEMPTY c= f0 part cEMPTY
D COMPONENTS_EQ_SING_EXISTS
A |- (!s. ((?a. ((components s) = (a INSERT EMPTY))) = ((connected s) /\ (~ (s = EMPTY)))))
T c= c? / c= * part ccomponents f0 * * part cINSERT b0 part cEMPTY c/\ cconnected f0 c~ c= f0 part cEMPTY
D COBOUNDED_UNIQUE_UNBOUNDED_COMPONENTS
A |- (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c)))))
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ cIN f1 * part ccomponents f0 c/\ c~ cbounded f1 c/\ cIN f2 * part ccomponents f0 c~ cbounded f2 c= f2 f1
+ |- ((!s. (!c'. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> (~ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))))))))))))))) = (!s. (!c'. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F)))))))))))))
T c= ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV b0 c==> c~ cconnected b0 c==> cIN b2 * part ccomponents b0 c==> cIN b1 * part ccomponents b0 c==> c~ c= b2 b1 c==> c~ c? / c/\ cIN b3 * part ccomponents b0 cbounded b3 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b3 c/\ cIN b3 * part ccomponents b3 c/\ c~ cbounded b3 c/\ cIN b3 * part ccomponents b3 c~ cbounded b3 c= b3 b3 c~ ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b3 c/\ cIN b4 * part ccomponents b3 c/\ c~ cbounded b4 c/\ cIN b5 * part ccomponents b3 c~ cbounded b5 c= b5 b4 ! ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV b0 c==> c~ cconnected b0 c==> cIN b2 * part ccomponents b0 c==> cIN b1 * part ccomponents b0 c==> c~ c= b2 b1 c==> c~ c? / c/\ cIN b3 * part ccomponents b0 cbounded b3 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b3 c/\ cIN b3 * part ccomponents b3 c/\ c~ cbounded b3 c/\ cIN b3 * part ccomponents b3 c~ cbounded b3 c= b3 b3 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b3 c/\ cIN b4 * part ccomponents b3 c/\ c~ cbounded b4 c/\ cIN b5 * part ccomponents b3 c~ cbounded b5 c= b5 b4 cF
+ (~ (connected s)), (bounded (UNIV DIFF s)), ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c')))), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c')))) /\ (?c. ((c IN (components s)) /\ (bounded c))))
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c/\ cIN f1 * part ccomponents f0 c/\ cIN f2 * part ccomponents f0 c~ c= f1 f2 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ c/\ cIN f1 * part ccomponents f0 c/\ cIN f2 * part ccomponents f0 c~ c= f1 f2 c? / c/\ cIN b0 * part ccomponents f0 cbounded b0
+ (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))) |- ((~ (s _700529)) \/ ((~ (s _700530)) \/ (_700529 = _700530)))
T c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 c\/ c~ * f0 f1 c\/ c~ * f0 f2 c= f1 f2
+ (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F)))))))
T c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cF
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
+ (~ (?c. ((c IN (components s)) /\ (bounded c)))) |- ((~ (_700569 IN (components s))) \/ (~ (bounded _700569)))
T c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c\/ c~ cIN f1 * part ccomponents f0 c~ cbounded f1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F), (((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) ==> ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F)) |- ((((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) ==> ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F)) /\ ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F))
T c==> c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c==> c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c/\ c==> c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF
+ (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))), ((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) |- F
T c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 cF
- (~ (connected s)), (s = EMPTY) |- (~ (connected EMPTY))
T c==> c~ cconnected f0 c==> c= f0 part cEMPTY c~ cconnected part cEMPTY
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))) |- (!y. ((~ (s _700529)) \/ ((~ (s y)) \/ (_700529 = y))))
T c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 ! c\/ c~ * f0 f1 c\/ c~ * f0 b0 c= f1 b0
+ ((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) |- (((?x. (?x. ((s x) /\ (!a. (((s (x a)) \/ ((x a) = a)) /\ ((~ (s (x a))) \/ (~ ((x a) = a)))))))) ==> F) = F)
T c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c= c==> c? / c? / c/\ * f0 b0 ! c/\ c\/ * f0 * b1 b2 c= * b1 b2 b2 c\/ c~ * f0 * b1 b2 c~ c= * b1 b2 b2 cF cF
+ (~ (?c. ((c IN (components s)) /\ (bounded c)))) |- ((~ (bounded _700569)) \/ (~ (_700569 IN (components s))))
T c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c\/ c~ cbounded f1 c~ cIN f1 * part ccomponents f0
- |- ((?c'. ((c' IN (components s)) /\ (bounded c))) = ((?c. (c IN (components s))) /\ (bounded c)))
T c= c? / c/\ cIN b0 * part ccomponents f0 cbounded f1 c/\ c? / cIN b0 * part ccomponents f0 cbounded f1
+ (~ (s (x' x))), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- (~ ((x' x) = x))
T c==> c~ * f0 * f1 f2 c==> c/\ * f0 f2 ! c/\ c\/ * f0 * f1 b0 c= * f1 b0 b0 c\/ c~ * f0 * f1 b0 c~ c= * f1 b0 b0 c~ c= * f1 f2 f2
+ (~ (connected s)), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((s = EMPTY) ==> F)
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> c= f0 part cEMPTY cF
- (bounded (UNIV DIFF s)) |- ((bounded (UNIV DIFF s)) = T)
T c==> cbounded * * part cDIFF part cUNIV f0 c= cbounded * * part cDIFF part cUNIV f0 cT
+ |- ((\s. ((?a. ((components s) = (a INSERT EMPTY))) = ((connected s) /\ (~ (s = EMPTY))))) s)
T * / c= c? / c= * part ccomponents b0 * * part cINSERT b1 part cEMPTY c/\ cconnected b0 c~ c= b0 part cEMPTY f0
+ |- ((!s. (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y)))))))) = (!s. ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F)))
T c= ! c==> c/\ c~ ! c~ * b0 b1 c~ c? / ! c= * b0 b2 c= b2 b1 c? / c/\ * b0 b1 c? / c/\ * b0 b2 c~ c= b1 b2 ! c==> c~ c==> c/\ c~ ! c~ * b0 b1 c~ c? / ! c= * b0 b2 c= b2 b1 c? / c? / c/\ * b0 b1 c/\ * b0 b2 c~ c= b1 b2 cF
+ ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- (((x' _700531) = _700531) \/ (s (x' _700531)))
T c==> c/\ * f0 f1 ! c/\ c\/ * f0 * f2 b0 c= * f2 b0 b0 c\/ c~ * f0 * f2 b0 c~ c= * f2 b0 b0 c\/ c= * f2 f3 f3 * f0 * f2 f3
- (~ (s (x' x))), ((x' x) = x), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- (((x' x) = x) /\ (~ ((x' x) = x)))
T c==> c~ * f0 * f1 f2 c==> c= * f1 f2 f2 c==> c/\ * f0 f2 ! c/\ c\/ * f0 * f1 b0 c= * f1 b0 b0 c\/ c~ * f0 * f1 b0 c~ c= * f1 b0 b0 c/\ c= * f1 f2 f2 c~ c= * f1 f2 f2
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (_700608 = _700609)) \/ ((BIT1 _700608) = (BIT1 _700609)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))) |- (((!x. (((\x. (?x. ((s x) /\ (!a. (((s (x a)) \/ ((x a) = a)) /\ ((~ (s (x a))) \/ (~ ((x a) = a)))))))) x) ==> F)) ==> ((?x. (?x. ((s x) /\ (!a. (((s (x a)) \/ ((x a) = a)) /\ ((~ (s (x a))) \/ (~ ((x a) = a)))))))) ==> F)) = ((?x. (?x. ((s x) /\ (!a. (((s (x a)) \/ ((x a) = a)) /\ ((~ (s (x a))) \/ (~ ((x a) = a)))))))) ==> F))
T c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 c= c==> ! c==> * / c? / c/\ * f0 b1 ! c/\ c\/ * f0 * b1 b2 c= * b1 b2 b2 c\/ c~ * f0 * b1 b2 c~ c= * b1 b2 b2 b0 cF c==> c? / c? / c/\ * f0 b0 ! c/\ c\/ * f0 * b1 b2 c= * b1 b2 b2 c\/ c~ * f0 * b1 b2 c~ c= * b1 b2 b2 cF c==> c? / c? / c/\ * f0 b0 ! c/\ c\/ * f0 * b1 b2 c= * b1 b2 b2 c\/ c~ * f0 * b1 b2 c~ c= * b1 b2 b2 cF
- (((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) ==> ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F)) |- ((((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) ==> ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F)) /\ (((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) ==> ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c/\ c==> c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF
+ (~ (connected s)), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c')))) ==> (?c. ((c IN (components s)) /\ (bounded c))))
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> c/\ cIN f1 * part ccomponents f0 c/\ cIN f2 * part ccomponents f0 c~ c= f1 f2 c? / c/\ cIN b0 * part ccomponents f0 cbounded b0
- (s = EMPTY) |- ((~ (connected s)) = (~ (connected EMPTY)))
T c==> c= f0 part cEMPTY c= c~ cconnected f0 c~ cconnected part cEMPTY
+ (~ (c = c')), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (c IN (components s)), (c' IN (components s)) |- ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> (~ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))))))
T c==> c~ c= f0 f1 c==> cbounded * * part cDIFF part cUNIV f2 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f0 * part ccomponents f2 c==> cIN f1 * part ccomponents f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f2 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c~ ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1
- (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))), (~ ((x' x) = x)), (s (x' x)), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- ((s (x' x)) /\ (~ (s (x' x))))
T c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 c==> c~ c= * f1 f2 f2 c==> * f0 * f1 f2 c==> c/\ * f0 f2 ! c/\ c\/ * f0 * f1 b0 c= * f1 b0 b0 c\/ c~ * f0 * f1 b0 c~ c= * f1 b0 b0 c/\ * f0 * f1 f2 c~ * f0 * f1 f2
- |- ((?y'. ((s y) /\ (~ (x = y')))) = ((s y) /\ (?y. (~ (x = y)))))
T c= c? / c/\ * f0 f1 c~ c= f2 b0 c/\ * f0 f1 c? / c~ c= f2 b0
+ (~ (connected s)), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (((!x. (((\c. (?c'. ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c')))))) x) ==> (?c. ((c IN (components s)) /\ (bounded c))))) ==> ((?c. (?c'. ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c')))))) ==> (?c. ((c IN (components s)) /\ (bounded c))))) = ((?c. (?c'. ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c')))))) ==> (?c. ((c IN (components s)) /\ (bounded c)))))
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= c==> ! c==> * / c? / c/\ cIN b1 * part ccomponents f0 c/\ cIN b2 * part ccomponents f0 c~ c= b1 b2 b0 c? / c/\ cIN b1 * part ccomponents f0 cbounded b1 c==> c? / c? / c/\ cIN b0 * part ccomponents f0 c/\ cIN b1 * part ccomponents f0 c~ c= b0 b1 c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> c? / c? / c/\ cIN b0 * part ccomponents f0 c/\ cIN b1 * part ccomponents f0 c~ c= b0 b1 c? / c/\ cIN b0 * part ccomponents f0 cbounded b0
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ (~ (s (x' x))), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- (((((x' x) = (x' x)) /\ (~ (x = (x' x)))) ==> (~ ((x' x) = x))) = (~ ((x' x) = x)))
T c==> c~ * f0 * f1 f2 c==> c/\ * f0 f2 ! c/\ c\/ * f0 * f1 b0 c= * f1 b0 b0 c\/ c~ * f0 * f1 b0 c~ c= * f1 b0 b0 c= c==> c/\ c= * f1 f2 * f1 f2 c~ c= f2 * f1 f2 c~ c= * f1 f2 f2 c~ c= * f1 f2 f2
+ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF
- |- (((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) ==> ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F))
T c==> c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF
+ (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))) |- (((!y. ((~ (s _700529)) \/ ((~ (s y)) \/ (_700529 = y)))) ==> ((\y. ((~ (s _700529)) \/ ((~ (s y)) \/ (_700529 = y)))) _700530)) = ((\y. ((~ (s _700529)) \/ ((~ (s y)) \/ (_700529 = y)))) _700530))
T c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 c= c==> ! c\/ c~ * f0 f1 c\/ c~ * f0 b0 c= f1 b0 * / c\/ c~ * f0 f1 c\/ c~ * f0 b0 c= f1 b0 f2 * / c\/ c~ * f0 f1 c\/ c~ * f0 b0 c= f1 b0 f2
- (~ (c = c')), (c = c') |- ((c = c') /\ (~ (c = c')))
T c==> c~ c= f0 f1 c==> c= f0 f1 c/\ c= f0 f1 c~ c= f0 f1
+ |- ((!s. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> (~ (!s. ((s DIFF EMPTY) = s))))))))) = (!s. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))))))))
T c= ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV b0 c==> c~ cconnected b0 c==> c= b0 part cEMPTY c==> c~ cbounded part cUNIV c~ ! c= * * part cDIFF b1 part cEMPTY b1 ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV b0 c==> c~ cconnected b0 c==> c= b0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b1 part cEMPTY b1 cF
- (~ (c = c')) |- ((c = c') ==> (~ (c = c')))
T c==> c~ c= f0 f1 c==> c= f0 f1 c~ c= f0 f1
+ |- (((!s. ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F)) ==> ((\s. ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F)) s)) = ((\s. ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F)) s))
T c= c==> ! c==> c~ c==> c/\ c~ ! c~ * b0 b1 c~ c? / ! c= * b0 b2 c= b2 b1 c? / c? / c/\ * b0 b1 c/\ * b0 b2 c~ c= b1 b2 cF * / c==> c~ c==> c/\ c~ ! c~ * b0 b1 c~ c? / ! c= * b0 b2 c= b2 b1 c? / c? / c/\ * b0 b1 c/\ * b0 b2 c~ c= b1 b2 cF f0 * / c==> c~ c==> c/\ c~ ! c~ * b0 b1 c~ c? / ! c= * b0 b2 c= b2 b1 c? / c? / c/\ * b0 b1 c/\ * b0 b2 c~ c= b1 b2 cF f0
- |- ((_700586 = _700587) ==> ((connected _700587) \/ (~ (connected _700586))))
T c==> c= f0 f1 c\/ cconnected f1 c~ cconnected f0
- (~ F), (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 c==> c/\ * f0 f1 ! c/\ c\/ * f0 * f2 b0 c= * f2 b0 b0 c\/ c~ * f0 * f2 b0 c~ c= * f2 b0 b0 c/\ c~ cF cF
- |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F))))))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F))))))))))
T c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cF
+ |- (((~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))) ==> F) = (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y)))))))
T c= c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 cF c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1
+ ((\x. (?x. ((s x) /\ (!a. (((s (x a)) \/ ((x a) = a)) /\ ((~ (s (x a))) \/ (~ ((x a) = a)))))))) x) |- (?x. ((s x) /\ (!a. (((s (x a)) \/ ((x a) = a)) /\ ((~ (s (x a))) \/ (~ ((x a) = a)))))))
T c==> * / c? / c/\ * f0 b0 ! c/\ c\/ * f0 * b1 b2 c= * b1 b2 b2 c\/ c~ * f0 * b1 b2 c~ c= * b1 b2 b2 f1 c? / c/\ * f0 f1 ! c/\ c\/ * f0 * b0 b1 c= * b0 b1 b1 c\/ c~ * f0 * b0 b1 c~ c= * b0 b1 b1
- (~ (?c. ((c IN (components s)) /\ (bounded c)))), (c IN (components s)) |- ((bounded c) ==> (~ (bounded c)))
T c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> cIN f1 * part ccomponents f0 c==> cbounded f1 c~ cbounded f1
- (~ (s (x' x))), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- ((x = (x' x)) ==> (~ (x = (x' x))))
T c==> c~ * f0 * f1 f2 c==> c/\ * f0 f2 ! c/\ c\/ * f0 * f1 b0 c= * f1 b0 b0 c\/ c~ * f0 * f1 b0 c~ c= * f1 b0 b0 c==> c= f2 * f1 f2 c~ c= f2 * f1 f2
+ ((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) |- (?x. (?x. ((s x) /\ (!a. (((s (x a)) \/ ((x a) = a)) /\ ((~ (s (x a))) \/ (~ ((x a) = a))))))))
T c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 ! c/\ c\/ * f0 * b1 b2 c= * b1 b2 b2 c\/ c~ * f0 * b1 b2 c~ c= * b1 b2 b2
+ |- (!s. (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))))
T c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1
- |- ((_700604 = _700606) ==> ((~ (_700605 = _700607)) \/ ((_700604 DIFF _700605) = (_700606 DIFF _700607))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cDIFF f0 f2 * * part cDIFF f1 f3
- (~ (s (x' x))), (s (x' x)) |- ((s (x' x)) /\ (~ (s (x' x))))
T c==> c~ * f0 * f1 f2 c==> * f0 * f1 f2 c/\ * f0 * f1 f2 c~ * f0 * f1 f2
+ ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- ((~ ((x' x) = x)) = ((s x) /\ (~ ((x' x) = x))))
T c==> c/\ * f0 f1 ! c/\ c\/ * f0 * f2 b0 c= * f2 b0 b0 c\/ c~ * f0 * f2 b0 c~ c= * f2 b0 b0 c= c~ c= * f2 f1 f1 c/\ * f0 f1 c~ c= * f2 f1 f1
+ |- ((((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))) = T)
T c= c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 cT
+ (~ (?c. ((c IN (components s)) /\ (bounded c)))), (c IN (components s)) |- (~ (bounded c))
T c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> cIN f1 * part ccomponents f0 c~ cbounded f1
- (~ ((x' x) = x)), ((x' x) = x) |- (((x' x) = x) /\ (~ ((x' x) = x)))
T c==> c~ c= * f0 f1 f1 c==> c= * f0 f1 f1 c/\ c= * f0 f1 f1 c~ c= * f0 f1 f1
- (_700586 = _700587) |- ((_700586 = _700587) /\ ((connected _700587) \/ (~ (connected _700586))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cconnected f1 c~ cconnected f0
- |- ((?c. (P c)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
- (c IN (components s)) |- ((~ (c IN (components s))) ==> (c IN (components s)))
T c==> cIN f0 * part ccomponents f1 c==> c~ cIN f0 * part ccomponents f1 cIN f0 * part ccomponents f1
+ (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))), ((\x. (?x. ((s x) /\ (!a. (((s (x a)) \/ ((x a) = a)) /\ ((~ (s (x a))) \/ (~ ((x a) = a)))))))) x) |- (((\x. (?x. ((s x) /\ (!a. (((s (x a)) \/ ((x a) = a)) /\ ((~ (s (x a))) \/ (~ ((x a) = a)))))))) x) /\ F)
T c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 c==> * / c? / c/\ * f0 b0 ! c/\ c\/ * f0 * b1 b2 c= * b1 b2 b2 c\/ c~ * f0 * b1 b2 c~ c= * b1 b2 b2 f1 c/\ * / c? / c/\ * f0 b0 ! c/\ c\/ * f0 * b1 b2 c= * b1 b2 b2 c\/ c~ * f0 * b1 b2 c~ c= * b1 b2 b2 f1 cF
+ (!s. ((s DIFF EMPTY) = s)), (bounded (UNIV DIFF s)), (s = EMPTY) |- (((bounded UNIV) ==> F) = F)
T c==> ! c= * * part cDIFF b0 part cEMPTY b0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c= f0 part cEMPTY c= c==> cbounded part cUNIV cF cF
- (_700583 = _700585), (_700582 = _700584) |- ((((_700582 IN _700583) = (_700584 IN _700585)) ==> ((_700584 IN _700585) \/ (~ (_700582 IN _700583)))) = ((_700584 IN _700585) \/ (~ (_700582 IN _700583))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cIN f2 f0 cIN f3 f1 c\/ cIN f3 f1 c~ cIN f2 f0 c\/ cIN f3 f1 c~ cIN f2 f0
- |- ((!c''. (((~ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) \/ ((~ (bounded (UNIV DIFF s))) \/ ((~ (c IN (components s))) \/ ((bounded c) \/ ((~ (c'' IN (components s))) \/ (bounded c'')))))) \/ (c' = c))) = ((!c'. ((~ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) \/ ((~ (bounded (UNIV DIFF s))) \/ ((~ (c IN (components s))) \/ ((bounded c) \/ ((~ (c' IN (components s))) \/ (bounded c'))))))) \/ (c' = c)))
T c= ! c\/ c\/ c~ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c\/ c~ cbounded * * part cDIFF part cUNIV f0 c\/ c~ cIN f1 * part ccomponents f0 c\/ cbounded f1 c\/ c~ cIN b0 * part ccomponents f0 cbounded b0 c= f2 f1 c\/ ! c\/ c~ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c\/ c~ cbounded * * part cDIFF part cUNIV f0 c\/ c~ cIN f1 * part ccomponents f0 c\/ cbounded f1 c\/ c~ cIN b0 * part ccomponents f0 cbounded b0 c= f2 f1
+ (~ ((x' x) = x)), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- ((s x) /\ (~ ((x' x) = x)))
T c==> c~ c= * f0 f1 f1 c==> c/\ * f2 f1 ! c/\ c\/ * f2 * f0 b0 c= * f0 b0 b0 c\/ c~ * f2 * f0 b0 c~ c= * f0 b0 b0 c/\ * f2 f1 c~ c= * f0 f1 f1
+ (~ (?c. ((c IN (components s)) /\ (bounded c)))), (~ (c = c')), (c IN (components s)) |- ((c IN (components s)) /\ ((~ (bounded c)) /\ (~ (c = c'))))
T c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> c~ c= f1 f2 c==> cIN f1 * part ccomponents f0 c/\ cIN f1 * part ccomponents f0 c/\ c~ cbounded f1 c~ c= f1 f2
+ |- (((?x. (P x)) /\ Q) = (?x. ((P x) /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
- |- ((!c'. ((~ (c IN (components s))) \/ (~ (bounded c')))) = ((~ (c IN (components s))) \/ (!c. (~ (bounded c)))))
T c= ! c\/ c~ cIN f0 * part ccomponents f1 c~ cbounded b0 c\/ c~ cIN f0 * part ccomponents f1 ! c~ cbounded b0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
- (!s. ((s DIFF EMPTY) = s)), (~ F), (~ (bounded UNIV)), (bounded (UNIV DIFF s)), (s = EMPTY) |- ((~ F) /\ F)
T c==> ! c= * * part cDIFF b0 part cEMPTY b0 c==> c~ cF c==> c~ cbounded part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c= f0 part cEMPTY c/\ c~ cF cF
+ ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- ((s (x' _700531)) \/ ((x' _700531) = _700531))
T c==> c/\ * f0 f1 ! c/\ c\/ * f0 * f2 b0 c= * f2 b0 b0 c\/ c~ * f0 * f2 b0 c~ c= * f2 b0 b0 c\/ * f0 * f2 f3 c= * f2 f3 f3
+ (~ (s (x' x))), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- (((x' x) = (x' x)) /\ (~ (x = (x' x))))
T c==> c~ * f0 * f1 f2 c==> c/\ * f0 f2 ! c/\ c\/ * f0 * f1 b0 c= * f1 b0 b0 c\/ c~ * f0 * f1 b0 c~ c= * f1 b0 b0 c/\ c= * f1 f2 * f1 f2 c~ c= f2 * f1 f2
+ (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))), ((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) |- ((~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))) /\ F)
T c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c/\ c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 cF
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- ((~ (s (x' _700531))) \/ (~ ((x' _700531) = _700531)))
T c==> c/\ * f0 f1 ! c/\ c\/ * f0 * f2 b0 c= * f2 b0 b0 c\/ c~ * f0 * f2 b0 c~ c= * f2 b0 b0 c\/ c~ * f0 * f2 f3 c~ c= * f2 f3 f3
+ (~ (s (x' x))), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- (s (x' x))
T c==> c~ * f0 * f1 f2 c==> c/\ * f0 f2 ! c/\ c\/ * f0 * f1 b0 c= * f1 b0 b0 c\/ c~ * f0 * f1 b0 c~ c= * f1 b0 b0 * f0 * f1 f2
- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))))
T c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF
+ (~ (s (x' x))), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- ((~ (s (x' x))) /\ (s x))
T c==> c~ * f0 * f1 f2 c==> c/\ * f0 f2 ! c/\ c\/ * f0 * f1 b0 c= * f1 b0 b0 c\/ c~ * f0 * f1 b0 c~ c= * f1 b0 b0 c/\ c~ * f0 * f1 f2 * f0 f2
+ (!s. ((s DIFF EMPTY) = s)) |- ((_700536 DIFF EMPTY) = _700536)
T c==> ! c= * * part cDIFF b0 part cEMPTY b0 c= * * part cDIFF f0 part cEMPTY f0
+ |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- (((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) /\ F)
T c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 c==> c/\ * f0 f1 ! c/\ c\/ * f0 * f2 b0 c= * f2 b0 b0 c\/ c~ * f0 * f2 b0 c~ c= * f2 b0 b0 c/\ c/\ * f0 f1 ! c/\ c\/ * f0 * f2 b0 c= * f2 b0 b0 c\/ c~ * f0 * f2 b0 c~ c= * f2 b0 b0 cF
- (~ (bounded (UNIV DIFF s))), (bounded (UNIV DIFF s)) |- ((~ (bounded (UNIV DIFF s))) /\ (bounded (UNIV DIFF s)))
T c==> c~ cbounded * * part cDIFF part cUNIV f0 c==> cbounded * * part cDIFF part cUNIV f0 c/\ c~ cbounded * * part cDIFF part cUNIV f0 cbounded * * part cDIFF part cUNIV f0
+ |- (((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> F) = (?c. ((c IN (components s)) /\ (bounded c))))
T c= c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 cF c? / c/\ cIN b0 * part ccomponents f0 cbounded b0
- |- ((!c. t) = t)
T c= ! f0 f0
- |- ((_700610 = _700611) ==> ((BIT0 _700610) = (BIT0 _700611)))
T c==> c= f0 f1 c= cBIT0 f0 cBIT0 f1
- (_700602 = _700603) |- ((_700602 = _700603) /\ ((components _700602) = (components _700603)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * part ccomponents f0 * part ccomponents f1
+ ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- (s (x' x))
T c==> c/\ * f0 f1 ! c/\ c\/ * f0 * f2 b0 c= * f2 b0 b0 c\/ c~ * f0 * f2 b0 c~ c= * f2 b0 b0 * f0 * f2 f1
+ ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- (((x' x) = x) = ((s (x' x)) /\ ((x' x) = x)))
T c==> c/\ * f0 f1 ! c/\ c\/ * f0 * f2 b0 c= * f2 b0 b0 c\/ c~ * f0 * f2 b0 c~ c= * f2 b0 b0 c= c= * f2 f1 f1 c/\ * f0 * f2 f1 c= * f2 f1 f1
+ |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> (~ (!s. ((s DIFF EMPTY) = s)))))))) = T)
T c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c~ ! c= * * part cDIFF b0 part cEMPTY b0 cT
+ (~ (connected s)), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF
+ (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> (~ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))))))))))
T c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c~ ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1
+ (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (c IN (components s)), (c' IN (components s)) |- ((c' IN (components s)) /\ ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> (~ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))))))))
T c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c/\ cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c~ ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1
- |- ((!c''. (((~ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) \/ ((~ (bounded (UNIV DIFF s))) \/ ((~ (c IN (components s))) \/ ((bounded c) \/ ((~ (c' IN (components s))) \/ (bounded c')))))) \/ (c'' = c))) = (((~ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) \/ ((~ (bounded (UNIV DIFF s))) \/ ((~ (c IN (components s))) \/ ((bounded c) \/ ((~ (c' IN (components s))) \/ (bounded c')))))) \/ (!c'. (c' = c))))
T c= ! c\/ c\/ c~ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c\/ c~ cbounded * * part cDIFF part cUNIV f0 c\/ c~ cIN f1 * part ccomponents f0 c\/ cbounded f1 c\/ c~ cIN f2 * part ccomponents f0 cbounded f2 c= b0 f1 c\/ c\/ c~ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c\/ c~ cbounded * * part cDIFF part cUNIV f0 c\/ c~ cIN f1 * part ccomponents f0 c\/ cbounded f1 c\/ c~ cIN f2 * part ccomponents f0 cbounded f2 ! c= b0 f1
+ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ (~ (connected s)))), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (?c. ((c IN (components s)) /\ (bounded c)))
T c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c~ cconnected f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c/\ cIN b0 * part ccomponents f0 cbounded b0
- |- ((~ (_700582 = _700584)) \/ ((~ (_700583 = _700585)) \/ ((_700584 IN _700585) \/ (~ (_700582 IN _700583)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (~ (?c. ((c IN (components s)) /\ (bounded c)))), (~ (c = c')), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (c IN (components s)), (c' IN (components s)) |- ((~ (?c. ((c IN (components s)) /\ (bounded c)))) /\ ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> (~ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))))))
T c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> c~ c= f1 f2 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c/\ c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c~ ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1
- |- ((~ (_700602 = _700603)) \/ ((components _700602) = (components _700603)))
T c\/ c~ c= f0 f1 c= * part ccomponents f0 * part ccomponents f1
+ |- (((~ (s _700533)) /\ (s _700532)) ==> (~ (_700532 = _700533)))
T c==> c/\ c~ * f0 f1 * f0 f2 c~ c= f2 f1
- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F))))))))) |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F))))))))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F))))))))))
T c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cF c/\ c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cF
+ (?c. (?c'. ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c')))))), (~ (connected s)), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (?c. ((c IN (components s)) /\ (bounded c)))
T c==> c? / c? / c/\ cIN b0 * part ccomponents f0 c/\ cIN b1 * part ccomponents f0 c~ c= b0 b1 c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c/\ cIN b0 * part ccomponents f0 cbounded b0
- (~ (?c. ((c IN (components s)) /\ (bounded c)))), (bounded c), (c IN (components s)) |- ((bounded c) /\ (~ (bounded c)))
T c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> cbounded f1 c==> cIN f1 * part ccomponents f0 c/\ cbounded f1 c~ cbounded f1
- (_700583 = _700585), (_700582 = _700584) |- ((_700584 IN _700585) \/ (~ (_700582 IN _700583)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cIN f3 f1 c~ cIN f2 f0
- (bounded (UNIV DIFF s)), (s = EMPTY) |- ((~ (bounded (UNIV DIFF EMPTY))) ==> (bounded (UNIV DIFF EMPTY)))
T c==> cbounded * * part cDIFF part cUNIV f0 c==> c= f0 part cEMPTY c==> c~ cbounded * * part cDIFF part cUNIV part cEMPTY cbounded * * part cDIFF part cUNIV part cEMPTY
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?c. t) = t)
T c= c? / f0 f0
+ (~ (?c. ((c IN (components s)) /\ (bounded c)))), (~ (c = c')), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (c IN (components s)), (c' IN (components s)) |- ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> (~ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c)))))))
T c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> c~ c= f1 f2 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c~ ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1
+ (~ (connected s)), (bounded (UNIV DIFF s)), (s = EMPTY), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((!s. ((s DIFF EMPTY) = s)) ==> F)
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c= f0 part cEMPTY c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF
+ (!s. ((s DIFF EMPTY) = s)), (bounded (UNIV DIFF s)), (s = EMPTY) |- (((UNIV DIFF EMPTY) = UNIV) /\ (bounded (UNIV DIFF EMPTY)))
T c==> ! c= * * part cDIFF b0 part cEMPTY b0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c= f0 part cEMPTY c/\ c= * * part cDIFF part cUNIV part cEMPTY part cUNIV cbounded * * part cDIFF part cUNIV part cEMPTY
- (~ (bounded (UNIV DIFF EMPTY))), (bounded (UNIV DIFF s)), (s = EMPTY) |- ((~ (bounded (UNIV DIFF EMPTY))) /\ (bounded (UNIV DIFF EMPTY)))
T c==> c~ cbounded * * part cDIFF part cUNIV part cEMPTY c==> cbounded * * part cDIFF part cUNIV f0 c==> c= f0 part cEMPTY c/\ c~ cbounded * * part cDIFF part cUNIV part cEMPTY cbounded * * part cDIFF part cUNIV part cEMPTY
+ (~ (connected s)), (bounded (UNIV DIFF s)), ((c' IN (components s)) /\ (~ (c = c'))), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (c IN (components s)), (c' IN (components s)) |- (?c. ((c IN (components s)) /\ (bounded c)))
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c/\ cIN f1 * part ccomponents f0 c~ c= f2 f1 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f2 * part ccomponents f0 c==> cIN f1 * part ccomponents f0 c? / c/\ cIN b0 * part ccomponents f0 cbounded b0
+ (~ (connected s)), (bounded (UNIV DIFF s)), ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c')))), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (?c. ((c IN (components s)) /\ (bounded c)))
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c/\ cIN f1 * part ccomponents f0 c/\ cIN f2 * part ccomponents f0 c~ c= f1 f2 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c/\ cIN b0 * part ccomponents f0 cbounded b0
- |- ((!y'. ((~ (s y')) \/ (x = y))) = ((!y. (~ (s y))) \/ (x = y)))
T c= ! c\/ c~ * f0 b0 c= f1 f2 c\/ ! c~ * f0 b0 c= f1 f2
- (_700604 = _700606), (_700605 = _700607) |- ((_700605 = _700607) /\ ((_700604 DIFF _700605) = (_700606 DIFF _700607)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= * * part cDIFF f0 f2 * * part cDIFF f1 f3
+ ((\x. (?x. ((s x) /\ (!a. (((s (x a)) \/ ((x a) = a)) /\ ((~ (s (x a))) \/ (~ ((x a) = a)))))))) x) |- (((?x. ((s x) /\ (!a. (((s (x a)) \/ ((x a) = a)) /\ ((~ (s (x a))) \/ (~ ((x a) = a))))))) ==> F) = F)
T c==> * / c? / c/\ * f0 b0 ! c/\ c\/ * f0 * b1 b2 c= * b1 b2 b2 c\/ c~ * f0 * b1 b2 c~ c= * b1 b2 b2 f1 c= c==> c? / c/\ * f0 f1 ! c/\ c\/ * f0 * b0 b1 c= * b0 b1 b1 c\/ c~ * f0 * b0 b1 c~ c= * b0 b1 b1 cF cF
- (((~ (s = EMPTY)) /\ (~ (?a. (s = (a INSERT EMPTY))))) ==> (?x. (?y. ((x IN s) /\ ((y IN s) /\ (~ (x = y))))))) |- ((((~ (s = EMPTY)) /\ (~ (?a. (s = (a INSERT EMPTY))))) ==> (?x. (?y. ((x IN s) /\ ((y IN s) /\ (~ (x = y))))))) /\ (((~ (s = EMPTY)) /\ (~ (?a. (s = (a INSERT EMPTY))))) ==> (?x. (?y. ((x IN s) /\ ((y IN s) /\ (~ (x = y))))))))
T c==> c==> c/\ c~ c= f0 part cEMPTY c~ c? / c= f0 * * part cINSERT b0 part cEMPTY c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1 c/\ c==> c/\ c~ c= f0 part cEMPTY c~ c? / c= f0 * * part cINSERT b0 part cEMPTY c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1 c==> c/\ c~ c= f0 part cEMPTY c~ c? / c= f0 * * part cINSERT b0 part cEMPTY c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1
- (!s. ((s DIFF EMPTY) = s)), (~ (bounded UNIV)), (bounded (UNIV DIFF s)), (s = EMPTY) |- ((~ F) ==> F)
T c==> ! c= * * part cDIFF b0 part cEMPTY b0 c==> c~ cbounded part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c= f0 part cEMPTY c==> c~ cF cF
- (bounded (UNIV DIFF s)) |- ((~ (bounded (UNIV DIFF s))) ==> (bounded (UNIV DIFF s)))
T c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cbounded * * part cDIFF part cUNIV f0 cbounded * * part cDIFF part cUNIV f0
+ (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> (~ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c)))))))))))
T c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c~ ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1
- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))))))), (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))))
T c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c/\ c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF
- (~ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((~ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) /\ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)))
T c==> c~ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ c~ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV
+ (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))))
T c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF
+ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> (~ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))))))))))))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c~ ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1
+ (~ (connected s)) |- ((connected s) = F)
T c==> c~ cconnected f0 c= cconnected f0 cF
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))), (~ ((x' x) = x)), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- ((x' x) = x)
T c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 c==> c~ c= * f1 f2 f2 c==> c/\ * f0 f2 ! c/\ c\/ * f0 * f1 b0 c= * f1 b0 b0 c\/ c~ * f0 * f1 b0 c~ c= * f1 b0 b0 c= * f1 f2 f2
- |- (((((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) ==> ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F)) ==> (((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) ==> ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F))) = (((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) ==> ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F)))
T c= c==> c==> c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF
+ (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))), (~ ((x' x) = x)), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- (~ (s (x' x)))
T c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 c==> c~ c= * f1 f2 f2 c==> c/\ * f0 f2 ! c/\ c\/ * f0 * f1 b0 c= * f1 b0 b0 c\/ c~ * f0 * f1 b0 c~ c= * f1 b0 b0 c~ * f0 * f1 f2
+ (~ (connected s)), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((?c. (?c'. ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c')))))) ==> (?c. ((c IN (components s)) /\ (bounded c))))
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> c? / c? / c/\ cIN b0 * part ccomponents f0 c/\ cIN b1 * part ccomponents f0 c~ c= b0 b1 c? / c/\ cIN b0 * part ccomponents f0 cbounded b0
+ |- (((!c'. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F))))))))))) ==> ((\c'. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F))))))))))) c')) = ((\c'. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F))))))))))) c'))
T c= c==> ! ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN b1 * part ccomponents f0 c==> cIN b0 * part ccomponents f0 c==> c~ c= b1 b0 c==> c~ c? / c/\ cIN b2 * part ccomponents f0 cbounded b2 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b2 c/\ cIN b3 * part ccomponents b2 c/\ c~ cbounded b3 c/\ cIN b3 * part ccomponents b2 c~ cbounded b3 c= b3 b3 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b2 c/\ cIN b3 * part ccomponents b2 c/\ c~ cbounded b3 c/\ cIN b4 * part ccomponents b2 c~ cbounded b4 c= b4 b3 cF * / ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN b1 * part ccomponents f0 c==> cIN b0 * part ccomponents f0 c==> c~ c= b1 b0 c==> c~ c? / c/\ cIN b2 * part ccomponents f0 cbounded b2 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b2 c/\ cIN b3 * part ccomponents b2 c/\ c~ cbounded b3 c/\ cIN b3 * part ccomponents b2 c~ cbounded b3 c= b3 b3 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b2 c/\ cIN b3 * part ccomponents b2 c/\ c~ cbounded b3 c/\ cIN b4 * part ccomponents b2 c~ cbounded b4 c= b4 b3 cF f1 * / ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN b1 * part ccomponents f0 c==> cIN b0 * part ccomponents f0 c==> c~ c= b1 b0 c==> c~ c? / c/\ cIN b2 * part ccomponents f0 cbounded b2 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b2 c/\ cIN b3 * part ccomponents b2 c/\ c~ cbounded b3 c/\ cIN b3 * part ccomponents b2 c~ cbounded b3 c= b3 b3 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b2 c/\ cIN b3 * part ccomponents b2 c/\ c~ cbounded b3 c/\ cIN b4 * part ccomponents b2 c~ cbounded b4 c= b4 b3 cF f1
+ |- (((~ (s = EMPTY)) /\ (~ (?a. (s = (a INSERT EMPTY))))) ==> (?c. (?c'. ((c IN s) /\ ((c' IN s) /\ (~ (c = c')))))))
T c==> c/\ c~ c= f0 part cEMPTY c~ c? / c= f0 * * part cINSERT b0 part cEMPTY c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1
- (~ (s (x' x))), (x = (x' x)), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- ((x = (x' x)) /\ (~ (x = (x' x))))
T c==> c~ * f0 * f1 f2 c==> c= f2 * f1 f2 c==> c/\ * f0 f2 ! c/\ c\/ * f0 * f1 b0 c= * f1 b0 b0 c\/ c~ * f0 * f1 b0 c~ c= * f1 b0 b0 c/\ c= f2 * f1 f2 c~ c= f2 * f1 f2
+ (~ (connected s)), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((?c'. ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c'))))) ==> (?c. ((c IN (components s)) /\ (bounded c))))
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> c? / c/\ cIN f1 * part ccomponents f0 c/\ cIN b0 * part ccomponents f0 c~ c= f1 b0 c? / c/\ cIN b0 * part ccomponents f0 cbounded b0
+ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))), (~ (?c. ((c IN (components s)) /\ (bounded c)))), (~ (c = c')), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (c IN (components s)), (c' IN (components s)) |- (~ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> c~ c= f1 f2 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c~ ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1
- (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))), (~ (?c. ((c IN (components s)) /\ (bounded c)))), (~ (c = c')), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (c IN (components s)), (c' IN (components s)) |- ((~ (bounded c')) ==> (bounded c'))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> c~ c= f1 f2 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ cbounded f2 cbounded f2
- |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))))))) = (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))))
T c= c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF
+ (bounded (UNIV DIFF s)), (s = EMPTY) |- (bounded (UNIV DIFF EMPTY))
T c==> cbounded * * part cDIFF part cUNIV f0 c==> c= f0 part cEMPTY cbounded * * part cDIFF part cUNIV part cEMPTY
+ (~ (?c. ((c IN (components s)) /\ (bounded c)))), (~ (connected s)), (~ (c = c')), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (c IN (components s)), (c' IN (components s)) |- F
T c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> c~ cconnected f0 c==> c~ c= f1 f2 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 cF
+ ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- (((s (x' _700531)) /\ ((x' _700531) = _700531)) ==> F)
T c==> c/\ * f0 f1 ! c/\ c\/ * f0 * f2 b0 c= * f2 b0 b0 c\/ c~ * f0 * f2 b0 c~ c= * f2 b0 b0 c==> c/\ * f0 * f2 f3 c= * f2 f3 f3 cF
+ ((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) |- ((~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))) ==> F)
T c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 cF
+ (~ (connected s)), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((((~ ((components s) = EMPTY)) /\ (~ (?a. ((components s) = (a INSERT EMPTY))))) ==> (?c. (?c'. ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c'))))))) = (?c. (?c'. ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c')))))))
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= c==> c/\ c~ c= * part ccomponents f0 part cEMPTY c~ c? / c= * part ccomponents f0 * * part cINSERT b0 part cEMPTY c? / c? / c/\ cIN b0 * part ccomponents f0 c/\ cIN b1 * part ccomponents f0 c~ c= b0 b1 c? / c? / c/\ cIN b0 * part ccomponents f0 c/\ cIN b1 * part ccomponents f0 c~ c= b0 b1
- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))))))), (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))))))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))))
T c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c/\ c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF
- (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))), (~ F), (~ (?c. ((c IN (components s)) /\ (bounded c)))), (~ (c = c')), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (c IN (components s)), (c' IN (components s)) |- ((~ F) /\ F)
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> c~ cF c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> c~ c= f1 f2 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c/\ c~ cF cF
+ |- ((((~ (!x. ((x IN s) = (x IN EMPTY)))) /\ (~ (?a. (!x. ((x IN s) = (x IN (a INSERT EMPTY))))))) ==> (?x. (?y. ((x IN s) /\ ((y IN s) /\ (~ (x = y))))))) = (((~ (s = EMPTY)) /\ (~ (?a. (s = (a INSERT EMPTY))))) ==> (?x. (?y. ((x IN s) /\ ((y IN s) /\ (~ (x = y))))))))
T c= c==> c/\ c~ ! c= cIN b0 f0 cIN b0 part cEMPTY c~ c? / ! c= cIN b1 f0 cIN b1 * * part cINSERT b0 part cEMPTY c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1 c==> c/\ c~ c= f0 part cEMPTY c~ c? / c= f0 * * part cINSERT b0 part cEMPTY c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1
+ |- (((_700551 = _700552) /\ (bounded _700551)) ==> (bounded _700552))
T c==> c/\ c= f0 f1 cbounded f0 cbounded f1
+ |- ((_700532 = _700533) ==> ((s _700533) \/ (~ (s _700532))))
T c==> c= f0 f1 c\/ * f2 f1 c~ * f2 f0
- |- ((!c'. ((~ (c' IN (components s))) \/ (~ (bounded c)))) = ((!c. (~ (c IN (components s)))) \/ (~ (bounded c))))
T c= ! c\/ c~ cIN b0 * part ccomponents f0 c~ cbounded f1 c\/ ! c~ cIN b0 * part ccomponents f0 c~ cbounded f1
+ |- ((\s. ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F)) s)
T * / c==> c~ c==> c/\ c~ ! c~ * b0 b1 c~ c? / ! c= * b0 b2 c= b2 b1 c? / c? / c/\ * b0 b1 c/\ * b0 b2 c~ c= b1 b2 cF f0
- |- ((~ (_700614 = _700615)) \/ ((dimindex _700614) = (dimindex _700615)))
T c\/ c~ c= f0 f1 c= cdimindex f0 cdimindex f1
+ |- (!s. (!c'. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> (~ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c)))))))))))))))))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c~ ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!c'. ((P c') \/ Q)) = ((!c'. (P c')) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ (~ (?c. ((c IN (components s)) /\ (bounded c)))), (~ (c = c')), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (c IN (components s)), (c' IN (components s)) |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c' IN (components s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ (~ (c = c')))))))
T c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> c~ c= f1 f2 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ cIN f2 * part ccomponents f0 c/\ cIN f1 * part ccomponents f0 c/\ c~ cbounded f1 c~ c= f1 f2
+ (~ (connected s)), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((((\c'. ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c'))))) c') ==> (?c. ((c IN (components s)) /\ (bounded c)))) = T)
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= c==> * / c/\ cIN f1 * part ccomponents f0 c/\ cIN b0 * part ccomponents f0 c~ c= f1 b0 f2 c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 cT
+ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))), (~ (?c. ((c IN (components s)) /\ (bounded c)))), (~ (c = c')), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (c IN (components s)), (c' IN (components s)) |- ((c' IN (components s)) /\ (bounded c'))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> c~ c= f1 f2 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c/\ cIN f2 * part ccomponents f0 cbounded f2
+ (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))) |- (!x'. (((\x. ((s x) /\ (!a. (((s (x a)) \/ ((x a) = a)) /\ ((~ (s (x a))) \/ (~ ((x a) = a))))))) x') ==> F))
T c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 ! c==> * / c/\ * f0 f1 ! c/\ c\/ * f0 * b1 b2 c= * b1 b2 b2 c\/ c~ * f0 * b1 b2 c~ c= * b1 b2 b2 b0 cF
- |- ((?x'. (((s x) \/ (x = a)) /\ ((~ (s x')) \/ (~ (x' = a))))) = (((s x) \/ (x = a)) /\ (?x. ((~ (s x)) \/ (~ (x = a))))))
T c= c? / c/\ c\/ * f0 f1 c= f1 f2 c\/ c~ * f0 b0 c~ c= b0 f2 c/\ c\/ * f0 f1 c= f1 f2 c? / c\/ c~ * f0 b0 c~ c= b0 f2
+ |- ((?y. ((s x) /\ ((s y) /\ (~ (x = y))))) = ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))
T c= c? / c/\ * f0 f1 c/\ * f0 b0 c~ c= f1 b0 c/\ * f0 f1 c? / c/\ * f0 b0 c~ c= f1 b0
- (s = EMPTY) |- (F = F)
T c==> c= f0 part cEMPTY c= cF cF
+ (~ (connected s)), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((~ (connected s)) /\ ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> (~ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))))))))))
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c~ ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1
+ (!s. ((s DIFF EMPTY) = s)), (bounded (UNIV DIFF s)), (s = EMPTY) |- (bounded UNIV)
T c==> ! c= * * part cDIFF b0 part cEMPTY b0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c= f0 part cEMPTY cbounded part cUNIV
+ |- (((!s. ((?a. ((components s) = (a INSERT EMPTY))) = ((connected s) /\ (~ (s = EMPTY))))) ==> ((\s. ((?a. ((components s) = (a INSERT EMPTY))) = ((connected s) /\ (~ (s = EMPTY))))) s)) = ((\s. ((?a. ((components s) = (a INSERT EMPTY))) = ((connected s) /\ (~ (s = EMPTY))))) s))
T c= c==> ! c= c? / c= * part ccomponents b0 * * part cINSERT b1 part cEMPTY c/\ cconnected b0 c~ c= b0 part cEMPTY * / c= c? / c= * part ccomponents b0 * * part cINSERT b1 part cEMPTY c/\ cconnected b0 c~ c= b0 part cEMPTY f0 * / c= c? / c= * part ccomponents b0 * * part cINSERT b1 part cEMPTY c/\ cconnected b0 c~ c= b0 part cEMPTY f0
- (~ (s (x' x))) |- ((s (x' x)) ==> (~ (s (x' x))))
T c==> c~ * f0 * f1 f2 c==> * f0 * f1 f2 c~ * f0 * f1 f2
+ |- (((~ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) \/ ((~ (bounded (UNIV DIFF _700570))) \/ ((~ (_700571 IN (components _700570))) \/ ((bounded _700571) \/ ((~ (_700572 IN (components _700570))) \/ ((bounded _700572) \/ (_700572 = _700571))))))) = ((bounded _700571) \/ ((~ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) \/ ((~ (bounded (UNIV DIFF _700570))) \/ ((~ (_700571 IN (components _700570))) \/ ((~ (_700572 IN (components _700570))) \/ ((bounded _700572) \/ (_700572 = _700571))))))))
T c= c\/ c~ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c\/ c~ cbounded * * part cDIFF part cUNIV f0 c\/ c~ cIN f1 * part ccomponents f0 c\/ cbounded f1 c\/ c~ cIN f2 * part ccomponents f0 c\/ cbounded f2 c= f2 f1 c\/ cbounded f1 c\/ c~ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c\/ c~ cbounded * * part cDIFF part cUNIV f0 c\/ c~ cIN f1 * part ccomponents f0 c\/ c~ cIN f2 * part ccomponents f0 c\/ cbounded f2 c= f2 f1
- ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = T)
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV cT
- |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F))))))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F)))))))))) = (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F))))))))))
T c= c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cF
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (((!s. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))))))) ==> ((\s. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))))))) s)) = ((\s. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))))))) s))
T c= c==> ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV b0 c==> c~ cconnected b0 c==> c= b0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b1 part cEMPTY b1 cF * / c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV b0 c==> c~ cconnected b0 c==> c= b0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b1 part cEMPTY b1 cF f0 * / c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV b0 c==> c~ cconnected b0 c==> c= b0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b1 part cEMPTY b1 cF f0
+ |- ((\c'. (!c. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F))))))))))) c')
T * / ! c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN b1 * part ccomponents f0 c==> cIN b0 * part ccomponents f0 c==> c~ c= b1 b0 c==> c~ c? / c/\ cIN b2 * part ccomponents f0 cbounded b2 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b2 c/\ cIN b3 * part ccomponents b2 c/\ c~ cbounded b3 c/\ cIN b3 * part ccomponents b2 c~ cbounded b3 c= b3 b3 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b2 c/\ cIN b3 * part ccomponents b2 c/\ c~ cbounded b3 c/\ cIN b4 * part ccomponents b2 c~ cbounded b4 c= b4 b3 cF f1
+ ((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) |- (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) /\ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y)))))))
T c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c/\ c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1
+ ((\c. (?c'. ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c')))))) c) |- (((?c'. ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c'))))) ==> (?c. ((c IN (components s)) /\ (bounded c)))) = (?c. ((c IN (components s)) /\ (bounded c))))
T c==> * / c? / c/\ cIN b0 * part ccomponents f0 c/\ cIN b1 * part ccomponents f0 c~ c= b0 b1 f1 c= c==> c? / c/\ cIN f1 * part ccomponents f0 c/\ cIN b0 * part ccomponents f0 c~ c= f1 b0 c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c? / c/\ cIN b0 * part ccomponents f0 cbounded b0
- |- ((_700582 = _700584) ==> ((~ (_700583 = _700585)) \/ ((_700584 IN _700585) \/ (~ (_700582 IN _700583)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
- (_700612 = _700613) |- ((_700612 = _700613) /\ ((NUMERAL _700612) = (NUMERAL _700613)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (_700534 = _700535) |- ((_700534 = _700535) /\ ((x' _700534) = (x' _700535)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * f2 f0 * f2 f1
- (_700608 = _700609) |- ((_700608 = _700609) /\ ((BIT1 _700608) = (BIT1 _700609)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- (~ (s (x' x))), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- (((x' x) = x) ==> (~ ((x' x) = x)))
T c==> c~ * f0 * f1 f2 c==> c/\ * f0 f2 ! c/\ c\/ * f0 * f1 b0 c= * f1 b0 b0 c\/ c~ * f0 * f1 b0 c~ c= * f1 b0 b0 c==> c= * f1 f2 f2 c~ c= * f1 f2 f2
+ ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- ((~ (s (x' x))) ==> (s (x' x)))
T c==> c/\ * f0 f1 ! c/\ c\/ * f0 * f2 b0 c= * f2 b0 b0 c\/ c~ * f0 * f2 b0 c~ c= * f2 b0 b0 c==> c~ * f0 * f2 f1 * f0 * f2 f1
- |- ((~ (_700612 = _700613)) \/ ((NUMERAL _700612) = (NUMERAL _700613)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F))))))))) |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F))))))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F)))))))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F))))))))))
T c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cF c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cF
- (_700614 = _700615) |- ((_700614 = _700615) /\ ((dimindex _700614) = (dimindex _700615)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cdimindex f0 cdimindex f1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((?x'. (((s x') \/ (x' = a)) /\ ((~ (s x)) \/ (~ (x = a))))) = ((?x. ((s x) \/ (x = a))) /\ ((~ (s x)) \/ (~ (x = a)))))
T c= c? / c/\ c\/ * f0 b0 c= b0 f1 c\/ c~ * f0 f2 c~ c= f2 f1 c/\ c? / c\/ * f0 b0 c= b0 f1 c\/ c~ * f0 f2 c~ c= f2 f1
+ (!s. ((s DIFF EMPTY) = s)), (bounded (UNIV DIFF s)), (s = EMPTY) |- (((((UNIV DIFF EMPTY) = UNIV) /\ (bounded (UNIV DIFF EMPTY))) ==> (bounded UNIV)) = (bounded UNIV))
T c==> ! c= * * part cDIFF b0 part cEMPTY b0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c= f0 part cEMPTY c= c==> c/\ c= * * part cDIFF part cUNIV part cEMPTY part cUNIV cbounded * * part cDIFF part cUNIV part cEMPTY cbounded part cUNIV cbounded part cUNIV
+ |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> (~ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c)))))))))))))) = T)
T c= c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c~ ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cT
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
+ (bounded (UNIV DIFF s)) |- ((bounded (UNIV DIFF s)) /\ ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> (~ (!s. ((s DIFF EMPTY) = s)))))))
T c==> cbounded * * part cDIFF part cUNIV f0 c/\ cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c~ ! c= * * part cDIFF b0 part cEMPTY b0
+ |- ((\s. (((components s) = EMPTY) = (s = EMPTY))) s)
T * / c= c= * part ccomponents b0 part cEMPTY c= b0 part cEMPTY f0
+ |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- (?c'. ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c'))))), (~ (connected s)), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (?c. ((c IN (components s)) /\ (bounded c)))
T c==> c? / c/\ cIN f0 * part ccomponents f1 c/\ cIN b0 * part ccomponents f1 c~ c= f0 b0 c==> c~ cconnected f1 c==> cbounded * * part cDIFF part cUNIV f1 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c? / c/\ cIN b0 * part ccomponents f1 cbounded b0
- |- ((~ (_700604 = _700606)) \/ ((~ (_700605 = _700607)) \/ ((_700604 DIFF _700605) = (_700606 DIFF _700607))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cDIFF f0 f2 * * part cDIFF f1 f3
+ (~ (?c. ((c IN (components s)) /\ (bounded c)))), (~ (c = c')), (c IN (components s)) |- ((~ (bounded c)) /\ (~ (c = c')))
T c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> c~ c= f1 f2 c==> cIN f1 * part ccomponents f0 c/\ c~ cbounded f1 c~ c= f1 f2
+ (~ (connected s)), (bounded (UNIV DIFF s)), (s = EMPTY), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c= f0 part cEMPTY c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF
+ (~ (s (x' x))), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- (((~ ((x' x) = x)) ==> (s (x' x))) = (s (x' x)))
T c==> c~ * f0 * f1 f2 c==> c/\ * f0 f2 ! c/\ c\/ * f0 * f1 b0 c= * f1 b0 b0 c\/ c~ * f0 * f1 b0 c~ c= * f1 b0 b0 c= c==> c~ c= * f1 f2 f2 * f0 * f1 f2 * f0 * f1 f2
- (_700586 = _700587) |- ((((connected _700586) = (connected _700587)) ==> ((connected _700587) \/ (~ (connected _700586)))) = ((connected _700587) \/ (~ (connected _700586))))
T c==> c= f0 f1 c= c==> c= cconnected f0 cconnected f1 c\/ cconnected f1 c~ cconnected f0 c\/ cconnected f1 c~ cconnected f0
- |- ((_700612 = _700613) ==> ((NUMERAL _700612) = (NUMERAL _700613)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- ((~ (s x)) ==> (s x))
T c==> c/\ * f0 f1 ! c/\ c\/ * f0 * f2 b0 c= * f2 b0 b0 c\/ c~ * f0 * f2 b0 c~ c= * f2 b0 b0 c==> c~ * f0 f1 * f0 f1
+ |- (((~ a) \/ (~ b)) = (~ (a /\ b)))
T c= c\/ c~ f0 c~ f1 c~ c/\ f0 f1
+ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF _700570)) /\ ((_700571 IN (components _700570)) /\ ((_700572 IN (components _700570)) /\ ((~ (bounded _700572)) /\ (~ (_700572 = _700571))))))) ==> (bounded _700571))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV f0 c/\ cIN f1 * part ccomponents f0 c/\ cIN f2 * part ccomponents f0 c/\ c~ cbounded f2 c~ c= f2 f1 cbounded f1
+ |- ((((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y))))))) = (((~ (!x. ((x IN s) = (x IN EMPTY)))) /\ (~ (?a. (!x. ((x IN s) = (x IN (a INSERT EMPTY))))))) ==> (?x. (?y. ((x IN s) /\ ((y IN s) /\ (~ (x = y))))))))
T c= c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 c==> c/\ c~ ! c= cIN b0 f0 cIN b0 part cEMPTY c~ c? / ! c= cIN b1 f0 cIN b1 * * part cINSERT b0 part cEMPTY c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1
+ (~ (bounded UNIV)), (bounded (UNIV DIFF s)), (s = EMPTY) |- ((~ (bounded UNIV)) /\ (~ (!s. ((s DIFF EMPTY) = s))))
T c==> c~ cbounded part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c= f0 part cEMPTY c/\ c~ cbounded part cUNIV c~ ! c= * * part cDIFF b0 part cEMPTY b0
+ (~ (bounded UNIV)), (bounded (UNIV DIFF s)), (s = EMPTY) |- ((!s. ((s DIFF EMPTY) = s)) ==> F)
T c==> c~ cbounded part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c= f0 part cEMPTY c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF
+ (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))), ((\x. ((s x) /\ (!a. (((s (x a)) \/ ((x a) = a)) /\ ((~ (s (x a))) \/ (~ ((x a) = a))))))) x') |- (((\x. ((s x) /\ (!a. (((s (x a)) \/ ((x a) = a)) /\ ((~ (s (x a))) \/ (~ ((x a) = a))))))) x') /\ F)
T c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 c==> * / c/\ * f0 f1 ! c/\ c\/ * f0 * b0 b1 c= * b0 b1 b1 c\/ c~ * f0 * b0 b1 c~ c= * b0 b1 b1 f2 c/\ * / c/\ * f0 f1 ! c/\ c\/ * f0 * b0 b1 c= * b0 b1 b1 c\/ c~ * f0 * b0 b1 c~ c= * b0 b1 b1 f2 cF
+ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F))))))))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cF
+ (!s. ((s DIFF EMPTY) = s)) |- ((bounded (UNIV DIFF EMPTY)) = (((UNIV DIFF EMPTY) = UNIV) /\ (bounded (UNIV DIFF EMPTY))))
T c==> ! c= * * part cDIFF b0 part cEMPTY b0 c= cbounded * * part cDIFF part cUNIV part cEMPTY c/\ c= * * part cDIFF part cUNIV part cEMPTY part cUNIV cbounded * * part cDIFF part cUNIV part cEMPTY
+ (~ (connected s)), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (((\c. (?c'. ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c')))))) c) ==> (?c. ((c IN (components s)) /\ (bounded c))))
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> * / c? / c/\ cIN b0 * part ccomponents f0 c/\ cIN b1 * part ccomponents f0 c~ c= b0 b1 f1 c? / c/\ cIN b0 * part ccomponents f0 cbounded b0
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))), (~ (?c. ((c IN (components s)) /\ (bounded c)))), (~ (c = c')), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (c IN (components s)), (c' IN (components s)) |- F
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> c~ c= f1 f2 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 cF
+ (bounded (UNIV DIFF s)), (s = EMPTY) |- ((s = EMPTY) /\ ((~ (bounded UNIV)) ==> (~ (!s. ((s DIFF EMPTY) = s)))))
T c==> cbounded * * part cDIFF part cUNIV f0 c==> c= f0 part cEMPTY c/\ c= f0 part cEMPTY c==> c~ cbounded part cUNIV c~ ! c= * * part cDIFF b0 part cEMPTY b0
- (!s. ((s DIFF EMPTY) = s)), (~ (bounded UNIV)), (bounded (UNIV DIFF s)), (s = EMPTY) |- ((~ (bounded UNIV)) /\ (bounded UNIV))
T c==> ! c= * * part cDIFF b0 part cEMPTY b0 c==> c~ cbounded part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c= f0 part cEMPTY c/\ c~ cbounded part cUNIV cbounded part cUNIV
- |- ((p ==> (~ p)) = (~ p))
T c= c==> f0 c~ f0 c~ f0
- (s = EMPTY) |- (((_700536 DIFF EMPTY) = _700536) = ((_700536 DIFF EMPTY) = _700536))
T c==> c= f0 part cEMPTY c= c= * * part cDIFF f1 part cEMPTY f1 c= * * part cDIFF f1 part cEMPTY f1
- |- ((_700534 = _700535) ==> ((x' _700534) = (x' _700535)))
T c==> c= f0 f1 c= * f2 f0 * f2 f1
- (_700590 = _700592) |- ((_700590 = _700592) /\ ((~ (_700591 = _700593)) \/ ((_700592 <= _700593) \/ (~ (_700590 <= _700591)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c<= f1 f3 c~ c<= f0 f2
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))), (~ (?c. ((c IN (components s)) /\ (bounded c)))), (~ (c = c')), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (c IN (components s)), (c' IN (components s)) |- ((~ F) ==> F)
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> c~ c= f1 f2 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ cF cF
+ (~ (connected s)), (bounded (UNIV DIFF s)), (s = EMPTY), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((s = EMPTY) /\ F)
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c= f0 part cEMPTY c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ c= f0 part cEMPTY cF
- (?x. ((s x) /\ (!a. (((s (x a)) \/ ((x a) = a)) /\ ((~ (s (x a))) \/ (~ ((x a) = a))))))), (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))) |- F
T c==> c? / c/\ * f0 f1 ! c/\ c\/ * f0 * b0 b1 c= * b0 b1 b1 c\/ c~ * f0 * b0 b1 c~ c= * b0 b1 b1 c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 cF
+ |- (((!s. ((s DIFF EMPTY) = s)) ==> F) = F)
T c= c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF cF
+ (_700532 = _700533) |- ((_700532 = _700533) /\ ((s _700533) \/ (~ (s _700532))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
- (~ ((x' x) = (x' x))) |- ((~ ((x' x) = (x' x))) /\ ((x' x) = (x' x)))
T c==> c~ c= * f0 f1 * f0 f1 c/\ c~ c= * f0 f1 * f0 f1 c= * f0 f1 * f0 f1
+ (~ (connected s)), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((~ ((components s) = EMPTY)) /\ (~ (?a. ((components s) = (a INSERT EMPTY)))))
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ c~ c= * part ccomponents f0 part cEMPTY c~ c? / c= * part ccomponents f0 * * part cINSERT b0 part cEMPTY
- ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F), (((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) ==> ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F)) |- (((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) /\ ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F))
T c==> c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c==> c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c/\ c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF
+ (~ (?c. ((c IN (components s)) /\ (bounded c)))) |- (!c. ((~ (c IN (components s))) \/ (~ (bounded c))))
T c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 ! c\/ c~ cIN b0 * part ccomponents f0 c~ cbounded b0
+ (~ (connected s)), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((((\c. (?c'. ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c')))))) c) ==> (?c. ((c IN (components s)) /\ (bounded c)))) = T)
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= c==> * / c? / c/\ cIN b0 * part ccomponents f0 c/\ cIN b1 * part ccomponents f0 c~ c= b0 b1 f1 c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 cT
- |- ((((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))))))) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))))) = ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))))))))
T c= c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF
+ (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (c IN (components s)) |- ((c IN (components s)) /\ ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> (~ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c)))))))))))
T c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * part ccomponents f0 c/\ cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c~ ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1
+ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) |- ((bounded _700571) \/ ((~ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) \/ ((~ (bounded (UNIV DIFF _700570))) \/ ((~ (_700571 IN (components _700570))) \/ ((~ (_700572 IN (components _700570))) \/ ((bounded _700572) \/ (_700572 = _700571)))))))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c\/ cbounded f0 c\/ c~ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c\/ c~ cbounded * * part cDIFF part cUNIV f1 c\/ c~ cIN f0 * part ccomponents f1 c\/ c~ cIN f2 * part ccomponents f1 c\/ cbounded f2 c= f2 f0
- |- ((_700608 = _700609) ==> ((BIT1 _700608) = (BIT1 _700609)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ |- ((~ (a \/ b)) = ((~ a) /\ (~ b)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
- ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) |- ((((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) ==> ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F)) ==> ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F))
T c==> c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c==> c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF
+ (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))) |- ((\x. (!y. ((~ (s x)) \/ ((~ (s y)) \/ (x = y))))) _700529)
T c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 * / ! c\/ c~ * f0 b0 c\/ c~ * f0 b1 c= b0 b1 f1
+ |- ((\s. (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))))))) s)
T * / c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV b0 c==> c~ cconnected b0 c==> c= b0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b1 part cEMPTY b1 cF f0
- |- ((((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) ==> ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F)) = ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F))
T c= c==> c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF
+ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> (~ (!s. ((s DIFF EMPTY) = s))))))))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c~ ! c= * * part cDIFF b0 part cEMPTY b0
- (_700582 = _700584) |- ((_700582 = _700584) /\ ((~ (_700583 = _700585)) \/ ((_700584 IN _700585) \/ (~ (_700582 IN _700583)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
+ (~ (connected s)), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), ((\c'. ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c'))))) c') |- (((\c'. ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c'))))) c') /\ (?c. ((c IN (components s)) /\ (bounded c))))
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> * / c/\ cIN f1 * part ccomponents f0 c/\ cIN b0 * part ccomponents f0 c~ c= f1 b0 f2 c/\ * / c/\ cIN f1 * part ccomponents f0 c/\ cIN b0 * part ccomponents f0 c~ c= f1 b0 f2 c? / c/\ cIN b0 * part ccomponents f0 cbounded b0
- (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))), (~ (?c. ((c IN (components s)) /\ (bounded c)))), (~ (bounded c')), (~ (c = c')), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (c IN (components s)), (c' IN (components s)) |- ((~ (bounded c')) /\ (bounded c'))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> c~ cbounded f1 c==> c~ c= f2 f1 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f2 * part ccomponents f0 c==> cIN f1 * part ccomponents f0 c/\ c~ cbounded f1 cbounded f1
+ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))), (~ (?c. ((c IN (components s)) /\ (bounded c)))), (~ (c = c')), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)), (c IN (components s)), (c' IN (components s)) |- ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) /\ (~ (!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c)))))))
T c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> c~ c= f1 f2 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c/\ ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c~ ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1
+ (~ (connected s)), (bounded (UNIV DIFF s)), (s = EMPTY), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- F
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c= f0 part cEMPTY c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV cF
+ |- (((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) = (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y))))))))
T c= c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1
- |- ((_700602 = _700603) ==> ((components _700602) = (components _700603)))
T c==> c= f0 f1 c= * part ccomponents f0 * part ccomponents f1
+ (~ (connected s)), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- (~ (s = EMPTY))
T c==> c~ cconnected f0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c~ c= f0 part cEMPTY
- |- ((!x'. ((~ (s x)) \/ (!y. ((~ (s y)) \/ (x' = y))))) = ((~ (s x)) \/ (!x. (!y. ((~ (s y)) \/ (x = y))))))
T c= ! c\/ c~ * f0 f1 ! c\/ c~ * f0 b1 c= b0 b1 c\/ c~ * f0 f1 ! ! c\/ c~ * f0 b1 c= b0 b1
+ ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- (((!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a))))) ==> ((\a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a))))) _700531)) = ((\a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a))))) _700531))
T c==> c/\ * f0 f1 ! c/\ c\/ * f0 * f2 b0 c= * f2 b0 b0 c\/ c~ * f0 * f2 b0 c~ c= * f2 b0 b0 c= c==> ! c/\ c\/ * f0 * f2 b0 c= * f2 b0 b0 c\/ c~ * f0 * f2 b0 c~ c= * f2 b0 b0 * / c/\ c\/ * f0 * f2 b0 c= * f2 b0 b0 c\/ c~ * f0 * f2 b0 c~ c= * f2 b0 b0 f3 * / c/\ c\/ * f0 * f2 b0 c= * f2 b0 b0 c\/ c~ * f0 * f2 b0 c~ c= * f2 b0 b0 f3
- |- (((((~ (s = EMPTY)) /\ (~ (?a. (s = (a INSERT EMPTY))))) ==> (?x. (?y. ((x IN s) /\ ((y IN s) /\ (~ (x = y))))))) ==> (((~ (s = EMPTY)) /\ (~ (?a. (s = (a INSERT EMPTY))))) ==> (?x. (?y. ((x IN s) /\ ((y IN s) /\ (~ (x = y)))))))) = (((~ (s = EMPTY)) /\ (~ (?a. (s = (a INSERT EMPTY))))) ==> (?x. (?y. ((x IN s) /\ ((y IN s) /\ (~ (x = y))))))))
T c= c==> c==> c/\ c~ c= f0 part cEMPTY c~ c? / c= f0 * * part cINSERT b0 part cEMPTY c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1 c==> c/\ c~ c= f0 part cEMPTY c~ c? / c= f0 * * part cINSERT b0 part cEMPTY c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1 c==> c/\ c~ c= f0 part cEMPTY c~ c? / c= f0 * * part cINSERT b0 part cEMPTY c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1
- |- (T = (((s (x' _700531)) \/ ((x' _700531) = _700531)) = (((x' _700531) = _700531) \/ (s (x' _700531)))))
T c= cT c= c\/ * f0 * f1 f2 c= * f1 f2 f2 c\/ c= * f1 f2 f2 * f0 * f1 f2
- |- (T = (((~ (_700569 IN (components s))) \/ (~ (bounded _700569))) = ((~ (bounded _700569)) \/ (~ (_700569 IN (components s))))))
T c= cT c= c\/ c~ cIN f0 * part ccomponents f1 c~ cbounded f0 c\/ c~ cbounded f0 c~ cIN f0 * part ccomponents f1
- (_700583 = _700585), (_700582 = _700584) |- ((_700583 = _700585) /\ ((_700584 IN _700585) \/ (~ (_700582 IN _700583))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cIN f3 f1 c~ cIN f2 f0
- |- ((~ ((x' x) = (x' x))) ==> ((x' x) = (x' x)))
T c==> c~ c= * f0 f1 * f0 f1 c= * f0 f1 * f0 f1
- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))))
T c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c/\ c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF
- |- ((!c'. (P \/ (Q c'))) = (P \/ (!c'. (Q c'))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- (_700604 = _700606) |- ((_700604 = _700606) /\ ((~ (_700605 = _700607)) \/ ((_700604 DIFF _700605) = (_700606 DIFF _700607))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cDIFF f0 f2 * * part cDIFF f1 f3
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) ==> ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F)) ==> (((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) ==> ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF
- (!s. ((s DIFF EMPTY) = s)), (bounded (UNIV DIFF s)), (s = EMPTY) |- ((~ (bounded UNIV)) ==> (bounded UNIV))
T c==> ! c= * * part cDIFF b0 part cEMPTY b0 c==> cbounded * * part cDIFF part cUNIV f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV cbounded part cUNIV
- (~ (s x)), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- ((~ (s x)) /\ (s x))
T c==> c~ * f0 f1 c==> c/\ * f0 f1 ! c/\ c\/ * f0 * f2 b0 c= * f2 b0 b0 c\/ c~ * f0 * f2 b0 c~ c= * f2 b0 b0 c/\ c~ * f0 f1 * f0 f1
- (_700590 = _700592) |- ((_700591 = _700593) ==> ((_700592 <= _700593) \/ (~ (_700590 <= _700591))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c<= f1 f3 c~ c<= f0 f2
- (!s. ((s DIFF EMPTY) = s)), (~ ((UNIV DIFF EMPTY) = UNIV)) |- ((~ ((UNIV DIFF EMPTY) = UNIV)) /\ ((UNIV DIFF EMPTY) = UNIV))
T c==> ! c= * * part cDIFF b0 part cEMPTY b0 c==> c~ c= * * part cDIFF part cUNIV part cEMPTY part cUNIV c/\ c~ c= * * part cDIFF part cUNIV part cEMPTY part cUNIV c= * * part cDIFF part cUNIV part cEMPTY part cUNIV
- |- ((~ (_700534 = _700535)) \/ ((x' _700534) = (x' _700535)))
T c\/ c~ c= f0 f1 c= * f2 f0 * f2 f1
- (?c'. ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c'))))), (~ (connected s)), (bounded (UNIV DIFF s)), ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((?c'. ((c IN (components s)) /\ ((c' IN (components s)) /\ (~ (c = c'))))) /\ (?c. ((c IN (components s)) /\ (bounded c))))
T c==> c? / c/\ cIN f0 * part ccomponents f1 c/\ cIN b0 * part ccomponents f1 c~ c= f0 b0 c==> c~ cconnected f1 c==> cbounded * * part cDIFF part cUNIV f1 c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ c? / c/\ cIN f0 * part ccomponents f1 c/\ cIN b0 * part ccomponents f1 c~ c= f0 b0 c? / c/\ cIN b0 * part ccomponents f1 cbounded b0
- (~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) |- ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) /\ F)
T c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 c/\ c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF
- (_700590 = _700592), (_700591 = _700593) |- ((_700591 = _700593) /\ ((_700592 <= _700593) \/ (~ (_700590 <= _700591))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c<= f1 f3 c~ c<= f0 f2
- |- ((_700614 = _700615) ==> ((dimindex _700614) = (dimindex _700615)))
T c==> c= f0 f1 c= cdimindex f0 cdimindex f1
- (s = EMPTY) |- (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) = ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)))
T c==> c= f0 part cEMPTY c= c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV
- (~ ((x' x) = x)) |- (((x' x) = x) ==> (~ ((x' x) = x)))
T c==> c~ c= * f0 f1 f1 c==> c= * f0 f1 f1 c~ c= * f0 f1 f1
- |- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))))
T c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF
- ((~ (s = EMPTY)) /\ (~ (?a. (s = (a INSERT EMPTY))))) |- ((((~ (s = EMPTY)) /\ (~ (?a. (s = (a INSERT EMPTY))))) ==> (?x. (?y. ((x IN s) /\ ((y IN s) /\ (~ (x = y))))))) ==> (?x. (?y. ((x IN s) /\ ((y IN s) /\ (~ (x = y)))))))
T c==> c/\ c~ c= f0 part cEMPTY c~ c? / c= f0 * * part cINSERT b0 part cEMPTY c==> c==> c/\ c~ c= f0 part cEMPTY c~ c? / c= f0 * * part cINSERT b0 part cEMPTY c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1 c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1
- ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))))))) |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))))))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))))))))
T c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c/\ c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF
- (s = EMPTY) |- ((~ (bounded UNIV)) = (~ (bounded UNIV)))
T c==> c= f0 part cEMPTY c= c~ cbounded part cUNIV c~ cbounded part cUNIV
- |- ((!c. (P c)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (_700590 = _700592), (_700591 = _700593) |- ((((_700590 <= _700591) = (_700592 <= _700593)) ==> ((_700592 <= _700593) \/ (~ (_700590 <= _700591)))) = ((_700592 <= _700593) \/ (~ (_700590 <= _700591))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= c<= f0 f2 c<= f1 f3 c\/ c<= f1 f3 c~ c<= f0 f2 c\/ c<= f1 f3 c~ c<= f0 f2
- |- ((?x'. ((s x) /\ (?y. ((s y) /\ (~ (x' = y)))))) = ((s x) /\ (?x. (?y. ((s y) /\ (~ (x = y)))))))
T c= c? / c/\ * f0 f1 c? / c/\ * f0 b1 c~ c= b0 b1 c/\ * f0 f1 c? / c? / c/\ * f0 b1 c~ c= b0 b1
- (_700610 = _700611) |- ((_700610 = _700611) /\ ((BIT0 _700610) = (BIT0 _700611)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- (~ (c IN (components s))), (c IN (components s)) |- ((~ (c IN (components s))) /\ (c IN (components s)))
T c==> c~ cIN f0 * part ccomponents f1 c==> cIN f0 * part ccomponents f1 c/\ c~ cIN f0 * part ccomponents f1 cIN f0 * part ccomponents f1
- |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))))))) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((s = EMPTY) ==> ((~ (bounded UNIV)) ==> ((!s. ((s DIFF EMPTY) = s)) ==> F))))))))
T c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> c= f0 part cEMPTY c==> c~ cbounded part cUNIV c==> ! c= * * part cDIFF b0 part cEMPTY b0 cF
- |- ((~ (_700610 = _700611)) \/ ((BIT0 _700610) = (BIT0 _700611)))
T c\/ c~ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- ((!x'. ((~ (s x')) \/ (!y. ((~ (s y)) \/ (x = y))))) = ((!x. (~ (s x))) \/ (!y. ((~ (s y)) \/ (x = y)))))
T c= ! c\/ c~ * f0 b0 ! c\/ c~ * f0 b1 c= f1 b1 c\/ ! c~ * f0 b0 ! c\/ c~ * f0 b0 c= f1 b0
- |- ((~ (_700586 = _700587)) \/ ((connected _700587) \/ (~ (connected _700586))))
T c\/ c~ c= f0 f1 c\/ cconnected f1 c~ cconnected f0
- (_700604 = _700606) |- ((_700605 = _700607) ==> ((_700604 DIFF _700605) = (_700606 DIFF _700607)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cDIFF f0 f2 * * part cDIFF f1 f3
- |- ((_700590 = _700592) ==> ((~ (_700591 = _700593)) \/ ((_700592 <= _700593) \/ (~ (_700590 <= _700591)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c<= f1 f3 c~ c<= f0 f2
- |- ((((~ (s = EMPTY)) /\ (~ (?a. (s = (a INSERT EMPTY))))) ==> (?x. (?y. ((x IN s) /\ ((y IN s) /\ (~ (x = y))))))) ==> (((~ (s = EMPTY)) /\ (~ (?a. (s = (a INSERT EMPTY))))) ==> (?x. (?y. ((x IN s) /\ ((y IN s) /\ (~ (x = y))))))))
T c==> c==> c/\ c~ c= f0 part cEMPTY c~ c? / c= f0 * * part cINSERT b0 part cEMPTY c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1 c==> c/\ c~ c= f0 part cEMPTY c~ c? / c= f0 * * part cINSERT b0 part cEMPTY c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1
- (!s. ((s DIFF EMPTY) = s)) |- ((~ ((UNIV DIFF EMPTY) = UNIV)) ==> ((UNIV DIFF EMPTY) = UNIV))
T c==> ! c= * * part cDIFF b0 part cEMPTY b0 c==> c~ c= * * part cDIFF part cUNIV part cEMPTY part cUNIV c= * * part cDIFF part cUNIV part cEMPTY part cUNIV
- ((~ (s = EMPTY)) /\ (~ (?a. (s = (a INSERT EMPTY))))), (((~ (s = EMPTY)) /\ (~ (?a. (s = (a INSERT EMPTY))))) ==> (?x. (?y. ((x IN s) /\ ((y IN s) /\ (~ (x = y))))))) |- ((((~ (s = EMPTY)) /\ (~ (?a. (s = (a INSERT EMPTY))))) ==> (?x. (?y. ((x IN s) /\ ((y IN s) /\ (~ (x = y))))))) /\ (?x. (?y. ((x IN s) /\ ((y IN s) /\ (~ (x = y)))))))
T c==> c/\ c~ c= f0 part cEMPTY c~ c? / c= f0 * * part cINSERT b0 part cEMPTY c==> c==> c/\ c~ c= f0 part cEMPTY c~ c? / c= f0 * * part cINSERT b0 part cEMPTY c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1 c/\ c==> c/\ c~ c= f0 part cEMPTY c~ c? / c= f0 * * part cINSERT b0 part cEMPTY c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1 c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1
- |- (T = (((~ (_700551 = _700552)) \/ ((bounded _700552) \/ (~ (bounded _700551)))) = ((bounded _700552) \/ ((~ (_700551 = _700552)) \/ (~ (bounded _700551))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ cbounded f1 c~ cbounded f0 c\/ cbounded f1 c\/ c~ c= f0 f1 c~ cbounded f0
- ((~ (s = EMPTY)) /\ (~ (?a. (s = (a INSERT EMPTY))))), (((~ (s = EMPTY)) /\ (~ (?a. (s = (a INSERT EMPTY))))) ==> (?x. (?y. ((x IN s) /\ ((y IN s) /\ (~ (x = y))))))) |- (((~ (s = EMPTY)) /\ (~ (?a. (s = (a INSERT EMPTY))))) /\ (?x. (?y. ((x IN s) /\ ((y IN s) /\ (~ (x = y)))))))
T c==> c/\ c~ c= f0 part cEMPTY c~ c? / c= f0 * * part cINSERT b0 part cEMPTY c==> c==> c/\ c~ c= f0 part cEMPTY c~ c? / c= f0 * * part cINSERT b0 part cEMPTY c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1 c/\ c/\ c~ c= f0 part cEMPTY c~ c? / c= f0 * * part cINSERT b0 part cEMPTY c? / c? / c/\ cIN b0 f0 c/\ cIN b1 f0 c~ c= b0 b1
- |- ((~ (_700590 = _700592)) \/ ((~ (_700591 = _700593)) \/ ((_700592 <= _700593) \/ (~ (_700590 <= _700591)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c<= f1 f3 c~ c<= f0 f2
- (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- ((~ F) ==> F)
T c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 c==> c/\ * f0 f1 ! c/\ c\/ * f0 * f2 b0 c= * f2 b0 b0 c\/ c~ * f0 * f2 b0 c~ c= * f2 b0 b0 c==> c~ cF cF
- |- ((!y'. ((~ (s y)) \/ (x = y'))) = ((~ (s y)) \/ (!y. (x = y))))
T c= ! c\/ c~ * f0 f1 c= f2 b0 c\/ c~ * f0 f1 ! c= f2 b0
- ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) |- ((~ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) ==> ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)))
T c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> c~ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV
- |- (((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F))))))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F)))))))))) ==> ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F))))))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) ==> ((bounded (UNIV DIFF s)) ==> ((~ (connected s)) ==> ((c IN (components s)) ==> ((c' IN (components s)) ==> ((~ (c = c')) ==> ((~ (?c. ((c IN (components s)) /\ (bounded c)))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> ((!s. (!c. (!c'. ((((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV)) /\ ((bounded (UNIV DIFF s)) /\ ((c IN (components s)) /\ ((~ (bounded c)) /\ ((c' IN (components s)) /\ (~ (bounded c'))))))) ==> (c' = c))))) ==> F)))))))))))
T c==> c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cF c==> c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cF c==> c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c==> cbounded * * part cDIFF part cUNIV f0 c==> c~ cconnected f0 c==> cIN f1 * part ccomponents f0 c==> cIN f2 * part ccomponents f0 c==> c~ c= f1 f2 c==> c~ c? / c/\ cIN b0 * part ccomponents f0 cbounded b0 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 c==> ! ! ! c==> c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c/\ cbounded * * part cDIFF part cUNIV b0 c/\ cIN b1 * part ccomponents b0 c/\ c~ cbounded b1 c/\ cIN b2 * part ccomponents b0 c~ cbounded b2 c= b2 b1 cF
- |- ((?c. ((P c) /\ Q)) = ((?c. (P c)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- (_700582 = _700584) |- ((_700583 = _700585) ==> ((_700584 IN _700585) \/ (~ (_700582 IN _700583))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
- ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) |- (((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F) /\ ((~ (((~ (!x. (~ (s x)))) /\ (~ (?a. (!x. ((s x) = (x = a)))))) ==> (?x. (?y. ((s x) /\ ((s y) /\ (~ (x = y)))))))) ==> F))
T c==> c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c/\ c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF c==> c~ c==> c/\ c~ ! c~ * f0 b0 c~ c? / ! c= * f0 b1 c= b1 b0 c? / c? / c/\ * f0 b0 c/\ * f0 b1 c~ c= b0 b1 cF
- (?x. ((s x) /\ (!a. (((s (x a)) \/ ((x a) = a)) /\ ((~ (s (x a))) \/ (~ ((x a) = a))))))), (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))) |- ((?x. ((s x) /\ (!a. (((s (x a)) \/ ((x a) = a)) /\ ((~ (s (x a))) \/ (~ ((x a) = a))))))) /\ F)
T c==> c? / c/\ * f0 f1 ! c/\ c\/ * f0 * b0 b1 c= * b0 b1 b1 c\/ c~ * f0 * b0 b1 c~ c= * b0 b1 b1 c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 c/\ c? / c/\ * f0 f1 ! c/\ c\/ * f0 * b0 b1 c= * b0 b1 b1 c\/ c~ * f0 * b0 b1 c~ c= * b0 b1 b1 cF
- (~ (?x. ((s x) /\ (?y. ((s y) /\ (~ (x = y))))))), (~ ((x' x) = x)), ((s x) /\ (!a. (((s (x' a)) \/ ((x' a) = a)) /\ ((~ (s (x' a))) \/ (~ ((x' a) = a)))))) |- ((s (x' x)) ==> (~ (s (x' x))))
T c==> c~ c? / c/\ * f0 b0 c? / c/\ * f0 b1 c~ c= b0 b1 c==> c~ c= * f1 f2 f2 c==> c/\ * f0 f2 ! c/\ c\/ * f0 * f1 b0 c= * f1 b0 b0 c\/ c~ * f0 * f1 b0 c~ c= * f1 b0 b0 c==> * f0 * f1 f2 c~ * f0 * f1 f2
