N Trigonometry1.BASIS_3
C |- ((((basis (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((basis (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0))) /\ ((((basis (NUMERAL (BIT1 _0))) $ (NUMERAL (BIT1 (BIT1 _0)))) = (real_of_num (NUMERAL _0))) /\ ((((basis (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((basis (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((basis (NUMERAL (BIT0 (BIT1 _0)))) $ (NUMERAL (BIT1 (BIT1 _0)))) = (real_of_num (NUMERAL _0))) /\ ((((basis (NUMERAL (BIT1 (BIT1 _0)))) $ (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0))) /\ ((((basis (NUMERAL (BIT1 (BIT1 _0)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0))) /\ (((basis (NUMERAL (BIT1 (BIT1 _0)))) $ (NUMERAL (BIT1 (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c/\ c= c$ cbasis cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= c$ cbasis cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= c$ cbasis cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= c$ cbasis cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= c$ cbasis cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= c$ cbasis cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= c$ cbasis cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= c$ cbasis cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c$ cbasis cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D DIMINDEX_3
A |- ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0))))
T c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0
D FORALL_3
A |- (!P. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (P i))) = ((P (NUMERAL (BIT1 _0))) /\ ((P (NUMERAL (BIT0 (BIT1 _0)))) /\ (P (NUMERAL (BIT1 (BIT1 _0))))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 * f0 b0 c/\ * f0 cNUMERAL cBIT1 c_0 c/\ * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
D basis
A |- (!k. ((basis k) = (lambdai. (((COND (i = k)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))))
T c= cbasis f0 clambda / cCOND c= b0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\k. ((basis k) = (lambdai. (((COND (i = k)) (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))))) k)
T * / c= cbasis b0 clambda / cCOND c= b1 b0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
+ |- ((\P. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (P i))) = ((P (NUMERAL (BIT1 _0))) /\ ((P (NUMERAL (BIT0 (BIT1 _0)))) /\ (P (NUMERAL (BIT1 (BIT1 _0)))))))) P)
T * / c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT1 cBIT1 c_0 * b0 b1 c/\ * b0 cNUMERAL cBIT1 c_0 c/\ * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
- |- ((!i. t) = t)
T c= ! f0 f0
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
+ |- (((lambda g) $ (NUMERAL (BIT0 (BIT1 _0)))) = (g (NUMERAL (BIT0 (BIT1 _0)))))
T c= c$ clambda f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((lambda g) $ (NUMERAL (BIT1 _0))) = (g (NUMERAL (BIT1 _0))))
T c= c$ clambda f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
+ |- ((((lambda g) $ (NUMERAL (BIT1 _0))) = (g (NUMERAL (BIT1 _0)))) /\ ((((lambda g) $ (NUMERAL (BIT0 (BIT1 _0)))) = (g (NUMERAL (BIT0 (BIT1 _0))))) /\ (((lambda g) $ (NUMERAL (BIT1 (BIT1 _0)))) = (g (NUMERAL (BIT1 (BIT1 _0)))))))
T c/\ c= c$ clambda f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 c/\ c= c$ clambda f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ clambda f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
+ |- (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = F)
T c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
+ |- (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0))) = F)
T c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cF
+ |- (((!P. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (P i))) = ((P (NUMERAL (BIT1 _0))) /\ ((P (NUMERAL (BIT0 (BIT1 _0)))) /\ (P (NUMERAL (BIT1 (BIT1 _0)))))))) ==> ((\P. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (P i))) = ((P (NUMERAL (BIT1 _0))) /\ ((P (NUMERAL (BIT0 (BIT1 _0)))) /\ (P (NUMERAL (BIT1 (BIT1 _0)))))))) P)) = ((\P. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (P i))) = ((P (NUMERAL (BIT1 _0))) /\ ((P (NUMERAL (BIT0 (BIT1 _0)))) /\ (P (NUMERAL (BIT1 (BIT1 _0)))))))) P))
T c= c==> ! c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT1 cBIT1 c_0 * b0 b1 c/\ * b0 cNUMERAL cBIT1 c_0 c/\ * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 * / c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT1 cBIT1 c_0 * b0 b1 c/\ * b0 cNUMERAL cBIT1 c_0 c/\ * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 f0 * / c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT1 cBIT1 c_0 * b0 b1 c/\ * b0 cNUMERAL cBIT1 c_0 c/\ * b0 cNUMERAL cBIT0 cBIT1 c_0 * b0 cNUMERAL cBIT1 cBIT1 c_0 f0
+ |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((lambda g) $ i) = (g i)))) = ((((lambda g) $ (NUMERAL (BIT1 _0))) = (g (NUMERAL (BIT1 _0)))) /\ ((((lambda g) $ (NUMERAL (BIT0 (BIT1 _0)))) = (g (NUMERAL (BIT0 (BIT1 _0))))) /\ (((lambda g) $ (NUMERAL (BIT1 (BIT1 _0)))) = (g (NUMERAL (BIT1 (BIT1 _0))))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 cBIT1 c_0 c= c$ clambda f0 b0 * f0 b0 c/\ c= c$ clambda f0 cNUMERAL cBIT1 c_0 * f0 cNUMERAL cBIT1 c_0 c/\ c= c$ clambda f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ clambda f0 cNUMERAL cBIT1 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
- |- (F = (~ T))
T c= cF c~ cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- |- ((~ T) = F)
T c= c~ cT cF
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (~ (~ T))
T c~ c~ cT
