N Local_lemmas.PLANE_AFFINE_HUL_INTER_P
C |- (((plane P) /\ ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P)) ==> ((((hull affine) (x INSERT (((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))) INSERT EMPTY))) INTER P) = (x INSERT EMPTY)))
T c==> c/\ cplane f0 cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c= * * part cINTER * * part chull part caffine * * part cINSERT f1 * * part cINSERT cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY f0 * * part cINSERT f1 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_ENTIRE
A |- (!x. (!y. ((((real_mul x) y) = (real_of_num (NUMERAL _0))) = ((x = (real_of_num (NUMERAL _0))) \/ (y = (real_of_num (NUMERAL _0)))))))
T c= c= creal_mul f0 f1 creal_of_num cNUMERAL c_0 c\/ c= f0 creal_of_num cNUMERAL c_0 c= f1 creal_of_num cNUMERAL c_0
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Misc_defs_and_lemmas.IN_ELIM_THM'
A |- ((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D INSERT_SUBSET
A |- (!x. (!s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t))))))
T c= cSUBSET * * part cINSERT f0 f1 f2 c/\ cIN f0 f2 cSUBSET f1 f2
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_sub
A |- (!x. (!y. (((vector_sub x) y) = (lambdai. ((real_sub (x $ i)) (y $ i))))))
T c= cvector_sub f0 f1 clambda / creal_sub c$ f0 b0 c$ f1 b0
D vector_mul
A |- (!c. (!x. (((% c) x) = (lambdai. ((real_mul c) (x $ i))))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
D vec
A |- (!n. ((vec n) = (lambdai. (real_of_num n))))
T c= cvec f0 clambda / creal_of_num f0
D VECTOR_ADD_RID
A |- (!x. (((vector_add x) (vec (NUMERAL _0))) = x))
T c= cvector_add f0 cvec cNUMERAL c_0 f0
D VECTOR_MUL_LID
A |- (!x. (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= c% creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D VECTOR_MUL_LZERO
A |- (!x. (((% (real_of_num (NUMERAL _0))) x) = (vec (NUMERAL _0))))
T c= c% creal_of_num cNUMERAL c_0 f0 cvec cNUMERAL c_0
D DOT_RMUL
A |- (!c. (!x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y))))))
T c= cdot f0 c% f1 f2 creal_mul f1 cdot f0 f2
D DOT_EQ_0
A |- (!x. ((((dot x) x) = (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0)))))
T c= c= cdot f0 f0 creal_of_num cNUMERAL c_0 c= f0 cvec cNUMERAL c_0
D VECTOR_MUL_EQ_0
A |- (!a. (!x. ((((% a) x) = (vec (NUMERAL _0))) = ((a = (real_of_num (NUMERAL _0))) \/ (x = (vec (NUMERAL _0)))))))
T c= c= c% f0 f1 cvec cNUMERAL c_0 c\/ c= f0 creal_of_num cNUMERAL c_0 c= f1 cvec cNUMERAL c_0
D AFFINE_HULL_2
A |- (!a. (!b. (((hull affine) (a INSERT (b INSERT EMPTY))) = (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) a)) ((% v) b))))))))))
T c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / c? / cSETSPEC b0 c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b1 f0 c% b2 f1
D Trigonometry.JLWZFBH4
A |- (!s. ((coplanar s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c= ccoplanar f0 c? / c? / c? / cSUBSET f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
D Sphere.plane
A |- (!x. ((plane x) = (?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))
T c= cplane f0 c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
D Local_lemmas.COPLANAR_IFF_CROSS_DOT
A |- ((coplanar (x INSERT (y INSERT (z INSERT (t INSERT EMPTY))))) = (((dot ((cross ((vector_sub y) x)) ((vector_sub z) x))) ((vector_sub t) x)) = (real_of_num (NUMERAL _0))))
T c= ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cdot ccross cvector_sub f1 f0 cvector_sub f2 f0 cvector_sub f3 f0 creal_of_num cNUMERAL c_0
+ |- (((!q'. (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) = p') ==> ((p' ==> (((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)) = q')) ==> (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P))) = (p' ==> q'))))) ==> ((\q'. (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) = p') ==> ((p' ==> (((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)) = q')) ==> (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P))) = (p' ==> q'))))) q')) = ((\q'. (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) = p') ==> ((p' ==> (((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)) = q')) ==> (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 f5 c==> c==> f5 c= c/\ c? / c? / c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b1 f0 c% b2 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 b0 c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 c/\ c? / c? / c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b1 f0 c% b2 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 c==> f5 b0 * / c==> c= c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 f5 c==> c==> f5 c= c/\ c? / c? / c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b1 f0 c% b2 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 b0 c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 c/\ c? / c? / c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b1 f0 c% b2 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 c==> f5 b0 f6 * / c==> c= c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 f5 c==> c==> f5 c= c/\ c? / c? / c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b1 f0 c% b2 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 b0 c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 c/\ c? / c? / c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b1 f0 c% b2 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 c==> f5 b0 f6
+ (plane P), (x' IN P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- (((\v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))) v) ==> (x' = x))
T c==> cplane f0 c==> cIN f1 f0 c==> cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> * / c/\ c= creal_add f5 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f5 f2 c% b0 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 f6 c= f1 f2
+ |- ((!i. ((P i) ==> (Q i))) ==> ((!i. (P i)) ==> (!i. (Q i))))
T c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
- (~ (((real_sub ((real_add (a $ i)) (b $ i))) (a $ i)) = (b $ i))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_sub creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c$ f2 f1 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((!x'. (!z. (!y. (!x. (!P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F)))))))) ==> ((\x'. (!z. (!y. (!x. (!P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F)))))))) x')) = ((\x'. (!z. (!y. (!x. (!P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F)))))))) x'))
T c= c==> ! ! ! ! ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c= b4 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ c/\ cIN b3 b4 c/\ cIN b2 b4 c/\ cIN b1 b4 cSUBSET part cEMPTY b4 c/\ c= creal_add b6 b5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= b0 cvector_add c% b6 b3 c% b5 cvector_add b3 ccross cvector_sub b2 b3 cvector_sub b1 b3 cIN b0 b4 c? / c? / c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN b2 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN b1 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cF * / ! ! ! ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c= b4 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ c/\ cIN b3 b4 c/\ cIN b2 b4 c/\ cIN b1 b4 cSUBSET part cEMPTY b4 c/\ c= creal_add b6 b5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= b0 cvector_add c% b6 b3 c% b5 cvector_add b3 ccross cvector_sub b2 b3 cvector_sub b1 b3 cIN b0 b4 c? / c? / c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN b2 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN b1 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cF f0 * / ! ! ! ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c= b4 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ c/\ cIN b3 b4 c/\ cIN b2 b4 c/\ cIN b1 b4 cSUBSET part cEMPTY b4 c/\ c= creal_add b6 b5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= b0 cvector_add c% b6 b3 c% b5 cvector_add b3 ccross cvector_sub b2 b3 cvector_sub b1 b3 cIN b0 b4 c? / c? / c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN b2 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN b1 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cF f0
+ |- (((((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% (real_of_num (NUMERAL (BIT1 _0)))) x)) ((% (real_of_num (NUMERAL _0))) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))) = ((\v. ((((real_add (real_of_num (NUMERAL (BIT1 _0)))) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% (real_of_num (NUMERAL (BIT1 _0)))) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))) (real_of_num (NUMERAL _0))))
T c= c/\ c= creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_of_num cNUMERAL c_0 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 * / c/\ c= creal_add creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% b0 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 creal_of_num cNUMERAL c_0
- |- (((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F) = (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))
T c= c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ |- (!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) b) $ i) = (a $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((b $ i) = ((vec (NUMERAL _0)) $ i)))))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f1 f2 f0 c$ f1 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f2 f0 c$ cvec cNUMERAL c_0 f0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3
- (~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) |- F
T c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF
- (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) |- ((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) /\ ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) = (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))))
T c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c/\ c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c= c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0
- (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((~ (z IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) ==> (z IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c==> c~ cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (coplanar (x INSERT (y INSERT (z INSERT (x' INSERT EMPTY))))), (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) |- (x' = x)
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f3 cvector_add c% f4 f0 c% f5 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 c= f3 f0
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ |- ((real_neg ((real_sub ((real_add (a $ i)) (b $ i))) (a $ i))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i)))
T c= creal_neg creal_sub creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1
+ (plane P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- ((((x' IN (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))))) /\ (x' IN P)) = (x' = x)) = T)
T c==> cplane f0 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c= c= c/\ cIN f4 * part cGSPEC / c? / c? / cSETSPEC b0 c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b1 f1 c% b2 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f4 f0 c= f4 f1 cT
+ |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- (((~ (x IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))))))) = ((~ (x IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ ((~ (((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN f9 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY
- |- ((((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) = T)
T c= c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cT
- (~ (y IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))), (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((~ (y IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (y IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c/\ cIN f5 f4 c/\ cIN f0 f4 c/\ cIN f6 f4 cSUBSET part cEMPTY f4 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f5 c% f8 cvector_add f5 ccross cvector_sub f0 f5 cvector_sub f6 f5 cIN f9 f4 c/\ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((~ (_3965038 = _3965040)) \/ ((~ (_3965039 = _3965041)) \/ ((_3965040 SUBSET _3965041) \/ (~ (_3965038 SUBSET _3965039)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
- |- ((~ (_3965064 = _3965066)) \/ ((~ (_3965065 = _3965067)) \/ (((vector_add _3965064) _3965065) = ((vector_add _3965066) _3965067))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
+ |- ((\s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t))))) s)
T * / ! c= cSUBSET * * part cINSERT f0 b0 b1 c/\ cIN f0 b1 cSUBSET b0 b1 f1
- |- ((~ (_3965073 = _3965075)) \/ ((~ (_3965072 = _3965074)) \/ (((hull _3965072) _3965073) = ((hull _3965074) _3965075))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
+ |- ((((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0 cF
+ |- ((((plane P) /\ (((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (coplanar (x INSERT (y INSERT (z INSERT (x' INSERT EMPTY)))))) = ((((((plane P) /\ ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P)) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))) /\ (x' IN P)) ==> (coplanar (x INSERT (y INSERT (z INSERT (x' INSERT EMPTY)))))))
T c= c==> c/\ cplane f0 c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f6 part cEMPTY c==> c/\ c/\ c/\ c/\ cplane f0 cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f6 part cEMPTY
- |- ((\q'. (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) = p') ==> ((p' ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) = q')) ==> (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 f5 c==> c==> f5 c= c? / c? / c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f0 c% b2 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 b0 c= c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f0 c% b2 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c==> f5 b0 f6
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- ((a ==> (b ==> c)) = ((a /\ b) ==> c))
T c= c==> f0 c==> f1 f2 c==> c/\ f0 f1 f2
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((~ (_3965046 = _3965047)) \/ ((BIT1 _3965046) = (BIT1 _3965047)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- (x IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((\u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) u) |- (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))
T c==> * / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 f4 c? / c/\ c= creal_add f4 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f4 f1 c% b0 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1
+ (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (plane P), ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- (((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)) /\ (x' = x))
T c==> cplane f0 c==> c/\ c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% b0 f2 c% b1 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 cIN f1 f0 c==> cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c/\ c/\ c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% b0 f2 c% b1 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 cIN f1 f0 c= f1 f2
- (~ (EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))), (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((~ (EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c/\ c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (_3965056 = _3965058) |- ((_3965057 = _3965059) ==> (((cross _3965056) _3965057) = ((cross _3965058) _3965059)))
T c==> c= f0 f1 c==> c= f2 f3 c= ccross f0 f2 ccross f1 f3
+ |- (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))) = ((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P))))
T c= c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c= f4 f0 c/\ c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 cIN f4 f1
+ |- ((\x. (((% (real_of_num (NUMERAL _0))) x) = (vec (NUMERAL _0)))) x)
T * / c= c% creal_of_num cNUMERAL c_0 b0 cvec cNUMERAL c_0 f0
+ |- (((~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) ==> F) = (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))
T c= c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((x IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ ((((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c/\ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- (((\u. (?v. (?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))))) u') ==> F)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> * / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f0 f4 c/\ cIN f1 f4 c/\ cIN f2 f4 cSUBSET part cEMPTY f4 c/\ c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f5 f0 c% f6 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f4 f7 cF
+ |- ((\p'. (!q'. (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) = p') ==> ((p' ==> (((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)) = q')) ==> (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 b0 c==> c==> b0 c= c/\ c? / c? / c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b2 f0 c% b3 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 b1 c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 c/\ c? / c? / c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b2 f0 c% b3 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 c==> b0 b1 f5
- (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((x IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) = (x IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x)
T * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0
+ (~ (((b $ i) = (real_of_num (NUMERAL _0))) ==> (((real_add (a $ i)) (b $ i)) = (a $ i)))) |- ((~ (((b $ i) = (real_of_num (NUMERAL _0))) ==> (((real_add (a $ i)) (b $ i)) = (a $ i)))) /\ F)
T c==> c~ c==> c= c$ f0 f1 creal_of_num cNUMERAL c_0 c= creal_add c$ f2 f1 c$ f0 f1 c$ f2 f1 c/\ c~ c==> c= c$ f0 f1 creal_of_num cNUMERAL c_0 c= creal_add c$ f2 f1 c$ f0 f1 c$ f2 f1 cF
- |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ |- ((\y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))) y)
T * / c= cdot f0 c% f1 b0 creal_mul f1 cdot f0 b0 f2
+ |- (((vector_add ((% u) x)) ((% v) ((vector_add x) y))) = ((vector_add ((% ((real_add u) v)) x)) ((% v) y)))
T c= cvector_add c% f0 f1 c% f2 cvector_add f1 f3 cvector_add c% creal_add f0 f2 f1 c% f2 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) |- ((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) /\ (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))))
T c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c/\ c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0
- (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) |- ((EMPTY SUBSET P) = T)
T c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c= cSUBSET part cEMPTY f1 cT
+ |- (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)) = q')) ==> (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P))) = ((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> q')))
T c==> c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c= c/\ c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 cIN f4 f1 f5 c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c= f4 f0 c/\ c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 cIN f4 f1 c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 f5
- ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F) |- (((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F) /\ ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F))
T c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF c/\ c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF
+ ((\v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))) v) |- ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))
T c==> * / c/\ c= creal_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 c% b0 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 f5 c/\ c= creal_add f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 c% f5 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2
+ (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0)))) |- ((((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0 c/\ c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0 cF
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((b $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i)) ==> (((lambdai. ((real_add (a $ i)) (b $ i))) $ i) = (a $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ f1 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0 c= c$ clambda / creal_add c$ f2 b0 c$ f1 b0 f0 c$ f2 f0
- |- ((?w. (P w)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
+ (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))), (plane P), (x' IN P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- (x' = x)
T c==> c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 c==> cplane f4 c==> cIN f0 f4 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c= f0 f1
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% u) x)) ((% v) ((vector_add x) y))) $ i) = (((vector_add ((% ((real_add u) v)) x)) ((% v) y)) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add c% f1 f2 c% f3 cvector_add f2 f4 f0 c$ cvector_add c% creal_add f1 f3 f2 c% f3 f4 f0
- |- ((!x'. (!z. (!y. (!x. (!P. (!v. (!u. (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))))))))) = (!x'. (!z. (!y. (!x. (!P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F)))))))))
T c= ! ! ! ! ! ! ! c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c= b4 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ c/\ cIN b3 b4 c/\ cIN b2 b4 c/\ cIN b1 b4 cSUBSET part cEMPTY b4 c/\ c= creal_add b6 b5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= b0 cvector_add c% b6 b3 c% b5 cvector_add b3 ccross cvector_sub b2 b3 cvector_sub b1 b3 cIN b0 b4 c? / c? / c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN b2 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN b1 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY ! ! ! ! ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c= b4 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ c/\ cIN b3 b4 c/\ cIN b2 b4 c/\ cIN b1 b4 cSUBSET part cEMPTY b4 c/\ c= creal_add b6 b5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= b0 cvector_add c% b6 b3 c% b5 cvector_add b3 ccross cvector_sub b2 b3 cvector_sub b1 b3 cIN b0 b4 c? / c? / c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN b2 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN b1 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cF
+ (plane P), ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))), (x' IN P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- (((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))) /\ (x' = x))
T c==> cplane f0 c==> c/\ c= creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f1 f4 c% f2 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 c==> cIN f3 f0 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c/\ c/\ c= creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f1 f4 c% f2 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 c= f3 f4
- (_3965035 = _3965037), (_3965034 = _3965036) |- ((((_3965034 IN _3965035) = (_3965036 IN _3965037)) ==> ((_3965036 IN _3965037) \/ (~ (_3965034 IN _3965035)))) = ((_3965036 IN _3965037) \/ (~ (_3965034 IN _3965035))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cIN f2 f0 cIN f3 f1 c\/ cIN f3 f1 c~ cIN f2 f0 c\/ cIN f3 f1 c~ cIN f2 f0
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((?w. (P w)) /\ Q) = (?w. ((P w) /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((\u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F)) u)
T * / c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add b0 f4 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f5 cvector_add c% b0 f1 c% f4 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f5 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF f6
+ |- (?v. ((((real_add (real_of_num (NUMERAL (BIT1 _0)))) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% (real_of_num (NUMERAL (BIT1 _0)))) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))
T c? / c/\ c= creal_add creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% b0 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- (((b = (vec (NUMERAL _0))) ==> (((vector_add a) b) = a)) = (((((vector_add a) b) = a) ==> (b = (vec (NUMERAL _0)))) /\ ((b = (vec (NUMERAL _0))) ==> (((vector_add a) b) = a))))
T c= c==> c= f0 cvec cNUMERAL c_0 c= cvector_add f1 f0 f1 c/\ c==> c= cvector_add f1 f0 f1 c= f0 cvec cNUMERAL c_0 c==> c= f0 cvec cNUMERAL c_0 c= cvector_add f1 f0 f1
- (_3965064 = _3965066) |- ((_3965065 = _3965067) ==> (((vector_add _3965064) _3965065) = ((vector_add _3965066) _3965067)))
T c==> c= f0 f1 c==> c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
- |- ((?w'. ((x IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) = ((?w. (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))
T c= c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ c? / cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
+ |- (((!c. (!x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))))) ==> ((\c. (!x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))))) c)) = ((\c. (!x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))))) c))
T c= c==> ! ! ! c= cdot b1 c% b0 b2 creal_mul b0 cdot b1 b2 * / ! ! c= cdot b1 c% b0 b2 creal_mul b0 cdot b1 b2 f0 * / ! ! c= cdot b1 c% b0 b2 creal_mul b0 cdot b1 b2 f0
+ |- (((!x. ((((dot x) x) = (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0))))) ==> ((\x. ((((dot x) x) = (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0))))) x)) = ((\x. ((((dot x) x) = (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0))))) x))
T c= c==> ! c= c= cdot b0 b0 creal_of_num cNUMERAL c_0 c= b0 cvec cNUMERAL c_0 * / c= c= cdot b0 b0 creal_of_num cNUMERAL c_0 c= b0 cvec cNUMERAL c_0 f0 * / c= c= cdot b0 b0 creal_of_num cNUMERAL c_0 c= b0 cvec cNUMERAL c_0 f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_add ((lambdai. ((real_mul u) (x $ i))) $ i)) ((lambdai. ((real_mul v) ((lambdai. ((real_add (x $ i)) (y $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_add u) v)) (x $ i))) $ i)) ((lambdai. ((real_mul v) (y $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_mul f1 c$ f2 b1 b0 c$ clambda / creal_mul f3 c$ clambda / creal_add c$ f2 b1 c$ f4 b1 b1 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_add f1 f3 c$ f2 b1 b0 c$ clambda / creal_mul f3 c$ f4 b1 b0 f0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))), ((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) /\ F)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f0 f4 c/\ cIN f1 f4 c/\ cIN f2 f4 cSUBSET part cEMPTY f4 c/\ c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f5 f0 c% f6 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f4 c/\ c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- ((?w. (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))) ==> F)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c? / c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c= f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c/\ c/\ cIN f0 f6 c/\ cIN f1 f6 c/\ cIN f2 f6 cSUBSET part cEMPTY f6 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f7 f0 c% f8 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f6 cF
- (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i)))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((x' IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) = (((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= cIN f9 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (_3965038 = _3965040), (_3965039 = _3965041) |- ((_3965039 = _3965041) /\ ((_3965040 SUBSET _3965041) \/ (~ (_3965038 SUBSET _3965039))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
- (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))), (plane P), (x' IN P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- (x' = x)
T c==> c? / c/\ c= creal_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 c% b0 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 c==> cplane f5 c==> cIN f1 f5 c==> cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c= f1 f2
+ ((\w. (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))) w) |- (((((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> F) = F)
T c==> * / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c/\ cIN f3 f2 c/\ cIN f4 f2 c/\ cIN f5 f2 cSUBSET part cEMPTY f2 c/\ c= creal_add f6 f7 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f8 cvector_add c% f6 f3 c% f7 cvector_add f3 ccross cvector_sub f4 f3 cvector_sub f5 f3 cIN f8 f2 f9 c= c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f9 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f9 part cEMPTY c/\ c/\ cIN f3 f2 c/\ cIN f4 f2 c/\ cIN f5 f2 cSUBSET part cEMPTY f2 c/\ c= creal_add f6 f7 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f8 cvector_add c% f6 f3 c% f7 cvector_add f3 ccross cvector_sub f4 f3 cvector_sub f5 f3 cIN f8 f2 cF cF
+ |- ((\x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y))))) x)
T * / ! c= cdot b0 c% f0 b1 creal_mul f0 cdot b0 b1 f1
- (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))), (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((~ F) ==> F)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c= f7 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c/\ cIN f0 f7 c/\ cIN f1 f7 c/\ cIN f2 f7 cSUBSET part cEMPTY f7 c/\ c= creal_add f8 f9 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f8 f0 c% f9 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f7 c==> c~ cF cF
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_sub ((lambdai. ((real_add (a $ i)) (b $ i))) $ i)) (a $ i))) $ i) = (b $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_sub ((vector_add a) b)) a) $ i) = (b $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_sub c$ clambda / creal_add c$ f1 b1 c$ f2 b1 b0 c$ f1 b0 f0 c$ f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_sub cvector_add f1 f2 f1 f0 c$ f2 f0
+ |- (((plane P) /\ ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P)) ==> (!x'. (((x' IN (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))))) /\ (x' IN P)) = (x' = x))))
T c==> c/\ cplane f0 cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 ! c= c/\ cIN b0 * part cGSPEC / c? / c? / cSETSPEC b1 c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b2 f1 c% b3 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN b0 f0 c= b0 f1
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (plane P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- (((x' IN (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))))) /\ (x' IN P)) = (x' = x))
T c==> cplane f0 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c= c/\ cIN f4 * part cGSPEC / c? / c? / cSETSPEC b0 c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b1 f1 c% b2 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f4 f0 c= f4 f1
- (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (b $ i)) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((EMPTY SUBSET P) = (EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= cSUBSET part cEMPTY f3 cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((_3965042 = _3965044) ==> ((~ (_3965043 = _3965045)) \/ (((real_add _3965042) _3965043) = ((real_add _3965044) _3965045))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= creal_add f0 f2 creal_add f1 f3
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!x. (!P. (!v. (!u. (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))))) = T)
T c= ! ! ! ! c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c= b1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ c/\ cIN b0 b1 c/\ cIN f0 b1 c/\ cIN f1 b1 cSUBSET part cEMPTY b1 c/\ c= creal_add b3 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f2 cvector_add c% b3 b0 c% b2 cvector_add b0 ccross cvector_sub f0 b0 cvector_sub f1 b0 cIN f2 b1 c? / c? / c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cT
+ |- ((((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)) = (x' = x)) = (((x' IN (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))))) /\ (x' IN P)) = (x' = x)))
T c= c= c/\ c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f0 f4 c= f0 f1 c= c/\ cIN f0 * part cGSPEC / c? / c? / cSETSPEC b0 c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b1 f1 c% b2 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f0 f4 c= f0 f1
- |- ((!w. t) = t)
T c= ! f0 f0
- |- ((~ (_3965050 = _3965051)) \/ ((real_of_num _3965050) = (real_of_num _3965051)))
T c\/ c~ c= f0 f1 c= creal_of_num f0 creal_of_num f1
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- (((!x. (!y. ((((real_mul x) y) = (real_of_num (NUMERAL _0))) = ((x = (real_of_num (NUMERAL _0))) \/ (y = (real_of_num (NUMERAL _0))))))) ==> ((\x. (!y. ((((real_mul x) y) = (real_of_num (NUMERAL _0))) = ((x = (real_of_num (NUMERAL _0))) \/ (y = (real_of_num (NUMERAL _0))))))) x)) = ((\x. (!y. ((((real_mul x) y) = (real_of_num (NUMERAL _0))) = ((x = (real_of_num (NUMERAL _0))) \/ (y = (real_of_num (NUMERAL _0))))))) x))
T c= c==> ! ! c= c= creal_mul b0 b1 creal_of_num cNUMERAL c_0 c\/ c= b0 creal_of_num cNUMERAL c_0 c= b1 creal_of_num cNUMERAL c_0 * / ! c= c= creal_mul b0 b1 creal_of_num cNUMERAL c_0 c\/ c= b0 creal_of_num cNUMERAL c_0 c= b1 creal_of_num cNUMERAL c_0 f0 * / ! c= c= creal_mul b0 b1 creal_of_num cNUMERAL c_0 c\/ c= b0 creal_of_num cNUMERAL c_0 c= b1 creal_of_num cNUMERAL c_0 f0
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))), (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) /\ F)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c= f7 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c/\ cIN f0 f7 c/\ cIN f1 f7 c/\ cIN f2 f7 cSUBSET part cEMPTY f7 c/\ c= creal_add f8 f9 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f8 f0 c% f9 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f7 c/\ c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c= f7 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c/\ cIN f0 f7 c/\ cIN f1 f7 c/\ cIN f2 f7 cSUBSET part cEMPTY f7 c/\ c= creal_add f8 f9 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f8 f0 c% f9 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f7 cF
- |- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0
- (((vector_add a) b) = a) |- ((((vector_add a) b) = a) /\ (b = (vec (NUMERAL _0))))
T c==> c= cvector_add f0 f1 f0 c/\ c= cvector_add f0 f1 f0 c= f1 cvec cNUMERAL c_0
+ |- ((\x. (!s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t)))))) x)
T * / ! ! c= cSUBSET * * part cINSERT b0 b1 b2 c/\ cIN b0 b2 cSUBSET b1 b2 f0
+ |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ ((((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0)))) \/ (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0))))) |- F
T c==> c\/ c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0 c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) ==> ((\x. (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) x)) = ((\x. (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) x))
T c= c==> ! c= c% creal_of_num cNUMERAL cBIT1 c_0 b0 b0 * / c= c% creal_of_num cNUMERAL cBIT1 c_0 b0 b0 f0 * / c= c% creal_of_num cNUMERAL cBIT1 c_0 b0 b0 f0
- |- ((~ (_3965034 = _3965036)) \/ ((~ (_3965035 = _3965037)) \/ ((_3965036 IN _3965037) \/ (~ (_3965034 IN _3965035)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- (_3965056 = _3965058), (_3965057 = _3965059) |- ((_3965057 = _3965059) /\ (((cross _3965056) _3965057) = ((cross _3965058) _3965059)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= ccross f0 f2 ccross f1 f3
+ (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (b $ i))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1 creal_of_num cNUMERAL c_0
- |- ((!z. (!y. (!x. (!P. (!v. (!u. (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c= b3 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ c/\ cIN b2 b3 c/\ cIN b1 b3 c/\ cIN b0 b3 cSUBSET part cEMPTY b3 c/\ c= creal_add b5 b4 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f0 cvector_add c% b5 b2 c% b4 cvector_add b2 ccross cvector_sub b1 b2 cvector_sub b0 b2 cIN f0 b3 c? / c? / c? / c/\ cIN b2 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN b1 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY cT
- (_3965042 = _3965044), (_3965043 = _3965045) |- ((_3965043 = _3965045) /\ (((real_add _3965042) _3965043) = ((real_add _3965044) _3965045)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= creal_add f0 f2 creal_add f1 f3
- (_3965072 = _3965074), (_3965073 = _3965075) |- ((_3965072 = _3965074) /\ (((hull _3965072) _3965073) = ((hull _3965074) _3965075)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part chull f0 f2 * * part chull f1 f3
+ (~ (((b $ i) = (real_of_num (NUMERAL _0))) ==> (((real_add (a $ i)) (b $ i)) = (a $ i)))) |- ((((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0)))) \/ (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0)))))
T c==> c~ c==> c= c$ f0 f1 creal_of_num cNUMERAL c_0 c= creal_add c$ f2 f1 c$ f0 f1 c$ f2 f1 c\/ c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0 c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((b $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i)) ==> (((lambdai. ((real_add (a $ i)) (b $ i))) $ i) = (a $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ f1 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0 c= c$ clambda / creal_add c$ f2 b0 c$ f1 b0 f0 c$ f2 f0
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- ((?u. (?v. (?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))))) ==> F)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c? / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f0 f4 c/\ cIN f1 f4 c/\ cIN f2 f4 cSUBSET part cEMPTY f4 c/\ c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f5 f0 c% f6 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f4 cF
- (_3965052 = _3965054), (_3965053 = _3965055) |- ((_3965053 = _3965055) /\ (((vector_sub _3965052) _3965053) = ((vector_sub _3965054) _3965055)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cvector_sub f0 f2 cvector_sub f1 f3
- (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((~ (EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) ==> (EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c==> c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((\z. (!y. (!x. (!P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F))))))) z)
T * / ! ! ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c= b3 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ c/\ cIN b2 b3 c/\ cIN b1 b3 c/\ cIN b0 b3 cSUBSET part cEMPTY b3 c/\ c= creal_add b5 b4 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f0 cvector_add c% b5 b2 c% b4 cvector_add b2 ccross cvector_sub b1 b2 cvector_sub b0 b2 cIN f0 b3 c? / c? / c? / c/\ cIN b2 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN b1 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY cF f1
- |- ((?w'. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY)))))))))) = ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (?w. ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))
T c= c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c? / c/\ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- (_3965035 = _3965037), (_3965034 = _3965036) |- ((_3965036 IN _3965037) \/ (~ (_3965034 IN _3965035)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cIN f3 f1 c~ cIN f2 f0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((~ (_3965052 = _3965054)) \/ ((~ (_3965053 = _3965055)) \/ (((vector_sub _3965052) _3965053) = ((vector_sub _3965054) _3965055))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cvector_sub f0 f2 cvector_sub f1 f3
- |- ((?w. t) = t)
T c= c? / f0 f0
+ |- (((!p'. (!q'. (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) = p') ==> ((p' ==> (((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)) = q')) ==> (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) = p') ==> ((p' ==> (((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)) = q')) ==> (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) = p') ==> ((p' ==> (((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)) = q')) ==> (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 b0 c==> c==> b0 c= c/\ c? / c? / c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b2 f0 c% b3 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 b1 c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 c/\ c? / c? / c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b2 f0 c% b3 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 c==> b0 b1 * / ! c==> c= c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 b0 c==> c==> b0 c= c/\ c? / c? / c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b2 f0 c% b3 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 b1 c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 c/\ c? / c? / c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b2 f0 c% b3 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 c==> b0 b1 f5 * / ! c==> c= c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 b0 c==> c==> b0 c= c/\ c? / c? / c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b2 f0 c% b3 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 b1 c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 c/\ c? / c? / c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b2 f0 c% b3 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 c==> b0 b1 f5
- |- ((~ (_3965042 = _3965044)) \/ ((~ (_3965043 = _3965045)) \/ (((real_add _3965042) _3965043) = ((real_add _3965044) _3965045))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= creal_add f0 f2 creal_add f1 f3
- (x' IN P) |- ((x' IN P) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
+ |- ((((vector_add a) b) = a) = (b = (vec (NUMERAL _0))))
T c= c= cvector_add f0 f1 f0 c= f1 cvec cNUMERAL c_0
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((z IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ ((((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c/\ cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((!P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F)))) ==> ((\P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F)))) P)) = ((\P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F)))) P))
T c= c==> ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c/\ cIN f0 b0 c/\ cIN f1 b0 c/\ cIN f2 b0 cSUBSET part cEMPTY b0 c/\ c= creal_add b2 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% b2 f0 c% b1 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 b0 c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF * / ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c/\ cIN f0 b0 c/\ cIN f1 b0 c/\ cIN f2 b0 cSUBSET part cEMPTY b0 c/\ c= creal_add b2 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% b2 f0 c% b1 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 b0 c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF f4 * / ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c/\ cIN f0 b0 c/\ cIN f1 b0 c/\ cIN f2 b0 cSUBSET part cEMPTY b0 c/\ c= creal_add b2 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% b2 f0 c% b1 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 b0 c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF f4
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))), ((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- F
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f0 f4 c/\ cIN f1 f4 c/\ cIN f2 f4 cSUBSET part cEMPTY f4 c/\ c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f5 f0 c% f6 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f4 cF
- (_3965061 = _3965063) |- ((_3965060 = _3965062) ==> (((% _3965060) _3965061) = ((% _3965062) _3965063)))
T c==> c= f0 f1 c==> c= f2 f3 c= c% f2 f0 c% f3 f1
- (_3965038 = _3965040) |- ((_3965039 = _3965041) ==> ((_3965040 SUBSET _3965041) \/ (~ (_3965038 SUBSET _3965039))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
- |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ |- ((((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) = (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x))) ==> (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)) = q')) ==> (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P))) = ((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> q')))) = (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)) = q')) ==> (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P))) = ((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> q'))))
T c= c==> c= c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 c/\ c/\ cIN f0 f3 c/\ cIN f1 f3 c/\ cIN f2 f3 cSUBSET part cEMPTY f3 c= f4 f0 c==> c==> c/\ c/\ cIN f0 f3 c/\ cIN f1 f3 c/\ cIN f2 f3 cSUBSET part cEMPTY f3 c= f4 f0 c= c/\ c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 f5 c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 c/\ c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 c==> c/\ c/\ cIN f0 f3 c/\ cIN f1 f3 c/\ cIN f2 f3 cSUBSET part cEMPTY f3 c= f4 f0 f5 c==> c==> c/\ c/\ cIN f0 f3 c/\ cIN f1 f3 c/\ cIN f2 f3 cSUBSET part cEMPTY f3 c= f4 f0 c= c/\ c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 f5 c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 c/\ c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 c==> c/\ c/\ cIN f0 f3 c/\ cIN f1 f3 c/\ cIN f2 f3 cSUBSET part cEMPTY f3 c= f4 f0 f5
- |- (((real_gt (b $ i)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0)))))
T c= creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\x. ((((dot x) x) = (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0))))) x)
T * / c= c= cdot b0 b0 creal_of_num cNUMERAL c_0 c= b0 cvec cNUMERAL c_0 f0
+ |- ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x)
T * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2
+ ((\v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))) v) |- ((((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))) ==> (x' = x)) = (x' = x))
T c==> * / c/\ c= creal_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 c% b0 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 f5 c= c==> c/\ c= creal_add f0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 c% f5 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 c= f1 f2 c= f1 f2
- (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) |- (EMPTY SUBSET P)
T c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 cSUBSET part cEMPTY f1
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3
+ |- (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) = p') ==> ((p' ==> (((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)) = q')) ==> (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P))) = (p' ==> q'))))
T c==> c= c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 f5 c==> c==> f5 c= c/\ c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 f6 c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 c/\ c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 c==> f5 f6
- |- (((!z. (!y. (!x. (!P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F))))))) ==> ((\z. (!y. (!x. (!P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F))))))) z)) = ((\z. (!y. (!x. (!P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F))))))) z))
T c= c==> ! ! ! ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c= b3 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ c/\ cIN b2 b3 c/\ cIN b1 b3 c/\ cIN b0 b3 cSUBSET part cEMPTY b3 c/\ c= creal_add b5 b4 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f0 cvector_add c% b5 b2 c% b4 cvector_add b2 ccross cvector_sub b1 b2 cvector_sub b0 b2 cIN f0 b3 c? / c? / c? / c/\ cIN b2 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN b1 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY cF * / ! ! ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c= b3 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ c/\ cIN b2 b3 c/\ cIN b1 b3 c/\ cIN b0 b3 cSUBSET part cEMPTY b3 c/\ c= creal_add b5 b4 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f0 cvector_add c% b5 b2 c% b4 cvector_add b2 ccross cvector_sub b1 b2 cvector_sub b0 b2 cIN f0 b3 c? / c? / c? / c/\ cIN b2 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN b1 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY cF f1 * / ! ! ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c= b3 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ c/\ cIN b2 b3 c/\ cIN b1 b3 c/\ cIN b0 b3 cSUBSET part cEMPTY b3 c/\ c= creal_add b5 b4 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f0 cvector_add c% b5 b2 c% b4 cvector_add b2 ccross cvector_sub b1 b2 cvector_sub b0 b2 cIN f0 b3 c? / c? / c? / c/\ cIN b2 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN b1 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY cF f1
- (_3965073 = _3965075) |- ((_3965072 = _3965074) ==> (((hull _3965072) _3965073) = ((hull _3965074) _3965075)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
+ (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0)))) |- ((((b $ i) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) (b $ i)) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) (b $ i)) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0 c= c==> c= c$ f0 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 c$ f0 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 c$ f0 f1 creal_of_num cNUMERAL c_0
- |- (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))) = ((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))))
T c= c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- |- (((!y. (!x. (!P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F)))))) ==> ((\y. (!x. (!P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F)))))) y)) = ((\y. (!x. (!P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F)))))) y))
T c= c==> ! ! ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c= b2 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ c/\ cIN b1 b2 c/\ cIN b0 b2 c/\ cIN f0 b2 cSUBSET part cEMPTY b2 c/\ c= creal_add b4 b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f1 cvector_add c% b4 b1 c% b3 cvector_add b1 ccross cvector_sub b0 b1 cvector_sub f0 b1 cIN f1 b2 c? / c? / c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cF * / ! ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c= b2 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ c/\ cIN b1 b2 c/\ cIN b0 b2 c/\ cIN f0 b2 cSUBSET part cEMPTY b2 c/\ c= creal_add b4 b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f1 cvector_add c% b4 b1 c% b3 cvector_add b1 ccross cvector_sub b0 b1 cvector_sub f0 b1 cIN f1 b2 c? / c? / c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cF f2 * / ! ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c= b2 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ c/\ cIN b1 b2 c/\ cIN b0 b2 c/\ cIN f0 b2 cSUBSET part cEMPTY b2 c/\ c= creal_add b4 b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f1 cvector_add c% b4 b1 c% b3 cvector_add b1 ccross cvector_sub b0 b1 cvector_sub f0 b1 cIN f1 b2 c? / c? / c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cF f2
+ (plane P), (x' IN P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- ((((\v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))) v) ==> (x' = x)) = T)
T c==> cplane f0 c==> cIN f1 f0 c==> cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c= c==> * / c/\ c= creal_add f5 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f5 f2 c% b0 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 f6 c= f1 f2 cT
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- (((z IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ ((((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))) = ((y IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ ((((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= c/\ cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!a. (!x. ((((% a) x) = (vec (NUMERAL _0))) = ((a = (real_of_num (NUMERAL _0))) \/ (x = (vec (NUMERAL _0))))))) ==> ((\a. (!x. ((((% a) x) = (vec (NUMERAL _0))) = ((a = (real_of_num (NUMERAL _0))) \/ (x = (vec (NUMERAL _0))))))) a)) = ((\a. (!x. ((((% a) x) = (vec (NUMERAL _0))) = ((a = (real_of_num (NUMERAL _0))) \/ (x = (vec (NUMERAL _0))))))) a))
T c= c==> ! ! c= c= c% b0 b1 cvec cNUMERAL c_0 c\/ c= b0 creal_of_num cNUMERAL c_0 c= b1 cvec cNUMERAL c_0 * / ! c= c= c% b0 b1 cvec cNUMERAL c_0 c\/ c= b0 creal_of_num cNUMERAL c_0 c= b1 cvec cNUMERAL c_0 f0 * / ! c= c= c% b0 b1 cvec cNUMERAL c_0 c\/ c= b0 creal_of_num cNUMERAL c_0 c= b1 cvec cNUMERAL c_0 f0
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- (((!x''. (((\u. (?v. (?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))))) x'') ==> F)) ==> ((?u. (?v. (?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))))) ==> F)) = ((?u. (?v. (?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))))) ==> F))
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> ! c==> * / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= f4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c/\ cIN f0 f4 c/\ cIN f1 f4 c/\ cIN f2 f4 cSUBSET part cEMPTY f4 c/\ c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f5 f0 c% f6 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f4 b0 cF c==> c? / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f0 f4 c/\ cIN f1 f4 c/\ cIN f2 f4 cSUBSET part cEMPTY f4 c/\ c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f5 f0 c% f6 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f4 cF c==> c? / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f0 f4 c/\ cIN f1 f4 c/\ cIN f2 f4 cSUBSET part cEMPTY f4 c/\ c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f5 f0 c% f6 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f4 cF
- (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) b) $ i) = (a $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((b $ i) = ((vec (NUMERAL _0)) $ i)))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f0 f1 b0 c$ f0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f1 b0 c$ cvec cNUMERAL c_0 b0
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((b $ i) = ((vec (NUMERAL _0)) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) b) $ i) = (a $ i)))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ cvec cNUMERAL c_0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f1 f0 b0 c$ f1 b0
+ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) |- ((x IN P) = T)
T c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c= cIN f0 f1 cT
- (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((z IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) = (z IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P))) = (((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) ==> ((x' = x) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)))))
T c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 c/\ c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c= f4 f0 c/\ c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. (~ (x IN EMPTY))) ==> ((\x. (~ (x IN EMPTY))) x)) = ((\x. (~ (x IN EMPTY))) x))
T c= c==> ! c~ cIN b0 part cEMPTY * / c~ cIN b0 part cEMPTY f0 * / c~ cIN b0 part cEMPTY f0
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- (!w. (((\w. (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))) w) ==> F))
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> * / c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b1 part cEMPTY c= f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b1 part cEMPTY c/\ c/\ cIN f0 f6 c/\ cIN f1 f6 c/\ cIN f2 f6 cSUBSET part cEMPTY f6 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f7 f0 c% f8 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f6 b0 cF
- |- ((((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) = (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))))) ==> (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))) = ((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))))) = (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))) = ((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))))))
T c= c==> c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c= c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c= c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c= c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0
+ |- (((?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) = (?v. ((?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))))
T c= c/\ c? / c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c/\ cIN f2 f1 c/\ cIN f3 f1 c/\ cIN f4 f1 cSUBSET part cEMPTY f1 c/\ c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f7 cvector_add c% f5 f2 c% f6 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 cIN f7 f1 c? / c/\ c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c/\ cIN f2 f1 c/\ cIN f3 f1 c/\ cIN f4 f1 cSUBSET part cEMPTY f1 c/\ c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f7 cvector_add c% f5 f2 c% f6 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 cIN f7 f1
- (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((y IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) = (y IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= cIN f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (~ (((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))), (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((~ (((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c~ cIN cvector_add c% f0 f1 c% f2 cvector_add f1 ccross cvector_sub f3 f1 cvector_sub f4 f1 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> c/\ c/\ c~ ccollinear * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c= f8 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c/\ c/\ cIN f1 f8 c/\ cIN f3 f8 c/\ cIN f4 f8 cSUBSET part cEMPTY f8 c/\ c= creal_add f0 f2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f0 f1 c% f2 cvector_add f1 ccross cvector_sub f3 f1 cvector_sub f4 f1 cIN f9 f8 c/\ c~ cIN cvector_add c% f0 f1 c% f2 cvector_add f1 ccross cvector_sub f3 f1 cvector_sub f4 f1 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cIN cvector_add c% f0 f1 c% f2 cvector_add f1 ccross cvector_sub f3 f1 cvector_sub f4 f1 * * part chull part caffine * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
- (_3965060 = _3965062), (_3965061 = _3965063) |- ((_3965060 = _3965062) /\ (((% _3965060) _3965061) = ((% _3965062) _3965063)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= c% f0 f2 c% f1 f3
+ |- ((real_neg ((real_sub ((real_add ((real_mul u) (x $ i))) ((real_mul v) ((real_add (x $ i)) (y $ i))))) ((real_add ((real_mul ((real_add u) v)) (x $ i))) ((real_mul v) (y $ i))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_mul f0 c$ f1 f2 creal_mul f3 creal_add c$ f1 f2 c$ f4 f2 creal_add creal_mul creal_add f0 f3 c$ f1 f2 creal_mul f3 c$ f4 f2 creal_of_num cNUMERAL c_0
+ |- (((((((plane P) /\ ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P)) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))) /\ (x' IN P)) ==> (coplanar (x INSERT (y INSERT (z INSERT (x' INSERT EMPTY)))))) = ((plane P) ==> (((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) ==> ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) ==> ((x' IN P) ==> (coplanar (x INSERT (y INSERT (z INSERT (x' INSERT EMPTY)))))))))))
T c= c==> c/\ c/\ c/\ c/\ cplane f0 cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f6 part cEMPTY c==> cplane f0 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 c==> cIN f6 f0 ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f6 part cEMPTY
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. ((real_mul u) (x $ i))) $ i)) ((lambdai. ((real_mul v) ((lambdai. ((real_add (x $ i)) (y $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_add u) v)) (x $ i))) $ i)) ((lambdai. ((real_mul v) (y $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_mul f1 c$ f2 b1 b0 c$ clambda / creal_mul f3 c$ clambda / creal_add c$ f2 b1 c$ f4 b1 b1 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_add f1 f3 c$ f2 b1 b0 c$ clambda / creal_mul f3 c$ f4 b1 b0 f0
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- ((((\u. (?v. (?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))))) u') ==> F) = T)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> * / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f0 f4 c/\ cIN f1 f4 c/\ cIN f2 f4 cSUBSET part cEMPTY f4 c/\ c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f5 f0 c% f6 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f4 f7 cF cT
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((\q'. (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) = p') ==> ((p' ==> (((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)) = q')) ==> (((((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 f5 c==> c==> f5 c= c/\ c? / c? / c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b1 f0 c% b2 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 b0 c= c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= f4 f0 c/\ c? / c? / c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b1 f0 c% b2 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f4 f3 c==> f5 b0 f6
- (?v. (?w. (((~ (collinear (u' INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))))), (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- ((?v. (?w. (((~ (collinear (u' INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))))) /\ F)
T c==> c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c/\ cIN f2 f1 c/\ cIN f3 f1 c/\ cIN f4 f1 cSUBSET part cEMPTY f1 c/\ c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f7 cvector_add c% f5 f2 c% f6 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 cIN f7 f1 c==> c~ c? / c? / c? / c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f7 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c/\ cIN f2 f1 c/\ cIN f3 f1 c/\ cIN f4 f1 cSUBSET part cEMPTY f1 c/\ c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f7 cvector_add c% f5 f2 c% f6 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 cIN f7 f1 cF
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- |- ((_3965073 = _3965075) ==> ((~ (_3965072 = _3965074)) \/ (((hull _3965072) _3965073) = ((hull _3965074) _3965075))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- |- ((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) = (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))))
T c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c= c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0
+ |- ((\b. (((hull affine) (a INSERT (b INSERT EMPTY))) = (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) a)) ((% v) b))))))))) b)
T * / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / c? / cSETSPEC b1 c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b2 f0 c% b3 b0 f1
+ |- (((!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) ==> ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x)) = ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x))
T c= c==> ! c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2 * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2
+ |- (((vector_sub ((vector_add a) b)) a) = b)
T c= cvector_sub cvector_add f0 f1 f0 f1
+ |- (((?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) = (?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))))
T c= c/\ c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c/\ cIN f3 f2 c/\ cIN f4 f2 c/\ cIN f5 f2 cSUBSET part cEMPTY f2 c/\ c= creal_add f6 f7 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f8 cvector_add c% f6 f3 c% f7 cvector_add f3 ccross cvector_sub f4 f3 cvector_sub f5 f3 cIN f8 f2 c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c/\ cIN f3 f2 c/\ cIN f4 f2 c/\ cIN f5 f2 cSUBSET part cEMPTY f2 c/\ c= creal_add f6 f7 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f8 cvector_add c% f6 f3 c% f7 cvector_add f3 ccross cvector_sub f4 f3 cvector_sub f5 f3 cIN f8 f2
- |- ((\y. (!x. (!P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F)))))) y)
T * / ! ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c= b2 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ c/\ cIN b1 b2 c/\ cIN b0 b2 c/\ cIN f0 b2 cSUBSET part cEMPTY b2 c/\ c= creal_add b4 b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f1 cvector_add c% b4 b1 c% b3 cvector_add b1 ccross cvector_sub b0 b1 cvector_sub f0 b1 cIN f1 b2 c? / c? / c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cF f2
- |- ((\x'. (!z. (!y. (!x. (!P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F)))))))) x')
T * / ! ! ! ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c= b4 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ c/\ cIN b3 b4 c/\ cIN b2 b4 c/\ cIN b1 b4 cSUBSET part cEMPTY b4 c/\ c= creal_add b6 b5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= b0 cvector_add c% b6 b3 c% b5 cvector_add b3 ccross cvector_sub b2 b3 cvector_sub b1 b3 cIN b0 b4 c? / c? / c? / c/\ cIN b3 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN b2 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN b1 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cF f0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((_3965064 = _3965066) ==> ((~ (_3965065 = _3965067)) \/ (((vector_add _3965064) _3965065) = ((vector_add _3965066) _3965067))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
- |- ((_3965052 = _3965054) ==> ((~ (_3965053 = _3965055)) \/ (((vector_sub _3965052) _3965053) = ((vector_sub _3965054) _3965055))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cvector_sub f0 f2 cvector_sub f1 f3
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!w. ((P w) \/ Q)) = ((!w. (P w)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add (b $ i)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i)))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add c$ f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0
+ |- (((!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) ==> ((\t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) t)) = ((\t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) t))
T c= c==> ! ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 * / ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 f1 * / ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 f1
+ |- (((!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))) ==> ((\y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))) y)) = ((\y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))) y))
T c= c==> ! c= cdot f0 c% f1 b0 creal_mul f1 cdot f0 b0 * / c= cdot f0 c% f1 b0 creal_mul f1 cdot f0 b0 f2 * / c= cdot f0 c% f1 b0 creal_mul f1 cdot f0 b0 f2
+ |- ((((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 cF
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- (((\w. (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))) w) ==> F)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> * / c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c= f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c/\ c/\ cIN f0 f6 c/\ cIN f1 f6 c/\ cIN f2 f6 cSUBSET part cEMPTY f6 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f7 f0 c% f8 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f6 f9 cF
- (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) = (~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (b $ i))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (b $ i))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0
- (plane P) |- ((plane P) = T)
T c==> cplane f0 c= cplane f0 cT
+ |- (((!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t)))) ==> ((\t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t)))) t)) = ((\t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t)))) t))
T c= c==> ! c= cSUBSET * * part cINSERT f0 f1 b0 c/\ cIN f0 b0 cSUBSET f1 b0 * / c= cSUBSET * * part cINSERT f0 f1 b0 c/\ cIN f0 b0 cSUBSET f1 b0 f2 * / c= cSUBSET * * part cINSERT f0 f1 b0 c/\ cIN f0 b0 cSUBSET f1 b0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) (b $ i)) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 c$ f0 f1 creal_of_num cNUMERAL c_0
+ |- ((\t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t)))) t)
T * / c= cSUBSET * * part cINSERT f0 f1 b0 c/\ cIN f0 b0 cSUBSET f1 b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((((plane P) /\ ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P)) /\ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))) /\ (x' IN P)) ==> (coplanar (x INSERT (y INSERT (z INSERT (x' INSERT EMPTY))))))
T c==> c/\ c/\ c/\ c/\ cplane f0 cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f6 part cEMPTY
+ (~ ((((real_add (a $ i)) (b $ i)) = (a $ i)) ==> ((b $ i) = (real_of_num (NUMERAL _0))))) |- ((~ ((((real_add (a $ i)) (b $ i)) = (a $ i)) ==> ((b $ i) = (real_of_num (NUMERAL _0))))) /\ F)
T c==> c~ c==> c= creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c= c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ c~ c==> c= creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c= c$ f2 f1 creal_of_num cNUMERAL c_0 cF
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ ((((lambdai. ((real_add (a $ i)) (b $ i))) $ i) = (a $ i)) ==> ((b $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_add c$ f1 b0 c$ f2 b0 f0 c$ f1 f0 c= c$ f2 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0
- (_3965056 = _3965058) |- ((_3965056 = _3965058) /\ ((~ (_3965057 = _3965059)) \/ (((cross _3965056) _3965057) = ((cross _3965058) _3965059))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= ccross f0 f2 ccross f1 f3
+ |- ((\u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) (real_of_num (NUMERAL (BIT1 _0))))
T * / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!w'. ((~ (x IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) = ((!w. (~ (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))) \/ ((~ (y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))
T c= ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c\/ ! c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
+ |- (!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((b $ i) = ((vec (NUMERAL _0)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) b) $ i) = (a $ i)))))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f2 f1 f0 c$ f2 f0
- (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) |- ((y IN P) = T)
T c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c= cIN f2 f1 cT
+ (plane P), (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- ((x' IN P) ==> (coplanar (x INSERT (y INSERT (z INSERT (x' INSERT EMPTY))))))
T c==> cplane f0 c==> c= creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f3 cvector_add c% f1 f4 c% f2 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c==> cIN f3 f0 ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f3 part cEMPTY
+ |- ((((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% (real_of_num (NUMERAL (BIT1 _0)))) x)) ((% (real_of_num (NUMERAL _0))) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))
T c/\ c= creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_of_num cNUMERAL c_0 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- (((!w. ((~ (x IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY))))))))))) ==> ((\w. ((~ (x IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY))))))))))) _3964993)) = ((\w. ((~ (x IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY))))))))))) _3964993))
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY * / c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY f6 * / c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY f6
- (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) (b $ i)) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((~ (x IN EMPTY)) ==> ((x IN EMPTY) = F)) = ((x IN EMPTY) = F))
T c= c==> c~ cIN f0 part cEMPTY c= cIN f0 part cEMPTY cF c= cIN f0 part cEMPTY cF
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((((plane P) /\ ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P)) ==> (!x'. (((x' IN (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))))) /\ (x' IN P)) = (x' = x)))) = (((plane P) /\ ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P)) ==> ((((hull affine) (x INSERT (((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))) INSERT EMPTY))) INTER P) = (x INSERT EMPTY))))
T c= c==> c/\ cplane f0 cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 ! c= c/\ cIN b0 * part cGSPEC / c? / c? / cSETSPEC b1 c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b2 f1 c% b3 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN b0 f0 c= b0 f1 c==> c/\ cplane f0 cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c= * * part cINTER * * part chull part caffine * * part cINSERT f1 * * part cINSERT cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 part cEMPTY f0 * * part cINSERT f1 part cEMPTY
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- (((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 cIN cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (_3965038 = _3965040), (_3965039 = _3965041) |- ((((_3965038 SUBSET _3965039) = (_3965040 SUBSET _3965041)) ==> ((_3965040 SUBSET _3965041) \/ (~ (_3965038 SUBSET _3965039)))) = ((_3965040 SUBSET _3965041) \/ (~ (_3965038 SUBSET _3965039))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cSUBSET f0 f2 cSUBSET f1 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
+ (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) (b $ i)) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 c$ f0 f1 creal_of_num cNUMERAL c_0
- |- (((!q'. (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) = p') ==> ((p' ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) = q')) ==> (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))) = (p' ==> q'))))) ==> ((\q'. (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) = p') ==> ((p' ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) = q')) ==> (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))) = (p' ==> q'))))) q')) = ((\q'. (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) = p') ==> ((p' ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) = q')) ==> (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 f5 c==> c==> f5 c= c? / c? / c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f0 c% b2 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 b0 c= c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f0 c% b2 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c==> f5 b0 * / c==> c= c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 f5 c==> c==> f5 c= c? / c? / c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f0 c% b2 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 b0 c= c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f0 c% b2 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c==> f5 b0 f6 * / c==> c= c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 f5 c==> c==> f5 c= c? / c? / c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f0 c% b2 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 b0 c= c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f0 c% b2 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c==> f5 b0 f6
- |- (((!p'. (!q'. (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) = p') ==> ((p' ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) = q')) ==> (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) = p') ==> ((p' ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) = q')) ==> (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) = p') ==> ((p' ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) = q')) ==> (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 b0 c==> c==> b0 c= c? / c? / c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f0 c% b3 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 b1 c= c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f0 c% b3 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c==> b0 b1 * / ! c==> c= c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 b0 c==> c==> b0 c= c? / c? / c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f0 c% b3 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 b1 c= c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f0 c% b3 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c==> b0 b1 f5 * / ! c==> c= c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 b0 c==> c==> b0 c= c? / c? / c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f0 c% b3 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 b1 c= c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f0 c% b3 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c==> b0 b1 f5
+ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) |- ((coplanar (x INSERT (y INSERT (z INSERT (x' INSERT EMPTY))))) ==> (x' = x))
T c==> c= creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f2 cvector_add c% f0 f3 c% f1 cvector_add f3 ccross cvector_sub f4 f3 cvector_sub f5 f3 c==> ccoplanar * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c= f2 f3
- (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) |- ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))
T c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((\s. ((coplanar s) = (?u. (?v. (?w. (s SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))) s)
T * / c= ccoplanar b0 c? / c? / c? / cSUBSET b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ |- (((!x. (((vector_add x) (vec (NUMERAL _0))) = x)) ==> ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x)) = ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x))
T c= c==> ! c= cvector_add b0 cvec cNUMERAL c_0 b0 * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0 * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0
+ |- ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)
T * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (plane P), (x' IN P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P), ((\v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))) v) |- (((\v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))) v) /\ (x' = x))
T c==> cplane f0 c==> cIN f1 f0 c==> cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> * / c/\ c= creal_add f5 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f5 f2 c% b0 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 f6 c/\ * / c/\ c= creal_add f5 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f5 f2 c% b0 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 f6 c= f1 f2
- |- (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) = q')) ==> (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))) = ((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> q')))
T c==> c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c= c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 f5 c= c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 f5
+ |- (((!x. ((plane x) = (?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) ==> ((\x. ((plane x) = (?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) x)) = ((\x. ((plane x) = (?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) x))
T c= c==> ! c= cplane b0 c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / c= cplane b0 c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0 * / c= cplane b0 c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
- |- ((_3965038 = _3965040) ==> ((~ (_3965039 = _3965041)) \/ ((_3965040 SUBSET _3965041) \/ (~ (_3965038 SUBSET _3965039)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
- |- ((_3965034 = _3965036) ==> ((~ (_3965035 = _3965037)) \/ ((_3965036 IN _3965037) \/ (~ (_3965034 IN _3965035)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
- |- ((!y. (!x. (!P. (!v. (!u. (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))))))) = T)
T c= ! ! ! ! ! c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c= b2 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ c/\ cIN b1 b2 c/\ cIN b0 b2 c/\ cIN f0 b2 cSUBSET part cEMPTY b2 c/\ c= creal_add b4 b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f1 cvector_add c% b4 b1 c% b3 cvector_add b1 ccross cvector_sub b0 b1 cvector_sub f0 b1 cIN f1 b2 c? / c? / c? / c/\ cIN b1 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN b0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cT
- (_3965048 = _3965049) |- ((_3965048 = _3965049) /\ ((NUMERAL _3965048) = (NUMERAL _3965049)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s)
T * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0
- |- ((\P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F)))) P)
T * / ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c/\ cIN f0 b0 c/\ cIN f1 b0 c/\ cIN f2 b0 cSUBSET part cEMPTY b0 c/\ c= creal_add b2 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% b2 f0 c% b1 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 b0 c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF f4
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. ((real_mul u) (x $ i))) $ i)) ((lambdai. ((real_mul v) ((lambdai. ((real_add (x $ i)) (y $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_add u) v)) (x $ i))) $ i)) ((lambdai. ((real_mul v) (y $ i))) $ i))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% u) x)) ((% v) ((vector_add x) y))) $ i) = (((vector_add ((% ((real_add u) v)) x)) ((% v) y)) $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_mul f1 c$ f2 b1 b0 c$ clambda / creal_mul f3 c$ clambda / creal_add c$ f2 b1 c$ f4 b1 b1 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_add f1 f3 c$ f2 b1 b0 c$ clambda / creal_mul f3 c$ f4 b1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add c% f1 f2 c% f3 cvector_add f2 f4 f0 c$ cvector_add c% creal_add f1 f3 f2 c% f3 f4 f0
- (_3965046 = _3965047) |- ((_3965046 = _3965047) /\ ((BIT1 _3965046) = (BIT1 _3965047)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- ((~ (((real_sub ((real_add (a $ i)) (b $ i))) (a $ i)) = (b $ i))) ==> F)
T c==> c~ c= creal_sub creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c$ f2 f1 cF
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_sub ((real_add (a $ i)) (b $ i))) (a $ i)) = (b $ i)) = (((lambdai. ((real_sub ((lambdai. ((real_add (a $ i)) (b $ i))) $ i)) (a $ i))) $ i) = (b $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_sub creal_add c$ f1 f0 c$ f2 f0 c$ f1 f0 c$ f2 f0 c= c$ clambda / creal_sub c$ clambda / creal_add c$ f1 b1 c$ f2 b1 b0 c$ f1 b0 f0 c$ f2 f0
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((y IN P) = (y IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= cIN f5 f3 cIN f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((~ (_3965048 = _3965049)) \/ ((NUMERAL _3965048) = (NUMERAL _3965049)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- ((~ (x IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY))))))))))
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ (plane P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- ((((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)) ==> (x' = x)) /\ ((x' = x) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P))))
T c==> cplane f0 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c==> c/\ c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f1 c% b1 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f4 f0 c= f4 f1 c==> c= f4 f1 c/\ c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f1 c% b1 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f4 f0
- |- ((_3965068 = _3965070) ==> ((~ (_3965069 = _3965071)) \/ ((_3965068 INSERT _3965069) = (_3965070 INSERT _3965071))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (_3965069 = _3965071), (_3965068 = _3965070) |- ((_3965069 = _3965071) /\ ((_3965068 INSERT _3965069) = (_3965070 INSERT _3965071)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
+ |- (((!x. ((((% a) x) = (vec (NUMERAL _0))) = ((a = (real_of_num (NUMERAL _0))) \/ (x = (vec (NUMERAL _0)))))) ==> ((\x. ((((% a) x) = (vec (NUMERAL _0))) = ((a = (real_of_num (NUMERAL _0))) \/ (x = (vec (NUMERAL _0)))))) x)) = ((\x. ((((% a) x) = (vec (NUMERAL _0))) = ((a = (real_of_num (NUMERAL _0))) \/ (x = (vec (NUMERAL _0)))))) x))
T c= c==> ! c= c= c% f0 b0 cvec cNUMERAL c_0 c\/ c= f0 creal_of_num cNUMERAL c_0 c= b0 cvec cNUMERAL c_0 * / c= c= c% f0 b0 cvec cNUMERAL c_0 c\/ c= f0 creal_of_num cNUMERAL c_0 c= b0 cvec cNUMERAL c_0 f1 * / c= c= c% f0 b0 cvec cNUMERAL c_0 c\/ c= f0 creal_of_num cNUMERAL c_0 c= b0 cvec cNUMERAL c_0 f1
+ |- ((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((b $ i) = ((vec (NUMERAL _0)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) b) $ i) = (a $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((b $ i) = ((vec (NUMERAL _0)) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) b) $ i) = (a $ i))))))
T c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ cvec cNUMERAL c_0 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f1 f0 b0 c$ f1 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ cvec cNUMERAL c_0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f1 f0 b0 c$ f1 b0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((plane P) /\ (((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (coplanar (x INSERT (y INSERT (z INSERT (x' INSERT EMPTY))))))
T c==> c/\ cplane f0 c/\ cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f6 part cEMPTY
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_sub ((lambdai. ((real_add (a $ i)) (b $ i))) $ i)) (a $ i))) $ i) = (b $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_sub c$ clambda / creal_add c$ f1 b1 c$ f2 b1 b0 c$ f1 b0 f0 c$ f2 f0
+ |- ((((~ ((((real_add (a $ i)) (b $ i)) = (a $ i)) ==> ((b $ i) = (real_of_num (NUMERAL _0))))) ==> F) ==> ((((real_add (a $ i)) (b $ i)) = (a $ i)) ==> ((b $ i) = (real_of_num (NUMERAL _0))))) = ((((real_add (a $ i)) (b $ i)) = (a $ i)) ==> ((b $ i) = (real_of_num (NUMERAL _0)))))
T c= c==> c==> c~ c==> c= creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c= c$ f2 f1 creal_of_num cNUMERAL c_0 cF c==> c= creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c= c$ f2 f1 creal_of_num cNUMERAL c_0 c==> c= creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c= c$ f2 f1 creal_of_num cNUMERAL c_0
+ (plane P), (x' IN P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- (!v. (((\v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))) v) ==> (x' = x)))
T c==> cplane f0 c==> cIN f1 f0 c==> cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 ! c==> * / c/\ c= creal_add f5 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f5 f2 c% b1 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 b0 c= f1 f2
+ |- ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y)
T * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1
- (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- (F = F)
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= cF cF
- (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- (~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY)))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((\x. (!P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F))))) x)
T * / ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c= b1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ c/\ cIN b0 b1 c/\ cIN f0 b1 c/\ cIN f1 b1 cSUBSET part cEMPTY b1 c/\ c= creal_add b3 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f2 cvector_add c% b3 b0 c% b2 cvector_add b0 ccross cvector_sub f0 b0 cvector_sub f1 b0 cIN f2 b1 c? / c? / c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cF f3
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ |- (((!s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t))))) ==> ((\s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t))))) s)) = ((\s. (!t. (((x INSERT s) SUBSET t) = ((x IN t) /\ (s SUBSET t))))) s))
T c= c==> ! ! c= cSUBSET * * part cINSERT f0 b0 b1 c/\ cIN f0 b1 cSUBSET b0 b1 * / ! c= cSUBSET * * part cINSERT f0 b0 b1 c/\ cIN f0 b1 cSUBSET b0 b1 f1 * / ! c= cSUBSET * * part cINSERT f0 b0 b1 c/\ cIN f0 b1 cSUBSET b0 b1 f1
+ (plane P), (x' IN P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- (((!x. (((\v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))) x) ==> (x' = x))) ==> ((?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))) ==> (x' = x))) = ((?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))) ==> (x' = x)))
T c==> cplane f0 c==> cIN f1 f0 c==> cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c= c==> ! c==> * / c/\ c= creal_add f5 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f5 f2 c% b1 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 b0 c= f1 f2 c==> c? / c/\ c= creal_add f5 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f5 f2 c% b0 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 c= f1 f2 c==> c? / c/\ c= creal_add f5 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f5 f2 c% b0 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 c= f1 f2
+ |- ((\x. ((plane x) = (?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) x)
T * / c= cplane b0 c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) b) $ i) = (a $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((b $ i) = ((vec (NUMERAL _0)) $ i))))) = ((((vector_add a) b) = a) ==> (b = (vec (NUMERAL _0)))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f0 f1 b0 c$ f0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f1 b0 c$ cvec cNUMERAL c_0 b0 c==> c= cvector_add f0 f1 f0 c= f1 cvec cNUMERAL c_0
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- (z IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((_3965048 = _3965049) ==> ((NUMERAL _3965048) = (NUMERAL _3965049)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- (((~ a) \/ (~ b)) = (~ (a /\ b)))
T c= c\/ c~ f0 c~ f1 c~ c/\ f0 f1
+ ((\v. (?w. (((~ (collinear (u' INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))))) v') |- (((?w. (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))) ==> F) = F)
T c==> * / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c/\ cIN f2 f1 c/\ cIN f3 f1 c/\ cIN f4 f1 cSUBSET part cEMPTY f1 c/\ c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f7 cvector_add c% f5 f2 c% f6 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 cIN f7 f1 f8 c= c==> c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f8 * * part cINSERT b0 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f8 * * part cINSERT b0 part cEMPTY c/\ c/\ cIN f2 f1 c/\ cIN f3 f1 c/\ cIN f4 f1 cSUBSET part cEMPTY f1 c/\ c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f7 cvector_add c% f5 f2 c% f6 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 cIN f7 f1 cF cF
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- ((\w. ((~ (x IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY))))))))))) _3964993)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY f6
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- (!w. ((~ (x IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (_3964991 INSERT (_3964992 INSERT (w INSERT EMPTY)))))))))))
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY
+ (plane P), (x' IN P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- (!u. (((\u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) u) ==> (x' = x)))
T c==> cplane f0 c==> cIN f1 f0 c==> cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 ! c==> * / c? / c/\ c= creal_add b1 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% b1 f2 c% b1 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 b0 c= f1 f2
- (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- (((~ (x IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))))))) = ((~ (x IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN f9 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN f9 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY
- (~ (((real_sub ((real_add (a $ i)) (b $ i))) (a $ i)) = (b $ i))) |- ((~ (((real_sub ((real_add (a $ i)) (b $ i))) (a $ i)) = (b $ i))) /\ F)
T c==> c~ c= creal_sub creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c$ f2 f1 c/\ c~ c= creal_sub creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c$ f2 f1 cF
- (_3965064 = _3965066), (_3965065 = _3965067) |- ((_3965065 = _3965067) /\ (((vector_add _3965064) _3965065) = ((vector_add _3965066) _3965067)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
- |- ((_3965061 = _3965063) ==> ((~ (_3965060 = _3965062)) \/ (((% _3965060) _3965061) = ((% _3965062) _3965063))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c% f2 f0 c% f3 f1
- |- ((~ (_3965068 = _3965070)) \/ ((~ (_3965069 = _3965071)) \/ ((_3965068 INSERT _3965069) = (_3965070 INSERT _3965071))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- (b = (vec (NUMERAL _0))) |- ((b = (vec (NUMERAL _0))) /\ (((vector_add a) b) = a))
T c==> c= f0 cvec cNUMERAL c_0 c/\ c= f0 cvec cNUMERAL c_0 c= cvector_add f1 f0 f1
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- (((!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) ==> ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s)) = ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s))
T c= c==> ! ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0 * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0
+ |- ((\c. (!x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))))) c)
T * / ! ! c= cdot b1 c% b0 b2 creal_mul b0 cdot b1 b2 f0
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((x IN P) = (x IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= cIN f4 f3 cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_3965056 = _3965058) ==> ((~ (_3965057 = _3965059)) \/ (((cross _3965056) _3965057) = ((cross _3965058) _3965059))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= ccross f0 f2 ccross f1 f3
- (~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) |- ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) /\ F)
T c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((((x IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ ((((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))))) ==> F) = F)
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= c==> c/\ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF cF
- |- ((real_neg ((real_sub ((real_sub ((real_add (a $ i)) (b $ i))) (a $ i))) (b $ i))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_sub creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c$ f2 f1 creal_of_num cNUMERAL c_0
- (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) |- (y IN P)
T c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 cIN f2 f1
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))), (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- (((x IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY))))) /\ ((y IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY))))) /\ ((z IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY))))) /\ ((((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY))))))))) ==> F)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c= f7 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c/\ cIN f0 f7 c/\ cIN f1 f7 c/\ cIN f2 f7 cSUBSET part cEMPTY f7 c/\ c= creal_add f8 f9 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f8 f0 c% f9 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f7 c==> c/\ cIN f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c/\ cIN cvector_add c% f8 f0 c% f9 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY cF
- |- ((!w'. ((~ (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY))))))))))) = ((~ (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (!w. ((~ (y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))
T c= ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c\/ c~ cIN f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f5 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ cIN f6 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY
+ |- ((((~ (((real_add ((real_mul u) (x $ i))) ((real_mul v) ((real_add (x $ i)) (y $ i)))) = ((real_add ((real_mul ((real_add u) v)) (x $ i))) ((real_mul v) (y $ i))))) ==> F) ==> (((real_add ((real_mul u) (x $ i))) ((real_mul v) ((real_add (x $ i)) (y $ i)))) = ((real_add ((real_mul ((real_add u) v)) (x $ i))) ((real_mul v) (y $ i))))) = (((real_add ((real_mul u) (x $ i))) ((real_mul v) ((real_add (x $ i)) (y $ i)))) = ((real_add ((real_mul ((real_add u) v)) (x $ i))) ((real_mul v) (y $ i)))))
T c= c==> c==> c~ c= creal_add creal_mul f0 c$ f1 f2 creal_mul f3 creal_add c$ f1 f2 c$ f4 f2 creal_add creal_mul creal_add f0 f3 c$ f1 f2 creal_mul f3 c$ f4 f2 cF c= creal_add creal_mul f0 c$ f1 f2 creal_mul f3 creal_add c$ f1 f2 c$ f4 f2 creal_add creal_mul creal_add f0 f3 c$ f1 f2 creal_mul f3 c$ f4 f2 c= creal_add creal_mul f0 c$ f1 f2 creal_mul f3 creal_add c$ f1 f2 c$ f4 f2 creal_add creal_mul creal_add f0 f3 c$ f1 f2 creal_mul f3 c$ f4 f2
+ (plane P), (x' IN P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- (((\u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) u) ==> (x' = x))
T c==> cplane f0 c==> cIN f1 f0 c==> cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> * / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% b0 f2 c% b1 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 f5 c= f1 f2
- |- (((!x. (!P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F))))) ==> ((\x. (!P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F))))) x)) = ((\x. (!P. (!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F))))) x))
T c= c==> ! ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c= b1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ c/\ cIN b0 b1 c/\ cIN f0 b1 c/\ cIN f1 b1 cSUBSET part cEMPTY b1 c/\ c= creal_add b3 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f2 cvector_add c% b3 b0 c% b2 cvector_add b0 ccross cvector_sub f0 b0 cvector_sub f1 b0 cIN f2 b1 c? / c? / c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cF * / ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c= b1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ c/\ cIN b0 b1 c/\ cIN f0 b1 c/\ cIN f1 b1 cSUBSET part cEMPTY b1 c/\ c= creal_add b3 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f2 cvector_add c% b3 b0 c% b2 cvector_add b0 ccross cvector_sub f0 b0 cvector_sub f1 b0 cIN f2 b1 c? / c? / c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cF f3 * / ! ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c= b1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ c/\ cIN b0 b1 c/\ cIN f0 b1 c/\ cIN f1 b1 cSUBSET part cEMPTY b1 c/\ c= creal_add b3 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f2 cvector_add c% b3 b0 c% b2 cvector_add b0 ccross cvector_sub f0 b0 cvector_sub f1 b0 cIN f2 b1 c? / c? / c? / c/\ cIN b0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f0 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cF f3
+ ((\u. (?v. (?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))))) u') |- (((?v. (?w. (((~ (collinear (u' INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))))) ==> F) = F)
T c==> * / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 f7 c= c==> c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f7 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 cF cF
+ (plane P), (x' IN P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- ((?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))) ==> (x' = x))
T c==> cplane f0 c==> cIN f1 f0 c==> cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> c? / c/\ c= creal_add f5 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f5 f2 c% b0 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 c= f1 f2
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((\u. (?v. (?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))))) u') |- (?v. (?w. (((~ (collinear (u' INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))))
T c==> * / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 f7 c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f7 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT f7 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- ((?v. (?w. (((~ (collinear (u' INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))))) ==> F)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f5 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c/\ cIN f0 f5 c/\ cIN f1 f5 c/\ cIN f2 f5 cSUBSET part cEMPTY f5 c/\ c= creal_add f6 f7 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f6 f0 c% f7 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f5 cF
- |- ((!u. (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) = T)
T c= ! c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add b0 f4 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f5 cvector_add c% b0 f1 c% f4 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f5 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cT
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- (((y IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ ((((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))))) = ((x IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ ((((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= c/\ cIN f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (((real_add ((real_mul u) (x $ i))) ((real_mul v) ((real_add (x $ i)) (y $ i)))) = ((real_add ((real_mul ((real_add u) v)) (x $ i))) ((real_mul v) (y $ i))))) |- ((~ (((real_add ((real_mul u) (x $ i))) ((real_mul v) ((real_add (x $ i)) (y $ i)))) = ((real_add ((real_mul ((real_add u) v)) (x $ i))) ((real_mul v) (y $ i))))) /\ F)
T c==> c~ c= creal_add creal_mul f0 c$ f1 f2 creal_mul f3 creal_add c$ f1 f2 c$ f4 f2 creal_add creal_mul creal_add f0 f3 c$ f1 f2 creal_mul f3 c$ f4 f2 c/\ c~ c= creal_add creal_mul f0 c$ f1 f2 creal_mul f3 creal_add c$ f1 f2 c$ f4 f2 creal_add creal_mul creal_add f0 f3 c$ f1 f2 creal_mul f3 c$ f4 f2 cF
- |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ |- (((!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) ==> ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s)) = ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s))
T c= c==> ! c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2 * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2
+ |- ((~ (((b $ i) = (real_of_num (NUMERAL _0))) ==> (((real_add (a $ i)) (b $ i)) = (a $ i)))) ==> F)
T c==> c~ c==> c= c$ f0 f1 creal_of_num cNUMERAL c_0 c= creal_add c$ f2 f1 c$ f0 f1 c$ f2 f1 cF
- (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (b $ i))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0
- (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((~ (x IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) ==> (x IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c==> c~ cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (plane P), (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))), (x' IN P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- (x' = x)
T c==> cplane f0 c==> c= creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f3 cvector_add c% f1 f4 c% f2 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 c==> cIN f3 f0 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c= f3 f4
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
+ |- ((\x. (~ (x IN EMPTY))) x)
T * / c~ cIN b0 part cEMPTY f0
- ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- (((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) = T)
T c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= cSUBSET * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cT
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- (((((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) = ((z IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ ((((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= c/\ cIN cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((_3965046 = _3965047) ==> ((BIT1 _3965046) = (BIT1 _3965047)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ ((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) ==> F)
T c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 c==> c~ c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF
- (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) = (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((?v. ((((real_add (real_of_num (NUMERAL (BIT1 _0)))) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% (real_of_num (NUMERAL (BIT1 _0)))) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))) = ((\u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= c? / c/\ c= creal_add creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% b0 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 * / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 creal_of_num cNUMERAL cBIT1 c_0
- (?w. (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))), (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- ((?w. (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))) /\ F)
T c==> c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c/\ cIN f3 f2 c/\ cIN f4 f2 c/\ cIN f5 f2 cSUBSET part cEMPTY f2 c/\ c= creal_add f6 f7 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f8 cvector_add c% f6 f3 c% f7 cvector_add f3 ccross cvector_sub f4 f3 cvector_sub f5 f3 cIN f8 f2 c==> c~ c? / c? / c? / c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f8 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c/\ cIN f3 f2 c/\ cIN f4 f2 c/\ cIN f5 f2 cSUBSET part cEMPTY f2 c/\ c= creal_add f6 f7 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f8 cvector_add c% f6 f3 c% f7 cvector_add f3 ccross cvector_sub f4 f3 cvector_sub f5 f3 cIN f8 f2 cF
+ |- ((((real_add (a $ i)) (b $ i)) = (a $ i)) ==> ((b $ i) = (real_of_num (NUMERAL _0))))
T c==> c= creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c= c$ f2 f1 creal_of_num cNUMERAL c_0
+ |- ((\v. ((((real_add (real_of_num (NUMERAL (BIT1 _0)))) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% (real_of_num (NUMERAL (BIT1 _0)))) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))) (real_of_num (NUMERAL _0)))
T * / c/\ c= creal_add creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% b0 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 creal_of_num cNUMERAL c_0
+ |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
+ |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- ((\v. (!w. ((~ (x IN ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))))))))) _3964992)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f5
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))), (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((~ (x IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ ((~ (((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (_3964991 INSERT (_3964992 INSERT (_3964993 INSERT EMPTY))))))))))
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c= f7 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c/\ cIN f0 f7 c/\ cIN f1 f7 c/\ cIN f2 f7 cSUBSET part cEMPTY f7 c/\ c= creal_add f8 f9 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f8 f0 c% f9 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f7 c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c\/ c~ cIN cvector_add c% f8 f0 c% f9 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f10 * * part cINSERT f11 * * part cINSERT f12 part cEMPTY
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- ((\u. (!v. (!w. ((~ (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) _3964991)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f4
+ |- (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))
T c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0
+ |- (((((vector_add a) b) = a) ==> (b = (vec (NUMERAL _0)))) /\ ((b = (vec (NUMERAL _0))) ==> (((vector_add a) b) = a)))
T c/\ c==> c= cvector_add f0 f1 f0 c= f1 cvec cNUMERAL c_0 c==> c= f1 cvec cNUMERAL c_0 c= cvector_add f0 f1 f0
+ (plane P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) ==> ((x' IN P) ==> (coplanar (x INSERT (y INSERT (z INSERT (x' INSERT EMPTY))))))))
T c==> cplane f0 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 c==> cIN f6 f0 ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f6 part cEMPTY
+ (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0)))) |- ((((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (b $ i))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (b $ i))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1 creal_of_num cNUMERAL c_0
- (_3965034 = _3965036) |- ((_3965034 = _3965036) /\ ((~ (_3965035 = _3965037)) \/ ((_3965036 IN _3965037) \/ (~ (_3965034 IN _3965035)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c/\ cIN cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) |- (x IN P)
T c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 cIN f0 f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((((real_add (a $ i)) (b $ i)) = (a $ i)) ==> ((b $ i) = (real_of_num (NUMERAL _0)))) = ((((lambdai. ((real_add (a $ i)) (b $ i))) $ i) = (a $ i)) ==> ((b $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c= creal_add c$ f1 f0 c$ f2 f0 c$ f1 f0 c= c$ f2 f0 creal_of_num cNUMERAL c_0 c==> c= c$ clambda / creal_add c$ f1 b0 c$ f2 b0 f0 c$ f1 f0 c= c$ f2 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- (((!x''. (((\w. (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))) x'') ==> F)) ==> ((?w. (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))) ==> F)) = ((?w. (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))) ==> F))
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> ! c==> * / c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b1 part cEMPTY c= f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b1 part cEMPTY c/\ c/\ cIN f0 f6 c/\ cIN f1 f6 c/\ cIN f2 f6 cSUBSET part cEMPTY f6 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f7 f0 c% f8 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f6 b0 cF c==> c? / c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c= f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c/\ c/\ cIN f0 f6 c/\ cIN f1 f6 c/\ cIN f2 f6 cSUBSET part cEMPTY f6 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f7 f0 c% f8 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f6 cF c==> c? / c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c= f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c/\ c/\ cIN f0 f6 c/\ cIN f1 f6 c/\ cIN f2 f6 cSUBSET part cEMPTY f6 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f7 f0 c% f8 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f6 cF
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((b $ i) = ((vec (NUMERAL _0)) $ i)) ==> ((((vector_add a) b) $ i) = (a $ i)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((b $ i) = ((vec (NUMERAL _0)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) b) $ i) = (a $ i))))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((b $ i) = ((vec (NUMERAL _0)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) b) $ i) = (a $ i)))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c= c$ cvector_add f2 f1 f0 c$ f2 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f2 f1 f0 c$ f2 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f2 f1 f0 c$ f2 f0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((b $ i) = ((vec (NUMERAL _0)) $ i)) ==> ((((vector_add a) b) $ i) = (a $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ f1 f0 c$ cvec cNUMERAL c_0 f0 c= c$ cvector_add f2 f1 f0 c$ f2 f0
- (_3965042 = _3965044) |- ((_3965043 = _3965045) ==> (((real_add _3965042) _3965043) = ((real_add _3965044) _3965045)))
T c==> c= f0 f1 c==> c= f2 f3 c= creal_add f0 f2 creal_add f1 f3
- |- ((?w'. ((~ (collinear (u INSERT (v INSERT (w' INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))) = ((?w. (~ (collinear (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))
T c= c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c? / c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
- |- ((~ (_3965032 = _3965033)) \/ ((collinear _3965033) \/ (~ (collinear _3965032))))
T c\/ c~ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
+ (plane P), ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))), (x' IN P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- (x' = x)
T c==> cplane f0 c==> c/\ c= creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f1 f4 c% f2 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 c==> cIN f3 f0 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c= f3 f4
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3
- |- ((\v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F))) v)
T * / ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add b1 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f4 cvector_add c% b1 f1 c% b0 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f4 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF f5
+ |- ((real_neg ((real_sub (b $ i)) (real_of_num (NUMERAL _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i)))
T c= creal_neg creal_sub c$ f0 f1 creal_of_num cNUMERAL c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (((!x. (((real_add x) (real_of_num (NUMERAL _0))) = x)) ==> ((\x. (((real_add x) (real_of_num (NUMERAL _0))) = x)) x)) = ((\x. (((real_add x) (real_of_num (NUMERAL _0))) = x)) x))
T c= c==> ! c= creal_add b0 creal_of_num cNUMERAL c_0 b0 * / c= creal_add b0 creal_of_num cNUMERAL c_0 b0 f0 * / c= creal_add b0 creal_of_num cNUMERAL c_0 b0 f0
- |- (((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F))
T c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF
+ (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) |- (T = ((coplanar (x INSERT (y INSERT (z INSERT (x' INSERT EMPTY))))) ==> (x' = x)))
T c==> c= creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f2 cvector_add c% f0 f3 c% f1 cvector_add f3 ccross cvector_sub f4 f3 cvector_sub f5 f3 c= cT c==> ccoplanar * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c= f2 f3
- (_3965038 = _3965040) |- ((_3965038 = _3965040) /\ ((~ (_3965039 = _3965041)) \/ ((_3965040 SUBSET _3965041) \/ (~ (_3965038 SUBSET _3965039)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
+ |- (((!t. ((s = t) = (!x. ((x IN s) = (x IN t))))) ==> ((\t. ((s = t) = (!x. ((x IN s) = (x IN t))))) t)) = ((\t. ((s = t) = (!x. ((x IN s) = (x IN t))))) t))
T c= c==> ! c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 * / c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 f1 * / c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 f1
- (_3965035 = _3965037), (_3965034 = _3965036) |- ((_3965035 = _3965037) /\ ((_3965036 IN _3965037) \/ (~ (_3965034 IN _3965035))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cIN f3 f1 c~ cIN f2 f0
+ |- ((\a. (!x. ((((% a) x) = (vec (NUMERAL _0))) = ((a = (real_of_num (NUMERAL _0))) \/ (x = (vec (NUMERAL _0))))))) a)
T * / ! c= c= c% b0 b1 cvec cNUMERAL c_0 c\/ c= b0 creal_of_num cNUMERAL c_0 c= b1 cvec cNUMERAL c_0 f0
+ |- ((x IN (GSPEC (\GEN%PVAR%1415. (P (SETSPEC GEN%PVAR%1415))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
- (_3965068 = _3965070) |- ((_3965069 = _3965071) ==> ((_3965068 INSERT _3965069) = (_3965070 INSERT _3965071)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ ((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- (?u. (?v. (?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))))))
T c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 c? / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0
+ (plane P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- (((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)) = (x' = x))
T c==> cplane f0 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c= c/\ c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f1 c% b1 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f4 f0 c= f4 f1
+ (plane P), (x' IN P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- (((!x. (((\u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) x) ==> (x' = x))) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) ==> (x' = x))) = ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) ==> (x' = x)))
T c==> cplane f0 c==> cIN f1 f0 c==> cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c= c==> ! c==> * / c? / c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% b1 f2 c% b2 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 b0 c= f1 f2 c==> c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% b0 f2 c% b1 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 c= f1 f2 c==> c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% b0 f2 c% b1 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 c= f1 f2
+ |- (((!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))))) ==> ((\s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))))) s)) = ((\s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))))) s))
T c= c==> ! ! ! c= cIN b2 * * part cINTER b0 b1 c/\ cIN b2 b0 cIN b2 b1 * / ! ! c= cIN b2 * * part cINTER b0 b1 c/\ cIN b2 b0 cIN b2 b1 f0 * / ! ! c= cIN b2 * * part cINTER b0 b1 c/\ cIN b2 b0 cIN b2 b1 f0
- |- ((((~ (((real_sub ((real_add (a $ i)) (b $ i))) (a $ i)) = (b $ i))) ==> F) ==> (((real_sub ((real_add (a $ i)) (b $ i))) (a $ i)) = (b $ i))) = (((real_sub ((real_add (a $ i)) (b $ i))) (a $ i)) = (b $ i)))
T c= c==> c==> c~ c= creal_sub creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c$ f2 f1 cF c= creal_sub creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c$ f2 f1 c= creal_sub creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c$ f2 f1
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_add a) b) $ i) = (a $ i)) ==> ((b $ i) = ((vec (NUMERAL _0)) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ cvector_add f1 f2 f0 c$ f1 f0 c= c$ f2 f0 c$ cvec cNUMERAL c_0 f0
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_add a) b) $ i) = (a $ i)) ==> ((b $ i) = ((vec (NUMERAL _0)) $ i)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) b) $ i) = (a $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((b $ i) = ((vec (NUMERAL _0)) $ i))))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) b) $ i) = (a $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((b $ i) = ((vec (NUMERAL _0)) $ i)))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ cvector_add f1 f2 f0 c$ f1 f0 c= c$ f2 f0 c$ cvec cNUMERAL c_0 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f1 f2 f0 c$ f1 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f2 f0 c$ cvec cNUMERAL c_0 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f1 f2 f0 c$ f1 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ f2 f0 c$ cvec cNUMERAL c_0 f0
- |- ((!w. (P \/ (Q w))) = (P \/ (!w. (Q w))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- (y IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 cIN f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0)))) |- ((((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 c/\ c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 cF
+ (~ ((((real_add (a $ i)) (b $ i)) = (a $ i)) ==> ((b $ i) = (real_of_num (NUMERAL _0))))) |- ((((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0)))) \/ (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0)))))
T c==> c~ c==> c= creal_add c$ f0 f1 c$ f2 f1 c$ f0 f1 c= c$ f2 f1 creal_of_num cNUMERAL c_0 c\/ c/\ c= c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt c$ f2 f1 creal_of_num cNUMERAL c_0 c/\ c= c$ f2 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 creal_of_num cNUMERAL c_0
+ |- ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s)
T * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2
+ |- (((!b. (((hull affine) (a INSERT (b INSERT EMPTY))) = (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) a)) ((% v) b))))))))) ==> ((\b. (((hull affine) (a INSERT (b INSERT EMPTY))) = (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) a)) ((% v) b))))))))) b)) = ((\b. (((hull affine) (a INSERT (b INSERT EMPTY))) = (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) a)) ((% v) b))))))))) b))
T c= c==> ! c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / c? / cSETSPEC b1 c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b2 f0 c% b3 b0 * / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / c? / cSETSPEC b1 c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b2 f0 c% b3 b0 f1 * / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / c? / cSETSPEC b1 c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b2 f0 c% b3 b0 f1
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))), ((\w. (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))) w) |- (((\w. (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))) w) /\ F)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> * / c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c= f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c/\ c/\ cIN f0 f6 c/\ cIN f1 f6 c/\ cIN f2 f6 cSUBSET part cEMPTY f6 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f7 f0 c% f8 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f6 f9 c/\ * / c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c= f6 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 part cEMPTY c/\ c/\ cIN f0 f6 c/\ cIN f1 f6 c/\ cIN f2 f6 cSUBSET part cEMPTY f6 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f7 f0 c% f8 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f6 f9 cF
+ |- (((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) b) $ i) = (a $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((b $ i) = ((vec (NUMERAL _0)) $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) b) $ i) = (a $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((b $ i) = ((vec (NUMERAL _0)) $ i)))))) = ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add a) b) $ i) = (a $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((b $ i) = ((vec (NUMERAL _0)) $ i))))))
T c= c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f0 f1 b0 c$ f0 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f1 b0 c$ cvec cNUMERAL c_0 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f0 f1 b0 c$ f0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f1 b0 c$ cvec cNUMERAL c_0 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add f0 f1 b0 c$ f0 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f1 b0 c$ cvec cNUMERAL c_0 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((b $ i) = (real_of_num (NUMERAL _0))) ==> (((real_add (a $ i)) (b $ i)) = (a $ i))) = (((b $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i)) ==> (((lambdai. ((real_add (a $ i)) (b $ i))) $ i) = (a $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c= c$ f1 f0 creal_of_num cNUMERAL c_0 c= creal_add c$ f2 f0 c$ f1 f0 c$ f2 f0 c==> c= c$ f1 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0 c= c$ clambda / creal_add c$ f2 b0 c$ f1 b0 f0 c$ f2 f0
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- (((!v. (!w. ((~ (x IN ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))))))))) ==> ((\v. (!w. ((~ (x IN ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))))))))) _3964992)) = ((\v. (!w. ((~ (x IN ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (_3964991 INSERT (v INSERT (w INSERT EMPTY)))))))))))) _3964992))
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> ! ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f5 * / ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f5
+ (~ (((real_add ((real_mul u) (x $ i))) ((real_mul v) ((real_add (x $ i)) (y $ i)))) = ((real_add ((real_mul ((real_add u) v)) (x $ i))) ((real_mul v) (y $ i))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add creal_mul f0 c$ f1 f2 creal_mul f3 creal_add c$ f1 f2 c$ f4 f2 creal_add creal_mul creal_add f0 f3 c$ f1 f2 creal_mul f3 c$ f4 f2 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) = (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4
+ |- ((\x. (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) x)
T * / c= c% creal_of_num cNUMERAL cBIT1 c_0 b0 b0 f0
- |- ((((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) = (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x))) ==> (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) = q')) ==> (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))) = ((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> q')))) = (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) = q')) ==> (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))) = ((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> q'))))
T c= c==> c= c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c==> c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c= c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 f5 c= c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 f5 c==> c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c= c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 f5 c= c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 f5
- (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0)))) |- ((((b $ i) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) (b $ i)) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) (b $ i)) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 c= c==> c= c$ f0 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 c$ f0 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 c$ f0 f1 creal_of_num cNUMERAL c_0
- |- ((_3965050 = _3965051) ==> ((real_of_num _3965050) = (real_of_num _3965051)))
T c==> c= f0 f1 c= creal_of_num f0 creal_of_num f1
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- ((((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> F)
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c= f7 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c/\ cIN f0 f7 c/\ cIN f1 f7 c/\ cIN f2 f7 cSUBSET part cEMPTY f7 c/\ c= creal_add f8 f9 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f8 f0 c% f9 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f7 cF
- |- ((_3965032 = _3965033) ==> ((collinear _3965033) \/ (~ (collinear _3965032))))
T c==> c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
+ |- (((!x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y))))) ==> ((\x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y))))) x)) = ((\x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y))))) x))
T c= c==> ! ! c= cdot b0 c% f0 b1 creal_mul f0 cdot b0 b1 * / ! c= cdot b0 c% f0 b1 creal_mul f0 cdot b0 b1 f1 * / ! c= cdot b0 c% f0 b1 creal_mul f0 cdot b0 b1 f1
+ |- ((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) /\ (x' IN P)) = (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))))
T c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c= c/\ c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 cIN f4 f1 c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0
+ (plane P), (x' IN P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- (((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))) ==> (x' = x))
T c==> cplane f0 c==> cIN f1 f0 c==> cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> c/\ c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f5 f2 c% f6 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 c= f1 f2
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- (!u'. (((\u. (?v. (?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))))) u') ==> F))
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> * / c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= f4 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c/\ cIN f0 f4 c/\ cIN f1 f4 c/\ cIN f2 f4 cSUBSET part cEMPTY f4 c/\ c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f5 f0 c% f6 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f4 b0 cF
+ |- ((x' IN (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))))) = (?u. (?v. (((\p. (\t. (p /\ (x' = t)))) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))
T c= cIN f0 * part cGSPEC / c? / c? / cSETSPEC b0 c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b1 f1 c% b2 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 c? / c? / * * / / c/\ b2 c= f0 b3 c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b0 f1 c% b1 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1
+ |- ((\t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) t)
T * / ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 f1
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- (((!x''. (((\v. (?w. (((~ (collinear (u' INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))))) x'') ==> F)) ==> ((?v. (?w. (((~ (collinear (u' INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))))) ==> F)) = ((?v. (?w. (((~ (collinear (u' INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))))) ==> F))
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= c==> ! c==> * / c? / c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f5 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f0 f5 c/\ cIN f1 f5 c/\ cIN f2 f5 cSUBSET part cEMPTY f5 c/\ c= creal_add f6 f7 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f6 f0 c% f7 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f5 b0 cF c==> c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f5 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c/\ cIN f0 f5 c/\ cIN f1 f5 c/\ cIN f2 f5 cSUBSET part cEMPTY f5 c/\ c= creal_add f6 f7 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f6 f0 c% f7 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f5 cF c==> c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f5 * * part chull part caffine * * part cINSERT f4 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c/\ cIN f0 f5 c/\ cIN f1 f5 c/\ cIN f2 f5 cSUBSET part cEMPTY f5 c/\ c= creal_add f6 f7 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f6 f0 c% f7 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f5 cF
+ (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- (!u. (!v. (!w. ((~ (x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ ((~ (x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) \/ (~ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))
T c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! ! ! c\/ c~ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- (?v. (?w. (((~ (collinear (u' INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))))), (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- F
T c==> c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c/\ cIN f2 f1 c/\ cIN f3 f1 c/\ cIN f4 f1 cSUBSET part cEMPTY f1 c/\ c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f7 cvector_add c% f5 f2 c% f6 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 cIN f7 f1 c==> c~ c? / c? / c? / c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f7 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF
- (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0))) = (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 c= creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0
+ (plane P), (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))), ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))), (x' IN P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- (x' = x)
T c==> cplane f0 c==> c= creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c==> c/\ c= creal_add f1 f2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f1 f4 c% f2 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 c==> cIN f3 f0 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f0 c= f3 f4
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((x' IN P) = (x' IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= cIN f9 f3 cIN f9 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (~ (z IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))), (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((~ (z IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (z IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c/\ cIN f5 f4 c/\ cIN f6 f4 c/\ cIN f0 f4 cSUBSET part cEMPTY f4 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f5 c% f8 cvector_add f5 ccross cvector_sub f6 f5 cvector_sub f0 f5 cIN f9 f4 c/\ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (_3965061 = _3965063) |- ((_3965061 = _3965063) /\ ((~ (_3965060 = _3965062)) \/ (((% _3965060) _3965061) = ((% _3965062) _3965063))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c% f2 f0 c% f3 f1
- |- (((!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F)) ==> ((\u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F)) u)) = ((\u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F)) u))
T c= c==> ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add b0 f4 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f5 cvector_add c% b0 f1 c% f4 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f5 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF * / c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add b0 f4 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f5 cvector_add c% b0 f1 c% f4 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f5 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF f6 * / c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add b0 f4 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f5 cvector_add c% b0 f1 c% f4 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f5 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF f6
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- (x' IN P)
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 cIN f9 f3
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
+ (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((y IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ ((((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c/\ cIN f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!a. (!b. (((hull affine) (a INSERT (b INSERT EMPTY))) = (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) a)) ((% v) b)))))))))) ==> ((\a. (!b. (((hull affine) (a INSERT (b INSERT EMPTY))) = (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) a)) ((% v) b)))))))))) a)) = ((\a. (!b. (((hull affine) (a INSERT (b INSERT EMPTY))) = (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) a)) ((% v) b)))))))))) a))
T c= c==> ! ! c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / c? / cSETSPEC b2 c= creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b3 b0 c% b4 b1 * / ! c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / c? / cSETSPEC b2 c= creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b3 b0 c% b4 b1 f0 * / ! c= * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / c? / cSETSPEC b2 c= creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b3 b0 c% b4 b1 f0
+ (plane P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- (!x'. (((x' IN (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))))) /\ (x' IN P)) = (x' = x)))
T c==> cplane f0 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 ! c= c/\ cIN b0 * part cGSPEC / c? / c? / cSETSPEC b1 c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b2 f1 c% b3 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN b0 f0 c= b0 f1
+ |- ((\t. ((s = t) = (!x. ((x IN s) = (x IN t))))) t)
T * / c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 f1
+ (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0)))) |- ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i)) = (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0))))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\x. (!y. ((((real_mul x) y) = (real_of_num (NUMERAL _0))) = ((x = (real_of_num (NUMERAL _0))) \/ (y = (real_of_num (NUMERAL _0))))))) x)
T * / ! c= c= creal_mul b0 b1 creal_of_num cNUMERAL c_0 c\/ c= b0 creal_of_num cNUMERAL c_0 c= b1 creal_of_num cNUMERAL c_0 f0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((lambdai. ((real_add (a $ i)) (b $ i))) $ i) = (a $ i)) ==> ((b $ i) = ((lambdai. (real_of_num (NUMERAL _0))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_add c$ f1 b0 c$ f2 b0 f0 c$ f1 f0 c= c$ f2 f0 c$ clambda / creal_of_num cNUMERAL c_0 f0
+ ((plane P) /\ ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P)) |- (((plane P) /\ ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P)) /\ (!x'. (((x' IN (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))))) /\ (x' IN P)) = (x' = x))))
T c==> c/\ cplane f0 cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c/\ c/\ cplane f0 cSUBSET * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 ! c= c/\ cIN b0 * part cGSPEC / c? / c? / cSETSPEC b1 c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b2 f1 c% b3 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN b0 f0 c= b0 f1
+ |- ((x IN EMPTY) = F)
T c= cIN f0 part cEMPTY cF
+ ((\u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) u) |- (((?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))) ==> (x' = x)) = (x' = x))
T c==> * / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 f4 c= c==> c? / c/\ c= creal_add f4 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f4 f1 c% b0 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 c= f0 f1 c= f0 f1
+ ((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) /\ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))
T c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 c/\ c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))), (plane P), (x' IN P), ((x INSERT (y INSERT (z INSERT EMPTY))) SUBSET P) |- ((?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))) /\ (x' = x))
T c==> c? / c/\ c= creal_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 c% b0 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 c==> cplane f5 c==> cIN f1 f5 c==> cSUBSET * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ c? / c/\ c= creal_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 c% b0 cvector_add f2 ccross cvector_sub f3 f2 cvector_sub f4 f2 c= f1 f2
- (_3965032 = _3965033) |- ((((collinear _3965032) = (collinear _3965033)) ==> ((collinear _3965033) \/ (~ (collinear _3965032)))) = ((collinear _3965033) \/ (~ (collinear _3965032))))
T c==> c= f0 f1 c= c==> c= ccollinear f0 ccollinear f1 c\/ ccollinear f1 c~ ccollinear f0 c\/ ccollinear f1 c~ ccollinear f0
- |- (((!v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F))) ==> ((\v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F))) v)) = ((\v. (!u. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F))) v))
T c= c==> ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add b1 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f4 cvector_add c% b1 f1 c% b0 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f4 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF * / ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add b1 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f4 cvector_add c% b1 f1 c% b0 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f4 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF f5 * / ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add b1 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f4 cvector_add c% b1 f1 c% b0 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f4 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF f5
- |- ((!v. (!u. (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))))) = T)
T c= ! ! c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add b1 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f4 cvector_add c% b1 f1 c% b0 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f4 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cT
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- (~ F), (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))), (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c==> c/\ c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c= f7 * * part chull part caffine * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ c/\ cIN f0 f7 c/\ cIN f1 f7 c/\ cIN f2 f7 cSUBSET part cEMPTY f7 c/\ c= creal_add f8 f9 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% f8 f0 c% f9 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 f7 c/\ c~ cF cF
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- (_3965042 = _3965044) |- ((_3965042 = _3965044) /\ ((~ (_3965043 = _3965045)) \/ (((real_add _3965042) _3965043) = ((real_add _3965044) _3965045))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= creal_add f0 f2 creal_add f1 f3
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F)) = ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))) ==> F))
T c= c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c/\ cIN f1 f0 c/\ cIN f2 f0 c/\ cIN f3 f0 cSUBSET part cEMPTY f0 c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f6 cvector_add c% f4 f1 c% f5 cvector_add f1 ccross cvector_sub f2 f1 cvector_sub f3 f1 cIN f6 f0 c? / c? / c? / c/\ cIN f1 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f6 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF
- (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) |- ((z IN P) /\ (EMPTY SUBSET P))
T c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c/\ cIN f3 f1 cSUBSET part cEMPTY f1
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (_3965073 = _3965075) |- ((_3965073 = _3965075) /\ ((~ (_3965072 = _3965074)) \/ (((hull _3965072) _3965073) = ((hull _3965074) _3965075))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part chull f2 f0 * * part chull f3 f1
- (_3965068 = _3965070) |- ((_3965068 = _3965070) /\ ((~ (_3965069 = _3965071)) \/ ((_3965068 INSERT _3965069) = (_3965070 INSERT _3965071))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- ((~ (_3965061 = _3965063)) \/ ((~ (_3965060 = _3965062)) \/ (((% _3965060) _3965061) = ((% _3965062) _3965063))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c% f2 f0 c% f3 f1
- |- ((!P. (!v. (!u. (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) ==> (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))))))) = T)
T c= ! ! ! c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c/\ cIN f0 b0 c/\ cIN f1 b0 c/\ cIN f2 b0 cSUBSET part cEMPTY b0 c/\ c= creal_add b2 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f3 cvector_add c% b2 f0 c% b1 cvector_add f0 ccross cvector_sub f1 f0 cvector_sub f2 f0 cIN f3 b0 c? / c? / c? / c/\ cIN f0 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f1 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f2 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cIN f3 * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cT
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (_3965052 = _3965054) |- ((_3965053 = _3965055) ==> (((vector_sub _3965052) _3965053) = ((vector_sub _3965054) _3965055)))
T c==> c= f0 f1 c==> c= f2 f3 c= cvector_sub f0 f2 cvector_sub f1 f3
- (_3965050 = _3965051) |- ((_3965050 = _3965051) /\ ((real_of_num _3965050) = (real_of_num _3965051)))
T c==> c= f0 f1 c/\ c= f0 f1 c= creal_of_num f0 creal_of_num f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) ==> ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)) = ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- |- ((~ (_3965056 = _3965058)) \/ ((~ (_3965057 = _3965059)) \/ (((cross _3965056) _3965057) = ((cross _3965058) _3965059))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= ccross f0 f2 ccross f1 f3
- |- ((?w. (P /\ (Q w))) = (P /\ (?w. (Q w))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0
- |- (((\t. (f t)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((?w'. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY))))))) = ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (?w. (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))
T c= c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY
- (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) |- ((z IN P) = T)
T c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c= cIN f3 f1 cT
- (_3965064 = _3965066) |- ((_3965064 = _3965066) /\ ((~ (_3965065 = _3965067)) \/ (((vector_add _3965064) _3965065) = ((vector_add _3965066) _3965067))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (_3965032 = _3965033) |- ((_3965032 = _3965033) /\ ((collinear _3965033) \/ (~ (collinear _3965032))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt (b $ i)) (real_of_num (NUMERAL _0))))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt c$ f0 f1 creal_of_num cNUMERAL c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p'. (!q'. (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) = p') ==> ((p' ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) = q')) ==> (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 b0 c==> c==> b0 c= c? / c? / c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f0 c% b3 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 b1 c= c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b2 f0 c% b3 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c==> b0 b1 f5
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i)))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0
- (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((~ (((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) ==> (((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))) IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c==> c~ cIN cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (((b $ i) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (b $ i))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) (b $ i)) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) (b $ i)) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) (b $ i)) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= c$ f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 c$ f0 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))) = (EMPTY SUBSET ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c= cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_3965052 = _3965054) |- ((_3965052 = _3965054) /\ ((~ (_3965053 = _3965055)) \/ (((vector_sub _3965052) _3965053) = ((vector_sub _3965054) _3965055))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cvector_sub f0 f2 cvector_sub f1 f3
- (?w. (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P)))))), (~ (?u. (?v. (?w. ((x IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((y IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((z IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ ((x' IN ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (EMPTY SUBSET ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))))) |- F
T c==> c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c/\ cIN f3 f2 c/\ cIN f4 f2 c/\ cIN f5 f2 cSUBSET part cEMPTY f2 c/\ c= creal_add f6 f7 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f8 cvector_add c% f6 f3 c% f7 cvector_add f3 ccross cvector_sub f4 f3 cvector_sub f5 f3 cIN f8 f2 c==> c~ c? / c? / c? / c/\ cIN f3 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f4 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f5 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN f8 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET part cEMPTY * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cF
- |- ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 * f1 b1 b1 * f1 f0
- (~ (x IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))), (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((~ (x IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (x IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c/\ cIN f0 f4 c/\ cIN f5 f4 c/\ cIN f6 f4 cSUBSET part cEMPTY f4 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f0 c% f8 cvector_add f0 ccross cvector_sub f5 f0 cvector_sub f6 f0 cIN f9 f4 c/\ c~ cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f0 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) = p') ==> ((p' ==> ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x))))))))) = q')) ==> (((((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) ==> (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))))))) = (p' ==> q'))))
T c==> c= c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 f5 c==> c==> f5 c= c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 f6 c= c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f0 c% b1 cvector_add f0 ccross cvector_sub f2 f0 cvector_sub f3 f0 c==> f5 f6
- |- ((?w. ((P w) /\ Q)) = ((?w. (P w)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_3965034 = _3965036) |- ((_3965035 = _3965037) ==> ((_3965036 IN _3965037) \/ (~ (_3965034 IN _3965035))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cIN f1 f3 c~ cIN f0 f2
- (((~ (collinear (u' INSERT (v' INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) /\ (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((x' = ((vector_add ((% u) x)) ((% v) ((vector_add x) ((cross ((vector_sub y) x)) ((vector_sub z) x)))))) /\ (x' IN P))))) |- ((~ (y IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY)))))) ==> (y IN ((hull affine) (u' INSERT (v' INSERT (w INSERT EMPTY))))))
T c==> c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f4 f3 c/\ cIN f5 f3 c/\ cIN f6 f3 cSUBSET part cEMPTY f3 c/\ c= creal_add f7 f8 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f9 cvector_add c% f7 f4 c% f8 cvector_add f4 ccross cvector_sub f5 f4 cvector_sub f6 f4 cIN f9 f3 c==> c~ cIN f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f5 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (((x IN P) /\ ((y IN P) /\ ((z IN P) /\ (EMPTY SUBSET P)))) /\ (x' = x)) |- (z IN P)
T c==> c/\ c/\ cIN f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 cSUBSET part cEMPTY f1 c= f4 f0 cIN f3 f1
