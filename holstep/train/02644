N Hypermap.lemma_inverses_in_component
C |- (!H. (!x. ((((inverse (edge_map H)) x) IN ((comb_component H) x)) /\ ((((inverse (node_map H)) x) IN ((comb_component H) x)) /\ (((inverse (face_map H)) x) IN ((comb_component H) x))))))
T c/\ cIN cinverse * part cedge_map f0 f1 * * part ccomb_component f0 f1 c/\ cIN cinverse * part cnode_map f0 f1 * * part ccomb_component f0 f1 cIN cinverse * part cface_map f0 f1 * * part ccomb_component f0 f1
D Hypermap.hypermap_lemma
A |- (!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))))
T c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
D Hypermap.INVERSE_EVALUATION
A |- (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (?j. (((inverse p) x) = (((POWER p) j) x)))))))
T c==> c/\ cFINITE f0 cpermutes f1 f0 c? / c= cinverse f1 f2 cPOWER f1 b0 f2
D Hypermap.lemma_powers_in_component
A |- (!H. (!x. (!j. (((((POWER (edge_map H)) j) x) IN ((comb_component H) x)) /\ (((((POWER (node_map H)) j) x) IN ((comb_component H) x)) /\ ((((POWER (face_map H)) j) x) IN ((comb_component H) x)))))))
T c/\ cIN cPOWER * part cedge_map f0 f1 f2 * * part ccomb_component f0 f2 c/\ cIN cPOWER * part cnode_map f0 f1 f2 * * part ccomb_component f0 f2 cIN cPOWER * part cface_map f0 f1 f2 * * part ccomb_component f0 f2
+ |- (!j. (((\j. (((inverse (face_map H)) x) = (((POWER (face_map H)) j) x))) j) ==> (((inverse (face_map H)) x) IN ((comb_component H) x))))
T c==> * / c= cinverse * part cface_map f0 f1 cPOWER * part cface_map f0 b0 f1 f2 cIN cinverse * part cface_map f0 f1 * * part ccomb_component f0 f1
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (?j. (((inverse p) x) = (((POWER p) j) x))))))), ((FINITE s) /\ ((permutes p) s)) |- (((FINITE s) /\ ((permutes p) s)) /\ (!x. (?j. (((inverse p) x) = (((POWER p) j) x)))))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c? / c= cinverse b1 b2 cPOWER b1 b3 b2 c==> c/\ cFINITE f0 cpermutes f1 f0 c/\ c/\ cFINITE f0 cpermutes f1 f0 ! c? / c= cinverse f1 b0 cPOWER f1 b1 b0
+ (FINITE (dart H)), ((permutes (node_map H)) (dart H)) |- (!x. (?j. (((inverse (node_map H)) x) = (((POWER (node_map H)) j) x))))
T c==> cFINITE * part cdart f0 c==> cpermutes * part cnode_map f0 * part cdart f0 ! c? / c= cinverse * part cnode_map f0 b0 cPOWER * part cnode_map f0 b1 b0
+ |- ((((inverse (face_map H)) x) = (((POWER (face_map H)) j) x)) ==> (((inverse (face_map H)) x) IN ((comb_component H) x)))
T c==> c= cinverse * part cface_map f0 f1 cPOWER * part cface_map f0 f2 f1 cIN cinverse * part cface_map f0 f1 * * part ccomb_component f0 f1
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (?j. (((inverse p) x) = (((POWER p) j) x))))))) |- ((\p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (?j. (((inverse p) x) = (((POWER p) j) x)))))) p)
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c? / c= cinverse b1 b2 cPOWER b1 b3 b2 * / ! c==> c/\ cFINITE f0 cpermutes b0 f0 c? / c= cinverse b0 b1 cPOWER b0 b2 b1 f1
+ (FINITE (dart H)), ((permutes (edge_map H)) (dart H)) |- (((inverse (edge_map H)) x) IN ((comb_component H) x))
T c==> cFINITE * part cdart f0 c==> cpermutes * part cedge_map f0 * part cdart f0 cIN cinverse * part cedge_map f0 f1 * * part ccomb_component f0 f1
+ ((\j. (((inverse (edge_map H)) x) = (((POWER (edge_map H)) j) x))) j) |- (((((inverse (edge_map H)) x) = (((POWER (edge_map H)) j) x)) ==> (((inverse (edge_map H)) x) IN ((comb_component H) x))) = (((inverse (edge_map H)) x) IN ((comb_component H) x)))
T c==> * / c= cinverse * part cedge_map f0 f1 cPOWER * part cedge_map f0 b0 f1 f2 c= c==> c= cinverse * part cedge_map f0 f1 cPOWER * part cedge_map f0 f2 f1 cIN cinverse * part cedge_map f0 f1 * * part ccomb_component f0 f1 cIN cinverse * part cedge_map f0 f1 * * part ccomb_component f0 f1
+ ((\j. (((inverse (node_map H)) x) = (((POWER (node_map H)) j) x))) j) |- (((((inverse (node_map H)) x) = (((POWER (node_map H)) j) x)) ==> (((inverse (node_map H)) x) IN ((comb_component H) x))) = (((inverse (node_map H)) x) IN ((comb_component H) x)))
T c==> * / c= cinverse * part cnode_map f0 f1 cPOWER * part cnode_map f0 b0 f1 f2 c= c==> c= cinverse * part cnode_map f0 f1 cPOWER * part cnode_map f0 f2 f1 cIN cinverse * part cnode_map f0 f1 * * part ccomb_component f0 f1 cIN cinverse * part cnode_map f0 f1 * * part ccomb_component f0 f1
+ (!s. (!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (?j. (((inverse p) x) = (((POWER p) j) x))))))) |- (((!p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (?j. (((inverse p) x) = (((POWER p) j) x)))))) ==> ((\p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (?j. (((inverse p) x) = (((POWER p) j) x)))))) p)) = ((\p. (!x. (((FINITE s) /\ ((permutes p) s)) ==> (?j. (((inverse p) x) = (((POWER p) j) x)))))) p))
T c==> ! ! ! c==> c/\ cFINITE b0 cpermutes b1 b0 c? / c= cinverse b1 b2 cPOWER b1 b3 b2 c= c==> ! ! c==> c/\ cFINITE f0 cpermutes b0 f0 c? / c= cinverse b0 b1 cPOWER b0 b2 b1 * / ! c==> c/\ cFINITE f0 cpermutes b0 f0 c? / c= cinverse b0 b1 cPOWER b0 b2 b1 f1 * / ! c==> c/\ cFINITE f0 cpermutes b0 f0 c? / c= cinverse b0 b1 cPOWER b0 b2 b1 f1
- (?j. (((inverse (edge_map H)) x) = (((POWER (edge_map H)) j) x))) |- ((?j. (((inverse (edge_map H)) x) = (((POWER (edge_map H)) j) x))) /\ (((inverse (edge_map H)) x) IN ((comb_component H) x)))
T c==> c? / c= cinverse * part cedge_map f0 f1 cPOWER * part cedge_map f0 b0 f1 c/\ c? / c= cinverse * part cedge_map f0 f1 cPOWER * part cedge_map f0 b0 f1 cIN cinverse * part cedge_map f0 f1 * * part ccomb_component f0 f1
- |- (T = ((((POWER (face_map H)) j) x) IN ((comb_component H) x)))
T c= cT cIN cPOWER * part cface_map f0 f1 f2 * * part ccomb_component f0 f2
- |- (((((POWER (edge_map H)) j) x) IN ((comb_component H) x)) = T)
T c= cIN cPOWER * part cedge_map f0 f1 f2 * * part ccomb_component f0 f2 cT
- |- (((((POWER (node_map H)) j) x) IN ((comb_component H) x)) = T)
T c= cIN cPOWER * part cnode_map f0 f1 f2 * * part ccomb_component f0 f2 cT
- (?j. (((inverse (face_map H)) x) = (((POWER (face_map H)) j) x))) |- ((?j. (((inverse (face_map H)) x) = (((POWER (face_map H)) j) x))) /\ (((inverse (face_map H)) x) IN ((comb_component H) x)))
T c==> c? / c= cinverse * part cface_map f0 f1 cPOWER * part cface_map f0 b0 f1 c/\ c? / c= cinverse * part cface_map f0 f1 cPOWER * part cface_map f0 b0 f1 cIN cinverse * part cface_map f0 f1 * * part ccomb_component f0 f1
- |- (T = ((((POWER (node_map H)) j) x) IN ((comb_component H) x)))
T c= cT cIN cPOWER * part cnode_map f0 f1 f2 * * part ccomb_component f0 f2
- (?j. (((inverse (node_map H)) x) = (((POWER (node_map H)) j) x))) |- ((?j. (((inverse (node_map H)) x) = (((POWER (node_map H)) j) x))) /\ (((inverse (node_map H)) x) IN ((comb_component H) x)))
T c==> c? / c= cinverse * part cnode_map f0 f1 cPOWER * part cnode_map f0 b0 f1 c/\ c? / c= cinverse * part cnode_map f0 f1 cPOWER * part cnode_map f0 b0 f1 cIN cinverse * part cnode_map f0 f1 * * part ccomb_component f0 f1
- |- (T = ((((POWER (edge_map H)) j) x) IN ((comb_component H) x)))
T c= cT cIN cPOWER * part cedge_map f0 f1 f2 * * part ccomb_component f0 f2
- |- (((((POWER (face_map H)) j) x) IN ((comb_component H) x)) = T)
T c= cIN cPOWER * part cface_map f0 f1 f2 * * part ccomb_component f0 f2 cT
