N Planarity.graph_add_edge_is_graph
C |- (!E1. (!E. (!v. (!u. (((E1 = (E UNION ((v INSERT (u INSERT EMPTY)) INSERT EMPTY))) /\ ((~ (v = u)) /\ (graph E))) ==> (graph E1))))))
T c==> c/\ c= f0 * * part cUNION f1 * * part cINSERT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c/\ c~ c= f2 f3 cgraph f1 cgraph f0
D TRUTH
A |- T
T cT
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D UNION
A |- (!s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))))
T c= * * part cUNION f0 f1 * part cGSPEC / c? / cSETSPEC b0 c\/ cIN b1 f0 cIN b1 f1 b1
D IN_SING
A |- (!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y))))
T c= cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
D FINITE_EMPTY
A |- (FINITE EMPTY)
T cFINITE part cEMPTY
D FINITE_INSERT
A |- (!s. (!x. ((FINITE (x INSERT s)) = (FINITE s))))
T c= cFINITE * * part cINSERT f0 f1 cFINITE f1
D HAS_SIZE
A |- (!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))))
T c= cHAS_SIZE f0 f1 c/\ cFINITE f0 c= cCARD f0 f1
D Planarity.GRAPH
A |- (!E. ((graph E) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))))))
T c= cgraph f0 ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0
D Planarity.CARD_2_FAN
A |- (!v. (!w. ((~ (v = w)) ==> ((CARD (v INSERT (w INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c~ c= f0 f1 c= cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((!x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) ==> ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x)) = ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x))
T c= c==> ! ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0 * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0
+ (~ (v = u)) |- (T = (((~ (v = u)) ==> ((CARD (v INSERT (u INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))) ==> ((CARD (v INSERT (u INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c~ c= f0 f1 c= cT c==> c==> c~ c= f0 f1 c= cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c= cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) ==> ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t)) = ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t))
T c= c==> ! c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1 * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ |- (((!y. ((x IN (y INSERT EMPTY)) = (x = y))) ==> ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)) = ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y))
T c= c==> ! c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
+ |- ((!u. (((E1 = (E UNION ((v INSERT (u INSERT EMPTY)) INSERT EMPTY))) /\ ((~ (v = u)) /\ (graph E))) ==> (graph E1))) = T)
T c= ! c==> c/\ c= f0 * * part cUNION f1 * * part cINSERT * * part cINSERT f2 * * part cINSERT b0 part cEMPTY part cEMPTY c/\ c~ c= f2 b0 cgraph f1 cgraph f0 cT
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- (((!w. ((~ (v = w)) ==> ((CARD (v INSERT (w INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((\w. ((~ (v = w)) ==> ((CARD (v INSERT (w INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))))) u)) = ((\w. ((~ (v = w)) ==> ((CARD (v INSERT (w INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))))) u))
T c= c==> ! c==> c~ c= f0 b0 c= cCARD * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 * / c==> c~ c= f0 b0 c= cCARD * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 f1 * / c==> c~ c= f0 b0 c= cCARD * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 f1
+ (~ (v = u)), (graph E), (E1 = (E UNION ((v INSERT (u INSERT EMPTY)) INSERT EMPTY))) |- (graph E1)
T c==> c~ c= f0 f1 c==> cgraph f2 c==> c= f3 * * part cUNION f2 * * part cINSERT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY cgraph f3
+ |- (((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s)) = ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s))
T c= c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0 * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- |- ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x)
T * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))), (~ (v = u)) |- (!e. (((e IN E) \/ (e = (v INSERT (u INSERT EMPTY)))) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))))
T c==> ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 c==> c~ c= f1 f2 ! c==> c\/ cIN b0 f0 c= b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0
+ (~ (v = u)) |- (((~ (v = u)) ==> ((CARD (v INSERT (u INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))) ==> (FINITE (v INSERT (u INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> c==> c~ c= f0 f1 c= cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ ((E1 = (E UNION ((v INSERT (u INSERT EMPTY)) INSERT EMPTY))) /\ ((~ (v = u)) /\ (graph E))) |- (((E1 = (E UNION ((v INSERT (u INSERT EMPTY)) INSERT EMPTY))) /\ ((~ (v = u)) /\ (graph E))) /\ (graph E1))
T c==> c/\ c= f0 * * part cUNION f1 * * part cINSERT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c/\ c~ c= f2 f3 cgraph f1 c/\ c/\ c= f0 * * part cUNION f1 * * part cINSERT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c/\ c~ c= f2 f3 cgraph f1 cgraph f0
+ |- ((FINITE EMPTY) = T)
T c= cFINITE part cEMPTY cT
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!e. t) = t)
T c= ! f0 f0
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((CARD (v INSERT (u INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))) ==> (FINITE (v INSERT (u INSERT EMPTY))))
T c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (FINITE (v INSERT (u INSERT EMPTY)))
T cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ |- ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n)
T * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1
+ |- (((!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) ==> ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)) = ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x))
T c= c==> ! ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
- |- ((?x. t) = t)
T c= c? / f0 f0
- (e IN E) |- ((e IN E) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
- |- (~ (x IN EMPTY))
T c~ cIN f0 part cEMPTY
+ ((CARD (v INSERT (u INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))) |- (((CARD (v INSERT (u INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (FINITE (v INSERT (u INSERT EMPTY))))
T c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ (~ (v = u)), (E1 = (E UNION ((v INSERT (u INSERT EMPTY)) INSERT EMPTY))), ((~ (v = u)) /\ (graph E)) |- (graph E1)
T c==> c~ c= f0 f1 c==> c= f2 * * part cUNION f3 * * part cINSERT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY c==> c/\ c~ c= f0 f1 cgraph f3 cgraph f2
+ (~ (v = u)) |- ((FINITE (v INSERT (u INSERT EMPTY))) /\ ((CARD (v INSERT (u INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))))
T c==> c~ c= f0 f1 c/\ cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- ((\s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) s)
T * / c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 f1
+ (~ (v = u)) |- (FINITE (v INSERT (u INSERT EMPTY)))
T c==> c~ c= f0 f1 cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- (((!x. (~ (x IN EMPTY))) ==> ((\x. (~ (x IN EMPTY))) x)) = ((\x. (~ (x IN EMPTY))) x))
T c= c==> ! c~ cIN b0 part cEMPTY * / c~ cIN b0 part cEMPTY f0 * / c~ cIN b0 part cEMPTY f0
+ (E1 = (E UNION ((v INSERT (u INSERT EMPTY)) INSERT EMPTY))) |- (((!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!e. (((e IN E) \/ (e = (v INSERT (u INSERT EMPTY)))) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))))) = ((graph E) ==> (graph E1)))
T c==> c= f0 * * part cUNION f1 * * part cINSERT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c= c==> ! c==> cIN b0 f1 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ cIN b0 f1 c= b0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 c==> cgraph f1 cgraph f0
- (~ (v = u)) |- (((~ (u = v)) ==> ((u = v) = F)) = ((u = v) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ (~ (v = u)) |- ((v = u) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
+ |- (((!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) ==> ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n)) = ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n))
T c= c==> ! c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1 * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ |- ((((~ (v = u)) ==> ((CARD (v INSERT (u INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))) ==> ((CARD (v INSERT (u INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))) = ((CARD (v INSERT (u INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))))
T c= c==> c==> c~ c= f0 f1 c= cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c= cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c= cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
- |- (((~ (x IN EMPTY)) ==> ((x IN EMPTY) = F)) = ((x IN EMPTY) = F))
T c= c==> c~ cIN f0 part cEMPTY c= cIN f0 part cEMPTY cF c= cIN f0 part cEMPTY cF
- |- ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)
T * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) |- ((((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))) = (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))
T c==> ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c==> cIN f1 f0 cHAS_SIZE f1 cNUMERAL cBIT0 cBIT1 c_0 cHAS_SIZE f1 cNUMERAL cBIT0 cBIT1 c_0 cHAS_SIZE f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) ==> ((\s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) s)) = ((\s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) s))
T c= c==> ! ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 * / ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 f0 * / ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 f0
- (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) |- (((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))) = T)
T c==> ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> cIN f1 f0 cHAS_SIZE f1 cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)
T * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
+ (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))), ((e = (v INSERT (u INSERT EMPTY))) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))), ((e IN E) \/ (e = (v INSERT (u INSERT EMPTY)))) |- (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))
T c==> ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c= f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cHAS_SIZE f1 cNUMERAL cBIT0 cBIT1 c_0 c==> c\/ cIN f1 f0 c= f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cHAS_SIZE f1 cNUMERAL cBIT0 cBIT1 c_0
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y)
T * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1
- (u = v) |- (v = u)
T c==> c= f0 f1 c= f1 f0
+ (e = (v INSERT (u INSERT EMPTY))) |- (((FINITE (v INSERT (u INSERT EMPTY))) /\ ((CARD (v INSERT (u INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))) = (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))
T c==> c= f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c/\ cFINITE * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cCARD * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 cHAS_SIZE f0 cNUMERAL cBIT0 cBIT1 c_0
+ (~ (v = u)) |- (((CARD (v INSERT (u INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))) = ((FINITE (v INSERT (u INSERT EMPTY))) /\ ((CARD (v INSERT (u INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c~ c= f0 f1 c= c= cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
+ (~ (v = u)) |- (((~ (v = u)) ==> ((CARD (v INSERT (u INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))) ==> ((CARD (v INSERT (u INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))))
T c==> c~ c= f0 f1 c==> c==> c~ c= f0 f1 c= cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c= cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
- |- ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
+ |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- |- (((!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) ==> ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s)) = ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s))
T c= c==> ! c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2 * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2
+ |- (((!v. (!w. ((~ (v = w)) ==> ((CARD (v INSERT (w INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((\v. (!w. ((~ (v = w)) ==> ((CARD (v INSERT (w INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))))) v)) = ((\v. (!w. ((~ (v = w)) ==> ((CARD (v INSERT (w INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))))) v))
T c= c==> ! ! c==> c~ c= b0 b1 c= cCARD * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 * / ! c==> c~ c= b0 b1 c= cCARD * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 f0 * / ! c==> c~ c= b0 b1 c= cCARD * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 f0
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- ((\x. (~ (x IN EMPTY))) x)
T * / c~ cIN b0 part cEMPTY f0
+ |- ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)
T * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
- |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- (e IN E) |- (((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))
T c==> cIN f0 f1 c==> c==> cIN f0 f1 cHAS_SIZE f0 cNUMERAL cBIT0 cBIT1 c_0 cHAS_SIZE f0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((\s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) s)) = ((\s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) s))
T c= c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 * / ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 f0 * / ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 f0
- |- ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
+ |- ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t)
T * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1
+ (~ (v = u)), (e = (v INSERT (u INSERT EMPTY))) |- ((e = (v INSERT (u INSERT EMPTY))) /\ (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))
T c==> c~ c= f0 f1 c==> c= f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c= f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cHAS_SIZE f2 cNUMERAL cBIT0 cBIT1 c_0
- (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))), (e IN E) |- ((e IN E) /\ (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))
T c==> ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 c==> cIN f1 f0 c/\ cIN f1 f0 cHAS_SIZE f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (T = (FINITE (v INSERT (u INSERT EMPTY))))
T c= cT cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((!v. (!u. (((E1 = (E UNION ((v INSERT (u INSERT EMPTY)) INSERT EMPTY))) /\ ((~ (v = u)) /\ (graph E))) ==> (graph E1)))) = T)
T c= ! ! c==> c/\ c= f0 * * part cUNION f1 * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY part cEMPTY c/\ c~ c= b0 b1 cgraph f1 cgraph f0 cT
+ (~ (v = u)) |- ((!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) ==> (!e. (((e IN E) \/ (e = (v INSERT (u INSERT EMPTY)))) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c~ c= f0 f1 c==> ! c==> cIN b0 f2 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 ! c==> c\/ cIN b0 f2 c= b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0
+ (~ (v = u)) |- ((((CARD (v INSERT (u INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0)))) ==> (FINITE (v INSERT (u INSERT EMPTY)))) = (((~ (v = u)) ==> ((CARD (v INSERT (u INSERT EMPTY))) = (NUMERAL (BIT0 (BIT1 _0))))) ==> (FINITE (v INSERT (u INSERT EMPTY)))))
T c==> c~ c= f0 f1 c= c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c==> c~ c= f0 f1 c= cCARD * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 cFINITE * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s)
T * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
+ (E1 = (E UNION ((v INSERT (u INSERT EMPTY)) INSERT EMPTY))), ((~ (v = u)) /\ (graph E)) |- (graph E1)
T c==> c= f0 * * part cUNION f1 * * part cINSERT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c==> c/\ c~ c= f2 f3 cgraph f1 cgraph f0
+ |- ((\s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) s)
T * / ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 f0
- (~ (v = u)) |- (~ (u = v))
T c==> c~ c= f0 f1 c~ c= f1 f0
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- (FINITE s) |- ((FINITE s) /\ ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))
T c==> cFINITE f0 c/\ cFINITE f0 c= cCARD * * part cINSERT f1 f0 cCOND cIN f1 f0 cCARD f0 cSUC cCARD f0
+ |- (((!E. ((graph E) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((\E. ((graph E) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))))) E)) = ((\E. ((graph E) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))))) E))
T c= c==> ! c= cgraph b0 ! c==> cIN b1 b0 cHAS_SIZE b1 cNUMERAL cBIT0 cBIT1 c_0 * / c= cgraph b0 ! c==> cIN b1 b0 cHAS_SIZE b1 cNUMERAL cBIT0 cBIT1 c_0 f0 * / c= cgraph b0 ! c==> cIN b1 b0 cHAS_SIZE b1 cNUMERAL cBIT0 cBIT1 c_0 f0
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- (~ (v = u)) |- ((u = v) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- |- ((x IN EMPTY) = F)
T c= cIN f0 part cEMPTY cF
- |- (((!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) ==> ((\s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) s)) = ((\s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) s))
T c= c==> ! c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 * / c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 f1 * / c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 f1
+ (E1 = (E UNION ((v INSERT (u INSERT EMPTY)) INSERT EMPTY))), ((E1 = (E UNION ((v INSERT (u INSERT EMPTY)) INSERT EMPTY))) /\ ((~ (v = u)) /\ (graph E))) |- (graph E1)
T c==> c= f0 * * part cUNION f1 * * part cINSERT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c==> c/\ c= f0 * * part cUNION f1 * * part cINSERT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c/\ c~ c= f2 f3 cgraph f1 cgraph f0
+ |- ((((E1 = (E UNION ((v INSERT (u INSERT EMPTY)) INSERT EMPTY))) /\ ((~ (v = u)) /\ (graph E))) ==> (graph E1)) = T)
T c= c==> c/\ c= f0 * * part cUNION f1 * * part cINSERT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c/\ c~ c= f2 f3 cgraph f1 cgraph f0 cT
+ |- ((~ F) = T)
T c= c~ cF cT
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ |- ((\E. ((graph E) = (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))))) E)
T * / c= cgraph b0 ! c==> cIN b1 b0 cHAS_SIZE b1 cNUMERAL cBIT0 cBIT1 c_0 f0
+ (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))), (~ (v = u)) |- (((e IN E) \/ (e = (v INSERT (u INSERT EMPTY)))) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))
T c==> ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 c==> c~ c= f1 f2 c==> c\/ cIN f3 f0 c= f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cHAS_SIZE f3 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\x. ((FINITE (x INSERT s)) = (FINITE s))) x)
T * / c= cFINITE * * part cINSERT b0 f0 cFINITE f0 f1
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- (FINITE s) |- ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))
T c==> cFINITE f0 c= cCARD * * part cINSERT f1 f0 cCOND cIN f1 f0 cCARD f0 cSUC cCARD f0
+ (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) |- ((\e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))) e)
T c==> ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 * / c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 f1
- (e IN E) |- (T = (((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))))
T c==> cIN f0 f1 c= cT c==> c==> cIN f0 f1 cHAS_SIZE f0 cNUMERAL cBIT0 cBIT1 c_0 cHAS_SIZE f0 cNUMERAL cBIT0 cBIT1 c_0
+ (!e. ((e IN E) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))))), (~ (v = u)) |- ((((e IN E) \/ (e = (v INSERT (u INSERT EMPTY)))) ==> (e HAS_SIZE (NUMERAL (BIT0 (BIT1 _0))))) = T)
T c==> ! c==> cIN b0 f0 cHAS_SIZE b0 cNUMERAL cBIT0 cBIT1 c_0 c==> c~ c= f1 f2 c= c==> c\/ cIN f3 f0 c= f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cHAS_SIZE f3 cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s)
T * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0
+ |- (((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) ==> ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)) = ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- |- (((!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) ==> ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y)) = ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y))
T c= c==> ! ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1 * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1
- |- (((!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) ==> ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)) = ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x))
T c= c==> ! ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0 * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
