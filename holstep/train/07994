N Planarity.POINT_IN_AFF_GE_IMP_IN_EDGE
C |- (!x. (!V. (!E. (!v. (!u. (!u1. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ ((u1 IN V) /\ ((~ (x = u1)) /\ (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))) ==> (u1 IN (v INSERT (u INSERT EMPTY))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN f5 f1 c/\ c~ c= f0 f5 cIN f5 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D LEFT_FORALL_OR_THM
A |- (!P. (!Q. ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
D SKOLEM_THM
A |- (!P. ((!x. (?y. ((P x) y))) = (?y. (!x. ((P x) (y x))))))
T c= ! c? / * * f0 b0 b1 c? / ! * * f0 b1 * b0 b1
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D Misc_defs_and_lemmas.IN_ELIM_THM'
A |- ((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D UNION
A |- (!s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))))
T c= * * part cUNION f0 f1 * part cGSPEC / c? / cSETSPEC b0 c\/ cIN b1 f0 cIN b1 f1 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D IN_SING
A |- (!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y))))
T c= cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_mul
A |- (!c. (!x. (((% c) x) = (lambdai. ((real_mul c) (x $ i))))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
D AFF_GE_EQ_AFFINE_HULL
A |- (!s. (!t. (((aff_ge s) EMPTY) = ((hull affine) s))))
T c= * * part caff_ge f0 part cEMPTY * * part chull part caffine f0
D Fan.fan7
A |- (!E. (!V. (!x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2))))))))))
T c= cfan7 c, f0 c, f1 f2 ! ! c==> c/\ cIN b0 * * part cUNION f2 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f2 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER b0 b1
D Fan.FAN
A |- (!x. (!V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E))))))))))))
T c= cFAN c, f0 c, f1 f2 c/\ cSUBSET * part cUNIONS f2 f1 c/\ cgraph f2 c/\ cfan1 c, f0 c, f1 f2 c/\ cfan2 c, f0 c, f1 f2 c/\ cfan6 c, f0 c, f1 f2 cfan7 c, f0 c, f1 f2
D Fan.remark1_fan
A |- (!x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
D Planarity.aff_ge1_1_subset_aff_ge
A |- (!x. (!v. (!u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))))
T c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 f3 cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D Planarity.AFFINE_HULL_1
A |- (!a. (((hull affine) (a INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5568. (?u. (((SETSPEC GEN%PVAR%5568) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) a)))))))
T c= * * part chull part caffine * * part cINSERT f0 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c= b1 creal_of_num cNUMERAL cBIT1 c_0 c% b1 f0
D Planarity.point_in_aff_ge_1_1
A |- (!x. (!v. ((~ (x = v)) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) /\ (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)))))))
T c==> c~ c= f0 f1 c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ |- ((?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1))) = (?v. (((v IN V) /\ (!x. ((x IN (u1 INSERT EMPTY)) = (x IN (v INSERT EMPTY))))) = (u1 IN V))))
T c= c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 c? / c= c/\ cIN b0 f0 ! c= cIN b1 * * part cINSERT f1 part cEMPTY cIN b1 * * part cINSERT b0 part cEMPTY cIN f1 f0
+ |- (?v. (((v IN V) /\ (!x. ((x IN (u1 INSERT EMPTY)) = (x IN (v INSERT EMPTY))))) = (u1 IN V)))
T c? / c= c/\ cIN b0 f0 ! c= cIN b1 * * part cINSERT f1 part cEMPTY cIN b1 * * part cINSERT b0 part cEMPTY cIN f1 f0
+ (x = v), (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- (v = u1)
T c==> c= f0 f1 c==> c/\ c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f2 f1 c~ c= f2 f3 c= f1 f2
- |- (T = (((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) _3021427)) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) _3021427)) = ((((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) _3021427) \/ (~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) _3021427)))))
T c= cT c= c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2
- (graph E) |- ((graph E) = T)
T c==> cgraph f0 c= cgraph f0 cT
+ |- ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)
T * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
+ |- (((~ ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) ==> F) = ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))
T c= c==> c~ c= c? / c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 cF c= c? / c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1
+ (~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) |- (((?x. ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1))))) ==> F) = F)
T c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 c= c==> c? / c/\ c\/ c/\ ! * f0 b1 c/\ ! ! c\/ c= b2 f1 c~ c= b2 b1 ! ! c\/ c~ c= b2 f1 c= b2 b1 * f0 f1 c\/ ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1 c~ * f0 f1 cF cF
+ (u1 IN V) |- (((?v. ((v IN V) /\ ((u1 INSERT EMPTY) = (v INSERT EMPTY)))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))) = ((?v. (((v IN V) /\ ((u1 INSERT EMPTY) = (v INSERT EMPTY))) = (u1 IN V))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))))
T c==> cIN f0 f1 c= c==> c? / c/\ cIN b0 f1 c= * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY cIN f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c= c/\ cIN b0 f1 c= * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY cIN f0 f1 cIN f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)) ==> (((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)))
T c==> c==> c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
+ (?v. ((v IN V) /\ ((u1 INSERT EMPTY) = (v INSERT EMPTY)))), (~ (x = u1)), (FAN (x , (V , E))), ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))), ((v INSERT (u INSERT EMPTY)) IN E) |- (u1 IN (v INSERT (u INSERT EMPTY)))
T c==> c? / c/\ cIN b0 f0 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c~ c= f2 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- (((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F) ==> ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F))
T c==> c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ |- (((!s. (!t. (((aff_ge s) EMPTY) = ((hull affine) s)))) ==> ((\s. (!t. (((aff_ge s) EMPTY) = ((hull affine) s)))) s)) = ((\s. (!t. (((aff_ge s) EMPTY) = ((hull affine) s)))) s))
T c= c==> ! ! c= * * part caff_ge b0 part cEMPTY * * part chull part caffine b0 * / ! c= * * part caff_ge b0 part cEMPTY * * part chull part caffine b0 f0 * / ! c= * * part caff_ge b0 part cEMPTY * * part chull part caffine b0 f0
+ |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ (~ (x = u1)), (FAN (x , (V , E))), ((u IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))), ((v INSERT (u INSERT EMPTY)) IN E), (u1 IN V), (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) |- (u1 IN (v INSERT (u INSERT EMPTY)))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> c/\ cIN f4 * * * part cset_of_edge f5 f2 f3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f5 c/\ c~ c= f0 f4 c/\ c~ c= f5 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c/\ cIN f5 f2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN * * part cINSERT f5 * * part cINSERT f4 part cEMPTY f3 c==> cIN f1 f2 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY cIN f1 * * part cINSERT f5 * * part cINSERT f4 part cEMPTY
+ |- (((!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) ==> ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t)) = ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t))
T c= c==> ! c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1 * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1
- (~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')), (((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (u1 = u1)) ==> (u1 = u1))
T c==> c~ c= f0 f0 c= f0 f0
+ (x = v), (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- (~ (u1 = u1))
T c==> c= f0 f1 c==> c/\ c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f2 f1 c~ c= f2 f3 c~ c= f2 f2
+ |- (((!x. (((\x. ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1))))) x) ==> F)) ==> ((?x. ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1))))) ==> F)) = ((?x. ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1))))) ==> F))
T c= c==> ! c==> * / c/\ c\/ c/\ ! * f0 b1 c/\ ! ! c\/ c= b2 f1 c~ c= b2 b1 ! ! c\/ c~ c= b2 f1 c= b2 b1 * f0 f1 c\/ ! c\/ c~ * f0 b1 c/\ c\/ c= * b1 b1 f1 c= * b1 b1 b1 c\/ c~ c= * b1 b1 f1 c~ c= * b1 b1 b1 c~ * f0 f1 b0 cF c==> c? / c/\ c\/ c/\ ! * f0 b1 c/\ ! ! c\/ c= b2 f1 c~ c= b2 b1 ! ! c\/ c~ c= b2 f1 c= b2 b1 * f0 f1 c\/ ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1 c~ * f0 f1 cF c==> c? / c/\ c\/ c/\ ! * f0 b1 c/\ ! ! c\/ c= b2 f1 c~ c= b2 b1 ! ! c\/ c~ c= b2 f1 c= b2 b1 * f0 f1 c\/ ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1 c~ * f0 f1 cF
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ (~ (x = u1)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))), ((v INSERT (u INSERT EMPTY)) IN E), (u1 IN V), (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) |- (u1 IN (v INSERT (u INSERT EMPTY)))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN f1 f2 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- |- ((~ (_3021364 = _3021365)) \/ ((BIT1 _3021364) = (BIT1 _3021365)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))) |- (((~ (_3021339 = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% _3021339) x)))) = ((~ (_3021339 = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = ((% _3021339) x)))))
T c==> c/\ ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c= c\/ c~ c= f2 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% f2 f1 c\/ c~ c= f2 creal_of_num cNUMERAL cBIT1 c_0 c~ c= c% creal_of_num cNUMERAL cBIT1 c_0 f1 c% f2 f1
+ (x = v), (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- ((u1 = u1) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f2 f1 c~ c= f2 f3 c==> c= f2 f2 cF
+ |- ((\v. (!u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))) v)
T * / ! ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b2 cIN b2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
+ |- (((!y. ((x IN (y INSERT EMPTY)) = (x = y))) ==> ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)) = ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y))
T c= c==> ! c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
- |- ((\v. ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)) v)
T * / c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 cF f3
+ |- ((\v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) v)
T * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4
+ (?v. ((v IN V) /\ ((u1 INSERT EMPTY) = (v INSERT EMPTY)))), (~ (x = u1)), ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))), (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2))))))))))), ((v INSERT (u INSERT EMPTY)) IN E) |- ((((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2))))))))))) /\ (u1 IN (v INSERT (u INSERT EMPTY))))
T c==> c? / c/\ cIN b0 f0 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c~ c= f2 f1 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c/\ cSUBSET * part cUNIONS f5 f0 c/\ cgraph f5 c/\ cfan1 c, f2 c, f0 f5 c/\ cfan2 c, f2 c, f0 f5 c/\ cfan6 c, f2 c, f0 f5 ! ! c==> c/\ cIN b0 * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f0 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f0 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c/\ c/\ cSUBSET * part cUNIONS f5 f0 c/\ cgraph f5 c/\ cfan1 c, f2 c, f0 f5 c/\ cfan2 c, f2 c, f0 f5 c/\ cfan6 c, f2 c, f0 f5 ! ! c==> c/\ cIN b0 * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f0 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f0 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- (((?v. (((v IN V) /\ ((u1 INSERT EMPTY) = (v INSERT EMPTY))) = (u1 IN V))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))) = (u1 IN (v INSERT (u INSERT EMPTY))))
T c= c==> c? / c= c/\ cIN b0 f0 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY cIN f1 f0 cIN f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))), (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')), (((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) |- ((~ F) ==> F)
T c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c==> c~ cF cF
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- (((% (real_of_num (NUMERAL (BIT1 _0)))) X) = X)
T c= c% creal_of_num cNUMERAL cBIT1 c_0 f0 f0
- |- ((((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)) = ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F))
T c= c==> c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
- |- ((!x'. ((~ (x = u1)) \/ (x' = v))) = ((~ (x = u1)) \/ (!x. (x = v))))
T c= ! c\/ c~ c= f0 f1 c= b0 f2 c\/ c~ c= f0 f1 ! c= b0 f2
+ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))) |- ((~ (_3021339 = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = ((% _3021339) x))))
T c==> c/\ ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c\/ c~ c= f2 creal_of_num cNUMERAL cBIT1 c_0 c~ c= c% creal_of_num cNUMERAL cBIT1 c_0 f1 c% f2 f1
+ ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- (((!v. (V v)) ==> ((\v. (V v)) _3021409)) = ((\v. (V v)) _3021409))
T c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 c= c==> ! * f0 b0 * / * f0 b0 f2 * / * f0 b0 f2
+ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))) |- ((\e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))) (u1 INSERT EMPTY))
T c==> ! ! c==> c/\ cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 * / ! c==> c/\ cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 * * part cINSERT f3 part cEMPTY
+ (~ (x = u1)), (FAN (x , (V , E))), ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))), ((v INSERT (u INSERT EMPTY)) IN E), (u1 IN V) |- ((?v. (((v IN V) /\ ((u1 INSERT EMPTY) = (v INSERT EMPTY))) = (u1 IN V))) ==> (u1 IN (v INSERT (u INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN f1 f2 c==> c? / c= c/\ cIN b0 f2 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY cIN f1 f2 cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ |- (((?x. (P x)) \/ Q) = (?x. ((P x) \/ Q)))
T c= c\/ c? / * f0 b0 f1 c? / c\/ * f0 b0 f1
+ (!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) |- ((((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) = T)
T c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 cT
+ (~ (x = u1)) |- ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) = (x INSERT EMPTY)) ==> (u1 IN (v INSERT (u INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY cIN f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((\u1. (!x. (!u. (!v. ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F))))) u1)
T * / ! ! ! c==> c~ c==> ! c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 ! c= c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 cF f0
+ |- (!x'. ((x' IN (GSPEC (\GEN%PVAR%5618. (?u. (((SETSPEC GEN%PVAR%5618) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) x)))))) = (x' IN (((% (real_of_num (NUMERAL (BIT1 _0)))) x) INSERT EMPTY))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c= b1 creal_of_num cNUMERAL cBIT1 c_0 c% b1 f1 cIN f0 * * part cINSERT c% creal_of_num cNUMERAL cBIT1 c_0 f1 part cEMPTY
+ |- ((t \/ T) = T)
T c= c\/ f0 cT cT
+ (((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')), ((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) ==> F), ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) ==> F) |- F
T c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 cF c==> c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cF cF
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ ((v INSERT (u INSERT EMPTY)) IN E) |- (((v INSERT (u INSERT EMPTY)) IN E) = T)
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cT
+ (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))), (V u1) |- (((x u1) = u1) = (((x u1) = u1) /\ ((x u1) = u1)))
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> * f0 f2 c= c= * f1 f2 f2 c/\ c= * f1 f2 f2 c= * f1 f2 f2
- |- (((((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) ==> ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)) ==> (((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) ==> ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F))) = (((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) ==> ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)))
T c= c==> c==> c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) |- (((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) /\ ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F))
T c==> c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c/\ c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
+ |- ((((~ (x = u1)) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))) /\ (u1 IN ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))) = (u1 IN (v INSERT (u INSERT EMPTY))))
T c= c==> c==> c~ c= f0 f1 c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) |- ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = T)
T c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((((V _3021418) /\ (((x _3021418) = u1) /\ ((x _3021418) = _3021418))) ==> F) = F)
T c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 c= c==> c/\ * f0 f2 c/\ c= * f3 f2 f1 c= * f3 f2 f2 cF cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!v. (((V v) /\ (!x. (((x = u1) \/ (~ (x = v))) /\ ((~ (x = u1)) \/ (x = v))))) \/ (V u1))) = ((!v. ((V v) /\ (!x. (((x = u1) \/ (~ (x = v))) /\ ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)))
T c= ! c\/ c/\ * f0 b0 ! c/\ c\/ c= b1 f1 c~ c= b1 b0 c\/ c~ c= b1 f1 c= b1 b0 * f0 f1 c\/ ! c/\ * f0 b0 ! c/\ c\/ c= b1 f1 c~ c= b1 b0 c\/ c~ c= b1 f1 c= b1 b0 * f0 f1
+ ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- (((V u1) ==> F) = F)
T c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 c= c==> * f0 f1 cF cF
- |- (((!u1. (!V. ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F))) ==> ((\u1. (!V. ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F))) u1)) = ((\u1. (!V. ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F))) u1))
T c= c==> ! ! c==> c~ c? / c= c/\ * b1 b2 ! c= c= b3 b0 c= b3 b2 * b1 b0 cF * / ! c==> c~ c? / c= c/\ * b1 b2 ! c= c= b3 b0 c= b3 b2 * b1 b0 cF f0 * / ! c==> c~ c? / c= c/\ * b1 b2 ! c= c= b3 b0 c= b3 b2 * b1 b0 cF f0
+ |- ((x' IN (GSPEC (\GEN%PVAR%5618. (?u. (((SETSPEC GEN%PVAR%5618) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) x)))))) = (?u. (((\p. (\t. (p /\ (x' = t)))) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) x))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c= b1 creal_of_num cNUMERAL cBIT1 c_0 c% b1 f1 c? / * * / / c/\ b1 c= f0 b2 c= b0 creal_of_num cNUMERAL cBIT1 c_0 c% b0 f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (!x. (((\x. (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u))))) x) ==> F))
T c==> * / c/\ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c~ c= f0 f1 c~ c= f0 f2 f3 cF
- (~ ((x u1) = u1)), ((x u1) = u1) |- (((x u1) = u1) /\ (~ ((x u1) = u1)))
T c==> c~ c= * f0 f1 f1 c==> c= * f0 f1 f1 c/\ c= * f0 f1 f1 c~ c= * f0 f1 f1
+ (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) |- (!v. (((~ (V v)) \/ (((x v) = u1) \/ ((x v) = v))) /\ ((~ (V v)) \/ ((~ ((x v) = u1)) \/ (~ ((x v) = v))))))
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 ! c/\ c\/ c~ * f0 b0 c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ * f0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0
- |- ((?v. (P v)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
- ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) |- (((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) /\ ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F))
T c==> c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c/\ c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))), ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1)))) |- F
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> c/\ c\/ c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f2 c~ c= b1 b0 ! ! c\/ c~ c= b1 f2 c= b1 b0 * f0 f2 c\/ ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c~ * f0 f2 cF
+ |- ((((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) ==> ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))) = (u1 IN (v INSERT (u INSERT EMPTY))))
T c= c==> c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\a. (((hull affine) (a INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5568. (?u. (((SETSPEC GEN%PVAR%5568) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) a))))))) a)
T * / c= * * part chull part caffine * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c= b2 creal_of_num cNUMERAL cBIT1 c_0 c% b2 b0 f0
- (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))) |- ((~ F) ==> F)
T c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c~ cF cF
+ (!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))), (((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) |- (((((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x') ==> F) = F)
T c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c= c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cF cF
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- (~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) |- F
T c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ |- (((!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) ==> ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) u)) = ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) u))
T c= c==> ! ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f3 * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f3
+ (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) |- ((V u1) ==> F)
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> * f0 f2 cF
- |- (((!V. ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F)) ==> ((\V. ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F)) V)) = ((\V. ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F)) V))
T c= c==> ! c==> c~ c? / c= c/\ * b0 b1 ! c= c= b2 f0 c= b2 b1 * b0 f0 cF * / c==> c~ c? / c= c/\ * b0 b1 ! c= c= b2 f0 c= b2 b1 * b0 f0 cF f1 * / c==> c~ c? / c= c/\ * b0 b1 ! c= c= b2 f0 c= b2 b1 * b0 f0 cF f1
+ |- ((((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))) ==> F)
T c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 cF
+ |- (((?x. (P x)) /\ Q) = (?x. ((P x) /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) |- (((x _3021408) = _3021408) \/ ((~ (V _3021408)) \/ ((x _3021408) = u1)))
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c\/ c= * f1 f3 f3 c\/ c~ * f0 f3 c= * f1 f3 f2
- ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F), (((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)) |- ((((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)) /\ ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F))
T c==> c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c/\ c==> c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
+ |- (((!x. (!V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))))))))))) ==> ((\x. (!V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))))))))))) x)) = ((\x. (!V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))))))))))) x))
T c= c==> ! ! ! c= cFAN c, b0 c, b1 b2 c/\ cSUBSET * part cUNIONS b2 b1 c/\ cgraph b2 c/\ cfan1 c, b0 c, b1 b2 c/\ cfan2 c, b0 c, b1 b2 c/\ cfan6 c, b0 c, b1 b2 cfan7 c, b0 c, b1 b2 * / ! ! c= cFAN c, b0 c, b1 b2 c/\ cSUBSET * part cUNIONS b2 b1 c/\ cgraph b2 c/\ cfan1 c, b0 c, b1 b2 c/\ cfan2 c, b0 c, b1 b2 c/\ cfan6 c, b0 c, b1 b2 cfan7 c, b0 c, b1 b2 f0 * / ! ! c= cFAN c, b0 c, b1 b2 c/\ cSUBSET * part cUNIONS b2 b1 c/\ cgraph b2 c/\ cfan1 c, b0 c, b1 b2 c/\ cfan2 c, b0 c, b1 b2 c/\ cfan6 c, b0 c, b1 b2 cfan7 c, b0 c, b1 b2 f0
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
- |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
+ |- ((!v. ((((V v) /\ (!x. (((x = u1) \/ (~ (x = v))) /\ ((~ (x = u1)) \/ (x = v))))) \/ (V u1)) /\ (((~ (V v)) \/ (?x. (((x = u1) \/ (x = v)) /\ ((~ (x = u1)) \/ (~ (x = v)))))) \/ (~ (V u1))))) = ((!v. (((V v) /\ (!x. (((x = u1) \/ (~ (x = v))) /\ ((~ (x = u1)) \/ (x = v))))) \/ (V u1))) /\ (!v. (((~ (V v)) \/ (?x. (((x = u1) \/ (x = v)) /\ ((~ (x = u1)) \/ (~ (x = v)))))) \/ (~ (V u1))))))
T c= ! c/\ c\/ c/\ * f0 b0 ! c/\ c\/ c= b1 f1 c~ c= b1 b0 c\/ c~ c= b1 f1 c= b1 b0 * f0 f1 c\/ c\/ c~ * f0 b0 c? / c/\ c\/ c= b1 f1 c= b1 b0 c\/ c~ c= b1 f1 c~ c= b1 b0 c~ * f0 f1 c/\ ! c\/ c/\ * f0 b0 ! c/\ c\/ c= b1 f1 c~ c= b1 b0 c\/ c~ c= b1 f1 c= b1 b0 * f0 f1 ! c\/ c\/ c~ * f0 b0 c? / c/\ c\/ c= b1 f1 c= b1 b0 c\/ c~ c= b1 f1 c~ c= b1 b0 c~ * f0 f1
+ |- ((\v. ((~ (x = v)) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) /\ (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)))))) u1)
T * / c==> c~ c= f0 b0 c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY f1
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (X $ i))) $ i) = (X $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (real_of_num (NUMERAL (BIT1 _0)))) X) $ i) = (X $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f1 b0 f0 c$ f1 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_of_num cNUMERAL cBIT1 c_0 f1 f0 c$ f1 f0
+ (~ ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) |- (((?u. ((((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) \/ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) = F)
T c==> c~ c= c? / c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c? / c\/ c/\ c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c~ c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ ! c\/ c~ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b1 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 cF cF
- ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F), (((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)) |- (((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) /\ ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F))
T c==> c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c/\ c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))) ==> ((\x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))) x)) = ((\x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))) x))
T c= c==> ! c= cfan7 c, b0 c, f0 f1 ! ! c==> c/\ cIN b1 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY cIN b2 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b0 part cEMPTY b1 * * part caff_ge * * part cINSERT b0 part cEMPTY b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINTER b1 b2 * / c= cfan7 c, b0 c, f0 f1 ! ! c==> c/\ cIN b1 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY cIN b2 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b0 part cEMPTY b1 * * part caff_ge * * part cINSERT b0 part cEMPTY b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINTER b1 b2 f2 * / c= cfan7 c, b0 c, f0 f1 ! ! c==> c/\ cIN b1 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY cIN b2 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b0 part cEMPTY b1 * * part caff_ge * * part cINSERT b0 part cEMPTY b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINTER b1 b2 f2
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) |- ((((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)) ==> ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F))
T c==> c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
+ (~ (x = u1)), (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) = (x INSERT EMPTY)) |- ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) = (x INSERT EMPTY)) /\ (u1 IN (v INSERT (u INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY cIN f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))) = T)
T c= c= c? / c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 cT
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
- |- (((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F))
T c==> c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
+ ((((u1 INSERT EMPTY) INTER (v INSERT (u INSERT EMPTY))) = EMPTY) ==> ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) ((u1 INSERT EMPTY) INTER (v INSERT (u INSERT EMPTY))))) ==> (u1 IN (v INSERT (u INSERT EMPTY))))), ((u1 IN (v INSERT (u INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) ((u1 INSERT EMPTY) INTER (v INSERT (u INSERT EMPTY))))) ==> (u1 IN (v INSERT (u INSERT EMPTY))))) |- ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) ((u1 INSERT EMPTY) INTER (v INSERT (u INSERT EMPTY))))) ==> (u1 IN (v INSERT (u INSERT EMPTY))))
T c==> c==> c= * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY part cEMPTY c==> c= * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) |- F
T c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
+ |- ((\x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))) x)
T * / c= cfan7 c, b0 c, f0 f1 ! ! c==> c/\ cIN b1 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY cIN b2 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b0 part cEMPTY b1 * * part caff_ge * * part cINSERT b0 part cEMPTY b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINTER b1 b2 f2
- |- ((((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) ==> ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)) = ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F))
T c= c==> c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF
- (~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) |- ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) /\ F)
T c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ |- (((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))) ==> F)
T c==> c/\ ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (~ (V u1)), ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1)))) |- ((~ (V u1)) /\ F)
T c==> c~ * f0 f1 c==> c/\ c\/ c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 * f0 f1 c\/ ! c\/ c~ * f0 b0 c/\ c\/ c= * f2 b0 f1 c= * f2 b0 b0 c\/ c~ c= * f2 b0 f1 c~ c= * f2 b0 b0 c~ * f0 f1 c/\ c~ * f0 f1 cF
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((\t. (((aff_ge s) EMPTY) = ((hull affine) s))) t)
T * / c= * * part caff_ge f0 part cEMPTY * * part chull part caffine f0 f1
- |- ((!e2. t) = t)
T c= ! f0 f0
- |- ((~ (_3021368 = _3021369)) \/ ((real_of_num _3021368) = (real_of_num _3021369)))
T c\/ c~ c= f0 f1 c= creal_of_num f0 creal_of_num f1
+ |- ((\u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))) u)
T * / ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 cIN b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- (((v INSERT (u INSERT EMPTY)) IN (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN E) \/ (?v. ((v IN V) /\ (x = (v INSERT EMPTY)))))) x))))) = (((v INSERT (u INSERT EMPTY)) IN E) \/ (?v'. ((v' IN V) /\ ((v INSERT (u INSERT EMPTY)) = (v' INSERT EMPTY))))))
T c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c\/ cIN b1 f2 c? / c/\ cIN b2 f3 c= b1 * * part cINSERT b2 part cEMPTY b1 c\/ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c? / c/\ cIN b0 f3 c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY
+ (~ (x = u1)), (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) = (x INSERT EMPTY)) |- (T = (((~ (x = u1)) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))) /\ (u1 IN ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))))
T c==> c~ c= f0 f1 c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part cINSERT f0 part cEMPTY c= cT c==> c==> c~ c= f0 f1 c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))) |- ((((((u1 INSERT EMPTY) IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ ((v INSERT (u INSERT EMPTY)) IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u1 INSERT EMPTY) INTER (v INSERT (u INSERT EMPTY)))))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))) = (u1 IN (v INSERT (u INSERT EMPTY))))
T c==> ! ! c==> c/\ cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 c= c==> c==> c/\ cIN * * part cINSERT f3 part cEMPTY * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f1 * * part cINSERT b1 part cEMPTY cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f1 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (FAN (x , (V , E))), ((u1 IN V) /\ ((~ (x = u1)) /\ (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))), ((v INSERT (u INSERT EMPTY)) IN E), (u1 IN V) |- (u1 IN (v INSERT (u INSERT EMPTY)))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cIN f3 f1 c/\ c~ c= f0 f3 cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c==> cIN f3 f1 cIN f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (u1 IN (v INSERT (u INSERT EMPTY))) |- ((u1 IN (v INSERT (u INSERT EMPTY))) /\ ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) ((u1 INSERT EMPTY) INTER (v INSERT (u INSERT EMPTY))))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))), (~ (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))) |- ((~ (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))) /\ F)
T c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c~ c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c/\ c~ c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 cF
+ |- (((!x. (((\u. ((((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) \/ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) x) ==> F)) ==> ((?u. ((((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) \/ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)) = ((?u. ((((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) \/ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F))
T c= c==> ! c==> * / c\/ c/\ c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b1 f1 c~ c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ ! c\/ c~ c= b2 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b2 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 b0 cF c==> c? / c\/ c/\ c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c~ c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ ! c\/ c~ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b1 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 cF c==> c? / c\/ c/\ c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c~ c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ ! c\/ c~ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b1 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 cF
- |- ((((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) ==> ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)) ==> (((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) ==> ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)))
T c==> c==> c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ |- (((!t. (((aff_ge s) EMPTY) = ((hull affine) s))) ==> ((\t. (((aff_ge s) EMPTY) = ((hull affine) s))) t)) = ((\t. (((aff_ge s) EMPTY) = ((hull affine) s))) t))
T c= c==> ! c= * * part caff_ge f0 part cEMPTY * * part chull part caffine f0 * / c= * * part caff_ge f0 part cEMPTY * * part chull part caffine f0 f1 * / c= * * part caff_ge f0 part cEMPTY * * part chull part caffine f0 f1
+ |- (((?x. ((x = u1) /\ ((x = v) \/ (x = u)))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) = (?x. (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u))))))
T c= c/\ c? / c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c~ c= f0 f1 c~ c= f0 f2 c? / c/\ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c~ c= f0 f1 c~ c= f0 f2
+ |- (((!v. ((~ (x = v)) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) /\ (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)))))) ==> ((\v. ((~ (x = v)) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) /\ (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)))))) u1)) = ((\v. ((~ (x = v)) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) /\ (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)))))) u1))
T c= c==> ! c==> c~ c= f0 b0 c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * / c==> c~ c= f0 b0 c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY f1 * / c==> c~ c= f0 b0 c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY f1
+ (~ (x = u1)), (FAN (x , (V , E))), ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))), ((v INSERT (u INSERT EMPTY)) IN E), (u1 IN V), (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) |- (u1 IN (v INSERT (u INSERT EMPTY)))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> c/\ c~ c= f0 f4 c/\ c~ c= f5 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c/\ cIN f5 f2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f5 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f5 part cEMPTY c==> cIN * * part cINSERT f5 * * part cINSERT f4 part cEMPTY f3 c==> cIN f1 f2 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY cIN f1 * * part cINSERT f5 * * part cINSERT f4 part cEMPTY
+ ((((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) \/ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) |- (((((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) \/ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) /\ F)
T c==> c\/ c/\ c/\ c= f0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% f0 f2 c~ c= f1 c% creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f1 c% b0 f2 c= f1 c% creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ c\/ c/\ c/\ c= f0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% f0 f2 c~ c= f1 c% creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f1 c% b0 f2 c= f1 c% creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ |- ((?x. ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1))))) ==> F)
T c==> c? / c/\ c\/ c/\ ! * f0 b1 c/\ ! ! c\/ c= b2 f1 c~ c= b2 b1 ! ! c\/ c~ c= b2 f1 c= b2 b1 * f0 f1 c\/ ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1 c~ * f0 f1 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) |- ((u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = T)
T c==> cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (((!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) ==> ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)) = ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x))
T c= c==> ! ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
+ (?v. ((v IN V) /\ ((u1 INSERT EMPTY) = (v INSERT EMPTY)))), (~ (x = u1)), ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))), ((fan6 (x , (V , E))) /\ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2))))))), ((v INSERT (u INSERT EMPTY)) IN E) |- (u1 IN (v INSERT (u INSERT EMPTY)))
T c==> c? / c/\ cIN b0 f0 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c~ c= f2 f1 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c/\ cfan6 c, f2 c, f0 f5 ! ! c==> c/\ cIN b0 * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f0 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f0 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((!v'. ((!x. (~ ((x = u1) /\ ((x = v') \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) = ((!v. (!x. (~ ((x = u1) /\ ((x = v) \/ (x = u)))))) \/ ((u1 = v) \/ (u1 = u))))
T c= ! c\/ ! c~ c/\ c= b1 f0 c\/ c= b1 b0 c= b1 f1 c\/ c= f0 f2 c= f0 f1 c\/ ! ! c~ c/\ c= b1 f0 c\/ c= b1 b0 c= b1 f1 c\/ c= f0 f2 c= f0 f1
+ ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((_3021407 = u1) ==> (_3021407 = _3021406))
T c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 c==> c= f2 f1 c= f2 f3
- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((!x. (!v. (!u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))))) ==> ((\x. (!v. (!u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))))) x)) = ((\x. (!v. (!u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))))) x))
T c= c==> ! ! ! ! c==> c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b3 cIN b3 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! ! c==> c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b3 cIN b3 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0 * / ! ! ! c==> c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b3 cIN b3 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
+ |- ((!v. ((!x. ((x = u1) \/ (~ (x = v)))) /\ (!x. ((~ (x = u1)) \/ (x = v))))) = ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v))))))
T c= ! c/\ ! c\/ c= b1 f0 c~ c= b1 b0 ! c\/ c~ c= b1 f0 c= b1 b0 c/\ ! ! c\/ c= b1 f0 c~ c= b1 b0 ! ! c\/ c~ c= b1 f0 c= b1 b0
+ (FAN (x , (V , E))), (((v INSERT (u INSERT EMPTY)) IN E) /\ ((u1 IN V) /\ ((~ (x = u1)) /\ (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))) |- (u1 IN (v INSERT (u INSERT EMPTY)))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN f5 f1 c/\ c~ c= f0 f5 cIN f5 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?v'. t) = t)
T c= c? / f0 f0
+ ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1)))), ((~ (V u1)) ==> F) |- F
T c==> c/\ c\/ c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 * f0 f1 c\/ ! c\/ c~ * f0 b0 c/\ c\/ c= * f2 b0 f1 c= * f2 b0 b0 c\/ c~ c= * f2 b0 f1 c~ c= * f2 b0 b0 c~ * f0 f1 c==> c==> c~ * f0 f1 cF cF
+ |- (!u. (((\u. ((((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) \/ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) u) ==> F))
T c==> * / c\/ c/\ c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c~ c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ ! c\/ c~ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b1 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cF
- (x = u) |- ((~ (u1 = v)) = (~ (u1 = v)))
T c==> c= f0 f1 c= c~ c= f2 f3 c~ c= f2 f3
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (X $ i))) $ i) = (X $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f1 b0 f0 c$ f1 f0
+ |- ((\x. (!V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))))))))))) x)
T * / ! ! c= cFAN c, b0 c, b1 b2 c/\ cSUBSET * part cUNIONS b2 b1 c/\ cgraph b2 c/\ cfan1 c, b0 c, b1 b2 c/\ cfan2 c, b0 c, b1 b2 c/\ cfan6 c, b0 c, b1 b2 cfan7 c, b0 c, b1 b2 f0
+ (~ (V u1)) |- (((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) ==> F)
T c==> c~ * f0 f1 c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 cF
- ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F), (((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F) ==> ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F)) |- ((((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F) ==> ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F)) /\ ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F))
T c==> c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c==> c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c/\ c==> c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF
+ (!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) |- ((~ (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))) ==> F)
T c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c~ c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 cF
+ |- ((\s. (!t. (((aff_ge s) EMPTY) = ((hull affine) s)))) s)
T * / ! c= * * part caff_ge b0 part cEMPTY * * part chull part caffine b0 f0
- (_3021371 = _3021373) |- ((_3021370 = _3021372) ==> (((% _3021370) _3021371) = ((% _3021372) _3021373)))
T c==> c= f0 f1 c==> c= f2 f3 c= c% f2 f0 c% f3 f1
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((% (real_of_num (NUMERAL (BIT1 _0)))) x) = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)) = (((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))
T c= c= c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (T = (((~ (V _3021408)) \/ (((x _3021408) = u1) \/ ((x _3021408) = _3021408))) = (((x _3021408) = _3021408) \/ ((~ (V _3021408)) \/ ((x _3021408) = u1)))))
T c= cT c= c\/ c~ * f0 f1 c\/ c= * f2 f1 f3 c= * f2 f1 f1 c\/ c= * f2 f1 f1 c\/ c~ * f0 f1 c= * f2 f1 f3
+ (u1 IN (v INSERT (u INSERT EMPTY))) |- (T = ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) ((u1 INSERT EMPTY) INTER (v INSERT (u INSERT EMPTY))))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cT c==> c= * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) |- (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> F) = F)
T c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c= c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 cF cF
- (~ ((x _3021418) = u1)), ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((~ ((x _3021418) = u1)) /\ ((x _3021418) = u1))
T c==> c~ c= * f0 f1 f2 c==> c/\ ! * f3 b0 c/\ ! ! c\/ c= b1 f2 c~ c= b1 b0 ! ! c\/ c~ c= b1 f2 c= b1 b0 c/\ c~ c= * f0 f1 f2 c= * f0 f1 f2
- (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))) |- ((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))
T c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2
- (~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) |- ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) /\ F)
T c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c/\ c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
+ (~ (x = u1)), (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) |- (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))) = (((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = u1)) /\ (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))))
T c==> c~ c= f0 f1 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f1 cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- (~ (u1 = v))
T c==> c/\ c/\ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f1 f2 c~ c= f1 f3 c~ c= f1 f2
+ (!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))), (((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) ==> F)
T c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cF
+ ((\x. ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1))))) x) |- ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1))))
T c==> * / c/\ c\/ c/\ ! * f0 b1 c/\ ! ! c\/ c= b2 f1 c~ c= b2 b1 ! ! c\/ c~ c= b2 f1 c= b2 b1 * f0 f1 c\/ ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1 c~ * f0 f1 f2 c/\ c\/ c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 * f0 f1 c\/ ! c\/ c~ * f0 b0 c/\ c\/ c= * f2 b0 f1 c= * f2 b0 b0 c\/ c~ c= * f2 b0 f1 c~ c= * f2 b0 b0 c~ * f0 f1
- |- ((((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) ==> ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)) ==> (((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) ==> ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)))
T c==> c==> c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF
+ |- ((((\x. (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u))))) x) ==> F) = T)
T c= c==> * / c/\ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c~ c= f0 f1 c~ c= f0 f2 f3 cF cT
+ (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))), (V u1) |- ((x u1) = u1)
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> * f0 f2 c= * f1 f2 f2
- |- ((!u'. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u') x))))) = ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (!u. (~ (x' = ((% u) x))))))
T c= ! c\/ c~ c= f0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f1 c% b0 f2 c\/ c~ c= f0 creal_of_num cNUMERAL cBIT1 c_0 ! c~ c= f1 c% b0 f2
- (((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) ==> ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)) |- ((((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) ==> ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)) /\ (((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) ==> ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)))
T c==> c==> c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c/\ c==> c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ |- (((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) = ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u))))
T c= c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- (((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')))) = T)
T c= c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cT
+ (((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')), ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) ==> F) |- F
T c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cF cF
+ ((\x. (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u))))) x) |- (((\x. (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u))))) x) /\ F)
T c==> * / c/\ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c~ c= f0 f1 c~ c= f0 f2 f3 c/\ * / c/\ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c~ c= f0 f1 c~ c= f0 f2 f3 cF
- (~ F), (x = v), (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f2 f1 c~ c= f2 f3 c/\ c~ cF cF
+ ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((x _3021418) = u1)
T c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 c= * f2 f3 f1
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- ((!u. (!u1. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ ((u1 IN V) /\ ((~ (x = u1)) /\ (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))))) = T)
T c= ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f2 c/\ cIN b1 f1 c/\ c~ c= f0 b1 cIN b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT b0 part cEMPTY cIN b1 * * part cINSERT f3 * * part cINSERT b0 part cEMPTY cT
+ (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) |- (((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) ==> F)
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f2 c~ c= b1 b0 ! ! c\/ c~ c= b1 f2 c= b1 b0 cF
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (real_of_num (NUMERAL (BIT1 _0)))) X) $ i) = (X $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_of_num cNUMERAL cBIT1 c_0 f1 f0 c$ f1 f0
+ (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))) |- (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> F) = F)
T c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c= c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 cF cF
+ |- (((!x'. ((x' IN ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))) ==> (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))) = (x' IN ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)))))) = ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) ==> ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)))))
T c= c==> ! c==> cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c= cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ (~ (x = u1)), (FAN (x , (V , E))), ((FINITE (((set_of_edge v) V) E)) /\ ((u IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))), ((v INSERT (u INSERT EMPTY)) IN E), (u1 IN V), (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) |- (u1 IN (v INSERT (u INSERT EMPTY)))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> c/\ cFINITE * * * part cset_of_edge f4 f2 f3 c/\ cIN f5 * * * part cset_of_edge f4 f2 f3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN f1 f2 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (~ (V u1)), ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1)))) |- F
T c==> c~ * f0 f1 c==> c/\ c\/ c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 * f0 f1 c\/ ! c\/ c~ * f0 b0 c/\ c\/ c= * f2 b0 f1 c= * f2 b0 b0 c\/ c~ c= * f2 b0 f1 c~ c= * f2 b0 b0 c~ * f0 f1 cF
- (x = u), (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- (F = F)
T c==> c= f0 f1 c==> c/\ c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f2 f3 c~ c= f2 f1 c= cF cF
+ |- ((!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) = (!x'. ((x' IN (GSPEC (\GEN%PVAR%5618. (?u. (((SETSPEC GEN%PVAR%5618) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) x)))))) = (x' IN (((% (real_of_num (NUMERAL (BIT1 _0)))) x) INSERT EMPTY)))))
T c= ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 c= b2 creal_of_num cNUMERAL cBIT1 c_0 c% b2 f0 cIN b0 * * part cINSERT c% creal_of_num cNUMERAL cBIT1 c_0 f0 part cEMPTY
+ (~ (x = u1)), (FAN (x , (V , E))), ((v INSERT (u INSERT EMPTY)) IN E), (u1 IN V), (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) |- (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) ==> ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)))) ==> (u1 IN (v INSERT (u INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN f1 f2 c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ |- (((~ (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))) ==> F) = (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')))
T c= c==> c~ c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 cF c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2
- (x = u) |- ((~ (u1 = u)) = (~ (u1 = u)))
T c==> c= f0 f1 c= c~ c= f2 f1 c~ c= f2 f1
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (~ (x = u1)), (FAN (x , (V , E))), ((v INSERT (u INSERT EMPTY)) IN E), (u1 IN V), (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) |- ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) /\ (u1 IN (v INSERT (u INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN f1 f2 c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- (~ F), (x = u), (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f2 f3 c~ c= f2 f1 c/\ c~ cF cF
+ (~ (x = u1)), (FAN (x , (V , E))), ((~ (x = u1)) /\ (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))), ((v INSERT (u INSERT EMPTY)) IN E), (u1 IN V) |- (u1 IN (v INSERT (u INSERT EMPTY)))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> c/\ c~ c= f0 f1 cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN f1 f2 cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) |- ((((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x') ==> F)
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cF
- (_3021370 = _3021372), (_3021371 = _3021373) |- ((_3021370 = _3021372) /\ (((% _3021370) _3021371) = ((% _3021372) _3021373)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= c% f0 f2 c% f1 f3
- |- ((!v'. ((~ (V v')) \/ (?x. (((x = u1) \/ (x = v)) /\ ((~ (x = u1)) \/ (~ (x = v))))))) = ((!v. (~ (V v))) \/ (?x. (((x = u1) \/ (x = v)) /\ ((~ (x = u1)) \/ (~ (x = v)))))))
T c= ! c\/ c~ * f0 b0 c? / c/\ c\/ c= b1 f1 c= b1 f2 c\/ c~ c= b1 f1 c~ c= b1 f2 c\/ ! c~ * f0 b0 c? / c/\ c\/ c= b0 f1 c= b0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2
+ (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- (x = u1)
T c==> c/\ c/\ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f1 f2 c~ c= f1 f3 c= f0 f1
+ (~ (x = u1)), (FAN (x , (V , E))), ((FINITE (((set_of_edge v) V) E)) /\ ((u IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))), ((v INSERT (u INSERT EMPTY)) IN E), (u1 IN V), (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) |- (((FINITE (((set_of_edge v) V) E)) /\ ((u IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))) /\ (u1 IN (v INSERT (u INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> c/\ cFINITE * * * part cset_of_edge f4 f2 f3 c/\ cIN f5 * * * part cset_of_edge f4 f2 f3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN f1 f2 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c/\ cFINITE * * * part cset_of_edge f4 f2 f3 c/\ cIN f5 * * * part cset_of_edge f4 f2 f3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- |- ((?x'. (((x = u1) \/ (x = v)) /\ ((~ (x' = u1)) \/ (~ (x' = v))))) = (((x = u1) \/ (x = v)) /\ (?x. ((~ (x = u1)) \/ (~ (x = v))))))
T c= c? / c/\ c\/ c= f0 f1 c= f0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2 c/\ c\/ c= f0 f1 c= f0 f2 c? / c\/ c~ c= b0 f1 c~ c= b0 f2
+ (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))), (V u1) |- ((((V u1) /\ (((x u1) = u1) /\ ((x u1) = u1))) ==> F) = F)
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> * f0 f2 c= c==> c/\ * f0 f2 c/\ c= * f1 f2 f2 c= * f1 f2 f2 cF cF
+ |- ((((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = u1)) /\ (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))) = (u1 IN (v INSERT (u INSERT EMPTY))))
T c= c==> c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 f3 cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) ==> ((\v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) v)) = ((\v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) v))
T c= c==> ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4 * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4
- |- ((_3021423 = _3021424) ==> ((V _3021424) \/ (~ (V _3021423))))
T c==> c= f0 f1 c\/ * f2 f1 c~ * f2 f0
- |- ((!u1. (!V. (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1))))) = (!u1. (!V. ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F))))
T c= ! ! c? / c= c/\ * b1 b2 ! c= c= b3 b0 c= b3 b2 * b1 b0 ! ! c==> c~ c? / c= c/\ * b1 b2 ! c= c= b3 b0 c= b3 b2 * b1 b0 cF
- ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F) |- (((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F) /\ ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F))
T c==> c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c/\ c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF
+ |- ((?v. (((v IN V) /\ (!x. ((x IN (u1 INSERT EMPTY)) = (x IN (v INSERT EMPTY))))) = (u1 IN V))) = (?v. (((v IN V) /\ ((u1 INSERT EMPTY) = (v INSERT EMPTY))) = (u1 IN V))))
T c= c? / c= c/\ cIN b0 f0 ! c= cIN b1 * * part cINSERT f1 part cEMPTY cIN b1 * * part cINSERT b0 part cEMPTY cIN f1 f0 c? / c= c/\ cIN b0 f0 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY cIN f1 f0
- |- ((~ (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))) ==> (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))
T c==> c~ c= c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 c= c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_of_num cNUMERAL cBIT1 c_0 f0
- (~ (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))) |- ((~ (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))) /\ (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))
T c==> c~ c= c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ c~ c= c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 c= c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((!u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))) ==> ((\u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))) u)) = ((\u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))) u))
T c= c==> ! ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 cIN b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * / ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 cIN b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2 * / ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 cIN b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
- |- ((!v'. ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v') \/ (u1 = u)))) = ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ (!v. ((u1 = v) \/ (u1 = u)))))
T c= ! c\/ ! c~ c/\ c= b1 f0 c\/ c= b1 f1 c= b1 f2 c\/ c= f0 b0 c= f0 f2 c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c\/ c= f0 b0 c= f0 f2
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F) ==> ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F)) ==> (((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F) ==> ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F)))
T c==> c==> c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF
+ (~ ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) |- (?u. ((((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) \/ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))))
T c==> c~ c= c? / c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c? / c\/ c/\ c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c~ c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ ! c\/ c~ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b1 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1
- (~ (V u1)), (V u1) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> * f0 f1 c==> c~ cF cF
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ ((\x. ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1))))) x) |- (((\x. ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1))))) x) /\ F)
T c==> * / c/\ c\/ c/\ ! * f0 b1 c/\ ! ! c\/ c= b2 f1 c~ c= b2 b1 ! ! c\/ c~ c= b2 f1 c= b2 b1 * f0 f1 c\/ ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1 c~ * f0 f1 f2 c/\ * / c/\ c\/ c/\ ! * f0 b1 c/\ ! ! c\/ c= b2 f1 c~ c= b2 b1 ! ! c\/ c~ c= b2 f1 c= b2 b1 * f0 f1 c\/ ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1 c~ * f0 f1 f2 cF
- (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))), (V u1) |- ((~ F) ==> F)
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> * f0 f2 c==> c~ cF cF
+ (!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) |- ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))
T c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0
+ (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))) |- ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> F)
T c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (u1 IN (v INSERT (u INSERT EMPTY))) |- ((u1 IN (v INSERT (u INSERT EMPTY))) = T)
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- |- ((((~ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (X $ i)) = (X $ i))) ==> F) ==> (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (X $ i)) = (X $ i))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (X $ i)) = (X $ i)))
T c= c==> c==> c~ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1 cF c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1
+ (?v. ((v IN V) /\ ((u1 INSERT EMPTY) = (v INSERT EMPTY)))), (~ (x = u1)), ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))), ((v INSERT (u INSERT EMPTY)) IN E) |- (((((u1 INSERT EMPTY) IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ ((v INSERT (u INSERT EMPTY)) IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u1 INSERT EMPTY) INTER (v INSERT (u INSERT EMPTY)))))) ==> (u1 IN (v INSERT (u INSERT EMPTY))))
T c==> c? / c/\ cIN b0 f0 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c~ c= f2 f1 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c==> c==> c/\ cIN * * part cINSERT f1 part cEMPTY * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f0 * * part cINSERT b1 part cEMPTY cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f0 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) |- (!x'. ((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')))
T c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
+ ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1)))) |- ((~ (V u1)) ==> F)
T c==> c/\ c\/ c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 * f0 f1 c\/ ! c\/ c~ * f0 b0 c/\ c\/ c= * f2 b0 f1 c= * f2 b0 b0 c\/ c~ c= * f2 b0 f1 c~ c= * f2 b0 b0 c~ * f0 f1 c==> c~ * f0 f1 cF
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- (x = u), (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- ((~ (u1 = v)) = (~ (u1 = v)))
T c==> c= f0 f1 c==> c/\ c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f2 f3 c~ c= f2 f1 c= c~ c= f2 f3 c~ c= f2 f3
+ (~ (x = u1)), (FAN (x , (V , E))), ((v INSERT (u INSERT EMPTY)) IN E), (u1 IN V) |- ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) ==> (u1 IN (v INSERT (u INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN f1 f2 c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ |- (((u1 = u1) ==> F) = F)
T c= c==> c= f0 f0 cF cF
- |- (T = (((~ (_3021407 = u1)) \/ (_3021407 = _3021406)) = ((_3021407 = _3021406) \/ (~ (_3021407 = u1)))))
T c= cT c= c\/ c~ c= f0 f1 c= f0 f2 c\/ c= f0 f2 c~ c= f0 f1
- (~ ((x _3021418) = _3021418)), ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((~ ((x _3021418) = _3021418)) /\ ((x _3021418) = _3021418))
T c==> c~ c= * f0 f1 f1 c==> c/\ ! * f2 b0 c/\ ! ! c\/ c= b1 f3 c~ c= b1 b0 ! ! c\/ c~ c= b1 f3 c= b1 b0 c/\ c~ c= * f0 f1 f1 c= * f0 f1 f1
+ (((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) |- (x' = ((% u) x))
T c==> c/\ c/\ c= f0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% f0 f2 c~ c= f1 c% creal_of_num cNUMERAL cBIT1 c_0 f2 c= f1 c% f0 f2
+ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))) |- ((((u1 INSERT EMPTY) IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ ((v INSERT (u INSERT EMPTY)) IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u1 INSERT EMPTY) INTER (v INSERT (u INSERT EMPTY))))))
T c==> ! ! c==> c/\ cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 c==> c/\ cIN * * part cINSERT f3 part cEMPTY * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f1 * * part cINSERT b1 part cEMPTY cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f1 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- (((x _3021418) = u1) /\ ((x _3021418) = _3021418))
T c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 c/\ c= * f2 f3 f1 c= * f2 f3 f3
- (~ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (X $ i)) = (X $ i))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))), ((x = u) ==> F) |- F
T c==> c/\ c/\ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f1 f2 c~ c= f1 f3 c==> c==> c= f0 f3 cF cF
+ |- ((((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) ==> F)
T c==> c/\ c/\ c= f0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% f0 f2 c~ c= f1 c% creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- (!v. (!x. ((~ (x = u1)) \/ (x = v))))
T c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0
- ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) |- ((((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) ==> ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)) ==> ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F))
T c==> c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c==> c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF
- |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))), (~ F), (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')), (((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) |- ((~ F) /\ F)
T c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c~ cF c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c/\ c~ cF cF
- |- ((\v. ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)) v)
T * / c==> c~ c\/ ! c~ c/\ c= b1 f0 c\/ c= b1 b0 c= b1 f1 c\/ c= f0 b0 c= f0 f1 cF f2
+ |- (((((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) \/ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) ==> F)
T c==> c\/ c/\ c/\ c= f0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% f0 f2 c~ c= f1 c% creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f1 c% b0 f2 c= f1 c% creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1)))), ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) ==> F), ((~ (V u1)) ==> F) |- F
T c==> c/\ c\/ c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 * f0 f1 c\/ ! c\/ c~ * f0 b0 c/\ c\/ c= * f2 b0 f1 c= * f2 b0 b0 c\/ c~ c= * f2 b0 f1 c~ c= * f2 b0 b0 c~ * f0 f1 c==> c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f2 b0 f1 c= * f2 b0 b0 c\/ c~ c= * f2 b0 f1 c~ c= * f2 b0 b0 cF c==> c==> c~ * f0 f1 cF cF
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (X $ i)) = (X $ i)) = (((lambdai. ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (X $ i))) $ i) = (X $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f0 c$ f1 f0 c= c$ clambda / creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f1 b0 f0 c$ f1 f0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (FAN (x , (V , E))), ((v INSERT (u INSERT EMPTY)) IN E) |- ((((FINITE (((set_of_edge v) V) E)) /\ ((u IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))) = (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c= c==> c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ cIN f4 * * * part cset_of_edge f3 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cIN f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cIN f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- (((!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> ((\v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) u1)) = ((\v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) u1))
T c= c==> ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 b0 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * / c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 b0 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 * / c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 b0 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- ((\u. (!v. ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F))) u)
T * / ! c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 cF f2
- ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F), (((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) ==> ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)) |- ((((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) ==> ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)) /\ ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F))
T c==> c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c==> c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c/\ c==> c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF
- (~ (V u1)), ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((~ (V u1)) /\ (V u1))
T c==> c~ * f0 f1 c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 c/\ c~ * f0 f1 * f0 f1
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))) |- (((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) ==> ((\u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) _3021339)) = ((\u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) _3021339))
T c==> c/\ ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c= c==> ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b0 f1 * / c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b0 f1 f2 * / c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b0 f1 f2
+ (~ (x = u1)), (((u1 INSERT EMPTY) INTER (v INSERT (u INSERT EMPTY))) = EMPTY) |- ((((u1 INSERT EMPTY) INTER (v INSERT (u INSERT EMPTY))) = EMPTY) /\ ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) ((u1 INSERT EMPTY) INTER (v INSERT (u INSERT EMPTY))))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))))
T c==> c~ c= f0 f1 c==> c= * * part cINTER * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c/\ c= * * part cINTER * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ (V _3021418)), ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((~ (V _3021418)) /\ (V _3021418))
T c==> c~ * f0 f1 c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f2 c~ c= b1 b0 ! ! c\/ c~ c= b1 f2 c= b1 b0 c/\ c~ * f0 f1 * f0 f1
+ (?v. ((v IN V) /\ ((u1 INSERT EMPTY) = (v INSERT EMPTY)))), (~ (x = u1)), ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))), ((v INSERT (u INSERT EMPTY)) IN E) |- ((FAN (x , (V , E))) ==> (u1 IN (v INSERT (u INSERT EMPTY))))
T c==> c? / c/\ cIN b0 f0 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c~ c= f2 f1 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c==> cFAN c, f2 c, f0 f5 cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((!x'. ((~ (x' = u1)) \/ (x = v))) = ((!x. (~ (x = u1))) \/ (x = v)))
T c= ! c\/ c~ c= b0 f0 c= f1 f2 c\/ ! c~ c= b0 f0 c= f1 f2
- |- ((!u. (!v. ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')))))) = T)
T c= ! ! c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 cT
+ ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((_3021405 = _3021404) ==> (_3021405 = u1))
T c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 c==> c= f2 f3 c= f2 f1
- (_3021366 = _3021367) |- ((_3021366 = _3021367) /\ ((NUMERAL _3021366) = (NUMERAL _3021367)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ ((\u. ((((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) \/ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) u) |- (((\u. ((((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) \/ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) u) /\ F)
T c==> * / c\/ c/\ c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c~ c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ ! c\/ c~ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b1 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c/\ * / c\/ c/\ c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c~ c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ ! c\/ c~ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b1 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cF
- ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))) |- ((~ F) ==> F)
T c==> c/\ ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c~ cF cF
- (((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) |- ((u = (real_of_num (NUMERAL (BIT1 _0)))) = (u = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c/\ c= f0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% f0 f2 c~ c= f1 c% creal_of_num cNUMERAL cBIT1 c_0 f2 c= c= f0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 creal_of_num cNUMERAL cBIT1 c_0
+ (?v. ((v IN V) /\ ((u1 INSERT EMPTY) = (v INSERT EMPTY)))), (~ (x = u1)), ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))), ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))), ((v INSERT (u INSERT EMPTY)) IN E) |- (u1 IN (v INSERT (u INSERT EMPTY)))
T c==> c? / c/\ cIN b0 f0 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c~ c= f2 f1 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c/\ cfan2 c, f2 c, f0 f5 c/\ cfan6 c, f2 c, f0 f5 ! ! c==> c/\ cIN b0 * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f0 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f0 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- ((\E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))))))))) E)
T * / c= cFAN c, f0 c, f1 b0 c/\ cSUBSET * part cUNIONS b0 f1 c/\ cgraph b0 c/\ cfan1 c, f0 c, f1 b0 c/\ cfan2 c, f0 c, f1 b0 c/\ cfan6 c, f0 c, f1 b0 cfan7 c, f0 c, f1 b0 f2
- (_3021421 = _3021422) |- ((_3021421 = _3021422) /\ ((x _3021421) = (x _3021422)))
T c==> c= f0 f1 c/\ c= f0 f1 c= * f2 f0 * f2 f1
+ |- ((((u1 INSERT EMPTY) INTER (v INSERT (u INSERT EMPTY))) = EMPTY) \/ (u1 IN (v INSERT (u INSERT EMPTY))))
T c\/ c= * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY part cEMPTY cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) ==> ((\s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) s)) = ((\s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) s))
T c= c==> ! ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 * / ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 f0 * / ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 f0
- (_3021364 = _3021365) |- ((_3021364 = _3021365) /\ ((BIT1 _3021364) = (BIT1 _3021365)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- (((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) = (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))))
T c= c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0
- ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))) |- (F = F)
T c==> c/\ ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c= cF cF
+ ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((_3021407 = _3021406) \/ (~ (_3021407 = u1)))
T c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 c\/ c= f2 f3 c~ c= f2 f1
+ (?v. ((v IN V) /\ ((u1 INSERT EMPTY) = (v INSERT EMPTY)))), (~ (x = u1)), ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))), (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2))))))))))), ((v INSERT (u INSERT EMPTY)) IN E) |- (u1 IN (v INSERT (u INSERT EMPTY)))
T c==> c? / c/\ cIN b0 f0 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c~ c= f2 f1 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c/\ cSUBSET * part cUNIONS f5 f0 c/\ cgraph f5 c/\ cfan1 c, f2 c, f0 f5 c/\ cfan2 c, f2 c, f0 f5 c/\ cfan6 c, f2 c, f0 f5 ! ! c==> c/\ cIN b0 * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f0 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f0 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((~ (_3021366 = _3021367)) \/ ((NUMERAL _3021366) = (NUMERAL _3021367)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ ((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) |- (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) = T)
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ (~ (x = u1)), (FAN (x , (V , E))), (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))), ((v INSERT (u INSERT EMPTY)) IN E), (u1 IN V), (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) |- (u1 IN (v INSERT (u INSERT EMPTY)))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN f1 f2 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
- (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))) |- (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')
T c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2
+ |- ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)
T * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
+ (~ (V u1)), ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- (((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) /\ F)
T c==> c~ * f0 f1 c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 c/\ c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 cF
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) ==> ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)) = ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V))
T c= c==> ! ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1 * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
+ (~ (x = u1)), (FAN (x , (V , E))), ((v INSERT (u INSERT EMPTY)) IN E), (u1 IN V), (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) |- (u1 IN (v INSERT (u INSERT EMPTY)))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN f1 f2 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (~ (x = u1)), (FAN (x , (V , E))), ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))), ((v INSERT (u INSERT EMPTY)) IN E), (u1 IN V), (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) |- (u1 IN (v INSERT (u INSERT EMPTY)))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> c/\ c~ c= f0 f4 c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN f1 f2 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))) |- ((((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))) /\ F)
T c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c/\ c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 cF
- |- ((!x'. ((x' = u1) \/ (~ (x = v)))) = ((!x. (x = u1)) \/ (~ (x = v))))
T c= ! c\/ c= b0 f0 c~ c= f1 f2 c\/ ! c= b0 f0 c~ c= f1 f2
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
+ (!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))), (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')), (((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) /\ F)
T c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cF
+ (~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) |- ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) /\ F)
T c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 c/\ c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF
- |- ((\V. ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F)) V)
T * / c==> c~ c? / c= c/\ * b0 b1 ! c= c= b2 f0 c= b2 b1 * b0 f0 cF f1
+ |- (((?u. (((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) \/ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) = (?u. ((((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) \/ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))))
T c= c\/ c? / c/\ c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c~ c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c? / c\/ c/\ c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c~ c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ ! c\/ c~ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b1 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1
+ |- (((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))
T c/\ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_of_num cNUMERAL cBIT1 c_0 f0
- (x = u), (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f2 f3 c~ c= f2 f1 c==> c~ cF cF
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- (((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) ==> ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)) |- ((((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) ==> ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)) /\ (((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) ==> ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)))
T c==> c==> c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c/\ c==> c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF
+ (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) |- (((!v. (((~ (V v)) \/ (((x v) = u1) \/ ((x v) = v))) /\ ((~ (V v)) \/ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) ==> ((\v. (((~ (V v)) \/ (((x v) = u1) \/ ((x v) = v))) /\ ((~ (V v)) \/ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) _3021408)) = ((\v. (((~ (V v)) \/ (((x v) = u1) \/ ((x v) = v))) /\ ((~ (V v)) \/ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) _3021408))
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c= c==> ! c/\ c\/ c~ * f0 b0 c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ * f0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 * / c/\ c\/ c~ * f0 b0 c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ * f0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 f3 * / c/\ c\/ c~ * f0 b0 c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ * f0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 f3
+ |- ((((\u. ((((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) \/ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) u) ==> F) = T)
T c= c==> * / c\/ c/\ c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c~ c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ ! c\/ c~ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b1 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cF cT
+ (!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))), (((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) |- ((((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) /\ F)
T c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c/\ c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 cF
+ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))), (?v. ((v IN V) /\ ((u1 INSERT EMPTY) = (v INSERT EMPTY)))), (~ (x = u1)), ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))), ((v INSERT (u INSERT EMPTY)) IN E) |- (u1 IN (v INSERT (u INSERT EMPTY)))
T c==> ! ! c==> c/\ cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 c==> c? / c/\ cIN b0 f1 c= * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c~ c= f2 f3 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f0 cIN f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) |- (((~ (V _3021408)) \/ (((x _3021408) = u1) \/ ((x _3021408) = _3021408))) /\ ((~ (V _3021408)) \/ ((~ ((x _3021408) = u1)) \/ (~ ((x _3021408) = _3021408)))))
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c/\ c\/ c~ * f0 f3 c\/ c= * f1 f3 f2 c= * f1 f3 f3 c\/ c~ * f0 f3 c\/ c~ c= * f1 f3 f2 c~ c= * f1 f3 f3
+ |- ((t = T) = t)
T c= c= f0 cT f0
- |- ((_3021366 = _3021367) ==> ((NUMERAL _3021366) = (NUMERAL _3021367)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) ==> ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))))
T c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY
+ |- (((~ a) \/ (~ b)) = (~ (a /\ b)))
T c= c\/ c~ f0 c~ f1 c~ c/\ f0 f1
+ (x = u), (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- ((~ (u1 = u)) = (~ (u1 = u1)))
T c==> c= f0 f1 c==> c/\ c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f2 f3 c~ c= f2 f1 c= c~ c= f2 f1 c~ c= f2 f2
+ |- ((((x _3021418) = (x _3021418)) ==> ((x _3021418) = u1)) = ((x _3021418) = u1))
T c= c==> c= * f0 f1 * f0 f1 c= * f0 f1 f2 c= * f0 f1 f2
+ |- (((~ (V _3021408)) \/ (((x _3021408) = u1) \/ ((x _3021408) = _3021408))) = (((x _3021408) = _3021408) \/ ((~ (V _3021408)) \/ ((x _3021408) = u1))))
T c= c\/ c~ * f0 f1 c\/ c= * f2 f1 f3 c= * f2 f1 f1 c\/ c= * f2 f1 f1 c\/ c~ * f0 f1 c= * f2 f1 f3
+ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))) |- (((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))) /\ F)
T c==> c/\ ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ c/\ ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ |- (((!E. (!V. (!x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))))) ==> ((\E. (!V. (!x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))))) E)) = ((\E. (!V. (!x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))))) E))
T c= c==> ! ! ! c= cfan7 c, b2 c, b1 b0 ! ! c==> c/\ cIN b3 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY cIN b4 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b2 part cEMPTY b3 * * part caff_ge * * part cINSERT b2 part cEMPTY b4 * * part caff_ge * * part cINSERT b2 part cEMPTY * * part cINTER b3 b4 * / ! ! c= cfan7 c, b2 c, b1 b0 ! ! c==> c/\ cIN b3 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY cIN b4 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b2 part cEMPTY b3 * * part caff_ge * * part cINSERT b2 part cEMPTY b4 * * part caff_ge * * part cINSERT b2 part cEMPTY * * part cINTER b3 b4 f0 * / ! ! c= cfan7 c, b2 c, b1 b0 ! ! c==> c/\ cIN b3 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY cIN b4 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b2 part cEMPTY b3 * * part caff_ge * * part cINSERT b2 part cEMPTY b4 * * part caff_ge * * part cINSERT b2 part cEMPTY * * part cINTER b3 b4 f0
+ |- ((!v. (?x. ((~ (V v)) \/ (((x = u1) \/ (x = v)) /\ ((~ (x = u1)) \/ (~ (x = v))))))) = (?x. (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v))))))))
T c= ! c? / c\/ c~ * f0 b0 c/\ c\/ c= b1 f1 c= b1 b0 c\/ c~ c= b1 f1 c~ c= b1 b0 c? / ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1
- |- ((_3021371 = _3021373) ==> ((~ (_3021370 = _3021372)) \/ (((% _3021370) _3021371) = ((% _3021372) _3021373))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c% f2 f0 c% f3 f1
+ (!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) |- ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) _3021427) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) _3021427))
T c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
+ (?v. ((v IN V) /\ ((u1 INSERT EMPTY) = (v INSERT EMPTY)))), (~ (x = u1)), ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))), ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2))))))))), ((v INSERT (u INSERT EMPTY)) IN E) |- (u1 IN (v INSERT (u INSERT EMPTY)))
T c==> c? / c/\ cIN b0 f0 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c~ c= f2 f1 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c/\ cfan1 c, f2 c, f0 f5 c/\ cfan2 c, f2 c, f0 f5 c/\ cfan6 c, f2 c, f0 f5 ! ! c==> c/\ cIN b0 * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f0 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f0 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) = ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')))))
T c= c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (X $ i))) $ i) = (X $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f1 b0 f0 c$ f1 f0
- |- ((p ==> (~ p)) = (~ p))
T c= c==> f0 c~ f0 c~ f0
- |- ((_3021421 = _3021422) ==> ((x _3021421) = (x _3021422)))
T c==> c= f0 f1 c= * f2 f0 * f2 f1
- (!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))), (((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))
T c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
+ |- (((!a. (((hull affine) (a INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5568. (?u. (((SETSPEC GEN%PVAR%5568) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) a))))))) ==> ((\a. (((hull affine) (a INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5568. (?u. (((SETSPEC GEN%PVAR%5568) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) a))))))) a)) = ((\a. (((hull affine) (a INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5568. (?u. (((SETSPEC GEN%PVAR%5568) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) a))))))) a))
T c= c==> ! c= * * part chull part caffine * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c= b2 creal_of_num cNUMERAL cBIT1 c_0 c% b2 b0 * / c= * * part chull part caffine * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c= b2 creal_of_num cNUMERAL cBIT1 c_0 c% b2 b0 f0 * / c= * * part chull part caffine * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c= b2 creal_of_num cNUMERAL cBIT1 c_0 c% b2 b0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (x = u), (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- ((x = u) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f2 f3 c~ c= f2 f1 c/\ c= f0 f1 cF
- |- ((real_neg ((real_sub ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (X $ i))) (X $ i))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1 creal_of_num cNUMERAL c_0
- (x = v), (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- (F = F)
T c==> c= f0 f1 c==> c/\ c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f2 f1 c~ c= f2 f3 c= cF cF
+ (?v. ((v IN V) /\ ((u1 INSERT EMPTY) = (v INSERT EMPTY)))), (~ (x = u1)), (FAN (x , (V , E))), ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))), ((v INSERT (u INSERT EMPTY)) IN E) |- ((?v. ((v IN V) /\ ((u1 INSERT EMPTY) = (v INSERT EMPTY)))) /\ (u1 IN (v INSERT (u INSERT EMPTY))))
T c==> c? / c/\ cIN b0 f0 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c~ c= f2 f1 c==> cFAN c, f2 c, f0 f3 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c/\ c? / c/\ cIN b0 f0 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) |- (~ (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))
T c==> c/\ c/\ c= f0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% f0 f2 c~ c= f1 c% creal_of_num cNUMERAL cBIT1 c_0 f2 c~ c= c% creal_of_num cNUMERAL cBIT1 c_0 f2 c% creal_of_num cNUMERAL cBIT1 c_0 f2
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
+ (((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))) ==> F), ((((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) \/ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) |- F
T c==> c==> c/\ ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 cF c==> c\/ c/\ c/\ c= f2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% f2 f1 c~ c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ (~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) |- (?x. ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1)))))
T c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 c? / c/\ c\/ c/\ ! * f0 b1 c/\ ! ! c\/ c= b2 f1 c~ c= b2 b1 ! ! c\/ c~ c= b2 f1 c= b2 b1 * f0 f1 c\/ ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1 c~ * f0 f1
+ ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- (!v. (!x. ((x = u1) \/ (~ (x = v)))))
T c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 ! ! c\/ c= b1 f1 c~ c= b1 b0
+ (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))), ((x = u) ==> F), ((x = v) ==> F) |- F
T c==> c/\ c/\ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f1 f2 c~ c= f1 f3 c==> c==> c= f0 f3 cF c==> c==> c= f0 f2 cF cF
+ |- ((((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) ==> F)
T c==> c/\ c/\ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f1 f2 c~ c= f1 f3 cF
+ |- ((((\x. ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1))))) x) ==> F) = T)
T c= c==> * / c/\ c\/ c/\ ! * f0 b1 c/\ ! ! c\/ c= b2 f1 c~ c= b2 b1 ! ! c\/ c~ c= b2 f1 c= b2 b1 * f0 f1 c\/ ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1 c~ * f0 f1 f2 cF cT
+ (FAN (x , (V , E))), ((~ (x = u1)) /\ (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))), ((v INSERT (u INSERT EMPTY)) IN E), (u1 IN V) |- (u1 IN (v INSERT (u INSERT EMPTY)))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ c~ c= f0 f3 cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c==> cIN f3 f1 cIN f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ ((\u. ((((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) \/ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) u) |- ((((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) \/ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))
T c==> * / c\/ c/\ c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c~ c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ ! c\/ c~ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b1 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c\/ c/\ c/\ c= f2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% f2 f1 c~ c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1
- (!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))), (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')), (((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))
T c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
+ ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1)))) |- (((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1)))) /\ F)
T c==> c/\ c\/ c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 * f0 f1 c\/ ! c\/ c~ * f0 b0 c/\ c\/ c= * f2 b0 f1 c= * f2 b0 b0 c\/ c~ c= * f2 b0 f1 c~ c= * f2 b0 b0 c~ * f0 f1 c/\ c/\ c\/ c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 * f0 f1 c\/ ! c\/ c~ * f0 b0 c/\ c\/ c= * f2 b0 f1 c= * f2 b0 b0 c\/ c~ c= * f2 b0 f1 c~ c= * f2 b0 b0 c~ * f0 f1 cF
- (_3021423 = _3021424) |- ((_3021423 = _3021424) /\ ((V _3021424) \/ (~ (V _3021423))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
- |- ((?x'. ((x' = u1) /\ ((x = v) \/ (x = u)))) = ((?x. (x = u1)) /\ ((x = v) \/ (x = u))))
T c= c? / c/\ c= b0 f0 c\/ c= f1 f2 c= f1 f3 c/\ c? / c= b0 f0 c\/ c= f1 f2 c= f1 f3
- (x = u) |- (F = F)
T c==> c= f0 f1 c= cF cF
+ |- (((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')))) = ((!x'. ((x' IN ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))) ==> (x' IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))) = (x' IN ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)))))))
T c= c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c==> ! c==> cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c= cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY
- (~ ((x _3021418) = (x _3021418))) |- ((~ ((x _3021418) = (x _3021418))) /\ ((x _3021418) = (x _3021418)))
T c==> c~ c= * f0 f1 * f0 f1 c/\ c~ c= * f0 f1 * f0 f1 c= * f0 f1 * f0 f1
- |- ((!v'. (((~ (V v)) \/ (?x. (((x = u1) \/ (x = v)) /\ ((~ (x = u1)) \/ (~ (x = v)))))) \/ (~ (V u1)))) = (((~ (V v)) \/ (?x. (((x = u1) \/ (x = v)) /\ ((~ (x = u1)) \/ (~ (x = v)))))) \/ (!v. (~ (V u1)))))
T c= ! c\/ c\/ c~ * f0 f1 c? / c/\ c\/ c= b1 f2 c= b1 f1 c\/ c~ c= b1 f2 c~ c= b1 f1 c~ * f0 f2 c\/ c\/ c~ * f0 f1 c? / c/\ c\/ c= b0 f2 c= b0 f1 c\/ c~ c= b0 f2 c~ c= b0 f1 ! c~ * f0 f2
- |- ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0))))) ==> ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (x = u), (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- (u = u1)
T c==> c= f0 f1 c==> c/\ c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f2 f3 c~ c= f2 f1 c= f1 f2
+ |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- |- ((!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) = T)
T c= ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cT
- |- ((!x. (!u. (!v. ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))))) = T)
T c= ! ! ! c==> ! c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 ! c= c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 cT
+ (~ (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))), ((((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) ==> F) |- F
T c==> c~ c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 cF cF
- |- (((real_gt x) y) = ((real_lt y) x))
T c= creal_gt f0 f1 creal_lt f1 f0
- |- (((!u1. (!x. (!u. (!v. ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F))))) ==> ((\u1. (!x. (!u. (!v. ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F))))) u1)) = ((\u1. (!x. (!u. (!v. ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F))))) u1))
T c= c==> ! ! ! ! c==> c~ c==> ! c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 ! c= c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 cF * / ! ! ! c==> c~ c==> ! c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 ! c= c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 cF f0 * / ! ! ! c==> c~ c==> ! c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 ! c= c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 cF f0
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- (u IN (((set_of_edge v) V) E)) |- ((u IN (((set_of_edge v) V) E)) = T)
T c==> cIN f0 * * * part cset_of_edge f1 f2 f3 c= cIN f0 * * * part cset_of_edge f1 f2 f3 cT
+ (((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) |- (u = (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c/\ c= f0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% f0 f2 c~ c= f1 c% creal_of_num cNUMERAL cBIT1 c_0 f2 c= f0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (real_of_num (NUMERAL (BIT1 _0)))) X) $ i) = (X $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_of_num cNUMERAL cBIT1 c_0 f1 f0 c$ f1 f0 cT
- |- (((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) ==> ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F))
T c==> c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ |- (((((% (real_of_num (NUMERAL (BIT1 _0)))) x) = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)) ==> F) = F)
T c= c==> c= c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF cF
+ (((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) ==> F)
T c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 cF
+ |- ((?u. ((((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) \/ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)
T c==> c? / c\/ c/\ c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% b0 f1 c~ c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ ! c\/ c~ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b1 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 cF
- |- ((_3021364 = _3021365) ==> ((BIT1 _3021364) = (BIT1 _3021365)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- (((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) ==> ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F))
T c==> c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF
+ |- ((~ (a \/ b)) = ((~ a) /\ (~ b)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
+ (~ (x = u1)), (FAN (x , (V , E))), ((v INSERT (u INSERT EMPTY)) IN E), (u1 IN V), (u1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) |- (((FINITE (((set_of_edge v) V) E)) /\ ((u IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))) ==> (u1 IN (v INSERT (u INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN f1 f2 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c/\ cFINITE * * * part cset_of_edge f4 f2 f3 c/\ cIN f5 * * * part cset_of_edge f4 f2 f3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f0 f5 c/\ c~ c= f4 f5 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f5 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f0 * * part cINSERT f4 part cEMPTY cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) |- ((((% (real_of_num (NUMERAL (BIT1 _0)))) x) = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)) ==> F)
T c==> c/\ c/\ c= f0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% f0 f2 c~ c= f1 c% creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c= c% creal_of_num cNUMERAL cBIT1 c_0 f2 c% creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ |- ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)
T * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
- |- ((!u1. (!x. (!u. (!v. ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')))))))) = (!u1. (!x. (!u. (!v. ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F))))))
T c= ! ! ! ! c==> ! c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 ! c= c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 ! ! ! ! c==> c~ c==> ! c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 ! c= c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b4 cF
+ (~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) |- (?x. (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))))
T c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 c? / c/\ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c~ c= f0 f1 c~ c= f0 f2
- (((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F) ==> ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F)) |- ((((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F) ==> ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F)) /\ (((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F) ==> ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F)))
T c==> c==> c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c/\ c==> c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF
+ |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
+ |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ (?v. ((v IN V) /\ ((u1 INSERT EMPTY) = (v INSERT EMPTY)))), (~ (x = u1)), ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))), ((v INSERT (u INSERT EMPTY)) IN E) |- ((((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2))))))))))) ==> (u1 IN (v INSERT (u INSERT EMPTY))))
T c==> c? / c/\ cIN b0 f0 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c~ c= f2 f1 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c==> c/\ cSUBSET * part cUNIONS f5 f0 c/\ cgraph f5 c/\ cfan1 c, f2 c, f0 f5 c/\ cfan2 c, f2 c, f0 f5 c/\ cfan6 c, f2 c, f0 f5 ! ! c==> c/\ cIN b0 * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f0 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f0 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((!u1. (!v. ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u))))) = T)
T c= ! ! c\/ ! c~ c/\ c= b2 b0 c\/ c= b2 b1 c= b2 f0 c\/ c= b0 b1 c= b0 f0 cT
+ (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))), (V u1) |- (((x u1) = u1) /\ ((x u1) = u1))
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> * f0 f2 c/\ c= * f1 f2 f2 c= * f1 f2 f2
+ (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- ((x = v) ==> F)
T c==> c/\ c/\ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f1 f2 c~ c= f1 f3 c==> c= f0 f2 cF
+ |- (((!x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) ==> ((\x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) x)) = ((\x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) x))
T c= c==> ! ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * / ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY f0 * / ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY f0
- (x = v), (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f2 f1 c~ c= f2 f3 c==> c~ cF cF
- (((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) |- (F = F)
T c==> c/\ c/\ c= f0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% f0 f2 c~ c= f1 c% creal_of_num cNUMERAL cBIT1 c_0 f2 c= cF cF
+ (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- ((x = v) \/ (x = u))
T c==> c/\ c/\ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f1 f2 c~ c= f1 f3 c\/ c= f0 f2 c= f0 f3
- |- ((((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F) ==> ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F)) = ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F))
T c= c==> c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF
- |- ((~ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (X $ i)) = (X $ i))) ==> F)
T c==> c~ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1 cF
+ (?v. ((v IN V) /\ ((u1 INSERT EMPTY) = (v INSERT EMPTY)))), ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))), ((v INSERT (u INSERT EMPTY)) IN E) |- (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) ((u1 INSERT EMPTY) INTER (v INSERT (u INSERT EMPTY))))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))) = (((((u1 INSERT EMPTY) IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ ((v INSERT (u INSERT EMPTY)) IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u1 INSERT EMPTY) INTER (v INSERT (u INSERT EMPTY)))))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))))
T c==> c? / c/\ cIN b0 f0 c= * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c= c==> c= * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c==> c/\ cIN * * part cINSERT f1 part cEMPTY * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f0 * * part cINSERT b1 part cEMPTY cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cUNION f5 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f0 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ ((\x. (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u))))) x) |- (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u))))
T c==> * / c/\ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c~ c= f0 f1 c~ c= f0 f2 f3 c/\ c/\ c= f3 f0 c\/ c= f3 f1 c= f3 f2 c/\ c~ c= f0 f1 c~ c= f0 f2
- |- (((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u))) = T)
T c= c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cT
- (fan6 (x , (V , E))) |- ((fan6 (x , (V , E))) = T)
T c==> cfan6 c, f0 c, f1 f2 c= cfan6 c, f0 c, f1 f2 cT
+ |- ((\x. (!v. (!u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))))) x)
T * / ! ! ! c==> c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b3 cIN b3 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
+ |- ((!x'. ((x' IN (GSPEC (\GEN%PVAR%5618. (?u. (((SETSPEC GEN%PVAR%5618) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) x)))))) = (x' IN (((% (real_of_num (NUMERAL (BIT1 _0)))) x) INSERT EMPTY)))) = ((GSPEC (\GEN%PVAR%5618. (?u. (((SETSPEC GEN%PVAR%5618) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) x))))) = (((% (real_of_num (NUMERAL (BIT1 _0)))) x) INSERT EMPTY)))
T c= ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 c= b2 creal_of_num cNUMERAL cBIT1 c_0 c% b2 f0 cIN b0 * * part cINSERT c% creal_of_num cNUMERAL cBIT1 c_0 f0 part cEMPTY c= * part cGSPEC / c? / cSETSPEC b0 c= b1 creal_of_num cNUMERAL cBIT1 c_0 c% b1 f0 * * part cINSERT c% creal_of_num cNUMERAL cBIT1 c_0 f0 part cEMPTY
+ (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))), ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- (((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) /\ F)
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f2 c~ c= b1 b0 ! ! c\/ c~ c= b1 f2 c= b1 b0 c/\ c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f2 c~ c= b1 b0 ! ! c\/ c~ c= b1 f2 c= b1 b0 cF
- (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))), (~ F), (V u1) |- ((~ F) /\ F)
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> c~ cF c==> * f0 f2 c/\ c~ cF cF
- (~ F), (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c/\ c~ cF cF
+ ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))) |- (((_3021339 = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((% (real_of_num (NUMERAL (BIT1 _0)))) x) = ((% _3021339) x))) ==> F)
T c==> c/\ ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c/\ c= f2 creal_of_num cNUMERAL cBIT1 c_0 c= c% creal_of_num cNUMERAL cBIT1 c_0 f1 c% f2 f1 cF
+ |- (((!V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E))))))))))) ==> ((\V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E))))))))))) V)) = ((\V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E))))))))))) V))
T c= c==> ! ! c= cFAN c, f0 c, b0 b1 c/\ cSUBSET * part cUNIONS b1 b0 c/\ cgraph b1 c/\ cfan1 c, f0 c, b0 b1 c/\ cfan2 c, f0 c, b0 b1 c/\ cfan6 c, f0 c, b0 b1 cfan7 c, f0 c, b0 b1 * / ! c= cFAN c, f0 c, b0 b1 c/\ cSUBSET * part cUNIONS b1 b0 c/\ cgraph b1 c/\ cfan1 c, f0 c, b0 b1 c/\ cfan2 c, f0 c, b0 b1 c/\ cfan6 c, f0 c, b0 b1 cfan7 c, f0 c, b0 b1 f1 * / ! c= cFAN c, f0 c, b0 b1 c/\ cSUBSET * part cUNIONS b1 b0 c/\ cgraph b1 c/\ cfan1 c, f0 c, b0 b1 c/\ cfan2 c, f0 c, b0 b1 c/\ cfan6 c, f0 c, b0 b1 cfan7 c, f0 c, b0 b1 f1
+ |- (((?x. (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v))))))) \/ (~ (V u1))) = (?x. ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1)))))
T c= c\/ c? / ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1 c~ * f0 f1 c? / c\/ ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1 c~ * f0 f1
+ (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))), ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1)))), ((V u1) ==> F) |- F
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> c/\ c\/ c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f2 c~ c= b1 b0 ! ! c\/ c~ c= b1 f2 c= b1 b0 * f0 f2 c\/ ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c~ * f0 f2 c==> c==> * f0 f2 cF cF
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F) |- ((((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F) ==> ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F)) ==> ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F))
T c==> c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c==> c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF
- (~ (V u1)), (V u1) |- ((~ (V u1)) /\ (V u1))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ * f0 f1 * f0 f1
+ (x = v), (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- ((~ (u1 = v)) = (~ (u1 = u1)))
T c==> c= f0 f1 c==> c/\ c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f2 f1 c~ c= f2 f3 c= c~ c= f2 f1 c~ c= f2 f2
- (~ (u IN (aff (x INSERT (v INSERT EMPTY))))) |- ((u IN (aff (x INSERT (v INSERT EMPTY)))) = F)
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- ((\u1. (!v. ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F))) u1)
T * / ! c==> c~ c\/ ! c~ c/\ c= b2 b0 c\/ c= b2 b1 c= b2 f0 c\/ c= b0 b1 c= b0 f0 cF f1
- (~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) |- ((collinear (x INSERT (v INSERT (u INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ |- ((x IN (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))) = (?v. (((\p. (\t. (p /\ (x = t)))) (v IN V)) (v INSERT EMPTY))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f1 * * part cINSERT b1 part cEMPTY c? / * * / / c/\ b1 c= f0 b2 cIN b0 f1 * * part cINSERT b0 part cEMPTY
+ ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((\v. (V v)) _3021409)
T c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 * / * f0 b0 f2
+ |- (((!x. (!v. ((~ (x = v)) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) /\ (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))))) ==> ((\x. (!v. ((~ (x = v)) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) /\ (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))))) x)) = ((\x. (!v. ((~ (x = v)) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))) /\ (v IN ((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY))))))) x))
T c= c==> ! ! c==> c~ c= b0 b1 c/\ cIN b0 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * / ! c==> c~ c= b0 b1 c/\ cIN b0 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY f0 * / ! c==> c~ c= b0 b1 c/\ cIN b0 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY f0
+ |- ((x IN (GSPEC (\GEN%PVAR%5450. (P (SETSPEC GEN%PVAR%5450))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
- (~ (V u1)), (V u1) |- ((V u1) /\ F)
T c==> c~ * f0 f1 c==> * f0 f1 c/\ * f0 f1 cF
- |- ((!v. ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) = T)
T c= ! c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 cT
+ |- ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t)
T * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1
+ (x = u), (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f2 f3 c~ c= f2 f1 cF
- |- ((~ ((x _3021418) = (x _3021418))) ==> ((x _3021418) = (x _3021418)))
T c==> c~ c= * f0 f1 * f0 f1 c= * f0 f1 * f0 f1
+ |- ((T \/ t) = T)
T c= c\/ cT f0 cT
+ (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) |- ((\v. (((~ (V v)) \/ (((x v) = u1) \/ ((x v) = v))) /\ ((~ (V v)) \/ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) _3021408)
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 * / c/\ c\/ c~ * f0 b0 c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ * f0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 f3
+ |- ((u1 IN (v INSERT (u INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) ((u1 INSERT EMPTY) INTER (v INSERT (u INSERT EMPTY))))) ==> (u1 IN (v INSERT (u INSERT EMPTY)))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((!x'. (P \/ (Q x'))) = (P \/ (!x'. (Q x'))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ |- ((F ==> t) = T)
T c= c==> cF f0 cT
- |- ((!V. (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) = T)
T c= ! c? / c= c/\ * b0 b1 ! c= c= b2 f0 c= b2 b1 * b0 f0 cT
- |- ((!x. (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) = (!x. ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)))
T c= ! ! c= c? / c/\ c= b2 creal_of_num cNUMERAL cBIT1 c_0 c= b1 c% b2 b0 c= b1 c% creal_of_num cNUMERAL cBIT1 c_0 b0 ! c==> c~ ! c= c? / c/\ c= b2 creal_of_num cNUMERAL cBIT1 c_0 c= b1 c% b2 b0 c= b1 c% creal_of_num cNUMERAL cBIT1 c_0 b0 cF
- ((UNIONS E) SUBSET V) |- (((UNIONS E) SUBSET V) = T)
T c==> cSUBSET * part cUNIONS f0 f1 c= cSUBSET * part cUNIONS f0 f1 cT
+ |- (((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1)))) ==> F)
T c==> c/\ c\/ c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 * f0 f1 c\/ ! c\/ c~ * f0 b0 c/\ c\/ c= * f2 b0 f1 c= * f2 b0 b0 c\/ c~ c= * f2 b0 f1 c~ c= * f2 b0 b0 c~ * f0 f1 cF
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) |- ((((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) ==> F)
T c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 cF
+ ((\x. ((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1))))) x) |- ((((((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) \/ (V u1)) /\ ((!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))) \/ (~ (V u1)))) ==> F) = F)
T c==> * / c/\ c\/ c/\ ! * f0 b1 c/\ ! ! c\/ c= b2 f1 c~ c= b2 b1 ! ! c\/ c~ c= b2 f1 c= b2 b1 * f0 f1 c\/ ! c\/ c~ * f0 b1 c/\ c\/ c= * b0 b1 f1 c= * b0 b1 b1 c\/ c~ c= * b0 b1 f1 c~ c= * b0 b1 b1 c~ * f0 f1 f2 c= c==> c/\ c\/ c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 * f0 f1 c\/ ! c\/ c~ * f0 b0 c/\ c\/ c= * f2 b0 f1 c= * f2 b0 b0 c\/ c~ c= * f2 b0 f1 c~ c= * f2 b0 b0 c~ * f0 f1 cF cF
- ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((~ ((x _3021418) = _3021418)) ==> ((x _3021418) = _3021418))
T c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 c==> c~ c= * f2 f3 f3 c= * f2 f3 f3
- |- ((?x'. ((x = u1) /\ ((x' = v) \/ (x' = u)))) = ((x = u1) /\ (?x. ((x = v) \/ (x = u)))))
T c= c? / c/\ c= f0 f1 c\/ c= b0 f2 c= b0 f3 c/\ c= f0 f1 c? / c\/ c= b0 f2 c= b0 f3
+ ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((((x _3021418) = u1) /\ ((x _3021418) = _3021418)) = ((V _3021418) /\ (((x _3021418) = u1) /\ ((x _3021418) = _3021418))))
T c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 c= c/\ c= * f2 f3 f1 c= * f2 f3 f3 c/\ * f0 f3 c/\ c= * f2 f3 f1 c= * f2 f3 f3
+ |- (((!x. (((\x. (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u))))) x) ==> F)) ==> ((?x. (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u))))) ==> F)) = ((?x. (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u))))) ==> F))
T c= c==> ! c==> * / c/\ c/\ c= b1 f0 c\/ c= b1 f1 c= b1 f2 c/\ c~ c= f0 f1 c~ c= f0 f2 b0 cF c==> c? / c/\ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c~ c= f0 f1 c~ c= f0 f2 cF c==> c? / c/\ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c~ c= f0 f1 c~ c= f0 f2 cF
+ |- ((\v. (((\p. (\t. (p /\ (x = t)))) (v IN V)) (v INSERT EMPTY))) = (\v. ((v IN V) /\ (x = (v INSERT EMPTY)))))
T c= / * * / / c/\ b1 c= f0 b2 cIN b0 f1 * * part cINSERT b0 part cEMPTY / c/\ cIN b0 f1 c= f0 * * part cINSERT b0 part cEMPTY
+ |- ((\V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E))))))))))) V)
T * / ! c= cFAN c, f0 c, b0 b1 c/\ cSUBSET * part cUNIONS b1 b0 c/\ cgraph b1 c/\ cfan1 c, f0 c, b0 b1 c/\ cfan2 c, f0 c, b0 b1 c/\ cfan6 c, f0 c, b0 b1 cfan7 c, f0 c, b0 b1 f1
- (((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)) |- ((((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)) /\ (((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)))
T c==> c==> c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c/\ c==> c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
+ |- ((GSPEC (\GEN%PVAR%5568. (?u. (((SETSPEC GEN%PVAR%5568) (u = (real_of_num (NUMERAL (BIT1 _0))))) ((% u) x))))) = (((% (real_of_num (NUMERAL (BIT1 _0)))) x) INSERT EMPTY))
T c= * part cGSPEC / c? / cSETSPEC b0 c= b1 creal_of_num cNUMERAL cBIT1 c_0 c% b1 f0 * * part cINSERT c% creal_of_num cNUMERAL cBIT1 c_0 f0 part cEMPTY
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
+ (~ (x = u1)), (FAN (x , (V , E))), ((v INSERT (u INSERT EMPTY)) IN E), (u1 IN V) |- (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY))) ==> (u1 IN (v INSERT (u INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN f1 f2 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ |- ((!v. (((~ (V v)) \/ (?x. (((x = u1) \/ (x = v)) /\ ((~ (x = u1)) \/ (~ (x = v)))))) \/ (~ (V u1)))) = ((!v. ((~ (V v)) \/ (?x. (((x = u1) \/ (x = v)) /\ ((~ (x = u1)) \/ (~ (x = v))))))) \/ (~ (V u1))))
T c= ! c\/ c\/ c~ * f0 b0 c? / c/\ c\/ c= b1 f1 c= b1 b0 c\/ c~ c= b1 f1 c~ c= b1 b0 c~ * f0 f1 c\/ ! c\/ c~ * f0 b0 c? / c/\ c\/ c= b1 f1 c= b1 b0 c\/ c~ c= b1 f1 c~ c= b1 b0 c~ * f0 f1
- (((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) |- ((~ F) ==> F)
T c==> c/\ c/\ c= f0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% f0 f2 c~ c= f1 c% creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c~ cF cF
+ |- ((\E. (!V. (!x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))))) E)
T * / ! ! c= cfan7 c, b2 c, b1 b0 ! ! c==> c/\ cIN b3 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY cIN b4 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b2 part cEMPTY b3 * * part caff_ge * * part cINSERT b2 part cEMPTY b4 * * part caff_ge * * part cINSERT b2 part cEMPTY * * part cINTER b3 b4 f0
+ (FAN (x , (V , E))) |- ((FAN (x , (V , E))) = T)
T c==> cFAN c, f0 c, f1 f2 c= cFAN c, f0 c, f1 f2 cT
- ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F), (((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) ==> ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)) |- (((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) /\ ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F))
T c==> c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c==> c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c/\ c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF
- |- ((_3021368 = _3021369) ==> ((real_of_num _3021368) = (real_of_num _3021369)))
T c==> c= f0 f1 c= creal_of_num f0 creal_of_num f1
- |- ((~ (_3021421 = _3021422)) \/ ((x _3021421) = (x _3021422)))
T c\/ c~ c= f0 f1 c= * f2 f0 * f2 f1
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- (_3021371 = _3021373) |- ((_3021371 = _3021373) /\ ((~ (_3021370 = _3021372)) \/ (((% _3021370) _3021371) = ((% _3021372) _3021373))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c% f2 f0 c% f3 f1
- (fan1 (x , (V , E))) |- ((fan1 (x , (V , E))) = T)
T c==> cfan1 c, f0 c, f1 f2 c= cfan1 c, f0 c, f1 f2 cT
- |- ((?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1))) = T)
T c= c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cT
- |- ((!v'. (((V v) /\ (!x. (((x = u1) \/ (~ (x = v))) /\ ((~ (x = u1)) \/ (x = v))))) \/ (V u1))) = (((V v) /\ (!x. (((x = u1) \/ (~ (x = v))) /\ ((~ (x = u1)) \/ (x = v))))) \/ (!v. (V u1))))
T c= ! c\/ c/\ * f0 f1 ! c/\ c\/ c= b1 f2 c~ c= b1 f1 c\/ c~ c= b1 f2 c= b1 f1 * f0 f2 c\/ c/\ * f0 f1 ! c/\ c\/ c= b0 f2 c~ c= b0 f1 c\/ c~ c= b0 f2 c= b0 f1 ! * f0 f2
- |- (((!u. (!u1. (!v. ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)))) ==> ((\u. (!u1. (!v. ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)))) u)) = ((\u. (!u1. (!v. ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)))) u))
T c= c==> ! ! ! c==> c~ c\/ ! c~ c/\ c= b3 b1 c\/ c= b3 b2 c= b3 b0 c\/ c= b1 b2 c= b1 b0 cF * / ! ! c==> c~ c\/ ! c~ c/\ c= b3 b1 c\/ c= b3 b2 c= b3 b0 c\/ c= b1 b2 c= b1 b0 cF f0 * / ! ! c==> c~ c\/ ! c~ c/\ c= b3 b1 c\/ c= b3 b2 c= b3 b0 c\/ c= b1 b2 c= b1 b0 cF f0
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- ((!u'. ((~ (u' = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) = ((!u. (~ (u = (real_of_num (NUMERAL (BIT1 _0)))))) \/ (~ (x' = ((% u) x)))))
T c= ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% f1 f2 c\/ ! c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% f1 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F), (((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F) ==> ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F)) |- (((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F) /\ ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F))
T c==> c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c==> c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c/\ c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF
- (~ F), (~ (V u1)), (V u1) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ cF cF
- (~ ((x u1) = u1)) |- (((x u1) = u1) ==> (~ ((x u1) = u1)))
T c==> c~ c= * f0 f1 f1 c==> c= * f0 f1 f1 c~ c= * f0 f1 f1
- |- ((\x. ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)) x)
T * / c==> c~ ! c= c? / c/\ c= b2 creal_of_num cNUMERAL cBIT1 c_0 c= b1 c% b2 b0 c= b1 c% creal_of_num cNUMERAL cBIT1 c_0 b0 cF f0
- |- ((!v. ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) = T)
T c= ! c\/ ! c~ c/\ c= b1 f0 c\/ c= b1 b0 c= b1 f1 c\/ c= f0 b0 c= f0 f1 cT
- (~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0))))) |- ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0))))) /\ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) |- F
T c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) |- ((((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) ==> ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)) ==> ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F))
T c==> c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c==> c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- |- ((?u'. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u') x)))) = ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (?u. (x' = ((% u) x)))))
T c= c? / c/\ c= f0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% b0 f2 c/\ c= f0 creal_of_num cNUMERAL cBIT1 c_0 c? / c= f1 c% b0 f2
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) ==> ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)) = ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F))
T c= c==> c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- |- ((!V. (P V)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))
T c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (X $ i)) = (X $ i))) |- ((~ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (X $ i)) = (X $ i))) /\ F)
T c==> c~ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1 c/\ c~ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 c$ f0 f1 cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- ((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) |- (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) = T)
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cT
- |- ((~ (_3021371 = _3021373)) \/ ((~ (_3021370 = _3021372)) \/ (((% _3021370) _3021371) = ((% _3021372) _3021373))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c% f2 f0 c% f3 f1
- |- ((!u. (!u1. (!v. ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))))) = (!u. (!u1. (!v. ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)))))
T c= ! ! ! c\/ ! c~ c/\ c= b3 b1 c\/ c= b3 b2 c= b3 b0 c\/ c= b1 b2 c= b1 b0 ! ! ! c==> c~ c\/ ! c~ c/\ c= b3 b1 c\/ c= b3 b2 c= b3 b0 c\/ c= b1 b2 c= b1 b0 cF
- ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((~ (V u1)) ==> (V u1))
T c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 c==> c~ * f0 f1 * f0 f1
- |- ((\u1. (!V. ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F))) u1)
T * / ! c==> c~ c? / c= c/\ * b1 b2 ! c= c= b3 b0 c= b3 b2 * b1 b0 cF f0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (V u1) |- ((~ (V u1)) ==> (V u1))
T c==> * f0 f1 c==> c~ * f0 f1 * f0 f1
- (_3021368 = _3021369) |- ((_3021368 = _3021369) /\ ((real_of_num _3021368) = (real_of_num _3021369)))
T c==> c= f0 f1 c/\ c= f0 f1 c= creal_of_num f0 creal_of_num f1
- (~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')), (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) /\ (~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))) |- ((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2
- ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((~ ((x _3021418) = u1)) ==> ((x _3021418) = u1))
T c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 c==> c~ c= * f2 f3 f1 c= * f2 f3 f1
- (~ F), (~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')), (((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c/\ c~ cF cF
- |- ((\x. (!u. (!v. ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)))) x)
T * / ! ! c==> c~ c==> ! c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 ! c= c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 cF f1
- |- (((!v. ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)) ==> ((\v. ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)) v)) = ((\v. ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)) v))
T c= c==> ! c==> c~ c\/ ! c~ c/\ c= b1 f0 c\/ c= b1 b0 c= b1 f1 c\/ c= f0 b0 c= f0 f1 cF * / c==> c~ c\/ ! c~ c/\ c= b1 f0 c\/ c= b1 b0 c= b1 f1 c\/ c= f0 b0 c= f0 f1 cF f2 * / c==> c~ c\/ ! c~ c/\ c= b1 f0 c\/ c= b1 b0 c= b1 f1 c\/ c= f0 b0 c= f0 f1 cF f2
- ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((~ (V _3021418)) ==> (V _3021418))
T c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 c==> c~ * f0 f2 * f0 f2
- |- ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- |- ((!v'. ((~ (V v)) \/ (?x. (((x = u1) \/ (x = v')) /\ ((~ (x = u1)) \/ (~ (x = v'))))))) = ((~ (V v)) \/ (!v. (?x. (((x = u1) \/ (x = v)) /\ ((~ (x = u1)) \/ (~ (x = v))))))))
T c= ! c\/ c~ * f0 f1 c? / c/\ c\/ c= b1 f2 c= b1 b0 c\/ c~ c= b1 f2 c~ c= b1 b0 c\/ c~ * f0 f1 ! c? / c/\ c\/ c= b1 f2 c= b1 b0 c\/ c~ c= b1 f2 c~ c= b1 b0
- |- (((\t. (f t)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (~ F), (~ (V u1)), ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 c/\ c~ cF cF
- (~ (x = u1)), (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) ((u1 INSERT EMPTY) INTER (v INSERT (u INSERT EMPTY))))) |- ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) = ((aff_ge (x INSERT EMPTY)) ((u1 INSERT EMPTY) INTER (v INSERT (u INSERT EMPTY))))) /\ (u1 IN (v INSERT (u INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((?u'. ((u' = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = ((?u. (u = (real_of_num (NUMERAL (BIT1 _0))))) /\ (x' = ((% u) x))))
T c= c? / c/\ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% f1 f2 c/\ c? / c= b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 c% f1 f2
- (~ F), ((!u. ((~ (u = (real_of_num (NUMERAL (BIT1 _0))))) \/ (~ (x' = ((% u) x))))) /\ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ ! c\/ c~ c= b0 creal_of_num cNUMERAL cBIT1 c_0 c~ c= f0 c% b0 f1 c= f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ c~ cF cF
- (_3021423 = _3021424) |- ((((V _3021423) = (V _3021424)) ==> ((V _3021424) \/ (~ (V _3021423)))) = ((V _3021424) \/ (~ (V _3021423))))
T c==> c= f0 f1 c= c==> c= * f2 f0 * f2 f1 c\/ * f2 f1 c~ * f2 f0 c\/ * f2 f1 c~ * f2 f0
- |- ((!x'. ((x = u1) \/ (~ (x' = v)))) = ((x = u1) \/ (!x. (~ (x = v)))))
T c= ! c\/ c= f0 f1 c~ c= b0 f2 c\/ c= f0 f1 ! c~ c= b0 f2
- (~ (u1 = u1)) |- ((~ (u1 = u1)) /\ (u1 = u1))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- |- ((~ (_3021423 = _3021424)) \/ ((V _3021424) \/ (~ (V _3021423))))
T c\/ c~ c= f0 f1 c\/ * f2 f1 c~ * f2 f0
- (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))), (~ F), ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((~ F) /\ F)
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> c~ cF c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f2 c~ c= b1 b0 ! ! c\/ c~ c= b1 f2 c= b1 b0 c/\ c~ cF cF
- (~ F), (((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x))) /\ (~ (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ c/\ c= f0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 c% f0 f2 c~ c= f1 c% creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ c~ cF cF
- |- ((!x''. ((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x''))) = ((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (!x'. (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))))
T c= ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 ! caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0
- |- (((!u1. (!v. ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F))) ==> ((\u1. (!v. ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F))) u1)) = ((\u1. (!v. ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F))) u1))
T c= c==> ! ! c==> c~ c\/ ! c~ c/\ c= b2 b0 c\/ c= b2 b1 c= b2 f0 c\/ c= b0 b1 c= b0 f0 cF * / ! c==> c~ c\/ ! c~ c/\ c= b2 b0 c\/ c= b2 b1 c= b2 f0 c\/ c= b0 b1 c= b0 f0 cF f1 * / ! c==> c~ c\/ ! c~ c/\ c= b2 b0 c\/ c= b2 b1 c= b2 f0 c\/ c= b0 b1 c= b0 f0 cF f1
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (~ (V u1)), ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f1 c~ c= b1 b0 ! ! c\/ c~ c= b1 f1 c= b1 b0 c==> c~ cF cF
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!v. ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)) ==> ((\v. ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)) v)) = ((\v. ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)) v))
T c= c==> ! c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 cF * / c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 cF f3 * / c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 cF f3
- |- ((!x''. ((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'')) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) = ((!x'. (~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))) \/ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')))
T c= ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c\/ ! c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
- |- ((?x'. (((x' = u1) \/ (x' = v)) /\ ((~ (x = u1)) \/ (~ (x = v))))) = ((?x. ((x = u1) \/ (x = v))) /\ ((~ (x = u1)) \/ (~ (x = v)))))
T c= c? / c/\ c\/ c= b0 f0 c= b0 f1 c\/ c~ c= f2 f0 c~ c= f2 f1 c/\ c? / c\/ c= b0 f0 c= b0 f1 c\/ c~ c= f2 f0 c~ c= f2 f1
- ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F), (((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) ==> ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)) |- ((((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) ==> ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)) /\ ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F))
T c==> c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c==> c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c/\ c==> c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- (fan2 (x , (V , E))) |- ((fan2 (x , (V , E))) = T)
T c==> cfan2 c, f0 c, f1 f2 c= cfan2 c, f0 c, f1 f2 cT
- |- (((((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) ==> ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)) ==> (((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) ==> ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F))) = (((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) ==> ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)))
T c= c==> c==> c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (!v. ((~ (V v)) \/ ((((x v) = u1) \/ ((x v) = v)) /\ ((~ ((x v) = u1)) \/ (~ ((x v) = v)))))), ((!v. (V v)) /\ ((!v. (!x. ((x = u1) \/ (~ (x = v))))) /\ (!v. (!x. ((~ (x = u1)) \/ (x = v)))))) |- ((~ F) ==> F)
T c==> ! c\/ c~ * f0 b0 c/\ c\/ c= * f1 b0 f2 c= * f1 b0 b0 c\/ c~ c= * f1 b0 f2 c~ c= * f1 b0 b0 c==> c/\ ! * f0 b0 c/\ ! ! c\/ c= b1 f2 c~ c= b1 b0 ! ! c\/ c~ c= b1 f2 c= b1 b0 c==> c~ cF cF
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F) ==> ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F)) ==> (((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F) ==> ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F))) = (((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F) ==> ((~ (?v. (((V v) /\ (!x. ((x = u1) = (x = v)))) = (V u1)))) ==> F)))
T c= c==> c==> c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF c==> c~ c? / c= c/\ * f0 b0 ! c= c= b1 f1 c= b1 b0 * f0 f1 cF
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')), (((~ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) /\ (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x')) |- ((~ F) ==> F)
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c~ cF cF
- ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) |- (((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F) /\ ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F))
T c==> c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c/\ c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF c==> c~ c\/ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= f0 f1 c= f0 f2 cF
- (x = v), (((x = u1) /\ ((x = v) \/ (x = u))) /\ ((~ (u1 = v)) /\ (~ (u1 = u)))) |- ((~ (u1 = u)) = (~ (u1 = u)))
T c==> c= f0 f1 c==> c/\ c/\ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f2 f1 c~ c= f2 f3 c= c~ c= f2 f3 c~ c= f2 f3
- |- (((!x. (!u. (!v. ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)))) ==> ((\x. (!u. (!v. ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)))) x)) = ((\x. (!u. (!v. ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)))) x))
T c= c==> ! ! ! c==> c~ c==> ! c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 ! c= c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 cF * / ! ! c==> c~ c==> ! c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 ! c= c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 cF f1 * / ! ! c==> c~ c==> ! c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 ! c= c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b3 cF f1
- |- (((((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)) ==> (((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F))) = (((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F) ==> ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F)))
T c= c==> c==> c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 cF
- (FINITE (((set_of_edge v) V) E)) |- ((FINITE (((set_of_edge v) V) E)) = T)
T c==> cFINITE * * * part cset_of_edge f0 f1 f2 c= cFINITE * * * part cset_of_edge f0 f1 f2 cT
- ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F), (((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) ==> ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)) |- (((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F) /\ ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F))
T c==> c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c==> c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c/\ c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> c~ ! c= c? / c/\ c= b1 creal_of_num cNUMERAL cBIT1 c_0 c= b0 c% b1 f0 c= b0 c% creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- (((!u. (!v. ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F))) ==> ((\u. (!v. ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F))) u)) = ((\u. (!v. ((~ ((!x'. ((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x'))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u1 INSERT EMPTY)) x'))))) ==> F))) u))
T c= c==> ! ! c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 cF * / ! c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 cF f2 * / ! c==> c~ c==> ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c= c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 cF f2
- |- (((!x. ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)) ==> ((\x. ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)) x)) = ((\x. ((~ (!x'. ((?u. ((u = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((% u) x)))) = (x' = ((% (real_of_num (NUMERAL (BIT1 _0)))) x))))) ==> F)) x))
T c= c==> ! c==> c~ ! c= c? / c/\ c= b2 creal_of_num cNUMERAL cBIT1 c_0 c= b1 c% b2 b0 c= b1 c% creal_of_num cNUMERAL cBIT1 c_0 b0 cF * / c==> c~ ! c= c? / c/\ c= b2 creal_of_num cNUMERAL cBIT1 c_0 c= b1 c% b2 b0 c= b1 c% creal_of_num cNUMERAL cBIT1 c_0 b0 cF f0 * / c==> c~ ! c= c? / c/\ c= b2 creal_of_num cNUMERAL cBIT1 c_0 c= b1 c% b2 b0 c= b1 c% creal_of_num cNUMERAL cBIT1 c_0 b0 cF f0
- |- ((?x. ((P x) /\ Q)) = ((?x. (P x)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((\u. (!u1. (!v. ((~ ((!x. (~ ((x = u1) /\ ((x = v) \/ (x = u))))) \/ ((u1 = v) \/ (u1 = u)))) ==> F)))) u)
T * / ! ! c==> c~ c\/ ! c~ c/\ c= b3 b1 c\/ c= b3 b2 c= b3 b0 c\/ c= b1 b2 c= b1 b0 cF f0
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
