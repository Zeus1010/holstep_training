N Collect_geom2.COLLINEAR3_IMP_COPLANAR
C |- (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY))))))))))
T c==> ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D SUM_EQ_0_NUMSEG
A |- (!f. (!m. (!n. ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0)))))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vec
A |- (!n. ((vec n) = (lambdai. (real_of_num n))))
T c= cvec f0 clambda / creal_of_num f0
D dot
A |- (!x. (!y. (((dot x) y) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (y $ i)))))))
T c= cdot f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0
D NORM_EQ_0
A |- (!x. (((vector_norm x) = (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0)))))
T c= c= cvector_norm f0 creal_of_num cNUMERAL c_0 c= f0 cvec cNUMERAL c_0
D Collect_geom.COPLANAR_DET_VEC3_EQ_0
A |- (!v0. (!v1. (!v2. (!v3. ((coplanar_alt (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((((det_vec3 ((vector_sub v1) v0)) ((vector_sub v2) v0)) ((vector_sub v3) v0)) = (real_of_num (NUMERAL _0))))))))
T c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cdet_vec3 cvector_sub f1 f0 cvector_sub f2 f0 cvector_sub f3 f0 creal_of_num cNUMERAL c_0
D Collect_geom2.RELATE_POW2
A |- (((a = (real_of_num (NUMERAL _0))) = (((real_pow a) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) = (((real_lt (real_of_num (NUMERAL _0))) a) \/ (~ ((real_le (real_of_num (NUMERAL _0))) a)))))
T c/\ c= c= f0 creal_of_num cNUMERAL c_0 c= creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_lt creal_of_num cNUMERAL c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ creal_lt creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 f0
D Collect_geom2.DET_VEC3_AS_CROSS_DOT
A |- ((((det_vec3 v1) v2) v3) = ((dot ((cross v1) v2)) v3))
T c= cdet_vec3 f0 f1 f2 cdot ccross f0 f1 f2
D Collect_geom2.COL_EQ_NORM_CROSS
A |- (!v1. (!v2. (!v3. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) = (((real_pow (vector_norm ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))))))
T c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= creal_pow cvector_norm ccross cvector_sub f1 f0 cvector_sub f2 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((((real_lt (real_of_num (NUMERAL _0))) a) \/ (~ ((real_le (real_of_num (NUMERAL _0))) a))) = ((real_lt (real_of_num (NUMERAL _0))) ((real_pow a) (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_lt (real_of_num (NUMERAL _0))) ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) = (((real_lt (real_of_num (NUMERAL _0))) a) \/ (~ ((real_le (real_of_num (NUMERAL _0))) a))))
T c==> c= c\/ creal_lt creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 c= creal_lt creal_of_num cNUMERAL c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 c\/ creal_lt creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 f0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul ((lambdai. (real_of_num (NUMERAL _0))) $ i)) (x $ i)) = (real_of_num (NUMERAL _0)))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul ((vec (NUMERAL _0)) $ i)) (x $ i)) = (real_of_num (NUMERAL _0)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ clambda / creal_of_num cNUMERAL c_0 f0 c$ f1 f0 creal_of_num cNUMERAL c_0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ cvec cNUMERAL c_0 f0 c$ f1 f0 creal_of_num cNUMERAL c_0
- (~ (((real_mul (real_of_num (NUMERAL _0))) (x $ i)) = (real_of_num (NUMERAL _0)))) |- ((~ (((real_mul (real_of_num (NUMERAL _0))) (x $ i)) = (real_of_num (NUMERAL _0)))) /\ F)
T c==> c~ c= creal_mul creal_of_num cNUMERAL c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_mul creal_of_num cNUMERAL c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 cF
+ |- ((\p'. (!q'. (((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) = p') ==> ((p' ==> ((((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0))) = q')) ==> (((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) ==> (((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0)))) = (p' ==> q')))))) p')
T * / ! c==> c= c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 b0 c==> c==> b0 c= c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0 b1 c= c==> c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0 c==> b0 b1 f4
+ |- (((!x. (((vector_norm x) = (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0))))) ==> ((\x. (((vector_norm x) = (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0))))) x)) = ((\x. (((vector_norm x) = (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0))))) x))
T c= c==> ! c= c= cvector_norm b0 creal_of_num cNUMERAL c_0 c= b0 cvec cNUMERAL c_0 * / c= c= cvector_norm b0 creal_of_num cNUMERAL c_0 c= b0 cvec cNUMERAL c_0 f0 * / c= c= cvector_norm b0 creal_of_num cNUMERAL c_0 c= b0 cvec cNUMERAL c_0 f0
- |- ((real_neg ((real_sub ((real_mul (real_of_num (NUMERAL _0))) (x $ i))) (real_of_num (NUMERAL _0)))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul creal_of_num cNUMERAL c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) a) \/ (~ ((real_le (real_of_num (NUMERAL _0))) a))) = ((real_lt (real_of_num (NUMERAL _0))) ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))))
T c= c\/ creal_lt creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_mul (real_of_num (NUMERAL _0))) (x $ i)) = (real_of_num (NUMERAL _0))) = (((real_mul ((lambdai. (real_of_num (NUMERAL _0))) $ i)) (x $ i)) = (real_of_num (NUMERAL _0))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_mul creal_of_num cNUMERAL c_0 c$ f1 f0 creal_of_num cNUMERAL c_0 c= creal_mul c$ clambda / creal_of_num cNUMERAL c_0 f0 c$ f1 f0 creal_of_num cNUMERAL c_0
+ |- ((\v3. ((coplanar_alt (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((((det_vec3 ((vector_sub v1) v0)) ((vector_sub v2) v0)) ((vector_sub v3) v0)) = (real_of_num (NUMERAL _0))))) v3)
T * / c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= cdet_vec3 cvector_sub f1 f0 cvector_sub f2 f0 cvector_sub b0 f0 creal_of_num cNUMERAL c_0 f3
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((dot (vec (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))
T c= cdot cvec cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
+ |- ((\x. (((vector_norm x) = (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0))))) x)
T * / c= c= cvector_norm b0 creal_of_num cNUMERAL c_0 c= b0 cvec cNUMERAL c_0 f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
+ |- (((((real_pow a) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0))) = (a = (real_of_num (NUMERAL _0)))) /\ ((((real_lt (real_of_num (NUMERAL _0))) a) \/ (~ ((real_le (real_of_num (NUMERAL _0))) a))) = ((real_lt (real_of_num (NUMERAL _0))) ((real_pow a) (NUMERAL (BIT0 (BIT1 _0)))))))
T c/\ c= c= creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= f0 creal_of_num cNUMERAL c_0 c= c\/ creal_lt creal_of_num cNUMERAL c_0 f0 c~ creal_le creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!v. t) = t)
T c= ! f0 f0
+ |- (((!v3. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) = (((real_pow (vector_norm ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0))))) ==> ((\v3. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) = (((real_pow (vector_norm ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0))))) v3)) = ((\v3. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) = (((real_pow (vector_norm ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0))))) v3))
T c= c==> ! c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= creal_pow cvector_norm ccross cvector_sub f1 f0 cvector_sub b0 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= creal_pow cvector_norm ccross cvector_sub f1 f0 cvector_sub b0 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 f2 * / c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= creal_pow cvector_norm ccross cvector_sub f1 f0 cvector_sub b0 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 f2
+ |- ((!v2. (!v3. (!v. ((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) ==> (((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0))))))) = T)
T c= ! ! ! c==> c= ccross cvector_sub b0 f0 cvector_sub b1 f0 cvec cNUMERAL c_0 c= cdot ccross cvector_sub b0 f0 cvector_sub b1 f0 cvector_sub b2 f0 creal_of_num cNUMERAL c_0 cT
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((!p'. (!q'. (((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) = p') ==> ((p' ==> ((((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0))) = q')) ==> (((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) ==> (((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) = p') ==> ((p' ==> ((((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0))) = q')) ==> (((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) ==> (((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) = p') ==> ((p' ==> ((((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0))) = q')) ==> (((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) ==> (((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 b0 c==> c==> b0 c= c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0 b1 c= c==> c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0 c==> b0 b1 * / ! c==> c= c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 b0 c==> c==> b0 c= c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0 b1 c= c==> c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0 c==> b0 b1 f4 * / ! c==> c= c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 b0 c==> c==> b0 c= c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0 b1 c= c==> c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0 c==> b0 b1 f4
+ |- (((!v1. (!v2. (!v3. ((coplanar_alt (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((((det_vec3 ((vector_sub v1) v0)) ((vector_sub v2) v0)) ((vector_sub v3) v0)) = (real_of_num (NUMERAL _0))))))) ==> ((\v1. (!v2. (!v3. ((coplanar_alt (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((((det_vec3 ((vector_sub v1) v0)) ((vector_sub v2) v0)) ((vector_sub v3) v0)) = (real_of_num (NUMERAL _0))))))) v1)) = ((\v1. (!v2. (!v3. ((coplanar_alt (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((((det_vec3 ((vector_sub v1) v0)) ((vector_sub v2) v0)) ((vector_sub v3) v0)) = (real_of_num (NUMERAL _0))))))) v1))
T c= c==> ! ! ! c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cdet_vec3 cvector_sub b0 f0 cvector_sub b1 f0 cvector_sub b2 f0 creal_of_num cNUMERAL c_0 * / ! ! c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cdet_vec3 cvector_sub b0 f0 cvector_sub b1 f0 cvector_sub b2 f0 creal_of_num cNUMERAL c_0 f1 * / ! ! c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cdet_vec3 cvector_sub b0 f0 cvector_sub b1 f0 cvector_sub b2 f0 creal_of_num cNUMERAL c_0 f1
+ |- ((\v2. (!v3. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) = (((real_pow (vector_norm ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))))) v2)
T * / ! c= ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= creal_pow cvector_norm ccross cvector_sub b0 f0 cvector_sub b1 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 f1
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul ((lambdai. (real_of_num (NUMERAL _0))) $ i)) (x $ i)) = (real_of_num (NUMERAL _0))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ clambda / creal_of_num cNUMERAL c_0 f0 c$ f1 f0 creal_of_num cNUMERAL c_0
+ |- ((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) ==> ((((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0))) = T))
T c==> c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 c= c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0 cT
+ |- ((!v1. (!v2. (!v3. (!v. ((((real_pow (vector_norm ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0))) ==> (((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0)))))))) = (!v1. (!v2. (!v3. (!v. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) ==> (coplanar_alt (v1 INSERT (v2 INSERT (v3 INSERT (v INSERT EMPTY)))))))))))
T c= ! ! ! ! c==> c= creal_pow cvector_norm ccross cvector_sub b1 b0 cvector_sub b2 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cdot ccross cvector_sub b1 b0 cvector_sub b2 b0 cvector_sub b3 b0 creal_of_num cNUMERAL c_0 ! ! ! ! c==> ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar_alt * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
+ |- ((\q'. (((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) = p') ==> ((p' ==> ((((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0))) = q')) ==> (((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) ==> (((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0)))) = (p' ==> q'))))) q')
T * / c==> c= c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 f3 c==> c==> f3 c= c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f4 f1 creal_of_num cNUMERAL c_0 b0 c= c==> c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f4 f1 creal_of_num cNUMERAL c_0 c==> f3 b0 f5
+ |- ((\v2. (!v3. ((coplanar_alt (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((((det_vec3 ((vector_sub v1) v0)) ((vector_sub v2) v0)) ((vector_sub v3) v0)) = (real_of_num (NUMERAL _0)))))) v2)
T * / ! c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cdet_vec3 cvector_sub f1 f0 cvector_sub b0 f0 cvector_sub b1 f0 creal_of_num cNUMERAL c_0 f2
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul ((vec (NUMERAL _0)) $ i)) (x $ i)))) = (real_of_num (NUMERAL _0))) = (((dot (vec (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))))
T c= c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ cvec cNUMERAL c_0 b0 c$ f0 b0 creal_of_num cNUMERAL c_0 c= cdot cvec cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
+ |- (((!v2. (!v3. ((coplanar_alt (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((((det_vec3 ((vector_sub v1) v0)) ((vector_sub v2) v0)) ((vector_sub v3) v0)) = (real_of_num (NUMERAL _0)))))) ==> ((\v2. (!v3. ((coplanar_alt (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((((det_vec3 ((vector_sub v1) v0)) ((vector_sub v2) v0)) ((vector_sub v3) v0)) = (real_of_num (NUMERAL _0)))))) v2)) = ((\v2. (!v3. ((coplanar_alt (v0 INSERT (v1 INSERT (v2 INSERT (v3 INSERT EMPTY))))) = ((((det_vec3 ((vector_sub v1) v0)) ((vector_sub v2) v0)) ((vector_sub v3) v0)) = (real_of_num (NUMERAL _0)))))) v2))
T c= c==> ! ! c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cdet_vec3 cvector_sub f1 f0 cvector_sub b0 f0 cvector_sub b1 f0 creal_of_num cNUMERAL c_0 * / ! c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cdet_vec3 cvector_sub f1 f0 cvector_sub b0 f0 cvector_sub b1 f0 creal_of_num cNUMERAL c_0 f2 * / ! c= ccoplanar_alt * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cdet_vec3 cvector_sub f1 f0 cvector_sub b0 f0 cvector_sub b1 f0 creal_of_num cNUMERAL c_0 f2
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((\i. ((real_mul ((vec (NUMERAL _0)) $ i)) (x $ i))) i) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= * / creal_mul c$ cvec cNUMERAL c_0 b0 c$ f1 b0 f0 creal_of_num cNUMERAL c_0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (!v1. (!v2. (!v3. (!v. ((((real_pow (vector_norm ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0))) ==> (((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0))))))))
T c==> c= creal_pow cvector_norm ccross cvector_sub f0 f1 cvector_sub f2 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0
+ |- ((((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) = (((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0)))) ==> (((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) ==> ((((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0))) = q')) ==> (((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) ==> (((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0)))) = ((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) ==> q')))) = (((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) ==> ((((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0))) = q')) ==> (((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) ==> (((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0)))) = ((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) ==> q'))))
T c= c==> c= c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 c==> c==> c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 c= c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0 f4 c= c==> c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0 c==> c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 f4 c==> c==> c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 c= c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0 f4 c= c==> c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0 c==> c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 f4
+ |- (((!v2. (!v3. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) = (((real_pow (vector_norm ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))))) ==> ((\v2. (!v3. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) = (((real_pow (vector_norm ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))))) v2)) = ((\v2. (!v3. ((collinear (v1 INSERT (v2 INSERT (v3 INSERT EMPTY)))) = (((real_pow (vector_norm ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))))) v2))
T c= c==> ! ! c= ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= creal_pow cvector_norm ccross cvector_sub b0 f0 cvector_sub b1 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 * / ! c= ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= creal_pow cvector_norm ccross cvector_sub b0 f0 cvector_sub b1 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 * / ! c= ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= creal_pow cvector_norm ccross cvector_sub b0 f0 cvector_sub b1 f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 f1
+ |- ((!v1. (!v2. (!v3. (!v. ((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) ==> (((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0)))))))) = (!v1. (!v2. (!v3. (!v. ((((real_pow (vector_norm ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)))) (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0))) ==> (((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0)))))))))
T c= ! ! ! ! c==> c= ccross cvector_sub b1 b0 cvector_sub b2 b0 cvec cNUMERAL c_0 c= cdot ccross cvector_sub b1 b0 cvector_sub b2 b0 cvector_sub b3 b0 creal_of_num cNUMERAL c_0 ! ! ! ! c==> c= creal_pow cvector_norm ccross cvector_sub b1 b0 cvector_sub b2 b0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= cdot ccross cvector_sub b1 b0 cvector_sub b2 b0 cvector_sub b3 b0 creal_of_num cNUMERAL c_0
+ |- (((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) = p') ==> ((p' ==> ((((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0))) = q')) ==> (((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) ==> (((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0)))) = (p' ==> q'))))
T c==> c= c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 f3 c==> c==> f3 c= c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f4 f1 creal_of_num cNUMERAL c_0 f5 c= c==> c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f4 f1 creal_of_num cNUMERAL c_0 c==> f3 f5
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- ((((~ (((real_mul (real_of_num (NUMERAL _0))) (x $ i)) = (real_of_num (NUMERAL _0)))) ==> F) ==> (((real_mul (real_of_num (NUMERAL _0))) (x $ i)) = (real_of_num (NUMERAL _0)))) = (((real_mul (real_of_num (NUMERAL _0))) (x $ i)) = (real_of_num (NUMERAL _0))))
T c= c==> c==> c~ c= creal_mul creal_of_num cNUMERAL c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 cF c= creal_mul creal_of_num cNUMERAL c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL c_0 c$ f0 f1 creal_of_num cNUMERAL c_0
- |- (((real_gt x) y) = ((real_lt y) x))
T c= creal_gt f0 f1 creal_lt f1 f0
- |- (T = ((((cross ((vector_sub v2) v1)) ((vector_sub v3) v1)) = (vec (NUMERAL _0))) ==> (((dot ((cross ((vector_sub v2) v1)) ((vector_sub v3) v1))) ((vector_sub v) v1)) = (real_of_num (NUMERAL _0)))))
T c= cT c==> c= ccross cvector_sub f0 f1 cvector_sub f2 f1 cvec cNUMERAL c_0 c= cdot ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f3 f1 creal_of_num cNUMERAL c_0
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- (~ (((real_mul (real_of_num (NUMERAL _0))) (x $ i)) = (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_mul creal_of_num cNUMERAL c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((~ (((real_mul (real_of_num (NUMERAL _0))) (x $ i)) = (real_of_num (NUMERAL _0)))) ==> F)
T c==> c~ c= creal_mul creal_of_num cNUMERAL c_0 c$ f0 f1 creal_of_num cNUMERAL c_0 cF
- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) |- F
T c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
