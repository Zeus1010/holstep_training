N HAS_SIZE_2_EXISTS
C |- (!s. ((s HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))) = (?x. (?y. ((~ (x = y)) /\ (!z. ((z IN s) = ((z = x) \/ (z = y)))))))))
T c= cHAS_SIZE f0 cNUMERAL cBIT0 cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 ! c= cIN b2 f0 c\/ c= b2 b0 c= b2 b1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D LEFT_OR_FORALL_THM
A |- (!P. (!Q. (((!x. (P x)) \/ Q) = (!x. ((P x) \/ Q)))))
T c= c\/ ! * f0 b0 f1 ! c\/ * f0 b0 f1
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D HAS_SIZE_CLAUSES
A |- (((s HAS_SIZE (NUMERAL _0)) = (s = EMPTY)) /\ ((s HAS_SIZE (SUC n)) = (?a. (?t. ((t HAS_SIZE n) /\ ((~ (a IN t)) /\ (s = (a INSERT t))))))))
T c/\ c= cHAS_SIZE f0 cNUMERAL c_0 c= f0 part cEMPTY c= cHAS_SIZE f0 cSUC f1 c? / c? / c/\ cHAS_SIZE b1 f1 c/\ c~ cIN b0 b1 c= f0 * * part cINSERT b0 b1
+ |- (((~ (a IN (b INSERT EMPTY))) /\ P) = ((~ (a = b)) /\ P))
T c= c/\ c~ cIN f0 * * part cINSERT f1 part cEMPTY f2 c/\ c~ c= f0 f1 f2
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ |- ((?t. ((t HAS_SIZE (SUC (NUMERAL _0))) /\ ((~ (a IN t)) /\ (s = (a INSERT t))))) = (?a'. (?t. ((t HAS_SIZE (NUMERAL _0)) /\ ((~ (a' IN t)) /\ ((~ (a IN (a' INSERT t))) /\ (s = (a INSERT (a' INSERT t)))))))))
T c= c? / c/\ cHAS_SIZE b0 cSUC cNUMERAL c_0 c/\ c~ cIN f0 b0 c= f1 * * part cINSERT f0 b0 c? / c? / c/\ cHAS_SIZE b1 cNUMERAL c_0 c/\ c~ cIN b0 b1 c/\ c~ cIN f0 * * part cINSERT b0 b1 c= f1 * * part cINSERT f0 * * part cINSERT b0 b1
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- ((?t. ((t HAS_SIZE (NUMERAL _0)) /\ (P t))) = (P EMPTY))
T c= c? / c/\ cHAS_SIZE b0 cNUMERAL c_0 * f0 b0 * f0 part cEMPTY
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- (((~ (a IN EMPTY)) /\ P) = P)
T c= c/\ c~ cIN f0 part cEMPTY f1 f1
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((!z. t) = t)
T c= ! f0 f0
- |- ((?y. t) = t)
T c= c? / f0 f0
+ |- (T = ((?a. (?a'. ((~ (a = a')) /\ (s = (a INSERT (a' INSERT EMPTY)))))) = (?x. (?y. ((~ (x = y)) /\ (!z. ((z IN s) = ((z = x) \/ (z = y)))))))))
T c= cT c= c? / c? / c/\ c~ c= b0 b1 c= f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / c? / c/\ c~ c= b0 b1 ! c= cIN b2 f0 c\/ c= b2 b0 c= b2 b1
+ |- (((?a. (?a'. ((~ (a = a')) /\ (!x. ((x IN s) = ((x = a) \/ (x = a'))))))) = (?x. (?y. ((~ (x = y)) /\ (!z. ((z IN s) = ((z = x) \/ (z = y)))))))) = T)
T c= c= c? / c? / c/\ c~ c= b0 b1 ! c= cIN b2 f0 c\/ c= b2 b0 c= b2 b1 c? / c? / c/\ c~ c= b0 b1 ! c= cIN b2 f0 c\/ c= b2 b0 c= b2 b1 cT
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- (((!x. (~ (x IN EMPTY))) ==> ((\x. (~ (x IN EMPTY))) x)) = ((\x. (~ (x IN EMPTY))) x))
T c= c==> ! c~ cIN b0 part cEMPTY * / c~ cIN b0 part cEMPTY f0 * / c~ cIN b0 part cEMPTY f0
- |- ((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0)))
T c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- (((?a. (?a'. ((~ (a = a')) /\ (s = (a INSERT (a' INSERT EMPTY)))))) = (?x. (?y. ((~ (x = y)) /\ (!z. ((z IN s) = ((z = x) \/ (z = y)))))))) = ((s HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))) = (?x. (?y. ((~ (x = y)) /\ (!z. ((z IN s) = ((z = x) \/ (z = y)))))))))
T c= c= c? / c? / c/\ c~ c= b0 b1 c= f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / c? / c/\ c~ c= b0 b1 ! c= cIN b2 f0 c\/ c= b2 b0 c= b2 b1 c= cHAS_SIZE f0 cNUMERAL cBIT0 cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 ! c= cIN b2 f0 c\/ c= b2 b0 c= b2 b1
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (((~ (x IN EMPTY)) ==> ((x IN EMPTY) = F)) = ((x IN EMPTY) = F))
T c= c==> c~ cIN f0 part cEMPTY c= cIN f0 part cEMPTY cF c= cIN f0 part cEMPTY cF
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (((s HAS_SIZE (NUMERAL (BIT0 (BIT1 _0)))) = (?x. (?y. ((~ (x = y)) /\ (!z. ((z IN s) = ((z = x) \/ (z = y)))))))) = T)
T c= c= cHAS_SIZE f0 cNUMERAL cBIT0 cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 ! c= cIN b2 f0 c\/ c= b2 b0 c= b2 b1 cT
+ |- ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)
T * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
+ |- ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s)
T * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
