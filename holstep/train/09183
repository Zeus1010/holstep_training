N Rxokskc.SYM_LIST_DART
C |- (((z1 = ((node_map H) ((face_map H) z))) /\ (is_restricted H)) ==> ((((node H) z1) , ((node H) ((face_map H) z1))) = (((node H) ((face_map H) z)) , ((node H) z))))
T c==> c/\ c= f0 cnode_map f1 cface_map f1 f2 cis_restricted f1 c= c, * * part cnode f1 f0 * * part cnode f1 cface_map f1 f0 c, * * part cnode f1 cface_map f1 f2 * * part cnode f1 f2
D PAIR_EQ
A |- (!x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))))
T c= c= c, f0 f1 c, f2 f3 c/\ c= f0 f2 c= f1 f3
D Hypermap.is_restricted
A |- (!H. ((is_restricted H) = ((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))))))))))
T c= cis_restricted f0 c/\ c~ c= * part cdart f0 part cEMPTY c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0
D Hypermap.square_edge_convolution
A |- (!H. ((plain_hypermap H) ==> (!x. (((node_map H) ((face_map H) ((node_map H) ((face_map H) x)))) = x))))
T c==> cplain_hypermap f0 ! c= cnode_map f0 cface_map f0 cnode_map f0 cface_map f0 b0 b0
D Auqtzyz.node_node_map_eq
A |- (((node H) ((node_map H) d)) = ((node H) d))
T c= * * part cnode f0 cnode_map f0 f1 * * part cnode f0 f1
+ (plain_hypermap H) |- ((plain_hypermap H) = T)
T c==> cplain_hypermap f0 c= cplain_hypermap f0 cT
+ |- (((!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) ==> ((\y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) y)) = ((\y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))) y))
T c= c==> ! ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1 * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1
+ |- ((!x. (((node_map H) ((face_map H) ((node_map H) ((face_map H) x)))) = x)) ==> (((node H) ((node_map H) ((face_map H) ((node_map H) ((face_map H) z))))) = ((node H) z)))
T c==> ! c= cnode_map f0 cface_map f0 cnode_map f0 cface_map f0 b0 b0 c= * * part cnode f0 cnode_map f0 cface_map f0 cnode_map f0 cface_map f0 f1 * * part cnode f0 f1
+ (!x. (((node_map H) ((face_map H) ((node_map H) ((face_map H) x)))) = x)) |- ((\x. (((node_map H) ((face_map H) ((node_map H) ((face_map H) x)))) = x)) x)
T c==> ! c= cnode_map f0 cface_map f0 cnode_map f0 cface_map f0 b0 b0 * / c= cnode_map f0 cface_map f0 cnode_map f0 cface_map f0 b0 b0 f1
+ (plain_hypermap H) |- (((!x. (((node_map H) ((face_map H) ((node_map H) ((face_map H) x)))) = x)) ==> (((node H) ((node_map H) ((face_map H) ((node_map H) ((face_map H) z))))) = ((node H) z))) = (((plain_hypermap H) ==> (!x. (((node_map H) ((face_map H) ((node_map H) ((face_map H) x)))) = x))) ==> (((node H) ((node_map H) ((face_map H) ((node_map H) ((face_map H) z))))) = ((node H) z))))
T c==> cplain_hypermap f0 c= c==> ! c= cnode_map f0 cface_map f0 cnode_map f0 cface_map f0 b0 b0 c= * * part cnode f0 cnode_map f0 cface_map f0 cnode_map f0 cface_map f0 f1 * * part cnode f0 f1 c==> c==> cplain_hypermap f0 ! c= cnode_map f0 cface_map f0 cnode_map f0 cface_map f0 b0 b0 c= * * part cnode f0 cnode_map f0 cface_map f0 cnode_map f0 cface_map f0 f1 * * part cnode f0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!x. (((node_map H) ((face_map H) ((node_map H) ((face_map H) x)))) = x)) |- (((node_map H) ((face_map H) ((node_map H) ((face_map H) x)))) = x)
T c==> ! c= cnode_map f0 cface_map f0 cnode_map f0 cface_map f0 b0 b0 c= cnode_map f0 cface_map f0 cnode_map f0 cface_map f0 f1 f1
+ |- (((!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) ==> ((\a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) a)) = ((\a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) a))
T c= c==> ! ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2 * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!x. t) = t)
T c= ! f0 f0
+ (plain_hypermap H) |- ((((node H) ((node_map H) ((face_map H) ((node_map H) ((face_map H) z))))) = ((node H) ((face_map H) ((node_map H) ((face_map H) z))))) ==> (((node H) ((face_map H) ((node_map H) ((face_map H) z)))) = ((node H) z)))
T c==> cplain_hypermap f0 c==> c= * * part cnode f0 cnode_map f0 cface_map f0 cnode_map f0 cface_map f0 f1 * * part cnode f0 cface_map f0 cnode_map f0 cface_map f0 f1 c= * * part cnode f0 cface_map f0 cnode_map f0 cface_map f0 f1 * * part cnode f0 f1
+ |- (((((node H) ((node_map H) ((face_map H) ((node_map H) ((face_map H) z))))) = ((node H) ((face_map H) ((node_map H) ((face_map H) z))))) ==> (((node H) ((face_map H) ((node_map H) ((face_map H) z)))) = ((node H) z))) = (((node H) ((face_map H) ((node_map H) ((face_map H) z)))) = ((node H) z)))
T c= c==> c= * * part cnode f0 cnode_map f0 cface_map f0 cnode_map f0 cface_map f0 f1 * * part cnode f0 cface_map f0 cnode_map f0 cface_map f0 f1 c= * * part cnode f0 cface_map f0 cnode_map f0 cface_map f0 f1 * * part cnode f0 f1 c= * * part cnode f0 cface_map f0 cnode_map f0 cface_map f0 f1 * * part cnode f0 f1
+ |- (((!H. (!d. (((node H) ((node_map H) d)) = ((node H) d)))) ==> ((\H. (!d. (((node H) ((node_map H) d)) = ((node H) d)))) H)) = ((\H. (!d. (((node H) ((node_map H) d)) = ((node H) d)))) H))
T c= c==> ! ! c= * * part cnode b0 cnode_map b0 b1 * * part cnode b0 b1 * / ! c= * * part cnode b0 cnode_map b0 b1 * * part cnode b0 b1 f0 * / ! c= * * part cnode b0 cnode_map b0 b1 * * part cnode b0 b1 f0
- (connected_hypermap H) |- ((connected_hypermap H) = T)
T c==> cconnected_hypermap f0 c= cconnected_hypermap f0 cT
+ |- (((!x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))))) ==> ((\x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))))) x)) = ((\x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))))) x))
T c= c==> ! ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 * / ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 f0 * / ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 f0
+ |- ((\d. (((node H) ((node_map H) d)) = ((node H) d))) ((face_map H) ((node_map H) ((face_map H) z))))
T * / c= * * part cnode f0 cnode_map f0 b0 * * part cnode f0 b0 cface_map f0 cnode_map f0 cface_map f0 f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- (EMPTY = (dart H)) |- ((dart H) = EMPTY)
T c==> c= part cEMPTY * part cdart f0 c= * part cdart f0 part cEMPTY
- (planar_hypermap H) |- ((planar_hypermap H) = T)
T c==> cplanar_hypermap f0 c= cplanar_hypermap f0 cT
+ |- (((!H. ((plain_hypermap H) ==> (!x. (((node_map H) ((face_map H) ((node_map H) ((face_map H) x)))) = x)))) ==> ((\H. ((plain_hypermap H) ==> (!x. (((node_map H) ((face_map H) ((node_map H) ((face_map H) x)))) = x)))) H)) = ((\H. ((plain_hypermap H) ==> (!x. (((node_map H) ((face_map H) ((node_map H) ((face_map H) x)))) = x)))) H))
T c= c==> ! c==> cplain_hypermap b0 ! c= cnode_map b0 cface_map b0 cnode_map b0 cface_map b0 b1 b1 * / c==> cplain_hypermap b0 ! c= cnode_map b0 cface_map b0 cnode_map b0 cface_map b0 b1 b1 f0 * / c==> cplain_hypermap b0 ! c= cnode_map b0 cface_map b0 cnode_map b0 cface_map b0 b1 b1 f0
+ |- ((\H. ((is_restricted H) = ((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))))))))))))) H)
T * / c= cis_restricted b0 c/\ c~ c= * part cdart b0 part cEMPTY c/\ cplanar_hypermap b0 c/\ cplain_hypermap b0 c/\ cconnected_hypermap b0 c/\ csimple_hypermap b0 c/\ cis_no_double_joins b0 c/\ cis_edge_nondegenerate b0 c/\ cis_node_nondegenerate b0 ! c==> cIN b1 * part cdart b0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface b0 b1 f0
+ |- ((\H. (!d. (((node H) ((node_map H) d)) = ((node H) d)))) H)
T * / ! c= * * part cnode b0 cnode_map b0 b1 * * part cnode b0 b1 f0
+ (((node H) ((node_map H) ((face_map H) ((node_map H) ((face_map H) z))))) = ((node H) ((face_map H) ((node_map H) ((face_map H) z))))) |- (((node H) ((face_map H) ((node_map H) ((face_map H) z)))) = ((node H) ((node_map H) ((face_map H) ((node_map H) ((face_map H) z))))))
T c==> c= * * part cnode f0 cnode_map f0 cface_map f0 cnode_map f0 cface_map f0 f1 * * part cnode f0 cface_map f0 cnode_map f0 cface_map f0 f1 c= * * part cnode f0 cface_map f0 cnode_map f0 cface_map f0 f1 * * part cnode f0 cnode_map f0 cface_map f0 cnode_map f0 cface_map f0 f1
+ (z1 = ((node_map H) ((face_map H) z))) |- (((((node H) ((node_map H) ((face_map H) z))) , ((node H) ((face_map H) ((node_map H) ((face_map H) z))))) = (((node H) ((face_map H) z)) , ((node H) z))) = ((((node H) z1) , ((node H) ((face_map H) z1))) = (((node H) ((face_map H) z)) , ((node H) z))))
T c==> c= f0 cnode_map f1 cface_map f1 f2 c= c= c, * * part cnode f1 cnode_map f1 cface_map f1 f2 * * part cnode f1 cface_map f1 cnode_map f1 cface_map f1 f2 c, * * part cnode f1 cface_map f1 f2 * * part cnode f1 f2 c= c, * * part cnode f1 f0 * * part cnode f1 cface_map f1 f0 c, * * part cnode f1 cface_map f1 f2 * * part cnode f1 f2
+ |- ((\a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b))))) a)
T * / ! c= c= c, f0 f1 c, b0 b1 c/\ c= f0 b0 c= f1 b1 f2
+ (z1 = ((node_map H) ((face_map H) z))), ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))))))))) |- ((((node H) z1) , ((node H) ((face_map H) z1))) = (((node H) ((face_map H) z)) , ((node H) z)))
T c==> c= f0 cnode_map f1 cface_map f1 f2 c==> c/\ cplain_hypermap f1 c/\ cconnected_hypermap f1 c/\ csimple_hypermap f1 c/\ cis_no_double_joins f1 c/\ cis_edge_nondegenerate f1 c/\ cis_node_nondegenerate f1 ! c==> cIN b0 * part cdart f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f1 b0 c= c, * * part cnode f1 f0 * * part cnode f1 cface_map f1 f0 c, * * part cnode f1 cface_map f1 f2 * * part cnode f1 f2
- (~ ((dart H) = EMPTY)) |- (((dart H) = EMPTY) = F)
T c==> c~ c= * part cdart f0 part cEMPTY c= c= * part cdart f0 part cEMPTY cF
- (~ ((dart H) = EMPTY)) |- ((EMPTY = (dart H)) = F)
T c==> c~ c= * part cdart f0 part cEMPTY c= c= part cEMPTY * part cdart f0 cF
- (simple_hypermap H) |- ((simple_hypermap H) = T)
T c==> csimple_hypermap f0 c= csimple_hypermap f0 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))) |- (((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))) = T)
T c==> ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c= c==> cIN f1 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 f1 cT
- (is_edge_nondegenerate H) |- ((is_edge_nondegenerate H) = T)
T c==> cis_edge_nondegenerate f0 c= cis_edge_nondegenerate f0 cT
- (~ ((dart H) = EMPTY)) |- (((~ (EMPTY = (dart H))) ==> ((EMPTY = (dart H)) = F)) = ((EMPTY = (dart H)) = F))
T c==> c~ c= * part cdart f0 part cEMPTY c= c==> c~ c= part cEMPTY * part cdart f0 c= c= part cEMPTY * part cdart f0 cF c= c= part cEMPTY * part cdart f0 cF
- (is_node_nondegenerate H) |- ((is_node_nondegenerate H) = T)
T c==> cis_node_nondegenerate f0 c= cis_node_nondegenerate f0 cT
- (is_no_double_joins H) |- ((is_no_double_joins H) = T)
T c==> cis_no_double_joins f0 c= cis_no_double_joins f0 cT
- (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))) |- ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))
T c==> ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c==> cIN f1 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 f1
- (~ ((dart H) = EMPTY)) |- (~ (EMPTY = (dart H)))
T c==> c~ c= * part cdart f0 part cEMPTY c~ c= part cEMPTY * part cdart f0
- (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))) |- ((\x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))) x)
T c==> ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 * / c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 f1
- ((dart H) = EMPTY) |- (EMPTY = (dart H))
T c==> c= * part cdart f0 part cEMPTY c= part cEMPTY * part cdart f0
- (!x. (((node_map H) ((face_map H) ((node_map H) ((face_map H) x)))) = x)) |- (T = (((node H) ((node_map H) ((face_map H) ((node_map H) ((face_map H) z))))) = ((node H) z)))
T c==> ! c= cnode_map f0 cface_map f0 cnode_map f0 cface_map f0 b0 b0 c= cT c= * * part cnode f0 cnode_map f0 cface_map f0 cnode_map f0 cface_map f0 f1 * * part cnode f0 f1
