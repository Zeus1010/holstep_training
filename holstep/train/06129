N Hypermap.lemma_on_hyp_z
C |- (!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) ((((hyp'z H) NF) L) x)))) /\ ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x)))))))))
T c==> cis_split_condition f0 f1 f2 f3 c/\ c~ c= * * part cnode f0 chyp'y f0 f1 f2 f3 * * part cnode f0 chyp'z f0 f1 f2 f3 c< cSUC chyp'p f0 f1 f2 f3 cCARD * * part cface f0 f3
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D CONTRAPOS_THM
A |- (!t1. (!t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1))))
T c= c==> c~ f0 c~ f1 c==> f1 f0
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D FORALL_NOT_THM
A |- (!P. ((!x. (~ (P x))) = (~ (?x. (P x)))))
T c= ! c~ * f0 b0 c~ c? / * f0 b0
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D PRE
A |- (((PRE (NUMERAL _0)) = (NUMERAL _0)) /\ (!n. ((PRE (SUC n)) = n)))
T c/\ c= cPRE cNUMERAL c_0 cNUMERAL c_0 ! c= cPRE cSUC b0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.add0n
A |- (!n. (((NUMERAL _0) + n) = n))
T c= c+ cNUMERAL c_0 f0 f0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D ADD_ASSOC
A |- (!m. (!n. (!p. ((m + (n + p)) = ((m + n) + p)))))
T c= c+ f0 c+ f1 f2 c+ c+ f0 f1 f2
D ADD_AC
A |- (((m + n) = (n + m)) /\ ((((m + n) + p) = (m + (n + p))) /\ ((m + (n + p)) = (n + (m + p)))))
T c/\ c= c+ f0 f1 c+ f1 f0 c/\ c= c+ c+ f0 f1 f2 c+ f0 c+ f1 f2 c= c+ f0 c+ f1 f2 c+ f1 c+ f0 f2
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D Ssrnat.mul0n
A |- (!n. (((NUMERAL _0) * n) = (NUMERAL _0)))
T c= c* cNUMERAL c_0 f0 cNUMERAL c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D Ssrnat.mul1n
A |- (!n. (((NUMERAL (BIT1 _0)) * n) = n))
T c= c* cNUMERAL cBIT1 c_0 f0 f0
D LEFT_ADD_DISTRIB
A |- (!m. (!n. (!p. ((m * (n + p)) = ((m * n) + (m * p))))))
T c= c* f0 c+ f1 f2 c+ c* f0 f1 c* f0 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D Ssrnat.expnS
A |- (!m. (!n. ((m EXP (SUC n)) = (m * (m EXP n)))))
T c= cEXP f0 cSUC f1 c* f0 cEXP f0 f1
D Ssrnat.expn0
A |- (!m. ((m EXP (NUMERAL _0)) = (NUMERAL (BIT1 _0))))
T c= cEXP f0 cNUMERAL c_0 cNUMERAL cBIT1 c_0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LT_SUC
A |- (!m. (!n. (((SUC m) < (SUC n)) = (m < n))))
T c= c< cSUC f0 cSUC f1 c< f0 f1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LE_REFL
A |- (!n. (n <= n))
T c<= f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D NOT_LT
A |- (!m. (!n. ((~ (m < n)) = (n <= m))))
T c= c~ c< f0 f1 c<= f1 f0
D LT_IMP_LE
A |- (!m. (!n. ((m < n) ==> (m <= n))))
T c==> c< f0 f1 c<= f0 f1
D LT_NZ
A |- (!n. (((NUMERAL _0) < n) = (~ (n = (NUMERAL _0)))))
T c= c< cNUMERAL c_0 f0 c~ c= f0 cNUMERAL c_0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D Hypermap.THREE
A |- ((NUMERAL (BIT1 (BIT1 _0))) = (SUC (NUMERAL (BIT0 (BIT1 _0)))))
T c= cNUMERAL cBIT1 cBIT1 c_0 cSUC cNUMERAL cBIT0 cBIT1 c_0
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_EQ
A |- (!x. (!y. ((~ (x = y)) = (((int_lt x) y) \/ ((int_lt y) x)))))
T c= c~ c= f0 f1 c\/ cint_lt f0 f1 cint_lt f1 f0
D INT_NOT_LT
A |- (!x. (!y. ((~ ((int_lt x) y)) = ((int_le y) x))))
T c= c~ cint_lt f0 f1 cint_le f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_OF_NUM_LT
A |- (!m. (!n. (((int_lt (int_of_num m)) (int_of_num n)) = (m < n))))
T c= cint_lt cint_of_num f0 cint_of_num f1 c< f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_SING
A |- (!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y))))
T c= cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
D Hypermap.GE_1
A |- (!n. ((NUMERAL (BIT1 _0)) <= (SUC n)))
T c<= cNUMERAL cBIT1 c_0 cSUC f0
D Hypermap.LT_PLUS
A |- (!n. (n < (SUC n)))
T c< f0 cSUC f0
D Fan.POWER_1
A |- (!f. (((POWER f) (NUMERAL (BIT1 _0))) = f))
T c= * * part cPOWER f0 cNUMERAL cBIT1 c_0 f0
D Hypermap.face
A |- (!H. (!x. (((face H) x) = ((orbit_map (face_map H)) x))))
T c= * * part cface f0 f1 * * part corbit_map * part cface_map f0 f1
D Hypermap.simple_hypermap
A |- (!H. ((simple_hypermap H) = (!x. ((x IN (dart H)) ==> ((((node H) x) INTER ((face H) x)) = (x INSERT EMPTY))))))
T c= csimple_hypermap f0 ! c==> cIN b0 * part cdart f0 c= * * part cINTER * * part cnode f0 b0 * * part cface f0 b0 * * part cINSERT b0 part cEMPTY
D Hypermap.COM_POWER
A |- (!n. (!f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))))
T c= * * part cPOWER f0 cSUC f1 * * part co f0 * * part cPOWER f0 f1
D Hypermap.lemma_add_exponent_function
A |- (!p. (!m. (!n. (!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x)))))))
T c= cPOWER f0 c+ f1 f2 f3 cPOWER f0 f1 cPOWER f0 f2 f3
D Hypermap.orbit_one_point
A |- (!f. (!x. (((f x) = x) = (((orbit_map f) x) = (x INSERT EMPTY)))))
T c= c= * f0 f1 f1 c= * * part corbit_map f0 f1 * * part cINSERT f1 part cEMPTY
D Hypermap.face_map_injective
A |- (!H. (!x. (!y. ((((face_map H) x) = ((face_map H) y)) = (x = y)))))
T c= c= cface_map f0 f1 cface_map f0 f2 c= f1 f2
D Hypermap.lemma_dart_invariant_power_face
A |- (!H. (!x. (!n. ((x IN (dart H)) ==> ((((POWER (face_map H)) n) x) IN (dart H))))))
T c==> cIN f0 * part cdart f1 cIN cPOWER * part cface_map f1 f2 f0 * part cdart f1
D Ssrnat.leqnSn
A |- (!n. (n <= (SUC n)))
T c<= f0 cSUC f0
D Hypermap.LT0_LE1
A |- (!n. (((NUMERAL _0) < n) = ((NUMERAL (BIT1 _0)) <= n)))
T c= c< cNUMERAL c_0 f0 c<= cNUMERAL cBIT1 c_0 f0
D Hypermap.node_refl
A |- (!H. (!x. (x IN ((node H) x))))
T cIN f0 * * part cnode f1 f0
D Hypermap.CARD_SINGLETON
A |- (!x. ((CARD (x INSERT EMPTY)) = (NUMERAL (BIT1 _0))))
T c= cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0
D Hypermap.lemma_power_loop_map_in_loop
A |- (!L. (!x. (!k. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop (((POWER (loop_map L)) k) x)) L)))))
T c==> cin_dart_of_loop f0 f1 cin_dart_of_loop cPOWER * part cloop_map f1 f2 f0 f1
D Hypermap.lemma_face_cycle
A |- (!H. (!x. ((((POWER (face_map H)) (CARD ((face H) x))) x) = x)))
T c= cPOWER * part cface_map f0 cCARD * * part cface f0 f1 f1 f1
D Hypermap.lemma_in_dart
A |- (!H. (!NF. (!L. (!x. ((((is_normal H) NF) /\ ((L IN NF) /\ ((in_dart_of_loop x) L))) ==> (x IN (dart H)))))))
T c==> c/\ cis_normal f0 f1 c/\ cIN f2 f1 cin_dart_of_loop f3 f2 cIN f3 * part cdart f0
D Hypermap.lemma_in_support2
A |- (!NF. (!L. (!x. ((((in_dart_of_loop x) L) /\ (L IN NF)) ==> (x IN (darts_of_family NF))))))
T c==> c/\ cin_dart_of_loop f0 f1 cIN f1 f2 cIN f0 * part cdarts_of_family f2
D Hypermap.lemma_in_face
A |- (!H. (!x. (!n. ((((POWER (face_map H)) n) x) IN ((face H) x)))))
T cIN cPOWER * part cface_map f0 f1 f2 * * part cface f0 f2
D Hypermap.is_restricted
A |- (!H. ((is_restricted H) = ((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))))))))))
T c= cis_restricted f0 c/\ c~ c= * part cdart f0 part cEMPTY c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0
D Hypermap.is_split_condition
A |- (!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))))))))))
T c= cis_split_condition f0 f1 f2 f3 c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3
D Hypermap.lemma_hyp_m
A |- (!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((i <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) /\ (~ ((((POWER (loop_map L)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x) = (((POWER (face_map H)) (SUC (SUC ((((hyp'm H) NF) L) x)))) x)))))))))
T c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c<= b0 cSUC chyp'm f0 f1 f2 f3 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 c~ c= cPOWER * part cloop_map f2 cSUC cSUC chyp'm f0 f1 f2 f3 f3 cPOWER * part cface_map f0 cSUC cSUC chyp'm f0 f1 f2 f3 f3
D Hypermap.hyp_y
A |- (!H. (!NF. (!L. (!x. (((((hyp'y H) NF) L) x) = (((POWER (face_map H)) (SUC ((((hyp'm H) NF) L) x))) x))))))
T c= chyp'y f0 f1 f2 f3 cPOWER * part cface_map f0 cSUC chyp'm f0 f1 f2 f3 f3
D Hypermap.lemma_hyp_p
A |- (!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= ((((hyp'p H) NF) L) x))) ==> (~ ((((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF))))) /\ ((((POWER (face_map H)) (SUC ((((hyp'p H) NF) L) x))) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF))))))))
T c==> cis_split_condition f0 f1 f2 f3 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 chyp'p f0 f1 f2 f3 c~ cIN cPOWER * part cface_map f0 b0 chyp'y f0 f1 f2 f3 * part cdarts_of_family f1 cIN cPOWER * part cface_map f0 cSUC chyp'p f0 f1 f2 f3 chyp'y f0 f1 f2 f3 * part cdarts_of_family f1
D Hypermap.hyp_z
A |- (!H. (!NF. (!L. (!x. (((((hyp'z H) NF) L) x) = (((POWER (face_map H)) (SUC ((((hyp'p H) NF) L) x))) ((((hyp'y H) NF) L) x)))))))
T c= chyp'z f0 f1 f2 f3 cPOWER * part cface_map f0 cSUC chyp'p f0 f1 f2 f3 chyp'y f0 f1 f2 f3
+ |- ((\H. (!x. (((orbit_map (face_map H)) x) = ((face H) x)))) H)
T * / ! c= * * part corbit_map * part cface_map b0 b1 * * part cface b0 b1 f0
+ |- ((((\L. (((in_dart_of_loop x) L) /\ (L IN NF))) L) ==> ((!NF. (!L. (!x. ((((in_dart_of_loop x) L) /\ (L IN NF)) ==> (x IN (darts_of_family NF)))))) ==> (x IN (darts_of_family NF)))) = T)
T c= c==> * / c/\ cin_dart_of_loop f0 b0 cIN b0 f1 f2 c==> ! ! ! c==> c/\ cin_dart_of_loop b2 b1 cIN b1 b0 cIN b2 * part cdarts_of_family b0 cIN f0 * part cdarts_of_family f1 cT
+ ((~ (m < n)) = (n <= m)) |- ((n <= m) = (~ (m < n)))
T c==> c= c~ c< f0 f1 c<= f1 f0 c= c<= f1 f0 c~ c< f0 f1
+ (!H. (!x. (!n. ((x IN (dart H)) ==> ((((POWER (face_map H)) n) x) IN (dart H)))))) |- (!n. ((x IN (dart H)) ==> ((((POWER (face_map H)) n) x) IN (dart H))))
T c==> ! ! ! c==> cIN b1 * part cdart b0 cIN cPOWER * part cface_map b0 b2 b1 * part cdart b0 ! c==> cIN f0 * part cdart f1 cIN cPOWER * part cface_map f1 b0 f0 * part cdart f1
+ |- ((n <= m) = (~ (m < n)))
T c= c<= f0 f1 c~ c< f1 f0
- |- ((((\y. (((((hyp'y H) NF) L) x) = y)) y) ==> (?y. (((((hyp'y H) NF) L) x) = y))) = T)
T c= c==> * / c= chyp'y f0 f1 f2 f3 b0 f4 c? / c= chyp'y f0 f1 f2 f3 b0 cT
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _2501797)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _2501798)) /\ (((real_le ((real_add ((real_add (real_of_int _2501797)) ((real_add (real_of_int _2501798)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _2501797)) ((real_add (real_of_int _2501798)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) \/ ((real_le ((real_add ((real_add (real_of_int _2501797)) ((real_add (real_of_int _2501798)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _2501797)) ((real_add (real_of_int _2501798)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _2501797) ==> (((int_le (int_of_num (NUMERAL _0))) _2501798) ==> (((int_add _2501797) ((int_add _2501798) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((int_add _2501797) ((int_add _2501798) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c\/ creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c= cint_add f0 cint_add f1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_add f0 cint_add f1 cint_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (!H. (!x. (!n. ((x IN (dart H)) ==> ((((POWER (face_map H)) n) x) IN (dart H)))))), (x IN (dart H)) |- ((x IN (dart H)) /\ (!n. ((((POWER (face_map H)) n) x) IN (dart H))))
T c==> ! ! ! c==> cIN b1 * part cdart b0 cIN cPOWER * part cface_map b0 b2 b1 * part cdart b0 c==> cIN f0 * part cdart f1 c/\ cIN f0 * part cdart f1 ! cIN cPOWER * part cface_map f1 b0 f0 * part cdart f1
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- |- (((!x'. (((\y. (((((hyp'y H) NF) L) x) = y)) x') ==> (?y. (((((hyp'y H) NF) L) x) = y)))) ==> ((?y. (((((hyp'y H) NF) L) x) = y)) ==> (?y. (((((hyp'y H) NF) L) x) = y)))) = ((?y. (((((hyp'y H) NF) L) x) = y)) ==> (?y. (((((hyp'y H) NF) L) x) = y))))
T c= c==> ! c==> * / c= chyp'y f0 f1 f2 f3 b1 b0 c? / c= chyp'y f0 f1 f2 f3 b1 c==> c? / c= chyp'y f0 f1 f2 f3 b0 c? / c= chyp'y f0 f1 f2 f3 b0 c==> c? / c= chyp'y f0 f1 f2 f3 b0 c? / c= chyp'y f0 f1 f2 f3 b0
+ |- ((\L. (!x. (((((is_split_condition H) NF) L) x) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= ((((hyp'p H) NF) L) x))) ==> (~ ((((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF))))) /\ ((((POWER (face_map H)) (SUC ((((hyp'p H) NF) L) x))) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)))))) L)
T * / ! c==> cis_split_condition f0 f1 b0 b1 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b2 c<= b2 chyp'p f0 f1 b0 b1 c~ cIN cPOWER * part cface_map f0 b2 chyp'y f0 f1 b0 b1 * part cdarts_of_family f1 cIN cPOWER * part cface_map f0 cSUC chyp'p f0 f1 b0 b1 chyp'y f0 f1 b0 b1 * part cdarts_of_family f1 f2
+ ((\m. (((((hyp'm H) NF) L) x) = m)) m) |- (((((((hyp'm H) NF) L) x) = m) ==> ((((node H) ((((hyp'y H) NF) L) x)) = ((node H) ((((hyp'z H) NF) L) x))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= ((((hyp'p H) NF) L) x))) /\ ((((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)))))) = ((((node H) ((((hyp'y H) NF) L) x)) = ((node H) ((((hyp'z H) NF) L) x))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= ((((hyp'p H) NF) L) x))) /\ ((((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF))))))
T c==> * / c= chyp'm f0 f1 f2 f3 b0 f4 c= c==> c= chyp'm f0 f1 f2 f3 f4 c==> c= * * part cnode f0 chyp'y f0 f1 f2 f3 * * part cnode f0 chyp'z f0 f1 f2 f3 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 chyp'p f0 f1 f2 f3 cIN cPOWER * part cface_map f0 b0 chyp'y f0 f1 f2 f3 * part cdarts_of_family f1 c==> c= * * part cnode f0 chyp'y f0 f1 f2 f3 * * part cnode f0 chyp'z f0 f1 f2 f3 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 chyp'p f0 f1 f2 f3 cIN cPOWER * part cface_map f0 b0 chyp'y f0 f1 f2 f3 * part cdarts_of_family f1
+ |- ((p = (NUMERAL _0)) \/ (~ (p = (NUMERAL _0))))
T c\/ c= f0 cNUMERAL c_0 c~ c= f0 cNUMERAL c_0
- |- ((((((hyp'y H) NF) L) x) = y) ==> (?y. (((((hyp'y H) NF) L) x) = y)))
T c==> c= chyp'y f0 f1 f2 f3 f4 c? / c= chyp'y f0 f1 f2 f3 b0
+ (!NF. (!L. (!x. ((((in_dart_of_loop x) L) /\ (L IN NF)) ==> (x IN (darts_of_family NF)))))) |- ((?L. (((in_dart_of_loop x) L) /\ (L IN NF))) ==> (x IN (darts_of_family NF)))
T c==> ! ! ! c==> c/\ cin_dart_of_loop b2 b1 cIN b1 b0 cIN b2 * part cdarts_of_family b0 c==> c? / c/\ cin_dart_of_loop f0 b0 cIN b0 f1 cIN f0 * part cdarts_of_family f1
- (((NUMERAL _0) < n) = ((NUMERAL (BIT1 _0)) <= n)) |- (((NUMERAL (BIT1 _0)) <= n) = ((NUMERAL _0) < n))
T c==> c= c< cNUMERAL c_0 f0 c<= cNUMERAL cBIT1 c_0 f0 c= c<= cNUMERAL cBIT1 c_0 f0 c< cNUMERAL c_0 f0
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
- (((((hyp'p H) NF) L) x) = p) |- ((\p. (((((hyp'p H) NF) L) x) = p)) p)
T c==> c= chyp'p f0 f1 f2 f3 f4 * / c= chyp'p f0 f1 f2 f3 b0 f4
+ |- (((!NF. (!L. (!x. (((((hyp'y H) NF) L) x) = (((POWER (face_map H)) (SUC ((((hyp'm H) NF) L) x))) x))))) ==> ((\NF. (!L. (!x. (((((hyp'y H) NF) L) x) = (((POWER (face_map H)) (SUC ((((hyp'm H) NF) L) x))) x))))) NF)) = ((\NF. (!L. (!x. (((((hyp'y H) NF) L) x) = (((POWER (face_map H)) (SUC ((((hyp'm H) NF) L) x))) x))))) NF))
T c= c==> ! ! ! c= chyp'y f0 b0 b1 b2 cPOWER * part cface_map f0 cSUC chyp'm f0 b0 b1 b2 b2 * / ! ! c= chyp'y f0 b0 b1 b2 cPOWER * part cface_map f0 cSUC chyp'm f0 b0 b1 b2 b2 f1 * / ! ! c= chyp'y f0 b0 b1 b2 cPOWER * part cface_map f0 cSUC chyp'm f0 b0 b1 b2 b2 f1
+ |- (((!m. (!n. (((SUC m) + (SUC n)) = (m + (SUC (SUC n)))))) ==> ((\m. (!n. (((SUC m) + (SUC n)) = (m + (SUC (SUC n)))))) m)) = ((\m. (!n. (((SUC m) + (SUC n)) = (m + (SUC (SUC n)))))) m))
T c= c==> ! ! c= c+ cSUC b0 cSUC b1 c+ b0 cSUC cSUC b1 * / ! c= c+ cSUC b0 cSUC b1 c+ b0 cSUC cSUC b1 f0 * / ! c= c+ cSUC b0 cSUC b1 c+ b0 cSUC cSUC b1 f0
+ (~ (p = (NUMERAL _0))), ((((POWER (face_map H)) p) y) = (((POWER (loop_map L)) m) x)), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((((is_split_condition H) NF) L) x) |- ((((NUMERAL (BIT1 _0)) <= p) /\ (p <= p)) /\ ((((POWER (face_map H)) p) y) IN (darts_of_family NF)))
T c==> c~ c= f0 cNUMERAL c_0 c==> c= cPOWER * part cface_map f1 f0 f2 cPOWER * part cloop_map f3 f4 f5 c==> c/\ cIN f3 f6 c/\ c~ cIN f3 * * part cfinal_loops f1 f6 c/\ cin_dart_of_loop f5 f3 c= chead_of_atom f1 f6 f5 f5 c==> cis_split_condition f1 f6 f3 f5 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 f0 cIN cPOWER * part cface_map f1 f0 f2 * part cdarts_of_family f6
+ |- (((!x. ((CARD (x INSERT EMPTY)) = (NUMERAL (BIT1 _0)))) ==> ((\x. ((CARD (x INSERT EMPTY)) = (NUMERAL (BIT1 _0)))) x)) = ((\x. ((CARD (x INSERT EMPTY)) = (NUMERAL (BIT1 _0)))) x))
T c= c==> ! c= cCARD * * part cINSERT b0 part cEMPTY cNUMERAL cBIT1 c_0 * / c= cCARD * * part cINSERT b0 part cEMPTY cNUMERAL cBIT1 c_0 f0 * / c= cCARD * * part cINSERT b0 part cEMPTY cNUMERAL cBIT1 c_0 f0
+ |- (((!H. (!NF. (!L. (!x. ((((POWER (face_map H)) (SUC ((((hyp'm H) NF) L) x))) x) = ((((hyp'y H) NF) L) x)))))) ==> ((\H. (!NF. (!L. (!x. ((((POWER (face_map H)) (SUC ((((hyp'm H) NF) L) x))) x) = ((((hyp'y H) NF) L) x)))))) H)) = ((\H. (!NF. (!L. (!x. ((((POWER (face_map H)) (SUC ((((hyp'm H) NF) L) x))) x) = ((((hyp'y H) NF) L) x)))))) H))
T c= c==> ! ! ! ! c= cPOWER * part cface_map b0 cSUC chyp'm b0 b1 b2 b3 b3 chyp'y b0 b1 b2 b3 * / ! ! ! c= cPOWER * part cface_map b0 cSUC chyp'm b0 b1 b2 b3 b3 chyp'y b0 b1 b2 b3 f0 * / ! ! ! c= cPOWER * part cface_map b0 cSUC chyp'm b0 b1 b2 b3 b3 chyp'y b0 b1 b2 b3 f0
- (((((hyp'm H) NF) L) x) = m) |- ((\m. (((((hyp'm H) NF) L) x) = m)) m)
T c==> c= chyp'm f0 f1 f2 f3 f4 * / c= chyp'm f0 f1 f2 f3 b0 f4
+ |- ((\L. (!x. ((((is_normal H) NF) /\ ((L IN NF) /\ ((in_dart_of_loop x) L))) ==> (x IN (dart H))))) L)
T * / ! c==> c/\ cis_normal f0 f1 c/\ cIN b0 f1 cin_dart_of_loop b1 b0 cIN b1 * part cdart f0 f2
+ |- (((!x. (!y. ((((face_map H) x) = ((face_map H) y)) = (x = y)))) ==> ((\x. (!y. ((((face_map H) x) = ((face_map H) y)) = (x = y)))) x)) = ((\x. (!y. ((((face_map H) x) = ((face_map H) y)) = (x = y)))) x))
T c= c==> ! ! c= c= cface_map f0 b0 cface_map f0 b1 c= b0 b1 * / ! c= c= cface_map f0 b0 cface_map f0 b1 c= b0 b1 f1 * / ! c= c= cface_map f0 b0 cface_map f0 b1 c= b0 b1 f1
+ ((((POWER (face_map H)) p) y) = (((POWER (loop_map L)) m) x)) |- (((((NUMERAL (BIT1 _0)) <= p) /\ (p <= p)) /\ ((((POWER (loop_map L)) m) x) IN (darts_of_family NF))) = ((((NUMERAL (BIT1 _0)) <= p) /\ (p <= p)) /\ ((((POWER (face_map H)) p) y) IN (darts_of_family NF))))
T c==> c= cPOWER * part cface_map f0 f1 f2 cPOWER * part cloop_map f3 f4 f5 c= c/\ c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 f1 cIN cPOWER * part cloop_map f3 f4 f5 * part cdarts_of_family f6 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 f1 cIN cPOWER * part cface_map f0 f1 f2 * part cdarts_of_family f6
- |- ((\q'. ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) = p') ==> ((p' ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (p' ==> q'))))) q')
T * / c==> c= cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 f5 c==> c==> f5 c= c< chyp'p f0 f2 f3 f4 cSUC f1 b0 c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> f5 b0 f6
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- ((\n. (((NUMERAL _0) < n) = ((NUMERAL (BIT1 _0)) <= n))) n)
T * / c= c< cNUMERAL c_0 b0 c<= cNUMERAL cBIT1 c_0 b0 f0
+ |- (((!y. ((x IN (y INSERT EMPTY)) = (x = y))) ==> ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)) = ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y))
T c= c==> ! c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
+ |- ((\f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))) f)
T * / c= * * part cPOWER b0 cSUC f0 * * part co b0 * * part cPOWER b0 f0 f1
+ |- (((!n. ((m + n) = (n + m))) ==> ((\n. ((m + n) = (n + m))) n)) = ((\n. ((m + n) = (n + m))) n))
T c= c==> ! c= c+ f0 b0 c+ b0 f0 * / c= c+ f0 b0 c+ b0 f0 f1 * / c= c+ f0 b0 c+ b0 f0 f1
+ (is_restricted H) |- ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))
T c==> cis_restricted f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0
+ (((((hyp'm H) NF) L) x) = m), ((((is_split_condition H) NF) L) x) |- ((((POWER (loop_map L)) m) x) = (((POWER (face_map H)) m) x))
T c==> c= chyp'm f0 f1 f2 f3 f4 c==> cis_split_condition f0 f1 f2 f3 c= cPOWER * part cloop_map f2 f4 f3 cPOWER * part cface_map f0 f4 f3
+ (((real_ge (real_of_int _2501817)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _2501817)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501817))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
- |- ((((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = (((((hyp'p H) NF) L) x) < (SUC d)))) ==> (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d))))) = (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d)))))
T c= c==> c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c= c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c= c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c= c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _2501797)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _2501798)) /\ (((real_le ((real_add ((real_add (real_of_int _2501797)) ((real_add (real_of_int _2501798)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _2501797)) ((real_add (real_of_int _2501798)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) \/ ((real_le ((real_add ((real_add (real_of_int _2501797)) ((real_add (real_of_int _2501798)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _2501797)) ((real_add (real_of_int _2501798)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c\/ creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ (is_restricted H), (((((hyp'm H) NF) L) x) = m), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((is_normal H) NF), ((((is_split_condition H) NF) L) x) |- ((((\y. (((((hyp'y H) NF) L) x) = y)) y) ==> ((((node H) ((((hyp'y H) NF) L) x)) = ((node H) (((POWER (face_map H)) (SUC p)) ((((hyp'y H) NF) L) x)))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)))))) = T)
T c==> cis_restricted f0 c==> c= chyp'm f0 f1 f2 f3 f4 c==> c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3 c==> cis_normal f0 f1 c==> cis_split_condition f0 f1 f2 f3 c= c==> * / c= chyp'y f0 f1 f2 f3 b0 f5 c==> c= * * part cnode f0 chyp'y f0 f1 f2 f3 * * part cnode f0 cPOWER * part cface_map f0 cSUC f6 chyp'y f0 f1 f2 f3 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f6 cIN cPOWER * part cface_map f0 b0 chyp'y f0 f1 f2 f3 * part cdarts_of_family f1 cT
+ ((((POWER (face_map H)) (SUC ((((hyp'm H) NF) L) x))) x) = ((((hyp'y H) NF) L) x)) |- (((((hyp'y H) NF) L) x) = (((POWER (face_map H)) (SUC ((((hyp'm H) NF) L) x))) x))
T c==> c= cPOWER * part cface_map f0 cSUC chyp'm f0 f1 f2 f3 f3 chyp'y f0 f1 f2 f3 c= chyp'y f0 f1 f2 f3 cPOWER * part cface_map f0 cSUC chyp'm f0 f1 f2 f3 f3
+ |- (((x IN s) /\ (x IN t)) = (x IN (s INTER t)))
T c= c/\ cIN f0 f1 cIN f0 f2 cIN f0 * * part cINTER f1 f2
+ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((((is_split_condition H) NF) L) x) |- (((\d. ((CARD ((face H) x)) = ((NUMERAL (BIT1 _0)) + (SUC d)))) d) ==> ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x))))
T c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part cfinal_loops f2 f1 c/\ cin_dart_of_loop f3 f0 c= chead_of_atom f2 f1 f3 f3 c==> cis_split_condition f2 f1 f0 f3 c==> * / c= cCARD * * part cface f2 f3 c+ cNUMERAL cBIT1 c_0 cSUC b0 f4 c< cSUC chyp'p f2 f1 f0 f3 cCARD * * part cface f2 f3
+ (p = (NUMERAL _0)) |- (((((face_map H) y) = y) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL _0))) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))) = (((((POWER (face_map H)) (SUC p)) y) = y) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))))
T c==> c= f0 cNUMERAL c_0 c= c==> c= cface_map f1 f2 f2 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL c_0 cIN cPOWER * part cface_map f1 b0 f2 * part cdarts_of_family f3 c==> c= cPOWER * part cface_map f1 cSUC f0 f2 f2 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f0 cIN cPOWER * part cface_map f1 b0 f2 * part cdarts_of_family f3
+ ((((is_split_condition H) NF) L) x) |- (is_restricted H)
T c==> cis_split_condition f0 f1 f2 f3 cis_restricted f0
+ (!NF. (!L. (!x. ((((in_dart_of_loop x) L) /\ (L IN NF)) ==> (x IN (darts_of_family NF)))))) |- ((\x. ((((in_dart_of_loop x) L) /\ (L IN NF)) ==> (x IN (darts_of_family NF)))) x)
T c==> ! ! ! c==> c/\ cin_dart_of_loop b2 b1 cIN b1 b0 cIN b2 * part cdarts_of_family b0 * / c==> c/\ cin_dart_of_loop b0 f0 cIN f0 f1 cIN b0 * part cdarts_of_family f1 f2
+ (is_restricted H), (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))), ((((is_split_condition H) NF) L) x) |- ((~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) ((((hyp'z H) NF) L) x)))) /\ ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x))))
T c==> cis_restricted f0 c==> c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3 c==> cis_split_condition f0 f1 f2 f3 c/\ c~ c= * * part cnode f0 chyp'y f0 f1 f2 f3 * * part cnode f0 chyp'z f0 f1 f2 f3 c< cSUC chyp'p f0 f1 f2 f3 cCARD * * part cface f0 f3
+ (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'm H) NF) L) x) = m), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((is_normal H) NF), ((((is_split_condition H) NF) L) x) |- (((((POWER (face_map H)) (SUC p)) y) IN ((node H) y)) ==> (((((POWER (face_map H)) (SUC p)) y) IN ((face H) y)) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))))
T c==> cis_restricted f0 c==> c= chyp'y f0 f1 f2 f3 f4 c==> c= chyp'm f0 f1 f2 f3 f5 c==> c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3 c==> cis_normal f0 f1 c==> cis_split_condition f0 f1 f2 f3 c==> cIN cPOWER * part cface_map f0 cSUC f6 f4 * * part cnode f0 f4 c==> cIN cPOWER * part cface_map f0 cSUC f6 f4 * * part cface f0 f4 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f6 cIN cPOWER * part cface_map f0 b0 f4 * part cdarts_of_family f1
+ (is_restricted H), (((((hyp'm H) NF) L) x) = m), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((is_normal H) NF), ((((is_split_condition H) NF) L) x), ((\y. (((((hyp'y H) NF) L) x) = y)) y) |- (((\y. (((((hyp'y H) NF) L) x) = y)) y) /\ ((((node H) ((((hyp'y H) NF) L) x)) = ((node H) (((POWER (face_map H)) (SUC p)) ((((hyp'y H) NF) L) x)))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF))))))
T c==> cis_restricted f0 c==> c= chyp'm f0 f1 f2 f3 f4 c==> c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3 c==> cis_normal f0 f1 c==> cis_split_condition f0 f1 f2 f3 c==> * / c= chyp'y f0 f1 f2 f3 b0 f5 c/\ * / c= chyp'y f0 f1 f2 f3 b0 f5 c==> c= * * part cnode f0 chyp'y f0 f1 f2 f3 * * part cnode f0 cPOWER * part cface_map f0 cSUC f6 chyp'y f0 f1 f2 f3 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f6 cIN cPOWER * part cface_map f0 b0 chyp'y f0 f1 f2 f3 * part cdarts_of_family f1
+ |- ((m < n) = ((int_lt (int_of_num m)) (int_of_num n)))
T c= c< f0 f1 cint_lt cint_of_num f0 cint_of_num f1
+ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((((is_split_condition H) NF) L) x) |- (?L'. (((in_dart_of_loop (((POWER (loop_map L)) m) x)) L') /\ (L' IN NF)))
T c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part cfinal_loops f2 f1 c/\ cin_dart_of_loop f3 f0 c= chead_of_atom f2 f1 f3 f3 c==> cis_split_condition f2 f1 f0 f3 c? / c/\ cin_dart_of_loop cPOWER * part cloop_map f0 f4 f3 b0 cIN b0 f1
+ (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'm H) NF) L) x) = m), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), (y IN (dart H)), ((((is_split_condition H) NF) L) x) |- ((y IN (dart H)) /\ (((((POWER (face_map H)) (SUC p)) y) IN (((node H) y) INTER ((face H) y))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))))
T c==> cis_restricted f0 c==> c= chyp'y f0 f1 f2 f3 f4 c==> c= chyp'm f0 f1 f2 f3 f5 c==> c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3 c==> cIN f4 * part cdart f0 c==> cis_split_condition f0 f1 f2 f3 c/\ cIN f4 * part cdart f0 c==> cIN cPOWER * part cface_map f0 cSUC f6 f4 * * part cINTER * * part cnode f0 f4 * * part cface f0 f4 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f6 cIN cPOWER * part cface_map f0 b0 f4 * part cdarts_of_family f1
+ ((CARD ((face H) x)) = (SUC (SUC d))), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((((is_split_condition H) NF) L) x) |- ((((POWER (face_map H)) ((SUC d) + (SUC ((((hyp'm H) NF) L) x)))) x) IN (darts_of_family NF))
T c==> c= cCARD * * part cface f0 f1 cSUC cSUC f2 c==> c/\ cIN f3 f4 c/\ c~ cIN f3 * * part cfinal_loops f0 f4 c/\ cin_dart_of_loop f1 f3 c= chead_of_atom f0 f4 f1 f1 c==> cis_split_condition f0 f4 f3 f1 cIN cPOWER * part cface_map f0 c+ cSUC f2 cSUC chyp'm f0 f4 f3 f1 f1 * part cdarts_of_family f4
+ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((((is_split_condition H) NF) L) x) |- ((?d. ((CARD ((face H) x)) = ((NUMERAL (BIT1 _0)) + (SUC d)))) ==> ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x))))
T c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part cfinal_loops f2 f1 c/\ cin_dart_of_loop f3 f0 c= chead_of_atom f2 f1 f3 f3 c==> cis_split_condition f2 f1 f0 f3 c==> c? / c= cCARD * * part cface f2 f3 c+ cNUMERAL cBIT1 c_0 cSUC b0 c< cSUC chyp'p f2 f1 f0 f3 cCARD * * part cface f2 f3
+ |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((\m. (!n. ((n <= m) = (~ (m < n))))) m)
T * / ! c= c<= b1 b0 c~ c< b0 b1 f0
+ (~ (p = (NUMERAL _0))), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((((is_split_condition H) NF) L) x) |- (((((POWER (face_map H)) p) y) = (((POWER (loop_map L)) m) x)) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF)))))
T c==> c~ c= f0 cNUMERAL c_0 c==> c/\ cIN f1 f2 c/\ c~ cIN f1 * * part cfinal_loops f3 f2 c/\ cin_dart_of_loop f4 f1 c= chead_of_atom f3 f2 f4 f4 c==> cis_split_condition f3 f2 f1 f4 c==> c= cPOWER * part cface_map f3 f0 f5 cPOWER * part cloop_map f1 f6 f4 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f0 cIN cPOWER * part cface_map f3 b0 f5 * part cdarts_of_family f2
+ (!H. (!x. (!n. ((x IN (dart H)) ==> ((((POWER (face_map H)) n) x) IN (dart H)))))) |- ((!x. ((x IN (dart H)) ==> (!n. ((((POWER (face_map H)) n) x) IN (dart H))))) = T)
T c==> ! ! ! c==> cIN b1 * part cdart b0 cIN cPOWER * part cface_map b0 b2 b1 * part cdart b0 c= ! c==> cIN b0 * part cdart f0 ! cIN cPOWER * part cface_map f0 b1 b0 * part cdart f0 cT
+ (((face H) x) = ((orbit_map (face_map H)) x)) |- (((orbit_map (face_map H)) x) = ((face H) x))
T c==> c= * * part cface f0 f1 * * part corbit_map * part cface_map f0 f1 c= * * part corbit_map * part cface_map f0 f1 * * part cface f0 f1
- |- (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d))))
T c= c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1
- ((!x. (~ (P x))) = (~ (?x. (P x)))) |- ((~ (?x. (P x))) = (!x. (~ (P x))))
T c==> c= ! c~ * f0 b0 c~ c? / * f0 b0 c= c~ c? / * f0 b0 ! c~ * f0 b0
+ (A = F) |- ((A = F) /\ ((A ==> (~ B)) = (~ (A /\ B))))
T c==> c= f0 cF c/\ c= f0 cF c= c==> f0 c~ f1 c~ c/\ f0 f1
+ |- (((!p. (!m. (!n. (!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x))))))) ==> ((\p. (!m. (!n. (!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x))))))) (face_map H))) = ((\p. (!m. (!n. (!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x))))))) (face_map H)))
T c= c==> ! ! ! ! c= cPOWER b0 c+ b1 b2 b3 cPOWER b0 b1 cPOWER b0 b2 b3 * / ! ! ! c= cPOWER b0 c+ b1 b2 b3 cPOWER b0 b1 cPOWER b0 b2 b3 * part cface_map f0 * / ! ! ! c= cPOWER b0 c+ b1 b2 b3 cPOWER b0 b1 cPOWER b0 b2 b3 * part cface_map f0
- ((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) |- (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) /\ ((((((hyp'p H) NF) L) x) < (SUC d)) = (((((hyp'p H) NF) L) x) < (SUC d))))
T c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c/\ cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c= c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1
+ |- (((!H. (!x. (((orbit_map (face_map H)) x) = ((face H) x)))) ==> ((\H. (!x. (((orbit_map (face_map H)) x) = ((face H) x)))) H)) = ((\H. (!x. (((orbit_map (face_map H)) x) = ((face H) x)))) H))
T c= c==> ! ! c= * * part corbit_map * part cface_map b0 b1 * * part cface b0 b1 * / ! c= * * part corbit_map * part cface_map b0 b1 * * part cface b0 b1 f0 * / ! c= * * part corbit_map * part cface_map b0 b1 * * part cface b0 b1 f0
+ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((is_normal H) NF), ((((is_split_condition H) NF) L) x) |- ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))
T c==> ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c==> c/\ cIN f1 f2 c/\ c~ cIN f1 * * part cfinal_loops f0 f2 c/\ cin_dart_of_loop f3 f1 c= chead_of_atom f0 f2 f3 f3 c==> cis_normal f0 f2 c==> cis_split_condition f0 f2 f1 f3 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 f3
+ |- (((((SUC d) <= ((((hyp'p H) NF) L) x)) ==> (~ ((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)))) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (((((NUMERAL (BIT1 _0)) <= (PRE (SUC (SUC d)))) /\ ((PRE (SUC (SUC d))) <= ((((hyp'p H) NF) L) x))) ==> (~ ((((POWER (face_map H)) (PRE (SUC (SUC d)))) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)))) ==> (((((hyp'p H) NF) L) x) < (SUC d))))
T c= c==> c==> c<= cSUC f0 chyp'p f1 f2 f3 f4 c~ cIN cPOWER * part cface_map f1 cSUC f0 chyp'y f1 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f1 f2 f3 f4 cSUC f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 cPRE cSUC cSUC f0 c<= cPRE cSUC cSUC f0 chyp'p f1 f2 f3 f4 c~ cIN cPOWER * part cface_map f1 cPRE cSUC cSUC f0 chyp'y f1 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f1 f2 f3 f4 cSUC f0
+ (~ (p = (NUMERAL _0))), (((((hyp'm H) NF) L) x) = m), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((((is_split_condition H) NF) L) x) |- (((((POWER (face_map H)) p) y) = (((POWER (face_map H)) ((((hyp'm H) NF) L) x)) x)) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF)))))
T c==> c~ c= f0 cNUMERAL c_0 c==> c= chyp'm f1 f2 f3 f4 f5 c==> c/\ cIN f3 f2 c/\ c~ cIN f3 * * part cfinal_loops f1 f2 c/\ cin_dart_of_loop f4 f3 c= chead_of_atom f1 f2 f4 f4 c==> cis_split_condition f1 f2 f3 f4 c==> c= cPOWER * part cface_map f1 f0 f6 cPOWER * part cface_map f1 chyp'm f1 f2 f3 f4 f4 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f0 cIN cPOWER * part cface_map f1 b0 f6 * part cdarts_of_family f2
+ ((CARD ((face H) x)) = ((NUMERAL (BIT1 _0)) + (SUC d))), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((((is_split_condition H) NF) L) x) |- ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x)))
T c==> c= cCARD * * part cface f0 f1 c+ cNUMERAL cBIT1 c_0 cSUC f2 c==> c/\ cIN f3 f4 c/\ c~ cIN f3 * * part cfinal_loops f0 f4 c/\ cin_dart_of_loop f1 f3 c= chead_of_atom f0 f4 f1 f1 c==> cis_split_condition f0 f4 f3 f1 c< cSUC chyp'p f0 f4 f3 f1 cCARD * * part cface f0 f1
- (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) |- ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) /\ ((((((hyp'p H) NF) L) x) < (SUC d)) = (((((hyp'p H) NF) L) x) < (SUC d))))
T c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c/\ c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c= c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1
+ |- ((F ==> (~ B)) = (~ (F /\ B)))
T c= c==> cF c~ f0 c~ c/\ cF f0
+ (!NF. (!L. (!x. ((((in_dart_of_loop x) L) /\ (L IN NF)) ==> (x IN (darts_of_family NF)))))), (((in_dart_of_loop x) L) /\ (L IN NF)) |- (x IN (darts_of_family NF))
T c==> ! ! ! c==> c/\ cin_dart_of_loop b2 b1 cIN b1 b0 cIN b2 * part cdarts_of_family b0 c==> c/\ cin_dart_of_loop f0 f1 cIN f1 f2 cIN f0 * part cdarts_of_family f2
+ |- ((PRE (SUC n)) = n)
T c= cPRE cSUC f0 f0
+ (((node H) y) = ((node H) (((POWER (face_map H)) (SUC p)) y))) |- ((((((POWER (face_map H)) (SUC p)) y) IN ((node H) (((POWER (face_map H)) (SUC p)) y))) ==> (((((POWER (face_map H)) (SUC p)) y) IN ((face H) y)) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF)))))) = (((((POWER (face_map H)) (SUC p)) y) IN ((node H) y)) ==> (((((POWER (face_map H)) (SUC p)) y) IN ((face H) y)) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF)))))))
T c==> c= * * part cnode f0 f1 * * part cnode f0 cPOWER * part cface_map f0 cSUC f2 f1 c= c==> cIN cPOWER * part cface_map f0 cSUC f2 f1 * * part cnode f0 cPOWER * part cface_map f0 cSUC f2 f1 c==> cIN cPOWER * part cface_map f0 cSUC f2 f1 * * part cface f0 f1 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f2 cIN cPOWER * part cface_map f0 b0 f1 * part cdarts_of_family f3 c==> cIN cPOWER * part cface_map f0 cSUC f2 f1 * * part cnode f0 f1 c==> cIN cPOWER * part cface_map f0 cSUC f2 f1 * * part cface f0 f1 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f2 cIN cPOWER * part cface_map f0 b0 f1 * part cdarts_of_family f3
+ |- (((!m. (!n. (!x. ((((POWER (face_map H)) m) (((POWER (face_map H)) n) x)) = (((POWER (face_map H)) (m + n)) x))))) ==> ((\m. (!n. (!x. ((((POWER (face_map H)) m) (((POWER (face_map H)) n) x)) = (((POWER (face_map H)) (m + n)) x))))) m)) = ((\m. (!n. (!x. ((((POWER (face_map H)) m) (((POWER (face_map H)) n) x)) = (((POWER (face_map H)) (m + n)) x))))) m))
T c= c==> ! ! ! c= cPOWER * part cface_map f0 b0 cPOWER * part cface_map f0 b1 b2 cPOWER * part cface_map f0 c+ b0 b1 b2 * / ! ! c= cPOWER * part cface_map f0 b0 cPOWER * part cface_map f0 b1 b2 cPOWER * part cface_map f0 c+ b0 b1 b2 f1 * / ! ! c= cPOWER * part cface_map f0 b0 cPOWER * part cface_map f0 b1 b2 cPOWER * part cface_map f0 c+ b0 b1 b2 f1
+ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((is_normal H) NF), ((((is_split_condition H) NF) L) x) |- (x IN (dart H))
T c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part cfinal_loops f2 f1 c/\ cin_dart_of_loop f3 f0 c= chead_of_atom f2 f1 f3 f3 c==> cis_normal f2 f1 c==> cis_split_condition f2 f1 f0 f3 cIN f3 * part cdart f2
+ |- (((!x. (!NF. ((?L. (((in_dart_of_loop x) L) /\ (L IN NF))) ==> (x IN (darts_of_family NF))))) ==> ((\x. (!NF. ((?L. (((in_dart_of_loop x) L) /\ (L IN NF))) ==> (x IN (darts_of_family NF))))) x)) = ((\x. (!NF. ((?L. (((in_dart_of_loop x) L) /\ (L IN NF))) ==> (x IN (darts_of_family NF))))) x))
T c= c==> ! ! c==> c? / c/\ cin_dart_of_loop b0 b2 cIN b2 b1 cIN b0 * part cdarts_of_family b1 * / ! c==> c? / c/\ cin_dart_of_loop b0 b2 cIN b2 b1 cIN b0 * part cdarts_of_family b1 f0 * / ! c==> c? / c/\ cin_dart_of_loop b0 b2 cIN b2 b1 cIN b0 * part cdarts_of_family b1 f0
+ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((((is_split_condition H) NF) L) x) |- (((!x. (((\d. ((CARD ((face H) x)) = ((NUMERAL (BIT1 _0)) + (SUC d)))) x) ==> ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x))))) ==> ((?d. ((CARD ((face H) x)) = ((NUMERAL (BIT1 _0)) + (SUC d)))) ==> ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x))))) = ((?d. ((CARD ((face H) x)) = ((NUMERAL (BIT1 _0)) + (SUC d)))) ==> ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x)))))
T c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part cfinal_loops f2 f1 c/\ cin_dart_of_loop f3 f0 c= chead_of_atom f2 f1 f3 f3 c==> cis_split_condition f2 f1 f0 f3 c= c==> ! c==> * / c= cCARD * * part cface f2 f3 c+ cNUMERAL cBIT1 c_0 cSUC b1 b0 c< cSUC chyp'p f2 f1 f0 f3 cCARD * * part cface f2 f3 c==> c? / c= cCARD * * part cface f2 f3 c+ cNUMERAL cBIT1 c_0 cSUC b0 c< cSUC chyp'p f2 f1 f0 f3 cCARD * * part cface f2 f3 c==> c? / c= cCARD * * part cface f2 f3 c+ cNUMERAL cBIT1 c_0 cSUC b0 c< cSUC chyp'p f2 f1 f0 f3 cCARD * * part cface f2 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\NF. (!L. (!x. ((((POWER (face_map H)) (SUC ((((hyp'm H) NF) L) x))) x) = ((((hyp'y H) NF) L) x))))) NF)
T * / ! ! c= cPOWER * part cface_map f0 cSUC chyp'm f0 b0 b1 b2 b2 chyp'y f0 b0 b1 b2 f1
+ |- (((!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))))))))) ==> ((\H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))))))))) H)) = ((\H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))))))))) H))
T c= c==> ! ! ! ! c= cis_split_condition b0 b1 b2 b3 c/\ cis_restricted b0 c/\ cis_normal b0 b1 c/\ cIN b2 b1 c/\ c~ cIN b2 * * part cfinal_loops b0 b1 c/\ cin_dart_of_loop b3 b2 c= chead_of_atom b0 b1 b3 b3 * / ! ! ! c= cis_split_condition b0 b1 b2 b3 c/\ cis_restricted b0 c/\ cis_normal b0 b1 c/\ cIN b2 b1 c/\ c~ cIN b2 * * part cfinal_loops b0 b1 c/\ cin_dart_of_loop b3 b2 c= chead_of_atom b0 b1 b3 b3 f0 * / ! ! ! c= cis_split_condition b0 b1 b2 b3 c/\ cis_restricted b0 c/\ cis_normal b0 b1 c/\ cIN b2 b1 c/\ c~ cIN b2 * * part cfinal_loops b0 b1 c/\ cin_dart_of_loop b3 b2 c= chead_of_atom b0 b1 b3 b3 f0
+ |- ((\x. (((((hyp'z H) NF) L) x) = (((POWER (face_map H)) (SUC ((((hyp'p H) NF) L) x))) ((((hyp'y H) NF) L) x)))) x)
T * / c= chyp'z f0 f1 f2 b0 cPOWER * part cface_map f0 cSUC chyp'p f0 f1 f2 b0 chyp'y f0 f1 f2 b0 f3
+ |- ((((POWER (face_map H)) (m + n)) x) = (((POWER (face_map H)) m) (((POWER (face_map H)) n) x)))
T c= cPOWER * part cface_map f0 c+ f1 f2 f3 cPOWER * part cface_map f0 f1 cPOWER * part cface_map f0 f2 f3
+ |- (((!H. (!x. (!n. ((x IN (dart H)) ==> ((((POWER (face_map H)) n) x) IN (dart H)))))) ==> (!H. (!x. ((x IN (dart H)) ==> (!n. ((((POWER (face_map H)) n) x) IN (dart H))))))) = (!H. (!x. ((x IN (dart H)) ==> (!n. ((((POWER (face_map H)) n) x) IN (dart H)))))))
T c= c==> ! ! ! c==> cIN b1 * part cdart b0 cIN cPOWER * part cface_map b0 b2 b1 * part cdart b0 ! ! c==> cIN b1 * part cdart b0 ! cIN cPOWER * part cface_map b0 b2 b1 * part cdart b0 ! ! c==> cIN b1 * part cdart b0 ! cIN cPOWER * part cface_map b0 b2 b1 * part cdart b0
+ (!H. (!x. (!n. ((x IN (dart H)) ==> ((((POWER (face_map H)) n) x) IN (dart H)))))) |- (!x. ((x IN (dart H)) ==> (!n. ((((POWER (face_map H)) n) x) IN (dart H)))))
T c==> ! ! ! c==> cIN b1 * part cdart b0 cIN cPOWER * part cface_map b0 b2 b1 * part cdart b0 ! c==> cIN b0 * part cdart f0 ! cIN cPOWER * part cface_map f0 b1 b0 * part cdart f0
+ (!NF. (!L. (!x. ((((in_dart_of_loop x) L) /\ (L IN NF)) ==> (x IN (darts_of_family NF)))))), (?L. (((in_dart_of_loop x) L) /\ (L IN NF))) |- ((?L. (((in_dart_of_loop x) L) /\ (L IN NF))) /\ (x IN (darts_of_family NF)))
T c==> ! ! ! c==> c/\ cin_dart_of_loop b2 b1 cIN b1 b0 cIN b2 * part cdarts_of_family b0 c==> c? / c/\ cin_dart_of_loop f0 b0 cIN b0 f1 c/\ c? / c/\ cin_dart_of_loop f0 b0 cIN b0 f1 cIN f0 * part cdarts_of_family f1
+ |- (((in_dart_of_loop x) L) ==> (!k. ((in_dart_of_loop (((POWER (loop_map L)) k) x)) L)))
T c==> cin_dart_of_loop f0 f1 ! cin_dart_of_loop cPOWER * part cloop_map f1 b0 f0 f1
+ ((CARD ((face H) x)) = (SUC (SUC d))), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((((is_split_condition H) NF) L) x) |- ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (((((hyp'p H) NF) L) x) < (SUC d)))
T c==> c= cCARD * * part cface f0 f1 cSUC cSUC f2 c==> c/\ cIN f3 f4 c/\ c~ cIN f3 * * part cfinal_loops f0 f4 c/\ cin_dart_of_loop f1 f3 c= chead_of_atom f0 f4 f1 f1 c==> cis_split_condition f0 f4 f3 f1 c= c==> cIN cPOWER * part cface_map f0 cSUC f2 chyp'y f0 f4 f3 f1 * part cdarts_of_family f4 c< chyp'p f0 f4 f3 f1 cSUC f2 c< chyp'p f0 f4 f3 f1 cSUC f2
+ (((((hyp'y H) NF) L) x) = y) |- (y = ((((hyp'y H) NF) L) x))
T c==> c= chyp'y f0 f1 f2 f3 f4 c= f4 chyp'y f0 f1 f2 f3
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))))))) ==> ((\x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))))))) x)) = ((\x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))))))) x))
T c= c==> ! c= cis_split_condition f0 f1 f2 b0 c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop b0 f2 c= chead_of_atom f0 f1 b0 b0 * / c= cis_split_condition f0 f1 f2 b0 c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop b0 f2 c= chead_of_atom f0 f1 b0 b0 f3 * / c= cis_split_condition f0 f1 f2 b0 c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop b0 f2 c= chead_of_atom f0 f1 b0 b0 f3
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((((is_split_condition H) NF) L) x) |- (((((is_split_condition H) NF) L) x) /\ ((~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) ((((hyp'z H) NF) L) x)))) /\ ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x)))))
T c==> cis_split_condition f0 f1 f2 f3 c/\ cis_split_condition f0 f1 f2 f3 c/\ c~ c= * * part cnode f0 chyp'y f0 f1 f2 f3 * * part cnode f0 chyp'z f0 f1 f2 f3 c< cSUC chyp'p f0 f1 f2 f3 cCARD * * part cface f0 f3
+ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((is_normal H) NF), ((((is_split_condition H) NF) L) x) |- ((\n. ((((POWER (face_map H)) n) x) IN (dart H))) (SUC m))
T c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part cfinal_loops f2 f1 c/\ cin_dart_of_loop f3 f0 c= chead_of_atom f2 f1 f3 f3 c==> cis_normal f2 f1 c==> cis_split_condition f2 f1 f0 f3 * / cIN cPOWER * part cface_map f2 b0 f3 * part cdart f2 cSUC f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((((hyp'y H) NF) L) x) = y) |- (((y IN (dart H)) ==> (((((POWER (face_map H)) (SUC p)) y) IN (((node H) y) INTER ((face H) y))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF)))))) = (((((POWER (face_map H)) (SUC ((((hyp'm H) NF) L) x))) x) IN (dart H)) ==> (((((POWER (face_map H)) (SUC p)) y) IN (((node H) y) INTER ((face H) y))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF)))))))
T c==> c= chyp'y f0 f1 f2 f3 f4 c= c==> cIN f4 * part cdart f0 c==> cIN cPOWER * part cface_map f0 cSUC f5 f4 * * part cINTER * * part cnode f0 f4 * * part cface f0 f4 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f5 cIN cPOWER * part cface_map f0 b0 f4 * part cdarts_of_family f1 c==> cIN cPOWER * part cface_map f0 cSUC chyp'm f0 f1 f2 f3 f3 * part cdart f0 c==> cIN cPOWER * part cface_map f0 cSUC f5 f4 * * part cINTER * * part cnode f0 f4 * * part cface f0 f4 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f5 cIN cPOWER * part cface_map f0 b0 f4 * part cdarts_of_family f1
+ |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (((~ (((((hyp'p H) NF) L) x) < (SUC d))) ==> (~ ((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)))) ==> (((((hyp'p H) NF) L) x) < (SUC d))))
T c= c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> c==> c~ c< chyp'p f0 f2 f3 f4 cSUC f1 c~ cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1
+ (((orbit_map (face_map H)) y) = (y INSERT EMPTY)) |- ((((y IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) y)))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL _0))) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))) = (((y IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD (y INSERT EMPTY)))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL _0))) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))))
T c==> c= * * part corbit_map * part cface_map f0 f1 * * part cINSERT f1 part cEMPTY c= c==> c==> cIN f1 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 f1 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL c_0 cIN cPOWER * part cface_map f0 b0 f1 * part cdarts_of_family f2 c==> c==> cIN f1 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cINSERT f1 part cEMPTY c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL c_0 cIN cPOWER * part cface_map f0 b0 f1 * part cdarts_of_family f2
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\H. (!x. (!y. ((((face_map H) x) = ((face_map H) y)) = (x = y))))) H)
T * / ! ! c= c= cface_map b0 b1 cface_map b0 b2 c= b1 b2 f0
+ |- (((!NF. ((?L. (((in_dart_of_loop x) L) /\ (L IN NF))) ==> (x IN (darts_of_family NF)))) ==> ((\NF. ((?L. (((in_dart_of_loop x) L) /\ (L IN NF))) ==> (x IN (darts_of_family NF)))) NF)) = ((\NF. ((?L. (((in_dart_of_loop x) L) /\ (L IN NF))) ==> (x IN (darts_of_family NF)))) NF))
T c= c==> ! c==> c? / c/\ cin_dart_of_loop f0 b1 cIN b1 b0 cIN f0 * part cdarts_of_family b0 * / c==> c? / c/\ cin_dart_of_loop f0 b1 cIN b1 b0 cIN f0 * part cdarts_of_family b0 f1 * / c==> c? / c/\ cin_dart_of_loop f0 b1 cIN b1 b0 cIN f0 * part cdarts_of_family b0 f1
+ (((NUMERAL _0) < n) = (~ (n = (NUMERAL _0)))) |- ((~ (n = (NUMERAL _0))) = ((NUMERAL _0) < n))
T c==> c= c< cNUMERAL c_0 f0 c~ c= f0 cNUMERAL c_0 c= c~ c= f0 cNUMERAL c_0 c< cNUMERAL c_0 f0
+ |- ((\p. (!m. (!n. (!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x))))))) (face_map H))
T * / ! ! ! c= cPOWER b0 c+ b1 b2 b3 cPOWER b0 b1 cPOWER b0 b2 b3 * part cface_map f0
+ |- ((\x. (!NF. ((?L. (((in_dart_of_loop x) L) /\ (L IN NF))) ==> (x IN (darts_of_family NF))))) x)
T * / ! c==> c? / c/\ cin_dart_of_loop b0 b2 cIN b2 b1 cIN b0 * part cdarts_of_family b1 f0
+ (!NF. (!L. (!x. ((((in_dart_of_loop x) L) /\ (L IN NF)) ==> (x IN (darts_of_family NF)))))) |- ((!NF. ((?L. (((in_dart_of_loop x) L) /\ (L IN NF))) ==> (x IN (darts_of_family NF)))) = T)
T c==> ! ! ! c==> c/\ cin_dart_of_loop b2 b1 cIN b1 b0 cIN b2 * part cdarts_of_family b0 c= ! c==> c? / c/\ cin_dart_of_loop f0 b1 cIN b1 b0 cIN f0 * part cdarts_of_family b0 cT
+ (is_restricted H), (y IN (dart H)) |- ((((node H) y) INTER ((face H) y)) = (y INSERT EMPTY))
T c==> cis_restricted f0 c==> cIN f1 * part cdart f0 c= * * part cINTER * * part cnode f0 f1 * * part cface f0 f1 * * part cINSERT f1 part cEMPTY
+ (is_restricted H), ((~ (p = (NUMERAL _0))) ==> (((((POWER (face_map H)) (SUC p)) y) = y) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF)))))), (y IN (dart H)) |- (((((POWER (face_map H)) (SUC p)) y) = y) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF)))))
T c==> cis_restricted f0 c==> c==> c~ c= f1 cNUMERAL c_0 c==> c= cPOWER * part cface_map f0 cSUC f1 f2 f2 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f1 cIN cPOWER * part cface_map f0 b0 f2 * part cdarts_of_family f3 c==> cIN f2 * part cdart f0 c==> c= cPOWER * part cface_map f0 cSUC f1 f2 f2 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f1 cIN cPOWER * part cface_map f0 b0 f2 * part cdarts_of_family f3
+ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((is_normal H) NF), ((((is_split_condition H) NF) L) x) |- (((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))) = ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))
T c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part cfinal_loops f2 f1 c/\ cin_dart_of_loop f3 f0 c= chead_of_atom f2 f1 f3 f3 c==> cis_normal f2 f1 c==> cis_split_condition f2 f1 f0 f3 c= c==> cIN f3 * part cdart f2 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f2 f3 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f2 f3
+ (((((hyp'm H) NF) L) x) = m), ((((is_split_condition H) NF) L) x) |- (((!i. ((i <= (SUC m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) ==> ((\i. ((i <= (SUC m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) i)) = ((\i. ((i <= (SUC m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) i))
T c==> c= chyp'm f0 f1 f2 f3 f4 c==> cis_split_condition f0 f1 f2 f3 c= c==> ! c==> c<= b0 cSUC f4 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 * / c==> c<= b0 cSUC f4 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 f5 * / c==> c<= b0 cSUC f4 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 f5
+ (((((hyp'm H) NF) L) x) = m) |- ((((((POWER (face_map H)) p) y) = (((POWER (face_map H)) ((((hyp'm H) NF) L) x)) x)) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))) = (((((POWER (face_map H)) p) y) = (((POWER (face_map H)) m) x)) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))))
T c==> c= chyp'm f0 f1 f2 f3 f4 c= c==> c= cPOWER * part cface_map f0 f5 f6 cPOWER * part cface_map f0 chyp'm f0 f1 f2 f3 f3 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f5 cIN cPOWER * part cface_map f0 b0 f6 * part cdarts_of_family f1 c==> c= cPOWER * part cface_map f0 f5 f6 cPOWER * part cface_map f0 f4 f3 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f5 cIN cPOWER * part cface_map f0 b0 f6 * part cdarts_of_family f1
+ |- ((\m. (((((hyp'm H) NF) L) x) = m)) ((((hyp'm H) NF) L) x))
T * / c= chyp'm f0 f1 f2 f3 b0 chyp'm f0 f1 f2 f3
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((((is_split_condition H) NF) L) x) |- ((\L'. (((in_dart_of_loop (((POWER (loop_map L)) m) x)) L') /\ (L' IN NF))) L)
T c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part cfinal_loops f2 f1 c/\ cin_dart_of_loop f3 f0 c= chead_of_atom f2 f1 f3 f3 c==> cis_split_condition f2 f1 f0 f3 * / c/\ cin_dart_of_loop cPOWER * part cloop_map f0 f4 f3 b0 cIN b0 f1 f0
+ (is_restricted H) |- ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))))))
T c==> cis_restricted f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0
- |- (((!q'. (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = p') ==> ((p' ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (p' ==> q'))))) ==> ((\q'. (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = p') ==> ((p' ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (p' ==> q'))))) q')) = ((\q'. (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = p') ==> ((p' ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 f5 c==> c==> f5 c= c< chyp'p f0 f2 f3 f4 cSUC f1 b0 c= c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> f5 b0 * / c==> c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 f5 c==> c==> f5 c= c< chyp'p f0 f2 f3 f4 cSUC f1 b0 c= c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> f5 b0 f6 * / c==> c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 f5 c==> c==> f5 c= c< chyp'p f0 f2 f3 f4 cSUC f1 b0 c= c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> f5 b0 f6
+ (~ (p = (NUMERAL _0))), ((((POWER (face_map H)) p) y) = (((POWER (loop_map L)) m) x)), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((((is_split_condition H) NF) L) x) |- (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))
T c==> c~ c= f0 cNUMERAL c_0 c==> c= cPOWER * part cface_map f1 f0 f2 cPOWER * part cloop_map f3 f4 f5 c==> c/\ cIN f3 f6 c/\ c~ cIN f3 * * part cfinal_loops f1 f6 c/\ cin_dart_of_loop f5 f3 c= chead_of_atom f1 f6 f5 f5 c==> cis_split_condition f1 f6 f3 f5 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f0 cIN cPOWER * part cface_map f1 b0 f2 * part cdarts_of_family f6
+ |- ((\t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1))) t2)
T * / c= c==> c~ f0 c~ b0 c==> b0 f0 f1
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
+ (is_restricted H), (((((hyp'm H) NF) L) x) = m), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((is_normal H) NF), ((((is_split_condition H) NF) L) x) |- ((((node H) ((((hyp'y H) NF) L) x)) = ((node H) (((POWER (face_map H)) (SUC ((((hyp'p H) NF) L) x))) ((((hyp'y H) NF) L) x)))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= ((((hyp'p H) NF) L) x))) /\ ((((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)))))
T c==> cis_restricted f0 c==> c= chyp'm f0 f1 f2 f3 f4 c==> c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3 c==> cis_normal f0 f1 c==> cis_split_condition f0 f1 f2 f3 c==> c= * * part cnode f0 chyp'y f0 f1 f2 f3 * * part cnode f0 cPOWER * part cface_map f0 cSUC chyp'p f0 f1 f2 f3 chyp'y f0 f1 f2 f3 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 chyp'p f0 f1 f2 f3 cIN cPOWER * part cface_map f0 b0 chyp'y f0 f1 f2 f3 * part cdarts_of_family f1
+ (((real_ge (real_of_int _2501817)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _2501817)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501817))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501817))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2501817)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\p'. (!q'. ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) = p') ==> ((p' ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (p' ==> q')))))) p')
T * / ! c==> c= cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 b0 c==> c==> b0 c= c< chyp'p f0 f2 f3 f4 cSUC f1 b1 c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> b0 b1 f5
+ ((A = F) ==> ((A ==> (~ B)) = (~ (A /\ B)))) |- ((A ==> (~ B)) = (~ (A /\ B)))
T c==> c==> c= f0 cF c= c==> f0 c~ f1 c~ c/\ f0 f1 c= c==> f0 c~ f1 c~ c/\ f0 f1
+ |- (((!x. ((((face_map H) x) = x) = (((orbit_map (face_map H)) x) = (x INSERT EMPTY)))) ==> ((\x. ((((face_map H) x) = x) = (((orbit_map (face_map H)) x) = (x INSERT EMPTY)))) x)) = ((\x. ((((face_map H) x) = x) = (((orbit_map (face_map H)) x) = (x INSERT EMPTY)))) x))
T c= c==> ! c= c= cface_map f0 b0 b0 c= * * part corbit_map * part cface_map f0 b0 * * part cINSERT b0 part cEMPTY * / c= c= cface_map f0 b0 b0 c= * * part corbit_map * part cface_map f0 b0 * * part cINSERT b0 part cEMPTY f1 * / c= c= cface_map f0 b0 b0 c= * * part corbit_map * part cface_map f0 b0 * * part cINSERT b0 part cEMPTY f1
+ (((((hyp'm H) NF) L) x) = m), ((((is_split_condition H) NF) L) x) |- ((((((POWER (loop_map L)) m) x) = (((POWER (face_map H)) m) x)) ==> (((((POWER (face_map H)) p) y) = (((POWER (face_map H)) m) x)) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF)))))) = (((((POWER (face_map H)) p) y) = (((POWER (face_map H)) m) x)) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))))
T c==> c= chyp'm f0 f1 f2 f3 f4 c==> cis_split_condition f0 f1 f2 f3 c= c==> c= cPOWER * part cloop_map f2 f4 f3 cPOWER * part cface_map f0 f4 f3 c==> c= cPOWER * part cface_map f0 f5 f6 cPOWER * part cface_map f0 f4 f3 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f5 cIN cPOWER * part cface_map f0 b0 f6 * part cdarts_of_family f1 c==> c= cPOWER * part cface_map f0 f5 f6 cPOWER * part cface_map f0 f4 f3 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f5 cIN cPOWER * part cface_map f0 b0 f6 * part cdarts_of_family f1
+ (y IN (dart H)) |- ((((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT1 _0))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL _0))) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))) = (((y IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD (y INSERT EMPTY)))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL _0))) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))))
T c==> cIN f0 * part cdart f1 c= c==> c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL c_0 cIN cPOWER * part cface_map f1 b0 f0 * part cdarts_of_family f2 c==> c==> cIN f0 * part cdart f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cINSERT f0 part cEMPTY c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL c_0 cIN cPOWER * part cface_map f1 b0 f0 * part cdarts_of_family f2
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501817))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501817))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((~ (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= ((((hyp'p H) NF) L) x))) /\ ((((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF))))) ==> (~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) ((((hyp'z H) NF) L) x))))) = ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= ((((hyp'p H) NF) L) x))) ==> (~ ((((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF))))) ==> (~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) ((((hyp'z H) NF) L) x))))))
T c= c==> c~ c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 chyp'p f0 f1 f2 f3 cIN cPOWER * part cface_map f0 b0 chyp'y f0 f1 f2 f3 * part cdarts_of_family f1 c~ c= * * part cnode f0 chyp'y f0 f1 f2 f3 * * part cnode f0 chyp'z f0 f1 f2 f3 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 chyp'p f0 f1 f2 f3 c~ cIN cPOWER * part cface_map f0 b0 chyp'y f0 f1 f2 f3 * part cdarts_of_family f1 c~ c= * * part cnode f0 chyp'y f0 f1 f2 f3 * * part cnode f0 chyp'z f0 f1 f2 f3
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((\n. (n <= (SUC n))) n)
T * / c<= b0 cSUC b0 f0
+ |- ((\t1. (!t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1)))) t1)
T * / ! c= c==> c~ b0 c~ b1 c==> b1 b0 f0
- |- ((!x. t) = t)
T c= ! f0 f0
+ (is_restricted H), (y IN (dart H)) |- ((((((POWER (face_map H)) (SUC p)) y) = y) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))) = (((((POWER (face_map H)) (SUC p)) y) IN (((node H) y) INTER ((face H) y))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))))
T c==> cis_restricted f0 c==> cIN f1 * part cdart f0 c= c==> c= cPOWER * part cface_map f0 cSUC f2 f1 f1 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f2 cIN cPOWER * part cface_map f0 b0 f1 * part cdarts_of_family f3 c==> cIN cPOWER * part cface_map f0 cSUC f2 f1 * * part cINTER * * part cnode f0 f1 * * part cface f0 f1 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f2 cIN cPOWER * part cface_map f0 b0 f1 * part cdarts_of_family f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((is_normal H) NF), ((((is_split_condition H) NF) L) x) |- ((!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))) ==> ((NUMERAL (BIT1 _0)) < (CARD ((face H) x))))
T c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part cfinal_loops f2 f1 c/\ cin_dart_of_loop f3 f0 c= chead_of_atom f2 f1 f3 f3 c==> cis_normal f2 f1 c==> cis_split_condition f2 f1 f0 f3 c==> ! c==> cIN b0 * part cdart f2 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f2 b0 c< cNUMERAL cBIT1 c_0 cCARD * * part cface f2 f3
- |- (!p. (((\p. (((((hyp'p H) NF) L) x) = p)) p) ==> (?p. (((((hyp'p H) NF) L) x) = p))))
T c==> * / c= chyp'p f0 f1 f2 f3 b0 f4 c? / c= chyp'p f0 f1 f2 f3 b0
+ |- ((((in_dart_of_loop x) L) /\ (L IN NF)) ==> ((!NF. (!L. (!x. ((((in_dart_of_loop x) L) /\ (L IN NF)) ==> (x IN (darts_of_family NF)))))) ==> (x IN (darts_of_family NF))))
T c==> c/\ cin_dart_of_loop f0 f1 cIN f1 f2 c==> ! ! ! c==> c/\ cin_dart_of_loop b2 b1 cIN b1 b0 cIN b2 * part cdarts_of_family b0 cIN f0 * part cdarts_of_family f2
+ (A = F) |- (((A ==> (~ B)) = (~ (A /\ B))) = ((F ==> (~ B)) = (~ (F /\ B))))
T c==> c= f0 cF c= c= c==> f0 c~ f1 c~ c/\ f0 f1 c= c==> cF c~ f1 c~ c/\ cF f1
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
+ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((((is_split_condition H) NF) L) x) |- (((((((hyp'm H) NF) L) x) <= (SUC ((((hyp'm H) NF) L) x))) ==> ((((POWER (loop_map L)) ((((hyp'm H) NF) L) x)) x) = (((POWER (face_map H)) ((((hyp'm H) NF) L) x)) x))) ==> ((((POWER (face_map H)) ((((hyp'm H) NF) L) x)) x) IN (darts_of_family NF)))
T c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part cfinal_loops f2 f1 c/\ cin_dart_of_loop f3 f0 c= chead_of_atom f2 f1 f3 f3 c==> cis_split_condition f2 f1 f0 f3 c==> c==> c<= chyp'm f2 f1 f0 f3 cSUC chyp'm f2 f1 f0 f3 c= cPOWER * part cloop_map f0 chyp'm f2 f1 f0 f3 f3 cPOWER * part cface_map f2 chyp'm f2 f1 f0 f3 f3 cIN cPOWER * part cface_map f2 chyp'm f2 f1 f0 f3 f3 * part cdarts_of_family f1
+ |- ((\n. ((PRE (SUC n)) = n)) n)
T * / c= cPRE cSUC b0 b0 f0
- |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((\H. (!NF. (!L. (!x. (((((hyp'y H) NF) L) x) = (((POWER (face_map H)) (SUC ((((hyp'm H) NF) L) x))) x)))))) H)
T * / ! ! ! c= chyp'y b0 b1 b2 b3 cPOWER * part cface_map b0 cSUC chyp'm b0 b1 b2 b3 b3 f0
- (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) |- (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = T))
T c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c= c< chyp'p f0 f2 f3 f4 cSUC f1 cT
- |- ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))))
T c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1
+ |- (((orbit_map (face_map H)) x) = ((face H) x))
T c= * * part corbit_map * part cface_map f0 f1 * * part cface f0 f1
+ (is_restricted H) |- ((\x. ((x IN (dart H)) ==> ((((node H) x) INTER ((face H) x)) = (x INSERT EMPTY)))) x)
T c==> cis_restricted f0 * / c==> cIN b0 * part cdart f0 c= * * part cINTER * * part cnode f0 b0 * * part cface f0 b0 * * part cINSERT b0 part cEMPTY f1
+ (is_restricted H), (((((hyp'm H) NF) L) x) = m), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((is_normal H) NF), ((((is_split_condition H) NF) L) x) |- (((\p. (((((hyp'p H) NF) L) x) = p)) p) ==> ((((node H) ((((hyp'y H) NF) L) x)) = ((node H) (((POWER (face_map H)) (SUC ((((hyp'p H) NF) L) x))) ((((hyp'y H) NF) L) x)))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= ((((hyp'p H) NF) L) x))) /\ ((((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF))))))
T c==> cis_restricted f0 c==> c= chyp'm f0 f1 f2 f3 f4 c==> c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3 c==> cis_normal f0 f1 c==> cis_split_condition f0 f1 f2 f3 c==> * / c= chyp'p f0 f1 f2 f3 b0 f5 c==> c= * * part cnode f0 chyp'y f0 f1 f2 f3 * * part cnode f0 cPOWER * part cface_map f0 cSUC chyp'p f0 f1 f2 f3 chyp'y f0 f1 f2 f3 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 chyp'p f0 f1 f2 f3 cIN cPOWER * part cface_map f0 b0 chyp'y f0 f1 f2 f3 * part cdarts_of_family f1
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _2501797)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _2501798)) /\ (((real_le ((real_add ((real_add (real_of_int _2501797)) ((real_add (real_of_int _2501798)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _2501797)) ((real_add (real_of_int _2501798)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) \/ ((real_le ((real_add ((real_add (real_of_int _2501797)) ((real_add (real_of_int _2501798)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _2501797)) ((real_add (real_of_int _2501798)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c\/ creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_add creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cF
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) ==> ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)) = ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x))
T c= c==> ! ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((CARD ((face H) x)) = (SUC (SUC d))) |- (((((POWER (face_map H)) (((((hyp'm H) NF) L) x) + (CARD ((face H) x)))) x) IN (darts_of_family NF)) = ((((POWER (face_map H)) (((((hyp'm H) NF) L) x) + (SUC (SUC d)))) x) IN (darts_of_family NF)))
T c==> c= cCARD * * part cface f0 f1 cSUC cSUC f2 c= cIN cPOWER * part cface_map f0 c+ chyp'm f0 f3 f4 f1 cCARD * * part cface f0 f1 f1 * part cdarts_of_family f3 cIN cPOWER * part cface_map f0 c+ chyp'm f0 f3 f4 f1 cSUC cSUC f2 f1 * part cdarts_of_family f3
+ ((((is_split_condition H) NF) L) x) |- ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))
T c==> cis_split_condition f0 f1 f2 f3 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3
- |- (T = (((SUC (NUMERAL (BIT0 (BIT1 _0)))) <= (CARD ((face H) x))) ==> ((NUMERAL (BIT1 _0)) < (CARD ((face H) x)))))
T c= cT c==> c<= cSUC cNUMERAL cBIT0 cBIT1 c_0 cCARD * * part cface f0 f1 c< cNUMERAL cBIT1 c_0 cCARD * * part cface f0 f1
+ |- (((((POWER (face_map H)) ((((hyp'm H) NF) L) x)) (((POWER (face_map H)) (CARD ((face H) x))) x)) IN (darts_of_family NF)) = ((((POWER (face_map H)) (((((hyp'm H) NF) L) x) + (CARD ((face H) x)))) x) IN (darts_of_family NF)))
T c= cIN cPOWER * part cface_map f0 chyp'm f0 f1 f2 f3 cPOWER * part cface_map f0 cCARD * * part cface f0 f3 f3 * part cdarts_of_family f1 cIN cPOWER * part cface_map f0 c+ chyp'm f0 f1 f2 f3 cCARD * * part cface f0 f3 f3 * part cdarts_of_family f1
+ |- ((!x. (((((is_split_condition H) NF) L) x) ==> ((~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) ((((hyp'z H) NF) L) x)))) /\ ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x)))))) = T)
T c= ! c==> cis_split_condition f0 f1 f2 b0 c/\ c~ c= * * part cnode f0 chyp'y f0 f1 f2 b0 * * part cnode f0 chyp'z f0 f1 f2 b0 c< cSUC chyp'p f0 f1 f2 b0 cCARD * * part cface f0 b0 cT
+ |- (((!g. (!x. (((f o g) x) = (f (g x))))) ==> ((\g. (!x. (((f o g) x) = (f (g x))))) g)) = ((\g. (!x. (((f o g) x) = (f (g x))))) g))
T c= c==> ! ! c= co f0 b0 b1 * f0 * b0 b1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1
- |- ((?d. t) = t)
T c= c? / f0 f0
- ((\y. (((((hyp'y H) NF) L) x) = y)) y) |- (((\y. (((((hyp'y H) NF) L) x) = y)) y) /\ (?y. (((((hyp'y H) NF) L) x) = y)))
T c==> * / c= chyp'y f0 f1 f2 f3 b0 f4 c/\ * / c= chyp'y f0 f1 f2 f3 b0 f4 c? / c= chyp'y f0 f1 f2 f3 b0
+ |- (((int_le (int_of_num (NUMERAL _0))) (int_of_num n)) ==> (((int_add (int_of_num m)) ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((int_add (int_of_num m)) ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c= cint_add cint_of_num f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0 cint_add cint_of_num f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((((POWER (face_map H)) ((SUC ((((hyp'm H) NF) L) x)) + (SUC d))) x) IN (darts_of_family NF)) = ((((POWER (face_map H)) ((SUC d) + (SUC ((((hyp'm H) NF) L) x)))) x) IN (darts_of_family NF)))
T c= cIN cPOWER * part cface_map f0 c+ cSUC chyp'm f0 f1 f2 f3 cSUC f4 f3 * part cdarts_of_family f1 cIN cPOWER * part cface_map f0 c+ cSUC f4 cSUC chyp'm f0 f1 f2 f3 f3 * part cdarts_of_family f1
+ (is_restricted H) |- (((!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL _0))) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))) = (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL _0))) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF)))))
T c==> cis_restricted f0 c= c==> ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL c_0 cIN cPOWER * part cface_map f0 b0 f1 * part cdarts_of_family f2 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL c_0 cIN cPOWER * part cface_map f0 b0 f1 * part cdarts_of_family f2
+ |- (((!n. (((SUC m) + (SUC n)) = (m + (SUC (SUC n))))) ==> ((\n. (((SUC m) + (SUC n)) = (m + (SUC (SUC n))))) n)) = ((\n. (((SUC m) + (SUC n)) = (m + (SUC (SUC n))))) n))
T c= c==> ! c= c+ cSUC f0 cSUC b0 c+ f0 cSUC cSUC b0 * / c= c+ cSUC f0 cSUC b0 c+ f0 cSUC cSUC b0 f1 * / c= c+ cSUC f0 cSUC b0 c+ f0 cSUC cSUC b0 f1
+ (!NF. (!L. (!x. ((((in_dart_of_loop x) L) /\ (L IN NF)) ==> (x IN (darts_of_family NF)))))) |- ((\L. (!x. ((((in_dart_of_loop x) L) /\ (L IN NF)) ==> (x IN (darts_of_family NF))))) L)
T c==> ! ! ! c==> c/\ cin_dart_of_loop b2 b1 cIN b1 b0 cIN b2 * part cdarts_of_family b0 * / ! c==> c/\ cin_dart_of_loop b1 b0 cIN b0 f0 cIN b1 * part cdarts_of_family f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((is_normal H) NF), ((((is_split_condition H) NF) L) x) |- ((((((POWER (face_map H)) (SUC m)) x) IN (dart H)) ==> (((((POWER (face_map H)) (SUC p)) y) IN (((node H) y) INTER ((face H) y))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF)))))) = (((((POWER (face_map H)) (SUC p)) y) IN (((node H) y) INTER ((face H) y))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))))
T c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part cfinal_loops f2 f1 c/\ cin_dart_of_loop f3 f0 c= chead_of_atom f2 f1 f3 f3 c==> cis_normal f2 f1 c==> cis_split_condition f2 f1 f0 f3 c= c==> cIN cPOWER * part cface_map f2 cSUC f4 f3 * part cdart f2 c==> cIN cPOWER * part cface_map f2 cSUC f5 f6 * * part cINTER * * part cnode f2 f6 * * part cface f2 f6 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f5 cIN cPOWER * part cface_map f2 b0 f6 * part cdarts_of_family f1 c==> cIN cPOWER * part cface_map f2 cSUC f5 f6 * * part cINTER * * part cnode f2 f6 * * part cface f2 f6 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f5 cIN cPOWER * part cface_map f2 b0 f6 * part cdarts_of_family f1
- |- ((((((hyp'p H) NF) L) x) = p) = ((\p. (((((hyp'p H) NF) L) x) = p)) p))
T c= c= chyp'p f0 f1 f2 f3 f4 * / c= chyp'p f0 f1 f2 f3 b0 f4
+ (~ (p = (NUMERAL _0))), (((((hyp'm H) NF) L) x) = m), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((((is_split_condition H) NF) L) x) |- (((((POWER (face_map H)) p) y) = (((POWER (face_map H)) m) x)) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF)))))
T c==> c~ c= f0 cNUMERAL c_0 c==> c= chyp'm f1 f2 f3 f4 f5 c==> c/\ cIN f3 f2 c/\ c~ cIN f3 * * part cfinal_loops f1 f2 c/\ cin_dart_of_loop f4 f3 c= chead_of_atom f1 f2 f4 f4 c==> cis_split_condition f1 f2 f3 f4 c==> c= cPOWER * part cface_map f1 f0 f6 cPOWER * part cface_map f1 f5 f4 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f0 cIN cPOWER * part cface_map f1 b0 f6 * part cdarts_of_family f2
+ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((((is_split_condition H) NF) L) x) |- ((((POWER (face_map H)) ((((hyp'm H) NF) L) x)) x) IN (darts_of_family NF))
T c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part cfinal_loops f2 f1 c/\ cin_dart_of_loop f3 f0 c= chead_of_atom f2 f1 f3 f3 c==> cis_split_condition f2 f1 f0 f3 cIN cPOWER * part cface_map f2 chyp'm f2 f1 f0 f3 f3 * part cdarts_of_family f1
- |- (((!q'. ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) = p') ==> ((p' ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (p' ==> q'))))) ==> ((\q'. ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) = p') ==> ((p' ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (p' ==> q'))))) q')) = ((\q'. ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) = p') ==> ((p' ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 f5 c==> c==> f5 c= c< chyp'p f0 f2 f3 f4 cSUC f1 b0 c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> f5 b0 * / c==> c= cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 f5 c==> c==> f5 c= c< chyp'p f0 f2 f3 f4 cSUC f1 b0 c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> f5 b0 f6 * / c==> c= cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 f5 c==> c==> f5 c= c< chyp'p f0 f2 f3 f4 cSUC f1 b0 c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> f5 b0 f6
+ (((real_ge (real_of_int _2501817)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _2501817)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501817))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501817))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _2501817)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((node H) y) = ((node H) (((POWER (face_map H)) (SUC p)) y))) |- (((node H) (((POWER (face_map H)) (SUC p)) y)) = ((node H) y))
T c==> c= * * part cnode f0 f1 * * part cnode f0 cPOWER * part cface_map f0 cSUC f2 f1 c= * * part cnode f0 cPOWER * part cface_map f0 cSUC f2 f1 * * part cnode f0 f1
+ |- (((!f. (!g. (!x. (((f o g) x) = (f (g x)))))) ==> ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f)) = ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f))
T c= c==> ! ! ! c= co b0 b1 b2 * b0 * b1 b2 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0
+ |- (((m < (SUC m)) ==> (m <= (SUC m))) = (m <= (SUC m)))
T c= c==> c< f0 cSUC f0 c<= f0 cSUC f0 c<= f0 cSUC f0
+ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))) |- (((in_dart_of_loop (((POWER (loop_map L)) m) x)) L) = (((in_dart_of_loop (((POWER (loop_map L)) m) x)) L) /\ (L IN NF)))
T c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part cfinal_loops f2 f1 c/\ cin_dart_of_loop f3 f0 c= chead_of_atom f2 f1 f3 f3 c= cin_dart_of_loop cPOWER * part cloop_map f0 f4 f3 f0 c/\ cin_dart_of_loop cPOWER * part cloop_map f0 f4 f3 f0 cIN f0 f1
+ (~ (p = (NUMERAL _0))) |- (((((POWER (loop_map L)) m) x) IN (darts_of_family NF)) = ((((NUMERAL (BIT1 _0)) <= p) /\ (p <= p)) /\ ((((POWER (loop_map L)) m) x) IN (darts_of_family NF))))
T c==> c~ c= f0 cNUMERAL c_0 c= cIN cPOWER * part cloop_map f1 f2 f3 * part cdarts_of_family f4 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 f0 cIN cPOWER * part cloop_map f1 f2 f3 * part cdarts_of_family f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((node H) y) = ((node H) (((POWER (face_map H)) (SUC p)) y))), (((((hyp'm H) NF) L) x) = m), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((is_normal H) NF), ((((is_split_condition H) NF) L) x) |- ((((node H) y) = ((node H) (((POWER (face_map H)) (SUC p)) y))) /\ (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF)))))
T c==> cis_restricted f0 c==> c= chyp'y f0 f1 f2 f3 f4 c==> c= * * part cnode f0 f4 * * part cnode f0 cPOWER * part cface_map f0 cSUC f5 f4 c==> c= chyp'm f0 f1 f2 f3 f6 c==> c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3 c==> cis_normal f0 f1 c==> cis_split_condition f0 f1 f2 f3 c/\ c= * * part cnode f0 f4 * * part cnode f0 cPOWER * part cface_map f0 cSUC f5 f4 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f5 cIN cPOWER * part cface_map f0 b0 f4 * part cdarts_of_family f1
+ (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((node H) y) = ((node H) (((POWER (face_map H)) (SUC p)) y))), (((((hyp'm H) NF) L) x) = m), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((is_normal H) NF), ((((is_split_condition H) NF) L) x) |- (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))
T c==> cis_restricted f0 c==> c= chyp'y f0 f1 f2 f3 f4 c==> c= * * part cnode f0 f4 * * part cnode f0 cPOWER * part cface_map f0 cSUC f5 f4 c==> c= chyp'm f0 f1 f2 f3 f6 c==> c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3 c==> cis_normal f0 f1 c==> cis_split_condition f0 f1 f2 f3 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f5 cIN cPOWER * part cface_map f0 b0 f4 * part cdarts_of_family f1
- |- ((((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d)))) ==> (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> q')))) = (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> q'))))
T c= c==> c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c= c< chyp'p f0 f2 f3 f4 cSUC f1 f5 c= c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 f5 c==> c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c= c< chyp'p f0 f2 f3 f4 cSUC f1 f5 c= c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 f5
+ (!L. (!x. (!k. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop (((POWER (loop_map L)) k) x)) L))))) |- ((\k. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop (((POWER (loop_map L)) k) x)) L))) k)
T c==> ! ! ! c==> cin_dart_of_loop b1 b0 cin_dart_of_loop cPOWER * part cloop_map b0 b2 b1 b0 * / c==> cin_dart_of_loop f0 f1 cin_dart_of_loop cPOWER * part cloop_map f1 b0 f0 f1 f2
+ (is_restricted H) |- (!x. ((x IN (dart H)) ==> ((((node H) x) INTER ((face H) x)) = (x INSERT EMPTY))))
T c==> cis_restricted f0 ! c==> cIN b0 * part cdart f0 c= * * part cINTER * * part cnode f0 b0 * * part cface f0 b0 * * part cINSERT b0 part cEMPTY
+ (((((hyp'm H) NF) L) x) = m), ((((is_split_condition H) NF) L) x) |- ((\i. ((i <= (SUC m)) ==> ((((POWER (loop_map L)) i) x) = (((POWER (face_map H)) i) x)))) i)
T c==> c= chyp'm f0 f1 f2 f3 f4 c==> cis_split_condition f0 f1 f2 f3 * / c==> c<= b0 cSUC f4 c= cPOWER * part cloop_map f2 b0 f3 cPOWER * part cface_map f0 b0 f3 f5
+ |- ((((((hyp'y H) NF) L) x) = ((((hyp'y H) NF) L) x)) = ((\y. (((((hyp'y H) NF) L) x) = y)) ((((hyp'y H) NF) L) x)))
T c= c= chyp'y f0 f1 f2 f3 chyp'y f0 f1 f2 f3 * / c= chyp'y f0 f1 f2 f3 b0 chyp'y f0 f1 f2 f3
- |- (!y. (((\y. (((((hyp'y H) NF) L) x) = y)) y) ==> (?y. (((((hyp'y H) NF) L) x) = y))))
T c==> * / c= chyp'y f0 f1 f2 f3 b0 f4 c? / c= chyp'y f0 f1 f2 f3 b0
+ |- ((\n. ((m + n) = (n + m))) n)
T * / c= c+ f0 b0 c+ b0 f0 f1
+ (((((hyp'y H) NF) L) x) = y) |- (((((node H) y) = ((node H) (((POWER (face_map H)) (SUC p)) y))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))) = ((((node H) ((((hyp'y H) NF) L) x)) = ((node H) (((POWER (face_map H)) (SUC p)) ((((hyp'y H) NF) L) x)))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF))))))
T c==> c= chyp'y f0 f1 f2 f3 f4 c= c==> c= * * part cnode f0 f4 * * part cnode f0 cPOWER * part cface_map f0 cSUC f5 f4 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f5 cIN cPOWER * part cface_map f0 b0 f4 * part cdarts_of_family f1 c==> c= * * part cnode f0 chyp'y f0 f1 f2 f3 * * part cnode f0 cPOWER * part cface_map f0 cSUC f5 chyp'y f0 f1 f2 f3 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f5 cIN cPOWER * part cface_map f0 b0 chyp'y f0 f1 f2 f3 * part cdarts_of_family f1
+ ((((is_split_condition H) NF) L) x) |- ((((in_dart_of_loop x) L) ==> (!k. ((in_dart_of_loop (((POWER (loop_map L)) k) x)) L))) = (!k. ((in_dart_of_loop (((POWER (loop_map L)) k) x)) L)))
T c==> cis_split_condition f0 f1 f2 f3 c= c==> cin_dart_of_loop f3 f2 ! cin_dart_of_loop cPOWER * part cloop_map f2 b0 f3 f2 ! cin_dart_of_loop cPOWER * part cloop_map f2 b0 f3 f2
+ (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'm H) NF) L) x) = m), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((((is_split_condition H) NF) L) x) |- (((((POWER (face_map H)) (SUC m)) x) IN (dart H)) ==> (((((POWER (face_map H)) (SUC p)) y) IN (((node H) y) INTER ((face H) y))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))))
T c==> cis_restricted f0 c==> c= chyp'y f0 f1 f2 f3 f4 c==> c= chyp'm f0 f1 f2 f3 f5 c==> c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3 c==> cis_split_condition f0 f1 f2 f3 c==> cIN cPOWER * part cface_map f0 cSUC f5 f3 * part cdart f0 c==> cIN cPOWER * part cface_map f0 cSUC f6 f4 * * part cINTER * * part cnode f0 f4 * * part cface f0 f4 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f6 cIN cPOWER * part cface_map f0 b0 f4 * part cdarts_of_family f1
- |- ((\q'. (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = p') ==> ((p' ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (p' ==> q'))))) q')
T * / c==> c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 f5 c==> c==> f5 c= c< chyp'p f0 f2 f3 f4 cSUC f1 b0 c= c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> f5 b0 f6
+ (~ (p = (NUMERAL _0))) |- ((NUMERAL (BIT1 _0)) <= p)
T c==> c~ c= f0 cNUMERAL c_0 c<= cNUMERAL cBIT1 c_0 f0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = p') ==> ((p' ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (p' ==> q'))))
T c==> c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 f5 c==> c==> f5 c= c< chyp'p f0 f2 f3 f4 cSUC f1 f6 c= c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> f5 f6
+ (is_restricted H), (((((hyp'm H) NF) L) x) = m), ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((is_normal H) NF), ((((is_split_condition H) NF) L) x) |- ((((((hyp'y H) NF) L) x) = y) ==> ((((node H) ((((hyp'y H) NF) L) x)) = ((node H) (((POWER (face_map H)) (SUC p)) ((((hyp'y H) NF) L) x)))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= p)) /\ ((((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF))))))
T c==> cis_restricted f0 c==> c= chyp'm f0 f1 f2 f3 f4 c==> c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3 c==> cis_normal f0 f1 c==> cis_split_condition f0 f1 f2 f3 c==> c= chyp'y f0 f1 f2 f3 f5 c==> c= * * part cnode f0 chyp'y f0 f1 f2 f3 * * part cnode f0 cPOWER * part cface_map f0 cSUC f6 chyp'y f0 f1 f2 f3 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f6 cIN cPOWER * part cface_map f0 b0 chyp'y f0 f1 f2 f3 * part cdarts_of_family f1
+ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((((is_split_condition H) NF) L) x) |- ((((POWER (face_map H)) ((((hyp'm H) NF) L) x)) (((POWER (face_map H)) (CARD ((face H) x))) x)) IN (darts_of_family NF))
T c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part cfinal_loops f2 f1 c/\ cin_dart_of_loop f3 f0 c= chead_of_atom f2 f1 f3 f3 c==> cis_split_condition f2 f1 f0 f3 cIN cPOWER * part cface_map f2 chyp'm f2 f1 f0 f3 cPOWER * part cface_map f2 cCARD * * part cface f2 f3 f3 * part cdarts_of_family f1
- (((((hyp'y H) NF) L) x) = y) |- ((\y. (((((hyp'y H) NF) L) x) = y)) y)
T c==> c= chyp'y f0 f1 f2 f3 f4 * / c= chyp'y f0 f1 f2 f3 b0 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((\p. (((((hyp'p H) NF) L) x) = p)) p) |- (((((((hyp'p H) NF) L) x) = p) ==> (?p. (((((hyp'p H) NF) L) x) = p))) = (?p. (((((hyp'p H) NF) L) x) = p)))
T c==> * / c= chyp'p f0 f1 f2 f3 b0 f4 c= c==> c= chyp'p f0 f1 f2 f3 f4 c? / c= chyp'p f0 f1 f2 f3 b0 c? / c= chyp'p f0 f1 f2 f3 b0
+ (is_restricted H) |- (((!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))) ==> ((NUMERAL (BIT1 _0)) < (CARD ((face H) x)))) = ((NUMERAL (BIT1 _0)) < (CARD ((face H) x))))
T c==> cis_restricted f0 c= c==> ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c< cNUMERAL cBIT1 c_0 cCARD * * part cface f0 f1 c< cNUMERAL cBIT1 c_0 cCARD * * part cface f0 f1
+ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x))))) |- ((((y IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) y)))) ==> (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL _0))) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF))))) = (?i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL _0))) /\ ((((POWER (face_map H)) i) y) IN (darts_of_family NF)))))
T c==> ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0 c= c==> c==> cIN f1 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 f1 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL c_0 cIN cPOWER * part cface_map f0 b0 f1 * part cdarts_of_family f2 c? / c/\ c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL c_0 cIN cPOWER * part cface_map f0 b0 f1 * part cdarts_of_family f2
+ |- ((\m. (!n. (!x. ((((POWER (face_map H)) m) (((POWER (face_map H)) n) x)) = (((POWER (face_map H)) (m + n)) x))))) m)
T * / ! ! c= cPOWER * part cface_map f0 b0 cPOWER * part cface_map f0 b1 b2 cPOWER * part cface_map f0 c+ b0 b1 b2 f1
+ (!H. (!x. (!n. ((x IN (dart H)) ==> ((((POWER (face_map H)) n) x) IN (dart H)))))), (x IN (dart H)) |- ((((POWER (face_map H)) n) x) IN (dart H))
T c==> ! ! ! c==> cIN b1 * part cdart b0 cIN cPOWER * part cface_map b0 b2 b1 * part cdart b0 c==> cIN f0 * part cdart f1 cIN cPOWER * part cface_map f1 f2 f0 * part cdart f1
- (((NUMERAL (BIT1 _0)) <= n) = ((NUMERAL _0) < n)) |- (((NUMERAL _0) < n) = ((NUMERAL (BIT1 _0)) <= n))
T c==> c= c<= cNUMERAL cBIT1 c_0 f0 c< cNUMERAL c_0 f0 c= c< cNUMERAL c_0 f0 c<= cNUMERAL cBIT1 c_0 f0
- |- ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = (((((hyp'p H) NF) L) x) < (SUC d))))
T c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c= c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
- |- (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = (((((hyp'p H) NF) L) x) < (SUC d)))) ==> ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))))) = ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d)))))
T c= c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c= c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1
- |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- ((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) |- ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d)))
T c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- (((real_ge (real_of_int _2501817)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _2501817)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501817))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501817))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) = p') ==> ((p' ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (p' ==> q'))))
T c==> c= cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 f5 c==> c==> f5 c= c< chyp'p f0 f2 f3 f4 cSUC f1 f6 c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> f5 f6
- (((real_ge (real_of_int _2501817)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _2501817)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501817))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _2501817)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((\p. (((((hyp'p H) NF) L) x) = p)) p) ==> (?p. (((((hyp'p H) NF) L) x) = p))) = T)
T c= c==> * / c= chyp'p f0 f1 f2 f3 b0 f4 c? / c= chyp'p f0 f1 f2 f3 b0 cT
- |- ((\p'. (!q'. (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = p') ==> ((p' ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 b0 c==> c==> b0 c= c< chyp'p f0 f2 f3 f4 cSUC f1 b1 c= c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> b0 b1 f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. (((\m. (((((hyp'm H) NF) L) x) = m)) x) ==> (?m. (((((hyp'm H) NF) L) x) = m)))) ==> ((?m. (((((hyp'm H) NF) L) x) = m)) ==> (?m. (((((hyp'm H) NF) L) x) = m)))) = ((?m. (((((hyp'm H) NF) L) x) = m)) ==> (?m. (((((hyp'm H) NF) L) x) = m))))
T c= c==> ! c==> * / c= chyp'm f0 f1 f2 f3 b1 b0 c? / c= chyp'm f0 f1 f2 f3 b1 c==> c? / c= chyp'm f0 f1 f2 f3 b0 c? / c= chyp'm f0 f1 f2 f3 b0 c==> c? / c= chyp'm f0 f1 f2 f3 b0 c? / c= chyp'm f0 f1 f2 f3 b0
- |- ((PRE (NUMERAL _0)) = (NUMERAL _0))
T c= cPRE cNUMERAL c_0 cNUMERAL c_0
- |- ((?p. (((((hyp'p H) NF) L) x) = p)) ==> (?p. (((((hyp'p H) NF) L) x) = p)))
T c==> c? / c= chyp'p f0 f1 f2 f3 b0 c? / c= chyp'p f0 f1 f2 f3 b0
- |- ((real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((((hyp'p H) NF) L) x) = p) |- ((((((hyp'p H) NF) L) x) = p) /\ (?p. (((((hyp'p H) NF) L) x) = p)))
T c==> c= chyp'p f0 f1 f2 f3 f4 c/\ c= chyp'p f0 f1 f2 f3 f4 c? / c= chyp'p f0 f1 f2 f3 b0
- (((real_ge (real_of_int _2501817)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _2501817)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501817))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2501817)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((SUC (NUMERAL (BIT0 (BIT1 _0)))) <= (CARD ((face H) x))) ==> ((NUMERAL (BIT1 _0)) < (CARD ((face H) x)))) = T)
T c= c==> c<= cSUC cNUMERAL cBIT0 cBIT1 c_0 cCARD * * part cface f0 f1 c< cNUMERAL cBIT1 c_0 cCARD * * part cface f0 f1 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((((hyp'y H) NF) L) x) = y) |- ((((((hyp'y H) NF) L) x) = y) /\ (?y. (((((hyp'y H) NF) L) x) = y)))
T c==> c= chyp'y f0 f1 f2 f3 f4 c/\ c= chyp'y f0 f1 f2 f3 f4 c? / c= chyp'y f0 f1 f2 f3 b0
- |- ((((\m. (((((hyp'm H) NF) L) x) = m)) m) ==> (?m. (((((hyp'm H) NF) L) x) = m))) = T)
T c= c==> * / c= chyp'm f0 f1 f2 f3 b0 f4 c? / c= chyp'm f0 f1 f2 f3 b0 cT
- |- ((?y. (((((hyp'y H) NF) L) x) = y)) ==> (?y. (((((hyp'y H) NF) L) x) = y)))
T c==> c? / c= chyp'y f0 f1 f2 f3 b0 c? / c= chyp'y f0 f1 f2 f3 b0
- |- (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> q')))
T c==> c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c= c< chyp'p f0 f2 f3 f4 cSUC f1 f5 c= c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 f5
- (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))), ((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) |- (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) /\ ((((((hyp'p H) NF) L) x) < (SUC d)) = T))
T c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c/\ cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c= c< chyp'p f0 f2 f3 f4 cSUC f1 cT
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _2501797)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2501798)) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))) |- ((real_ge (real_of_int _2501798)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- ((~ (?x. (P x))) = (!x. (~ (P x)))) |- ((!x. (~ (P x))) = (~ (?x. (P x))))
T c==> c= c~ c? / * f0 b0 ! c~ * f0 b0 c= ! c~ * f0 b0 c~ c? / * f0 b0
- (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))), ((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) |- ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) /\ (((((hyp'p H) NF) L) x) < (SUC d)))
T c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c/\ c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (F = (~ T))
T c= cF c~ cT
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- (((real_ge (real_of_int _2501817)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _2501817)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501817))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501817))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- ((\m. (((((hyp'm H) NF) L) x) = m)) m) |- (((((((hyp'm H) NF) L) x) = m) ==> (?m. (((((hyp'm H) NF) L) x) = m))) = (?m. (((((hyp'm H) NF) L) x) = m)))
T c==> * / c= chyp'm f0 f1 f2 f3 b0 f4 c= c==> c= chyp'm f0 f1 f2 f3 f4 c? / c= chyp'm f0 f1 f2 f3 b0 c? / c= chyp'm f0 f1 f2 f3 b0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ T) = F)
T c= c~ cT cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_of_num (NUMERAL (BIT1 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))), ((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) |- (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) /\ (((((hyp'p H) NF) L) x) < (SUC d)))
T c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c/\ cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1
- |- (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) = ((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF))) ==> ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> q')))) = ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> q'))))
T c= c==> c= cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c= c< chyp'p f0 f2 f3 f4 cSUC f1 f5 c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 f5 c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c= c< chyp'p f0 f2 f3 f4 cSUC f1 f5 c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((((hyp'p H) NF) L) x) = p) ==> (?p. (((((hyp'p H) NF) L) x) = p)))
T c==> c= chyp'p f0 f1 f2 f3 f4 c? / c= chyp'p f0 f1 f2 f3 b0
- |- (((real_ge ((real_add (real_of_int _2501817)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2501817)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!p'. (!q'. ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) = p') ==> ((p' ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) = p') ==> ((p' ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) = p') ==> ((p' ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 b0 c==> c==> b0 c= c< chyp'p f0 f2 f3 f4 cSUC f1 b1 c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> b0 b1 * / ! c==> c= cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 b0 c==> c==> b0 c= c< chyp'p f0 f2 f3 f4 cSUC f1 b1 c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> b0 b1 f5 * / ! c==> c= cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 b0 c==> c==> b0 c= c< chyp'p f0 f2 f3 f4 cSUC f1 b1 c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> b0 b1 f5
- (((((hyp'm H) NF) L) x) = m) |- ((((((hyp'm H) NF) L) x) = m) /\ (?m. (((((hyp'm H) NF) L) x) = m)))
T c==> c= chyp'm f0 f1 f2 f3 f4 c/\ c= chyp'm f0 f1 f2 f3 f4 c? / c= chyp'm f0 f1 f2 f3 b0
- |- ((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))
T c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) |- ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) /\ (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))))
T c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c/\ c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1
- ((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) |- (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) = T)
T c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c= cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 cT
- (((real_ge (real_of_int _2501817)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _2501817)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501817))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2501817)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _2501817)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _2501817)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> q')))
T c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c= c< chyp'p f0 f2 f3 f4 cSUC f1 f5 c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 f5
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!p'. (!q'. (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = p') ==> ((p' ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = p') ==> ((p' ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = p') ==> ((p' ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = q')) ==> (((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((hyp'p H) NF) L) x) < (SUC d))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 b0 c==> c==> b0 c= c< chyp'p f0 f2 f3 f4 cSUC f1 b1 c= c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> b0 b1 * / ! c==> c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 b0 c==> c==> b0 c= c< chyp'p f0 f2 f3 f4 cSUC f1 b1 c= c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> b0 b1 f5 * / ! c==> c= c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 b0 c==> c==> b0 c= c< chyp'p f0 f2 f3 f4 cSUC f1 b1 c= c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> b0 b1 f5
- ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((NUMERAL (BIT1 _0)) < (CARD ((face H) x))), ((((is_split_condition H) NF) L) x) |- (((NUMERAL (BIT1 _0)) < (CARD ((face H) x))) /\ ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x))))
T c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part cfinal_loops f2 f1 c/\ cin_dart_of_loop f3 f0 c= chead_of_atom f2 f1 f3 f3 c==> c< cNUMERAL cBIT1 c_0 cCARD * * part cface f2 f3 c==> cis_split_condition f2 f1 f0 f3 c/\ c< cNUMERAL cBIT1 c_0 cCARD * * part cface f2 f3 c< cSUC chyp'p f2 f1 f0 f3 cCARD * * part cface f2 f3
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _2501817)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _2501817)) (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501817))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501817))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501817))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2501817))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((((hyp'm H) NF) L) x) = m) ==> (?m. (((((hyp'm H) NF) L) x) = m)))
T c==> c= chyp'm f0 f1 f2 f3 f4 c? / c= chyp'm f0 f1 f2 f3 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!p'. (!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3
- |- (((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q')))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3 cT
- |- ((((((hyp'y H) NF) L) x) = y) = ((\y. (((((hyp'y H) NF) L) x) = y)) y))
T c= c= chyp'y f0 f1 f2 f3 f4 * / c= chyp'y f0 f1 f2 f3 b0 f4
- ((\y. (((((hyp'y H) NF) L) x) = y)) y) |- (((((((hyp'y H) NF) L) x) = y) ==> (?y. (((((hyp'y H) NF) L) x) = y))) = (?y. (((((hyp'y H) NF) L) x) = y)))
T c==> * / c= chyp'y f0 f1 f2 f3 b0 f4 c= c==> c= chyp'y f0 f1 f2 f3 f4 c? / c= chyp'y f0 f1 f2 f3 b0 c? / c= chyp'y f0 f1 f2 f3 b0
- ((\p. (((((hyp'p H) NF) L) x) = p)) p) |- (((\p. (((((hyp'p H) NF) L) x) = p)) p) /\ (?p. (((((hyp'p H) NF) L) x) = p)))
T c==> * / c= chyp'p f0 f1 f2 f3 b0 f4 c/\ * / c= chyp'p f0 f1 f2 f3 b0 f4 c? / c= chyp'p f0 f1 f2 f3 b0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((((hyp'm H) NF) L) x) = m) = ((\m. (((((hyp'm H) NF) L) x) = m)) m))
T c= c= chyp'm f0 f1 f2 f3 f4 * / c= chyp'm f0 f1 f2 f3 b0 f4
- |- (((!x. (((\p. (((((hyp'p H) NF) L) x) = p)) x) ==> (?p. (((((hyp'p H) NF) L) x) = p)))) ==> ((?p. (((((hyp'p H) NF) L) x) = p)) ==> (?p. (((((hyp'p H) NF) L) x) = p)))) = ((?p. (((((hyp'p H) NF) L) x) = p)) ==> (?p. (((((hyp'p H) NF) L) x) = p))))
T c= c==> ! c==> * / c= chyp'p f0 f1 f2 f3 b1 b0 c? / c= chyp'p f0 f1 f2 f3 b1 c==> c? / c= chyp'p f0 f1 f2 f3 b0 c? / c= chyp'p f0 f1 f2 f3 b0 c==> c? / c= chyp'p f0 f1 f2 f3 b0 c? / c= chyp'p f0 f1 f2 f3 b0
- |- (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> ((((((hyp'p H) NF) L) x) < (SUC d)) = (((((hyp'p H) NF) L) x) < (SUC d))))
T c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c= c< chyp'p f0 f2 f3 f4 cSUC f1 c< chyp'p f0 f2 f3 f4 cSUC f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (~ (~ T))
T c~ c~ cT
- ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))), ((((is_split_condition H) NF) L) x) |- (((NUMERAL (BIT1 _0)) < (CARD ((face H) x))) ==> ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x))))
T c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part cfinal_loops f2 f1 c/\ cin_dart_of_loop f3 f0 c= chead_of_atom f2 f1 f3 f3 c==> cis_split_condition f2 f1 f0 f3 c==> c< cNUMERAL cBIT1 c_0 cCARD * * part cface f2 f3 c< cSUC chyp'p f2 f1 f0 f3 cCARD * * part cface f2 f3
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- ((\m. (((((hyp'm H) NF) L) x) = m)) m) |- (((\m. (((((hyp'm H) NF) L) x) = m)) m) /\ (?m. (((((hyp'm H) NF) L) x) = m)))
T c==> * / c= chyp'm f0 f1 f2 f3 b0 f4 c/\ * / c= chyp'm f0 f1 f2 f3 b0 f4 c? / c= chyp'm f0 f1 f2 f3 b0
- |- ((((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))) ==> (((((POWER (face_map H)) (SUC d)) ((((hyp'y H) NF) L) x)) IN (darts_of_family NF)) ==> (((((hyp'p H) NF) L) x) < (SUC d))))
T c==> c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1 c==> cIN cPOWER * part cface_map f0 cSUC f1 chyp'y f0 f2 f3 f4 * part cdarts_of_family f2 c< chyp'p f0 f2 f3 f4 cSUC f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))) |- (T = (L IN NF))
T c==> c/\ cIN f0 f1 c/\ c~ cIN f0 * * part cfinal_loops f2 f1 c/\ cin_dart_of_loop f3 f0 c= chead_of_atom f2 f1 f3 f3 c= cT cIN f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT1 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((?m. (((((hyp'm H) NF) L) x) = m)) ==> (?m. (((((hyp'm H) NF) L) x) = m)))
T c==> c? / c= chyp'm f0 f1 f2 f3 b0 c? / c= chyp'm f0 f1 f2 f3 b0
- |- (!m. (((\m. (((((hyp'm H) NF) L) x) = m)) m) ==> (?m. (((((hyp'm H) NF) L) x) = m))))
T c==> * / c= chyp'm f0 f1 f2 f3 b0 f4 c? / c= chyp'm f0 f1 f2 f3 b0
