N LIM_MUL
C |- (!net. (!f. (!l. (!c. (!d. (((((--> (lift o c)) (lift d)) net) /\ (((--> f) l) net)) ==> (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net)))))))
T c==> c/\ c--> * * part co part clift f0 clift f1 f2 c--> f3 f4 f2 c--> / c% * f0 b0 * f3 b0 c% f1 f4 f2
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D LIFT_DROP
A |- ((!x. ((lift (drop x)) = x)) /\ (!x. ((drop (lift x)) = x)))
T c/\ ! c= clift cdrop b0 b0 ! c= cdrop clift b0 b0
D BILINEAR_DROP_MUL
A |- (bilinear (\x. (\y. ((% (drop x)) y))))
T cbilinear / / c% cdrop b0 b1
D LIM_BILINEAR
A |- (!net. (!h. (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ ((((--> g) m) net) /\ (bilinear h))) ==> (((--> (\x. ((h (f x)) (g x)))) ((h l) m)) net))))))))
T c==> c/\ c--> f0 f1 f2 c/\ c--> f3 f4 f2 cbilinear f5 c--> / * * f5 * f0 b0 * f3 b0 * * f5 f1 f4 f2
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_mul ((real_add (drop x)) (drop y'))) (y $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul (drop x)) (y $ i))) $ i)) ((lambdai. ((real_mul (drop y')) (y $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul creal_add cdrop f1 cdrop f2 c$ f3 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul cdrop f1 c$ f3 b1 b0 c$ clambda / creal_mul cdrop f2 c$ f3 b1 b0 f0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_mul ((real_mul c') (drop x))) (y $ i))) $ i) = ((lambdai. ((real_mul c') ((lambdai. ((real_mul (drop x)) (y $ i))) $ i))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul c') (drop x))) y) $ i) = (((% c') ((% (drop x)) y)) $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul creal_mul f1 cdrop f2 c$ f3 b0 f0 c$ clambda / creal_mul f1 c$ clambda / creal_mul cdrop f2 c$ f3 b1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_mul f1 cdrop f2 f3 f0 c$ c% f1 c% cdrop f2 f3 f0
- |- ((((% (drop x)) ((% c') x')) = ((% c') ((% (drop x)) x'))) = T)
T c= c= c% cdrop f0 c% f1 f2 c% f1 c% cdrop f0 f2 cT
+ (((--> f) l) net) |- ((((--> f) l) net) = T)
T c==> c--> f0 f1 f2 c= c--> f0 f1 f2 cT
- |- (((!x. ((lift (drop x)) = x)) ==> ((\x. ((lift (drop x)) = x)) x)) = ((\x. ((lift (drop x)) = x)) x))
T c= c==> ! c= clift cdrop b0 b0 * / c= clift cdrop b0 b0 f0 * / c= clift cdrop b0 b0 f0
- (bilinear (\x. (\y. ((% (drop x)) y)))) |- (((bilinear (\x. (\y. ((% (drop x)) y)))) ==> (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net)) ==> (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net))
T c==> cbilinear / / c% cdrop b0 b1 c==> c==> cbilinear / / c% cdrop b0 b1 c--> / c% * f0 b0 * f1 b0 c% f2 f3 f4 c--> / c% * f0 b0 * f1 b0 c% f2 f3 f4
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_mul (drop x)) ((lambdai. ((real_add (x' $ i)) (y $ i))) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul (drop x)) (x' $ i))) $ i)) ((lambdai. ((real_mul (drop x)) (y $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul cdrop f1 c$ clambda / creal_add c$ f2 b1 c$ f3 b1 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul cdrop f1 c$ f2 b1 b0 c$ clambda / creal_mul cdrop f1 c$ f3 b1 b0 f0
- |- ((real_neg ((real_sub ((real_mul ((real_mul c') (drop x))) (y $ i))) ((real_mul c') ((real_mul (drop x)) (y $ i))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul creal_mul f0 cdrop f1 c$ f2 f3 creal_mul f0 creal_mul cdrop f1 c$ f2 f3 creal_of_num cNUMERAL c_0
+ |- (((!x. ((drop (lift x)) = x)) ==> ((\x. ((drop (lift x)) = x)) x)) = ((\x. ((drop (lift x)) = x)) x))
T c= c==> ! c= cdrop clift b0 b0 * / c= cdrop clift b0 b0 f0 * / c= cdrop clift b0 b0 f0
+ ((((--> (lift o c)) (lift d)) net) /\ (((--> f) l) net)), (((--> (lift o c)) (lift d)) net) |- (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net)
T c==> c/\ c--> * * part co part clift f0 clift f1 f2 c--> f3 f4 f2 c==> c--> * * part co part clift f0 clift f1 f2 c--> / c% * f0 b0 * f3 b0 c% f1 f4 f2
+ |- ((\h. (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ ((((--> g) m) net) /\ (bilinear h))) ==> (((--> (\x. ((h (f x)) (g x)))) ((h l) m)) net))))))) (\x. (\y. ((% (drop x)) y))))
T * / ! ! ! ! c==> c/\ c--> b1 b3 f0 c/\ c--> b2 b4 f0 cbilinear b0 c--> / * * b0 * b1 b5 * b2 b5 * * b0 b3 b4 f0 / / c% cdrop b0 b1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\l. (!m. (((((--> (lift o c)) l) net) /\ ((((--> f) m) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) ((lift o c) x)) (f x)))) (((\x. (\y. ((% (drop x)) y))) l) m)) net)))) (lift d))
T * / ! c==> c/\ c--> * * part co part clift f0 b0 f1 c/\ c--> f2 b1 f1 cbilinear / / c% cdrop b2 b3 c--> / * * / / c% cdrop b3 b4 co part clift f0 b2 * f2 b2 * * / / c% cdrop b2 b3 b0 b1 f1 clift f3
+ ((((--> (lift o c)) (lift d)) net) /\ (((--> f) l) net)) |- (((((--> (lift o c)) (lift d)) net) /\ (((--> f) l) net)) /\ (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net))
T c==> c/\ c--> * * part co part clift f0 clift f1 f2 c--> f3 f4 f2 c/\ c/\ c--> * * part co part clift f0 clift f1 f2 c--> f3 f4 f2 c--> / c% * f0 b0 * f3 b0 c% f1 f4 f2
- |- (((!y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y)))) ==> ((\y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y)))) y)) = ((\y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y)))) y))
T c= c==> ! c= cdrop cvector_add f0 b0 creal_add cdrop f0 cdrop b0 * / c= cdrop cvector_add f0 b0 creal_add cdrop f0 cdrop b0 f1 * / c= cdrop cvector_add f0 b0 creal_add cdrop f0 cdrop b0 f1
+ |- (((!f. (!g. (!l. (!m. (((((--> f) l) net) /\ ((((--> g) m) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) (f x)) (g x)))) (((\x. (\y. ((% (drop x)) y))) l) m)) net)))))) ==> ((\f. (!g. (!l. (!m. (((((--> f) l) net) /\ ((((--> g) m) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) (f x)) (g x)))) (((\x. (\y. ((% (drop x)) y))) l) m)) net)))))) (lift o c))) = ((\f. (!g. (!l. (!m. (((((--> f) l) net) /\ ((((--> g) m) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) (f x)) (g x)))) (((\x. (\y. ((% (drop x)) y))) l) m)) net)))))) (lift o c)))
T c= c==> ! ! ! ! c==> c/\ c--> b0 b2 f0 c/\ c--> b1 b3 f0 cbilinear / / c% cdrop b4 b5 c--> / * * / / c% cdrop b5 b6 * b0 b4 * b1 b4 * * / / c% cdrop b4 b5 b2 b3 f0 * / ! ! ! c==> c/\ c--> b0 b2 f0 c/\ c--> b1 b3 f0 cbilinear / / c% cdrop b4 b5 c--> / * * / / c% cdrop b5 b6 * b0 b4 * b1 b4 * * / / c% cdrop b4 b5 b2 b3 f0 * * part co part clift f1 * / ! ! ! c==> c/\ c--> b0 b2 f0 c/\ c--> b1 b3 f0 cbilinear / / c% cdrop b4 b5 c--> / * * / / c% cdrop b5 b6 * b0 b4 * b1 b4 * * / / c% cdrop b4 b5 b2 b3 f0 * * part co part clift f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ ((((--> g) m) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) (f x)) (g x)))) (((\x. (\y. ((% (drop x)) y))) l) m)) net))))))
T c==> c/\ c--> f0 f1 f2 c/\ c--> f3 f4 f2 cbilinear / / c% cdrop b0 b1 c--> / * * / / c% cdrop b1 b2 * f0 b0 * f3 b0 * * / / c% cdrop b0 b1 f1 f4 f2
- |- ((!y. (((% ((real_add (drop x)) (drop y))) y) = ((vector_add ((% (drop x)) y)) ((% (drop y)) y)))) = T)
T c= ! c= c% creal_add cdrop f0 cdrop b0 f1 cvector_add c% cdrop f0 f1 c% cdrop b0 f1 cT
- |- ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y)))
T c= cdrop cvector_add f0 f1 creal_add cdrop f0 cdrop f1
- |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul c') (drop x))) y) $ i) = (((% c') ((% (drop x)) y)) $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_mul f1 cdrop f2 f3 f0 c$ c% f1 c% cdrop f2 f3 f0 cT
- |- ((!x. ((!x. (!y. (((% (drop x)) ((vector_add x) y)) = ((vector_add ((% (drop x)) x)) ((% (drop x)) y))))) /\ (!c. (!x. (((% (drop x)) ((% c) x)) = ((% c) ((% (drop x)) x))))))) /\ (!y. ((!x. (!y. (((% ((real_add (drop x)) (drop y))) y) = ((vector_add ((% (drop x)) y)) ((% (drop y)) y))))) /\ (!c. (!x. (((% ((real_mul c) (drop x))) y) = ((% c) ((% (drop x)) y))))))))
T c/\ ! c/\ ! ! c= c% cdrop b0 cvector_add b1 b2 cvector_add c% cdrop b0 b1 c% cdrop b0 b2 ! ! c= c% cdrop b0 c% b1 b2 c% b1 c% cdrop b0 b2 ! c/\ ! ! c= c% creal_add cdrop b1 cdrop b2 b0 cvector_add c% cdrop b1 b0 c% cdrop b2 b0 ! ! c= c% creal_mul b1 cdrop b2 b0 c% b1 c% cdrop b2 b0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((--> f) l) net), (((--> (lift o c)) (lift d)) net) |- ((((bilinear (\x. (\y. ((% (drop x)) y)))) ==> (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net)) ==> (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net)) = ((((((--> (lift o c)) (lift d)) net) /\ ((((--> f) l) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) ((lift o c) x)) (f x)))) (((\x. (\y. ((% (drop x)) y))) (lift d)) l)) net)) ==> (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net)))
T c==> c--> f0 f1 f2 c==> c--> * * part co part clift f3 clift f4 f2 c= c==> c==> cbilinear / / c% cdrop b0 b1 c--> / c% * f3 b0 * f0 b0 c% f4 f1 f2 c--> / c% * f3 b0 * f0 b0 c% f4 f1 f2 c==> c==> c/\ c--> * * part co part clift f3 clift f4 f2 c/\ c--> f0 f1 f2 cbilinear / / c% cdrop b0 b1 c--> / * * / / c% cdrop b1 b2 co part clift f3 b0 * f0 b0 * * / / c% cdrop b0 b1 clift f4 f1 f2 c--> / c% * f3 b0 * f0 b0 c% f4 f1 f2
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
- |- ((!x. (((% (drop x)) ((% c') x)) = ((% c') ((% (drop x)) x)))) = T)
T c= ! c= c% cdrop f0 c% f1 b0 c% f1 c% cdrop f0 b0 cT
- |- ((drop ((% c) x)) = ((real_mul c) (drop x)))
T c= cdrop c% f0 f1 creal_mul f0 cdrop f1
- |- ((!i. t) = t)
T c= ! f0 f0
- |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ (((--> f) l) net), (((--> (lift o c)) (lift d)) net) |- ((((((--> (lift o c)) (lift d)) net) /\ ((((--> f) l) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) ((lift o c) x)) (f x)))) (((\x. (\y. ((% (drop x)) y))) (lift d)) l)) net)) ==> (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net))
T c==> c--> f0 f1 f2 c==> c--> * * part co part clift f3 clift f4 f2 c==> c==> c/\ c--> * * part co part clift f3 clift f4 f2 c/\ c--> f0 f1 f2 cbilinear / / c% cdrop b0 b1 c--> / * * / / c% cdrop b1 b2 co part clift f3 b0 * f0 b0 * * / / c% cdrop b0 b1 clift f4 f1 f2 c--> / c% * f3 b0 * f0 b0 c% f4 f1 f2
- |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_add (drop x)) (drop y'))) y) $ i) = (((vector_add ((% (drop x)) y)) ((% (drop y')) y)) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_add cdrop f1 cdrop f2 f3 f0 c$ cvector_add c% cdrop f1 f3 c% cdrop f2 f3 f0
- |- ((\x. (!y. ((drop ((vector_add x) y)) = ((real_add (drop x)) (drop y))))) x)
T * / ! c= cdrop cvector_add b0 b1 creal_add cdrop b0 cdrop b1 f0
- |- ((!c. (!x. (((% ((real_mul c) (drop x))) y) = ((% c) ((% (drop x)) y))))) = ((!x. (!y. (((% ((real_add (drop x)) (drop y))) y) = ((vector_add ((% (drop x)) y)) ((% (drop y)) y))))) /\ (!c. (!x. (((% ((real_mul c) (drop x))) y) = ((% c) ((% (drop x)) y)))))))
T c= ! ! c= c% creal_mul b0 cdrop b1 f0 c% b0 c% cdrop b1 f0 c/\ ! ! c= c% creal_add cdrop b0 cdrop b1 f0 cvector_add c% cdrop b0 f0 c% cdrop b1 f0 ! ! c= c% creal_mul b0 cdrop b1 f0 c% b0 c% cdrop b1 f0
- |- (((!f. ((linear f) = ((!x. (!y. ((f ((vector_add x) y)) = ((vector_add (f x)) (f y))))) /\ (!c. (!x. ((f ((% c) x)) = ((% c) (f x)))))))) ==> ((\f. ((linear f) = ((!x. (!y. ((f ((vector_add x) y)) = ((vector_add (f x)) (f y))))) /\ (!c. (!x. ((f ((% c) x)) = ((% c) (f x)))))))) f)) = ((\f. ((linear f) = ((!x. (!y. ((f ((vector_add x) y)) = ((vector_add (f x)) (f y))))) /\ (!c. (!x. ((f ((% c) x)) = ((% c) (f x)))))))) f))
T c= c==> ! c= clinear b0 c/\ ! ! c= * b0 cvector_add b1 b2 cvector_add * b0 b1 * b0 b2 ! ! c= * b0 c% b1 b2 c% b1 * b0 b2 * / c= clinear b0 c/\ ! ! c= * b0 cvector_add b1 b2 cvector_add * b0 b1 * b0 b2 ! ! c= * b0 c% b1 b2 c% b1 * b0 b2 f0 * / c= clinear b0 c/\ ! ! c= * b0 cvector_add b1 b2 cvector_add * b0 b1 * b0 b2 ! ! c= * b0 c% b1 b2 c% b1 * b0 b2 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (drop x)) ((vector_add x') y)) $ i) = (((vector_add ((% (drop x)) x')) ((% (drop x)) y)) $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% cdrop f1 cvector_add f2 f3 f0 c$ cvector_add c% cdrop f1 f2 c% cdrop f1 f3 f0 cT
- (~ (((real_mul (drop x)) ((real_mul c') (x' $ i))) = ((real_mul c') ((real_mul (drop x)) (x' $ i))))) |- ((~ (((real_mul (drop x)) ((real_mul c') (x' $ i))) = ((real_mul c') ((real_mul (drop x)) (x' $ i))))) /\ F)
T c==> c~ c= creal_mul cdrop f0 creal_mul f1 c$ f2 f3 creal_mul f1 creal_mul cdrop f0 c$ f2 f3 c/\ c~ c= creal_mul cdrop f0 creal_mul f1 c$ f2 f3 creal_mul f1 creal_mul cdrop f0 c$ f2 f3 cF
+ |- ((drop (lift x)) = x)
T c= cdrop clift f0 f0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_mul ((real_add (drop x)) (drop y'))) (y $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul (drop x)) (y $ i))) $ i)) ((lambdai. ((real_mul (drop y')) (y $ i))) $ i))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_add (drop x)) (drop y'))) y) $ i) = (((vector_add ((% (drop x)) y)) ((% (drop y')) y)) $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul creal_add cdrop f1 cdrop f2 c$ f3 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul cdrop f1 c$ f3 b1 b0 c$ clambda / creal_mul cdrop f2 c$ f3 b1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_add cdrop f1 cdrop f2 f3 f0 c$ cvector_add c% cdrop f1 f3 c% cdrop f2 f3 f0
- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((!g. (!x. (((f o g) x) = (f (g x))))) ==> ((\g. (!x. (((f o g) x) = (f (g x))))) g)) = ((\g. (!x. (((f o g) x) = (f (g x))))) g))
T c= c==> ! ! c= co f0 b0 b1 * f0 * b0 b1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1
- |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% (drop x)) ((% c') x')) $ i) = (((% c') ((% (drop x)) x')) $ i)))) = (((% (drop x)) ((% c') x')) = ((% c') ((% (drop x)) x'))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% cdrop f0 c% f1 f2 b0 c$ c% f1 c% cdrop f0 f2 b0 c= c% cdrop f0 c% f1 f2 c% f1 c% cdrop f0 f2
- |- ((!c. (!x. (((% (drop x)) ((% c) x)) = ((% c) ((% (drop x)) x))))) = ((!x. (!y. (((% (drop x)) ((vector_add x) y)) = ((vector_add ((% (drop x)) x)) ((% (drop x)) y))))) /\ (!c. (!x. (((% (drop x)) ((% c) x)) = ((% c) ((% (drop x)) x)))))))
T c= ! ! c= c% cdrop f0 c% b0 b1 c% b0 c% cdrop f0 b1 c/\ ! ! c= c% cdrop f0 cvector_add b0 b1 cvector_add c% cdrop f0 b0 c% cdrop f0 b1 ! ! c= c% cdrop f0 c% b0 b1 c% b0 c% cdrop f0 b1
- |- (((% c) x) = (lambdai. ((real_mul c) (x $ i))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
+ |- (((!f. (!g. (!x. (((f o g) x) = (f (g x)))))) ==> ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f)) = ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f))
T c= c==> ! ! ! c= co b0 b1 b2 * b0 * b1 b2 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0 * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!c. (!x. (((% ((real_mul c) (drop x))) y) = ((% c) ((% (drop x)) y)))))
T c= c% creal_mul f0 cdrop f1 f2 c% f0 c% cdrop f1 f2
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((!x. (!y. (((% ((real_add (drop x)) (drop y))) y) = ((vector_add ((% (drop x)) y)) ((% (drop y)) y))))) /\ (!c. (!x. (((% ((real_mul c) (drop x))) y) = ((% c) ((% (drop x)) y)))))) = T)
T c= c/\ ! ! c= c% creal_add cdrop b0 cdrop b1 f0 cvector_add c% cdrop b0 f0 c% cdrop b1 f0 ! ! c= c% creal_mul b0 cdrop b1 f0 c% b0 c% cdrop b1 f0 cT
- |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ (((--> f) l) net), (((--> (lift o c)) (lift d)) net) |- (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net)
T c==> c--> f0 f1 f2 c==> c--> * * part co part clift f3 clift f4 f2 c--> / c% * f3 b0 * f0 b0 c% f4 f1 f2
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_add (drop x)) (drop y'))) y) $ i) = (((vector_add ((% (drop x)) y)) ((% (drop y')) y)) $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_add cdrop f1 cdrop f2 f3 f0 c$ cvector_add c% cdrop f1 f3 c% cdrop f2 f3 f0 cT
- |- ((((~ (((real_mul (drop x)) ((real_add (x' $ i)) (y $ i))) = ((real_add ((real_mul (drop x)) (x' $ i))) ((real_mul (drop x)) (y $ i))))) ==> F) ==> (((real_mul (drop x)) ((real_add (x' $ i)) (y $ i))) = ((real_add ((real_mul (drop x)) (x' $ i))) ((real_mul (drop x)) (y $ i))))) = (((real_mul (drop x)) ((real_add (x' $ i)) (y $ i))) = ((real_add ((real_mul (drop x)) (x' $ i))) ((real_mul (drop x)) (y $ i)))))
T c= c==> c==> c~ c= creal_mul cdrop f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul cdrop f0 c$ f1 f2 creal_mul cdrop f0 c$ f3 f2 cF c= creal_mul cdrop f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul cdrop f0 c$ f1 f2 creal_mul cdrop f0 c$ f3 f2 c= creal_mul cdrop f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul cdrop f0 c$ f1 f2 creal_mul cdrop f0 c$ f3 f2
+ |- (((!m. (((((--> (lift o c)) (lift d)) net) /\ ((((--> f) m) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) ((lift o c) x)) (f x)))) (((\x. (\y. ((% (drop x)) y))) (lift d)) m)) net))) ==> ((\m. (((((--> (lift o c)) (lift d)) net) /\ ((((--> f) m) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) ((lift o c) x)) (f x)))) (((\x. (\y. ((% (drop x)) y))) (lift d)) m)) net))) l)) = ((\m. (((((--> (lift o c)) (lift d)) net) /\ ((((--> f) m) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) ((lift o c) x)) (f x)))) (((\x. (\y. ((% (drop x)) y))) (lift d)) m)) net))) l))
T c= c==> ! c==> c/\ c--> * * part co part clift f0 clift f1 f2 c/\ c--> f3 b0 f2 cbilinear / / c% cdrop b1 b2 c--> / * * / / c% cdrop b2 b3 co part clift f0 b1 * f3 b1 * * / / c% cdrop b1 b2 clift f1 b0 f2 * / c==> c/\ c--> * * part co part clift f0 clift f1 f2 c/\ c--> f3 b0 f2 cbilinear / / c% cdrop b1 b2 c--> / * * / / c% cdrop b2 b3 co part clift f0 b1 * f3 b1 * * / / c% cdrop b1 b2 clift f1 b0 f2 f4 * / c==> c/\ c--> * * part co part clift f0 clift f1 f2 c/\ c--> f3 b0 f2 cbilinear / / c% cdrop b1 b2 c--> / * * / / c% cdrop b2 b3 co part clift f0 b1 * f3 b1 * * / / c% cdrop b1 b2 clift f1 b0 f2 f4
+ |- ((!d. (((((--> (lift o c)) (lift d)) net) /\ (((--> f) l) net)) ==> (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net))) = T)
T c= ! c==> c/\ c--> * * part co part clift f0 clift b0 f1 c--> f2 f3 f1 c--> / c% * f0 b1 * f2 b1 c% b0 f3 f1 cT
+ |- (((!h. (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ ((((--> g) m) net) /\ (bilinear h))) ==> (((--> (\x. ((h (f x)) (g x)))) ((h l) m)) net))))))) ==> ((\h. (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ ((((--> g) m) net) /\ (bilinear h))) ==> (((--> (\x. ((h (f x)) (g x)))) ((h l) m)) net))))))) (\x. (\y. ((% (drop x)) y))))) = ((\h. (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ ((((--> g) m) net) /\ (bilinear h))) ==> (((--> (\x. ((h (f x)) (g x)))) ((h l) m)) net))))))) (\x. (\y. ((% (drop x)) y)))))
T c= c==> ! ! ! ! ! c==> c/\ c--> b1 b3 f0 c/\ c--> b2 b4 f0 cbilinear b0 c--> / * * b0 * b1 b5 * b2 b5 * * b0 b3 b4 f0 * / ! ! ! ! c==> c/\ c--> b1 b3 f0 c/\ c--> b2 b4 f0 cbilinear b0 c--> / * * b0 * b1 b5 * b2 b5 * * b0 b3 b4 f0 / / c% cdrop b0 b1 * / ! ! ! ! c==> c/\ c--> b1 b3 f0 c/\ c--> b2 b4 f0 cbilinear b0 c--> / * * b0 * b1 b5 * b2 b5 * * b0 b3 b4 f0 / / c% cdrop b0 b1
+ |- (((!net. (!h. (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ ((((--> g) m) net) /\ (bilinear h))) ==> (((--> (\x. ((h (f x)) (g x)))) ((h l) m)) net)))))))) ==> ((\net. (!h. (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ ((((--> g) m) net) /\ (bilinear h))) ==> (((--> (\x. ((h (f x)) (g x)))) ((h l) m)) net)))))))) net)) = ((\net. (!h. (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ ((((--> g) m) net) /\ (bilinear h))) ==> (((--> (\x. ((h (f x)) (g x)))) ((h l) m)) net)))))))) net))
T c= c==> ! ! ! ! ! ! c==> c/\ c--> b2 b4 b0 c/\ c--> b3 b5 b0 cbilinear b1 c--> / * * b1 * b2 b6 * b3 b6 * * b1 b4 b5 b0 * / ! ! ! ! ! c==> c/\ c--> b2 b4 b0 c/\ c--> b3 b5 b0 cbilinear b1 c--> / * * b1 * b2 b6 * b3 b6 * * b1 b4 b5 b0 f0 * / ! ! ! ! ! c==> c/\ c--> b2 b4 b0 c/\ c--> b3 b5 b0 cbilinear b1 c--> / * * b1 * b2 b6 * b3 b6 * * b1 b4 b5 b0 f0
+ |- ((\x. ((drop (lift x)) = x)) x)
T * / c= cdrop clift b0 b0 f0
+ |- (((!x. (((f o g) x) = (f (g x)))) ==> ((\x. (((f o g) x) = (f (g x)))) x)) = ((\x. (((f o g) x) = (f (g x)))) x))
T c= c==> ! c= co f0 f1 b0 * f0 * f1 b0 * / c= co f0 f1 b0 * f0 * f1 b0 f2 * / c= co f0 f1 b0 * f0 * f1 b0 f2
+ |- (((((--> (lift o c)) (lift d)) net) /\ ((((--> f) l) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) ((lift o c) x)) (f x)))) (((\x. (\y. ((% (drop x)) y))) (lift d)) l)) net))
T c==> c/\ c--> * * part co part clift f0 clift f1 f2 c/\ c--> f3 f4 f2 cbilinear / / c% cdrop b0 b1 c--> / * * / / c% cdrop b1 b2 co part clift f0 b0 * f3 b0 * * / / c% cdrop b0 b1 clift f1 f4 f2
+ |- ((\m. (((((--> (lift o c)) (lift d)) net) /\ ((((--> f) m) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) ((lift o c) x)) (f x)))) (((\x. (\y. ((% (drop x)) y))) (lift d)) m)) net))) l)
T * / c==> c/\ c--> * * part co part clift f0 clift f1 f2 c/\ c--> f3 b0 f2 cbilinear / / c% cdrop b1 b2 c--> / * * / / c% cdrop b2 b3 co part clift f0 b1 * f3 b1 * * / / c% cdrop b1 b2 clift f1 b0 f2 f4
+ |- (!l. (!m. (((((--> (lift o c)) l) net) /\ ((((--> f) m) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) ((lift o c) x)) (f x)))) (((\x. (\y. ((% (drop x)) y))) l) m)) net))))
T c==> c/\ c--> * * part co part clift f0 f1 f2 c/\ c--> f3 f4 f2 cbilinear / / c% cdrop b0 b1 c--> / * * / / c% cdrop b1 b2 co part clift f0 b0 * f3 b0 * * / / c% cdrop b0 b1 f1 f4 f2
+ |- (((!l. (!m. (((((--> (lift o c)) l) net) /\ ((((--> f) m) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) ((lift o c) x)) (f x)))) (((\x. (\y. ((% (drop x)) y))) l) m)) net)))) ==> ((\l. (!m. (((((--> (lift o c)) l) net) /\ ((((--> f) m) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) ((lift o c) x)) (f x)))) (((\x. (\y. ((% (drop x)) y))) l) m)) net)))) (lift d))) = ((\l. (!m. (((((--> (lift o c)) l) net) /\ ((((--> f) m) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) ((lift o c) x)) (f x)))) (((\x. (\y. ((% (drop x)) y))) l) m)) net)))) (lift d)))
T c= c==> ! ! c==> c/\ c--> * * part co part clift f0 b0 f1 c/\ c--> f2 b1 f1 cbilinear / / c% cdrop b2 b3 c--> / * * / / c% cdrop b3 b4 co part clift f0 b2 * f2 b2 * * / / c% cdrop b2 b3 b0 b1 f1 * / ! c==> c/\ c--> * * part co part clift f0 b0 f1 c/\ c--> f2 b1 f1 cbilinear / / c% cdrop b2 b3 c--> / * * / / c% cdrop b3 b4 co part clift f0 b2 * f2 b2 * * / / c% cdrop b2 b3 b0 b1 f1 clift f3 * / ! c==> c/\ c--> * * part co part clift f0 b0 f1 c/\ c--> f2 b1 f1 cbilinear / / c% cdrop b2 b3 c--> / * * / / c% cdrop b3 b4 co part clift f0 b2 * f2 b2 * * / / c% cdrop b2 b3 b0 b1 f1 clift f3
+ |- ((!f. (!l. (!c. (!d. (((((--> (lift o c)) (lift d)) net) /\ (((--> f) l) net)) ==> (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net)))))) = T)
T c= ! ! ! ! c==> c/\ c--> * * part co part clift b2 clift b3 f0 c--> b0 b1 f0 c--> / c% * b2 b4 * b0 b4 c% b3 b1 f0 cT
+ |- (((!g. (!l. (!m. (((((--> (lift o c)) l) net) /\ ((((--> g) m) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) ((lift o c) x)) (g x)))) (((\x. (\y. ((% (drop x)) y))) l) m)) net))))) ==> ((\g. (!l. (!m. (((((--> (lift o c)) l) net) /\ ((((--> g) m) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) ((lift o c) x)) (g x)))) (((\x. (\y. ((% (drop x)) y))) l) m)) net))))) f)) = ((\g. (!l. (!m. (((((--> (lift o c)) l) net) /\ ((((--> g) m) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) ((lift o c) x)) (g x)))) (((\x. (\y. ((% (drop x)) y))) l) m)) net))))) f))
T c= c==> ! ! ! c==> c/\ c--> * * part co part clift f0 b1 f1 c/\ c--> b0 b2 f1 cbilinear / / c% cdrop b3 b4 c--> / * * / / c% cdrop b4 b5 co part clift f0 b3 * b0 b3 * * / / c% cdrop b3 b4 b1 b2 f1 * / ! ! c==> c/\ c--> * * part co part clift f0 b1 f1 c/\ c--> b0 b2 f1 cbilinear / / c% cdrop b3 b4 c--> / * * / / c% cdrop b4 b5 co part clift f0 b3 * b0 b3 * * / / c% cdrop b3 b4 b1 b2 f1 f2 * / ! ! c==> c/\ c--> * * part co part clift f0 b1 f1 c/\ c--> b0 b2 f1 cbilinear / / c% cdrop b3 b4 c--> / * * / / c% cdrop b4 b5 co part clift f0 b3 * b0 b3 * * / / c% cdrop b3 b4 b1 b2 f1 f2
+ |- ((\f. (!g. (!x. (((f o g) x) = (f (g x)))))) f)
T * / ! ! c= co b0 b1 b2 * b0 * b1 b2 f0
+ |- ((\g. (!l. (!m. (((((--> (lift o c)) l) net) /\ ((((--> g) m) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) ((lift o c) x)) (g x)))) (((\x. (\y. ((% (drop x)) y))) l) m)) net))))) f)
T * / ! ! c==> c/\ c--> * * part co part clift f0 b1 f1 c/\ c--> b0 b2 f1 cbilinear / / c% cdrop b3 b4 c--> / * * / / c% cdrop b4 b5 co part clift f0 b3 * b0 b3 * * / / c% cdrop b3 b4 b1 b2 f1 f2
+ |- ((((((--> (lift o c)) (lift d)) net) /\ (((--> f) l) net)) ==> (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net)) = T)
T c= c==> c/\ c--> * * part co part clift f0 clift f1 f2 c--> f3 f4 f2 c--> / c% * f0 b0 * f3 b0 c% f1 f4 f2 cT
+ |- ((\f. (!g. (!l. (!m. (((((--> f) l) net) /\ ((((--> g) m) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) (f x)) (g x)))) (((\x. (\y. ((% (drop x)) y))) l) m)) net)))))) (lift o c))
T * / ! ! ! c==> c/\ c--> b0 b2 f0 c/\ c--> b1 b3 f0 cbilinear / / c% cdrop b4 b5 c--> / * * / / c% cdrop b5 b6 * b0 b4 * b1 b4 * * / / c% cdrop b4 b5 b2 b3 f0 * * part co part clift f1
+ |- ((!c. (!d. (((((--> (lift o c)) (lift d)) net) /\ (((--> f) l) net)) ==> (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net)))) = T)
T c= ! ! c==> c/\ c--> * * part co part clift b0 clift b1 f0 c--> f1 f2 f0 c--> / c% * b0 b2 * f1 b2 c% b1 f2 f0 cT
+ |- (((bilinear (\x. (\y. ((% (drop x)) y)))) ==> (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net)) ==> (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net))
T c==> c==> cbilinear / / c% cdrop b0 b1 c--> / c% * f0 b0 * f1 b0 c% f2 f3 f4 c--> / c% * f0 b0 * f1 b0 c% f2 f3 f4
+ (((--> (lift o c)) (lift d)) net) |- ((((--> (lift o c)) (lift d)) net) = T)
T c==> c--> * * part co part clift f0 clift f1 f2 c= c--> * * part co part clift f0 clift f1 f2 cT
+ |- ((!l. (!c. (!d. (((((--> (lift o c)) (lift d)) net) /\ (((--> f) l) net)) ==> (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net))))) = T)
T c= ! ! ! c==> c/\ c--> * * part co part clift b1 clift b2 f0 c--> f1 b0 f0 c--> / c% * b1 b3 * f1 b3 c% b2 b0 f0 cT
+ |- ((\net. (!h. (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ ((((--> g) m) net) /\ (bilinear h))) ==> (((--> (\x. ((h (f x)) (g x)))) ((h l) m)) net)))))))) net)
T * / ! ! ! ! ! c==> c/\ c--> b2 b4 b0 c/\ c--> b3 b5 b0 cbilinear b1 c--> / * * b1 * b2 b6 * b3 b6 * * b1 b4 b5 b0 f0
+ |- ((\x. (((f o g) x) = (f (g x)))) x)
T * / c= co f0 f1 b0 * f0 * f1 b0 f2
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ |- (((bilinear (\x. (\y. ((% (drop x)) y)))) ==> (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net)) = (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net))
T c= c==> cbilinear / / c% cdrop b0 b1 c--> / c% * f0 b0 * f1 b0 c% f2 f3 f4 c--> / c% * f0 b0 * f1 b0 c% f2 f3 f4
+ ((bilinear (\x. (\y. ((% (drop x)) y)))) ==> (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net)) |- (((bilinear (\x. (\y. ((% (drop x)) y)))) ==> (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net)) /\ (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net))
T c==> c==> cbilinear / / c% cdrop b0 b1 c--> / c% * f0 b0 * f1 b0 c% f2 f3 f4 c/\ c==> cbilinear / / c% cdrop b0 b1 c--> / c% * f0 b0 * f1 b0 c% f2 f3 f4 c--> / c% * f0 b0 * f1 b0 c% f2 f3 f4
+ |- (((((((--> (lift o c)) (lift d)) net) /\ ((((--> f) l) net) /\ (bilinear (\x. (\y. ((% (drop x)) y)))))) ==> (((--> (\x. (((\x. (\y. ((% (drop x)) y))) ((lift o c) x)) (f x)))) (((\x. (\y. ((% (drop x)) y))) (lift d)) l)) net)) ==> (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net)) = (((--> (\x. ((% (c x)) (f x)))) ((% d) l)) net))
T c= c==> c==> c/\ c--> * * part co part clift f0 clift f1 f2 c/\ c--> f3 f4 f2 cbilinear / / c% cdrop b0 b1 c--> / * * / / c% cdrop b1 b2 co part clift f0 b0 * f3 b0 * * / / c% cdrop b0 b1 clift f1 f4 f2 c--> / c% * f0 b0 * f3 b0 c% f1 f4 f2 c--> / c% * f0 b0 * f3 b0 c% f1 f4 f2
+ |- ((\g. (!x. (((f o g) x) = (f (g x))))) g)
T * / ! c= co f0 b0 b1 * f0 * b0 b1 f1
