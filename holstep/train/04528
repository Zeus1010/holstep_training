N Nkezbfc_local.AFF_GT_SUBSET_WEDGE_IMP_VERTEX
C |- (!x. (!v. (!w. (!y. (!z. (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (z INSERT EMPTY))))) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z))))) ==> (w IN ((((wedge x) v) y) z))))))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f4 cIN f2 * * * * part cwedge f0 f1 f3 f4
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D INTER
A |- (!s. (!t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x)))))))
T c= * * part cINTER f0 f1 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 f0 cIN b1 f1 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D AZIM_EQ
A |- (!v0. (!v1. (!w. (!x. (!y. (((~ (collinear (v0 INSERT (v1 INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (v0 INSERT (v1 INSERT (x INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (y INSERT EMPTY))))))) ==> ((((((azim v0) v1) w) x) = ((((azim v0) v1) w) y)) = (y IN ((aff_gt (v0 INSERT (v1 INSERT EMPTY))) (x INSERT EMPTY))))))))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c= c= cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 cIN f4 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY
D wedge
A |- (!v0. (!v1. (!w1. (!w2. (((((wedge v0) v1) w1) w2) = (GSPEC (\GEN%PVAR%5140. (?y. (((SETSPEC GEN%PVAR%5140) ((~ (collinear (v0 INSERT (v1 INSERT (y INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim v0) v1) w1) y)) /\ ((real_lt ((((azim v0) v1) w1) y)) ((((azim v0) v1) w1) w2))))) y)))))))))
T c= * * * * part cwedge f0 f1 f2 f3 * part cGSPEC / c? / cSETSPEC b0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 b1 creal_lt cazim f0 f1 f2 b1 cazim f0 f1 f2 f3 b1
D Fan.th3
A |- (!x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
D Planarity.aff_gt_inter_aff_gt
A |- (!x. (!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY
D Planarity.exists_in_aff_gt
A |- (!x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> (?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D Planarity.aff_gt_imp_not_collinear
A |- (!x. (!u. (!v. (!w. (((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ (w IN ((aff_gt (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)))) ==> (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))))))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f3 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
- |- ((\z. (!y. (!v. (!x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)))))) z)
T * / ! ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b4 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b4 part cEMPTY b5 cwedge b3 b2 b1 b0 b5 cwedge b3 b2 b1 b0 f0 cF f1
+ |- ((\v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY))))))) v)
T * / ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY f1
+ ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) |- ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ (((((wedge x) v) y) z) x'))))
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- (~ (((((wedge x) v) y) z) y')), ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) |- F
T c==> c~ cwedge f0 f1 f2 f3 f4 c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY b0 cwedge f0 f1 f2 f3 b0 cF
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z)) |- ((y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (w IN ((((wedge x) v) y) z)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f4 c==> cIN f5 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f2 * * * * part cwedge f0 f1 f3 f4
- |- ((\v. (!x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)))) v)
T * / ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b3 cwedge b1 b0 f1 f2 b3 cwedge b1 b0 f1 f2 f0 cF f3
+ |- ((\w. (!x'. (!y. (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (x' INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))))) ==> ((((((azim x) v) w) x') = ((((azim x) v) w) y)) = (y IN ((aff_gt (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)))))))) y)
T * / ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 part cEMPTY c= c= cazim f0 f1 b0 b1 cazim f0 f1 b0 b2 cIN b2 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY f2
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) = T)
T c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ |- ((\w2. (((((wedge v0) v1) w1) w2) = (GSPEC (\GEN%PVAR%5140. (?y. (((SETSPEC GEN%PVAR%5140) ((~ (collinear (v0 INSERT (v1 INSERT (y INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim v0) v1) w1) y)) /\ ((real_lt ((((azim v0) v1) w1) y)) ((((azim v0) v1) w1) w2))))) y)))))) w2)
T * / c= * * * * part cwedge f0 f1 f2 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 b2 creal_lt cazim f0 f1 f2 b2 cazim f0 f1 f2 b0 b2 f3
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ |- (((!t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x)))))) ==> ((\t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x)))))) t)) = ((\t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x)))))) t))
T c= c==> ! c= * * part cINTER f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f0 cIN b2 b0 b2 * / c= * * part cINTER f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f0 cIN b2 b0 b2 f1 * / c= * * part cINTER f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f0 cIN b2 b0 b2 f1
- ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) |- ((((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))
T c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ |- ((\w1. (!w2. (((((wedge v0) v1) w1) w2) = (GSPEC (\GEN%PVAR%5140. (?y. (((SETSPEC GEN%PVAR%5140) ((~ (collinear (v0 INSERT (v1 INSERT (y INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim v0) v1) w1) y)) /\ ((real_lt ((((azim v0) v1) w1) y)) ((((azim v0) v1) w1) w2))))) y))))))) w1)
T * / ! c= * * * * part cwedge f0 f1 b0 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b3 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 b0 b3 creal_lt cazim f0 f1 b0 b3 cazim f0 f1 b0 b1 b3 f2
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((y' IN ((((wedge x) v) y) z)) ==> (w IN ((((wedge x) v) y) z)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f4 * * * * part cwedge f0 f1 f3 f5 cIN f2 * * * * part cwedge f0 f1 f3 f5
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), ((y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY))) /\ (y' IN ((aff_gt (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)))) |- (((y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY))) /\ (y' IN ((aff_gt (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)))) /\ (((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z)))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c/\ cIN f4 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f4 * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c/\ cIN f4 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f4 * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f4 creal_lt cazim f0 f1 f3 f4 cazim f0 f1 f3 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 creal_lt cazim f0 f1 f3 f2 cazim f0 f1 f3 f5
+ |- ((\v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))) v)
T * / ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 b1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
+ |- (((!v. (!w'. (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (w' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)))) ==> (~ (collinear (x INSERT (v INSERT (w' INSERT EMPTY)))))))) ==> ((\v. (!w'. (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (w' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)))) ==> (~ (collinear (x INSERT (v INSERT (w' INSERT EMPTY)))))))) v)) = ((\v. (!w'. (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (w' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)))) ==> (~ (collinear (x INSERT (v INSERT (w' INSERT EMPTY)))))))) v))
T c= c==> ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cIN b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cIN b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 * / ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cIN b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- (~ (((((wedge x) v) y) z) y')), ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) |- ((~ F) ==> F)
T c==> c~ cwedge f0 f1 f2 f3 f4 c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY b0 cwedge f0 f1 f2 f3 b0 c==> c~ cF cF
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY))) |- ((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z)))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f4 creal_lt cazim f0 f1 f3 f4 cazim f0 f1 f3 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 creal_lt cazim f0 f1 f3 f2 cazim f0 f1 f3 f5
+ ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) |- (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) /\ (((((wedge x) v) y) z) y'))
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 c/\ c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\v0. (!v1. (!w1. (!w2. (((((wedge v0) v1) w1) w2) = (GSPEC (\GEN%PVAR%5140. (?y. (((SETSPEC GEN%PVAR%5140) ((~ (collinear (v0 INSERT (v1 INSERT (y INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim v0) v1) w1) y)) /\ ((real_lt ((((azim v0) v1) w1) y)) ((((azim v0) v1) w1) w2))))) y))))))))) v0)
T * / ! ! ! c= * * * * part cwedge b0 b1 b2 b3 * part cGSPEC / c? / cSETSPEC b4 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b5 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b1 b2 b5 creal_lt cazim b0 b1 b2 b5 cazim b0 b1 b2 b3 b5 f0
- |- ((!w. (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) = T)
T c= ! c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b1 cwedge f0 f1 f3 f4 b1 cwedge f0 f1 f3 f4 f2 cT
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ |- (((!v0. (!v1. (!w. (!x. (!y. (((~ (collinear (v0 INSERT (v1 INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (v0 INSERT (v1 INSERT (x INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (y INSERT EMPTY))))))) ==> ((((((azim v0) v1) w) x) = ((((azim v0) v1) w) y)) = (y IN ((aff_gt (v0 INSERT (v1 INSERT EMPTY))) (x INSERT EMPTY)))))))))) ==> ((\v0. (!v1. (!w. (!x. (!y. (((~ (collinear (v0 INSERT (v1 INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (v0 INSERT (v1 INSERT (x INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (y INSERT EMPTY))))))) ==> ((((((azim v0) v1) w) x) = ((((azim v0) v1) w) y)) = (y IN ((aff_gt (v0 INSERT (v1 INSERT EMPTY))) (x INSERT EMPTY)))))))))) x)) = ((\v0. (!v1. (!w. (!x. (!y. (((~ (collinear (v0 INSERT (v1 INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (v0 INSERT (v1 INSERT (x INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (y INSERT EMPTY))))))) ==> ((((((azim v0) v1) w) x) = ((((azim v0) v1) w) y)) = (y IN ((aff_gt (v0 INSERT (v1 INSERT EMPTY))) (x INSERT EMPTY)))))))))) x))
T c= c==> ! ! ! ! ! c==> c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b4 part cEMPTY c= c= cazim b0 b1 b2 b3 cazim b0 b1 b2 b4 cIN b4 * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY * / ! ! ! ! c==> c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b4 part cEMPTY c= c= cazim b0 b1 b2 b3 cazim b0 b1 b2 b4 cIN b4 * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY f0 * / ! ! ! ! c==> c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b4 part cEMPTY c= c= cazim b0 b1 b2 b3 cazim b0 b1 b2 b4 cIN b4 * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY f0
- |- ((((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)) ==> (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)))
T c==> c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z)) |- ((((y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z))) ==> (y' IN ((((wedge x) v) y) z))) ==> (w IN ((((wedge x) v) y) z)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f5 c==> c==> c/\ cIN f4 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f5 cIN f4 * * * * part cwedge f0 f1 f3 f5 cIN f2 * * * * part cwedge f0 f1 f3 f5
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((\s. (!t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x))))))) s)
T * / ! c= * * part cINTER b0 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 cIN b3 b1 b3 f0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!w. t) = t)
T c= ! f0 f0
- |- ((((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)) = ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))
T c= c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ (((((azim x) v) y) w) = ((((azim x) v) y) y')) |- ((((((azim x) v) y) w) = ((((azim x) v) y) y')) /\ ((((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z)))))
T c==> c= cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c/\ c= cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c==> c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f4 creal_lt cazim f0 f1 f2 f4 cazim f0 f1 f2 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 creal_lt cazim f0 f1 f2 f3 cazim f0 f1 f2 f5
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (((!u. (!v. (!w. (((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ (w IN ((aff_gt (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)))) ==> (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))))))) ==> ((\u. (!v. (!w. (((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ (w IN ((aff_gt (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)))) ==> (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))))))) w)) = ((\u. (!v. (!w. (((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ (w IN ((aff_gt (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)))) ==> (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))))))) w))
T c= c==> ! ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cIN b2 * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cIN b2 * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1 * / ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cIN b2 * * part caff_gt * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
- |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?x'. t) = t)
T c= c? / f0 f0
- ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) |- ((~ (((((wedge x) v) y) z) y')) ==> (((((wedge x) v) y) z) y'))
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 c==> c~ cwedge f0 f1 f4 f5 f3 cwedge f0 f1 f4 f5 f3
- |- (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) = (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y')))
T c= c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3
+ ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) |- (!x'. ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ (((((wedge x) v) y) z) x')))
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 ! c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0
+ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)))) |- ((((y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY))) /\ (y' IN ((aff_gt (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)))) ==> (((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z)))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z))))) = ((y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z)))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z))))))
T c==> c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c= c==> c/\ cIN f3 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f3 * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f4 f3 creal_lt cazim f0 f1 f4 f3 cazim f0 f1 f4 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f4 f2 creal_lt cazim f0 f1 f4 f2 cazim f0 f1 f4 f5 c==> cIN f3 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f4 f3 creal_lt cazim f0 f1 f4 f3 cazim f0 f1 f4 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f4 f2 creal_lt cazim f0 f1 f4 f2 cazim f0 f1 f4 f5
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- |- (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))
T c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF
- |- (((!y. (!v. (!x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))))) ==> ((\y. (!v. (!x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))))) y)) = ((\y. (!v. (!x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))))) y))
T c= c==> ! ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY b4 cwedge b2 b1 b0 f1 b4 cwedge b2 b1 b0 f1 f0 cF * / ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY b4 cwedge b2 b1 b0 f1 b4 cwedge b2 b1 b0 f1 f0 cF f2 * / ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY b4 cwedge b2 b1 b0 f1 b4 cwedge b2 b1 b0 f1 f0 cF f2
+ |- ((\v1. (!w. (!x'. (!y. (((~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v1 INSERT (x' INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v1 INSERT (y INSERT EMPTY))))))) ==> ((((((azim x) v1) w) x') = ((((azim x) v1) w) y)) = (y IN ((aff_gt (x INSERT (v1 INSERT EMPTY))) (x' INSERT EMPTY))))))))) v)
T * / ! ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b3 part cEMPTY c= c= cazim f0 b0 b1 b2 cazim f0 b0 b1 b3 cIN b3 * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY f1
+ |- ((\x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))) x)
T * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
+ ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) |- (((!x'. ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ (((((wedge x) v) y) z) x'))) ==> ((\x'. ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ (((((wedge x) v) y) z) x'))) _6528374)) = ((\x'. ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ (((((wedge x) v) y) z) x'))) _6528374))
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 c= c==> ! c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 * / c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 f6 * / c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 f6
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- (((!w. (!x'. (!y. (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (x' INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))))) ==> ((((((azim x) v) w) x') = ((((azim x) v) w) y)) = (y IN ((aff_gt (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)))))))) ==> ((\w. (!x'. (!y. (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (x' INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))))) ==> ((((((azim x) v) w) x') = ((((azim x) v) w) y)) = (y IN ((aff_gt (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)))))))) y)) = ((\w. (!x'. (!y. (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (x' INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))))) ==> ((((((azim x) v) w) x') = ((((azim x) v) w) y)) = (y IN ((aff_gt (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)))))))) y))
T c= c==> ! ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 part cEMPTY c= c= cazim f0 f1 b0 b1 cazim f0 f1 b0 b2 cIN b2 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY * / ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 part cEMPTY c= c= cazim f0 f1 b0 b1 cazim f0 f1 b0 b2 cIN b2 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY f2 * / ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 part cEMPTY c= c= cazim f0 f1 b0 b1 cazim f0 f1 b0 b2 cIN b2 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b1 part cEMPTY f2
+ |- (((!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))) ==> ((\v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))) v)) = ((\v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))) v))
T c= c==> ! ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 b1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 b1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1 * / ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 b1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z)) |- (((!x'. (((\y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))) x') ==> (w IN ((((wedge x) v) y) z)))) ==> ((?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))) ==> (w IN ((((wedge x) v) y) z)))) = ((?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))) ==> (w IN ((((wedge x) v) y) z))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f4 c= c==> ! c==> * / cIN b1 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cIN f2 * * * * part cwedge f0 f1 f3 f4 c==> c? / cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f2 * * * * part cwedge f0 f1 f3 f4 c==> c? / cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f2 * * * * part cwedge f0 f1 f3 f4
- (~ (x = w)) |- (((~ (w = x)) ==> ((w = x) = F)) = ((w = x) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ |- ((!v. (!w. (!y. (!z. (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (z INSERT EMPTY))))) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z))))) ==> (w IN ((((wedge x) v) y) z))))))) = T)
T c= ! ! ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * * * part cwedge f0 b0 b2 b3 cIN b1 * * * * part cwedge f0 b0 b2 b3 cT
- (~ (((((wedge x) v) y) z) y')), ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) |- ((~ (((((wedge x) v) y) z) y')) /\ F)
T c==> c~ cwedge f0 f1 f2 f3 f4 c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY b0 cwedge f0 f1 f2 f3 b0 c/\ c~ cwedge f0 f1 f2 f3 f4 cF
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (z INSERT EMPTY))))) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z))))) |- (w IN ((((wedge x) v) y) z))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f4 cIN f2 * * * * part cwedge f0 f1 f3 f4
- (~ (x = w)) |- ((x = w) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
+ |- ((((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))) ==> (w IN ((((wedge x) v) y) z))) = (w IN ((((wedge x) v) y) z)))
T c= c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f2 * * * * part cwedge f0 f1 f3 f4 cIN f2 * * * * part cwedge f0 f1 f3 f4
- |- (((~ (((((wedge x) v) y) z) y')) ==> F) = (((((wedge x) v) y) z) y'))
T c= c==> c~ cwedge f0 f1 f2 f3 f4 cF cwedge f0 f1 f2 f3 f4
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x'. ((P x') \/ Q)) = ((!x'. (P x')) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z)) |- (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))) ==> ((((y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z))) ==> (y' IN ((((wedge x) v) y) z))) ==> (w IN ((((wedge x) v) y) z))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f5 c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c==> c/\ cIN f4 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f5 cIN f4 * * * * part cwedge f0 f1 f3 f5 cIN f2 * * * * part cwedge f0 f1 f3 f5
+ |- ((\y'. (((~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))))) ==> ((((((azim x) v) y) w) = ((((azim x) v) y) y')) = (y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)))))) y')
T * / c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= c= cazim f0 f1 f2 f3 cazim f0 f1 f2 b0 cIN b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY f4
- |- ((\w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)) w)
T * / c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b1 cwedge f0 f1 f3 f4 b1 cwedge f0 f1 f3 f4 f2 cF f5
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z)) |- (w IN ((((wedge x) v) y) z))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f5 cIN f2 * * * * part cwedge f0 f1 f3 f5
+ |- ((\x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> (?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))))) x)
T * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / cIN b3 * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
- |- ((!x''. ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ (((((wedge x) v) y) z) x''))) = ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x')) \/ (!x'. (((((wedge x) v) y) z) x'))))
T c= ! c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cwedge f0 f1 f4 f5 b0 c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! cwedge f0 f1 f4 f5 b0
- (~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) |- ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) /\ F)
T c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 c/\ c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF
+ |- (((!s. (!t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x))))))) ==> ((\s. (!t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x))))))) s)) = ((\s. (!t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x))))))) s))
T c= c==> ! ! c= * * part cINTER b0 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 cIN b3 b1 b3 * / ! c= * * part cINTER b0 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 cIN b3 b1 b3 f0 * / ! c= * * part cINTER b0 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 cIN b3 b1 b3 f0
+ ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) |- (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y')
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) |- ((~ (((((wedge x) v) y) z) y')) ==> F)
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 c==> c~ cwedge f0 f1 f4 f5 f3 cF
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z)) |- (w IN ((((wedge x) v) y) z))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f4 cIN f2 * * * * part cwedge f0 f1 f3 f4
- ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F), (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)) |- ((((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)) /\ ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))
T c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c/\ c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF
- (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y')), ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) |- ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y')) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y'))
T c==> c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 c/\ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))), (y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY))) |- (((((((azim x) v) y) w) = ((((azim x) v) y) y')) ==> ((((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z))))) = ((((~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))))) ==> ((((((azim x) v) y) w) = ((((azim x) v) y) y')) = (y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY))))) ==> ((((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> c= cazim f0 f1 f3 f2 cazim f0 f1 f3 f4 c==> c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f4 creal_lt cazim f0 f1 f3 f4 cazim f0 f1 f3 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 creal_lt cazim f0 f1 f3 f2 cazim f0 f1 f3 f5 c==> c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c= c= cazim f0 f1 f3 f2 cazim f0 f1 f3 f4 cIN f4 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f4 creal_lt cazim f0 f1 f3 f4 cazim f0 f1 f3 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 creal_lt cazim f0 f1 f3 f2 cazim f0 f1 f3 f5
+ |- ((\x. (!u. (!v. (!w. (((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ (w IN ((aff_gt (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)))) ==> (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY)))))))))) x)
T * / ! ! ! c==> c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cIN b3 * * part caff_gt * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
- |- ((\y. (!v. (!x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))))) y)
T * / ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY b4 cwedge b2 b1 b0 f1 b4 cwedge b2 b1 b0 f1 f0 cF f2
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z)) |- (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))) ==> (w IN ((((wedge x) v) y) z)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f4 c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f2 * * * * part cwedge f0 f1 f3 f4
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- (((!v0. (!v1. (!w1. (!w2. (((((wedge v0) v1) w1) w2) = (GSPEC (\GEN%PVAR%5140. (?y. (((SETSPEC GEN%PVAR%5140) ((~ (collinear (v0 INSERT (v1 INSERT (y INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim v0) v1) w1) y)) /\ ((real_lt ((((azim v0) v1) w1) y)) ((((azim v0) v1) w1) w2))))) y))))))))) ==> ((\v0. (!v1. (!w1. (!w2. (((((wedge v0) v1) w1) w2) = (GSPEC (\GEN%PVAR%5140. (?y. (((SETSPEC GEN%PVAR%5140) ((~ (collinear (v0 INSERT (v1 INSERT (y INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim v0) v1) w1) y)) /\ ((real_lt ((((azim v0) v1) w1) y)) ((((azim v0) v1) w1) w2))))) y))))))))) v0)) = ((\v0. (!v1. (!w1. (!w2. (((((wedge v0) v1) w1) w2) = (GSPEC (\GEN%PVAR%5140. (?y. (((SETSPEC GEN%PVAR%5140) ((~ (collinear (v0 INSERT (v1 INSERT (y INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim v0) v1) w1) y)) /\ ((real_lt ((((azim v0) v1) w1) y)) ((((azim v0) v1) w1) w2))))) y))))))))) v0))
T c= c==> ! ! ! ! c= * * * * part cwedge b0 b1 b2 b3 * part cGSPEC / c? / cSETSPEC b4 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b5 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b1 b2 b5 creal_lt cazim b0 b1 b2 b5 cazim b0 b1 b2 b3 b5 * / ! ! ! c= * * * * part cwedge b0 b1 b2 b3 * part cGSPEC / c? / cSETSPEC b4 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b5 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b1 b2 b5 creal_lt cazim b0 b1 b2 b5 cazim b0 b1 b2 b3 b5 f0 * / ! ! ! c= * * * * part cwedge b0 b1 b2 b3 * part cGSPEC / c? / cSETSPEC b4 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b5 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b1 b2 b5 creal_lt cazim b0 b1 b2 b5 cazim b0 b1 b2 b3 b5 f0
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- (((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z)))) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f4 creal_lt cazim f0 f1 f3 f4 cazim f0 f1 f3 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 creal_lt cazim f0 f1 f3 f2 cazim f0 f1 f3 f5
+ |- (((!v1. (!w1. (!w2. (((((wedge v0) v1) w1) w2) = (GSPEC (\GEN%PVAR%5140. (?y. (((SETSPEC GEN%PVAR%5140) ((~ (collinear (v0 INSERT (v1 INSERT (y INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim v0) v1) w1) y)) /\ ((real_lt ((((azim v0) v1) w1) y)) ((((azim v0) v1) w1) w2))))) y)))))))) ==> ((\v1. (!w1. (!w2. (((((wedge v0) v1) w1) w2) = (GSPEC (\GEN%PVAR%5140. (?y. (((SETSPEC GEN%PVAR%5140) ((~ (collinear (v0 INSERT (v1 INSERT (y INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim v0) v1) w1) y)) /\ ((real_lt ((((azim v0) v1) w1) y)) ((((azim v0) v1) w1) w2))))) y)))))))) v1)) = ((\v1. (!w1. (!w2. (((((wedge v0) v1) w1) w2) = (GSPEC (\GEN%PVAR%5140. (?y. (((SETSPEC GEN%PVAR%5140) ((~ (collinear (v0 INSERT (v1 INSERT (y INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim v0) v1) w1) y)) /\ ((real_lt ((((azim v0) v1) w1) y)) ((((azim v0) v1) w1) w2))))) y)))))))) v1))
T c= c==> ! ! ! c= * * * * part cwedge f0 b0 b1 b2 * part cGSPEC / c? / cSETSPEC b3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b0 b1 b4 creal_lt cazim f0 b0 b1 b4 cazim f0 b0 b1 b2 b4 * / ! ! c= * * * * part cwedge f0 b0 b1 b2 * part cGSPEC / c? / cSETSPEC b3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b0 b1 b4 creal_lt cazim f0 b0 b1 b4 cazim f0 b0 b1 b2 b4 f1 * / ! ! c= * * * * part cwedge f0 b0 b1 b2 * part cGSPEC / c? / cSETSPEC b3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b0 b1 b4 creal_lt cazim f0 b0 b1 b4 cazim f0 b0 b1 b2 b4 f1
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z)) |- ((((~ (x = v)) /\ ((~ (x = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))) ==> ((y' IN ((((wedge x) v) y) z)) ==> (w IN ((((wedge x) v) y) z)))) = (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))) ==> ((((y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z))) ==> (y' IN ((((wedge x) v) y) z))) ==> (w IN ((((wedge x) v) y) z)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f4 f5 c= c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f3 * * * * part cwedge f0 f1 f4 f5 cIN f2 * * * * part cwedge f0 f1 f4 f5 c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c==> c/\ cIN f3 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f4 f5 cIN f3 * * * * part cwedge f0 f1 f4 f5 cIN f2 * * * * part cwedge f0 f1 f4 f5
+ |- (((((y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z))) ==> (y' IN ((((wedge x) v) y) z))) ==> (w IN ((((wedge x) v) y) z))) = (w IN ((((wedge x) v) y) z)))
T c= c==> c==> c/\ cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * * * part cwedge f1 f2 f4 f5 cIN f0 * * * * part cwedge f1 f2 f4 f5 cIN f3 * * * * part cwedge f1 f2 f4 f5 cIN f3 * * * * part cwedge f1 f2 f4 f5
- |- (T = (((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _6528374)) \/ (((((wedge x) v) y) z) _6528374)) = ((((((wedge x) v) y) z) _6528374) \/ (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _6528374)))))
T c= cT c= c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cwedge f0 f1 f4 f5 f3 c\/ cwedge f0 f1 f4 f5 f3 c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY))) |- ((((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)))) ==> (~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY)))))) ==> (((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z)))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f4 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f4 creal_lt cazim f0 f1 f3 f4 cazim f0 f1 f3 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 creal_lt cazim f0 f1 f3 f2 cazim f0 f1 f3 f5
+ |- (((y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (!x'. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (x' IN ((((wedge x) v) y) z))))) ==> (y' IN ((((wedge x) v) y) z)))
T c==> c/\ cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * * * part cwedge f1 f2 f4 f5 cIN f0 * * * * part cwedge f1 f2 f4 f5
+ |- (((!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> (?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))) ==> ((\u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> (?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))) w)) = ((\u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> (?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))) w))
T c= c==> ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / cIN b1 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / cIN b1 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2 * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / cIN b1 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
- (~ (((((wedge x) v) y) z) y')), ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) |- ((~ (((((wedge x) v) y) z) y')) /\ (((((wedge x) v) y) z) y'))
T c==> c~ cwedge f0 f1 f2 f3 f4 c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY b0 cwedge f0 f1 f2 f3 b0 c/\ c~ cwedge f0 f1 f2 f3 f4 cwedge f0 f1 f2 f3 f4
- ((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) |- (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = T)
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z)) |- ((((\y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))) y') ==> (w IN ((((wedge x) v) y) z))) = T)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f4 c= c==> * / cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 cIN f2 * * * * part cwedge f0 f1 f3 f4 cT
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((((y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (!x'. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (x' IN ((((wedge x) v) y) z))))) ==> (y' IN ((((wedge x) v) y) z))) = (((y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z))) ==> (y' IN ((((wedge x) v) y) z))))
T c= c==> c/\ cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * * * part cwedge f1 f2 f4 f5 cIN f0 * * * * part cwedge f1 f2 f4 f5 c==> c/\ cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * * * part cwedge f1 f2 f4 f5 cIN f0 * * * * part cwedge f1 f2 f4 f5
- (w = x) |- (x = w)
T c==> c= f0 f1 c= f1 f0
- |- (((!z. (!y. (!v. (!x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)))))) ==> ((\z. (!y. (!v. (!x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)))))) z)) = ((\z. (!y. (!v. (!x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)))))) z))
T c= c==> ! ! ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b4 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b4 part cEMPTY b5 cwedge b3 b2 b1 b0 b5 cwedge b3 b2 b1 b0 f0 cF * / ! ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b4 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b4 part cEMPTY b5 cwedge b3 b2 b1 b0 b5 cwedge b3 b2 b1 b0 f0 cF f1 * / ! ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b4 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b4 part cEMPTY b5 cwedge b3 b2 b1 b0 b5 cwedge b3 b2 b1 b0 f0 cF f1
+ |- (((!x'. (!y'. (((~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (x' INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))))) ==> ((((((azim x) v) y) x') = ((((azim x) v) y) y')) = (y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY))))))) ==> ((\x'. (!y'. (((~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (x' INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))))) ==> ((((((azim x) v) y) x') = ((((azim x) v) y) y')) = (y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY))))))) w)) = ((\x'. (!y'. (((~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (x' INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))))) ==> ((((((azim x) v) y) x') = ((((azim x) v) y) y')) = (y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY))))))) w))
T c= c==> ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c= c= cazim f0 f1 f2 b0 cazim f0 f1 f2 b1 cIN b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * / ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c= c= cazim f0 f1 f2 b0 cazim f0 f1 f2 b1 cIN b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY f3 * / ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c= c= cazim f0 f1 f2 b0 cazim f0 f1 f2 b1 cIN b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY f3
+ |- ((t = T) = t)
T c= c= f0 cT f0
- (~ F), (~ (((((wedge x) v) y) z) y')), ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ cwedge f0 f1 f2 f3 f4 c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY f4 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f5 part cEMPTY b0 cwedge f0 f1 f2 f3 b0 c/\ c~ cF cF
+ (((((azim x) v) y) w) = ((((azim x) v) y) y')) |- (T = ((((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z)))))
T c==> c= cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c= cT c==> c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f4 creal_lt cazim f0 f1 f2 f4 cazim f0 f1 f2 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 creal_lt cazim f0 f1 f2 f3 cazim f0 f1 f2 f5
+ ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) |- (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') ==> (((((wedge x) v) y) z) y')) = (((((wedge x) v) y) z) y'))
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 c= c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cwedge f0 f1 f4 f5 f3 cwedge f0 f1 f4 f5 f3
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z)) |- ((?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))) ==> (w IN ((((wedge x) v) y) z)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f4 c==> c? / cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f2 * * * * part cwedge f0 f1 f3 f4
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z)))) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f4 creal_lt cazim f0 f1 f3 f4 cazim f0 f1 f3 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 creal_lt cazim f0 f1 f3 f2 cazim f0 f1 f3 f5
+ |- (((!y'. (((~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))))) ==> ((((((azim x) v) y) w) = ((((azim x) v) y) y')) = (y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)))))) ==> ((\y'. (((~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))))) ==> ((((((azim x) v) y) w) = ((((azim x) v) y) y')) = (y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)))))) y')) = ((\y'. (((~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))))) ==> ((((((azim x) v) y) w) = ((((azim x) v) y) y')) = (y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)))))) y'))
T c= c==> ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= c= cazim f0 f1 f2 f3 cazim f0 f1 f2 b0 cIN b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY * / c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= c= cazim f0 f1 f2 f3 cazim f0 f1 f2 b0 cIN b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY f4 * / c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= c= cazim f0 f1 f2 f3 cazim f0 f1 f2 b0 cIN b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY f4
- |- ((!z. (!y. (!v. (!x. (!w. (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))))))) = T)
T c= ! ! ! ! ! c==> c/\ caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b4 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b4 part cEMPTY b5 cwedge b3 b2 b1 b0 b5 cwedge b3 b2 b1 b0 f0 cT
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z)) |- (!y'. (((\y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))) y') ==> (w IN ((((wedge x) v) y) z))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f4 ! c==> * / cIN b1 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cIN f2 * * * * part cwedge f0 f1 f3 f4
+ |- ((!w. (!y. (!z. (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (z INSERT EMPTY))))) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z))))) ==> (w IN ((((wedge x) v) y) z)))))) = T)
T c= ! ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * * * part cwedge f0 f1 b1 b2 cIN b0 * * * * part cwedge f0 f1 b1 b2 cT
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z)) |- (((\y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))) y') ==> (w IN ((((wedge x) v) y) z)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f4 c==> * / cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 cIN f2 * * * * part cwedge f0 f1 f3 f4
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
- (~ (((((wedge x) v) y) z) y')) |- ((((((wedge x) v) y) z) y') ==> F)
T c==> c~ cwedge f0 f1 f2 f3 f4 c==> cwedge f0 f1 f2 f3 f4 cF
+ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (z INSERT EMPTY))))) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z))))) |- (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (z INSERT EMPTY))))) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z))))) /\ (w IN ((((wedge x) v) y) z)))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f4 c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f4 cIN f2 * * * * part cwedge f0 f1 f3 f4
+ |- (((!x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))) ==> ((\x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))) x)) = ((\x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))) x))
T c= c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)))), (y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)))) /\ (((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z)))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN f4 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f4 creal_lt cazim f0 f1 f3 f4 cazim f0 f1 f3 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 creal_lt cazim f0 f1 f3 f2 cazim f0 f1 f3 f5
- (?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z)) |- ((?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))) /\ (w IN ((((wedge x) v) y) z)))
T c==> c? / cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f4 c/\ c? / cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f2 * * * * part cwedge f0 f1 f3 f4
+ ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) |- ((((((wedge x) v) y) z) _6528374) \/ (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _6528374)))
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 c\/ cwedge f0 f1 f4 f5 f6 c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6
+ |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
+ ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) |- ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) _6528374)) \/ (((((wedge x) v) y) z) _6528374))
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 cwedge f0 f1 f4 f5 f6
+ |- (((!w'. (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (w' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)))) ==> (~ (collinear (x INSERT (v INSERT (w' INSERT EMPTY))))))) ==> ((\w'. (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (w' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)))) ==> (~ (collinear (x INSERT (v INSERT (w' INSERT EMPTY))))))) y')) = ((\w'. (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (w' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)))) ==> (~ (collinear (x INSERT (v INSERT (w' INSERT EMPTY))))))) y'))
T c= c==> ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * / c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f3 * / c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f3
+ |- ((\v1. (!w1. (!w2. (((((wedge v0) v1) w1) w2) = (GSPEC (\GEN%PVAR%5140. (?y. (((SETSPEC GEN%PVAR%5140) ((~ (collinear (v0 INSERT (v1 INSERT (y INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim v0) v1) w1) y)) /\ ((real_lt ((((azim v0) v1) w1) y)) ((((azim v0) v1) w1) w2))))) y)))))))) v1)
T * / ! ! c= * * * * part cwedge f0 b0 b1 b2 * part cGSPEC / c? / cSETSPEC b3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b0 b1 b4 creal_lt cazim f0 b0 b1 b4 cazim f0 b0 b1 b2 b4 f1
- (?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z)) |- (w IN ((((wedge x) v) y) z))
T c==> c? / cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f4 cIN f2 * * * * part cwedge f0 f1 f3 f4
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ ((\y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))) y') |- (y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))
T c==> * / cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cIN f3 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ |- ((((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y')) = (((y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (!x'. ((x' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) ==> (x' IN ((((wedge x) v) y) z))))) ==> (y' IN ((((wedge x) v) y) z))))
T c= c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 c==> c/\ cIN f3 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * * * part cwedge f0 f1 f4 f5 cIN f3 * * * * part cwedge f0 f1 f4 f5
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) |- (((~ (x = v)) /\ ((~ (x = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))) ==> ((y' IN ((((wedge x) v) y) z)) ==> (w IN ((((wedge x) v) y) z))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f4 * * * * part cwedge f0 f1 f3 f5 cIN f2 * * * * part cwedge f0 f1 f3 f5
+ |- (((!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))) ==> ((\u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))) w)) = ((\u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))) w))
T c= c==> ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
+ |- (((!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> (?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))) ==> ((\v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> (?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))) v)) = ((\v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> (?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))) v))
T c= c==> ! ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / cIN b2 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / cIN b2 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 * / ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / cIN b2 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY))) |- (((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z)))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z))))) = ((((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)))) ==> (~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY)))))) ==> (((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z)))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f4 f3 creal_lt cazim f0 f1 f4 f3 cazim f0 f1 f4 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f4 f2 creal_lt cazim f0 f1 f4 f2 cazim f0 f1 f4 f5 c==> c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f3 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f4 f3 creal_lt cazim f0 f1 f4 f3 cazim f0 f1 f4 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f4 f2 creal_lt cazim f0 f1 f4 f2 cazim f0 f1 f4 f5
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), ((~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (z INSERT EMPTY))))) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z)))) |- (w IN ((((wedge x) v) y) z))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f4 cIN f2 * * * * part cwedge f0 f1 f3 f4
+ |- ((!y. (!z. (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (z INSERT EMPTY))))) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z))))) ==> (w IN ((((wedge x) v) y) z))))) = T)
T c= ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 b0 b1 cIN f2 * * * * part cwedge f0 f1 b0 b1 cT
- (~ (w IN (aff (x INSERT (v INSERT EMPTY))))) |- ((w IN (aff (x INSERT (v INSERT EMPTY)))) = F)
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
+ |- (((!v1. (!w. (!x'. (!y. (((~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v1 INSERT (x' INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v1 INSERT (y INSERT EMPTY))))))) ==> ((((((azim x) v1) w) x') = ((((azim x) v1) w) y)) = (y IN ((aff_gt (x INSERT (v1 INSERT EMPTY))) (x' INSERT EMPTY))))))))) ==> ((\v1. (!w. (!x'. (!y. (((~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v1 INSERT (x' INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v1 INSERT (y INSERT EMPTY))))))) ==> ((((((azim x) v1) w) x') = ((((azim x) v1) w) y)) = (y IN ((aff_gt (x INSERT (v1 INSERT EMPTY))) (x' INSERT EMPTY))))))))) v)) = ((\v1. (!w. (!x'. (!y. (((~ (collinear (x INSERT (v1 INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v1 INSERT (x' INSERT EMPTY))))) /\ (~ (collinear (x INSERT (v1 INSERT (y INSERT EMPTY))))))) ==> ((((((azim x) v1) w) x') = ((((azim x) v1) w) y)) = (y IN ((aff_gt (x INSERT (v1 INSERT EMPTY))) (x' INSERT EMPTY))))))))) v))
T c= c==> ! ! ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b3 part cEMPTY c= c= cazim f0 b0 b1 b2 cazim f0 b0 b1 b3 cIN b3 * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY * / ! ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b3 part cEMPTY c= c= cazim f0 b0 b1 b2 cazim f0 b0 b1 b3 cIN b3 * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY f1 * / ! ! ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b3 part cEMPTY c= c= cazim f0 b0 b1 b2 cazim f0 b0 b1 b3 cIN b3 * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b2 part cEMPTY f1
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))), (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z)) |- ((y' IN ((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (w IN ((((wedge x) v) y) z)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f5 c/\ cIN f4 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f2 * * * * part cwedge f0 f1 f3 f5
- (~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) |- F
T c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF
- |- ((!x'. (P \/ (Q x'))) = (P \/ (!x'. (Q x'))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))), (y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY))) |- ((((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f4 creal_lt cazim f0 f1 f3 f4 cazim f0 f1 f3 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 creal_lt cazim f0 f1 f3 f2 cazim f0 f1 f3 f5
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), (y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY))) |- (((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z)))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f4 creal_lt cazim f0 f1 f3 f4 cazim f0 f1 f3 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 creal_lt cazim f0 f1 f3 f2 cazim f0 f1 f3 f5
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
+ |- ((\t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x)))))) t)
T * / c= * * part cINTER f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f0 cIN b2 b0 b2 f1
+ |- ((\v0. (!v1. (!w. (!x. (!y. (((~ (collinear (v0 INSERT (v1 INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (v0 INSERT (v1 INSERT (x INSERT EMPTY))))) /\ (~ (collinear (v0 INSERT (v1 INSERT (y INSERT EMPTY))))))) ==> ((((((azim v0) v1) w) x) = ((((azim v0) v1) w) y)) = (y IN ((aff_gt (v0 INSERT (v1 INSERT EMPTY))) (x INSERT EMPTY)))))))))) x)
T * / ! ! ! ! c==> c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b4 part cEMPTY c= c= cazim b0 b1 b2 b3 cazim b0 b1 b2 b4 cIN b4 * * part caff_gt * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b3 part cEMPTY f0
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))) |- (((y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY))) /\ (y' IN ((aff_gt (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)))) ==> (((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z)))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c/\ cIN f4 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f4 * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f4 creal_lt cazim f0 f1 f3 f4 cazim f0 f1 f3 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 creal_lt cazim f0 f1 f3 f2 cazim f0 f1 f3 f5
+ |- ((((((azim x) v) y) w) = ((((azim x) v) y) y')) ==> ((((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z)))))
T c==> c= cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c==> c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f4 creal_lt cazim f0 f1 f2 f4 cazim f0 f1 f2 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f2 f3 creal_lt cazim f0 f1 f2 f3 cazim f0 f1 f2 f5
+ |- ((!z. (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (z INSERT EMPTY))))) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z))))) ==> (w IN ((((wedge x) v) y) z)))) = T)
T c= ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 b0 cIN f2 * * * * part cwedge f0 f1 f3 b0 cT
+ |- (((((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (y' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)))) ==> (~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY)))))) ==> (((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z)))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z))))) = (((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z)))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z)))))
T c= c==> c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f3 * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f4 f3 creal_lt cazim f0 f1 f4 f3 cazim f0 f1 f4 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f4 f2 creal_lt cazim f0 f1 f4 f2 cazim f0 f1 f4 f5 c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f4 f3 creal_lt cazim f0 f1 f4 f3 cazim f0 f1 f4 f5 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f4 f2 creal_lt cazim f0 f1 f4 f2 cazim f0 f1 f4 f5
- (~ (x = w)) |- (~ (w = x))
T c==> c~ c= f0 f1 c~ c= f1 f0
+ (~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (v INSERT (y INSERT EMPTY))))), ((~ (collinear (x INSERT (v INSERT (z INSERT EMPTY))))) /\ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) SUBSET ((((wedge x) v) y) z))) |- (w IN ((((wedge x) v) y) z))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * * * part cwedge f0 f1 f3 f4 cIN f2 * * * * part cwedge f0 f1 f3 f4
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ |- ((w IN (GSPEC (\GEN%PVAR%5140. (?y'. (((SETSPEC GEN%PVAR%5140) ((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z))))) y'))))) = ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z)))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 f2 f3 b1 creal_lt cazim f1 f2 f3 b1 cazim f1 f2 f3 f4 b1 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 f2 f3 f0 creal_lt cazim f1 f2 f3 f0 cazim f1 f2 f3 f4
- |- ((((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y')) = T)
T c= c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cT
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- |- (((!v. (!x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)))) ==> ((\v. (!x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)))) v)) = ((\v. (!x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)))) v))
T c= c==> ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b3 cwedge b1 b0 f1 f2 b3 cwedge b1 b0 f1 f2 f0 cF * / ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b3 cwedge b1 b0 f1 f2 b3 cwedge b1 b0 f1 f2 f0 cF f3 * / ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b3 cwedge b1 b0 f1 f2 b3 cwedge b1 b0 f1 f2 f0 cF f3
- |- (((!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)) ==> ((\w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)) w)) = ((\w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)) w))
T c= c==> ! c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b1 cwedge f0 f1 f3 f4 b1 cwedge f0 f1 f3 f4 f2 cF * / c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b1 cwedge f0 f1 f3 f4 b1 cwedge f0 f1 f3 f4 f2 cF f5 * / c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY b1 cwedge f0 f1 f3 f4 b1 cwedge f0 f1 f3 f4 f2 cF f5
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- (~ (x = w)) |- ((w = x) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
+ |- (((!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)))))) ==> ((\w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)))))) w)) = ((\w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)))))) w))
T c= c==> ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY f2
+ (~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) |- (((((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z)))) = (((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z)))) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 creal_lt cazim f0 f1 f3 f2 cazim f0 f1 f3 f4 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f5 creal_lt cazim f0 f1 f3 f5 cazim f0 f1 f3 f4 c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f2 creal_lt cazim f0 f1 f3 f2 cazim f0 f1 f3 f4 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f3 f5 creal_lt cazim f0 f1 f3 f5 cazim f0 f1 f3 f4
+ |- ((((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) = (((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) INTER ((aff_gt (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z)))) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z)))))) = (((~ (collinear (x INSERT (v INSERT (y' INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) y')) /\ ((real_lt ((((azim x) v) y) y')) ((((azim x) v) y) z)))) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) y) w)) /\ ((real_lt ((((azim x) v) y) w)) ((((azim x) v) y) z))))))
T c= c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINTER * * part caff_gt * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY * * part caff_gt * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f4 f3 creal_lt cazim f0 f1 f4 f3 cazim f0 f1 f4 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f4 f2 creal_lt cazim f0 f1 f4 f2 cazim f0 f1 f4 f5 c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f4 f3 creal_lt cazim f0 f1 f4 f3 cazim f0 f1 f4 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 f1 f4 f2 creal_lt cazim f0 f1 f4 f2 cazim f0 f1 f4 f5
+ |- ((\v. (!w'. (((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ (w' IN ((aff_gt (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)))) ==> (~ (collinear (x INSERT (v INSERT (w' INSERT EMPTY)))))))) v)
T * / ! c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY cIN b1 * * part caff_gt * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- ((!x'. (P x')) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- ((!y'. (!z. (!y. (!v. (!x. (!w. (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y')))))))) = (!y'. (!z. (!y. (!v. (!x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))))))))
T c= ! ! ! ! ! ! c==> c/\ caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b5 part cEMPTY b0 ! c==> caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b5 part cEMPTY b6 cwedge b4 b3 b2 b1 b6 cwedge b4 b3 b2 b1 b0 ! ! ! ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b5 part cEMPTY b0 ! c==> caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b5 part cEMPTY b6 cwedge b4 b3 b2 b1 b6 cwedge b4 b3 b2 b1 b0 cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) = T)
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cT
- |- ((!v. (!x. (!w. (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))))) = T)
T c= ! ! ! c==> c/\ caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY b3 cwedge b1 b0 f1 f2 b3 cwedge b1 b0 f1 f2 f0 cT
- ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F), (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)) |- (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) /\ ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))
T c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c/\ c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF
- (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)) |- ((((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)) /\ (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)))
T c==> c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c/\ c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF
- |- ((!x. (!w. (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y')))) = T)
T c= ! ! c==> c/\ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f1 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b2 cwedge b0 f0 f2 f3 b2 cwedge b0 f0 f2 f3 f1 cT
- |- (((((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)) ==> (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))) = (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) ==> ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F)))
T c= c==> c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF
- |- ((\y'. (!z. (!y. (!v. (!x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))))))) y')
T * / ! ! ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b5 part cEMPTY b0 ! c==> caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b5 part cEMPTY b6 cwedge b4 b3 b2 b1 b6 cwedge b4 b3 b2 b1 b0 cF f0
- |- (((!x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))) ==> ((\x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))) x)) = ((\x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))) x))
T c= c==> ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f1 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b2 cwedge b0 f0 f2 f3 b2 cwedge b0 f0 f2 f3 f1 cF * / ! c==> c~ c==> c/\ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f1 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b2 cwedge b0 f0 f2 f3 b2 cwedge b0 f0 f2 f3 f1 cF f4 * / ! c==> c~ c==> c/\ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f1 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b2 cwedge b0 f0 f2 f3 b2 cwedge b0 f0 f2 f3 f1 cF f4
- ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) |- ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y')) ==> (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y'))
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 c==> c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- ((~ p) = (p ==> F))
T c= c~ f0 c==> f0 cF
- ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) |- (((((((wedge x) v) y) z) y') ==> F) = F)
T c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 c= c==> cwedge f0 f1 f4 f5 f3 cF cF
- |- (((!y'. (!z. (!y. (!v. (!x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))))))) ==> ((\y'. (!z. (!y. (!v. (!x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))))))) y')) = ((\y'. (!z. (!y. (!v. (!x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))))))) y'))
T c= c==> ! ! ! ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b5 part cEMPTY b0 ! c==> caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b5 part cEMPTY b6 cwedge b4 b3 b2 b1 b6 cwedge b4 b3 b2 b1 b0 cF * / ! ! ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b5 part cEMPTY b0 ! c==> caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b5 part cEMPTY b6 cwedge b4 b3 b2 b1 b6 cwedge b4 b3 b2 b1 b0 cF f0 * / ! ! ! ! ! c==> c~ c==> c/\ caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b5 part cEMPTY b0 ! c==> caff_gt * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b5 part cEMPTY b6 cwedge b4 b3 b2 b1 b6 cwedge b4 b3 b2 b1 b0 cF f0
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- |- ((\x. (!w. ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))) x)
T * / ! c==> c~ c==> c/\ caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f1 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT b1 part cEMPTY b2 cwedge b0 f0 f2 f3 b2 cwedge b0 f0 f2 f3 f1 cF f4
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((!x''. ((~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'')) \/ (((((wedge x) v) y) z) x'))) = ((!x'. (~ (((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x'))) \/ (((((wedge x) v) y) z) x')))
T c= ! c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f3 f4 f5 c\/ ! c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f3 f4 f5
- ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) |- (((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F) /\ ((~ (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y'))) ==> F))
T c==> c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c/\ c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF c==> c~ c==> c/\ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cwedge f0 f1 f4 f5 b0 cwedge f0 f1 f4 f5 f3 cF
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((!y. (!v. (!x. (!w. (((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) y') /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) x') ==> (((((wedge x) v) y) z) x')))) ==> (((((wedge x) v) y) z) y')))))) = T)
T c= ! ! ! ! c==> c/\ caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY f0 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY b4 cwedge b2 b1 b0 f1 b4 cwedge b2 b1 b0 f1 f0 cT
