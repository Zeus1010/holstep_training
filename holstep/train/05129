N Functional_equation.mu6_x_mu_y
C |- (!y1. (!y2. (!y3. (!x4. (!x5. (!x6. ((((real_le (real_of_num (NUMERAL _0))) y1) /\ (((real_le (real_of_num (NUMERAL _0))) y2) /\ ((real_le (real_of_num (NUMERAL _0))) y3))) ==> ((((mu_y y1) y2) y3) = ((((((mu6_x ((real_mul y1) y1)) ((real_mul y2) y2)) ((real_mul y3) y3)) x4) x5) x6)))))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 creal_le creal_of_num cNUMERAL c_0 f2 c= cmu_y f0 f1 f2 cmu6_x creal_mul f0 f0 creal_mul f1 f1 creal_mul f2 f2 f3 f4 f5
D TRUTH
A |- T
T cT
D Nonlin_def.mu_y
A |- (!y1. (!y2. (!y3. ((((mu_y y1) y2) y3) = ((real_add ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) ((real_add ((real_mul ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) y1))) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_sub ((real_sub ((real_mul ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y2)) y3))))))))
T c= cmu_y f0 f1 f2 creal_add cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_add creal_mul cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 f0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_sub creal_sub creal_mul cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 f2
D Nonlin_def.mu6_x
A |- (mu6_x = ((add6 (constant6 ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))))))) ((add6 ((mul6 (constant6 ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) ((sub6 (constant6 ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) proj_y1))) ((mul6 (constant6 ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) ((sub6 ((sub6 (constant6 ((real_mul ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) proj_y2)) proj_y3)))))
T c= part cmu6_x * * part cadd6 * part cconstant6 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * part cadd6 * * part cmul6 * part cconstant6 cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 * * part csub6 * part cconstant6 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 part cproj_y1 * * part cmul6 * part cconstant6 cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 * * part csub6 * * part csub6 * part cconstant6 creal_mul cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 part cproj_y2 part cproj_y3
D Nonlinear_lemma.sqrtxx
A |- (!x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_mul x) x)) = x)))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= csqrt creal_mul f0 f0 f0
D Functional_equation.constant6
A |- (!x1. (!x2. (!x3. (!x4. (!x5. (!x6. (!c. ((((((((constant6 c) x1) x2) x3) x4) x5) x6) = c))))))))
T c= cconstant6 f0 f1 f2 f3 f4 f5 f6 f0
D Functional_equation.add6
A |- (!f. (!g. (!x1. (!x2. (!x3. (!x4. (!x5. (!x6. (((((((((add6 f) g) x1) x2) x3) x4) x5) x6) = ((real_add ((((((f x1) x2) x3) x4) x5) x6)) ((((((g x1) x2) x3) x4) x5) x6)))))))))))
T c= cadd6 f0 f1 f2 f3 f4 f5 f6 f7 creal_add * * * * * * f0 f2 f3 f4 f5 f6 f7 * * * * * * f1 f2 f3 f4 f5 f6 f7
D Functional_equation.mul6
A |- (!f. (!g. (!x1. (!x2. (!x3. (!x4. (!x5. (!x6. (((((((((mul6 f) g) x1) x2) x3) x4) x5) x6) = ((real_mul ((((((f x1) x2) x3) x4) x5) x6)) ((((((g x1) x2) x3) x4) x5) x6)))))))))))
T c= cmul6 f0 f1 f2 f3 f4 f5 f6 f7 creal_mul * * * * * * f0 f2 f3 f4 f5 f6 f7 * * * * * * f1 f2 f3 f4 f5 f6 f7
D Functional_equation.sub6
A |- (!f. (!g. (!x1. (!x2. (!x3. (!x4. (!x5. (!x6. (((((((((sub6 f) g) x1) x2) x3) x4) x5) x6) = ((real_sub ((((((f x1) x2) x3) x4) x5) x6)) ((((((g x1) x2) x3) x4) x5) x6)))))))))))
T c= csub6 f0 f1 f2 f3 f4 f5 f6 f7 creal_sub * * * * * * f0 f2 f3 f4 f5 f6 f7 * * * * * * f1 f2 f3 f4 f5 f6 f7
D Functional_equation.proj_y1
A |- (!x2. (!x3. (!x4. (!x5. (!x6. (!x1. (((((((proj_y1 x1) x2) x3) x4) x5) x6) = (sqrt x1))))))))
T c= cproj_y1 f0 f1 f2 f3 f4 f5 csqrt f0
D Functional_equation.proj_y2
A |- (!x1. (!x3. (!x4. (!x5. (!x6. (!x2. (((((((proj_y2 x1) x2) x3) x4) x5) x6) = (sqrt x2))))))))
T c= cproj_y2 f0 f1 f2 f3 f4 f5 csqrt f1
D Functional_equation.proj_y3
A |- (!x1. (!x2. (!x4. (!x5. (!x6. (!x3. (((((((proj_y3 x1) x2) x3) x4) x5) x6) = (sqrt x3))))))))
T c= cproj_y3 f0 f1 f2 f3 f4 f5 csqrt f2
+ (((real_le (real_of_num (NUMERAL _0))) y1) /\ (((real_le (real_of_num (NUMERAL _0))) y2) /\ ((real_le (real_of_num (NUMERAL _0))) y3))) |- ((((real_le (real_of_num (NUMERAL _0))) y1) /\ (((real_le (real_of_num (NUMERAL _0))) y2) /\ ((real_le (real_of_num (NUMERAL _0))) y3))) /\ (((real_add ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) ((real_add ((real_mul ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) y1))) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_sub ((real_sub ((real_mul ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y2)) y3)))) = ((real_add ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) ((real_add ((real_mul ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (sqrt ((real_mul y1) y1))))) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_sub ((real_sub ((real_mul ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (sqrt ((real_mul y2) y2)))) (sqrt ((real_mul y3) y3))))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 creal_le creal_of_num cNUMERAL c_0 f2 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 creal_le creal_of_num cNUMERAL c_0 f2 c= creal_add cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_add creal_mul cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 f0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_sub creal_sub creal_mul cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 f2 creal_add cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_add creal_mul cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 csqrt creal_mul f0 f0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_sub creal_sub creal_mul cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_mul f1 f1 csqrt creal_mul f2 f2
+ |- (((((real_le (real_of_num (NUMERAL _0))) y1) /\ (((real_le (real_of_num (NUMERAL _0))) y2) /\ ((real_le (real_of_num (NUMERAL _0))) y3))) ==> (((real_add ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) ((real_add ((real_mul ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) y1))) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_sub ((real_sub ((real_mul ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y2)) y3)))) = ((real_add ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) ((real_add ((real_mul ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (sqrt ((real_mul y1) y1))))) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_sub ((real_sub ((real_mul ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (sqrt ((real_mul y2) y2)))) (sqrt ((real_mul y3) y3)))))))) = T)
T c= c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 creal_le creal_of_num cNUMERAL c_0 f2 c= creal_add cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_add creal_mul cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 f0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_sub creal_sub creal_mul cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 f2 creal_add cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_add creal_mul cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 csqrt creal_mul f0 f0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_sub creal_sub creal_mul cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_mul f1 f1 csqrt creal_mul f2 f2 cT
+ ((real_le (real_of_num (NUMERAL _0))) y1), ((real_le (real_of_num (NUMERAL _0))) y2), ((real_le (real_of_num (NUMERAL _0))) y3) |- (((real_add ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) ((real_add ((real_mul ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) y1))) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_sub ((real_sub ((real_mul ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y2)) y3)))) = ((real_add ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) ((real_add ((real_mul ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (sqrt ((real_mul y1) y1))))) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_sub ((real_sub ((real_mul ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (sqrt ((real_mul y2) y2)))) (sqrt ((real_mul y3) y3)))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 f2 c= creal_add cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_add creal_mul cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 f0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_sub creal_sub creal_mul cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 f2 creal_add cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_add creal_mul cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 csqrt creal_mul f0 f0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_sub creal_sub creal_mul cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_mul f1 f1 csqrt creal_mul f2 f2
+ |- ((\x. (((real_le (real_of_num (NUMERAL _0))) x) ==> ((sqrt ((real_mul x) x)) = x))) x)
T * / c==> creal_le creal_of_num cNUMERAL c_0 b0 c= csqrt creal_mul b0 b0 b0 f0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- ((real_le (real_of_num (NUMERAL _0))) y3) |- (((real_le (real_of_num (NUMERAL _0))) y3) = T)
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= creal_le creal_of_num cNUMERAL c_0 f0 cT
+ |- ((!y3. ((((real_le (real_of_num (NUMERAL _0))) y1) /\ (((real_le (real_of_num (NUMERAL _0))) y2) /\ ((real_le (real_of_num (NUMERAL _0))) y3))) ==> (((real_add ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) ((real_add ((real_mul ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) y1))) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_sub ((real_sub ((real_mul ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y2)) y3)))) = ((real_add ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 _0)))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) ((real_add ((real_mul ((DECIMAL (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_sub ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (sqrt ((real_mul y1) y1))))) ((real_mul ((DECIMAL (NUMERAL (BIT1 _0))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((real_sub ((real_sub ((real_mul ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (sqrt ((real_mul y2) y2)))) (sqrt ((real_mul y3) y3))))))))) = T)
T c= ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 creal_le creal_of_num cNUMERAL c_0 b0 c= creal_add cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_add creal_mul cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 f0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_sub creal_sub creal_mul cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 b0 creal_add cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 creal_add creal_mul cDECIMAL cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_sub cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 csqrt creal_mul f0 f0 creal_mul cDECIMAL cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_sub creal_sub creal_mul cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt creal_mul f1 f1 csqrt creal_mul b0 b0 cT
- ((real_le (real_of_num (NUMERAL _0))) x) |- (((real_le (real_of_num (NUMERAL _0))) x) /\ ((sqrt ((real_mul x) x)) = x))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f0 c= csqrt creal_mul f0 f0 f0
- ((real_le (real_of_num (NUMERAL _0))) y3) |- (T = ((real_le (real_of_num (NUMERAL _0))) y3))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= cT creal_le creal_of_num cNUMERAL c_0 f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
