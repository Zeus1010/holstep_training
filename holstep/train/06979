N List_hypermap.mem_find_face_imp_faces_eq
C |- (!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D MEM
A |- ((((MEM x) NIL) = F) /\ (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t))))
T c/\ c= cMEM f0 cNIL cF c= cMEM f0 cCONS f1 f2 c\/ c= f0 f1 cMEM f0 f2
D Ssrbool.contraLR
A |- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c))))
T c==> c==> c~ f0 c~ f1 c==> f1 f0
D List_hypermap.find_face_alt
A |- (!L. (!d. (((find_face L) d) = (list_pairs ((find_pair_list L) d)))))
T c= cfind_face f0 f1 clist_pairs cfind_pair_list f0 f1
D List_hypermap.mem_find_pair_list
A |- (!d. (!L. (((MEM d) (list_of_darts L)) ==> ((MEM ((find_pair_list L) d)) L))))
T c==> cMEM f0 clist_of_darts f1 cMEM cfind_pair_list f1 f0 f1
D List_hypermap.find_pair_list_unique
A |- (!l. (!d. (!L. (((uniq (list_of_darts L)) /\ (((MEM l) L) /\ ((MEM d) (list_pairs l)))) ==> (l = ((find_pair_list L) d))))))
T c==> c/\ cuniq clist_of_darts f0 c/\ cMEM f1 f0 cMEM f2 clist_pairs f1 c= f1 cfind_pair_list f0 f2
D List_hypermap.find_face_empty
A |- (!d. (!L. ((((find_face L) d) = NIL) = (~ ((MEM d) (list_of_darts L))))))
T c= c= cfind_face f0 f1 cNIL c~ cMEM f1 clist_of_darts f0
+ |- ((\d. (!L. (((MEM d) (list_of_darts L)) ==> ((MEM ((find_pair_list L) d)) L)))) d)
T * / ! c==> cMEM b0 clist_of_darts b1 cMEM cfind_pair_list b1 b0 b1 f0
+ |- ((((find_face L) d2) = NIL) ==> (~ ((MEM d1) ((find_face L) d2))))
T c==> c= cfind_face f0 f1 cNIL c~ cMEM f2 cfind_face f0 f1
+ |- (((!L. (((MEM d) (list_of_darts L)) ==> ((MEM ((find_pair_list L) d)) L))) ==> ((\L. (((MEM d) (list_of_darts L)) ==> ((MEM ((find_pair_list L) d)) L))) L)) = ((\L. (((MEM d) (list_of_darts L)) ==> ((MEM ((find_pair_list L) d)) L))) L))
T c= c==> ! c==> cMEM f0 clist_of_darts b0 cMEM cfind_pair_list b0 f0 b0 * / c==> cMEM f0 clist_of_darts b0 cMEM cfind_pair_list b0 f0 b0 f1 * / c==> cMEM f0 clist_of_darts b0 cMEM cfind_pair_list b0 f0 b0 f1
+ ((MEM d1) ((find_face L) d2)) |- (((((MEM ((find_pair_list L) d2)) L) = T) ==> (((MEM ((find_pair_list L) d2)) L) /\ T)) = (((MEM d2) (list_of_darts L)) /\ ((((MEM ((find_pair_list L) d2)) L) = T) ==> (((MEM ((find_pair_list L) d2)) L) /\ T))))
T c==> cMEM f0 cfind_face f1 f2 c= c==> c= cMEM cfind_pair_list f1 f2 f1 cT c/\ cMEM cfind_pair_list f1 f2 f1 cT c/\ cMEM f2 clist_of_darts f1 c==> c= cMEM cfind_pair_list f1 f2 f1 cT c/\ cMEM cfind_pair_list f1 f2 f1 cT
- |- ((A /\ T) = A)
T c= c/\ f0 cT f0
+ T, (uniq (list_of_darts L)) |- (T /\ ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))
T c==> cT c==> cuniq clist_of_darts f0 c/\ cT c==> c/\ cMEM f1 f0 cMEM f2 clist_pairs f1 c= f1 cfind_pair_list f0 f2
- |- (((!t. ((((MEM x) NIL) = F) /\ (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t))))) ==> ((\t. ((((MEM x) NIL) = F) /\ (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t))))) t)) = ((\t. ((((MEM x) NIL) = F) /\ (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t))))) t))
T c= c==> ! c/\ c= cMEM f0 cNIL cF c= cMEM f0 cCONS f1 b0 c\/ c= f0 f1 cMEM f0 b0 * / c/\ c= cMEM f0 cNIL cF c= cMEM f0 cCONS f1 b0 c\/ c= f0 f1 cMEM f0 b0 f2 * / c/\ c= cMEM f0 cNIL cF c= cMEM f0 cCONS f1 b0 c\/ c= f0 f1 cMEM f0 b0 f2
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
+ (uniq (list_of_darts L1)) |- ((((((MEM l) L1) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L1) d))) ==> (((MEM l) L1) ==> (((MEM d) (list_pairs l)) ==> (l = ((find_pair_list L1) d))))) = (((MEM l) L1) ==> (((MEM d) (list_pairs l)) ==> (l = ((find_pair_list L1) d)))))
T c==> cuniq clist_of_darts f0 c= c==> c==> c/\ cMEM f1 f0 cMEM f2 clist_pairs f1 c= f1 cfind_pair_list f0 f2 c==> cMEM f1 f0 c==> cMEM f2 clist_pairs f1 c= f1 cfind_pair_list f0 f2 c==> cMEM f1 f0 c==> cMEM f2 clist_pairs f1 c= f1 cfind_pair_list f0 f2
+ (((find_pair_list L) d2) = ((find_pair_list L) d1)) |- ((((find_pair_list L) d2) = ((find_pair_list L) d1)) /\ (((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))) = T))
T c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c/\ c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 cT
+ |- ((\L. (!d. ((list_pairs ((find_pair_list L) d)) = ((find_face L) d)))) L)
T * / ! c= clist_pairs cfind_pair_list b0 b1 cfind_face b0 b1 f0
+ (uniq (list_of_darts L)) |- (!l. (!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d)))))
T c==> cuniq clist_of_darts f0 ! ! c==> c/\ cMEM b0 f0 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list f0 b1
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- |- (T = (list_pairs = list_pairs))
T c= cT c= part clist_pairs part clist_pairs
+ |- (((T /\ A) = A) /\ ((A /\ T) = A))
T c/\ c= c/\ cT f0 f0 c= c/\ f0 cT f0
+ (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- (((!b. (((~ c) ==> (~ b)) ==> (b ==> c))) ==> ((\b. (((~ c) ==> (~ b)) ==> (b ==> c))) b)) = ((\b. (((~ c) ==> (~ b)) ==> (b ==> c))) b))
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c= c==> ! c==> c==> c~ f0 c~ b0 c==> b0 f0 * / c==> c==> c~ f0 c~ b0 c==> b0 f0 f1 * / c==> c==> c~ f0 c~ b0 c==> b0 f0 f1
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- ((\c. (((~ c) ==> (~ b)) ==> (b ==> c))) c)
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 * / c==> c==> c~ b0 c~ f0 c==> f0 b0 f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- (!l. (!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))) |- (((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))) = T)
T c==> ! ! c==> c/\ cMEM b0 f0 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list f0 b1 c= c==> c/\ cMEM f1 f0 cMEM f2 clist_pairs f1 c= f1 cfind_pair_list f0 f2 cT
- |- (((((list_pairs = list_pairs) /\ (((find_pair_list L) d2) = ((find_pair_list L) d1))) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1)))) ==> (((list_pairs = list_pairs) /\ (((find_pair_list L) d2) = ((find_pair_list L) d1))) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))))) = (((list_pairs = list_pairs) /\ (((find_pair_list L) d2) = ((find_pair_list L) d1))) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1)))))
T c= c==> c==> c/\ c= part clist_pairs part clist_pairs c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c==> c/\ c= part clist_pairs part clist_pairs c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c==> c/\ c= part clist_pairs part clist_pairs c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> (((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))) = T)) ==> (((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1)))) = ((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> T))) = (((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1)))) = ((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> T)))
T c= c==> c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 cT c= c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 cT c= c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 cT
+ (uniq (list_of_darts L)), ((MEM d1) ((find_face L) d2)) |- ((list_pairs ((find_pair_list L) d1)) = (list_pairs ((find_pair_list L) d2)))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2
+ (!l. (!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))) |- (!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))
T c==> ! ! c==> c/\ cMEM b0 f0 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list f0 b1 ! c==> c/\ cMEM f1 f0 cMEM b0 clist_pairs f1 c= f1 cfind_pair_list f0 b0
+ |- ((!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))))) = T)
T c= ! ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 cT
- ((~ c) ==> (~ b)) |- ((!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) ==> (b ==> c))
T c==> c==> c~ f0 c~ f1 c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c==> f1 f0
- |- ((\x. (!t. ((((MEM x) NIL) = F) /\ (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t)))))) x)
T * / ! c/\ c= cMEM b0 cNIL cF c= cMEM b0 cCONS f0 b1 c\/ c= b0 f0 cMEM b0 b1 f1
+ |- (T = ((list_pairs = list_pairs) ==> ((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))))))
T c= cT c==> c= part clist_pairs part clist_pairs c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2
+ (uniq (list_of_darts L)) |- (((!l. (!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))) ==> (((find_pair_list L) d2) = ((find_pair_list L) d1))) = (((find_pair_list L) d2) = ((find_pair_list L) d1)))
T c==> cuniq clist_of_darts f0 c= c==> ! ! c==> c/\ cMEM b0 f0 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list f0 b1 c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= cfind_pair_list f0 f1 cfind_pair_list f0 f2
+ |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))) = T)
T c= c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2 cT
+ |- (((!d. (!L. (((uniq (list_of_darts L)) /\ (((MEM l) L) /\ ((MEM d) (list_pairs l)))) ==> (l = ((find_pair_list L) d))))) ==> ((\d. (!L. (((uniq (list_of_darts L)) /\ (((MEM l) L) /\ ((MEM d) (list_pairs l)))) ==> (l = ((find_pair_list L) d))))) d)) = ((\d. (!L. (((uniq (list_of_darts L)) /\ (((MEM l) L) /\ ((MEM d) (list_pairs l)))) ==> (l = ((find_pair_list L) d))))) d))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts b1 c/\ cMEM f0 b1 cMEM b0 clist_pairs f0 c= f0 cfind_pair_list b1 b0 * / ! c==> c/\ cuniq clist_of_darts b1 c/\ cMEM f0 b1 cMEM b0 clist_pairs f0 c= f0 cfind_pair_list b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts b1 c/\ cMEM f0 b1 cMEM b0 clist_pairs f0 c= f0 cfind_pair_list b1 b0 f1
- (!l. (!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))), (((MEM l) L) /\ ((MEM d) (list_pairs l))) |- ((!l. (!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))) /\ (l = ((find_pair_list L) d)))
T c==> ! ! c==> c/\ cMEM b0 f0 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list f0 b1 c==> c/\ cMEM f1 f0 cMEM f2 clist_pairs f1 c/\ ! ! c==> c/\ cMEM b0 f0 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list f0 b1 c= f1 cfind_pair_list f0 f2
+ |- (((!l. (!d. (!L. (((uniq (list_of_darts L)) /\ (((MEM l) L) /\ ((MEM d) (list_pairs l)))) ==> (l = ((find_pair_list L) d)))))) ==> ((\l. (!d. (!L. (((uniq (list_of_darts L)) /\ (((MEM l) L) /\ ((MEM d) (list_pairs l)))) ==> (l = ((find_pair_list L) d)))))) l)) = ((\l. (!d. (!L. (((uniq (list_of_darts L)) /\ (((MEM l) L) /\ ((MEM d) (list_pairs l)))) ==> (l = ((find_pair_list L) d)))))) l))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b2 c/\ cMEM b0 b2 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b2 c/\ cMEM b0 b2 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b2 c/\ cMEM b0 b2 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list b2 b1 f0
+ |- ((~ ((MEM d) (list_of_darts L))) = (((find_face L) d) = NIL))
T c= c~ cMEM f0 clist_of_darts f1 c= cfind_face f1 f0 cNIL
+ |- (((!x. (!y. ((x = y) = (y = x)))) ==> ((\x. (!y. ((x = y) = (y = x)))) x)) = ((\x. (!y. ((x = y) = (y = x)))) x))
T c= c==> ! ! c= c= b0 b1 c= b1 b0 * / ! c= c= b0 b1 c= b1 b0 f0 * / ! c= c= b0 b1 c= b1 b0 f0
+ |- (((!L. ((~ ((MEM d) (list_of_darts L))) = (((find_face L) d) = NIL))) ==> ((\L. ((~ ((MEM d) (list_of_darts L))) = (((find_face L) d) = NIL))) L)) = ((\L. ((~ ((MEM d) (list_of_darts L))) = (((find_face L) d) = NIL))) L))
T c= c==> ! c= c~ cMEM f0 clist_of_darts b0 c= cfind_face b0 f0 cNIL * / c= c~ cMEM f0 clist_of_darts b0 c= cfind_face b0 f0 cNIL f1 * / c= c~ cMEM f0 clist_of_darts b0 c= cfind_face b0 f0 cNIL f1
+ (((MEM ((find_pair_list L) d2)) L) = T) |- ((((MEM ((find_pair_list L) d2)) L) = T) /\ (((MEM ((find_pair_list L) d2)) L) /\ T))
T c==> c= cMEM cfind_pair_list f0 f1 f0 cT c/\ c= cMEM cfind_pair_list f0 f1 f0 cT c/\ cMEM cfind_pair_list f0 f1 f0 cT
- |- ((\t. ((((MEM x) NIL) = F) /\ (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t))))) t)
T * / c/\ c= cMEM f0 cNIL cF c= cMEM f0 cCONS f1 b0 c\/ c= f0 f1 cMEM f0 b0 f2
+ |- (((!y. ((x = y) = (y = x))) ==> ((\y. ((x = y) = (y = x))) y)) = ((\y. ((x = y) = (y = x))) y))
T c= c==> ! c= c= f0 b0 c= b0 f0 * / c= c= f0 b0 c= b0 f0 f1 * / c= c= f0 b0 c= b0 f0 f1
- ((list_pairs = list_pairs) /\ (((find_pair_list L) d2) = ((find_pair_list L) d1))), (((list_pairs = list_pairs) /\ (((find_pair_list L) d2) = ((find_pair_list L) d1))) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1)))) |- (((list_pairs = list_pairs) /\ (((find_pair_list L) d2) = ((find_pair_list L) d1))) /\ ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))))
T c==> c/\ c= part clist_pairs part clist_pairs c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c==> c==> c/\ c= part clist_pairs part clist_pairs c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c/\ c/\ c= part clist_pairs part clist_pairs c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2
+ |- ((((MEM ((find_pair_list L) d2)) L) /\ ((MEM d1) ((find_face L) d2))) = (((MEM ((find_pair_list L) d2)) L) /\ ((MEM d1) (list_pairs ((find_pair_list L) d2)))))
T c= c/\ cMEM cfind_pair_list f0 f1 f0 cMEM f2 cfind_face f0 f1 c/\ cMEM cfind_pair_list f0 f1 f0 cMEM f2 clist_pairs cfind_pair_list f0 f1
- (uniq (list_of_darts L)) |- ((uniq (list_of_darts L)) /\ (((MEM d1) ((find_face L) d2)) ==> (((find_face L) d1) = ((find_face L) d2))))
T c==> cuniq clist_of_darts f0 c/\ cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- ((((~ c) ==> (~ b)) ==> (b ==> c)) = T)
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c= c==> c==> c~ f0 c~ f1 c==> f1 f0 cT
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))), ((~ c) ==> (~ b)) |- (((~ c) ==> (~ b)) /\ (b ==> c))
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c==> c==> c~ f0 c~ f1 c/\ c==> c~ f0 c~ f1 c==> f1 f0
- |- ((!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) ==> (!b. (!c. (((~ c) ==> (~ b)) ==> (b ==> c)))))
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 ! ! c==> c==> c~ b1 c~ b0 c==> b0 b1
+ (uniq (list_of_darts L)), ((MEM d1) ((find_face L) d2)) |- ((list_pairs = list_pairs) /\ (((find_pair_list L) d2) = ((find_pair_list L) d1)))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f2 c/\ c= part clist_pairs part clist_pairs c= cfind_pair_list f0 f2 cfind_pair_list f0 f1
+ (((find_face L) d2) = NIL) |- ((((find_face L) d2) = NIL) /\ (~ ((MEM d1) ((find_face L) d2))))
T c==> c= cfind_face f0 f1 cNIL c/\ c= cfind_face f0 f1 cNIL c~ cMEM f2 cfind_face f0 f1
+ |- (((!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) ==> (((MEM d1) ((find_face L) d2)) ==> ((MEM d2) (list_of_darts L)))) = (((MEM d1) ((find_face L) d2)) ==> ((MEM d2) (list_of_darts L))))
T c= c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c==> cMEM f0 cfind_face f1 f2 cMEM f2 clist_of_darts f1 c==> cMEM f0 cfind_face f1 f2 cMEM f2 clist_of_darts f1
+ ((MEM d1) ((find_face L) d2)) |- (((MEM ((find_pair_list L) d2)) L) /\ ((MEM d1) (list_pairs ((find_pair_list L) d2))))
T c==> cMEM f0 cfind_face f1 f2 c/\ cMEM cfind_pair_list f1 f2 f1 cMEM f0 clist_pairs cfind_pair_list f1 f2
- |- ((((list_pairs = list_pairs) /\ (((find_pair_list L) d2) = ((find_pair_list L) d1))) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1)))) ==> (((list_pairs = list_pairs) /\ (((find_pair_list L) d2) = ((find_pair_list L) d1))) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1)))))
T c==> c==> c/\ c= part clist_pairs part clist_pairs c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c==> c/\ c= part clist_pairs part clist_pairs c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2
+ ((MEM d) (list_pairs l)), ((MEM l) L) |- ((uniq (list_of_darts L)) ==> (l = ((find_pair_list L) d)))
T c==> cMEM f0 clist_pairs f1 c==> cMEM f1 f2 c==> cuniq clist_of_darts f2 c= f1 cfind_pair_list f2 f0
- |- (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t)))
T c= cMEM f0 cCONS f1 f2 c\/ c= f0 f1 cMEM f0 f2
- |- ((T ==> A) = A)
T c= c==> cT f0 f0
+ |- (((!L. (!d. (((find_face L) d) = (list_pairs ((find_pair_list L) d))))) ==> ((\L. (!d. (((find_face L) d) = (list_pairs ((find_pair_list L) d))))) L)) = ((\L. (!d. (((find_face L) d) = (list_pairs ((find_pair_list L) d))))) L))
T c= c==> ! ! c= cfind_face b0 b1 clist_pairs cfind_pair_list b0 b1 * / ! c= cfind_face b0 b1 clist_pairs cfind_pair_list b0 b1 f0 * / ! c= cfind_face b0 b1 clist_pairs cfind_pair_list b0 b1 f0
- |- (((!h. (!x. (!t. ((((MEM x) NIL) = F) /\ (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t))))))) ==> ((\h. (!x. (!t. ((((MEM x) NIL) = F) /\ (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t))))))) h)) = ((\h. (!x. (!t. ((((MEM x) NIL) = F) /\ (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t))))))) h))
T c= c==> ! ! ! c/\ c= cMEM b1 cNIL cF c= cMEM b1 cCONS b0 b2 c\/ c= b1 b0 cMEM b1 b2 * / ! ! c/\ c= cMEM b1 cNIL cF c= cMEM b1 cCONS b0 b2 c\/ c= b1 b0 cMEM b1 b2 f0 * / ! ! c/\ c= cMEM b1 cNIL cF c= cMEM b1 cCONS b0 b2 c\/ c= b1 b0 cMEM b1 b2 f0
+ |- ((x = y) = (y = x))
T c= c= f0 f1 c= f1 f0
+ (!l. (!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))) |- ((\l. (!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))) l)
T c==> ! ! c==> c/\ cMEM b0 f0 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list f0 b1 * / ! c==> c/\ cMEM b0 f0 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list f0 b1 f1
+ |- (((list_pairs = list_pairs) /\ (((find_pair_list L) d2) = ((find_pair_list L) d1))) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))))
T c==> c/\ c= part clist_pairs part clist_pairs c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- ((\b. (!c. (((~ c) ==> (~ b)) ==> (b ==> c)))) b)
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 * / ! c==> c==> c~ b1 c~ b0 c==> b0 b1 f0
+ |- (((A /\ B) ==> C) ==> (A ==> (B ==> C)))
T c==> c==> c/\ f0 f1 f2 c==> f0 c==> f1 f2
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))) = T)
T c= ! c==> c/\ cuniq clist_of_darts b0 cMEM f0 cfind_face b0 f1 c= cfind_face b0 f0 cfind_face b0 f1 cT
+ |- ((\d. (!L. ((~ ((MEM d) (list_of_darts L))) = (((find_face L) d) = NIL)))) d)
T * / ! c= c~ cMEM b0 clist_of_darts b1 c= cfind_face b1 b0 cNIL f0
- |- ((!l. (!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))) ==> (!l. (!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))))
T c==> ! ! c==> c/\ cMEM b0 f0 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list f0 b1 ! ! c==> c/\ cMEM b0 f0 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list f0 b1
- (((MEM l) L) /\ ((MEM d) (list_pairs l))) |- ((!l. (!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))) ==> (l = ((find_pair_list L) d)))
T c==> c/\ cMEM f0 f1 cMEM f2 clist_pairs f0 c==> ! ! c==> c/\ cMEM b0 f1 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list f1 b1 c= f0 cfind_pair_list f1 f2
+ (uniq (list_of_darts L)) |- (T ==> ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))
T c==> cuniq clist_of_darts f0 c==> cT c==> c/\ cMEM f1 f0 cMEM f2 clist_pairs f1 c= f1 cfind_pair_list f0 f2
+ |- ((\y. ((x = y) = (y = x))) y)
T * / c= c= f0 b0 c= b0 f0 f1
+ (uniq (list_of_darts L)), ((MEM d1) ((find_face L) d2)) |- ((list_pairs ((find_pair_list L) d1)) = ((find_face L) d2))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f2 c= clist_pairs cfind_pair_list f0 f1 cfind_face f0 f2
+ ((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) |- (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) /\ (((find_face L) d1) = ((find_face L) d2)))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c/\ c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
+ ((MEM d) (list_pairs l)), ((MEM l) L1) |- (((MEM l) L1) /\ ((uniq (list_of_darts L1)) ==> (l = ((find_pair_list L1) d))))
T c==> cMEM f0 clist_pairs f1 c==> cMEM f1 f2 c/\ cMEM f1 f2 c==> cuniq clist_of_darts f2 c= f1 cfind_pair_list f2 f0
+ (uniq (list_of_darts L)), ((MEM l) L) |- (((MEM l) L) /\ (((MEM d) (list_pairs l)) ==> (l = ((find_pair_list L) d))))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 f0 c/\ cMEM f1 f0 c==> cMEM f2 clist_pairs f1 c= f1 cfind_pair_list f0 f2
+ ((~ ((MEM d) (list_of_darts L))) = (((find_face L) d) = NIL)) |- ((((find_face L) d) = NIL) = (~ ((MEM d) (list_of_darts L))))
T c==> c= c~ cMEM f0 clist_of_darts f1 c= cfind_face f1 f0 cNIL c= c= cfind_face f1 f0 cNIL c~ cMEM f0 clist_of_darts f1
+ ((MEM d) (list_pairs l)) |- (((MEM d) (list_pairs l)) /\ (((MEM l) L1) ==> ((uniq (list_of_darts L1)) ==> (l = ((find_pair_list L1) d)))))
T c==> cMEM f0 clist_pairs f1 c/\ cMEM f0 clist_pairs f1 c==> cMEM f1 f2 c==> cuniq clist_of_darts f2 c= f1 cfind_pair_list f2 f0
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))), ((~ c) ==> (~ b)) |- ((!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) /\ (b ==> c))
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c==> c==> c~ f0 c~ f1 c/\ ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c==> f1 f0
+ ((MEM d1) ((find_face L) d2)) |- ((!l. (!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))) ==> (((find_pair_list L) d2) = ((find_pair_list L) d1)))
T c==> cMEM f0 cfind_face f1 f2 c==> ! ! c==> c/\ cMEM b0 f1 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list f1 b1 c= cfind_pair_list f1 f2 cfind_pair_list f1 f0
+ |- ((((~ ((MEM d2) (list_of_darts L))) ==> (~ ((MEM d1) ((find_face L) d2)))) ==> (((MEM d1) ((find_face L) d2)) ==> ((MEM d2) (list_of_darts L)))) = (((MEM d1) ((find_face L) d2)) ==> ((MEM d2) (list_of_darts L))))
T c= c==> c==> c~ cMEM f0 clist_of_darts f1 c~ cMEM f2 cfind_face f1 f0 c==> cMEM f2 cfind_face f1 f0 cMEM f0 clist_of_darts f1 c==> cMEM f2 cfind_face f1 f0 cMEM f0 clist_of_darts f1
+ |- ((\L. (((MEM d) (list_of_darts L)) ==> ((MEM ((find_pair_list L) d)) L))) L)
T * / c==> cMEM f0 clist_of_darts b0 cMEM cfind_pair_list b0 f0 b0 f1
+ |- (((!d. (((find_face L) d) = (list_pairs ((find_pair_list L) d)))) ==> ((\d. (((find_face L) d) = (list_pairs ((find_pair_list L) d)))) d)) = ((\d. (((find_face L) d) = (list_pairs ((find_pair_list L) d)))) d))
T c= c==> ! c= cfind_face f0 b0 clist_pairs cfind_pair_list f0 b0 * / c= cfind_face f0 b0 clist_pairs cfind_pair_list f0 b0 f1 * / c= cfind_face f0 b0 clist_pairs cfind_pair_list f0 b0 f1
+ (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- ((!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) /\ (((MEM d1) ((find_face L) d2)) ==> ((MEM d2) (list_of_darts L))))
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c/\ ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c==> cMEM f0 cfind_face f1 f2 cMEM f2 clist_of_darts f1
- (!l. (!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))) |- ((!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d)))) = T)
T c==> ! ! c==> c/\ cMEM b0 f0 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list f0 b1 c= ! c==> c/\ cMEM f1 f0 cMEM b0 clist_pairs f1 c= f1 cfind_pair_list f0 b0 cT
- |- (T = (~ F))
T c= cT c~ cF
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- ((!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) /\ (!b. (!c. (((~ c) ==> (~ b)) ==> (b ==> c)))))
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c/\ ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 ! ! c==> c==> c~ b1 c~ b0 c==> b0 b1
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- ((list_pairs = list_pairs) /\ (((find_pair_list L) d2) = ((find_pair_list L) d1))), (((list_pairs = list_pairs) /\ (((find_pair_list L) d2) = ((find_pair_list L) d1))) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1)))) |- ((((list_pairs = list_pairs) /\ (((find_pair_list L) d2) = ((find_pair_list L) d1))) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1)))) /\ ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))))
T c==> c/\ c= part clist_pairs part clist_pairs c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c==> c==> c/\ c= part clist_pairs part clist_pairs c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c/\ c==> c/\ c= part clist_pairs part clist_pairs c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2
- |- ((((list_pairs = list_pairs) ==> ((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))))) ==> ((list_pairs = list_pairs) ==> ((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1)))))) = ((list_pairs = list_pairs) ==> ((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))))))
T c= c==> c==> c= part clist_pairs part clist_pairs c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c==> c= part clist_pairs part clist_pairs c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c==> c= part clist_pairs part clist_pairs c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- (((!b. (!c. (((~ c) ==> (~ b)) ==> (b ==> c)))) ==> ((\b. (!c. (((~ c) ==> (~ b)) ==> (b ==> c)))) b)) = ((\b. (!c. (((~ c) ==> (~ b)) ==> (b ==> c)))) b))
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c= c==> ! ! c==> c==> c~ b1 c~ b0 c==> b0 b1 * / ! c==> c==> c~ b1 c~ b0 c==> b0 b1 f0 * / ! c==> c==> c~ b1 c~ b0 c==> b0 b1 f0
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- (((!c. (((~ c) ==> (~ b)) ==> (b ==> c))) ==> ((\c. (((~ c) ==> (~ b)) ==> (b ==> c))) c)) = ((\c. (((~ c) ==> (~ b)) ==> (b ==> c))) c))
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c= c==> ! c==> c==> c~ b0 c~ f0 c==> f0 b0 * / c==> c==> c~ b0 c~ f0 c==> f0 b0 f1 * / c==> c==> c~ b0 c~ f0 c==> f0 b0 f1
- (list_pairs = list_pairs), ((list_pairs = list_pairs) ==> ((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))))) |- (((list_pairs = list_pairs) ==> ((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))))) /\ ((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1)))))
T c==> c= part clist_pairs part clist_pairs c==> c==> c= part clist_pairs part clist_pairs c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c/\ c==> c= part clist_pairs part clist_pairs c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- (!l. (!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))), (((MEM l) L) /\ ((MEM d) (list_pairs l))) |- ((((MEM l) L) /\ ((MEM d) (list_pairs l))) /\ (l = ((find_pair_list L) d)))
T c==> ! ! c==> c/\ cMEM b0 f0 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list f0 b1 c==> c/\ cMEM f1 f0 cMEM f2 clist_pairs f1 c/\ c/\ cMEM f1 f0 cMEM f2 clist_pairs f1 c= f1 cfind_pair_list f0 f2
- ((list_pairs = list_pairs) /\ (((find_pair_list L) d2) = ((find_pair_list L) d1))) |- ((((list_pairs = list_pairs) /\ (((find_pair_list L) d2) = ((find_pair_list L) d1))) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1)))) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))))
T c==> c/\ c= part clist_pairs part clist_pairs c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c==> c==> c/\ c= part clist_pairs part clist_pairs c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2
- (list_pairs = list_pairs), ((list_pairs = list_pairs) ==> ((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))))) |- ((list_pairs = list_pairs) /\ ((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1)))))
T c==> c= part clist_pairs part clist_pairs c==> c==> c= part clist_pairs part clist_pairs c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c/\ c= part clist_pairs part clist_pairs c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- (!c. (((~ c) ==> (~ b)) ==> (b ==> c)))
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 ! c==> c==> c~ b0 c~ f0 c==> f0 b0
- (uniq (list_of_darts L)) |- ((uniq (list_of_darts L)) = T)
T c==> cuniq clist_of_darts f0 c= cuniq clist_of_darts f0 cT
- ((list_pairs = list_pairs) ==> ((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))))) |- (((list_pairs = list_pairs) ==> ((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))))) /\ ((list_pairs = list_pairs) ==> ((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))))))
T c==> c==> c= part clist_pairs part clist_pairs c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c/\ c==> c= part clist_pairs part clist_pairs c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c==> c= part clist_pairs part clist_pairs c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2
- (!c. (!b. (((~ c) ==> (~ b)) ==> (b ==> c)))) |- ((!c. (((~ c) ==> (~ b)) ==> (b ==> c))) = T)
T c==> ! ! c==> c==> c~ b0 c~ b1 c==> b1 b0 c= ! c==> c==> c~ b0 c~ f0 c==> f0 b0 cT
- |- ((\h. (!x. (!t. ((((MEM x) NIL) = F) /\ (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t))))))) h)
T * / ! ! c/\ c= cMEM b1 cNIL cF c= cMEM b1 cCONS b0 b2 c\/ c= b1 b0 cMEM b1 b2 f0
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- |- ((~ F) = T)
T c= c~ cF cT
- (uniq (list_of_darts L)), ((MEM d1) ((find_face L) d2)) |- (((MEM d1) ((find_face L) d2)) /\ (((find_face L) d1) = ((find_face L) d2)))
T c==> cuniq clist_of_darts f0 c==> cMEM f1 cfind_face f0 f2 c/\ cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
- (!l. (!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))) |- ((!l. (!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))) /\ (!l. (!d. ((((MEM l) L) /\ ((MEM d) (list_pairs l))) ==> (l = ((find_pair_list L) d))))))
T c==> ! ! c==> c/\ cMEM b0 f0 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list f0 b1 c/\ ! ! c==> c/\ cMEM b0 f0 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list f0 b1 ! ! c==> c/\ cMEM b0 f0 cMEM b1 clist_pairs b0 c= b0 cfind_pair_list f0 b1
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- (list_pairs = list_pairs) |- (((list_pairs = list_pairs) ==> ((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))))) ==> ((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1)))))
T c==> c= part clist_pairs part clist_pairs c==> c==> c= part clist_pairs part clist_pairs c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- |- (((!x. (!t. ((((MEM x) NIL) = F) /\ (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t)))))) ==> ((\x. (!t. ((((MEM x) NIL) = F) /\ (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t)))))) x)) = ((\x. (!t. ((((MEM x) NIL) = F) /\ (((MEM x) ((CONS h) t)) = ((x = h) \/ ((MEM x) t)))))) x))
T c= c==> ! ! c/\ c= cMEM b0 cNIL cF c= cMEM b0 cCONS f0 b1 c\/ c= b0 f0 cMEM b0 b1 * / ! c/\ c= cMEM b0 cNIL cF c= cMEM b0 cCONS f0 b1 c\/ c= b0 f0 cMEM b0 b1 f1 * / ! c/\ c= cMEM b0 cNIL cF c= cMEM b0 cCONS f0 b1 c\/ c= b0 f0 cMEM b0 b1 f1
- |- (((list_pairs = list_pairs) ==> ((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))))) ==> ((list_pairs = list_pairs) ==> ((((find_pair_list L) d2) = ((find_pair_list L) d1)) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1))))))
T c==> c==> c= part clist_pairs part clist_pairs c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c==> c= part clist_pairs part clist_pairs c==> c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2
- (((list_pairs = list_pairs) /\ (((find_pair_list L) d2) = ((find_pair_list L) d1))) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1)))) |- ((((list_pairs = list_pairs) /\ (((find_pair_list L) d2) = ((find_pair_list L) d1))) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1)))) /\ (((list_pairs = list_pairs) /\ (((find_pair_list L) d2) = ((find_pair_list L) d1))) ==> ((list_pairs ((find_pair_list L) d2)) = (list_pairs ((find_pair_list L) d1)))))
T c==> c==> c/\ c= part clist_pairs part clist_pairs c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c/\ c==> c/\ c= part clist_pairs part clist_pairs c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2 c==> c/\ c= part clist_pairs part clist_pairs c= cfind_pair_list f0 f1 cfind_pair_list f0 f2 c= clist_pairs cfind_pair_list f0 f1 clist_pairs cfind_pair_list f0 f2
