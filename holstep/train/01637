N Aq12.exists_contour_not_fst_snd
C |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c= cSND csplit_normal_list f0 f2 f9 f5 f6 f8 c/\ cMEM f7 f1 c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
D TRUTH
A |- T
T cT
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D MEM_APPEND
A |- (!x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))))
T c= cMEM f0 cAPPEND f1 f2 c\/ cMEM f0 f1 cMEM f0 f2
D APPEND_EQ_NIL
A |- (!l. (!m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL)))))
T c= c= cAPPEND f0 f1 cNIL c/\ c= f0 cNIL c= f1 cNIL
D LAST_APPEND
A |- (!p. (!q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q)))))
T c= cLAST cAPPEND f0 f1 cCOND c= f1 cNIL cLAST f0 cLAST f1
D HD_APPEND
A |- (!l. (!m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l)))))
T c= cHD cAPPEND f0 f1 cCOND c= f0 cNIL cHD f1 cHD f0
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D UNION
A |- (!s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))))
T c= * * part cUNION f0 f1 * part cGSPEC / c? / cSETSPEC b0 c\/ cIN b1 f0 cIN b1 f1 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D IN_SET_OF_LIST
A |- (!x. (!l. ((x IN (set_of_list l)) = ((MEM x) l))))
T c= cIN f0 * part cset_of_list f1 cMEM f0 f1
D SET_OF_LIST_APPEND
A |- (!l1. (!l2. ((set_of_list ((APPEND l1) l2)) = ((set_of_list l1) UNION (set_of_list l2)))))
T c= * part cset_of_list cAPPEND f0 f1 * * part cUNION * part cset_of_list f0 * part cset_of_list f1
D Fan.POWER
A |- ((!f. (((POWER f) (NUMERAL _0)) = I)) /\ (!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))))
T c/\ ! c= * * part cPOWER b0 cNUMERAL c_0 part cI ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Hexagons.disj1
A |- (A ==> (A \/ B))
T c==> f0 c\/ f0 f1
D Seq.mem_seq1
A |- (!x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y))))
T c= cMEM f0 cCONS f1 cNIL c= f0 f1
D Seq.allP
A |- (!a. (!s. ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))))
T c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0
D Seq.mem_filter
A |- (!a. (!x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s))))))
T c= cMEM f0 cfilter f1 f2 c/\ * f1 f0 cMEM f0 f2
D Seq2.APPEND_cat
A |- (APPEND = cat)
T c= part cAPPEND part ccat
D Seq2.mem_flatten
A |- (!x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))))
T c= cMEM f0 cflatten f1 c? / c/\ cMEM b0 f1 cMEM f0 b0
D Seq2.mem_next_el
A |- (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s))))
T c==> cMEM f0 f1 cMEM cnext_el f1 f0 f1
D List_hypermap.mem_find_list
A |- (!x. (!L. (((MEM x) (flatten L)) ==> ((MEM ((find_list L) x)) L))))
T c==> cMEM f0 cflatten f1 cMEM cfind_list f1 f0 f1
D List_hypermap.mem_find_face_imp_faces_eq
A |- (!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
D Tame_defs2.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D Tame_defs2.final_list
A |- (!L. (!r. (((final_list L) r) = ((all (\d. (((f_list L) d) = ((next_el r) d)))) r))))
T c= cfinal_list f0 f1 call / c= cf_list f0 b0 cnext_el f1 b0 f1
D Tame_defs2.final_dart_list
A |- (!L. (!N. (((final_dart_list L) N) = (flatten ((filter (final_list L)) N)))))
T c= cfinal_dart_list f0 f1 cflatten cfilter * part cfinal_list f0 f1
D Tame_defs2.transform_list
A |- (!L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))))
T c= ctransform_list f0 f1 c, f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f3 c, f2 f3 c, b5 cSND b4 cAPPEND creplace f3 cCONS cSND b4 cNIL f2 cCONS cFST b4 cNIL csplit_normal_list f0 f3 b3 b0 b2 cfind_face f0 b0 cprev_el f3 b1 cl'z f0 f2 f3 f1 cl'y f0 f3 f1
D Tame_defs2.ntrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= cntrans f0 f1 f2 f3 f4 cFST cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.rtrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= crtrans f0 f1 f2 f3 f4 cSND cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.ytrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))))
T c= cytrans f0 f1 f2 f3 f4 cl'y f0 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.ztrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))
T c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.s_flag_list
A |- (!L. (!N. (!r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))))))
T c= cs_flag_list f0 f1 f2 f3 c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.MEM2_replace
A |- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))))
T c==> c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1
D Tame_list.MEM3_replace
A |- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))))
T c==> c/\ c~ c= f0 f1 cMEM f0 f2 cMEM f0 creplace f1 f3 f2
D Tame_list.mem_find_list1
A |- (!L. (!x. (((MEM x) (flatten L)) ==> ((MEM x) ((find_list L) x)))))
T c==> cMEM f0 cflatten f1 cMEM f0 cfind_list f1 f0
D Hojodcm.PPLHULJ_v0
A |- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= f4 cfind_face f0 f3 c= f5 cnext_el f4 f3 c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 cindexf f5 cztrans f0 f1 f2 f3 cNUMERAL c_0 f4
D Aq1.uniq_snd_split_norm
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3
D Aq4.AQ4
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 call * part cloop_list f0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
D Aq7.AQ7
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((MEM x) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 cMEM f3 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
D Aq8.snd_mem_rtran1
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
D Aq11.e_list_mem_flatten
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (e_list x)) (flatten N)))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM ce_list f3 cflatten f1
D Aq12.contour_list_cat
A |- (!s. (((~ (s = NIL)) /\ (~ (r = NIL))) ==> (((contour_list L) ((cat s) r)) = (((contour_list L) s) /\ (((contour_list L) r) /\ (((one_step_list L) (LAST s)) (HD r)))))))
T c==> c/\ c~ c= f0 cNIL c~ c= f1 cNIL c= ccontour_list f2 ccat f0 f1 c/\ ccontour_list f2 f0 c/\ ccontour_list f2 f1 cone_step_list f2 cLAST f0 cHD f1
D Aq12.exists_conected_loop
A |- (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM x) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = x) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL)))))))))
T c==> c/\ cuniq f0 c/\ cloop_list f1 f0 c/\ cMEM f2 f0 cMEM f3 f0 c? / c/\ ccontour_list f1 b0 c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list f0 c~ c= b0 cNIL
D Aq12.one_step_e_list_x
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> (((one_step_list L) x) ((f_list L) (e_list x))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cfind_face f0 f3 f4 c= cnext_el f4 f3 f5 cone_step_list f0 f3 cf_list f0 ce_list f3
D Aq12.w_mem_split_snd
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ c= cSND csplit_normal_list f0 f2 f7 f5 f6 f8 c/\ c= cfind_face f0 f3 f7 c/\ c= cnext_el f7 f3 f9 c~ cfinal_list f0 f2 cMEM f9 f8
+ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1)))))))))))))) |- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1)))))))))))))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c= cSND csplit_normal_list f0 f2 f9 f5 f6 f8 c/\ cMEM f7 f1 c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c/\ c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c= cSND csplit_normal_list f0 f2 f9 f5 f6 f8 c/\ cMEM f7 f1 c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c==> c= cprev_el f1 f5 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f3 f6 f8 c==> cMEM f7 f4 c==> c= cfind_face f0 f2 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f9 f3 f6 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), (((MEM u) r2) /\ ((MEM v) r1)), ((MEM u) r2), ((MEM r1) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> c/\ cMEM f9 f8 cMEM f10 f11 c==> cMEM f9 f8 c==> cMEM f11 f6 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) |- ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))
T c==> c~ cfinal_list f0 f1 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f3 c==> c~ c= f4 cNIL c==> cone_step_list f0 f5 cf_list f0 ce_list f5 c==> ccontour_list f0 ccat f4 f2 c==> cIN f6 * part cset_of_list f2 cIN f6 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f7 cNIL f3 cCONS cFST csplit_normal_list f0 f1 f8 f9 f10 cNIL
+ (~ ((final_list L) r)), (((next_el f) x) = w), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) |- (((MEM w) r2) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM x) r2) ==> (((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq r2) ==> (((loop_list L) r2) ==> (((contour_list L) s1) ==> (((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c= cnext_el f2 f3 f4 c==> cSUBSET * part cset_of_list f5 * part cset_of_list cfinal_dart_list f0 f6 c==> cMEM f4 f7 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f8 f2 c==> cMEM f9 f2 c==> c< cindexf f4 f8 f2 cindexf f4 f9 f2 c==> c= cfind_face f0 f8 f2 c==> cMEM f3 f7 c==> cMEM f7 cntrans f0 f6 f1 f3 cNUMERAL cBIT1 c_0 c==> cuniq f7 c==> cloop_list f0 f7 c==> ccontour_list f0 f10 c==> c= cHD f10 f11 c==> c= cLAST f10 f3 c==> cSUBSET * part cset_of_list f10 * part cset_of_list f7 c==> c~ c= f10 cNIL c==> cone_step_list f0 f3 cf_list f0 ce_list f3 c==> ccontour_list f0 ccat f10 f5 c==> cIN f12 * part cset_of_list f5 cIN f12 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f7 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f2 f8 f13 cNIL
+ |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- ((~ (A ==> (A \/ B))) ==> F), (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) /\ ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c/\ c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
+ |- (((!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) ==> ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i)) = ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i))
T c= c==> ! c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
+ (~ ((final_list L) r)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((contour_list L) ((cat s1) s)) |- (((contour_list L) ((cat s1) s)) /\ ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c~ cfinal_list f0 f1 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f3 c==> ccontour_list f0 ccat f4 f2 c/\ ccontour_list f0 ccat f4 f2 c==> cIN f5 * part cset_of_list f2 cIN f5 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f6 cNIL f3 cCONS cFST csplit_normal_list f0 f1 f7 f8 f9 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((((marked_list L) N) r) x) |- (?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM ((f_list L) (e_list x))) l)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cmarked_list f0 f2 f1 f3 c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f2 cMEM cf_list f0 ce_list f3 b0
+ ((MEM (e_list x)) (flatten N)), ((MEM (e_list x)) ((find_list N) (e_list x))), ((final_list L) ((find_list N) (e_list x))) |- (((MEM ((find_list N) (e_list x))) N) /\ ((MEM ((f_list L) (e_list x))) ((find_list N) (e_list x))))
T c==> cMEM ce_list f0 cflatten f1 c==> cMEM ce_list f0 cfind_list f1 ce_list f0 c==> cfinal_list f2 cfind_list f1 ce_list f0 c/\ cMEM cfind_list f1 ce_list f0 f1 cMEM cf_list f2 ce_list f0 cfind_list f1 ce_list f0
+ (!x. ((x IN (set_of_list s1)) ==> (x IN (set_of_list r2)))) |- ((x' IN (set_of_list s1)) ==> (x' IN (set_of_list r2)))
T c==> ! c==> cIN b0 * part cset_of_list f0 cIN b0 * part cset_of_list f1 c==> cIN f2 * part cset_of_list f0 cIN f2 * part cset_of_list f1
+ |- (((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))) ==> ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))) r)) = ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))) r))
T c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cSND csplit_normal_list f0 b0 cfind_face f0 cl'y f0 b0 b1 cl'y f0 b0 b1 cprev_el b0 cl'z f0 f1 b0 b1 cntrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cSND csplit_normal_list f0 b0 cfind_face f0 cl'y f0 b0 b1 cl'y f0 b0 b1 cprev_el b0 cl'z f0 f1 b0 b1 cntrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 f2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cSND csplit_normal_list f0 b0 cfind_face f0 cl'y f0 b0 b1 cl'y f0 b0 b1 cprev_el b0 cl'z f0 f1 b0 b1 cntrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 f2
+ ((MEM (e_list x)) ((find_list N) (e_list x))) |- (((((f_list L) (e_list x)) = ((next_el ((find_list N) (e_list x))) (e_list x))) ==> ((MEM ((f_list L) (e_list x))) ((find_list N) (e_list x)))) = ((((MEM (e_list x)) ((find_list N) (e_list x))) ==> (((f_list L) (e_list x)) = ((next_el ((find_list N) (e_list x))) (e_list x)))) ==> ((MEM ((f_list L) (e_list x))) ((find_list N) (e_list x)))))
T c==> cMEM ce_list f0 cfind_list f1 ce_list f0 c= c==> c= cf_list f2 ce_list f0 cnext_el cfind_list f1 ce_list f0 ce_list f0 cMEM cf_list f2 ce_list f0 cfind_list f1 ce_list f0 c==> c==> cMEM ce_list f0 cfind_list f1 ce_list f0 c= cf_list f2 ce_list f0 cnext_el cfind_list f1 ce_list f0 ce_list f0 cMEM cf_list f2 ce_list f0 cfind_list f1 ce_list f0
- |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> (((one_step_list L) x) ((f_list L) (e_list x)))))))) = T)
T c= ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cfind_face b0 b3 f0 c= cnext_el f0 b3 f1 cone_step_list b0 b3 cf_list b0 ce_list b3 cT
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- (((!x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) ==> ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x)) = ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x))
T c= c==> ! ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
+ ((final_list L) ((find_list N) (e_list x))) |- (((final_list L) ((find_list N) (e_list x))) = T)
T c==> cfinal_list f0 cfind_list f1 ce_list f2 c= cfinal_list f0 cfind_list f1 ce_list f2 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM v) r1), ((MEM r1) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f11 f6 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0
+ |- ((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))) = T)
T c= ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cprev_el b1 f1 f3 c/\ cfinal_list f0 f4 c/\ cfinal_list f0 f5 c/\ c= cSND csplit_normal_list f0 b1 f6 f2 f3 f5 c/\ cMEM f4 b0 c/\ c= cfind_face f0 b2 f6 c/\ cMEM f7 f5 cMEM f8 f4 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 f7 c/\ c= cLAST b3 f8 cSUBSET * part cset_of_list b3 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b1 cCONS cSND csplit_normal_list f0 b1 f6 f2 f3 cNIL b0 cCONS cFST csplit_normal_list f0 b1 f6 f2 f3 cNIL cT
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
+ |- (((!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) ==> ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) N)) = ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) N))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 f1 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 f1
+ |- ((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))) = T)
T c= ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cl'z f0 f1 b0 b1 f2 c/\ c= cl'y f0 b0 b1 f3 c/\ c= cprev_el b0 f2 f4 c/\ cfinal_list f0 f5 c/\ cfinal_list f0 f6 c/\ c= cSND csplit_normal_list f0 b0 f7 f3 f4 f6 c/\ cMEM f5 f1 c/\ c= cfind_face f0 b1 f7 c/\ cMEM f8 f6 cMEM f9 f5 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 f8 c/\ c= cLAST b2 f9 cSUBSET * part cset_of_list b2 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace b0 cCONS cSND csplit_normal_list f0 b0 f7 f3 f4 cNIL f1 cCONS cFST csplit_normal_list f0 b0 f7 f3 f4 cNIL cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c==> c= cSND csplit_normal_list f0 f1 f8 f5 f3 f7 c==> cMEM f9 f6 c==> c= cfind_face f0 f4 f8 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cMEM f11 cfinal_dart_list f0 f6 c==> cMEM cf_list f0 ce_list f4 cfinal_dart_list f0 f6 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f4 c==> c= cLAST f12 f11 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f6 c==> c= cnext_el f8 f4 f13 c==> cMEM f13 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f7 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ |- ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L)
T * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> (((one_step_list L) x) ((f_list L) (e_list x)))))) r)
T * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cfind_face f0 b1 f2 c= cnext_el f2 b1 f3 cone_step_list f0 b1 cf_list f0 ce_list b1 f4
+ |- (((!L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) ==> ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)) = ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L))
T c= c==> ! ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0 * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
+ (~ ((final_list L) r)) |- (((!x. (((\d. (x' = d)) x) ==> ((x' IN (set_of_list ((final_dart_list L) N))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))) ==> ((?d. (x' = d)) ==> ((x' IN (set_of_list ((final_dart_list L) N))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))) = ((?d. (x' = d)) ==> ((x' IN (set_of_list ((final_dart_list L) N))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))
T c==> c~ cfinal_list f0 f1 c= c==> ! c==> * / c= f2 b1 b0 c==> cIN f2 * part cset_of_list cfinal_dart_list f0 f3 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f4 cNIL f3 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL c==> c? / c= f2 b0 c==> cIN f2 * part cset_of_list cfinal_dart_list f0 f3 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f4 cNIL f3 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL c==> c? / c= f2 b0 c==> cIN f2 * part cset_of_list cfinal_dart_list f0 f3 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f4 cNIL f3 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL
- |- ((!y. (!z1. (!f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))))))))) = T)
T c= ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b0 c/\ c= cprev_el b7 f0 b1 c/\ c= cSND csplit_normal_list b5 b7 b2 b0 b1 b4 c/\ c= cfind_face b5 b8 b2 c/\ c= cnext_el b2 b8 b3 c~ cfinal_list b5 b7 cMEM b3 b4 cT
- (~ (s1 = NIL)) |- ((NIL = s1) = F)
T c==> c~ c= f0 cNIL c= c= cNIL f0 cF
+ (~ ((final_list L) r)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) |- (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM x) r2) ==> (((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq r2) ==> (((loop_list L) r2) ==> (((contour_list L) s1) ==> (((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f3 c==> c< cindexf f4 f5 f6 cindexf f4 f7 f6 c==> c= cfind_face f0 f5 f6 c==> cMEM f8 f9 c==> cMEM f9 cntrans f0 f3 f1 f8 cNUMERAL cBIT1 c_0 c==> cuniq f9 c==> cloop_list f0 f9 c==> ccontour_list f0 f10 c==> c= cHD f10 f11 c==> c= cLAST f10 f8 c==> cSUBSET * part cset_of_list f10 * part cset_of_list f9 c==> c~ c= f10 cNIL c==> cone_step_list f0 f8 cf_list f0 ce_list f8 c==> ccontour_list f0 ccat f10 f2 c==> cIN f12 * part cset_of_list f2 cIN f12 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f9 cNIL f3 cCONS cFST csplit_normal_list f0 f1 f6 f5 f13 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1))))))))), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> c/\ c= cl'y f0 f1 f3 f5 c/\ c= cprev_el f1 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c= cSND csplit_normal_list f0 f1 f9 f5 f6 f8 c/\ cMEM f7 f2 c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c==> cmarked_list f0 f2 f1 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c/\ c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> cMEM f9 f6 c==> c= cfind_face f0 f4 f7 c==> cMEM f10 f8 c==> cMEM f11 f9 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cMEM f11 cfinal_dart_list f0 f6 c==> cMEM cf_list f0 ce_list f4 cfinal_dart_list f0 f6 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f4 c==> c= cLAST f12 f11 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f6 c==> c= cnext_el f7 f4 f13 c==> cMEM f13 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r2), ((MEM w) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 cf_list f0 ce_list f3 c==> c= cLAST f1 f4 c==> c= cnext_el f5 f3 f6 c==> c= cprev_el f2 f7 f8 c==> c= cl'y f0 f2 f3 f9 c==> c= cl'z f0 f10 f2 f3 f7 c==> c= cSND csplit_normal_list f0 f2 f5 f9 f8 f11 c==> c= cfind_face f0 f3 f5 c==> c= cfind_face f0 f9 f5 c==> c< cindexf f6 f9 f5 cindexf f6 f7 f5 c==> cMEM f12 f11 c==> cMEM f6 f11 c==> cMEM f9 f5 c==> cMEM f7 f5 c==> cMEM f2 f10 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cfinal_dart_list f0 f10 c==> call / c~ c= b0 cNIL f0 c==> ccontour_list f0 f1 c==> cfinal_list f0 f11 c==> cmarked_list f0 f10 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f11 cNIL f10 cCONS cFST csplit_normal_list f0 f2 f5 f9 f8 cNIL
+ (~ (r' = NIL)), (r' = s1), ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))), ((x' IN (set_of_list s1)) \/ (x' IN (set_of_list s))), ((MEM r) N), ((set_of_list r') SUBSET (set_of_list r2)), ((contour_list L) ((cat s1) s)), ((final_list L) r2), (((one_step_list L) x) ((f_list L) (e_list x))) |- (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c==> c==> cIN f2 * part cset_of_list f3 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f4 cAPPEND creplace f5 cCONS f6 cNIL f7 cCONS cFST csplit_normal_list f4 f5 f8 f9 f10 cNIL c==> c\/ cIN f2 * part cset_of_list f1 cIN f2 * part cset_of_list f3 c==> cMEM f5 f7 c==> cSUBSET * part cset_of_list f0 * part cset_of_list f6 c==> ccontour_list f4 ccat f1 f3 c==> cfinal_list f4 f6 c==> cone_step_list f4 f11 cf_list f4 ce_list f11 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f4 cAPPEND creplace f5 cCONS f6 cNIL f7 cCONS cFST csplit_normal_list f4 f5 f8 f9 f10 cNIL
+ ((MEM r) N) |- (((MEM r) N) /\ ((MEM r2) ((CONS r2) NIL)))
T c==> cMEM f0 f1 c/\ cMEM f0 f1 cMEM f2 cCONS f2 cNIL
+ |- (((!l. ((x IN (set_of_list l)) = ((MEM x) l))) ==> ((\l. ((x IN (set_of_list l)) = ((MEM x) l))) l)) = ((\l. ((x IN (set_of_list l)) = ((MEM x) l))) l))
T c= c==> ! c= cIN f0 * part cset_of_list b0 cMEM f0 b0 * / c= cIN f0 * part cset_of_list b0 cMEM f0 b0 f1 * / c= cIN f0 * part cset_of_list b0 cMEM f0 b0 f1
+ |- (((!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) ==> ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t)) = ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t))
T c= c==> ! c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1 * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
- |- ((!A. (A ==> (A \/ T))) = ((T ==> (T \/ T)) /\ (F ==> (F \/ T))))
T c= ! c==> b0 c\/ b0 cT c/\ c==> cT c\/ cT cT c==> cF c\/ cF cT
+ (x' IN (set_of_list s1)) |- (((x' IN (set_of_list r2)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))) = (((x' IN (set_of_list s1)) ==> (x' IN (set_of_list r2))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> cIN f0 * part cset_of_list f1 c= c==> cIN f0 * part cset_of_list f2 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS f2 cNIL f5 cCONS cFST csplit_normal_list f3 f4 f6 f7 f8 cNIL c==> c==> cIN f0 * part cset_of_list f1 cIN f0 * part cset_of_list f2 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS f2 cNIL f5 cCONS cFST csplit_normal_list f3 f4 f6 f7 f8 cNIL
+ |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ ((\l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))) l) |- ((((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l)) ==> (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS r2) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l)))) = (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS r2) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l))))
T c==> * / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM f2 b0 f3 c= c==> c/\ c/\ cfinal_list f0 f3 cMEM f3 f1 cMEM f2 f3 c? / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f4 cCONS f5 cNIL f1 cMEM b0 cCONS cFST csplit_normal_list f0 f4 f6 f7 f8 cNIL cMEM f2 b0 c? / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f4 cCONS f5 cNIL f1 cMEM b0 cCONS cFST csplit_normal_list f0 f4 f6 f7 f8 cNIL cMEM f2 b0
+ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ (s = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM v) ((final_dart_list L) N)), ((MEM x) r), ((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)), ((MEM r) N), ((MEM r1) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((contour_list L) s), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ c= f4 cNIL c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f4 cf_list f0 ce_list f3 c==> c= cLAST f4 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cSND csplit_normal_list f0 f2 f9 f8 f7 f10 c==> c= cfind_face f0 f3 f9 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f11 f10 c==> cMEM f5 f12 c==> cMEM f5 cfinal_dart_list f0 f1 c==> cMEM f3 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> cMEM f2 f1 c==> cMEM f12 f1 c==> cSUBSET * part cset_of_list f4 * part cset_of_list cfinal_dart_list f0 f1 c==> ccontour_list f0 f4 c==> cnormal_list f0 f1 c==> cfinal_list f0 f12 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c==> c= cnext_el f9 f3 f13 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f10 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f8 f7 cNIL
+ (x' = d) |- (((d IN (set_of_list r2)) ==> (d IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))) = ((x' IN (set_of_list r2)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c= f0 f1 c= c==> cIN f1 * part cset_of_list f2 cIN f1 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS f2 cNIL f5 cCONS cFST csplit_normal_list f3 f4 f6 f7 f8 cNIL c==> cIN f0 * part cset_of_list f2 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS f2 cNIL f5 cCONS cFST csplit_normal_list f3 f4 f6 f7 f8 cNIL
+ (((all a) s) = (!x. (((MEM x) s) ==> (a x)))) |- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))
T c==> c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0 c= ! c==> cMEM b0 f1 * f0 b0 call f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (r' = NIL)), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD r') = u), ((HD s) = ((f_list L) (e_list x))), ((LAST r') = x), ((LAST s) = v), (((next_el f) x) = w), (r' = s1), (((find_face L) x) = f), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list r') SUBSET (set_of_list r2)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) r'), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ c= f2 cNIL c==> c~ cfinal_list f0 f3 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 f5 c==> c= cHD f2 cf_list f0 ce_list f6 c==> c= cLAST f1 f6 c==> c= cLAST f2 f7 c==> c= cnext_el f8 f6 f9 c==> c= f1 f10 c==> c= cfind_face f0 f6 f8 c==> c= cfind_face f0 f11 f8 c==> c< cindexf f9 f11 f8 cindexf f9 f12 f8 c==> cMEM f9 f4 c==> cMEM f6 f4 c==> cMEM f11 f8 c==> cMEM f12 f8 c==> cMEM f3 f13 c==> cMEM f4 cntrans f0 f13 f3 f6 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list f4 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f13 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f4 c==> ccontour_list f0 f1 c==> ccontour_list f0 f2 c==> cfinal_list f0 f4 c==> cmarked_list f0 f13 f3 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f3 cCONS f4 cNIL f13 cCONS cFST csplit_normal_list f0 f3 f8 f11 f14 cNIL
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ c= cSND csplit_normal_list f0 f2 f7 f5 f6 f8 c/\ c= cfind_face f0 f3 f7 c/\ c= cnext_el f7 f3 f9 c~ cfinal_list f0 f2 cMEM f9 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f5 f6 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f5 f6 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (r' = NIL)), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD r') = u), ((HD s) = ((f_list L) (e_list x))), ((LAST r') = x), ((LAST s) = v), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list r') SUBSET (set_of_list r2)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) r'), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((\s1. (r' = s1)) s1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ c= f2 cNIL c==> c~ cfinal_list f0 f3 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 f5 c==> c= cHD f2 cf_list f0 ce_list f6 c==> c= cLAST f1 f6 c==> c= cLAST f2 f7 c==> c= cnext_el f8 f6 f9 c==> c= cfind_face f0 f6 f8 c==> c= cfind_face f0 f10 f8 c==> c< cindexf f9 f10 f8 cindexf f9 f11 f8 c==> cMEM f9 f4 c==> cMEM f6 f4 c==> cMEM f10 f8 c==> cMEM f11 f8 c==> cMEM f3 f12 c==> cMEM f4 cntrans f0 f12 f3 f6 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list f4 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f12 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f4 c==> ccontour_list f0 f1 c==> ccontour_list f0 f2 c==> cfinal_list f0 f4 c==> cmarked_list f0 f12 f3 f6 c= c==> * / c= f1 b0 f13 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f3 cCONS f4 cNIL f12 cCONS cFST csplit_normal_list f0 f3 f8 f10 f14 cNIL cT
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (e_list x)) (flatten N))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM ce_list b3 cflatten b1 f0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM x) r), ((MEM r) N), ((MEM r1) N), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f4 f8 c==> c= cfind_face f0 f2 f7 c==> c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f6 cMEM b1 cfinal_dart_list f0 f6 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f6 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f2 cMEM ce_list b2 ccat cs_list f0 f1 f2 cfinal_dart_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cMEM f11 f6 c==> cnormal_list f0 f6 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f2 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f4 cNIL
+ ((\r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = x) /\ (((set_of_list r') SUBSET (set_of_list r2)) /\ (~ (r' = NIL))))))) r') |- (((((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = x) /\ (((set_of_list r') SUBSET (set_of_list r2)) /\ (~ (r' = NIL)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> * / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list f3 c~ c= b0 cNIL f4 c= c==> c/\ ccontour_list f0 f4 c/\ c= cHD f4 f1 c/\ c= cLAST f4 f2 c/\ cSUBSET * part cset_of_list f4 * part cset_of_list f3 c~ c= f4 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f6 cCONS f3 cNIL f7 cCONS cFST csplit_normal_list f0 f6 f8 f9 f10 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f6 cCONS f3 cNIL f7 cCONS cFST csplit_normal_list f0 f6 f8 f9 f10 cNIL
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
+ |- (((!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) ==> ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x)) = ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x))
T c= c==> ! c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3 * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ |- (((((final_list L) r2) /\ (((MEM r2) (((replace r) ((CONS r2) NIL)) N)) \/ ((MEM r2) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) r2)) = ((\l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS r2) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l))) r2))
T c= c/\ c/\ cfinal_list f0 f1 c\/ cMEM f1 creplace f2 cCONS f1 cNIL f3 cMEM f1 cCONS cFST csplit_normal_list f0 f2 f4 f5 f6 cNIL cMEM f7 f1 * / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f2 cCONS f1 cNIL f3 cMEM b0 cCONS cFST csplit_normal_list f0 f2 f4 f5 f6 cNIL cMEM f7 b0 f1
- |- ((\w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)))))))) w)
T * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 f1 c/\ c= cprev_el b4 f0 f2 c/\ c= cSND csplit_normal_list b2 b4 f3 f1 f2 b1 c/\ c= cfind_face b2 b5 f3 c/\ c= cnext_el f3 b5 b0 c~ cfinal_list b2 b4 cMEM b0 b1 f4
+ (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) |- (((((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) r2)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c= c==> c==> cMEM f4 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f4 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f8 f9 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f4 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f8 f9 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), ((HD r') = u), ((LAST r') = x), (((next_el f) x) = w), (r' = s1), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list r') SUBSET (set_of_list r2)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) r') |- ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq f2 c==> cuniq clist_of_darts f0 c==> c= cHD f3 f4 c==> c= cLAST f3 f5 c==> c= cnext_el f6 f5 f7 c==> c= f3 f8 c==> c= cfind_face f0 f9 f6 c==> c< cindexf f7 f9 f6 cindexf f7 f10 f6 c==> cMEM f7 f2 c==> cMEM f5 f2 c==> cMEM f9 f6 c==> cMEM f10 f6 c==> cMEM f2 cntrans f0 f11 f1 f5 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f3 * part cset_of_list f2 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f11 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f2 c==> ccontour_list f0 f3 c==> c~ c= f8 cNIL c==> cone_step_list f0 f5 cf_list f0 ce_list f5 c==> ccontour_list f0 ccat f8 f12 c==> cIN f13 * part cset_of_list f12 cIN f13 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f2 cNIL f11 cCONS cFST csplit_normal_list f0 f1 f6 f9 f14 cNIL
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ ((MEM d) r2), ((MEM r) N), ((final_list L) r2) |- (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS r2) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l)))
T c==> cMEM f0 f1 c==> cMEM f2 f3 c==> cfinal_list f4 f1 c? / c/\ c/\ cfinal_list f4 b0 c\/ cMEM b0 creplace f2 cCONS f1 cNIL f3 cMEM b0 cCONS cFST csplit_normal_list f4 f2 f5 f6 f7 cNIL cMEM f0 b0
+ |- ((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))) = T)
T c= ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 b0 f3 c/\ c= cl'y f0 f2 b0 f4 c/\ c= cprev_el f2 f3 f5 c/\ cfinal_list f0 f6 c/\ cfinal_list f0 f7 c/\ c= cSND csplit_normal_list f0 f2 f8 f4 f5 f7 c/\ cMEM f6 f1 c/\ c= cfind_face f0 b0 f8 c/\ cMEM f9 f7 cMEM f10 f6 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f9 c/\ c= cLAST b1 f10 cSUBSET * part cset_of_list b1 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f8 f4 f5 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f8 f4 f5 cNIL cT
+ (!x. ((x IN (set_of_list s1)) ==> (x IN (set_of_list r2)))) |- ((((x' IN (set_of_list s1)) ==> (x' IN (set_of_list r2))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))) = (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> ! c==> cIN b0 * part cset_of_list f0 cIN b0 * part cset_of_list f1 c= c==> c==> cIN f2 * part cset_of_list f0 cIN f2 * part cset_of_list f1 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS f1 cNIL f5 cCONS cFST csplit_normal_list f3 f4 f6 f7 f8 cNIL cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS f1 cNIL f5 cCONS cFST csplit_normal_list f3 f4 f6 f7 f8 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((normal_list L) N), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((normal_list L) N) /\ (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f8 c==> cnormal_list f0 f6 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c/\ cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cMEM f10 cfinal_dart_list f0 f6 c==> cMEM cf_list f0 ce_list f4 cfinal_dart_list f0 f6 c==> ccontour_list f0 f11 c==> c~ c= f11 cNIL c==> c= cHD f11 cf_list f0 ce_list f4 c==> c= cLAST f11 f10 c==> cSUBSET * part cset_of_list f11 * part cset_of_list cfinal_dart_list f0 f6 c==> c= cnext_el f7 f4 f12 c==> cMEM f12 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ (r' = NIL)), (r' = s1) |- (((~ (s1 = NIL)) ==> ((s1 = NIL) = F)) = ((s1 = NIL) = F))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c= c==> c~ c= f1 cNIL c= c= f1 cNIL cF c= c= f1 cNIL cF
+ (~ ((final_list L) r)), ((MEM w) r2), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) |- (((MEM w) r2) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM x) r2) ==> (((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq r2) ==> (((loop_list L) r2) ==> (((contour_list L) s1) ==> (((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cMEM f2 f3 c==> cSUBSET * part cset_of_list f4 * part cset_of_list cfinal_dart_list f0 f5 c/\ cMEM f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 f7 c==> cMEM f8 f7 c==> c< cindexf f2 f6 f7 cindexf f2 f8 f7 c==> c= cfind_face f0 f6 f7 c==> cMEM f9 f3 c==> cMEM f3 cntrans f0 f5 f1 f9 cNUMERAL cBIT1 c_0 c==> cuniq f3 c==> cloop_list f0 f3 c==> ccontour_list f0 f10 c==> c= cHD f10 f11 c==> c= cLAST f10 f9 c==> cSUBSET * part cset_of_list f10 * part cset_of_list f3 c==> c~ c= f10 cNIL c==> cone_step_list f0 f9 cf_list f0 ce_list f9 c==> ccontour_list f0 ccat f10 f4 c==> cIN f12 * part cset_of_list f4 cIN f12 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f3 cNIL f5 cCONS cFST csplit_normal_list f0 f1 f7 f6 f13 cNIL
+ |- (((!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) ==> ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r)) = ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r))
T c= c==> ! ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM w) r2), ((MEM r) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 cf_list f0 ce_list f3 c==> c= cLAST f1 f4 c==> c= cnext_el f5 f3 f6 c==> c= cprev_el f2 f7 f8 c==> c= cl'y f0 f2 f3 f9 c==> c= cl'z f0 f10 f2 f3 f7 c==> c= cSND csplit_normal_list f0 f2 f5 f9 f8 f11 c==> c= cfind_face f0 f3 f5 c==> cMEM f12 f11 c==> cMEM f6 f11 c==> cMEM f2 f10 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cfinal_dart_list f0 f10 c==> call / c~ c= b0 cNIL f0 c==> ccontour_list f0 f1 c==> cfinal_list f0 f11 c==> cmarked_list f0 f10 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f11 cNIL f10 cCONS cFST csplit_normal_list f0 f2 f5 f9 f8 cNIL
+ (r' = s1), ((contour_list L) r') |- ((((contour_list L) s1) ==> (((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))) = (((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> c= f0 f1 c==> ccontour_list f2 f0 c= c==> ccontour_list f2 f1 c==> c= cHD f1 f3 c==> c= cLAST f1 f4 c==> cSUBSET * part cset_of_list f1 * part cset_of_list f5 c==> c~ c= f1 cNIL c==> cone_step_list f2 f4 cf_list f2 ce_list f4 c==> ccontour_list f2 ccat f1 f6 c==> cIN f7 * part cset_of_list f6 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f2 cAPPEND creplace f8 cCONS f5 cNIL f9 cCONS cFST csplit_normal_list f2 f8 f10 f11 f12 cNIL c==> c= cHD f1 f3 c==> c= cLAST f1 f4 c==> cSUBSET * part cset_of_list f1 * part cset_of_list f5 c==> c~ c= f1 cNIL c==> cone_step_list f2 f4 cf_list f2 ce_list f4 c==> ccontour_list f2 ccat f1 f6 c==> cIN f7 * part cset_of_list f6 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f2 cAPPEND creplace f8 cCONS f5 cNIL f9 cCONS cFST csplit_normal_list f2 f8 f10 f11 f12 cNIL
- |- ((\f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))))))) f)
T * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 f1 c/\ c= cprev_el b5 f0 f2 c/\ c= cSND csplit_normal_list b3 b5 b0 f1 f2 b2 c/\ c= cfind_face b3 b6 b0 c/\ c= cnext_el b0 b6 b1 c~ cfinal_list b3 b5 cMEM b1 b2 f3
+ (r' = s1), ((MEM r) N), (x' IN (set_of_list s1)), ((set_of_list r') SUBSET (set_of_list r2)), ((final_list L) r2) |- ((x' IN (set_of_list s1)) /\ (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c= f0 f1 c==> cMEM f2 f3 c==> cIN f4 * part cset_of_list f1 c==> cSUBSET * part cset_of_list f0 * part cset_of_list f5 c==> cfinal_list f6 f5 c/\ cIN f4 * part cset_of_list f1 cIN f4 * part cset_of_list cflatten cfilter * part cfinal_list f6 cAPPEND creplace f2 cCONS f5 cNIL f3 cCONS cFST csplit_normal_list f6 f2 f7 f8 f9 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((final_list L) r1), ((((marked_list L) N) r) x) |- (((final_list L) r1) /\ (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c/\ cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f5 f3 f8 c==> cMEM f7 f6 c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM x) r), ((MEM r) N), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f8 c==> cMEM f4 f1 c==> cMEM f1 f6 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cMEM f10 cfinal_dart_list f0 f6 c==> cMEM cf_list f0 ce_list f4 cfinal_dart_list f0 f6 c==> ccontour_list f0 f11 c==> c~ c= f11 cNIL c==> c= cHD f11 cf_list f0 ce_list f4 c==> c= cLAST f11 f10 c==> cSUBSET * part cset_of_list f11 * part cset_of_list cfinal_dart_list f0 f6 c==> c= cnext_el f7 f4 f12 c==> cMEM f12 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), (((HD r') = u) /\ (((LAST r') = x) /\ (((set_of_list r') SUBSET (set_of_list r2)) /\ (~ (r' = NIL))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) r'), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 cf_list f0 ce_list f4 c==> c= cLAST f1 f5 c==> c= cnext_el f6 f4 f7 c==> c= cfind_face f0 f4 f6 c==> c= cfind_face f0 f8 f6 c==> c/\ c= cHD f9 f10 c/\ c= cLAST f9 f4 c/\ cSUBSET * part cset_of_list f9 * part cset_of_list f3 c~ c= f9 cNIL c==> c< cindexf f7 f8 f6 cindexf f7 f11 f6 c==> cMEM f7 f3 c==> cMEM f4 f3 c==> cMEM f8 f6 c==> cMEM f11 f6 c==> cMEM f2 f12 c==> cMEM f3 cntrans f0 f12 f2 f4 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cfinal_dart_list f0 f12 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f3 c==> ccontour_list f0 f9 c==> ccontour_list f0 f1 c==> cfinal_list f0 f3 c==> cmarked_list f0 f12 f2 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f3 cNIL f12 cCONS cFST csplit_normal_list f0 f2 f6 f8 f13 cNIL
+ |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) x))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 call * part cloop_list f0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 call * part cloop_list f0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 call * part cloop_list f0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f3
+ |- ((\f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))) f)
T * / ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2 f1
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = ((f_list L) (e_list x))) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM v) ((final_dart_list L) N)), ((MEM x) r), ((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)), ((MEM r) N), ((MEM r1) N), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 cf_list f0 ce_list f3 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f5 f6 c==> c= cl'y f0 f2 f3 f7 c==> c= cl'z f0 f1 f2 f3 f5 c==> c= cSND csplit_normal_list f0 f2 f8 f7 f6 f9 c==> c= cfind_face f0 f3 f8 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f10 f9 c==> cMEM f4 f11 c==> cMEM f4 cfinal_dart_list f0 f1 c==> cMEM f3 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> cMEM f2 f1 c==> cMEM f11 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f11 c==> cfinal_list f0 f9 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f9 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f8 f7 f6 cNIL
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))) = T)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= ! ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cMEM f10 cfinal_dart_list f0 f6 c==> cMEM cf_list f0 ce_list f4 cfinal_dart_list f0 f6 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f4 c==> c= cLAST f12 f10 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f6 c==> c= cnext_el f7 f4 f13 c==> cMEM f13 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)) |- (!l. (((\l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))) l) ==> (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS r2) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l)))))
T c==> c~ cfinal_list f0 f1 ! c==> * / c/\ c/\ cfinal_list f0 b1 cMEM b1 f2 cMEM f3 b1 b0 c? / c/\ c/\ cfinal_list f0 b1 c\/ cMEM b1 creplace f1 cCONS f4 cNIL f2 cMEM b1 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL cMEM f3 b1
+ (~ (r' = NIL)), (~ (s = NIL)), ((HD s) = ((f_list L) (e_list x))), ((LAST r') = x), (r' = s1), ((contour_list L) r'), ((contour_list L) s), (((one_step_list L) x) ((f_list L) (e_list x))) |- ((((contour_list L) ((cat s1) s)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = ((((~ (s1 = NIL)) /\ (~ (s = NIL))) ==> (((contour_list L) ((cat s1) s)) = (((contour_list L) s1) /\ (((contour_list L) s) /\ (((one_step_list L) (LAST s1)) (HD s)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c= cHD f1 cf_list f2 ce_list f3 c==> c= cLAST f0 f3 c==> c= f0 f4 c==> ccontour_list f2 f0 c==> ccontour_list f2 f1 c==> cone_step_list f2 f3 cf_list f2 ce_list f3 c= c==> ccontour_list f2 ccat f4 f1 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f7 cCONS f8 cNIL f9 cCONS cFST csplit_normal_list f2 f7 f10 f11 f12 cNIL c==> c==> c/\ c~ c= f4 cNIL c~ c= f1 cNIL c= ccontour_list f2 ccat f4 f1 c/\ ccontour_list f2 f4 c/\ ccontour_list f2 f1 cone_step_list f2 cLAST f4 cHD f1 c? / c/\ ccontour_list f2 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f2 ccat creplace f7 cCONS f8 cNIL f9 cCONS cFST csplit_normal_list f2 f7 f10 f11 f12 cNIL
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x), ((\r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = x) /\ (((set_of_list r') SUBSET (set_of_list r2)) /\ (~ (r' = NIL))))))) r') |- (((\r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = x) /\ (((set_of_list r') SUBSET (set_of_list r2)) /\ (~ (r' = NIL))))))) r') /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 cf_list f0 ce_list f4 c==> c= cLAST f1 f5 c==> c= cnext_el f6 f4 f7 c==> c= cfind_face f0 f4 f6 c==> c= cfind_face f0 f8 f6 c==> c< cindexf f7 f8 f6 cindexf f7 f9 f6 c==> cMEM f7 f3 c==> cMEM f4 f3 c==> cMEM f8 f6 c==> cMEM f9 f6 c==> cMEM f2 f10 c==> cMEM f3 cntrans f0 f10 f2 f4 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cfinal_dart_list f0 f10 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f3 c==> ccontour_list f0 f1 c==> cfinal_list f0 f3 c==> cmarked_list f0 f10 f2 f4 c==> * / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f11 c/\ c= cLAST b0 f4 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list f3 c~ c= b0 cNIL f12 c/\ * / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f11 c/\ c= cLAST b0 f4 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list f3 c~ c= b0 cNIL f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f3 cNIL f10 cCONS cFST csplit_normal_list f0 f2 f6 f8 f13 cNIL
+ |- ((\L. (!r. (!s. (((~ (s = NIL)) /\ (~ (r = NIL))) ==> (((contour_list L) ((cat s) r)) = (((contour_list L) s) /\ (((contour_list L) r) /\ (((one_step_list L) (LAST s)) (HD r))))))))) L)
T * / ! ! c==> c/\ c~ c= b2 cNIL c~ c= b1 cNIL c= ccontour_list b0 ccat b2 b1 c/\ ccontour_list b0 b2 c/\ ccontour_list b0 b1 cone_step_list b0 cLAST b2 cHD b1 f0
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))) ==> ((\g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))) g)) = ((\g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))) g))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= c==> ! c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0 * / c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0 f3 * / c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD r') = u), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), (((LAST r') = x) /\ (((set_of_list r') SUBSET (set_of_list r2)) /\ (~ (r' = NIL)))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) r'), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f4 f5 c==> c= cHD f1 cf_list f0 ce_list f6 c==> c= cLAST f1 f7 c==> c= cnext_el f8 f6 f9 c==> c= cfind_face f0 f6 f8 c==> c= cfind_face f0 f10 f8 c==> c/\ c= cLAST f4 f6 c/\ cSUBSET * part cset_of_list f4 * part cset_of_list f3 c~ c= f4 cNIL c==> c< cindexf f9 f10 f8 cindexf f9 f11 f8 c==> cMEM f9 f3 c==> cMEM f6 f3 c==> cMEM f10 f8 c==> cMEM f11 f8 c==> cMEM f2 f12 c==> cMEM f3 cntrans f0 f12 f2 f6 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cfinal_dart_list f0 f12 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f3 c==> ccontour_list f0 f4 c==> ccontour_list f0 f1 c==> cfinal_list f0 f3 c==> cmarked_list f0 f12 f2 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f3 cNIL f12 cCONS cFST csplit_normal_list f0 f2 f8 f10 f13 cNIL
+ |- ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ (~ ((final_list L) r)), ((\l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))) l) |- (((\l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))) l) /\ (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS r2) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l))))
T c==> c~ cfinal_list f0 f1 c==> * / c/\ c/\ cfinal_list f0 b0 cMEM b0 f2 cMEM f3 b0 f4 c/\ * / c/\ c/\ cfinal_list f0 b0 cMEM b0 f2 cMEM f3 b0 f4 c? / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f1 cCONS f5 cNIL f2 cMEM b0 cCONS cFST csplit_normal_list f0 f1 f6 f7 f8 cNIL cMEM f3 b0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f5 f6 f8 c==> cMEM f7 f2 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cmarked_list f0 f6 f1 f4 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f5 f3 f8 c==> cMEM f7 f6 c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cMEM f11 cfinal_dart_list f0 f6 c==> cMEM cf_list f0 ce_list f4 cfinal_dart_list f0 f6 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f4 c==> c= cLAST f12 f11 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f6 c==> c= cnext_el f9 f4 f13 c==> cMEM f13 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
+ |- (((((final_list L) ((find_list N) (e_list x))) = ((all (\d. (((f_list L) d) = ((next_el ((find_list N) (e_list x))) d)))) ((find_list N) (e_list x)))) ==> ((MEM ((f_list L) (e_list x))) ((find_list N) (e_list x)))) = ((MEM ((f_list L) (e_list x))) ((find_list N) (e_list x))))
T c= c==> c= cfinal_list f0 cfind_list f1 ce_list f2 call / c= cf_list f0 b0 cnext_el cfind_list f1 ce_list f2 b0 cfind_list f1 ce_list f2 cMEM cf_list f0 ce_list f2 cfind_list f1 ce_list f2 cMEM cf_list f0 ce_list f2 cfind_list f1 ce_list f2
+ |- ((\L. (!x. (!y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM x) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = x) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL)))))))))))) L)
T * / ! ! ! c==> c/\ cuniq b3 c/\ cloop_list b0 b3 c/\ cMEM b1 b3 cMEM b2 b3 c? / c/\ ccontour_list b0 b4 c/\ c= cHD b4 b1 c/\ c= cLAST b4 b2 c/\ cSUBSET * part cset_of_list b4 * part cset_of_list b3 c~ c= b4 cNIL f0
+ (~ ((final_list L) r)), ((LAST s1) = x), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) |- (((LAST s1) = x) /\ (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c= cLAST f2 f3 c==> cSUBSET * part cset_of_list f4 * part cset_of_list cfinal_dart_list f0 f5 c/\ c= cLAST f2 f3 c==> cSUBSET * part cset_of_list f2 * part cset_of_list f6 c==> c~ c= f2 cNIL c==> cone_step_list f0 f3 cf_list f0 ce_list f3 c==> ccontour_list f0 ccat f2 f4 c==> cIN f7 * part cset_of_list f4 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f6 cNIL f5 cCONS cFST csplit_normal_list f0 f1 f8 f9 f10 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((final_list L) r1), ((((marked_list L) N) r) x) |- (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f5 f3 f8 c==> cMEM f7 f6 c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
+ |- (((!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) ==> ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1)) = ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1))
T c= c==> ! ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ ((final_list L) ((find_list N) (e_list x))) |- (((MEM (e_list x)) (flatten N)) ==> (((MEM ((find_list N) (e_list x))) N) /\ ((MEM ((f_list L) (e_list x))) ((find_list N) (e_list x)))))
T c==> cfinal_list f0 cfind_list f1 ce_list f2 c==> cMEM ce_list f2 cflatten f1 c/\ cMEM cfind_list f1 ce_list f2 f1 cMEM cf_list f0 ce_list f2 cfind_list f1 ce_list f2
- |- ((!f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))))))) = T)
T c= ! ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 f1 c/\ c= cprev_el b5 f0 f2 c/\ c= cSND csplit_normal_list b3 b5 b0 f1 f2 b2 c/\ c= cfind_face b3 b6 b0 c/\ c= cnext_el b0 b6 b1 c~ cfinal_list b3 b5 cMEM b1 b2 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f5 f6 f8 c==> cMEM f7 f2 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f2 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f3 cMEM ce_list b2 ccat cs_list f0 f1 f3 cfinal_dart_list f0 f2 c==> cMEM f11 cfinal_dart_list f0 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f2 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f3 c==> c= cLAST f12 f11 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f2 c==> c= cnext_el f9 f3 f13 c==> cMEM f13 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = x) /\ (((set_of_list r') SUBSET (set_of_list r2)) /\ (~ (r' = NIL)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 cf_list f0 ce_list f4 c==> c= cLAST f1 f5 c==> c= cnext_el f6 f4 f7 c==> c= cfind_face f0 f4 f6 c==> c= cfind_face f0 f8 f6 c==> c< cindexf f7 f8 f6 cindexf f7 f9 f6 c==> cMEM f7 f3 c==> cMEM f4 f3 c==> cMEM f8 f6 c==> cMEM f9 f6 c==> cMEM f2 f10 c==> cMEM f3 cntrans f0 f10 f2 f4 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cfinal_dart_list f0 f10 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f3 c==> ccontour_list f0 f1 c==> cfinal_list f0 f3 c==> cmarked_list f0 f10 f2 f4 c==> c/\ ccontour_list f0 f11 c/\ c= cHD f11 f12 c/\ c= cLAST f11 f4 c/\ cSUBSET * part cset_of_list f11 * part cset_of_list f3 c~ c= f11 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f3 cNIL f10 cCONS cFST csplit_normal_list f0 f2 f6 f8 f13 cNIL
+ ((contour_list L) ((cat s1) s)) |- (((contour_list L) ((cat s1) s)) = T)
T c==> ccontour_list f0 ccat f1 f2 c= ccontour_list f0 ccat f1 f2 cT
+ (~ (r' = NIL)), (r' = s1) |- (((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s1)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))) = ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s1)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c= c==> c~ c= f1 cNIL c==> cone_step_list f2 f3 cf_list f2 ce_list f3 c==> ccontour_list f2 ccat f1 f4 c==> cIN f5 * part cset_of_list f1 cIN f5 * part cset_of_list cflatten cfilter * part cfinal_list f2 cAPPEND creplace f6 cCONS f7 cNIL f8 cCONS cFST csplit_normal_list f2 f6 f9 f10 f11 cNIL c==> cone_step_list f2 f3 cf_list f2 ce_list f3 c==> ccontour_list f2 ccat f1 f4 c==> cIN f5 * part cset_of_list f1 cIN f5 * part cset_of_list cflatten cfilter * part cfinal_list f2 cAPPEND creplace f6 cCONS f7 cNIL f8 cCONS cFST csplit_normal_list f2 f6 f9 f10 f11 cNIL
+ |- (((!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) ==> ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) x)) = ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) x))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1
+ (~ ((final_list L) r)), ((MEM d) l), ((MEM l) N), ((final_list L) l) |- (~ (l = r))
T c==> c~ cfinal_list f0 f1 c==> cMEM f2 f3 c==> cMEM f3 f4 c==> cfinal_list f0 f3 c~ c= f3 f1
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ c= cSND csplit_normal_list b0 b2 f3 f1 f2 f4 c/\ c= cfind_face b0 b3 f3 c/\ c= cnext_el f3 b3 f5 c~ cfinal_list b0 b2 cMEM f5 f4 f6
+ |- ((\l. (!m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL))))) l)
T * / ! c= c= cAPPEND b0 b1 cNIL c/\ c= b0 cNIL c= b1 cNIL f0
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM x) r2) ==> (((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq r2) ==> (((loop_list L) r2) ==> (((contour_list L) s1) ==> (((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f3 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 f5 c==> cMEM f6 f5 c==> c< cindexf f7 f4 f5 cindexf f7 f6 f5 c==> c= cfind_face f0 f4 f5 c==> cMEM f8 f9 c==> cMEM f9 cntrans f0 f3 f1 f8 cNUMERAL cBIT1 c_0 c==> cuniq f9 c==> cloop_list f0 f9 c==> ccontour_list f0 f10 c==> c= cHD f10 f11 c==> c= cLAST f10 f8 c==> cSUBSET * part cset_of_list f10 * part cset_of_list f9 c==> c~ c= f10 cNIL c==> cone_step_list f0 f8 cf_list f0 ce_list f8 c==> ccontour_list f0 ccat f10 f2 c==> cIN f12 * part cset_of_list f2 cIN f12 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f9 cNIL f3 cCONS cFST csplit_normal_list f0 f1 f5 f4 f13 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f5 f6 f8 c==> cMEM f7 f2 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (((next_el f) x) = w), ((MEM w) r2), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM x) r2) ==> (((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq r2) ==> (((loop_list L) r2) ==> (((contour_list L) s1) ==> (((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f3 f4 c==> cMEM f4 f5 c==> cSUBSET * part cset_of_list f6 * part cset_of_list cfinal_dart_list f0 f7 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f8 f2 c==> cMEM f9 f2 c==> c< cindexf f4 f8 f2 cindexf f4 f9 f2 c==> c= cfind_face f0 f8 f2 c==> cMEM f3 f5 c==> cMEM f5 cntrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 c==> cuniq f5 c==> cloop_list f0 f5 c==> ccontour_list f0 f10 c==> c= cHD f10 f11 c==> c= cLAST f10 f3 c==> cSUBSET * part cset_of_list f10 * part cset_of_list f5 c==> c~ c= f10 cNIL c==> cone_step_list f0 f3 cf_list f0 ce_list f3 c==> ccontour_list f0 ccat f10 f6 c==> cIN f12 * part cset_of_list f6 cIN f12 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f5 cNIL f7 cCONS cFST csplit_normal_list f0 f1 f2 f8 f13 cNIL
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ (s = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM v) ((final_dart_list L) N)), ((MEM w) r2), ((MEM x) r), ((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)), ((MEM r) N), ((MEM r1) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((contour_list L) s), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM w) r2) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ c= f4 cNIL c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f4 cf_list f0 ce_list f3 c==> c= cLAST f4 f5 c==> c= cnext_el f6 f3 f7 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f8 f9 c==> c= cl'y f0 f2 f3 f10 c==> c= cl'z f0 f1 f2 f3 f8 c==> c= cSND csplit_normal_list f0 f2 f6 f10 f9 f11 c==> c= cfind_face f0 f3 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f12 f11 c==> cMEM f5 f13 c==> cMEM f5 cfinal_dart_list f0 f1 c==> cMEM f7 f11 c==> cMEM f3 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> cMEM f2 f1 c==> cMEM f13 f1 c==> cSUBSET * part cset_of_list f4 * part cset_of_list cfinal_dart_list f0 f1 c==> ccontour_list f0 f4 c==> cnormal_list f0 f1 c==> cfinal_list f0 f13 c==> cfinal_list f0 f11 c==> cmarked_list f0 f1 f2 f3 c/\ cMEM f7 f11 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f11 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f6 f10 f9 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM r) N), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f8 c==> cMEM f1 f6 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> cMEM cf_list f0 ce_list f4 cfinal_dart_list f0 f6 c==> ccontour_list f0 f10 c==> c~ c= f10 cNIL c==> c= cHD f10 cf_list f0 ce_list f4 c==> c= cLAST f10 f11 c==> cSUBSET * part cset_of_list f10 * part cset_of_list cfinal_dart_list f0 f6 c==> c= cnext_el f7 f4 f12 c==> cMEM f12 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- (((!r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))) ==> ((\r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))) r)) = ((\r. (!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))) r))
T c= c==> ! ! c= cs_flag_list f0 f1 b0 b1 c/\ ! ! c==> c/\ cMEM b2 cfinal_dart_list f0 f1 cMEM b3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 b2 c/\ c= cLAST b4 b3 cSUBSET * part cset_of_list b4 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b4 cLAST b3 c/\ cMEM b3 cparts f0 b2 c/\ cMEM b2 f1 c/\ c~ cfinal_list f0 b2 c~ cMEM b4 cs_list f0 b0 b1 cMEM ce_list b4 ccat cs_list f0 b0 b1 cfinal_dart_list f0 f1 * / ! c= cs_flag_list f0 f1 b0 b1 c/\ ! ! c==> c/\ cMEM b2 cfinal_dart_list f0 f1 cMEM b3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 b2 c/\ c= cLAST b4 b3 cSUBSET * part cset_of_list b4 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b4 cLAST b3 c/\ cMEM b3 cparts f0 b2 c/\ cMEM b2 f1 c/\ c~ cfinal_list f0 b2 c~ cMEM b4 cs_list f0 b0 b1 cMEM ce_list b4 ccat cs_list f0 b0 b1 cfinal_dart_list f0 f1 f2 * / ! c= cs_flag_list f0 f1 b0 b1 c/\ ! ! c==> c/\ cMEM b2 cfinal_dart_list f0 f1 cMEM b3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b4 c/\ c~ c= b4 cNIL c/\ c= cHD b4 b2 c/\ c= cLAST b4 b3 cSUBSET * part cset_of_list b4 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b4 cLAST b3 c/\ cMEM b3 cparts f0 b2 c/\ cMEM b2 f1 c/\ c~ cfinal_list f0 b2 c~ cMEM b4 cs_list f0 b0 b1 cMEM ce_list b4 ccat cs_list f0 b0 b1 cfinal_dart_list f0 f1 f2
+ ((MEM r) N), ((final_list L) r2) |- ((?d. (x' = d)) ==> ((x' IN (set_of_list r2)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> cMEM f0 f1 c==> cfinal_list f2 f3 c==> c? / c= f4 b0 c==> cIN f4 * part cset_of_list f3 cIN f4 * part cset_of_list cflatten cfilter * part cfinal_list f2 cAPPEND creplace f0 cCONS f3 cNIL f1 cCONS cFST csplit_normal_list f2 f0 f5 f6 f7 cNIL
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM x) r), ((MEM r) N), ((MEM r1) N), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 f3 f4 c==> c= cl'y f0 f1 f2 f5 c==> c= cl'z f0 f6 f1 f2 f3 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f4 f8 c==> c= cfind_face f0 f2 f7 c==> c/\ c= cnext_el f1 f2 cf_list f0 f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f6 cMEM b1 cfinal_dart_list f0 f6 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f6 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f2 cMEM ce_list b2 ccat cs_list f0 f1 f2 cfinal_dart_list f0 f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f2 f1 c==> cMEM f1 f6 c==> cMEM f11 f6 c==> cnormal_list f0 f6 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f2 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f4 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (r' = NIL)), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), ((HD r') = u), ((HD s) = ((f_list L) (e_list x))), ((LAST r') = x), ((LAST s) = v), (((next_el f) x) = w), (r' = s1), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list r') SUBSET (set_of_list r2)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) r'), ((contour_list L) s), ((final_list L) r2), (((one_step_list L) x) ((f_list L) (e_list x))) |- ((((one_step_list L) x) ((f_list L) (e_list x))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ c= f2 cNIL c==> c~ cfinal_list f0 f3 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> c= cHD f1 f5 c==> c= cHD f2 cf_list f0 ce_list f6 c==> c= cLAST f1 f6 c==> c= cLAST f2 f7 c==> c= cnext_el f8 f6 f9 c==> c= f1 f10 c==> c= cfind_face f0 f11 f8 c==> c< cindexf f9 f11 f8 cindexf f9 f12 f8 c==> cMEM f9 f4 c==> cMEM f6 f4 c==> cMEM f11 f8 c==> cMEM f12 f8 c==> cMEM f3 f13 c==> cMEM f4 cntrans f0 f13 f3 f6 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list f4 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f13 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f4 c==> ccontour_list f0 f1 c==> ccontour_list f0 f2 c==> cfinal_list f0 f4 c==> cone_step_list f0 f6 cf_list f0 ce_list f6 c/\ cone_step_list f0 f6 cf_list f0 ce_list f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f3 cCONS f4 cNIL f13 cCONS cFST csplit_normal_list f0 f3 f8 f11 f14 cNIL
+ (r' = s1), ((contour_list L) r') |- ((contour_list L) s1)
T c==> c= f0 f1 c==> ccontour_list f2 f0 ccontour_list f2 f1
+ ((MEM v) r1), ((MEM r1) N), ((final_list L) r1) |- ((((final_list L) r1) /\ ((MEM r1) N)) /\ ((MEM v) r1))
T c==> cMEM f0 f1 c==> cMEM f1 f2 c==> cfinal_list f3 f1 c/\ c/\ cfinal_list f3 f1 cMEM f1 f2 cMEM f0 f1
+ |- (((!x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))) ==> ((\x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))) x)) = ((\x. (((((s_flag_list L) N) r) x) = ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))) x))
T c= c==> ! c= cs_flag_list f0 f1 f2 b0 c/\ ! ! c==> c/\ cMEM b1 cfinal_dart_list f0 f1 cMEM b2 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 b1 c/\ c= cLAST b3 b2 cSUBSET * part cset_of_list b3 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b3 cLAST b2 c/\ cMEM b2 cparts f0 b1 c/\ cMEM b1 f1 c/\ c~ cfinal_list f0 b1 c~ cMEM b3 cs_list f0 f2 b0 cMEM ce_list b3 ccat cs_list f0 f2 b0 cfinal_dart_list f0 f1 * / c= cs_flag_list f0 f1 f2 b0 c/\ ! ! c==> c/\ cMEM b1 cfinal_dart_list f0 f1 cMEM b2 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 b1 c/\ c= cLAST b3 b2 cSUBSET * part cset_of_list b3 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b3 cLAST b2 c/\ cMEM b2 cparts f0 b1 c/\ cMEM b1 f1 c/\ c~ cfinal_list f0 b1 c~ cMEM b3 cs_list f0 f2 b0 cMEM ce_list b3 ccat cs_list f0 f2 b0 cfinal_dart_list f0 f1 f3 * / c= cs_flag_list f0 f1 f2 b0 c/\ ! ! c==> c/\ cMEM b1 cfinal_dart_list f0 f1 cMEM b2 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b3 c/\ c~ c= b3 cNIL c/\ c= cHD b3 b1 c/\ c= cLAST b3 b2 cSUBSET * part cset_of_list b3 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b3 cLAST b2 c/\ cMEM b2 cparts f0 b1 c/\ cMEM b1 f1 c/\ c~ cfinal_list f0 b1 c~ cMEM b3 cs_list f0 f2 b0 cMEM ce_list b3 ccat cs_list f0 f2 b0 cfinal_dart_list f0 f1 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L) |- (((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq r2) ==> (((loop_list L) r2) ==> (((contour_list L) s1) ==> (((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f5 f2 c==> c< cindexf f4 f5 f2 cindexf f4 f6 f2 c==> cMEM f4 f7 c==> cMEM f3 f7 c==> cMEM f5 f2 c==> cMEM f6 f2 c==> cSUBSET * part cset_of_list f8 * part cset_of_list cfinal_dart_list f0 f9 c==> call / c~ c= b0 cNIL f0 c==> cMEM f7 cntrans f0 f9 f1 f3 cNUMERAL cBIT1 c_0 c==> cuniq f7 c==> cloop_list f0 f7 c==> ccontour_list f0 f10 c==> c= cHD f10 f11 c==> c= cLAST f10 f3 c==> cSUBSET * part cset_of_list f10 * part cset_of_list f7 c==> c~ c= f10 cNIL c==> cone_step_list f0 f3 cf_list f0 ce_list f3 c==> ccontour_list f0 ccat f10 f8 c==> cIN f12 * part cset_of_list f8 cIN f12 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f7 cNIL f9 cCONS cFST csplit_normal_list f0 f1 f2 f5 f13 cNIL
+ |- ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
+ |- ((!s. (((~ (s = NIL)) /\ (~ (r = NIL))) ==> (((contour_list L) ((cat s) r)) = (((contour_list L) s) /\ (((contour_list L) r) /\ (((one_step_list L) (LAST s)) (HD r))))))) = T)
T c= ! c==> c/\ c~ c= b0 cNIL c~ c= f0 cNIL c= ccontour_list f1 ccat b0 f0 c/\ ccontour_list f1 b0 c/\ ccontour_list f1 f0 cone_step_list f1 cLAST b0 cHD f0 cT
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM w) r2), ((MEM r) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 cf_list f0 ce_list f3 c==> c= cLAST f1 f4 c==> c= cnext_el f5 f3 f6 c==> c= cprev_el f2 f7 f8 c==> c= cl'y f0 f2 f3 f9 c==> c= cl'z f0 f10 f2 f3 f7 c==> c= cSND csplit_normal_list f0 f2 f5 f9 f8 f11 c==> c= cfind_face f0 f3 f5 c==> cMEM f12 f11 c==> cMEM f6 f11 c==> cMEM f2 f10 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cfinal_dart_list f0 f10 c==> call / c~ c= b0 cNIL f0 c==> ccontour_list f0 f1 c==> cfinal_list f0 f11 c==> cmarked_list f0 f10 f2 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f10 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= f5 cfind_face f0 f3 c= f6 cnext_el f5 f3 c/\ cMEM cytrans f0 f10 f2 f3 cNUMERAL c_0 f5 c/\ cMEM cztrans f0 f10 f2 f3 cNUMERAL c_0 f5 c< cindexf f6 cytrans f0 f10 f2 f3 cNUMERAL c_0 f5 cindexf f6 cztrans f0 f10 f2 f3 cNUMERAL c_0 f5 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f11 cNIL f10 cCONS cFST csplit_normal_list f0 f2 f5 f9 f8 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r2), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c==> c~ c= f4 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq f5 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f4 cf_list f0 ce_list f3 c==> c= cLAST f4 f6 c==> c= cnext_el f7 f3 f8 c==> c= cSND csplit_normal_list f0 f2 f7 f9 f10 f5 c==> c= cfind_face f0 f3 f7 c==> c= cfind_face f0 f9 f7 c==> c< cindexf f8 f9 f7 cindexf f8 f11 f7 c==> cMEM f12 f5 c==> cMEM f8 f5 c==> cMEM f3 f5 c==> cMEM f9 f7 c==> cMEM f11 f7 c==> cMEM f2 f1 c==> cMEM f5 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f4 * part cset_of_list cfinal_dart_list f0 f1 c==> call / c~ c= b0 cNIL f0 c==> ccontour_list f0 f4 c==> cfinal_list f0 f5 c==> cmarked_list f0 f1 f2 f3 c/\ ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f5 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f9 f10 cNIL
+ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ (s = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM v) ((final_dart_list L) N)), ((MEM x) r), ((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)), ((MEM r) N), ((MEM r1) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((contour_list L) s), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ c= f4 cNIL c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f4 cf_list f0 ce_list f3 c==> c= cLAST f4 f5 c==> c= cnext_el f6 f3 f7 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f8 f9 c==> c= cl'y f0 f2 f3 f10 c==> c= cl'z f0 f1 f2 f3 f8 c==> c= cSND csplit_normal_list f0 f2 f6 f10 f9 f11 c==> c= cfind_face f0 f3 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f12 f11 c==> cMEM f5 f13 c==> cMEM f5 cfinal_dart_list f0 f1 c==> cMEM f3 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> cMEM f2 f1 c==> cMEM f13 f1 c==> cSUBSET * part cset_of_list f4 * part cset_of_list cfinal_dart_list f0 f1 c==> ccontour_list f0 f4 c==> cnormal_list f0 f1 c==> cfinal_list f0 f13 c==> cfinal_list f0 f11 c==> cmarked_list f0 f1 f2 f3 c==> cMEM f7 f11 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f11 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f6 f10 f9 cNIL
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM x) r), ((MEM r) N), ((MEM r1) N), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f0 f2 f3 f6 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cSND csplit_normal_list f0 f2 f7 f6 f5 f8 c==> c= cfind_face f0 f3 f7 c==> c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f3 f2 c==> cMEM f2 f1 c==> cMEM f11 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f6 f5 cNIL
+ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ (s = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM v) ((final_dart_list L) N)), ((MEM x) r), ((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)), ((MEM r) N), ((MEM r1) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((contour_list L) s), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ c= f4 cNIL c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f4 cf_list f0 ce_list f3 c==> c= cLAST f4 f5 c==> c= cnext_el f6 f3 f7 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f8 f9 c==> c= cl'y f0 f2 f3 f10 c==> c= cl'z f0 f1 f2 f3 f8 c==> c= cSND csplit_normal_list f0 f2 f6 f10 f9 f11 c==> c= cfind_face f0 f3 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f12 f11 c==> cMEM f5 f13 c==> cMEM f5 cfinal_dart_list f0 f1 c==> cMEM f3 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> cMEM f2 f1 c==> cMEM f13 f1 c==> cSUBSET * part cset_of_list f4 * part cset_of_list cfinal_dart_list f0 f1 c==> ccontour_list f0 f4 c==> cnormal_list f0 f1 c==> cfinal_list f0 f13 c==> cfinal_list f0 f11 c==> cmarked_list f0 f1 f2 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cl'z f0 f1 f2 f3 f8 c/\ c= cl'y f0 f2 f3 f10 c/\ c= cprev_el f2 f8 f9 c/\ c= cSND csplit_normal_list f0 f2 f6 f10 f9 f11 c/\ c= cfind_face f0 f3 f6 c/\ c= cnext_el f6 f3 f7 c~ cfinal_list f0 f2 cMEM f7 f11 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f11 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f6 f10 f9 cNIL
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= ! ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 cT
+ |- (((!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) ==> ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)) = ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s))
T c= c==> ! c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((final_list L) ((find_list N) (e_list x))), ((((marked_list L) N) r) x) |- ((\l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM ((f_list L) (e_list x))) l))) ((find_list N) (e_list x)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cfinal_list f0 cfind_list f2 ce_list f3 c==> cmarked_list f0 f2 f1 f3 * / c/\ c/\ cfinal_list f0 b0 cMEM b0 f2 cMEM cf_list f0 ce_list f3 b0 cfind_list f2 ce_list f3
+ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = ((f_list L) (e_list x))) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM v) ((final_dart_list L) N)), ((MEM x) r), ((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)), ((MEM r) N), ((MEM r1) N), ((contour_list L) s), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f0 f2 f3 f6 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cSND csplit_normal_list f0 f2 f7 f6 f5 f8 c==> c= cfind_face f0 f3 f7 c==> c/\ ccontour_list f0 f9 c/\ c~ c= f9 cNIL c/\ c= cHD f9 cf_list f0 ce_list f3 c/\ c= cLAST f9 f10 cSUBSET * part cset_of_list f9 * part cset_of_list cfinal_dart_list f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f11 f8 c==> cMEM f10 f12 c==> cMEM f10 cfinal_dart_list f0 f1 c==> cMEM f3 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> cMEM f2 f1 c==> cMEM f12 f1 c==> ccontour_list f0 f9 c==> cnormal_list f0 f1 c==> cfinal_list f0 f12 c==> cfinal_list f0 f8 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f6 f5 cNIL
- (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))) |- ((\s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s))) s)
T c==> ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1 * / c==> cMEM f0 b0 cMEM cnext_el b0 f0 b0 f1
+ |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))) x))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= cl'z f0 f1 f2 b0 f3 c/\ c= cl'y f0 f2 b0 f4 c/\ c= cprev_el f2 f3 f5 c/\ c= cSND csplit_normal_list f0 f2 f6 f4 f5 f7 c/\ c= cfind_face f0 b0 f6 c/\ c= cnext_el f6 b0 f8 c~ cfinal_list f0 f2 cMEM f8 f7 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= cl'z f0 f1 f2 b0 f3 c/\ c= cl'y f0 f2 b0 f4 c/\ c= cprev_el f2 f3 f5 c/\ c= cSND csplit_normal_list f0 f2 f6 f4 f5 f7 c/\ c= cfind_face f0 b0 f6 c/\ c= cnext_el f6 b0 f8 c~ cfinal_list f0 f2 cMEM f8 f7 f9 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= cl'z f0 f1 f2 b0 f3 c/\ c= cl'y f0 f2 b0 f4 c/\ c= cprev_el f2 f3 f5 c/\ c= cSND csplit_normal_list f0 f2 f6 f4 f5 f7 c/\ c= cfind_face f0 b0 f6 c/\ c= cnext_el f6 b0 f8 c~ cfinal_list f0 f2 cMEM f8 f7 f9
+ ((MEM (e_list x)) (flatten N)), ((final_list L) ((find_list N) (e_list x))) |- ((((MEM (e_list x)) (flatten N)) ==> ((MEM (e_list x)) ((find_list N) (e_list x)))) ==> (((MEM ((find_list N) (e_list x))) N) /\ ((MEM ((f_list L) (e_list x))) ((find_list N) (e_list x)))))
T c==> cMEM ce_list f0 cflatten f1 c==> cfinal_list f2 cfind_list f1 ce_list f0 c==> c==> cMEM ce_list f0 cflatten f1 cMEM ce_list f0 cfind_list f1 ce_list f0 c/\ cMEM cfind_list f1 ce_list f0 f1 cMEM cf_list f2 ce_list f0 cfind_list f1 ce_list f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c= cprev_el f1 f5 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f3 f6 f8 c==> cMEM f7 f4 c==> c= cfind_face f0 f2 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f9 f3 f6 cNIL
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1)))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = T)
T c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c= cSND csplit_normal_list f0 f2 f9 f5 f6 f8 c/\ cMEM f7 f1 c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL cT
+ |- ((\m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL)))) m)
T * / c= c= cAPPEND f0 b0 cNIL c/\ c= f0 cNIL c= b0 cNIL f1
- (!x'. (((MEM x') ((find_list N) (e_list x))) ==> (((f_list L) x') = ((next_el ((find_list N) (e_list x))) x')))) |- (((MEM x') ((find_list N) (e_list x))) ==> (((f_list L) x') = ((next_el ((find_list N) (e_list x))) x')))
T c==> ! c==> cMEM b0 cfind_list f0 ce_list f1 c= cf_list f2 b0 cnext_el cfind_list f0 ce_list f1 b0 c==> cMEM f3 cfind_list f0 ce_list f1 c= cf_list f2 f3 cnext_el cfind_list f0 ce_list f1 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r2), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 cf_list f0 ce_list f4 c==> c= cLAST f1 f5 c==> c= cnext_el f6 f4 f7 c==> c= cSND csplit_normal_list f0 f2 f6 f8 f9 f3 c==> c= cfind_face f0 f4 f6 c==> c= cfind_face f0 f8 f6 c==> c< cindexf f7 f8 f6 cindexf f7 f10 f6 c==> cMEM f11 f3 c==> cMEM f7 f3 c==> cMEM f4 f3 c==> cMEM f8 f6 c==> cMEM f10 f6 c==> cMEM f2 f12 c==> cMEM f3 cntrans f0 f12 f2 f4 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cfinal_dart_list f0 f12 c==> call / c~ c= b0 cNIL f0 c==> ccontour_list f0 f1 c==> cfinal_list f0 f3 c==> cmarked_list f0 f12 f2 f4 c==> ! c==> cMEM b0 cntrans f0 f12 f2 f4 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f3 cNIL f12 cCONS cFST csplit_normal_list f0 f2 f6 f8 f9 cNIL
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r2), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM x) r2) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 cf_list f0 ce_list f3 c==> c= cLAST f1 f4 c==> c= cnext_el f5 f3 f6 c==> c= cprev_el f2 f7 f8 c==> c= cl'y f0 f2 f3 f9 c==> c= cl'z f0 f10 f2 f3 f7 c==> c= cSND csplit_normal_list f0 f2 f5 f9 f8 f11 c==> c= cfind_face f0 f3 f5 c==> c= cfind_face f0 f9 f5 c==> c< cindexf f6 f9 f5 cindexf f6 f7 f5 c==> cMEM f12 f11 c==> cMEM f6 f11 c==> cMEM f3 f11 c==> cMEM f9 f5 c==> cMEM f7 f5 c==> cMEM f2 f10 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cfinal_dart_list f0 f10 c==> call / c~ c= b0 cNIL f0 c==> ccontour_list f0 f1 c==> cfinal_list f0 f11 c==> cmarked_list f0 f10 f2 f3 c/\ cMEM f3 f11 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f11 cNIL f10 cCONS cFST csplit_normal_list f0 f2 f5 f9 f8 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = x) /\ (((set_of_list r') SUBSET (set_of_list r2)) /\ (~ (r' = NIL)))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 cf_list f0 ce_list f4 c==> c= cLAST f1 f5 c==> c= cnext_el f6 f4 f7 c==> c= cfind_face f0 f4 f6 c==> c= cfind_face f0 f8 f6 c==> c/\ ccontour_list f0 f9 c/\ c= cHD f9 f10 c/\ c= cLAST f9 f4 c/\ cSUBSET * part cset_of_list f9 * part cset_of_list f3 c~ c= f9 cNIL c==> c< cindexf f7 f8 f6 cindexf f7 f11 f6 c==> cMEM f7 f3 c==> cMEM f4 f3 c==> cMEM f8 f6 c==> cMEM f11 f6 c==> cMEM f2 f12 c==> cMEM f3 cntrans f0 f12 f2 f4 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cfinal_dart_list f0 f12 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f3 c==> ccontour_list f0 f1 c==> cfinal_list f0 f3 c==> cmarked_list f0 f12 f2 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f3 cNIL f12 cCONS cFST csplit_normal_list f0 f2 f6 f8 f13 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f8 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cMEM f10 cfinal_dart_list f0 f6 c==> cMEM cf_list f0 ce_list f4 cfinal_dart_list f0 f6 c==> ccontour_list f0 f11 c==> c~ c= f11 cNIL c==> c= cHD f11 cf_list f0 ce_list f4 c==> c= cLAST f11 f10 c==> cSUBSET * part cset_of_list f11 * part cset_of_list cfinal_dart_list f0 f6 c==> c= cnext_el f7 f4 f12 c==> cMEM f12 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM v) r1), ((MEM r1) N), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f11 f6 c==> cnormal_list f0 f6 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cMEM f10 cfinal_dart_list f0 f6 c==> cMEM cf_list f0 ce_list f4 cfinal_dart_list f0 f6 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f4 c==> c= cLAST f12 f10 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f6 c==> c= cnext_el f7 f4 f13 c==> cMEM f13 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ ((MEM (e_list x)) ((find_list N) (e_list x))), ((final_list L) ((find_list N) (e_list x))) |- ((MEM ((f_list L) (e_list x))) ((find_list N) (e_list x)))
T c==> cMEM ce_list f0 cfind_list f1 ce_list f0 c==> cfinal_list f2 cfind_list f1 ce_list f0 cMEM cf_list f2 ce_list f0 cfind_list f1 ce_list f0
+ |- (((!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) ==> ((\x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) x)) = ((\x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) x))
T c= c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 * / ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 f0 * / ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 f0
+ (r' = s1), ((MEM r) N), ((set_of_list r') SUBSET (set_of_list r2)), ((final_list L) r2), (((one_step_list L) x) ((f_list L) (e_list x))) |- ((((one_step_list L) x) ((f_list L) (e_list x))) /\ (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s1)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))
T c==> c= f0 f1 c==> cMEM f2 f3 c==> cSUBSET * part cset_of_list f0 * part cset_of_list f4 c==> cfinal_list f5 f4 c==> cone_step_list f5 f6 cf_list f5 ce_list f6 c/\ cone_step_list f5 f6 cf_list f5 ce_list f6 c==> ccontour_list f5 ccat f1 f7 c==> cIN f8 * part cset_of_list f1 cIN f8 * part cset_of_list cflatten cfilter * part cfinal_list f5 cAPPEND creplace f2 cCONS f4 cNIL f3 cCONS cFST csplit_normal_list f5 f2 f9 f10 f11 cNIL
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((MEM x) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 cMEM b0 crtrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f3
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((MEM x) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))) ==> ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((MEM x) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))) L)) = ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((MEM x) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))) L))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 cMEM b3 crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 cMEM b3 crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 f0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 cMEM b3 crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 f0
+ |- ((!r. (!s. (((~ (s = NIL)) /\ (~ (r = NIL))) ==> (((contour_list L) ((cat s) r)) = (((contour_list L) s) /\ (((contour_list L) r) /\ (((one_step_list L) (LAST s)) (HD r)))))))) = T)
T c= ! ! c==> c/\ c~ c= b1 cNIL c~ c= b0 cNIL c= ccontour_list f0 ccat b1 b0 c/\ ccontour_list f0 b1 c/\ ccontour_list f0 b0 cone_step_list f0 cLAST b1 cHD b0 cT
+ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ (s = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM v) ((final_dart_list L) N)), ((MEM x) r), ((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)), ((MEM r) N), ((MEM r1) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((contour_list L) s), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x), ((\w. (((next_el f) x) = w)) w) |- (((\w. (((next_el f) x) = w)) w) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ c= f4 cNIL c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f4 cf_list f0 ce_list f3 c==> c= cLAST f4 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cSND csplit_normal_list f0 f2 f9 f8 f7 f10 c==> c= cfind_face f0 f3 f9 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f11 f10 c==> cMEM f5 f12 c==> cMEM f5 cfinal_dart_list f0 f1 c==> cMEM f3 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> cMEM f2 f1 c==> cMEM f12 f1 c==> cSUBSET * part cset_of_list f4 * part cset_of_list cfinal_dart_list f0 f1 c==> ccontour_list f0 f4 c==> cnormal_list f0 f1 c==> cfinal_list f0 f12 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c==> * / c= cnext_el f9 f3 b0 f13 c/\ * / c= cnext_el f9 f3 b0 f13 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f10 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f8 f7 cNIL
+ ((MEM d) r2), ((MEM r) N), ((final_list L) r2) |- ((\l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS r2) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l))) r2)
T c==> cMEM f0 f1 c==> cMEM f2 f3 c==> cfinal_list f4 f1 * / c/\ c/\ cfinal_list f4 b0 c\/ cMEM b0 creplace f2 cCONS f1 cNIL f3 cMEM b0 cCONS cFST csplit_normal_list f4 f2 f5 f6 f7 cNIL cMEM f0 b0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) y) = f), ((((marked_list L) N) r) x) |- ((((MEM x) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = ((((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((MEM x) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f5 f7 c==> cmarked_list f0 f6 f1 f4 c= c==> cMEM f4 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f6 f1 f4 cMEM f4 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ ((final_list L) ((find_list N) (e_list x))) |- ((((MEM ((find_list N) (e_list x))) N) /\ ((MEM ((f_list L) (e_list x))) ((find_list N) (e_list x)))) = ((((final_list L) ((find_list N) (e_list x))) /\ ((MEM ((find_list N) (e_list x))) N)) /\ ((MEM ((f_list L) (e_list x))) ((find_list N) (e_list x)))))
T c==> cfinal_list f0 cfind_list f1 ce_list f2 c= c/\ cMEM cfind_list f1 ce_list f2 f1 cMEM cf_list f0 ce_list f2 cfind_list f1 ce_list f2 c/\ c/\ cfinal_list f0 cfind_list f1 ce_list f2 cMEM cfind_list f1 ce_list f2 f1 cMEM cf_list f0 ce_list f2 cfind_list f1 ce_list f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c= cprev_el f1 f5 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f3 f6 f8 c==> cMEM f7 f4 c==> c= cfind_face f0 f2 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f4 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f2 cMEM ce_list b2 ccat cs_list f0 f1 f2 cfinal_dart_list f0 f4 c==> cMEM f11 cfinal_dart_list f0 f4 c==> cMEM cf_list f0 ce_list f2 cfinal_dart_list f0 f4 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f2 c==> c= cLAST f12 f11 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f4 c==> c= cnext_el f9 f2 f13 c==> cMEM f13 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f9 f3 f6 cNIL
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM v) ((final_dart_list L) N)), ((MEM x) r), ((MEM r) N), ((MEM r1) N), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f0 f2 f3 f6 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cSND csplit_normal_list f0 f2 f7 f6 f5 f8 c==> c= cfind_face f0 f3 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f10 cfinal_dart_list f0 f1 c==> cMEM f3 f2 c==> cMEM f2 f1 c==> cMEM f11 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f1 f2 f3 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f6 f5 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), ((MEM r1) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r1) N) /\ ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> cMEM f9 f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f9 f6 c==> c= cfind_face f0 f4 f7 c==> cMEM f10 f8 c==> cMEM f11 f9 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ ((MEM r) N), (x' IN (set_of_list s1)), ((final_list L) r2) |- (((x' IN (set_of_list s1)) ==> (x' IN (set_of_list r2))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> cMEM f0 f1 c==> cIN f2 * part cset_of_list f3 c==> cfinal_list f4 f5 c==> c==> cIN f2 * part cset_of_list f3 cIN f2 * part cset_of_list f5 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f4 cAPPEND creplace f0 cCONS f5 cNIL f1 cCONS cFST csplit_normal_list f4 f0 f6 f7 f8 cNIL
+ |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= cl'z f0 f1 f2 b0 f3 c/\ c= cl'y f0 f2 b0 f4 c/\ c= cprev_el f2 f3 f5 c/\ c= cSND csplit_normal_list f0 f2 f6 f4 f5 f7 c/\ c= cfind_face f0 b0 f6 c/\ c= cnext_el f6 b0 f8 c~ cfinal_list f0 f2 cMEM f8 f7 f9
+ (~ ((final_list L) r)), ((MEM d) l), ((MEM l) N), ((final_list L) l) |- ((MEM l) (((replace r) ((CONS r2) NIL)) N))
T c==> c~ cfinal_list f0 f1 c==> cMEM f2 f3 c==> cMEM f3 f4 c==> cfinal_list f0 f3 cMEM f3 creplace f1 cCONS f5 cNIL f4
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM r) N), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) /\ (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f0 f2 f3 f6 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cSND csplit_normal_list f0 f2 f7 f6 f5 f8 c==> c= cfind_face f0 f3 f7 c==> cMEM f9 f8 c==> cMEM f2 f1 c==> cfinal_list f0 f8 c==> cmarked_list f0 f1 f2 f3 c/\ ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> cMEM f10 cfinal_dart_list f0 f1 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> ccontour_list f0 f11 c==> c~ c= f11 cNIL c==> c= cHD f11 cf_list f0 ce_list f3 c==> c= cLAST f11 f10 c==> cSUBSET * part cset_of_list f11 * part cset_of_list cfinal_dart_list f0 f1 c==> c= cnext_el f7 f3 f12 c==> cMEM f12 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f6 f5 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1))))))))), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c/\ c= cl'y f0 f1 f2 f3 c/\ c= cprev_el f1 f5 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c= cSND csplit_normal_list f0 f1 f9 f3 f6 f8 c/\ cMEM f7 f4 c/\ c= cfind_face f0 f2 f9 c/\ cMEM f10 f8 cMEM f11 f7 c==> cmarked_list f0 f4 f1 f2 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f3 f6 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f9 f3 f6 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM r) N), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f8 c==> cMEM f1 f6 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cMEM f10 cfinal_dart_list f0 f6 c==> cMEM cf_list f0 ce_list f4 cfinal_dart_list f0 f6 c==> ccontour_list f0 f11 c==> c~ c= f11 cNIL c==> c= cHD f11 cf_list f0 ce_list f4 c==> c= cLAST f11 f10 c==> cSUBSET * part cset_of_list f11 * part cset_of_list cfinal_dart_list f0 f6 c==> c= cnext_el f7 f4 f12 c==> cMEM f12 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ ((HD r') = u), (r' = s1) |- ((((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))) = (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c= cHD f0 f1 c==> c= f0 f2 c= c==> c= cHD f2 f1 c==> c= cLAST f2 f3 c==> cSUBSET * part cset_of_list f2 * part cset_of_list f4 c==> c~ c= f2 cNIL c==> cone_step_list f5 f3 cf_list f5 ce_list f3 c==> ccontour_list f5 ccat f2 f6 c==> cIN f7 * part cset_of_list f6 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f5 cAPPEND creplace f8 cCONS f4 cNIL f9 cCONS cFST csplit_normal_list f5 f8 f10 f11 f12 cNIL c==> c= cLAST f2 f3 c==> cSUBSET * part cset_of_list f2 * part cset_of_list f4 c==> c~ c= f2 cNIL c==> cone_step_list f5 f3 cf_list f5 ce_list f3 c==> ccontour_list f5 ccat f2 f6 c==> cIN f7 * part cset_of_list f6 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f5 cAPPEND creplace f8 cCONS f4 cNIL f9 cCONS cFST csplit_normal_list f5 f8 f10 f11 f12 cNIL
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM v) r1), ((MEM r1) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f11 f6 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f6 c/\ cMEM f1 f6 c/\ cMEM f4 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f4 cf_list f0 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c/\ c==> cfinal_list f0 f1 cflag_list f0 f6 c==> c~ cfinal_list f0 f1 c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f6 cMEM b1 cfinal_dart_list f0 f6 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f6 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))))))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM x) r), ((MEM r) N), ((MEM r1) N), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> c/\ c= cnext_el f1 f4 cf_list f0 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f6 cMEM b1 cfinal_dart_list f0 f6 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f6 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f4 f1 c==> cMEM f1 f6 c==> cMEM f11 f6 c==> cnormal_list f0 f6 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM v) ((final_dart_list L) N)), ((MEM x) r), ((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)), ((MEM r) N), ((MEM r1) N), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = ((f_list L) (e_list x))) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f0 f2 f3 f6 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cSND csplit_normal_list f0 f2 f7 f6 f5 f8 c==> c= cfind_face f0 f3 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f10 cfinal_dart_list f0 f1 c==> cMEM f3 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> cMEM f2 f1 c==> cMEM f11 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f1 f2 f3 c==> c/\ ccontour_list f0 f12 c/\ c~ c= f12 cNIL c/\ c= cHD f12 cf_list f0 ce_list f3 c/\ c= cLAST f12 f10 cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f6 f5 cNIL
+ |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))) N))
T c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cprev_el b1 f1 f3 c/\ c= cSND csplit_normal_list f0 b1 f4 f2 f3 f5 c/\ c= cfind_face f0 b2 f4 c/\ c= cnext_el f4 b2 f6 c~ cfinal_list f0 b1 cMEM f6 f5 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cprev_el b1 f1 f3 c/\ c= cSND csplit_normal_list f0 b1 f4 f2 f3 f5 c/\ c= cfind_face f0 b2 f4 c/\ c= cnext_el f4 b2 f6 c~ cfinal_list f0 b1 cMEM f6 f5 f7 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cprev_el b1 f1 f3 c/\ c= cSND csplit_normal_list f0 b1 f4 f2 f3 f5 c/\ c= cfind_face f0 b2 f4 c/\ c= cnext_el f4 b2 f6 c~ cfinal_list f0 b1 cMEM f6 f5 f7
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c/\ cfinal_list f0 f7 c==> c= cSND csplit_normal_list f0 f1 f8 f5 f3 f7 c==> cMEM f9 f6 c==> c= cfind_face f0 f4 f8 c==> cMEM f10 f7 c==> cMEM f11 f9 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cMEM f11 cfinal_dart_list f0 f6 c==> cMEM cf_list f0 ce_list f4 cfinal_dart_list f0 f6 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f4 c==> c= cLAST f12 f11 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f6 c==> c= cnext_el f8 f4 f13 c==> cMEM f13 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f7 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
+ ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) |- ((((loop_list L) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = ((((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) r2)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> cMEM f0 cntrans f1 f2 f3 f4 cNUMERAL cBIT1 c_0 c= c==> cloop_list f1 f0 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f3 cCONS f0 cNIL f2 cCONS cFST csplit_normal_list f1 f3 f7 f8 f9 cNIL c==> c==> cMEM f0 cntrans f1 f2 f3 f4 cNUMERAL cBIT1 c_0 cloop_list f1 f0 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f3 cCONS f0 cNIL f2 cCONS cFST csplit_normal_list f1 f3 f7 f8 f9 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r2), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 cf_list f0 ce_list f4 c==> c= cLAST f1 f5 c==> c= cnext_el f6 f4 f7 c==> c= cSND csplit_normal_list f0 f2 f6 f8 f9 f3 c==> c= cfind_face f0 f4 f6 c==> c= cfind_face f0 f8 f6 c==> c< cindexf f7 f8 f6 cindexf f7 f10 f6 c==> cMEM f11 f3 c==> cMEM f7 f3 c==> cMEM f4 f3 c==> cMEM f8 f6 c==> cMEM f10 f6 c==> cMEM f2 f12 c==> cMEM f3 cntrans f0 f12 f2 f4 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cfinal_dart_list f0 f12 c==> call / c~ c= b0 cNIL f0 c==> ccontour_list f0 f1 c==> cfinal_list f0 f3 c==> cmarked_list f0 f12 f2 f4 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f12 f2 f4 call * part cloop_list f0 cntrans f0 f12 f2 f4 cNUMERAL cBIT1 c_0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f3 cNIL f12 cCONS cFST csplit_normal_list f0 f2 f6 f8 f9 cNIL
+ |- (((!m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l)))) ==> ((\m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l)))) m)) = ((\m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l)))) m))
T c= c==> ! c= cHD cAPPEND f0 b0 cCOND c= f0 cNIL cHD b0 cHD f0 * / c= cHD cAPPEND f0 b0 cCOND c= f0 cNIL cHD b0 cHD f0 f1 * / c= cHD cAPPEND f0 b0 cCOND c= f0 cNIL cHD b0 cHD f0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1))))))), ((final_list L) r1), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c= cSND csplit_normal_list f0 f1 f9 f5 f3 f8 c/\ cMEM f7 f6 c/\ c= cfind_face f0 f4 f9 c/\ cMEM f10 f8 cMEM f11 f7 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
+ ((MEM r) N), ((final_list L) r2), ((\d. (x' = d)) d) |- (((\d. (x' = d)) d) /\ ((x' IN (set_of_list r2)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> cMEM f0 f1 c==> cfinal_list f2 f3 c==> * / c= f4 b0 f5 c/\ * / c= f4 b0 f5 c==> cIN f4 * part cset_of_list f3 cIN f4 * part cset_of_list cflatten cfilter * part cfinal_list f2 cAPPEND creplace f0 cCONS f3 cNIL f1 cCONS cFST csplit_normal_list f2 f0 f6 f7 f8 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r2), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 cf_list f0 ce_list f3 c==> c= cLAST f1 f4 c==> c= cnext_el f5 f3 f6 c==> c= cprev_el f2 f7 f8 c==> c= cl'y f0 f2 f3 f9 c==> c= cl'z f0 f10 f2 f3 f7 c==> c= cSND csplit_normal_list f0 f2 f5 f9 f8 f11 c==> c= cfind_face f0 f3 f5 c==> c= cfind_face f0 f9 f5 c==> c< cindexf f6 f9 f5 cindexf f6 f7 f5 c==> cMEM f12 f11 c==> cMEM f6 f11 c==> cMEM f3 f11 c==> cMEM f9 f5 c==> cMEM f7 f5 c==> cMEM f2 f10 c==> cMEM f11 cntrans f0 f10 f2 f3 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cfinal_dart_list f0 f10 c==> call / c~ c= b0 cNIL f0 c==> ccontour_list f0 f1 c==> cfinal_list f0 f11 c==> cmarked_list f0 f10 f2 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f10 f2 f3 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f10 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f11 cNIL f10 cCONS cFST csplit_normal_list f0 f2 f5 f9 f8 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (r' = NIL)), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD r') = u), ((HD s) = ((f_list L) (e_list x))), ((LAST r') = x), ((LAST s) = v), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list r') SUBSET (set_of_list r2)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) r'), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((?s1. (r' = s1)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ c= f2 cNIL c==> c~ cfinal_list f0 f3 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 f5 c==> c= cHD f2 cf_list f0 ce_list f6 c==> c= cLAST f1 f6 c==> c= cLAST f2 f7 c==> c= cnext_el f8 f6 f9 c==> c= cfind_face f0 f6 f8 c==> c= cfind_face f0 f10 f8 c==> c< cindexf f9 f10 f8 cindexf f9 f11 f8 c==> cMEM f9 f4 c==> cMEM f6 f4 c==> cMEM f10 f8 c==> cMEM f11 f8 c==> cMEM f3 f12 c==> cMEM f4 cntrans f0 f12 f3 f6 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list f4 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f12 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f4 c==> ccontour_list f0 f1 c==> ccontour_list f0 f2 c==> cfinal_list f0 f4 c==> cmarked_list f0 f12 f3 f6 c==> c? / c= f1 b0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f3 cCONS f4 cNIL f12 cCONS cFST csplit_normal_list f0 f3 f8 f10 f13 cNIL
+ |- (((!x. (!y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM x) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = x) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL))))))))))) ==> ((\x. (!y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM x) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = x) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL))))))))))) u)) = ((\x. (!y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM x) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = x) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL))))))))))) u))
T c= c==> ! ! ! c==> c/\ cuniq b2 c/\ cloop_list f0 b2 c/\ cMEM b0 b2 cMEM b1 b2 c? / c/\ ccontour_list f0 b3 c/\ c= cHD b3 b0 c/\ c= cLAST b3 b1 c/\ cSUBSET * part cset_of_list b3 * part cset_of_list b2 c~ c= b3 cNIL * / ! ! c==> c/\ cuniq b2 c/\ cloop_list f0 b2 c/\ cMEM b0 b2 cMEM b1 b2 c? / c/\ ccontour_list f0 b3 c/\ c= cHD b3 b0 c/\ c= cLAST b3 b1 c/\ cSUBSET * part cset_of_list b3 * part cset_of_list b2 c~ c= b3 cNIL f1 * / ! ! c==> c/\ cuniq b2 c/\ cloop_list f0 b2 c/\ cMEM b0 b2 cMEM b1 b2 c? / c/\ ccontour_list f0 b3 c/\ c= cHD b3 b0 c/\ c= cLAST b3 b1 c/\ cSUBSET * part cset_of_list b3 * part cset_of_list b2 c~ c= b3 cNIL f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> c= cSND csplit_normal_list f0 f1 f9 f5 f3 f8 c==> cMEM f7 f6 c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cMEM f11 cfinal_dart_list f0 f6 c==> cMEM cf_list f0 ce_list f4 cfinal_dart_list f0 f6 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f4 c==> c= cLAST f12 f11 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f6 c==> c= cnext_el f9 f4 f13 c==> cMEM f13 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2) |- (((contour_list L) s1) ==> (((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq f2 c==> cuniq clist_of_darts f0 c==> c= cnext_el f3 f4 f5 c==> c= cfind_face f0 f6 f3 c==> c< cindexf f5 f6 f3 cindexf f5 f7 f3 c==> cMEM f5 f2 c==> cMEM f4 f2 c==> cMEM f6 f3 c==> cMEM f7 f3 c==> cMEM f2 cntrans f0 f8 f1 f4 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f9 * part cset_of_list cfinal_dart_list f0 f8 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f2 c==> ccontour_list f0 f10 c==> c= cHD f10 f11 c==> c= cLAST f10 f4 c==> cSUBSET * part cset_of_list f10 * part cset_of_list f2 c==> c~ c= f10 cNIL c==> cone_step_list f0 f4 cf_list f0 ce_list f4 c==> ccontour_list f0 ccat f10 f9 c==> cIN f12 * part cset_of_list f9 cIN f12 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f2 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f3 f6 f13 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f))), ((MEM u) r2), ((MEM w) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 cf_list f0 ce_list f3 c==> c= cLAST f1 f4 c==> c= cnext_el f5 f3 f6 c==> c= cprev_el f2 f7 f8 c==> c= cl'y f0 f2 f3 f9 c==> c= cl'z f0 f10 f2 f3 f7 c==> c= cSND csplit_normal_list f0 f2 f5 f9 f8 f11 c==> c= cfind_face f0 f3 f5 c==> c/\ cMEM f7 f5 c< cindexf f6 f9 f5 cindexf f6 f7 f5 c==> cMEM f12 f11 c==> cMEM f6 f11 c==> cMEM f9 f5 c==> cMEM f7 f5 c==> cMEM f2 f10 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cfinal_dart_list f0 f10 c==> call / c~ c= b0 cNIL f0 c==> ccontour_list f0 f1 c==> cfinal_list f0 f11 c==> cmarked_list f0 f10 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f11 cNIL f10 cCONS cFST csplit_normal_list f0 f2 f5 f9 f8 cNIL
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM v) ((final_dart_list L) N)), ((MEM x) r), ((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)), ((MEM r) N), ((MEM r1) N), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x), ((\s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = ((f_list L) (e_list x))) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))) s) |- (((\s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = ((f_list L) (e_list x))) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))) s) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f0 f2 f3 f6 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cSND csplit_normal_list f0 f2 f7 f6 f5 f8 c==> c= cfind_face f0 f3 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f10 cfinal_dart_list f0 f1 c==> cMEM f3 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> cMEM f2 f1 c==> cMEM f11 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f1 f2 f3 c==> * / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 cf_list f0 ce_list f3 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f1 f12 c/\ * / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 cf_list f0 ce_list f3 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f1 f12 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f6 f5 cNIL
+ (~ ((final_list L) r)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM x) r2) ==> (((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq r2) ==> (((loop_list L) r2) ==> (((contour_list L) s1) ==> (((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f3 c==> call / c~ c= b0 cNIL f0 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f4 f5 c==> cMEM f6 f5 c==> c< cindexf f7 f4 f5 cindexf f7 f6 f5 c==> c= cfind_face f0 f4 f5 c==> cMEM f8 f9 c==> cMEM f9 cntrans f0 f3 f1 f8 cNUMERAL cBIT1 c_0 c==> cuniq f9 c==> cloop_list f0 f9 c==> ccontour_list f0 f10 c==> c= cHD f10 f11 c==> c= cLAST f10 f8 c==> cSUBSET * part cset_of_list f10 * part cset_of_list f9 c==> c~ c= f10 cNIL c==> cone_step_list f0 f8 cf_list f0 ce_list f8 c==> ccontour_list f0 ccat f10 f2 c==> cIN f12 * part cset_of_list f2 cIN f12 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f9 cNIL f3 cCONS cFST csplit_normal_list f0 f1 f5 f4 f13 cNIL
+ |- (((!r. (!s. (((~ (s = NIL)) /\ (~ (r = NIL))) ==> (((contour_list L) ((cat s) r)) = (((contour_list L) s) /\ (((contour_list L) r) /\ (((one_step_list L) (LAST s)) (HD r)))))))) ==> ((\r. (!s. (((~ (s = NIL)) /\ (~ (r = NIL))) ==> (((contour_list L) ((cat s) r)) = (((contour_list L) s) /\ (((contour_list L) r) /\ (((one_step_list L) (LAST s)) (HD r)))))))) s)) = ((\r. (!s. (((~ (s = NIL)) /\ (~ (r = NIL))) ==> (((contour_list L) ((cat s) r)) = (((contour_list L) s) /\ (((contour_list L) r) /\ (((one_step_list L) (LAST s)) (HD r)))))))) s))
T c= c==> ! ! c==> c/\ c~ c= b1 cNIL c~ c= b0 cNIL c= ccontour_list f0 ccat b1 b0 c/\ ccontour_list f0 b1 c/\ ccontour_list f0 b0 cone_step_list f0 cLAST b1 cHD b0 * / ! c==> c/\ c~ c= b1 cNIL c~ c= b0 cNIL c= ccontour_list f0 ccat b1 b0 c/\ ccontour_list f0 b1 c/\ ccontour_list f0 b0 cone_step_list f0 cLAST b1 cHD b0 f1 * / ! c==> c/\ c~ c= b1 cNIL c~ c= b0 cNIL c= ccontour_list f0 ccat b1 b0 c/\ ccontour_list f0 b1 c/\ ccontour_list f0 b0 cone_step_list f0 cLAST b1 cHD b0 f1
- |- ((!d. t) = t)
T c= ! f0 f0
+ ((MEM (e_list x)) (flatten N)) |- ((((MEM (e_list x)) ((find_list N) (e_list x))) ==> (((MEM ((find_list N) (e_list x))) N) /\ ((MEM ((f_list L) (e_list x))) ((find_list N) (e_list x))))) = ((((MEM (e_list x)) (flatten N)) ==> ((MEM (e_list x)) ((find_list N) (e_list x)))) ==> (((MEM ((find_list N) (e_list x))) N) /\ ((MEM ((f_list L) (e_list x))) ((find_list N) (e_list x))))))
T c==> cMEM ce_list f0 cflatten f1 c= c==> cMEM ce_list f0 cfind_list f1 ce_list f0 c/\ cMEM cfind_list f1 ce_list f0 f1 cMEM cf_list f2 ce_list f0 cfind_list f1 ce_list f0 c==> c==> cMEM ce_list f0 cflatten f1 cMEM ce_list f0 cfind_list f1 ce_list f0 c/\ cMEM cfind_list f1 ce_list f0 f1 cMEM cf_list f2 ce_list f0 cfind_list f1 ce_list f0
- |- ((!A. (A ==> (A \/ F))) = ((T ==> (T \/ F)) /\ (F ==> (F \/ F))))
T c= ! c==> b0 c\/ b0 cF c/\ c==> cT c\/ cT cF c==> cF c\/ cF cF
+ (~ (s = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((MEM u) r2), ((MEM w) r2), ((MEM r) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ c= f0 cNIL c==> c~ cfinal_list f1 f2 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cHD f0 cf_list f1 ce_list f3 c==> c= cLAST f0 f4 c==> c= cnext_el f5 f3 f6 c==> c= cprev_el f2 f7 f8 c==> c= cl'y f1 f2 f3 f9 c==> c= cl'z f1 f10 f2 f3 f7 c==> c= cSND csplit_normal_list f1 f2 f5 f9 f8 f11 c==> c= cfind_face f1 f3 f5 c==> c/\ cuniq clist_of_darts f1 c/\ call / c~ c= b0 cNIL f1 ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cMEM f12 f11 c==> cMEM f6 f11 c==> cMEM f2 f10 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cfinal_dart_list f1 f10 c==> ccontour_list f1 f0 c==> cfinal_list f1 f11 c==> cmarked_list f1 f10 f2 f3 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS f11 cNIL f10 cCONS cFST csplit_normal_list f1 f2 f5 f9 f8 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L) |- ((uniq r2) ==> (((loop_list L) r2) ==> (((contour_list L) s1) ==> (((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f5 f2 c==> c< cindexf f4 f5 f2 cindexf f4 f6 f2 c==> cMEM f4 f7 c==> cMEM f3 f7 c==> cMEM f5 f2 c==> cMEM f6 f2 c==> cMEM f7 cntrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f9 * part cset_of_list cfinal_dart_list f0 f8 c==> call / c~ c= b0 cNIL f0 c==> cuniq f7 c==> cloop_list f0 f7 c==> ccontour_list f0 f10 c==> c= cHD f10 f11 c==> c= cLAST f10 f3 c==> cSUBSET * part cset_of_list f10 * part cset_of_list f7 c==> c~ c= f10 cNIL c==> cone_step_list f0 f3 cf_list f0 ce_list f3 c==> ccontour_list f0 ccat f10 f9 c==> cIN f12 * part cset_of_list f9 cIN f12 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f7 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f5 f13 cNIL
+ |- ((\x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))) x)
T * / ! c= crtrans f0 f1 f2 b0 b1 cSND cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cSND csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 cntrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 f0
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f5 f6 f8 c==> cMEM f7 f2 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f2 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f3 cMEM ce_list b2 ccat cs_list f0 f1 f3 cfinal_dart_list f0 f2 c==> cMEM f11 cfinal_dart_list f0 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f2 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f3 c==> c= cLAST f12 f11 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f2 c==> c= cnext_el f9 f3 f13 c==> cMEM f13 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
+ |- (((uniq (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ (((loop_list L) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ (((MEM u) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ ((MEM x) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) ==> (?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = x) /\ (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) /\ (~ (r' = NIL))))))))
T c==> c/\ cuniq cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 c/\ cloop_list f0 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 c/\ cMEM f4 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cMEM f5 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f4 c/\ c= cLAST b0 f5 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 c~ c= b0 cNIL
+ |- (((!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) ==> ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L)) = ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0 * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0
+ (~ (s1 = NIL)), (r' = s1), ((MEM r) N), ((set_of_list r') SUBSET (set_of_list r2)), ((final_list L) r2) |- ((~ (s1 = NIL)) /\ ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s1)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))
T c==> c~ c= f0 cNIL c==> c= f1 f0 c==> cMEM f2 f3 c==> cSUBSET * part cset_of_list f1 * part cset_of_list f4 c==> cfinal_list f5 f4 c/\ c~ c= f0 cNIL c==> cone_step_list f5 f6 cf_list f5 ce_list f6 c==> ccontour_list f5 ccat f0 f7 c==> cIN f8 * part cset_of_list f0 cIN f8 * part cset_of_list cflatten cfilter * part cfinal_list f5 cAPPEND creplace f2 cCONS f4 cNIL f3 cCONS cFST csplit_normal_list f5 f2 f9 f10 f11 cNIL
+ (~ (s = NIL)), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((MEM u) r2), ((MEM w) r2), ((MEM r) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ c= f0 cNIL c==> c~ cfinal_list f1 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cHD f0 cf_list f1 ce_list f3 c==> c= cLAST f0 f4 c==> c= cnext_el f5 f3 f6 c==> c= cprev_el f2 f7 f8 c==> c= cl'y f1 f2 f3 f9 c==> c= cl'z f1 f10 f2 f3 f7 c==> c= cSND csplit_normal_list f1 f2 f5 f9 f8 f11 c==> c= cfind_face f1 f3 f5 c==> c/\ cuniq clist_of_darts f1 c/\ call / c~ c= b0 cNIL f1 ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cMEM f12 f11 c==> cMEM f6 f11 c==> cMEM f2 f10 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cfinal_dart_list f1 f10 c==> ccontour_list f1 f0 c==> cfinal_list f1 f11 c==> cmarked_list f1 f10 f2 f3 c/\ c/\ cuniq clist_of_darts f1 c/\ call / c~ c= b0 cNIL f1 ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS f11 cNIL f10 cCONS cFST csplit_normal_list f1 f2 f5 f9 f8 cNIL
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM x) r), ((MEM r) N), ((MEM r1) N), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f0 f2 f3 f6 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cSND csplit_normal_list f0 f2 f7 f6 f5 f8 c==> c= cfind_face f0 f3 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f3 f2 c==> cMEM f2 f1 c==> cMEM f11 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f1 f2 f3 c==> cMEM f10 cfinal_dart_list f0 f1 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f6 f5 cNIL
+ |- (((!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) ==> ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N)) = ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N))
T c= c==> ! ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ |- ((\L. (!N. (((final_dart_list L) N) = (flatten ((filter (final_list L)) N))))) L)
T * / ! c= cfinal_dart_list b0 b1 cflatten cfilter * part cfinal_list b0 b1 f0
+ ((MEM ((find_list N) (e_list x))) N) |- (((MEM ((find_list N) (e_list x))) N) = T)
T c==> cMEM cfind_list f0 ce_list f1 f0 c= cMEM cfind_list f0 ce_list f1 f0 cT
- |- (!d. (((\d. (x' = d)) d) ==> (?d. (x' = d))))
T c==> * / c= f0 b0 f1 c? / c= f0 b0
+ |- (((!l1. (!l2. ((set_of_list ((APPEND l1) l2)) = ((set_of_list l1) UNION (set_of_list l2))))) ==> ((\l1. (!l2. ((set_of_list ((APPEND l1) l2)) = ((set_of_list l1) UNION (set_of_list l2))))) l1)) = ((\l1. (!l2. ((set_of_list ((APPEND l1) l2)) = ((set_of_list l1) UNION (set_of_list l2))))) l1))
T c= c==> ! ! c= * part cset_of_list cAPPEND b0 b1 * * part cUNION * part cset_of_list b0 * part cset_of_list b1 * / ! c= * part cset_of_list cAPPEND b0 b1 * * part cUNION * part cset_of_list b0 * part cset_of_list b1 f0 * / ! c= * part cset_of_list cAPPEND b0 b1 * * part cUNION * part cset_of_list b0 * part cset_of_list b1 f0
- |- ((((\w. (((next_el f) x) = w)) w) ==> (?w. (((next_el f) x) = w))) = T)
T c= c==> * / c= cnext_el f0 f1 b0 f2 c? / c= cnext_el f0 f1 b0 cT
- |- ((!z1. (!f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)))))))))) = T)
T c= ! ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 f1 c/\ c= cprev_el b6 f0 b0 c/\ c= cSND csplit_normal_list b4 b6 b1 f1 b0 b3 c/\ c= cfind_face b4 b7 b1 c/\ c= cnext_el b1 b7 b2 c~ cfinal_list b4 b6 cMEM b2 b3 cT
- (x' = d), (x' IN (set_of_list s)) |- (d IN (set_of_list s))
T c==> c= f0 f1 c==> cIN f0 * part cset_of_list f2 cIN f1 * part cset_of_list f2
+ (r' = s1), ((MEM r) N), ((set_of_list r') SUBSET (set_of_list r2)), ((final_list L) r2) |- ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s1)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))
T c==> c= f0 f1 c==> cMEM f2 f3 c==> cSUBSET * part cset_of_list f0 * part cset_of_list f4 c==> cfinal_list f5 f4 c==> cone_step_list f5 f6 cf_list f5 ce_list f6 c==> ccontour_list f5 ccat f1 f7 c==> cIN f8 * part cset_of_list f1 cIN f8 * part cset_of_list cflatten cfilter * part cfinal_list f5 cAPPEND creplace f2 cCONS f4 cNIL f3 cCONS cFST csplit_normal_list f5 f2 f9 f10 f11 cNIL
+ |- ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x)
T * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> cfinal_list f0 f9 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c/\ c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> cMEM f9 f6 c==> c= cfind_face f0 f4 f7 c==> cMEM f10 f8 c==> cMEM f11 f9 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- |- ((!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))) ==> (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))))
T c==> ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1 ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f8 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cMEM f10 cfinal_dart_list f0 f6 c==> cMEM cf_list f0 ce_list f4 cfinal_dart_list f0 f6 c==> ccontour_list f0 f11 c==> c~ c= f11 cNIL c==> c= cHD f11 cf_list f0 ce_list f4 c==> c= cLAST f11 f10 c==> cSUBSET * part cset_of_list f11 * part cset_of_list cfinal_dart_list f0 f6 c==> c= cnext_el f7 f4 f12 c==> cMEM f12 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) |- (((!v. ((((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = ((f_list L) (e_list x))) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))))) ==> ((\v. ((((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = ((f_list L) (e_list x))) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))))) v)) = ((\v. ((((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = ((f_list L) (e_list x))) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))))) v))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c= c==> ! c==> c/\ cMEM cf_list f0 ce_list f2 cfinal_dart_list f0 f1 cMEM b0 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 cf_list f0 ce_list f2 c/\ c= cLAST b1 b0 cSUBSET * part cset_of_list b1 * part cset_of_list cfinal_dart_list f0 f1 * / c==> c/\ cMEM cf_list f0 ce_list f2 cfinal_dart_list f0 f1 cMEM b0 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 cf_list f0 ce_list f2 c/\ c= cLAST b1 b0 cSUBSET * part cset_of_list b1 * part cset_of_list cfinal_dart_list f0 f1 f3 * / c==> c/\ cMEM cf_list f0 ce_list f2 cfinal_dart_list f0 f1 cMEM b0 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 cf_list f0 ce_list f2 c/\ c= cLAST b1 b0 cSUBSET * part cset_of_list b1 * part cset_of_list cfinal_dart_list f0 f1 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (((next_el f) x) = w), ((MEM w) r2), ((MEM y) f), ((MEM z) f), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L) |- (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> (((MEM x) r2) ==> (((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq r2) ==> (((loop_list L) r2) ==> (((contour_list L) s1) ==> (((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f3 f4 c==> cMEM f4 f5 c==> cMEM f6 f2 c==> cMEM f7 f2 c==> cSUBSET * part cset_of_list f8 * part cset_of_list cfinal_dart_list f0 f9 c==> call / c~ c= b0 cNIL f0 c==> c< cindexf f4 f6 f2 cindexf f4 f7 f2 c==> c= cfind_face f0 f6 f2 c==> cMEM f3 f5 c==> cMEM f5 cntrans f0 f9 f1 f3 cNUMERAL cBIT1 c_0 c==> cuniq f5 c==> cloop_list f0 f5 c==> ccontour_list f0 f10 c==> c= cHD f10 f11 c==> c= cLAST f10 f3 c==> cSUBSET * part cset_of_list f10 * part cset_of_list f5 c==> c~ c= f10 cNIL c==> cone_step_list f0 f3 cf_list f0 ce_list f3 c==> ccontour_list f0 ccat f10 f8 c==> cIN f12 * part cset_of_list f8 cIN f12 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f5 cNIL f9 cCONS cFST csplit_normal_list f0 f1 f2 f6 f13 cNIL
+ |- ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)
T * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ (~ (s = NIL)), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM w) r2), ((MEM r) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ c= f0 cNIL c==> c~ cfinal_list f1 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cHD f0 cf_list f1 ce_list f3 c==> c= cLAST f0 f4 c==> c= cnext_el f5 f3 f6 c==> c= cprev_el f2 f7 f8 c==> c= cl'y f1 f2 f3 f9 c==> c= cl'z f1 f10 f2 f3 f7 c==> c= cSND csplit_normal_list f1 f2 f5 f9 f8 f11 c==> c= cfind_face f1 f3 f5 c==> cMEM f12 f11 c==> cMEM f6 f11 c==> cMEM f2 f10 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cfinal_dart_list f1 f10 c==> ccontour_list f1 f0 c==> cfinal_list f1 f11 c==> cmarked_list f1 f10 f2 f3 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS f11 cNIL f10 cCONS cFST csplit_normal_list f1 f2 f5 f9 f8 cNIL
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((((marked_list L) N) r) x) |- ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM ((f_list L) (e_list x))) l)))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cmarked_list f0 f1 f2 f3 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> cMEM f4 cfinal_dart_list f0 f1 c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM cf_list f0 ce_list f3 b0
+ |- ((\d. (x' = d)) x')
T * / c= f0 b0 f0
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM v) ((final_dart_list L) N)), ((MEM x) r), ((MEM r) N), ((MEM r1) N), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM v) ((final_dart_list L) N)) /\ (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f0 f2 f3 f6 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cSND csplit_normal_list f0 f2 f7 f6 f5 f8 c==> c= cfind_face f0 f3 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f10 cfinal_dart_list f0 f1 c==> cMEM f3 f2 c==> cMEM f2 f1 c==> cMEM f11 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f1 f2 f3 c/\ cMEM f10 cfinal_dart_list f0 f1 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f6 f5 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((final_list L) ((find_list N) (e_list x))), ((((marked_list L) N) r) x) |- (?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM ((f_list L) (e_list x))) l)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cfinal_list f0 cfind_list f2 ce_list f3 c==> cmarked_list f0 f2 f1 f3 c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f2 cMEM cf_list f0 ce_list f3 b0
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM r) N), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f8 c==> cMEM f1 f6 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cMEM f10 cfinal_dart_list f0 f6 c==> cMEM cf_list f0 ce_list f4 cfinal_dart_list f0 f6 c==> ccontour_list f0 f11 c==> c~ c= f11 cNIL c==> c= cHD f11 cf_list f0 ce_list f4 c==> c= cLAST f11 f10 c==> cSUBSET * part cset_of_list f11 * part cset_of_list cfinal_dart_list f0 f6 c==> c= cnext_el f7 f4 f12 c==> cMEM f12 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ ((MEM r) N), ((final_list L) r2) |- (((\d. (x' = d)) d) ==> ((x' IN (set_of_list r2)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> cMEM f0 f1 c==> cfinal_list f2 f3 c==> * / c= f4 b0 f5 c==> cIN f4 * part cset_of_list f3 cIN f4 * part cset_of_list cflatten cfilter * part cfinal_list f2 cAPPEND creplace f0 cCONS f3 cNIL f1 cCONS cFST csplit_normal_list f2 f0 f6 f7 f8 cNIL
+ |- (((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((MEM x) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))) ==> ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((MEM x) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))) r)) = ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((MEM x) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))) r))
T c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 b0 b1 cMEM b1 crtrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 b0 b1 cMEM b1 crtrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 f2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 b0 b1 cMEM b1 crtrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 f2
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) N))
T c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 call * part cloop_list f0 cntrans f0 b0 b1 b2 cNUMERAL cBIT1 c_0 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 call * part cloop_list f0 cntrans f0 b0 b1 b2 cNUMERAL cBIT1 c_0 f1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 b0 b1 b2 call * part cloop_list f0 cntrans f0 b0 b1 b2 cNUMERAL cBIT1 c_0 f1
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM v) ((final_dart_list L) N)), ((MEM x) r), ((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)), ((MEM r) N), ((MEM r1) N), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f0 f2 f3 f6 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cSND csplit_normal_list f0 f2 f7 f6 f5 f8 c==> c= cfind_face f0 f3 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f10 cfinal_dart_list f0 f1 c==> cMEM f3 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> cMEM f2 f1 c==> cMEM f11 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f1 f2 f3 c/\ cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f6 f5 cNIL
+ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM v) ((final_dart_list L) N)), ((MEM x) r), ((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)), ((MEM r) N), ((MEM r1) N), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((!x. (((\s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = ((f_list L) (e_list x))) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))) x) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))) ==> ((?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = ((f_list L) (e_list x))) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))) = ((?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = ((f_list L) (e_list x))) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f0 f2 f3 f6 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cSND csplit_normal_list f0 f2 f7 f6 f5 f8 c==> c= cfind_face f0 f3 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f10 cfinal_dart_list f0 f1 c==> cMEM f3 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> cMEM f2 f1 c==> cMEM f11 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f1 f2 f3 c= c==> ! c==> * / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 cf_list f0 ce_list f3 c/\ c= cLAST b1 f10 cSUBSET * part cset_of_list b1 * part cset_of_list cfinal_dart_list f0 f1 b0 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f9 c/\ c= cLAST b1 f10 cSUBSET * part cset_of_list b1 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f6 f5 cNIL c==> c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 cf_list f0 ce_list f3 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f6 f5 cNIL c==> c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 cf_list f0 ce_list f3 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f6 f5 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1))))), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c/\ c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c/\ cMEM f9 f6 c/\ c= cfind_face f0 f4 f7 c/\ cMEM f10 f8 cMEM f11 f9 c==> cfinal_list f0 f9 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f7 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- (((!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
- ((\w. (((next_el f) x) = w)) w) |- (((((next_el f) x) = w) ==> (?w. (((next_el f) x) = w))) = (?w. (((next_el f) x) = w)))
T c==> * / c= cnext_el f0 f1 b0 f2 c= c==> c= cnext_el f0 f1 f2 c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0
- (good_list L), (good_list_nodes L) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cl'y f0 f2 f3 f5 c==> c= cprev_el f2 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f2 f9 f5 f6 f8 c==> cMEM f7 f1 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> cMEM f11 cfinal_dart_list f0 f1 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f3 c==> c= cLAST f12 f11 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f1 c==> c= cnext_el f9 f3 f13 c==> cMEM f13 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
+ (~ (s = NIL)), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM r) N), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((HD s) = ((f_list L) (e_list x))) /\ (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c~ c= f0 cNIL c==> c~ cfinal_list f1 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cHD f0 cf_list f1 ce_list f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f7 f2 f3 f4 c==> c= cSND csplit_normal_list f1 f2 f8 f6 f5 f9 c==> c= cfind_face f1 f3 f8 c==> cMEM f10 f9 c==> cMEM f2 f7 c==> ccontour_list f1 f0 c==> cfinal_list f1 f9 c==> cmarked_list f1 f7 f2 f3 c/\ c= cHD f0 cf_list f1 ce_list f3 c==> c= cLAST f0 f11 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cfinal_dart_list f1 f7 c==> c= cnext_el f8 f3 f12 c==> cMEM f12 f9 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS f9 cNIL f7 cCONS cFST csplit_normal_list f1 f2 f8 f6 f5 cNIL
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((all (loop_list L)) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0))))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 call * part cloop_list b0 cntrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 f0
+ |- (((!x. ((x IN (set_of_list s1)) ==> (x IN (set_of_list r2)))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))) = (((set_of_list s1) SUBSET (set_of_list r2)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c= c==> ! c==> cIN b0 * part cset_of_list f0 cIN b0 * part cset_of_list f1 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS f1 cNIL f5 cCONS cFST csplit_normal_list f3 f4 f6 f7 f8 cNIL c==> cSUBSET * part cset_of_list f0 * part cset_of_list f1 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f3 cAPPEND creplace f4 cCONS f1 cNIL f5 cCONS cFST csplit_normal_list f3 f4 f6 f7 f8 cNIL
+ (good_list L), (good_list_nodes L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1))))))))))))) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c= cSND csplit_normal_list f0 f2 f9 f5 f6 f8 c/\ cMEM f7 f1 c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
- ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) |- (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) = T)
T c==> cSUBSET * part cset_of_list f0 * part cset_of_list cfinal_dart_list f1 f2 c= cSUBSET * part cset_of_list f0 * part cset_of_list cfinal_dart_list f1 f2 cT
- |- ((\r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))))) r2)
T * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 f2 c/\ c= cSND csplit_normal_list b1 b3 f3 f1 f2 b0 c/\ c= cfind_face b1 b4 f3 c/\ c= cnext_el f3 b4 f4 c~ cfinal_list b1 b3 cMEM f4 b0 f5
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM r1) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c/\ c= cfind_face f0 f4 f7 c==> cMEM f10 f8 c==> cMEM f11 f9 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (e_list x)) (flatten N))))))) ==> ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (e_list x)) (flatten N))))))) L)) = ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (e_list x)) (flatten N))))))) L))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM ce_list b3 cflatten b1 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM ce_list b3 cflatten b1 f0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM ce_list b3 cflatten b1 f0
- A |- ((A ==> (A \/ B)) ==> (A \/ B))
T c==> f0 c==> c==> f0 c\/ f0 f1 c\/ f0 f1
+ ((MEM r) N) |- ((MEM r2) (((replace r) ((CONS r2) NIL)) N))
T c==> cMEM f0 f1 cMEM f2 creplace f0 cCONS f2 cNIL f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((((marked_list L) N) r) x) |- ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM ((f_list L) (e_list x))) l)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cmarked_list f0 f2 f1 f3 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f2 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f3 cMEM ce_list b2 ccat cs_list f0 f1 f3 cfinal_dart_list f0 f2 c==> cMEM f4 cfinal_dart_list f0 f2 c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f2 cMEM cf_list f0 ce_list f3 b0
+ ((\l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))) l) |- ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))
T c==> * / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM f2 b0 f3 c/\ c/\ cfinal_list f0 f3 cMEM f3 f1 cMEM f2 f3
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 ! c==> c/\ c= b0 cLAST f4 c/\ cMEM f4 cparts f0 f5 c/\ cMEM f5 f1 c/\ c~ cfinal_list f0 f5 c~ cMEM b0 cs_list f0 f2 f3 cMEM ce_list b0 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) x)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 f0
+ |- ((\r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cytrans f0 f1 b0 b1 b2 cl'y f0 crtrans f0 f1 b0 b1 b2 b1 f2
- |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?x. t) = t)
T c= c? / f0 f0
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> (((one_step_list L) x) ((f_list L) (e_list x)))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cfind_face b0 b3 f0 c= cnext_el f0 b3 f1 cone_step_list b0 b3 cf_list b0 ce_list b3 f2
+ ((HD r') = u), (r' = s1) |- ((HD s1) = u)
T c==> c= cHD f0 f1 c==> c= f0 f2 c= cHD f2 f1
+ (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((((marked_list L) N) r) x) |- ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM ((f_list L) (e_list x))) l))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cmarked_list f0 f1 f2 f3 c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> cMEM f4 cfinal_dart_list f0 f1 c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM cf_list f0 ce_list f3 b0
+ (~ ((final_list L) r)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((set_of_list s1) SUBSET (set_of_list r2)) |- (((set_of_list s1) SUBSET (set_of_list r2)) /\ ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f3 c==> cSUBSET * part cset_of_list f4 * part cset_of_list f5 c/\ cSUBSET * part cset_of_list f4 * part cset_of_list f5 c==> c~ c= f4 cNIL c==> cone_step_list f0 f6 cf_list f0 ce_list f6 c==> ccontour_list f0 ccat f4 f2 c==> cIN f7 * part cset_of_list f2 cIN f7 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f5 cNIL f3 cCONS cFST csplit_normal_list f0 f1 f8 f9 f10 cNIL
+ |- ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)
T * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), (((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))), ((MEM u) r2), ((MEM w) r2), ((MEM y) f), ((MEM r) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 cf_list f0 ce_list f3 c==> c= cLAST f1 f4 c==> c= cnext_el f5 f3 f6 c==> c= cprev_el f2 f7 f8 c==> c= cl'y f0 f2 f3 f9 c==> c= cl'z f0 f10 f2 f3 f7 c==> c= cSND csplit_normal_list f0 f2 f5 f9 f8 f11 c==> c= cfind_face f0 f3 f5 c==> c/\ cMEM f9 f5 c/\ cMEM f7 f5 c< cindexf f6 f9 f5 cindexf f6 f7 f5 c==> cMEM f12 f11 c==> cMEM f6 f11 c==> cMEM f9 f5 c==> cMEM f2 f10 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cfinal_dart_list f0 f10 c==> call / c~ c= b0 cNIL f0 c==> ccontour_list f0 f1 c==> cfinal_list f0 f11 c==> cmarked_list f0 f10 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f11 cNIL f10 cCONS cFST csplit_normal_list f0 f2 f5 f9 f8 cNIL
+ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ (s = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM v) ((final_dart_list L) N)), ((MEM x) r), ((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)), ((MEM r) N), ((MEM r1) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((contour_list L) s), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((?w. (((next_el f) x) = w)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ c= f4 cNIL c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f4 cf_list f0 ce_list f3 c==> c= cLAST f4 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cSND csplit_normal_list f0 f2 f9 f8 f7 f10 c==> c= cfind_face f0 f3 f9 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f11 f10 c==> cMEM f5 f12 c==> cMEM f5 cfinal_dart_list f0 f1 c==> cMEM f3 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> cMEM f2 f1 c==> cMEM f12 f1 c==> cSUBSET * part cset_of_list f4 * part cset_of_list cfinal_dart_list f0 f1 c==> ccontour_list f0 f4 c==> cnormal_list f0 f1 c==> cfinal_list f0 f12 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c==> c? / c= cnext_el f9 f3 b0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f10 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f8 f7 cNIL
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- (((!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))) ==> ((\y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))) y)) = ((\y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))) y))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c= c==> ! c==> c/\ c= b0 cLAST f4 c/\ cMEM f4 cparts f0 f5 c/\ cMEM f5 f1 c/\ c~ cfinal_list f0 f5 c~ cMEM b0 cs_list f0 f2 f3 cMEM ce_list b0 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 * / c==> c/\ c= b0 cLAST f4 c/\ cMEM f4 cparts f0 f5 c/\ cMEM f5 f1 c/\ c~ cfinal_list f0 f5 c~ cMEM b0 cs_list f0 f2 f3 cMEM ce_list b0 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f6 * / c==> c/\ c= b0 cLAST f4 c/\ cMEM f4 cparts f0 f5 c/\ cMEM f5 f1 c/\ c~ cfinal_list f0 f5 c~ cMEM b0 cs_list f0 f2 f3 cMEM ce_list b0 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f6
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f8 f9 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f8 f9 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((final_list L) ((find_list N) (e_list x))), ((((marked_list L) N) r) x) |- ((((final_list L) ((find_list N) (e_list x))) /\ ((MEM ((find_list N) (e_list x))) N)) /\ ((MEM ((f_list L) (e_list x))) ((find_list N) (e_list x))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cfinal_list f0 cfind_list f2 ce_list f3 c==> cmarked_list f0 f2 f1 f3 c/\ c/\ cfinal_list f0 cfind_list f2 ce_list f3 cMEM cfind_list f2 ce_list f3 f2 cMEM cf_list f0 ce_list f3 cfind_list f2 ce_list f3
+ |- ((\r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))) r)
T * / ! c= ctransform_list f0 b1 c, f1 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b0 c, f1 b0 c, b7 cSND b6 cAPPEND creplace b0 cCONS cSND b6 cNIL f1 cCONS cFST b6 cNIL csplit_normal_list f0 b0 b5 b2 b4 cfind_face f0 b2 cprev_el b0 b3 cl'z f0 f1 b0 b1 cl'y f0 b0 b1 f2
+ |- ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x)
T * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM u) r2), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((loop_list L) r2) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 cf_list f0 ce_list f4 c==> c= cLAST f1 f5 c==> c= cnext_el f6 f4 f7 c==> c= cSND csplit_normal_list f0 f2 f6 f8 f9 f3 c==> c= cfind_face f0 f4 f6 c==> c= cfind_face f0 f8 f6 c==> c< cindexf f7 f8 f6 cindexf f7 f10 f6 c==> cMEM f11 f3 c==> cMEM f7 f3 c==> cMEM f4 f3 c==> cMEM f8 f6 c==> cMEM f10 f6 c==> cMEM f2 f12 c==> cMEM f3 cntrans f0 f12 f2 f4 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cfinal_dart_list f0 f12 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f3 c==> ccontour_list f0 f1 c==> cfinal_list f0 f3 c==> cmarked_list f0 f12 f2 f4 c/\ cloop_list f0 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f3 cNIL f12 cCONS cFST csplit_normal_list f0 f2 f6 f8 f9 cNIL
+ |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))) x))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 f3
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) ==> ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cl'y f0 f2 f3 f5 c==> c= cprev_el f2 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f2 f9 f5 f6 f8 c==> cMEM f7 f1 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> cMEM f11 cfinal_dart_list f0 f1 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f3 c==> c= cLAST f12 f11 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f1 c==> c= cnext_el f9 f3 f13 c==> cMEM f13 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
+ |- (((!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) ==> ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x)) = ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x))
T c= c==> ! ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ (~ ((final_list L) r)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) |- (((MEM x) r2) ==> (((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq r2) ==> (((loop_list L) r2) ==> (((contour_list L) s1) ==> (((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f3 c==> cMEM f4 f5 c==> cMEM f5 cntrans f0 f3 f1 f4 cNUMERAL cBIT1 c_0 c==> cuniq f5 c==> cloop_list f0 f5 c==> ccontour_list f0 f6 c==> c= cHD f6 f7 c==> c= cLAST f6 f4 c==> cSUBSET * part cset_of_list f6 * part cset_of_list f5 c==> c~ c= f6 cNIL c==> cone_step_list f0 f4 cf_list f0 ce_list f4 c==> ccontour_list f0 ccat f6 f2 c==> cIN f8 * part cset_of_list f2 cIN f8 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f5 cNIL f3 cCONS cFST csplit_normal_list f0 f1 f9 f10 f11 cNIL
+ |- ((\x. (!y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM x) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = x) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL))))))))))) u)
T * / ! ! c==> c/\ cuniq b2 c/\ cloop_list f0 b2 c/\ cMEM b0 b2 cMEM b1 b2 c? / c/\ ccontour_list f0 b3 c/\ c= cHD b3 b0 c/\ c= cLAST b3 b1 c/\ cSUBSET * part cset_of_list b3 * part cset_of_list b2 c~ c= b3 cNIL f1
- |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) ==> (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3
- ((all (\l. (~ (l = NIL)))) L) |- (((all (\l. (~ (l = NIL)))) L) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM v) ((final_dart_list L) N)), ((MEM r) N), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM v) ((final_dart_list L) N)) /\ (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f8 c==> cMEM f10 cfinal_dart_list f0 f6 c==> cMEM f1 f6 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f10 cfinal_dart_list f0 f6 c==> cMEM cf_list f0 ce_list f4 cfinal_dart_list f0 f6 c==> ccontour_list f0 f11 c==> c~ c= f11 cNIL c==> c= cHD f11 cf_list f0 ce_list f4 c==> c= cLAST f11 f10 c==> cSUBSET * part cset_of_list f11 * part cset_of_list cfinal_dart_list f0 f6 c==> c= cnext_el f7 f4 f12 c==> cMEM f12 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (((find_face L) y) = f), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) |- ((((find_face L) y) = f) /\ (((MEM x) r2) ==> (((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq r2) ==> (((loop_list L) r2) ==> (((contour_list L) s1) ==> (((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c= cfind_face f0 f2 f3 c==> cSUBSET * part cset_of_list f4 * part cset_of_list cfinal_dart_list f0 f5 c/\ c= cfind_face f0 f2 f3 c==> cMEM f6 f7 c==> cMEM f7 cntrans f0 f5 f1 f6 cNUMERAL cBIT1 c_0 c==> cuniq f7 c==> cloop_list f0 f7 c==> ccontour_list f0 f8 c==> c= cHD f8 f9 c==> c= cLAST f8 f6 c==> cSUBSET * part cset_of_list f8 * part cset_of_list f7 c==> c~ c= f8 cNIL c==> cone_step_list f0 f6 cf_list f0 ce_list f6 c==> ccontour_list f0 ccat f8 f4 c==> cIN f10 * part cset_of_list f4 cIN f10 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f7 cNIL f5 cCONS cFST csplit_normal_list f0 f1 f3 f2 f11 cNIL
+ (~ ((final_list L) r)), ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l)), (((final_list L) l) /\ ((MEM l) N)) |- (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS r2) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l)))
T c==> c~ cfinal_list f0 f1 c==> c/\ c/\ cfinal_list f0 f2 cMEM f2 f3 cMEM f4 f2 c==> c/\ cfinal_list f0 f2 cMEM f2 f3 c? / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f1 cCONS f5 cNIL f3 cMEM b0 cCONS cFST csplit_normal_list f0 f1 f6 f7 f8 cNIL cMEM f4 b0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))), (((MEM f) g) /\ ((MEM x) xs)) |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) /\ ((MEM x) (((replace f) xs) g)))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c==> c/\ cMEM f0 f1 cMEM f2 f3 c/\ ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 cMEM f2 creplace f0 f3 f1
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ |- (((!x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) ==> ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x)) = ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x))
T c= c==> ! ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0 * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> c= cSND csplit_normal_list f0 f1 f9 f5 f3 f8 c==> cMEM f7 f6 c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = x) /\ (((set_of_list r') SUBSET (set_of_list r2)) /\ (~ (r' = NIL))))))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c? / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list f3 c~ c= b0 cNIL c==> c~ c= f4 cNIL c==> c~ cfinal_list f0 f5 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f4 cf_list f0 ce_list f2 c==> c= cLAST f4 f6 c==> c= cnext_el f7 f2 f8 c==> c= cfind_face f0 f2 f7 c==> c= cfind_face f0 f9 f7 c==> c< cindexf f8 f9 f7 cindexf f8 f10 f7 c==> cMEM f8 f3 c==> cMEM f2 f3 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> cMEM f5 f11 c==> cMEM f3 cntrans f0 f11 f5 f2 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f4 * part cset_of_list cfinal_dart_list f0 f11 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f3 c==> ccontour_list f0 f4 c==> cfinal_list f0 f3 c==> cmarked_list f0 f11 f5 f2 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS f3 cNIL f11 cCONS cFST csplit_normal_list f0 f5 f7 f9 f12 cNIL
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))) ==> ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))) L)) = ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))) L))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cuniq cSND csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cuniq cSND csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 f0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cuniq cSND csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 f0
+ ((MEM (e_list x)) (flatten N)) |- (((MEM (e_list x)) (flatten N)) = T)
T c==> cMEM ce_list f0 cflatten f1 c= cMEM ce_list f0 cflatten f1 cT
+ (~ (s = NIL)), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM r) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) /\ (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ c= f0 cNIL c==> c~ cfinal_list f1 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cHD f0 cf_list f1 ce_list f3 c==> c= cLAST f0 f4 c==> c= cnext_el f5 f3 f6 c==> c= cprev_el f2 f7 f8 c==> c= cl'y f1 f2 f3 f9 c==> c= cl'z f1 f10 f2 f3 f7 c==> c= cSND csplit_normal_list f1 f2 f5 f9 f8 f11 c==> c= cfind_face f1 f3 f5 c==> cMEM f12 f11 c==> cMEM f2 f10 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cfinal_dart_list f1 f10 c==> ccontour_list f1 f0 c==> cfinal_list f1 f11 c==> cmarked_list f1 f10 f2 f3 c/\ c= cnext_el f5 f3 f6 c==> cMEM f6 f11 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS f11 cNIL f10 cCONS cFST csplit_normal_list f1 f2 f5 f9 f8 cNIL
+ (x' = d), ((MEM r) N), ((final_list L) r2) |- ((x' = d) /\ ((x' IN (set_of_list r2)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c= f0 f1 c==> cMEM f2 f3 c==> cfinal_list f4 f5 c/\ c= f0 f1 c==> cIN f0 * part cset_of_list f5 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f4 cAPPEND creplace f2 cCONS f5 cNIL f3 cCONS cFST csplit_normal_list f4 f2 f6 f7 f8 cNIL
+ ((final_list L) l) |- (((final_list L) l) = T)
T c==> cfinal_list f0 f1 c= cfinal_list f0 f1 cT
- (!x'. (((MEM x') ((find_list N) (e_list x))) ==> (((f_list L) x') = ((next_el ((find_list N) (e_list x))) x')))) |- ((\x'. (((MEM x') ((find_list N) (e_list x))) ==> (((f_list L) x') = ((next_el ((find_list N) (e_list x))) x')))) x')
T c==> ! c==> cMEM b0 cfind_list f0 ce_list f1 c= cf_list f2 b0 cnext_el cfind_list f0 ce_list f1 b0 * / c==> cMEM b0 cfind_list f0 ce_list f1 c= cf_list f2 b0 cnext_el cfind_list f0 ce_list f1 b0 f3
+ (~ (r' = NIL)), (r' = s1) |- ((s1 = NIL) = F)
T c==> c~ c= f0 cNIL c==> c= f0 f1 c= c= f1 cNIL cF
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ |- ((\N. (((final_dart_list L) N) = (flatten ((filter (final_list L)) N)))) N)
T * / c= cfinal_dart_list f0 b0 cflatten cfilter * part cfinal_list f0 b0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (((next_el f) x) = w), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM y) f), ((MEM z) f), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L) |- (((MEM x) r2) ==> (((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq r2) ==> (((loop_list L) r2) ==> (((contour_list L) s1) ==> (((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f5 f2 c==> c< cindexf f4 f5 f2 cindexf f4 f6 f2 c==> cMEM f4 f7 c==> cMEM f5 f2 c==> cMEM f6 f2 c==> cSUBSET * part cset_of_list f8 * part cset_of_list cfinal_dart_list f0 f9 c==> call / c~ c= b0 cNIL f0 c==> cMEM f3 f7 c==> cMEM f7 cntrans f0 f9 f1 f3 cNUMERAL cBIT1 c_0 c==> cuniq f7 c==> cloop_list f0 f7 c==> ccontour_list f0 f10 c==> c= cHD f10 f11 c==> c= cLAST f10 f3 c==> cSUBSET * part cset_of_list f10 * part cset_of_list f7 c==> c~ c= f10 cNIL c==> cone_step_list f0 f3 cf_list f0 ce_list f3 c==> ccontour_list f0 ccat f10 f8 c==> cIN f12 * part cset_of_list f8 cIN f12 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f7 cNIL f9 cCONS cFST csplit_normal_list f0 f1 f2 f5 f13 cNIL
- ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
+ (~ ((final_list L) r)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) |- (((loop_list L) r2) ==> (((contour_list L) s1) ==> (((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f3 c==> cloop_list f0 f4 c==> ccontour_list f0 f5 c==> c= cHD f5 f6 c==> c= cLAST f5 f7 c==> cSUBSET * part cset_of_list f5 * part cset_of_list f4 c==> c~ c= f5 cNIL c==> cone_step_list f0 f7 cf_list f0 ce_list f7 c==> ccontour_list f0 ccat f5 f2 c==> cIN f8 * part cset_of_list f2 cIN f8 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f4 cNIL f3 cCONS cFST csplit_normal_list f0 f1 f9 f10 f11 cNIL
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2
+ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((((marked_list L) N) r) x) |- ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) /\ (((MEM v) ((final_dart_list L) N)) ==> (?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM ((f_list L) (e_list x))) l)))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cmarked_list f0 f1 f2 f3 c/\ ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> cMEM f4 cfinal_dart_list f0 f1 c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM cf_list f0 ce_list f3 b0
+ |- ((\x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))) x)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= b1 cfind_face f0 b0 c= b2 cnext_el b1 b0 c/\ cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 b1 c/\ cMEM cztrans f0 f1 f2 b0 cNUMERAL c_0 b1 c< cindexf b2 cytrans f0 f1 f2 b0 cNUMERAL c_0 b1 cindexf b2 cztrans f0 f1 f2 b0 cNUMERAL c_0 b1 f3
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> ((MEM x) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 cMEM b3 crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 f0
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM x) r), ((MEM r) N), ((MEM r1) N), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) /\ (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f0 f2 f3 f6 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cSND csplit_normal_list f0 f2 f7 f6 f5 f8 c==> c= cfind_face f0 f3 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f3 f2 c==> cMEM f2 f1 c==> cMEM f11 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f1 f2 f3 c/\ ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> cMEM f10 cfinal_dart_list f0 f1 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f6 f5 cNIL
+ ((\w. (((next_el f) x) = w)) w) |- (((next_el f) x) = w)
T c==> * / c= cnext_el f0 f1 b0 f2 c= cnext_el f0 f1 f2
- |- (((!x'. (((\w. (((next_el f) x) = w)) x') ==> (?w. (((next_el f) x) = w)))) ==> ((?w. (((next_el f) x) = w)) ==> (?w. (((next_el f) x) = w)))) = ((?w. (((next_el f) x) = w)) ==> (?w. (((next_el f) x) = w))))
T c= c==> ! c==> * / c= cnext_el f0 f1 b1 b0 c? / c= cnext_el f0 f1 b1 c==> c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0 c==> c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM r1) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM v) r1) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f8 c==> cMEM f10 f6 c==> cfinal_list f0 f10 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f11 f10 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cMEM f11 cfinal_dart_list f0 f6 c==> cMEM cf_list f0 ce_list f4 cfinal_dart_list f0 f6 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f4 c==> c= cLAST f12 f11 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f6 c==> c= cnext_el f7 f4 f13 c==> cMEM f13 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((contour_list L) s1) |- (((contour_list L) s1) /\ (((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f3 c==> ccontour_list f0 f4 c/\ ccontour_list f0 f4 c==> c= cHD f4 f5 c==> c= cLAST f4 f6 c==> cSUBSET * part cset_of_list f4 * part cset_of_list f7 c==> c~ c= f4 cNIL c==> cone_step_list f0 f6 cf_list f0 ce_list f6 c==> ccontour_list f0 ccat f4 f2 c==> cIN f8 * part cset_of_list f2 cIN f8 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f7 cNIL f3 cCONS cFST csplit_normal_list f0 f1 f9 f10 f11 cNIL
+ (~ ((final_list L) r)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) |- ((((find_face L) y) = f) ==> (((MEM x) r2) ==> (((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((uniq r2) ==> (((loop_list L) r2) ==> (((contour_list L) s1) ==> (((HD s1) = u) ==> (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f3 c==> c= cfind_face f0 f4 f5 c==> cMEM f6 f7 c==> cMEM f7 cntrans f0 f3 f1 f6 cNUMERAL cBIT1 c_0 c==> cuniq f7 c==> cloop_list f0 f7 c==> ccontour_list f0 f8 c==> c= cHD f8 f9 c==> c= cLAST f8 f6 c==> cSUBSET * part cset_of_list f8 * part cset_of_list f7 c==> c~ c= f8 cNIL c==> cone_step_list f0 f6 cf_list f0 ce_list f6 c==> ccontour_list f0 ccat f8 f2 c==> cIN f10 * part cset_of_list f2 cIN f10 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f7 cNIL f3 cCONS cFST csplit_normal_list f0 f1 f5 f4 f11 cNIL
- |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) ==> (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)))
T c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
+ |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) r)
T * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cuniq cSND csplit_normal_list f0 b0 cfind_face f0 cl'y f0 b0 b1 cl'y f0 b0 b1 cprev_el b0 cl'z f0 f1 b0 b1 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1)))))), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c/\ cfinal_list f0 f7 c/\ c= cSND csplit_normal_list f0 f1 f8 f5 f3 f7 c/\ cMEM f9 f6 c/\ c= cfind_face f0 f4 f8 c/\ cMEM f10 f7 cMEM f11 f9 c==> cfinal_list f0 f9 c==> cfinal_list f0 f7 c==> cmarked_list f0 f6 f1 f4 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f5 f3 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f8 f5 f3 cNIL
- ((~ (A ==> (A \/ B))) ==> F) |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) ==> ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
+ |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))))) x))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 cntrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f3
+ |- ((\L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x)))) L)
T * / c==> c/\ cuniq clist_of_darts b0 cMEM f0 cfind_face b0 f1 c= cfind_face b0 f0 cfind_face b0 f1 f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- (((?d. (x' = d)) ==> ((x' IN (set_of_list ((final_dart_list L) N))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))) = ((x' IN (set_of_list ((final_dart_list L) N))) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c= c==> c? / c= f0 b0 c==> cIN f0 * part cset_of_list cfinal_dart_list f1 f2 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f3 cCONS f4 cNIL f2 cCONS cFST csplit_normal_list f1 f3 f5 f6 f7 cNIL c==> cIN f0 * part cset_of_list cfinal_dart_list f1 f2 cIN f0 * part cset_of_list cflatten cfilter * part cfinal_list f1 cAPPEND creplace f3 cCONS f4 cNIL f2 cCONS cFST csplit_normal_list f1 f3 f5 f6 f7 cNIL
+ |- ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L)
T * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= ! ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 cT
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (r' = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), ((HD r') = u), ((LAST r') = x), (((next_el f) x) = w), (r' = s1), (((find_face L) y) = f), ((x' IN (set_of_list s1)) \/ (x' IN (set_of_list s))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list r') SUBSET (set_of_list r2)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) r'), ((contour_list L) ((cat s1) s)), ((final_list L) r2), (((one_step_list L) x) ((f_list L) (e_list x))) |- (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> c= cHD f1 f4 c==> c= cLAST f1 f5 c==> c= cnext_el f6 f5 f7 c==> c= f1 f8 c==> c= cfind_face f0 f9 f6 c==> c\/ cIN f10 * part cset_of_list f8 cIN f10 * part cset_of_list f11 c==> c< cindexf f7 f9 f6 cindexf f7 f12 f6 c==> cMEM f7 f3 c==> cMEM f5 f3 c==> cMEM f9 f6 c==> cMEM f12 f6 c==> cMEM f2 f13 c==> cMEM f3 cntrans f0 f13 f2 f5 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list f3 c==> cSUBSET * part cset_of_list f11 * part cset_of_list cfinal_dart_list f0 f13 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f3 c==> ccontour_list f0 f1 c==> ccontour_list f0 ccat f8 f11 c==> cfinal_list f0 f3 c==> cone_step_list f0 f5 cf_list f0 ce_list f5 cIN f10 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f2 cCONS f3 cNIL f13 cCONS cFST csplit_normal_list f0 f2 f6 f9 f14 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM v) r1), ((MEM r1) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) /\ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))))))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f11 f6 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f6 c/\ cMEM f1 f6 c/\ cMEM f4 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c/\ c= cnext_el f1 f4 cf_list f0 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c/\ ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f6 cMEM b1 cfinal_dart_list f0 f6 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f6 ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((final_list L) ((find_list N) (e_list x))), ((((marked_list L) N) r) x) |- (((MEM ((find_list N) (e_list x))) N) /\ ((MEM ((f_list L) (e_list x))) ((find_list N) (e_list x))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cfinal_list f0 cfind_list f2 ce_list f3 c==> cmarked_list f0 f2 f1 f3 c/\ cMEM cfind_list f2 ce_list f3 f2 cMEM cf_list f0 ce_list f3 cfind_list f2 ce_list f3
+ |- (((!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) ==> ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) y)) = ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) y))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0
+ (((f_list L) (e_list x)) = ((next_el ((find_list N) (e_list x))) (e_list x))), ((MEM (e_list x)) ((find_list N) (e_list x))) |- ((MEM ((f_list L) (e_list x))) ((find_list N) (e_list x)))
T c==> c= cf_list f0 ce_list f1 cnext_el cfind_list f2 ce_list f1 ce_list f1 c==> cMEM ce_list f1 cfind_list f2 ce_list f1 cMEM cf_list f0 ce_list f1 cfind_list f2 ce_list f1
+ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ (s = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM v) ((final_dart_list L) N)), ((MEM x) r), ((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)), ((MEM r) N), ((MEM r1) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((contour_list L) s), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ c= f4 cNIL c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f4 cf_list f0 ce_list f3 c==> c= cLAST f4 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cSND csplit_normal_list f0 f2 f9 f8 f7 f10 c==> c= cfind_face f0 f3 f9 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f11 f10 c==> cMEM f5 f12 c==> cMEM f5 cfinal_dart_list f0 f1 c==> cMEM f3 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> cMEM f2 f1 c==> cMEM f12 f1 c==> cSUBSET * part cset_of_list f4 * part cset_of_list cfinal_dart_list f0 f1 c==> ccontour_list f0 f4 c==> cnormal_list f0 f1 c==> cfinal_list f0 f12 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f10 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f8 f7 cNIL
+ |- (((((uniq (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ (((loop_list L) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ (((MEM u) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ ((MEM x) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))) ==> (?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = x) /\ (((set_of_list r') SUBSET (set_of_list (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) /\ (~ (r' = NIL)))))))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c= c==> c==> c/\ cuniq cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 c/\ cloop_list f0 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 c/\ cMEM f4 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cMEM f5 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f4 c/\ c= cLAST b0 f5 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 c~ c= b0 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f7 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f9 f2 f3 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f4 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f7 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f9 f2 f3 cNIL
+ |- (((!L. (((MEM (e_list x)) (flatten L)) ==> ((MEM ((find_list L) (e_list x))) L))) ==> ((\L. (((MEM (e_list x)) (flatten L)) ==> ((MEM ((find_list L) (e_list x))) L))) N)) = ((\L. (((MEM (e_list x)) (flatten L)) ==> ((MEM ((find_list L) (e_list x))) L))) N))
T c= c==> ! c==> cMEM ce_list f0 cflatten b0 cMEM cfind_list b0 ce_list f0 b0 * / c==> cMEM ce_list f0 cflatten b0 cMEM cfind_list b0 ce_list f0 b0 f1 * / c==> cMEM ce_list f0 cflatten b0 cMEM cfind_list b0 ce_list f0 b0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (r' = NIL)), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD r') = u), ((HD s) = ((f_list L) (e_list x))), ((LAST r') = x), ((LAST s) = v), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list r') SUBSET (set_of_list r2)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) r'), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((\s1. (r' = s1)) s1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ c= f2 cNIL c==> c~ cfinal_list f0 f3 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 f5 c==> c= cHD f2 cf_list f0 ce_list f6 c==> c= cLAST f1 f6 c==> c= cLAST f2 f7 c==> c= cnext_el f8 f6 f9 c==> c= cfind_face f0 f6 f8 c==> c= cfind_face f0 f10 f8 c==> c< cindexf f9 f10 f8 cindexf f9 f11 f8 c==> cMEM f9 f4 c==> cMEM f6 f4 c==> cMEM f10 f8 c==> cMEM f11 f8 c==> cMEM f3 f12 c==> cMEM f4 cntrans f0 f12 f3 f6 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list f4 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f12 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f4 c==> ccontour_list f0 f1 c==> ccontour_list f0 f2 c==> cfinal_list f0 f4 c==> cmarked_list f0 f12 f3 f6 c==> * / c= f1 b0 f13 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f3 cCONS f4 cNIL f12 cCONS cFST csplit_normal_list f0 f3 f8 f10 f14 cNIL
+ (~ ((final_list L) r)), ((HD s1) = u), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) |- (((HD s1) = u) /\ (((LAST s1) = x) ==> (((set_of_list s1) SUBSET (set_of_list r2)) ==> ((~ (s1 = NIL)) ==> ((((one_step_list L) x) ((f_list L) (e_list x))) ==> (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c= cHD f2 f3 c==> cSUBSET * part cset_of_list f4 * part cset_of_list cfinal_dart_list f0 f5 c/\ c= cHD f2 f3 c==> c= cLAST f2 f6 c==> cSUBSET * part cset_of_list f2 * part cset_of_list f7 c==> c~ c= f2 cNIL c==> cone_step_list f0 f6 cf_list f0 ce_list f6 c==> ccontour_list f0 ccat f2 f4 c==> cIN f8 * part cset_of_list f4 cIN f8 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f7 cNIL f5 cCONS cFST csplit_normal_list f0 f1 f9 f10 f11 cNIL
+ (~ (r' = NIL)), (r' = s1), ((MEM r) N), ((set_of_list r') SUBSET (set_of_list r2)), ((final_list L) r2), (((one_step_list L) x) ((f_list L) (e_list x))) |- (((contour_list L) ((cat s1) s)) ==> ((x' IN (set_of_list s1)) ==> (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c==> cMEM f2 f3 c==> cSUBSET * part cset_of_list f0 * part cset_of_list f4 c==> cfinal_list f5 f4 c==> cone_step_list f5 f6 cf_list f5 ce_list f6 c==> ccontour_list f5 ccat f1 f7 c==> cIN f8 * part cset_of_list f1 cIN f8 * part cset_of_list cflatten cfilter * part cfinal_list f5 cAPPEND creplace f2 cCONS f4 cNIL f3 cCONS cFST csplit_normal_list f5 f2 f9 f10 f11 cNIL
+ |- (((!y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM u) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = u) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL)))))))))) ==> ((\y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM u) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = u) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL)))))))))) x)) = ((\y. (!s. (((uniq s) /\ (((loop_list L) s) /\ (((MEM u) s) /\ ((MEM y) s)))) ==> (?r. (((contour_list L) r) /\ (((HD r) = u) /\ (((LAST r) = y) /\ (((set_of_list r) SUBSET (set_of_list s)) /\ (~ (r = NIL)))))))))) x))
T c= c==> ! ! c==> c/\ cuniq b1 c/\ cloop_list f0 b1 c/\ cMEM f1 b1 cMEM b0 b1 c? / c/\ ccontour_list f0 b2 c/\ c= cHD b2 f1 c/\ c= cLAST b2 b0 c/\ cSUBSET * part cset_of_list b2 * part cset_of_list b1 c~ c= b2 cNIL * / ! c==> c/\ cuniq b1 c/\ cloop_list f0 b1 c/\ cMEM f1 b1 cMEM b0 b1 c? / c/\ ccontour_list f0 b2 c/\ c= cHD b2 f1 c/\ c= cLAST b2 b0 c/\ cSUBSET * part cset_of_list b2 * part cset_of_list b1 c~ c= b2 cNIL f2 * / ! c==> c/\ cuniq b1 c/\ cloop_list f0 b1 c/\ cMEM f1 b1 cMEM b0 b1 c? / c/\ ccontour_list f0 b2 c/\ c= cHD b2 f1 c/\ c= cLAST b2 b0 c/\ cSUBSET * part cset_of_list b2 * part cset_of_list b1 c~ c= b2 cNIL f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (r' = NIL)), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), ((HD r') = u), ((HD s) = ((f_list L) (e_list x))), ((LAST r') = x), ((LAST s) = v), (((next_el f) x) = w), (r' = s1), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list r') SUBSET (set_of_list r2)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) r'), ((final_list L) r2), (((one_step_list L) x) ((f_list L) (e_list x))) |- (((contour_list L) ((cat s1) s)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ c= f2 cNIL c==> c~ cfinal_list f0 f3 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> c= cHD f1 f5 c==> c= cHD f2 cf_list f0 ce_list f6 c==> c= cLAST f1 f6 c==> c= cLAST f2 f7 c==> c= cnext_el f8 f6 f9 c==> c= f1 f10 c==> c= cfind_face f0 f11 f8 c==> c< cindexf f9 f11 f8 cindexf f9 f12 f8 c==> cMEM f9 f4 c==> cMEM f6 f4 c==> cMEM f11 f8 c==> cMEM f12 f8 c==> cMEM f3 f13 c==> cMEM f4 cntrans f0 f13 f3 f6 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list f4 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f13 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f4 c==> ccontour_list f0 f1 c==> cfinal_list f0 f4 c==> cone_step_list f0 f6 cf_list f0 ce_list f6 c==> ccontour_list f0 ccat f10 f2 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f3 cCONS f4 cNIL f13 cCONS cFST csplit_normal_list f0 f3 f8 f11 f14 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cSND csplit_normal_list f0 f1 f2 f7 f6 f9 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f8 f1 f3 c= c==> cMEM f4 f9 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f9 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f7 f6 cNIL c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f8 f1 f3 c/\ c= cl'z f0 f8 f1 f3 f5 c/\ c= cl'y f0 f1 f3 f7 c/\ c= cprev_el f1 f5 f6 c/\ c= cSND csplit_normal_list f0 f1 f2 f7 f6 f9 c/\ c= cfind_face f0 f3 f2 c/\ c= cnext_el f2 f3 f4 c~ cfinal_list f0 f1 cMEM f4 f9 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f9 cNIL f8 cCONS cFST csplit_normal_list f0 f1 f2 f7 f6 cNIL
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))), ((MEM x) s) |- ((MEM ((next_el s) x)) s)
T c==> ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1 c==> cMEM f0 f1 cMEM cnext_el f1 f0 f1
+ (good_list L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1))))))))))))) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> cgood_list f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'y f0 f2 f3 f5 c/\ c= cprev_el f2 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c= cSND csplit_normal_list f0 f2 f9 f5 f6 f8 c/\ cMEM f7 f1 c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS cSND csplit_normal_list f0 f2 f9 f5 f6 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
+ (good_list L), (good_list_nodes L), ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((final_list L) r1) /\ (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ (((MEM r1) N) /\ ((((find_face L) x) = f) /\ (((MEM u) r2) /\ ((MEM v) r1))))))))))), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS (SND (((((split_normal_list L) r) f) y) z1))) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ c~ cfinal_list f0 f1 c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cprev_el f1 f4 f6 c/\ cfinal_list f0 f7 c/\ cfinal_list f0 f8 c/\ c= cSND csplit_normal_list f0 f1 f9 f5 f6 f8 c/\ cMEM f7 f2 c/\ c= cfind_face f0 f3 f9 c/\ cMEM f10 f8 cMEM f11 f7 c==> cmarked_list f0 f2 f1 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f5 f6 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
+ (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ (s = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM v) ((final_dart_list L) N)), ((MEM x) r), ((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)), ((MEM r) N), ((MEM r1) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((contour_list L) s), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((!x'. (((\w. (((next_el f) x) = w)) x') ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))) ==> ((?w. (((next_el f) x) = w)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))) = ((?w. (((next_el f) x) = w)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ c= f4 cNIL c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f4 cf_list f0 ce_list f3 c==> c= cLAST f4 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cSND csplit_normal_list f0 f2 f9 f8 f7 f10 c==> c= cfind_face f0 f3 f9 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f11 f10 c==> cMEM f5 f12 c==> cMEM f5 cfinal_dart_list f0 f1 c==> cMEM f3 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> cMEM f2 f1 c==> cMEM f12 f1 c==> cSUBSET * part cset_of_list f4 * part cset_of_list cfinal_dart_list f0 f1 c==> ccontour_list f0 f4 c==> cnormal_list f0 f1 c==> cfinal_list f0 f12 c==> cfinal_list f0 f10 c==> cmarked_list f0 f1 f2 f3 c= c==> ! c==> * / c= cnext_el f9 f3 b1 b0 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f11 c/\ c= cLAST b1 f5 cSUBSET * part cset_of_list b1 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f10 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f8 f7 cNIL c==> c? / c= cnext_el f9 f3 b0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f10 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f8 f7 cNIL c==> c? / c= cnext_el f9 f3 b0 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f11 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f10 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f8 f7 cNIL
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
+ (~ (s = NIL)), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM w) r2), ((MEM r) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((good_list L) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ c= f0 cNIL c==> c~ cfinal_list f1 f2 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cHD f0 cf_list f1 ce_list f3 c==> c= cLAST f0 f4 c==> c= cnext_el f5 f3 f6 c==> c= cprev_el f2 f7 f8 c==> c= cl'y f1 f2 f3 f9 c==> c= cl'z f1 f10 f2 f3 f7 c==> c= cSND csplit_normal_list f1 f2 f5 f9 f8 f11 c==> c= cfind_face f1 f3 f5 c==> cMEM f12 f11 c==> cMEM f6 f11 c==> cMEM f2 f10 c==> cSUBSET * part cset_of_list f0 * part cset_of_list cfinal_dart_list f1 f10 c==> ccontour_list f1 f0 c==> cfinal_list f1 f11 c==> cmarked_list f1 f10 f2 f3 c==> cgood_list f1 c? / c/\ ccontour_list f1 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f1 ccat creplace f2 cCONS f11 cNIL f10 cCONS cFST csplit_normal_list f1 f2 f5 f9 f8 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f))), ((MEM u) r2), ((MEM w) r2), ((MEM y) f), ((MEM r) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 cf_list f0 ce_list f3 c==> c= cLAST f1 f4 c==> c= cnext_el f5 f3 f6 c==> c= cprev_el f2 f7 f8 c==> c= cl'y f0 f2 f3 f9 c==> c= cl'z f0 f10 f2 f3 f7 c==> c= cSND csplit_normal_list f0 f2 f5 f9 f8 f11 c==> c= cfind_face f0 f3 f5 c==> c/\ cMEM f7 f5 c< cindexf f6 f9 f5 cindexf f6 f7 f5 c==> cMEM f12 f11 c==> cMEM f6 f11 c==> cMEM f9 f5 c==> cMEM f2 f10 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cfinal_dart_list f0 f10 c==> call / c~ c= b0 cNIL f0 c==> ccontour_list f0 f1 c==> cfinal_list f0 f11 c==> cmarked_list f0 f10 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f11 cNIL f10 cCONS cFST csplit_normal_list f0 f2 f5 f9 f8 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (r' = NIL)), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD r') = u), ((HD s) = ((f_list L) (e_list x))), ((LAST r') = x), ((LAST s) = v), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list r') SUBSET (set_of_list r2)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) r'), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (!s1. (((\s1. (r' = s1)) s1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ c= f2 cNIL c==> c~ cfinal_list f0 f3 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 f5 c==> c= cHD f2 cf_list f0 ce_list f6 c==> c= cLAST f1 f6 c==> c= cLAST f2 f7 c==> c= cnext_el f8 f6 f9 c==> c= cfind_face f0 f6 f8 c==> c= cfind_face f0 f10 f8 c==> c< cindexf f9 f10 f8 cindexf f9 f11 f8 c==> cMEM f9 f4 c==> cMEM f6 f4 c==> cMEM f10 f8 c==> cMEM f11 f8 c==> cMEM f3 f12 c==> cMEM f4 cntrans f0 f12 f3 f6 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list f4 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f12 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f4 c==> ccontour_list f0 f1 c==> ccontour_list f0 f2 c==> cfinal_list f0 f4 c==> cmarked_list f0 f12 f3 f6 ! c==> * / c= f1 b1 b0 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f5 c/\ c= cLAST b1 f7 cSUBSET * part cset_of_list b1 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f3 cCONS f4 cNIL f12 cCONS cFST csplit_normal_list f0 f3 f8 f10 f13 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (r' = NIL)), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD r') = u), ((HD s) = ((f_list L) (e_list x))), ((LAST r') = x), ((LAST s) = v), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list r') SUBSET (set_of_list r2)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) r'), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x), ((\s1. (r' = s1)) s1) |- (((\s1. (r' = s1)) s1) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ c= f2 cNIL c==> c~ cfinal_list f0 f3 c==> cuniq f4 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 f5 c==> c= cHD f2 cf_list f0 ce_list f6 c==> c= cLAST f1 f6 c==> c= cLAST f2 f7 c==> c= cnext_el f8 f6 f9 c==> c= cfind_face f0 f6 f8 c==> c= cfind_face f0 f10 f8 c==> c< cindexf f9 f10 f8 cindexf f9 f11 f8 c==> cMEM f9 f4 c==> cMEM f6 f4 c==> cMEM f10 f8 c==> cMEM f11 f8 c==> cMEM f3 f12 c==> cMEM f4 cntrans f0 f12 f3 f6 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list f4 c==> cSUBSET * part cset_of_list f2 * part cset_of_list cfinal_dart_list f0 f12 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f4 c==> ccontour_list f0 f1 c==> ccontour_list f0 f2 c==> cfinal_list f0 f4 c==> cmarked_list f0 f12 f3 f6 c==> * / c= f1 b0 f13 c/\ * / c= f1 b0 f13 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f3 cCONS f4 cNIL f12 cCONS cFST csplit_normal_list f0 f3 f8 f10 f14 cNIL
+ (~ ((final_list L) r)), ((MEM d) l), ((MEM l) N), ((final_list L) l) |- ((l = r) ==> F)
T c==> c~ cfinal_list f0 f1 c==> cMEM f2 f3 c==> cMEM f3 f4 c==> cfinal_list f0 f3 c==> c= f3 f1 cF
+ |- ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)
T * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD r') = u), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), (((HD r') = u) /\ (((LAST r') = x) /\ (((set_of_list r') SUBSET (set_of_list r2)) /\ (~ (r' = NIL))))), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) r'), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f4 f5 c==> c= cHD f1 cf_list f0 ce_list f6 c==> c= cLAST f1 f7 c==> c= cnext_el f8 f6 f9 c==> c= cfind_face f0 f6 f8 c==> c= cfind_face f0 f10 f8 c==> c/\ c= cHD f4 f5 c/\ c= cLAST f4 f6 c/\ cSUBSET * part cset_of_list f4 * part cset_of_list f3 c~ c= f4 cNIL c==> c< cindexf f9 f10 f8 cindexf f9 f11 f8 c==> cMEM f9 f3 c==> cMEM f6 f3 c==> cMEM f10 f8 c==> cMEM f11 f8 c==> cMEM f2 f12 c==> cMEM f3 cntrans f0 f12 f2 f6 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cfinal_dart_list f0 f12 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f3 c==> ccontour_list f0 f4 c==> ccontour_list f0 f1 c==> cfinal_list f0 f3 c==> cmarked_list f0 f12 f2 f6 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f5 c/\ c= cLAST b0 f7 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f3 cNIL f12 cCONS cFST csplit_normal_list f0 f2 f8 f10 f13 cNIL
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- (!r'. (((\r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = x) /\ (((set_of_list r') SUBSET (set_of_list r2)) /\ (~ (r' = NIL))))))) r') ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f1 cf_list f0 ce_list f4 c==> c= cLAST f1 f5 c==> c= cnext_el f6 f4 f7 c==> c= cfind_face f0 f4 f6 c==> c= cfind_face f0 f8 f6 c==> c< cindexf f7 f8 f6 cindexf f7 f9 f6 c==> cMEM f7 f3 c==> cMEM f4 f3 c==> cMEM f8 f6 c==> cMEM f9 f6 c==> cMEM f2 f10 c==> cMEM f3 cntrans f0 f10 f2 f4 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f1 * part cset_of_list cfinal_dart_list f0 f10 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f3 c==> ccontour_list f0 f1 c==> cfinal_list f0 f3 c==> cmarked_list f0 f10 f2 f4 ! c==> * / c/\ ccontour_list f0 b1 c/\ c= cHD b1 f11 c/\ c= cLAST b1 f4 c/\ cSUBSET * part cset_of_list b1 * part cset_of_list f3 c~ c= b1 cNIL b0 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f11 c/\ c= cLAST b1 f5 cSUBSET * part cset_of_list b1 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f3 cNIL f10 cCONS cFST csplit_normal_list f0 f2 f6 f8 f12 cNIL
+ |- ((?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM v) l))) = ((MEM v) ((final_dart_list L) N)))
T c= c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM f2 b0 cMEM f2 cfinal_dart_list f0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM v) r1), ((MEM r) N), ((MEM r1) N), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f1 f6 c==> cMEM f11 f6 c==> cnormal_list f0 f6 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cMEM f10 cfinal_dart_list f0 f6 c==> cMEM cf_list f0 ce_list f4 cfinal_dart_list f0 f6 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f4 c==> c= cLAST f12 f10 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f6 c==> c= cnext_el f7 f4 f13 c==> cMEM f13 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- ((MEM x) s) |- ((!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))) ==> ((MEM ((next_el s) x)) s))
T c==> cMEM f0 f1 c==> ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1 cMEM cnext_el f1 f0 f1
- (~ (r' = NIL)), (r' = s1), ((MEM r) N), (x' IN (set_of_list s1)), ((set_of_list r') SUBSET (set_of_list r2)), ((contour_list L) ((cat s1) s)), ((final_list L) r2), (((one_step_list L) x) ((f_list L) (e_list x))) |- ((x' IN (set_of_list s1)) /\ (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c==> cMEM f2 f3 c==> cIN f4 * part cset_of_list f1 c==> cSUBSET * part cset_of_list f0 * part cset_of_list f5 c==> ccontour_list f6 ccat f1 f7 c==> cfinal_list f6 f5 c==> cone_step_list f6 f8 cf_list f6 ce_list f8 c/\ cIN f4 * part cset_of_list f1 cIN f4 * part cset_of_list cflatten cfilter * part cfinal_list f6 cAPPEND creplace f2 cCONS f5 cNIL f3 cCONS cFST csplit_normal_list f6 f2 f9 f10 f11 cNIL
- (x' IN (set_of_list ((final_dart_list L) N))) |- ((x' IN (set_of_list ((final_dart_list L) N))) = T)
T c==> cIN f0 * part cset_of_list cfinal_dart_list f1 f2 c= cIN f0 * part cset_of_list cfinal_dart_list f1 f2 cT
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- ((\p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))) p)
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 * / ! c==> c/\ c= b1 cLAST b0 c/\ cMEM b0 cparts f0 f4 c/\ cMEM f4 f1 c/\ c~ cfinal_list f0 f4 c~ cMEM b1 cs_list f0 f2 f3 cMEM ce_list b1 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f5
- (~ ((final_list L) r)), (x' IN (set_of_list ((final_dart_list L) N))) |- ((x' IN (set_of_list ((final_dart_list L) N))) /\ (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> c~ cfinal_list f0 f1 c==> cIN f2 * part cset_of_list cfinal_dart_list f0 f3 c/\ cIN f2 * part cset_of_list cfinal_dart_list f0 f3 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f1 cCONS f4 cNIL f3 cCONS cFST csplit_normal_list f0 f1 f5 f6 f7 cNIL
- |- ((\B. (!A. ((~ (A ==> (A \/ B))) ==> F))) B)
T * / ! c==> c~ c==> b1 c\/ b1 b0 cF f0
- |- ((x' = d) = ((\d. (x' = d)) d))
T c= c= f0 f1 * / c= f0 b0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM r1) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f10 f8 c==> cMEM f11 f9 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) g)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 f3
- |- ((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0)))
T c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- ((((next_el f) x) = w) ==> (?w. (((next_el f) x) = w)))
T c==> c= cnext_el f0 f1 f2 c? / c= cnext_el f0 f1 b0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- (((!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))) ==> ((\p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))) p)) = ((\p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))))) p))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c= c==> ! ! c==> c/\ c= b1 cLAST b0 c/\ cMEM b0 cparts f0 f4 c/\ cMEM f4 f1 c/\ c~ cfinal_list f0 f4 c~ cMEM b1 cs_list f0 f2 f3 cMEM ce_list b1 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 * / ! c==> c/\ c= b1 cLAST b0 c/\ cMEM b0 cparts f0 f4 c/\ cMEM f4 f1 c/\ c~ cfinal_list f0 f4 c~ cMEM b1 cs_list f0 f2 f3 cMEM ce_list b1 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f5 * / ! c==> c/\ c= b1 cLAST b0 c/\ cMEM b0 cparts f0 f4 c/\ cMEM f4 f1 c/\ c~ cfinal_list f0 f4 c~ cMEM b1 cs_list f0 f2 f3 cMEM ce_list b1 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f5
- |- ((\z1. (!f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)))))))))) z1)
T * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 f1 c/\ c= cprev_el b6 f0 b0 c/\ c= cSND csplit_normal_list b4 b6 b1 f1 b0 b3 c/\ c= cfind_face b4 b7 b1 c/\ c= cnext_el b1 b7 b2 c~ cfinal_list b4 b6 cMEM b2 b3 f2
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))) = T)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= ! c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0 cT
- A, (A ==> (A \/ B)) |- (A /\ (A \/ B))
T c==> f0 c==> c==> f0 c\/ f0 f1 c/\ f0 c\/ f0 f1
- |- (((!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))))) ==> ((\r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))))) r2)) = ((\r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))))) r2))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 f2 c/\ c= cSND csplit_normal_list b1 b3 f3 f1 f2 b0 c/\ c= cfind_face b1 b4 f3 c/\ c= cnext_el f3 b4 f4 c~ cfinal_list b1 b3 cMEM f4 b0 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 f2 c/\ c= cSND csplit_normal_list b1 b3 f3 f1 f2 b0 c/\ c= cfind_face b1 b4 f3 c/\ c= cnext_el f3 b4 f4 c~ cfinal_list b1 b3 cMEM f4 b0 f5 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 f2 c/\ c= cSND csplit_normal_list b1 b3 f3 f1 f2 b0 c/\ c= cfind_face b1 b4 f3 c/\ c= cnext_el f3 b4 f4 c~ cfinal_list b1 b3 cMEM f4 b0 f5
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- ((\z. (!y. (!z1. (!f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)))))))))))) z)
T * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c= cl'z b6 b7 b8 b9 b0 c/\ c= cl'y b6 b8 b9 b1 c/\ c= cprev_el b8 b0 b2 c/\ c= cSND csplit_normal_list b6 b8 b3 b1 b2 b5 c/\ c= cfind_face b6 b9 b3 c/\ c= cnext_el b3 b9 b4 c~ cfinal_list b6 b8 cMEM b4 b5 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f5 f6 f8 c==> cMEM f7 f2 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))) ==> ((\f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))) f)) = ((\f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))) f))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= c==> ! ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2 * / ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2 f1 * / ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2 f1
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) |- ((\u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) u)
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 * / ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 f2
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- (NIL = s1) |- (s1 = NIL)
T c==> c= cNIL f0 c= f0 cNIL
- A, (A ==> (A \/ B)) |- ((A ==> (A \/ B)) /\ (A \/ B))
T c==> f0 c==> c==> f0 c\/ f0 f1 c/\ c==> f0 c\/ f0 f1 c\/ f0 f1
- (!x'. (((MEM x') ((find_list N) (e_list x))) ==> (((f_list L) x') = ((next_el ((find_list N) (e_list x))) x')))) |- ((((MEM x') ((find_list N) (e_list x))) ==> (((f_list L) x') = ((next_el ((find_list N) (e_list x))) x'))) = T)
T c==> ! c==> cMEM b0 cfind_list f0 ce_list f1 c= cf_list f2 b0 cnext_el cfind_list f0 ce_list f1 b0 c= c==> cMEM f3 cfind_list f0 ce_list f1 c= cf_list f2 f3 cnext_el cfind_list f0 ce_list f1 f3 cT
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- |- (((!A. ((~ (A ==> (A \/ B))) ==> F)) ==> ((\A. ((~ (A ==> (A \/ B))) ==> F)) A)) = ((\A. ((~ (A ==> (A \/ B))) ==> F)) A))
T c= c==> ! c==> c~ c==> b0 c\/ b0 f0 cF * / c==> c~ c==> b0 c\/ b0 f0 cF f1 * / c==> c~ c==> b0 c\/ b0 f0 cF f1
- ((MEM r) N), (x' IN (set_of_list r2)), ((final_list L) r2) |- (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))
T c==> cMEM f0 f1 c==> cIN f2 * part cset_of_list f3 c==> cfinal_list f4 f3 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f4 cAPPEND creplace f0 cCONS f3 cNIL f1 cCONS cFST csplit_normal_list f4 f0 f5 f6 f7 cNIL
- |- ((\f. (!w. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> (((one_step_list L) x) ((f_list L) (e_list x)))))))))) f)
T * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cfind_face b2 b5 b0 c= cnext_el b0 b5 b1 cone_step_list b2 b5 cf_list b2 ce_list b5 f0
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) |- ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c/\ cMEM f2 cfinal_dart_list f0 f1 cMEM f3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f1
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c/\ c= f4 cLAST f5 c/\ cMEM f5 cparts f0 f6 c/\ cMEM f6 f1 c/\ c~ cfinal_list f0 f6 c~ cMEM f4 cs_list f0 f2 f3 cMEM ce_list f4 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1
- |- (((!f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))))))) ==> ((\f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))))))) f)) = ((\f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))))))) f))
T c= c==> ! ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 f1 c/\ c= cprev_el b5 f0 f2 c/\ c= cSND csplit_normal_list b3 b5 b0 f1 f2 b2 c/\ c= cfind_face b3 b6 b0 c/\ c= cnext_el b0 b6 b1 c~ cfinal_list b3 b5 cMEM b1 b2 * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 f1 c/\ c= cprev_el b5 f0 f2 c/\ c= cSND csplit_normal_list b3 b5 b0 f1 f2 b2 c/\ c= cfind_face b3 b6 b0 c/\ c= cnext_el b0 b6 b1 c~ cfinal_list b3 b5 cMEM b1 b2 f3 * / ! ! ! ! ! ! c==> c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 f1 c/\ c= cprev_el b5 f0 f2 c/\ c= cSND csplit_normal_list b3 b5 b0 f1 f2 b2 c/\ c= cfind_face b3 b6 b0 c/\ c= cnext_el b0 b6 b1 c~ cfinal_list b3 b5 cMEM b1 b2 f3
- |- ((?d. (x' = d)) ==> (?d. (x' = d)))
T c==> c? / c= f0 b0 c? / c= f0 b0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) ==> ((\f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) f)) = ((\f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) f))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> ! ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 * / ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 f1 * / ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 f1
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) ==> ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cl'y f0 f2 f3 f5 c==> c= cprev_el f2 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f2 f9 f5 f6 f8 c==> cMEM f7 f1 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
- |- (((A ==> (A \/ B)) ==> (A ==> (A \/ B))) = (A ==> (A \/ B)))
T c= c==> c==> f0 c\/ f0 f1 c==> f0 c\/ f0 f1 c==> f0 c\/ f0 f1
- |- ((\y. (!z1. (!f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))))))))) y)
T * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b0 c/\ c= cprev_el b7 f0 b1 c/\ c= cSND csplit_normal_list b5 b7 b2 b0 b1 b4 c/\ c= cfind_face b5 b8 b2 c/\ c= cnext_el b2 b8 b3 c~ cfinal_list b5 b7 cMEM b3 b4 f1
- |- (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- (?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))), (~ ((final_list L) r)) |- (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS r2) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l)))
T c==> c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM f2 b0 c==> c~ cfinal_list f0 f3 c? / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f3 cCONS f4 cNIL f1 cMEM b0 cCONS cFST csplit_normal_list f0 f3 f5 f6 f7 cNIL cMEM f2 b0
- (~ (r' = NIL)), (r' = s1) |- (((~ (NIL = s1)) ==> ((NIL = s1) = F)) = ((NIL = s1) = F))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c= c==> c~ c= cNIL f1 c= c= cNIL f1 cF c= c= cNIL f1 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c==> c= cprev_el f1 f5 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f3 f6 f8 c==> cMEM f7 f4 c==> c= cfind_face f0 f2 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f4 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f2 cMEM ce_list b2 ccat cs_list f0 f1 f2 cfinal_dart_list f0 f4 c==> cMEM f11 cfinal_dart_list f0 f4 c==> cMEM cf_list f0 ce_list f2 cfinal_dart_list f0 f4 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f2 c==> c= cLAST f12 f11 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f4 c==> c= cnext_el f9 f2 f13 c==> cMEM f13 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f4 cCONS cFST csplit_normal_list f0 f1 f9 f3 f6 cNIL
- |- ((((next_el f) x) = w) = ((\w. (((next_el f) x) = w)) w))
T c= c= cnext_el f0 f1 f2 * / c= cnext_el f0 f1 b0 f2
- |- (((!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))) ==> (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s))))) = (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))))
T c= c==> ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1 ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1 ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1
- (~ (s1 = NIL)) |- (~ (NIL = s1))
T c==> c~ c= f0 cNIL c~ c= cNIL f0
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (~ (s = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM v) ((final_dart_list L) N)), ((MEM w) r2), ((MEM x) r), ((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)), ((MEM r) N), ((MEM r1) N), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((contour_list L) s), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c~ c= f4 cNIL c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f4 cf_list f0 ce_list f3 c==> c= cLAST f4 f5 c==> c= cnext_el f6 f3 f7 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f8 f9 c==> c= cl'y f0 f2 f3 f10 c==> c= cl'z f0 f1 f2 f3 f8 c==> c= cSND csplit_normal_list f0 f2 f6 f10 f9 f11 c==> c= cfind_face f0 f3 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f12 f11 c==> cMEM f5 f13 c==> cMEM f5 cfinal_dart_list f0 f1 c==> cMEM f7 f11 c==> cMEM f3 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> cMEM f2 f1 c==> cMEM f13 f1 c==> cSUBSET * part cset_of_list f4 * part cset_of_list cfinal_dart_list f0 f1 c==> ccontour_list f0 f4 c==> cnormal_list f0 f1 c==> cfinal_list f0 f13 c==> cfinal_list f0 f11 c==> cmarked_list f0 f1 f2 f3 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f12 c/\ c= cLAST b0 f5 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f11 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f6 f10 f9 cNIL
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))), ((~ (x = f)) /\ ((MEM x) g)) |- ((!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) /\ ((MEM x) (((replace f) xs) g)))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c==> c/\ c~ c= f0 f1 cMEM f0 f2 c/\ ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 cMEM f0 creplace f1 f3 f2
- ((\d. (x' = d)) d) |- (((x' = d) ==> (?d. (x' = d))) = (?d. (x' = d)))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c? / c= f0 b0 c? / c= f0 b0
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) |- (((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))) = T)
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c= c==> c/\ cMEM f2 cfinal_dart_list f0 f1 cMEM f3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f2 c/\ c= cLAST b0 f3 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f1 cT
- |- (((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) ==> (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F))) = (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)))
T c= c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0
- |- ((!w. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> (((one_step_list L) x) ((f_list L) (e_list x))))))))) = T)
T c= ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cfind_face b1 b4 f0 c= cnext_el f0 b4 b0 cone_step_list b1 b4 cf_list b1 ce_list b4 cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((\d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) d)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 * / c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM r1) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM u) r2) /\ (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f8 c==> cMEM f10 f6 c==> cfinal_list f0 f10 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f9 f8 c==> cMEM f11 f10 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)))))) = T)
T c= ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cprev_el b2 f0 f2 c/\ c= cSND csplit_normal_list b0 b2 f3 f1 f2 f4 c/\ c= cfind_face b0 b3 f3 c/\ c= cnext_el f3 b3 f5 c~ cfinal_list b0 b2 cMEM f5 f4 cT
- |- ((?w. (((next_el f) x) = w)) ==> (?w. (((next_el f) x) = w)))
T c==> c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 ! ! c==> c/\ c= b1 cLAST b0 c/\ cMEM b0 cparts f0 f4 c/\ cMEM f4 f1 c/\ c~ cfinal_list f0 f4 c~ cMEM b1 cs_list f0 f2 f3 cMEM ce_list b1 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f5 f6 f8 c==> cMEM f7 f2 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))) = T)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= c==> c/\ c~ c= f0 f1 cMEM f0 f2 cMEM f0 creplace f1 f3 f2 cT
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- ((!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) ==> (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3
- (~ (A ==> (A \/ B))) |- F
T c==> c~ c==> f0 c\/ f0 f1 cF
- (~ ((final_list L) r)), (l = r), ((MEM d) l), ((MEM l) N), ((final_list L) l) |- F
T c==> c~ cfinal_list f0 f1 c==> c= f2 f1 c==> cMEM f3 f2 c==> cMEM f2 f4 c==> cfinal_list f0 f2 cF
- (x' = d) |- ((x' = d) /\ (?d. (x' = d)))
T c==> c= f0 f1 c/\ c= f0 f1 c? / c= f0 b0
- |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cmarked_list f0 f6 f1 f4 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f5 f3 f8 c==> cMEM f7 f6 c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), ((MEM r1) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> cMEM f9 f6 c==> cfinal_list f0 f9 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> c= cfind_face f0 f4 f7 c==> cMEM f10 f8 c==> cMEM f11 f9 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) xs)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 * / ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 f2
- (~ (r' = NIL)), (r' = s1) |- ((NIL = s1) = F)
T c==> c~ c= f0 cNIL c==> c= f0 f1 c= c= cNIL f1 cF
- ((\d. (x' = d)) d) |- (((\d. (x' = d)) d) /\ (?d. (x' = d)))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c? / c= f0 b0
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0
- ((~ (x = f)) /\ ((MEM x) g)) |- ((!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) ==> ((MEM x) (((replace f) xs) g)))
T c==> c/\ c~ c= f0 f1 cMEM f0 f2 c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 cMEM f0 creplace f1 f3 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f5 f6 f8 c==> cMEM f7 f2 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f2 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f3 cMEM ce_list b2 ccat cs_list f0 f1 f3 cfinal_dart_list f0 f2 c==> cMEM f11 cfinal_dart_list f0 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f2 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f3 c==> c= cLAST f12 f11 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f2 c==> c= cnext_el f9 f3 f13 c==> cMEM f13 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= ! c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 cT
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) |- (((!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))))) ==> ((\v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))))) v)) = ((\v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))))) v))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c= c==> ! c==> c/\ cMEM f2 cfinal_dart_list f0 f1 cMEM b0 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f2 c/\ c= cLAST b1 b0 cSUBSET * part cset_of_list b1 * part cset_of_list cfinal_dart_list f0 f1 * / c==> c/\ cMEM f2 cfinal_dart_list f0 f1 cMEM b0 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f2 c/\ c= cLAST b1 b0 cSUBSET * part cset_of_list b1 * part cset_of_list cfinal_dart_list f0 f1 f3 * / c==> c/\ cMEM f2 cfinal_dart_list f0 f1 cMEM b0 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f2 c/\ c= cLAST b1 b0 cSUBSET * part cset_of_list b1 * part cset_of_list cfinal_dart_list f0 f1 f3
- |- (T = (!B. (!A. ((~ (A ==> (A \/ B))) ==> F))))
T c= cT ! ! c==> c~ c==> b1 c\/ b1 b0 cF
- (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) /\ (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)))
T c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c/\ c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) = ((~ (A ==> (A \/ B))) ==> F))
T c= c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- |- (((!B. (!A. ((~ (A ==> (A \/ B))) ==> F))) ==> ((\B. (!A. ((~ (A ==> (A \/ B))) ==> F))) B)) = ((\B. (!A. ((~ (A ==> (A \/ B))) ==> F))) B))
T c= c==> ! ! c==> c~ c==> b1 c\/ b1 b0 cF * / ! c==> c~ c==> b1 c\/ b1 b0 cF f0 * / ! c==> c~ c==> b1 c\/ b1 b0 cF f0
- |- (((!f. (!w. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> (((one_step_list L) x) ((f_list L) (e_list x)))))))))) ==> ((\f. (!w. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> (((one_step_list L) x) ((f_list L) (e_list x)))))))))) f)) = ((\f. (!w. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> (((one_step_list L) x) ((f_list L) (e_list x)))))))))) f))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cfind_face b2 b5 b0 c= cnext_el b0 b5 b1 cone_step_list b2 b5 cf_list b2 ce_list b5 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cfind_face b2 b5 b0 c= cnext_el b0 b5 b1 cone_step_list b2 b5 cf_list b2 ce_list b5 f0 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cfind_face b2 b5 b0 c= cnext_el b0 b5 b1 cone_step_list b2 b5 cf_list b2 ce_list b5 f0
- (~ (s1 = NIL)) |- (((~ (NIL = s1)) ==> ((NIL = s1) = F)) = ((NIL = s1) = F))
T c==> c~ c= f0 cNIL c= c==> c~ c= cNIL f0 c= c= cNIL f0 cF c= c= cNIL f0 cF
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))), ((~ (x = f)) /\ ((MEM x) g)) |- ((MEM x) (((replace f) xs) g))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c==> c/\ c~ c= f0 f1 cMEM f0 f2 cMEM f0 creplace f1 f3 f2
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) |- (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 ! c==> c/\ cMEM f2 cfinal_dart_list f0 f1 cMEM b0 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f2 c/\ c= cLAST b1 b0 cSUBSET * part cset_of_list b1 * part cset_of_list cfinal_dart_list f0 f1
- (A ==> (A \/ B)) |- ((A ==> (A \/ B)) /\ (A ==> (A \/ B)))
T c==> c==> f0 c\/ f0 f1 c/\ c==> f0 c\/ f0 f1 c==> f0 c\/ f0 f1
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- ((\r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) r')
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 * / ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f4
- ((~ (A ==> (A \/ B))) ==> F) |- (((~ (A ==> (A \/ B))) ==> F) /\ ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c/\ c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- |- ((A ==> (A \/ B)) ==> (A ==> (A \/ B)))
T c==> c==> f0 c\/ f0 f1 c==> f0 c\/ f0 f1
- |- ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
- |- (F = (~ T))
T c= cF c~ cT
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))), (((MEM f) g) /\ ((MEM x) xs)) |- ((MEM x) (((replace f) xs) g))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c==> c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1
- |- ((T \/ t) = T)
T c= c\/ cT f0 cT
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) ==> ((\xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) xs)) = ((\xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) xs))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= c==> ! ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 * / ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 f2 * / ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) /\ (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cmarked_list f0 f6 f1 f4 c/\ c= cprev_el f1 f2 f3 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f5 f3 f8 c==> cMEM f7 f6 c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f6 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f4 cMEM ce_list b2 ccat cs_list f0 f1 f4 cfinal_dart_list f0 f6 c==> cMEM f11 cfinal_dart_list f0 f6 c==> cMEM cf_list f0 ce_list f4 cfinal_dart_list f0 f6 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f4 c==> c= cLAST f12 f11 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f6 c==> c= cnext_el f9 f4 f13 c==> cMEM f13 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- ((\w. (((next_el f) x) = w)) w) |- (((\w. (((next_el f) x) = w)) w) /\ (?w. (((next_el f) x) = w)))
T c==> * / c= cnext_el f0 f1 b0 f2 c/\ * / c= cnext_el f0 f1 b0 f2 c? / c= cnext_el f0 f1 b0
- |- (((!x. (((\d. (x' = d)) x) ==> (?d. (x' = d)))) ==> ((?d. (x' = d)) ==> (?d. (x' = d)))) = ((?d. (x' = d)) ==> (?d. (x' = d))))
T c= c==> ! c==> * / c= f0 b1 b0 c? / c= f0 b1 c==> c? / c= f0 b0 c? / c= f0 b0 c==> c? / c= f0 b0 c? / c= f0 b0
- ((set_of_list s1) SUBSET (set_of_list r2)) |- (((set_of_list s1) SUBSET (set_of_list r2)) = T)
T c==> cSUBSET * part cset_of_list f0 * part cset_of_list f1 c= cSUBSET * part cset_of_list f0 * part cset_of_list f1 cT
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) f)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 f1
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) /\ (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c/\ ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))) |- ((!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))) /\ (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))))
T c==> ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1 c/\ ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1 ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) ==> ((\g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) g)) = ((\g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) g))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> ! c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 * / c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 f3 * / c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((final_list L) r2) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c/\ cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f5 f3 f8 c==> cMEM f7 f6 c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
- (x' = d), (x' IN (set_of_list s)) |- ((d IN (set_of_list s)) = T)
T c==> c= f0 f1 c==> cIN f0 * part cset_of_list f2 c= cIN f1 * part cset_of_list f2 cT
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) /\ (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c/\ ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3
- (((next_el f) x) = w) |- ((((next_el f) x) = w) /\ (?w. (((next_el f) x) = w)))
T c==> c= cnext_el f0 f1 f2 c/\ c= cnext_el f0 f1 f2 c? / c= cnext_el f0 f1 b0
- |- (T = ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0))))
T c= cT c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (r' = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), ((HD r') = u), ((LAST r') = x), (((next_el f) x) = w), (r' = s1), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), (x' IN (set_of_list s)), ((set_of_list r') SUBSET (set_of_list r2)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) r'), ((contour_list L) ((cat s1) s)), (((one_step_list L) x) ((f_list L) (e_list x))) |- ((x' IN (set_of_list s)) /\ (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> c= cHD f1 f4 c==> c= cLAST f1 f5 c==> c= cnext_el f6 f5 f7 c==> c= f1 f8 c==> c= cfind_face f0 f9 f6 c==> c< cindexf f7 f9 f6 cindexf f7 f10 f6 c==> cMEM f7 f3 c==> cMEM f5 f3 c==> cMEM f9 f6 c==> cMEM f10 f6 c==> cMEM f3 cntrans f0 f11 f2 f5 cNUMERAL cBIT1 c_0 c==> cIN f12 * part cset_of_list f13 c==> cSUBSET * part cset_of_list f1 * part cset_of_list f3 c==> cSUBSET * part cset_of_list f13 * part cset_of_list cfinal_dart_list f0 f11 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f3 c==> ccontour_list f0 f1 c==> ccontour_list f0 ccat f8 f13 c==> cone_step_list f0 f5 cf_list f0 ce_list f5 c/\ cIN f12 * part cset_of_list f13 cIN f12 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f2 cCONS f3 cNIL f11 cCONS cFST csplit_normal_list f0 f2 f6 f9 f14 cNIL
- ((MEM (e_list x)) ((find_list N) (e_list x))) |- (T = ((MEM (e_list x)) ((find_list N) (e_list x))))
T c==> cMEM ce_list f0 cfind_list f1 ce_list f0 c= cT cMEM ce_list f0 cfind_list f1 ce_list f0
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) = T)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= ! ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 cT
- |- ((x' = d) ==> (?d. (x' = d)))
T c==> c= f0 f1 c? / c= f0 b0
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1
- (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))) |- (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))
T c==> ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1 ! c==> cMEM f0 b0 cMEM cnext_el b0 f0 b0
- |- ((~ T) = F)
T c= c~ cT cF
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (r' = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), ((HD r') = u), ((LAST r') = x), (((next_el f) x) = w), (r' = s1), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), (x' IN (set_of_list s)), ((set_of_list r') SUBSET (set_of_list r2)), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) r'), ((contour_list L) ((cat s1) s)), (((one_step_list L) x) ((f_list L) (e_list x))) |- (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= f1 cNIL c==> c~ cfinal_list f0 f2 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> c= cHD f1 f4 c==> c= cLAST f1 f5 c==> c= cnext_el f6 f5 f7 c==> c= f1 f8 c==> c= cfind_face f0 f9 f6 c==> c< cindexf f7 f9 f6 cindexf f7 f10 f6 c==> cMEM f7 f3 c==> cMEM f5 f3 c==> cMEM f9 f6 c==> cMEM f10 f6 c==> cMEM f3 cntrans f0 f11 f2 f5 cNUMERAL cBIT1 c_0 c==> cIN f12 * part cset_of_list f13 c==> cSUBSET * part cset_of_list f1 * part cset_of_list f3 c==> cSUBSET * part cset_of_list f13 * part cset_of_list cfinal_dart_list f0 f11 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f3 c==> ccontour_list f0 f1 c==> ccontour_list f0 ccat f8 f13 c==> cone_step_list f0 f5 cf_list f0 ce_list f5 cIN f12 * part cset_of_list cflatten cfilter * part cfinal_list f0 cAPPEND creplace f2 cCONS f3 cNIL f11 cCONS cFST csplit_normal_list f0 f2 f6 f9 f14 cNIL
- (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))) |- ((!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s))) = T)
T c==> ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1 c= ! c==> cMEM f0 b0 cMEM cnext_el b0 f0 b0 cT
- |- (!w. (((\w. (((next_el f) x) = w)) w) ==> (?w. (((next_el f) x) = w))))
T c==> * / c= cnext_el f0 f1 b0 f2 c? / c= cnext_el f0 f1 b0
- (~ (r' = NIL)), (r' = s1), ((MEM r) N), (x' IN (set_of_list s1)), ((set_of_list r') SUBSET (set_of_list r2)), ((contour_list L) ((cat s1) s)), ((final_list L) r2), (((one_step_list L) x) ((f_list L) (e_list x))) |- (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c==> cMEM f2 f3 c==> cIN f4 * part cset_of_list f1 c==> cSUBSET * part cset_of_list f0 * part cset_of_list f5 c==> ccontour_list f6 ccat f1 f7 c==> cfinal_list f6 f5 c==> cone_step_list f6 f8 cf_list f6 ce_list f8 cIN f4 * part cset_of_list cflatten cfilter * part cfinal_list f6 cAPPEND creplace f2 cCONS f5 cNIL f3 cCONS cFST csplit_normal_list f6 f2 f9 f10 f11 cNIL
- (~ (r' = NIL)), (r' = s1) |- (~ (NIL = s1))
T c==> c~ c= f0 cNIL c==> c= f0 f1 c~ c= cNIL f1
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))) g)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 * / c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0 f3
- |- (((!z. (!y. (!z1. (!f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)))))))))))) ==> ((\z. (!y. (!z1. (!f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)))))))))))) z)) = ((\z. (!y. (!z1. (!f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)))))))))))) z))
T c= c==> ! ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c= cl'z b6 b7 b8 b9 b0 c/\ c= cl'y b6 b8 b9 b1 c/\ c= cprev_el b8 b0 b2 c/\ c= cSND csplit_normal_list b6 b8 b3 b1 b2 b5 c/\ c= cfind_face b6 b9 b3 c/\ c= cnext_el b3 b9 b4 c~ cfinal_list b6 b8 cMEM b4 b5 * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c= cl'z b6 b7 b8 b9 b0 c/\ c= cl'y b6 b8 b9 b1 c/\ c= cprev_el b8 b0 b2 c/\ c= cSND csplit_normal_list b6 b8 b3 b1 b2 b5 c/\ c= cfind_face b6 b9 b3 c/\ c= cnext_el b3 b9 b4 c~ cfinal_list b6 b8 cMEM b4 b5 f0 * / ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b6 c/\ cgood_list_nodes b6 c/\ cmarked_list b6 b7 b8 b9 c/\ c= cl'z b6 b7 b8 b9 b0 c/\ c= cl'y b6 b8 b9 b1 c/\ c= cprev_el b8 b0 b2 c/\ c= cSND csplit_normal_list b6 b8 b3 b1 b2 b5 c/\ c= cfind_face b6 b9 b3 c/\ c= cnext_el b3 b9 b4 c~ cfinal_list b6 b8 cMEM b4 b5 f0
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) x)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 * / ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 f0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))), (((MEM f) g) /\ ((MEM x) xs)) |- ((((MEM f) g) /\ ((MEM x) xs)) /\ ((MEM x) (((replace f) xs) g)))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c==> c/\ cMEM f0 f1 cMEM f2 f3 c/\ c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- ((\y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))) y)
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 * / c==> c/\ c= b0 cLAST f4 c/\ cMEM f4 cparts f0 f5 c/\ cMEM f5 f1 c/\ c~ cfinal_list f0 f5 c~ cMEM b0 cs_list f0 f2 f3 cMEM ce_list b0 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 f6
- (((MEM f) g) /\ ((MEM x) xs)) |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) ==> ((MEM x) (((replace f) xs) g)))
T c==> c/\ cMEM f0 f1 cMEM f2 f3 c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 cMEM f2 creplace f0 f3 f1
- (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))) |- ((\x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))) x)
T c==> ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1 * / ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1 f0
- |- (((~ (A ==> (A \/ B))) ==> F) = (A ==> (A \/ B)))
T c= c==> c~ c==> f0 c\/ f0 f1 cF c==> f0 c\/ f0 f1
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- (~ ((final_list L) r)), (l = r), ((MEM d) l), ((MEM l) N), ((final_list L) l) |- ((l = r) /\ F)
T c==> c~ cfinal_list f0 f1 c==> c= f2 f1 c==> cMEM f3 f2 c==> cMEM f2 f4 c==> cfinal_list f0 f2 c/\ c= f2 f1 cF
- |- ((!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 f1 c/\ c= cprev_el b4 f0 f2 c/\ c= cSND csplit_normal_list b2 b4 f3 f1 f2 b1 c/\ c= cfind_face b2 b5 f3 c/\ c= cnext_el f3 b5 b0 c~ cfinal_list b2 b4 cMEM b0 b1 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM r1) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f8 c==> cMEM f10 f6 c==> cfinal_list f0 f10 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f11 f10 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- |- ((\w. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> (((one_step_list L) x) ((f_list L) (e_list x))))))))) w)
T * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cfind_face b1 b4 f0 c= cnext_el f0 b4 b0 cone_step_list b1 b4 cf_list b1 ce_list b4 f1
- ((MEM r) N), (x' IN (set_of_list r2)), ((final_list L) r2) |- ((x' IN (set_of_list r2)) /\ (x' IN (set_of_list (flatten ((filter (final_list L)) ((APPEND (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))
T c==> cMEM f0 f1 c==> cIN f2 * part cset_of_list f3 c==> cfinal_list f4 f3 c/\ cIN f2 * part cset_of_list f3 cIN f2 * part cset_of_list cflatten cfilter * part cfinal_list f4 cAPPEND creplace f0 cCONS f3 cNIL f1 cCONS cFST csplit_normal_list f4 f0 f5 f6 f7 cNIL
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2
- |- (((!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)))))))) ==> ((\w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)))))))) w)) = ((\w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)))))))) w))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 f1 c/\ c= cprev_el b4 f0 f2 c/\ c= cSND csplit_normal_list b2 b4 f3 f1 f2 b1 c/\ c= cfind_face b2 b5 f3 c/\ c= cnext_el f3 b5 b0 c~ cfinal_list b2 b4 cMEM b0 b1 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 f1 c/\ c= cprev_el b4 f0 f2 c/\ c= cSND csplit_normal_list b2 b4 f3 f1 f2 b1 c/\ c= cfind_face b2 b5 f3 c/\ c= cnext_el f3 b5 b0 c~ cfinal_list b2 b4 cMEM b0 b1 f4 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 f1 c/\ c= cprev_el b4 f0 f2 c/\ c= cSND csplit_normal_list b2 b4 f3 f1 f2 b1 c/\ c= cfind_face b2 b5 f3 c/\ c= cnext_el f3 b5 b0 c~ cfinal_list b2 b4 cMEM b0 b1 f4
- (((next_el f) x) = w) |- ((\w. (((next_el f) x) = w)) w)
T c==> c= cnext_el f0 f1 f2 * / c= cnext_el f0 f1 b0 f2
- (good_list L) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cl'y f0 f2 f3 f5 c==> c= cprev_el f2 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f2 f9 f5 f6 f8 c==> cMEM f7 f1 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> cMEM f11 cfinal_dart_list f0 f1 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f3 c==> c= cLAST f12 f11 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f1 c==> c= cnext_el f9 f3 f13 c==> cMEM f13 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f9 f5 f6 cNIL
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))) f)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 * / ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2 f1
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) ==> ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs)) = ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> ! ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2
- (x' = d) |- ((\d. (x' = d)) d)
T c==> c= f0 f1 * / c= f0 b0 f1
- |- ((!A. (P A)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) ==> (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))))) = (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))))
T c= c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3
- |- (((!z1. (!f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)))))))))) ==> ((\z1. (!f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)))))))))) z1)) = ((\z1. (!f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2)))))))))) z1))
T c= c==> ! ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 f1 c/\ c= cprev_el b6 f0 b0 c/\ c= cSND csplit_normal_list b4 b6 b1 f1 b0 b3 c/\ c= cfind_face b4 b7 b1 c/\ c= cnext_el b1 b7 b2 c~ cfinal_list b4 b6 cMEM b2 b3 * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 f1 c/\ c= cprev_el b6 f0 b0 c/\ c= cSND csplit_normal_list b4 b6 b1 f1 b0 b3 c/\ c= cfind_face b4 b7 b1 c/\ c= cnext_el b1 b7 b2 c~ cfinal_list b4 b6 cMEM b2 b3 f2 * / ! ! ! ! ! ! ! c==> c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 f0 c/\ c= cl'y b4 b6 b7 f1 c/\ c= cprev_el b6 f0 b0 c/\ c= cSND csplit_normal_list b4 b6 b1 f1 b0 b3 c/\ c= cfind_face b4 b7 b1 c/\ c= cnext_el b1 b7 b2 c~ cfinal_list b4 b6 cMEM b2 b3 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((MEM u) r2), ((MEM v) r1), ((MEM r1) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM v) r1) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> c= cfind_face f0 f4 f7 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f11 f6 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c/\ cMEM f10 f11 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- (?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))), (~ ((final_list L) r)) |- ((?l. ((((final_list L) l) /\ ((MEM l) N)) /\ ((MEM d) l))) /\ (?l. ((((final_list L) l) /\ (((MEM l) (((replace r) ((CONS r2) NIL)) N)) \/ ((MEM l) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))) /\ ((MEM d) l))))
T c==> c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM f2 b0 c==> c~ cfinal_list f0 f3 c/\ c? / c/\ c/\ cfinal_list f0 b0 cMEM b0 f1 cMEM f2 b0 c? / c/\ c/\ cfinal_list f0 b0 c\/ cMEM b0 creplace f3 cCONS f4 cNIL f1 cMEM b0 cCONS cFST csplit_normal_list f0 f3 f5 f6 f7 cNIL cMEM f2 b0
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM x) r), ((MEM r) N), ((MEM r1) N), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))))
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f4 f5 c==> c= cl'y f0 f2 f3 f6 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cSND csplit_normal_list f0 f2 f7 f6 f5 f8 c==> c= cfind_face f0 f3 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f9 f8 c==> cMEM f10 f11 c==> cMEM f3 f2 c==> cMEM f2 f1 c==> cMEM f11 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f11 c==> cfinal_list f0 f8 c==> cmarked_list f0 f1 f2 f3 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> cMEM f10 cfinal_dart_list f0 f1 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f9 c/\ c= cLAST b0 f10 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f8 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f7 f6 f5 cNIL
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1 cT
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0
- |- (((!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) ==> (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))))) = (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))))
T c= c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))) |- ((((MEM x) s) ==> ((MEM ((next_el s) x)) s)) = T)
T c==> ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1 c= c==> cMEM f0 f1 cMEM cnext_el f1 f0 f1 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cSND csplit_normal_list f0 f1 f7 f5 f3 f8 c==> cfinal_list f0 f9 c==> cfinal_list f0 f8 c==> cmarked_list f0 f6 f1 f4 c==> cMEM f9 f6 c==> c= cfind_face f0 f4 f7 c==> cMEM f10 f8 c==> cMEM f11 f9 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f7 f5 f3 cNIL
- ((~ (A ==> (A \/ B))) ==> F), (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) |- (((~ (A ==> (A \/ B))) ==> F) /\ ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c/\ c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) |- ((((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N)))) = T)
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c= c==> c/\ c= f4 cLAST f5 c/\ cMEM f5 cparts f0 f6 c/\ cMEM f6 f1 c/\ c~ cfinal_list f0 f6 c~ cMEM f4 cs_list f0 f2 f3 cMEM ce_list f4 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 cT
- |- (((\N'. (f N')) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))))) = T)
T c= ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cprev_el b3 f0 f2 c/\ c= cSND csplit_normal_list b1 b3 f3 f1 f2 b0 c/\ c= cfind_face b1 b4 f3 c/\ c= cnext_el f3 b4 f4 c~ cfinal_list b1 b3 cMEM f4 b0 cT
- (!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))), (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = ((f_list L) (e_list x))) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((SND (((((split_normal_list L) r) f) y) z1)) = r2), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM u) r2), ((MEM v) r1), ((MEM v) ((final_dart_list L) N)), ((MEM x) r), ((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)), ((MEM r) N), ((MEM r1) N), ((normal_list L) N), ((final_list L) r1), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = ((f_list L) (e_list x))) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f1 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f2 f3 cMEM ce_list b2 ccat cs_list f0 f2 f3 cfinal_dart_list f0 f1 c==> c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 cf_list f0 ce_list f3 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f1 c==> c~ cfinal_list f0 f2 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f5 f6 c==> c= cl'y f0 f2 f3 f7 c==> c= cl'z f0 f1 f2 f3 f5 c==> c= cSND csplit_normal_list f0 f2 f8 f7 f6 f9 c==> c= cfind_face f0 f3 f8 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f10 f9 c==> cMEM f4 f11 c==> cMEM f4 cfinal_dart_list f0 f1 c==> cMEM f3 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f1 c==> cMEM f2 f1 c==> cMEM f11 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f11 c==> cfinal_list f0 f9 c==> cmarked_list f0 f1 f2 f3 c/\ c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 cf_list f0 ce_list f3 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f4 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f2 cCONS f9 cNIL f1 cCONS cFST csplit_normal_list f0 f2 f8 f7 f6 cNIL
- (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))) |- (((!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s))) ==> ((\s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s))) s)) = ((\s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s))) s))
T c==> ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1 c= c==> ! c==> cMEM f0 b0 cMEM cnext_el b0 f0 b0 * / c==> cMEM f0 b0 cMEM cnext_el b0 f0 b0 f1 * / c==> cMEM f0 b0 cMEM cnext_el b0 f0 b0 f1
- (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))), ((MEM x) s) |- (((MEM x) s) /\ ((MEM ((next_el s) x)) s))
T c==> ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1 c==> cMEM f0 f1 c/\ cMEM f0 f1 cMEM cnext_el f1 f0 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = x) /\ (((set_of_list r') SUBSET (set_of_list r2)) /\ (~ (r' = NIL))))))), (~ (s = NIL)), (~ ((final_list L) r)), (uniq r2), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD s) = ((f_list L) (e_list x))), ((LAST s) = v), (((next_el f) x) = w), (((find_face L) x) = f), (((find_face L) y) = f), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM w) r2), ((MEM x) r2), ((MEM y) f), ((MEM z) f), ((MEM r) N), ((MEM r2) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))), ((all (\l. (~ (l = NIL)))) L), ((loop_list L) r2), ((contour_list L) s), ((final_list L) r2), ((((marked_list L) N) r) x) |- ((?r'. (((contour_list L) r') /\ (((HD r') = u) /\ (((LAST r') = x) /\ (((set_of_list r') SUBSET (set_of_list r2)) /\ (~ (r' = NIL))))))) /\ (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c? / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list f3 c~ c= b0 cNIL c==> c~ c= f4 cNIL c==> c~ cfinal_list f0 f5 c==> cuniq f3 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD f4 cf_list f0 ce_list f2 c==> c= cLAST f4 f6 c==> c= cnext_el f7 f2 f8 c==> c= cfind_face f0 f2 f7 c==> c= cfind_face f0 f9 f7 c==> c< cindexf f8 f9 f7 cindexf f8 f10 f7 c==> cMEM f8 f3 c==> cMEM f2 f3 c==> cMEM f9 f7 c==> cMEM f10 f7 c==> cMEM f5 f11 c==> cMEM f3 cntrans f0 f11 f5 f2 cNUMERAL cBIT1 c_0 c==> cSUBSET * part cset_of_list f4 * part cset_of_list cfinal_dart_list f0 f11 c==> call / c~ c= b0 cNIL f0 c==> cloop_list f0 f3 c==> ccontour_list f0 f4 c==> cfinal_list f0 f3 c==> cmarked_list f0 f11 f5 f2 c/\ c? / c/\ ccontour_list f0 b0 c/\ c= cHD b0 f1 c/\ c= cLAST b0 f2 c/\ cSUBSET * part cset_of_list b0 * part cset_of_list f3 c~ c= b0 cNIL c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f1 c/\ c= cLAST b0 f6 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f5 cCONS f3 cNIL f11 cCONS cFST csplit_normal_list f0 f5 f7 f9 f12 cNIL
- ((((indexf w) y) f) < (((indexf w) z) f)) |- (((((indexf w) y) f) < (((indexf w) z) f)) = T)
T c==> c< cindexf f0 f1 f2 cindexf f0 f3 f2 c= c< cindexf f0 f1 f2 cindexf f0 f3 f2 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((prev_el r) z) = z1) ==> (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> ((!r'. (!p. (!y. (((y = (LAST p)) /\ (((MEM p) ((parts L) r')) /\ (((MEM r') N) /\ ((~ ((final_list L) r')) /\ (~ ((MEM y) (((s_list L) r) x))))))) ==> ((MEM (e_list y)) ((cat (((s_list L) r) x)) ((final_dart_list L) N))))))) ==> (((MEM v) ((final_dart_list L) N)) ==> (((MEM ((f_list L) (e_list x))) ((final_dart_list L) N)) ==> (((contour_list L) s) ==> ((~ (s = NIL)) ==> (((HD s) = ((f_list L) (e_list x))) ==> (((LAST s) = v) ==> (((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))) ==> ((((next_el f) x) = w) ==> (((MEM w) r2) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cprev_el f1 f4 f6 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f5 f6 f8 c==> cMEM f7 f2 c==> c= cfind_face f0 f3 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> ! ! ! c==> c/\ c= b2 cLAST b1 c/\ cMEM b1 cparts f0 b0 c/\ cMEM b0 f2 c/\ c~ cfinal_list f0 b0 c~ cMEM b2 cs_list f0 f1 f3 cMEM ce_list b2 ccat cs_list f0 f1 f3 cfinal_dart_list f0 f2 c==> cMEM f11 cfinal_dart_list f0 f2 c==> cMEM cf_list f0 ce_list f3 cfinal_dart_list f0 f2 c==> ccontour_list f0 f12 c==> c~ c= f12 cNIL c==> c= cHD f12 cf_list f0 ce_list f3 c==> c= cLAST f12 f11 c==> cSUBSET * part cset_of_list f12 * part cset_of_list cfinal_dart_list f0 f2 c==> c= cnext_el f9 f3 f13 c==> cMEM f13 f8 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f2 cCONS cFST csplit_normal_list f0 f1 f9 f5 f6 cNIL
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- |- ((!B. (!A. (A ==> (A \/ B)))) = ((!A. (A ==> (A \/ T))) /\ (!A. (A ==> (A \/ F)))))
T c= ! ! c==> b1 c\/ b1 b0 c/\ ! c==> b0 c\/ b0 cT ! c==> b0 c\/ b0 cF
- |- ((((\d. (x' = d)) d) ==> (?d. (x' = d))) = T)
T c= c==> * / c= f0 b0 f1 c? / c= f0 b0 cT
- (!x. (((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x))) |- ((((MEM x) (((((ntrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> ((loop_list L) x)) = T)
T c==> ! c==> cMEM b0 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 b0 c= c==> cMEM f4 cntrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cloop_list f0 f4 cT
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) /\ (((final_list L) r1) ==> (((final_list L) r2) ==> (((SND (((((split_normal_list L) r) f) y) z1)) = r2) ==> (((MEM r1) N) ==> ((((find_face L) x) = f) ==> (((MEM u) r2) ==> (((MEM v) r1) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list (flatten ((filter (final_list L)) ((cat (((replace r) ((CONS r2) NIL)) N)) ((CONS (FST (((((split_normal_list L) r) f) y) z1))) NIL)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> cmarked_list f0 f6 f1 f4 c/\ c= cprev_el f1 f2 f3 c==> cfinal_list f0 f7 c==> cfinal_list f0 f8 c==> c= cSND csplit_normal_list f0 f1 f9 f5 f3 f8 c==> cMEM f7 f6 c==> c= cfind_face f0 f4 f9 c==> cMEM f10 f8 c==> cMEM f11 f7 c? / c/\ ccontour_list f0 b0 c/\ c~ c= b0 cNIL c/\ c= cHD b0 f10 c/\ c= cLAST b0 f11 cSUBSET * part cset_of_list b0 * part cset_of_list cflatten cfilter * part cfinal_list f0 ccat creplace f1 cCONS f8 cNIL f6 cCONS cFST csplit_normal_list f0 f1 f9 f5 f3 cNIL
- |- (((!y. (!z1. (!f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))))))))) ==> ((\y. (!z1. (!f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))))))))) y)) = ((\y. (!z1. (!f. (!w. (!r2. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((prev_el r) z) = z1) /\ (((SND (((((split_normal_list L) r) f) y) z1)) = r2) /\ ((((find_face L) x) = f) /\ ((((next_el f) x) = w) /\ (~ ((final_list L) r))))))))))) ==> ((MEM w) r2))))))))))) y))
T c= c==> ! ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b0 c/\ c= cprev_el b7 f0 b1 c/\ c= cSND csplit_normal_list b5 b7 b2 b0 b1 b4 c/\ c= cfind_face b5 b8 b2 c/\ c= cnext_el b2 b8 b3 c~ cfinal_list b5 b7 cMEM b3 b4 * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b0 c/\ c= cprev_el b7 f0 b1 c/\ c= cSND csplit_normal_list b5 b7 b2 b0 b1 b4 c/\ c= cfind_face b5 b8 b2 c/\ c= cnext_el b2 b8 b3 c~ cfinal_list b5 b7 cMEM b3 b4 f1 * / ! ! ! ! ! ! ! ! c==> c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c= cl'z b5 b6 b7 b8 f0 c/\ c= cl'y b5 b7 b8 b0 c/\ c= cprev_el b7 f0 b1 c/\ c= cSND csplit_normal_list b5 b7 b2 b0 b1 b4 c/\ c= cfind_face b5 b8 b2 c/\ c= cnext_el b2 b8 b3 c~ cfinal_list b5 b7 cMEM b3 b4 f1
- (s1 = NIL) |- (NIL = s1)
T c==> c= f0 cNIL c= cNIL f0
- (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))), ((MEM x) s) |- ((!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s)))) /\ ((MEM ((next_el s) x)) s))
T c==> ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1 c==> cMEM f0 f1 c/\ ! ! c==> cMEM b0 b1 cMEM cnext_el b1 b0 b1 cMEM cnext_el f1 f0 f1
- |- ((\A. ((~ (A ==> (A \/ B))) ==> F)) A)
T * / c==> c~ c==> b0 c\/ b0 f0 cF f1
- |- (~ (~ T))
T c~ c~ cT
- (~ (A ==> (A \/ B))) |- ((~ (A ==> (A \/ B))) /\ F)
T c==> c~ c==> f0 c\/ f0 f1 c/\ c~ c==> f0 c\/ f0 f1 cF
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))), ((~ (x = f)) /\ ((MEM x) g)) |- (((~ (x = f)) /\ ((MEM x) g)) /\ ((MEM x) (((replace f) xs) g)))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c==> c/\ c~ c= f0 f1 cMEM f0 f2 c/\ c/\ c~ c= f0 f1 cMEM f0 f2 cMEM f0 creplace f1 f3 f2
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- (!u. (!v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N))))))))))) |- ((\v. ((((MEM u) ((final_dart_list L) N)) /\ ((MEM v) ((final_dart_list L) N))) ==> (?s. (((contour_list L) s) /\ ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ ((set_of_list s) SUBSET (set_of_list ((final_dart_list L) N)))))))))) v)
T c==> ! ! c==> c/\ cMEM b0 cfinal_dart_list f0 f1 cMEM b1 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b2 c/\ c~ c= b2 cNIL c/\ c= cHD b2 b0 c/\ c= cLAST b2 b1 cSUBSET * part cset_of_list b2 * part cset_of_list cfinal_dart_list f0 f1 * / c==> c/\ cMEM f2 cfinal_dart_list f0 f1 cMEM b0 cfinal_dart_list f0 f1 c? / c/\ ccontour_list f0 b1 c/\ c~ c= b1 cNIL c/\ c= cHD b1 f2 c/\ c= cLAST b1 b0 cSUBSET * part cset_of_list b1 * part cset_of_list cfinal_dart_list f0 f1 f3
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- (((!w. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> (((one_step_list L) x) ((f_list L) (e_list x))))))))) ==> ((\w. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> (((one_step_list L) x) ((f_list L) (e_list x))))))))) w)) = ((\w. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> (((one_step_list L) x) ((f_list L) (e_list x))))))))) w))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cfind_face b1 b4 f0 c= cnext_el f0 b4 b0 cone_step_list b1 b4 cf_list b1 ce_list b4 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cfind_face b1 b4 f0 c= cnext_el f0 b4 b0 cone_step_list b1 b4 cf_list b1 ce_list b4 f1 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cfind_face b1 b4 f0 c= cnext_el f0 b4 b0 cone_step_list b1 b4 cf_list b1 ce_list b4 f1
- (r' = s1), ((set_of_list r') SUBSET (set_of_list r2)) |- (((set_of_list s1) SUBSET (set_of_list r2)) = T)
T c==> c= f0 f1 c==> cSUBSET * part cset_of_list f0 * part cset_of_list f2 c= cSUBSET * part cset_of_list f1 * part cset_of_list f2 cT
