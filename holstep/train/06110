N Hypermap.lemma_walkup_count_not_splitting_components
C |- (!H. (!x. (((x IN (dart H)) /\ (((dart_nondegenerate H) x) /\ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))))) ==> ((number_of_components H) = (number_of_components ((edge_walkup H) x))))))
T c==> c/\ cIN f0 * part cdart f1 c/\ cdart_nondegenerate f1 f0 c= * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 c= cnumber_of_components f1 cnumber_of_components cedge_walkup f1 f0
D TRUTH
A |- T
T cT
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_DIFF
A |- (!s. (!t. (!x. ((x IN (s DIFF t)) = ((x IN s) /\ (~ (x IN t)))))))
T c= cIN f0 * * part cDIFF f1 f2 c/\ cIN f0 f1 c~ cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D IN_DELETE
A |- (!s. (!x. (!y. ((x IN (s DELETE y)) = ((x IN s) /\ (~ (x = y)))))))
T c= cIN f0 * * part cDELETE f1 f2 c/\ cIN f0 f1 c~ c= f0 f2
D Hypermap.number_of_components
A |- (!H. ((number_of_components H) = (CARD (set_of_components H))))
T c= cnumber_of_components f0 cCARD * part cset_of_components f0
D Hypermap.dart_nondegenerate
A |- (!H. (!x. (((dart_nondegenerate H) x) = ((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x)))))))
T c= cdart_nondegenerate f0 f1 c/\ c~ c= cedge_map f0 f1 f1 c/\ c~ c= cnode_map f0 f1 f1 c~ c= cface_map f0 f1 f1
D Hypermap.lemma_node_map_walkup_in_dart
A |- (!H. (!x. (((x IN (dart H)) /\ (~ (((node_map H) x) = x))) ==> ((((node_map H) x) IN (dart ((edge_walkup H) x))) /\ (((inverse (node_map H)) x) IN (dart ((edge_walkup H) x)))))))
T c==> c/\ cIN f0 * part cdart f1 c~ c= cnode_map f1 f0 f0 c/\ cIN cnode_map f1 f0 * part cdart cedge_walkup f1 f0 cIN cinverse * part cnode_map f1 f0 * part cdart cedge_walkup f1 f0
D Hypermap.lemma_walkup_components
A |- (!H. (!x. ((x IN (dart H)) ==> (((set_of_components H) DELETE ((comb_component H) x)) = ((set_of_components ((edge_walkup H) x)) DIFF (((comb_component ((edge_walkup H) x)) ((node_map H) x)) INSERT (((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)) INSERT EMPTY)))))))
T c==> cIN f0 * part cdart f1 c= * * part cDELETE * part cset_of_components f1 * * part ccomb_component f1 f0 * * part cDIFF * part cset_of_components cedge_walkup f1 f0 * * part cINSERT * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part cINSERT * * part ccomb_component cedge_walkup f1 f0 cinverse * part cedge_map f1 f0 part cEMPTY
D Hypermap.CARD_MINUS_ONE
A |- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))))
T c==> c/\ cFINITE f0 cIN f1 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0
D Hypermap.FINITE_HYPERMAP_COMPONENTS
A |- (!H. (FINITE (set_of_components H)))
T cFINITE * part cset_of_components f0
D Hypermap.lemma_in_components
A |- (!H. (!x. ((x IN (dart H)) = (((comb_component H) x) IN (set_of_components H)))))
T c= cIN f0 * part cdart f1 cIN * * part ccomb_component f1 f0 * part cset_of_components f1
+ |- (((!x. (((dart_nondegenerate H) x) = ((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x)))))) ==> ((\x. (((dart_nondegenerate H) x) = ((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x)))))) x)) = ((\x. (((dart_nondegenerate H) x) = ((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x)))))) x))
T c= c==> ! c= cdart_nondegenerate f0 b0 c/\ c~ c= cedge_map f0 b0 b0 c/\ c~ c= cnode_map f0 b0 b0 c~ c= cface_map f0 b0 b0 * / c= cdart_nondegenerate f0 b0 c/\ c~ c= cedge_map f0 b0 b0 c/\ c~ c= cnode_map f0 b0 b0 c~ c= cface_map f0 b0 b0 f1 * / c= cdart_nondegenerate f0 b0 c/\ c~ c= cedge_map f0 b0 b0 c/\ c~ c= cnode_map f0 b0 b0 c~ c= cface_map f0 b0 b0 f1
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ |- ((((comb_component H) x) IN (set_of_components H)) = ((FINITE (set_of_components H)) /\ (((comb_component H) x) IN (set_of_components H))))
T c= cIN * * part ccomb_component f0 f1 * part cset_of_components f0 c/\ cFINITE * part cset_of_components f0 cIN * * part ccomb_component f0 f1 * part cset_of_components f0
+ ((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x)))) |- (~ (((node_map H) x) = x))
T c==> c/\ c~ c= cedge_map f0 f1 f1 c/\ c~ c= cnode_map f0 f1 f1 c~ c= cface_map f0 f1 f1 c~ c= cnode_map f0 f1 f1
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))), (((set_of_components H) DELETE ((comb_component H) x)) = ((set_of_components ((edge_walkup H) x)) DIFF (((comb_component ((edge_walkup H) x)) ((node_map H) x)) INSERT (((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)) INSERT EMPTY)))), (x IN (dart H)), ((dart_nondegenerate H) x) |- ((((set_of_components H) DELETE ((comb_component H) x)) = ((set_of_components ((edge_walkup H) x)) DIFF (((comb_component ((edge_walkup H) x)) ((node_map H) x)) INSERT (((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)) INSERT EMPTY)))) /\ (((CARD ((set_of_components H) DELETE ((comb_component H) x))) + (NUMERAL (BIT1 _0))) = (CARD (set_of_components ((edge_walkup H) x)))))
T c==> c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> c= * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f1 * * part cDIFF * part cset_of_components cedge_walkup f0 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 part cEMPTY c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c/\ c= * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f1 * * part cDIFF * part cset_of_components cedge_walkup f0 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 part cEMPTY c= c+ cCARD * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f1 cNUMERAL cBIT1 c_0 cCARD * part cset_of_components cedge_walkup f0 f1
+ |- ((((CARD ((set_of_components ((edge_walkup H) x)) DELETE ((comb_component ((edge_walkup H) x)) ((node_map H) x)))) + (NUMERAL (BIT1 _0))) = (CARD (set_of_components ((edge_walkup H) x)))) = (((CARD ((set_of_components ((edge_walkup H) x)) DIFF (((comb_component ((edge_walkup H) x)) ((node_map H) x)) INSERT (((comb_component ((edge_walkup H) x)) ((node_map H) x)) INSERT EMPTY)))) + (NUMERAL (BIT1 _0))) = (CARD (set_of_components ((edge_walkup H) x)))))
T c= c= c+ cCARD * * part cDELETE * part cset_of_components cedge_walkup f0 f1 * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 cNUMERAL cBIT1 c_0 cCARD * part cset_of_components cedge_walkup f0 f1 c= c+ cCARD * * part cDIFF * part cset_of_components cedge_walkup f0 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 part cEMPTY cNUMERAL cBIT1 c_0 cCARD * part cset_of_components cedge_walkup f0 f1
+ (((set_of_components H) DELETE ((comb_component H) x)) = ((set_of_components ((edge_walkup H) x)) DIFF (((comb_component ((edge_walkup H) x)) ((node_map H) x)) INSERT (((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)) INSERT EMPTY)))) |- ((((CARD ((set_of_components ((edge_walkup H) x)) DIFF (((comb_component ((edge_walkup H) x)) ((node_map H) x)) INSERT (((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)) INSERT EMPTY)))) + (NUMERAL (BIT1 _0))) = (CARD (set_of_components ((edge_walkup H) x)))) = (((CARD ((set_of_components H) DELETE ((comb_component H) x))) + (NUMERAL (BIT1 _0))) = (CARD (set_of_components ((edge_walkup H) x)))))
T c==> c= * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f1 * * part cDIFF * part cset_of_components cedge_walkup f0 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 part cEMPTY c= c= c+ cCARD * * part cDIFF * part cset_of_components cedge_walkup f0 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 part cEMPTY cNUMERAL cBIT1 c_0 cCARD * part cset_of_components cedge_walkup f0 f1 c= c+ cCARD * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f1 cNUMERAL cBIT1 c_0 cCARD * part cset_of_components cedge_walkup f0 f1
+ (x IN (dart H)), ((dart_nondegenerate H) x) |- (((CARD ((set_of_components ((edge_walkup H) x)) DIFF (((comb_component ((edge_walkup H) x)) ((node_map H) x)) INSERT (((comb_component ((edge_walkup H) x)) ((node_map H) x)) INSERT EMPTY)))) + (NUMERAL (BIT1 _0))) = (CARD (set_of_components ((edge_walkup H) x))))
T c==> cIN f0 * part cdart f1 c==> cdart_nondegenerate f1 f0 c= c+ cCARD * * part cDIFF * part cset_of_components cedge_walkup f1 f0 * * part cINSERT * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * * part cINSERT * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 part cEMPTY cNUMERAL cBIT1 c_0 cCARD * part cset_of_components cedge_walkup f1 f0
+ |- ((\x. (((dart_nondegenerate H) x) = ((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x)))))) x)
T * / c= cdart_nondegenerate f0 b0 c/\ c~ c= cedge_map f0 b0 b0 c/\ c~ c= cnode_map f0 b0 b0 c~ c= cface_map f0 b0 b0 f1
+ (((CARD ((set_of_components ((edge_walkup H) x)) DELETE ((comb_component ((edge_walkup H) x)) ((node_map H) x)))) + (NUMERAL (BIT1 _0))) = (CARD (set_of_components ((edge_walkup H) x)))) |- ((CARD (set_of_components ((edge_walkup H) x))) = ((CARD ((set_of_components ((edge_walkup H) x)) DELETE ((comb_component ((edge_walkup H) x)) ((node_map H) x)))) + (NUMERAL (BIT1 _0))))
T c==> c= c+ cCARD * * part cDELETE * part cset_of_components cedge_walkup f0 f1 * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 cNUMERAL cBIT1 c_0 cCARD * part cset_of_components cedge_walkup f0 f1 c= cCARD * part cset_of_components cedge_walkup f0 f1 c+ cCARD * * part cDELETE * part cset_of_components cedge_walkup f0 f1 * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 cNUMERAL cBIT1 c_0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))), (x IN (dart H)), ((dart_nondegenerate H) x) |- (((CARD (set_of_components H)) = ((CARD ((set_of_components H) DELETE ((comb_component H) x))) + (NUMERAL (BIT1 _0)))) ==> ((((set_of_components H) DELETE ((comb_component H) x)) = ((set_of_components ((edge_walkup H) x)) DIFF (((comb_component ((edge_walkup H) x)) ((node_map H) x)) INSERT (((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)) INSERT EMPTY)))) ==> ((CARD (set_of_components H)) = (CARD (set_of_components ((edge_walkup H) x))))))
T c==> c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c==> c= cCARD * part cset_of_components f0 c+ cCARD * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f1 cNUMERAL cBIT1 c_0 c==> c= * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f1 * * part cDIFF * part cset_of_components cedge_walkup f0 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 part cEMPTY c= cCARD * part cset_of_components f0 cCARD * part cset_of_components cedge_walkup f0 f1
+ (x IN (dart H)) |- (((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x)))) ==> (((comb_component ((edge_walkup H) x)) ((node_map H) x)) IN (set_of_components ((edge_walkup H) x))))
T c==> cIN f0 * part cdart f1 c==> c/\ c~ c= cedge_map f1 f0 f0 c/\ c~ c= cnode_map f1 f0 f0 c~ c= cface_map f1 f0 f0 cIN * * part ccomb_component cedge_walkup f1 f0 cnode_map f1 f0 * part cset_of_components cedge_walkup f1 f0
+ |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))), (x IN (dart H)), ((dart_nondegenerate H) x) |- ((((set_of_components H) DELETE ((comb_component H) x)) = ((set_of_components ((edge_walkup H) x)) DIFF (((comb_component ((edge_walkup H) x)) ((node_map H) x)) INSERT (((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)) INSERT EMPTY)))) ==> ((CARD (set_of_components H)) = (CARD (set_of_components ((edge_walkup H) x)))))
T c==> c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c==> c= * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f1 * * part cDIFF * part cset_of_components cedge_walkup f0 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 part cEMPTY c= cCARD * part cset_of_components f0 cCARD * part cset_of_components cedge_walkup f0 f1
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- (((!H. (!x. (((dart_nondegenerate H) x) = ((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x))))))) ==> ((\H. (!x. (((dart_nondegenerate H) x) = ((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x))))))) H)) = ((\H. (!x. (((dart_nondegenerate H) x) = ((~ (((edge_map H) x) = x)) /\ ((~ (((node_map H) x) = x)) /\ (~ (((face_map H) x) = x))))))) H))
T c= c==> ! ! c= cdart_nondegenerate b0 b1 c/\ c~ c= cedge_map b0 b1 b1 c/\ c~ c= cnode_map b0 b1 b1 c~ c= cface_map b0 b1 b1 * / ! c= cdart_nondegenerate b0 b1 c/\ c~ c= cedge_map b0 b1 b1 c/\ c~ c= cnode_map b0 b1 b1 c~ c= cface_map b0 b1 b1 f0 * / ! c= cdart_nondegenerate b0 b1 c/\ c~ c= cedge_map b0 b1 b1 c/\ c~ c= cnode_map b0 b1 b1 c~ c= cface_map b0 b1 b1 f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (((comb_component ((edge_walkup H) x)) ((node_map H) x)) = ((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x))), ((CARD (set_of_components H)) = ((CARD ((set_of_components H) DELETE ((comb_component H) x))) + (NUMERAL (BIT1 _0)))), (x IN (dart H)), ((dart_nondegenerate H) x) |- ((((set_of_components H) DELETE ((comb_component H) x)) = ((set_of_components ((edge_walkup H) x)) DIFF (((comb_component ((edge_walkup H) x)) ((node_map H) x)) INSERT (((comb_component ((edge_walkup H) x)) ((inverse (edge_map H)) x)) INSERT EMPTY)))) ==> ((CARD (set_of_components H)) = (CARD (set_of_components ((edge_walkup H) x)))))
T c==> c= * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 c==> c= cCARD * part cset_of_components f0 c+ cCARD * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f1 cNUMERAL cBIT1 c_0 c==> cIN f1 * part cdart f0 c==> cdart_nondegenerate f0 f1 c==> c= * * part cDELETE * part cset_of_components f0 * * part ccomb_component f0 f1 * * part cDIFF * part cset_of_components cedge_walkup f0 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 cnode_map f0 f1 * * part cINSERT * * part ccomb_component cedge_walkup f0 f1 cinverse * part cedge_map f0 f1 part cEMPTY c= cCARD * part cset_of_components f0 cCARD * part cset_of_components cedge_walkup f0 f1
+ |- ((!x. t) = t)
T c= ! f0 f0
+ |- (T = (!x. ((x IN (s DIFF (a INSERT (a INSERT EMPTY)))) = (x IN (s DELETE a)))))
T c= cT ! c= cIN b0 * * part cDIFF f0 * * part cINSERT f1 * * part cINSERT f1 part cEMPTY cIN b0 * * part cDELETE f0 f1
+ |- (((!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) ==> ((\x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) x)) = ((\x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) x))
T c= c==> ! c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 * / c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 f1 * / c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 f1
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- ((\s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) s)
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 * / ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 f0
+ |- ((\x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) x)
T * / c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 f1
+ |- ((\x. ((x IN (dart H)) = (((comb_component H) x) IN (set_of_components H)))) x)
T * / c= cIN b0 * part cdart f0 cIN * * part ccomb_component f0 b0 * part cset_of_components f0 f1
+ |- (((!H. (!x. ((x IN (dart H)) = (((comb_component H) x) IN (set_of_components H))))) ==> ((\H. (!x. ((x IN (dart H)) = (((comb_component H) x) IN (set_of_components H))))) H)) = ((\H. (!x. ((x IN (dart H)) = (((comb_component H) x) IN (set_of_components H))))) H))
T c= c==> ! ! c= cIN b1 * part cdart b0 cIN * * part ccomb_component b0 b1 * part cset_of_components b0 * / ! c= cIN b1 * part cdart b0 cIN * * part ccomb_component b0 b1 * part cset_of_components b0 f0 * / ! c= cIN b1 * part cdart b0 cIN * * part ccomb_component b0 b1 * part cset_of_components b0 f0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- (((!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) ==> ((\x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) x)) = ((\x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) x))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c= c==> ! c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 * / c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 f1 * / c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 f1
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- ((!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) = T)
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c= ! c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 cT
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))), ((FINITE s) /\ (x IN s)) |- ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c==> c/\ cFINITE f0 cIN f1 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- ((!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) ==> (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- ((((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))) = T)
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c= c==> c/\ cFINITE f0 cIN f1 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0 cT
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- ((\x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) x)
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 * / c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 f1
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 ! c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0
- ((FINITE s) /\ (x IN s)) |- ((!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))
T c==> c/\ cFINITE f0 cIN f1 f0 c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))), ((FINITE s) /\ (x IN s)) |- ((!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) /\ ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c==> c/\ cFINITE f0 cIN f1 f0 c/\ ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))), ((FINITE s) /\ (x IN s)) |- (((FINITE s) /\ (x IN s)) /\ ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c==> c/\ cFINITE f0 cIN f1 f0 c/\ c/\ cFINITE f0 cIN f1 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- ((!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) /\ (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c/\ ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0
- |- (((!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) ==> (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))))) = (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))))
T c= c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0
