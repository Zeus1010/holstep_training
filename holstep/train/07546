N Hojodcm.ztran_in_face_ytrans_v0
C |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) ((find_face L) (((((ytrans L) N) r) x) (NUMERAL _0)))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 cfind_face f0 cytrans f0 f1 f2 f3 cNUMERAL c_0
D List_hypermap.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D Tame_defs2.l_z
A |- (!L. (!N. (!r. (!x. (((((l'z L) N) r) x) = (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) (((l'y L) r) x)))))))
T c= cl'z f0 f1 f2 f3 cPOWER * part cf_list f0 cSUC cl'p f0 f1 f2 f3 cl'y f0 f2 f3
D Tame_defs2.ytrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))))
T c= cytrans f0 f1 f2 f3 f4 cl'y f0 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.ztrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))
T c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.HQYMRTX1_list
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c/\ cMEM cl'z f0 f1 f2 f3 f2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f2 f3 c~ c= cl'z f0 f1 f2 f3 cPOWER * part cf_list f0 b0 f3
D Pwssrat.mem_f_list_power
A |- (!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 f2 f1 cfind_face f0 f1
D Hojodcm.mem_ytrans_list_of_darts_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 clist_of_darts f0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))))), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cMEM f2 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c/\ c= cnext_el f1 f2 cf_list f0 f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 cs_flag_list f0 f3 f1 f2 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 cMEM cl'z f0 cntrans f0 f3 f1 f2 cNUMERAL c_0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2 cfind_face f0 cl'y f0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2
+ |- ((((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) ==> (uniq (list_of_darts L))) = ((good_list L) ==> (uniq (list_of_darts L))))
T c= c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 cuniq clist_of_darts f0 c==> cgood_list f0 cuniq clist_of_darts f0
- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x))))) |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x))))) i)
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f3 f1 f2 f4 cPOWER * part cf_list f0 b0 f2 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f3 f1 f2 f4 cPOWER * part cf_list f0 b0 f2 f5
+ |- (((!N. (!r. (!x. (((((l'z L) N) r) x) = (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) (((l'y L) r) x)))))) ==> ((\N. (!r. (!x. (((((l'z L) N) r) x) = (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) (((l'y L) r) x)))))) N)) = ((\N. (!r. (!x. (((((l'z L) N) r) x) = (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) (((l'y L) r) x)))))) N))
T c= c==> ! ! ! c= cl'z f0 b0 b1 b2 cPOWER * part cf_list f0 cSUC cl'p f0 b0 b1 b2 cl'y f0 b1 b2 * / ! ! c= cl'z f0 b0 b1 b2 cPOWER * part cf_list f0 cSUC cl'p f0 b0 b1 b2 cl'y f0 b1 b2 f1 * / ! ! c= cl'z f0 b0 b1 b2 cPOWER * part cf_list f0 cSUC cl'p f0 b0 b1 b2 cl'y f0 b1 b2 f1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> (((MEM (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y)) r) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x))))) ==> (((MEM (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) (list_of_darts L)) ==> (uniq (list_of_darts L)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> cMEM cPOWER * part cf_list f0 cSUC cl'p f0 f2 f1 f3 f4 f1 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f3 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f2 f1 f3 f4 cPOWER * part cf_list f0 b0 f3 c==> cMEM cl'y f0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 clist_of_darts f0 cuniq clist_of_darts f0
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x))))), (good_list L) |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x))))) /\ (((MEM (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) (list_of_darts L)) ==> (uniq (list_of_darts L))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f3 f1 f2 f4 cPOWER * part cf_list f0 b0 f2 c==> cgood_list f0 c/\ ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f3 f1 f2 f4 cPOWER * part cf_list f0 b0 f2 c==> cMEM cl'y f0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2 clist_of_darts f0 cuniq clist_of_darts f0
+ (good_list L) |- (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> (((MEM (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y)) r) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x))))) ==> (((MEM (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) (list_of_darts L)) ==> (uniq (list_of_darts L)))))))
T c==> cgood_list f0 c==> cs_flag_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> cMEM cPOWER * part cf_list f0 cSUC cl'p f0 f1 f2 f3 f4 f2 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f2 f3 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f1 f2 f3 f4 cPOWER * part cf_list f0 b0 f3 c==> cMEM cl'y f0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 clist_of_darts f0 cuniq clist_of_darts f0
+ |- (((!x. (((((l'z L) N) r) x) = (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) (((l'y L) r) x)))) ==> ((\x. (((((l'z L) N) r) x) = (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) (((l'y L) r) x)))) x)) = ((\x. (((((l'z L) N) r) x) = (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) (((l'y L) r) x)))) x))
T c= c==> ! c= cl'z f0 f1 f2 b0 cPOWER * part cf_list f0 cSUC cl'p f0 f1 f2 b0 cl'y f0 f2 b0 * / c= cl'z f0 f1 f2 b0 cPOWER * part cf_list f0 cSUC cl'p f0 f1 f2 b0 cl'y f0 f2 b0 f3 * / c= cl'z f0 f1 f2 b0 cPOWER * part cf_list f0 cSUC cl'p f0 f1 f2 b0 cl'y f0 f2 b0 f3
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((MEM (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x)))))) ==> ((MEM (((POWER (f_list L)) (SUC ((((l'p L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x))) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x))) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> cMEM f2 f1 c==> cMEM f1 f4 c==> cnormal_list f0 f4 c==> cs_flag_list f0 f4 f1 f2 c==> cmarked_list f0 f4 f1 f2 c==> c/\ cMEM cPOWER * part cf_list f0 cSUC cl'p f0 f4 f1 f2 f3 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f4 f1 f2 f3 cPOWER * part cf_list f0 b0 f2 cMEM cPOWER * part cf_list f0 cSUC cl'p f0 cntrans f0 f4 f1 f2 cNUMERAL c_0 crtrans f0 f4 f1 f2 cNUMERAL c_0 f2 cl'y f0 crtrans f0 f4 f1 f2 cNUMERAL c_0 f2 cfind_face f0 cl'y f0 crtrans f0 f4 f1 f2 cNUMERAL c_0 f2
+ ((MEM (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) (list_of_darts L)) |- (((MEM (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) (list_of_darts L)) = T)
T c==> cMEM cl'y f0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 clist_of_darts f0 c= cMEM cl'y f0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 clist_of_darts f0 cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 cfind_face f0 cl'y f0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3
- |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x))))))) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)))) = ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x))))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c/\ cMEM cl'z f0 f1 f2 f3 f2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f2 f3 c~ c= cl'z f0 f1 f2 f3 cPOWER * part cf_list f0 b0 f3 cMEM cl'z f0 cntrans f0 f1 f2 f3 cNUMERAL c_0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 cMEM cl'z f0 cntrans f0 f1 f2 f3 cNUMERAL c_0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3
+ (good_list L), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> (((MEM (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y)) r) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x))))) ==> (((MEM (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) (list_of_darts L)) ==> (uniq (list_of_darts L))))))))))
T c==> cgood_list f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> cMEM cPOWER * part cf_list f0 cSUC cl'p f0 f1 f2 f3 f4 f2 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f2 f3 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f1 f2 f3 f4 cPOWER * part cf_list f0 b0 f3 c==> cMEM cl'y f0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 clist_of_darts f0 cuniq clist_of_darts f0
- |- ((?y. ((((l'y L) r) x) = y)) ==> (?y. ((((l'y L) r) x) = y)))
T c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
+ |- (((!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))) ==> ((\k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))) k)) = ((\k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))) k))
T c= c==> ! c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 * / c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 f2 * / c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 f2
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y)) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))) ==> ((uniq (list_of_darts L)) /\ ((MEM (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) (list_of_darts L))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f3 f1 f2 f4 cPOWER * part cf_list f0 b0 f2 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM cPOWER * part cf_list f0 cSUC cl'p f0 f3 f1 f2 f4 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f3 f1 f2 c~ cfinal_list f0 f1 cMEM cytrans f0 f3 f1 f2 cNUMERAL c_0 clist_of_darts f0 c/\ cuniq clist_of_darts f0 cMEM cl'y f0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2 clist_of_darts f0
+ (good_list L), ((MEM (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) (list_of_darts L)) |- (((MEM (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) (list_of_darts L)) /\ (uniq (list_of_darts L)))
T c==> cgood_list f0 c==> cMEM cl'y f0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 clist_of_darts f0 c/\ cMEM cl'y f0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 clist_of_darts f0 cuniq clist_of_darts f0
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
- |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ |- (((!r. (!x. (((((l'z L) N) r) x) = (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) (((l'y L) r) x))))) ==> ((\r. (!x. (((((l'z L) N) r) x) = (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) (((l'y L) r) x))))) r)) = ((\r. (!x. (((((l'z L) N) r) x) = (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) (((l'y L) r) x))))) r))
T c= c==> ! ! c= cl'z f0 f1 b0 b1 cPOWER * part cf_list f0 cSUC cl'p f0 f1 b0 b1 cl'y f0 b0 b1 * / ! c= cl'z f0 f1 b0 b1 cPOWER * part cf_list f0 cSUC cl'p f0 f1 b0 b1 cl'y f0 b0 b1 f2 * / ! c= cl'z f0 f1 b0 b1 cPOWER * part cf_list f0 cSUC cl'p f0 f1 b0 b1 cl'y f0 b0 b1 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 cfind_face f0 cl'y f0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3
+ (good_list L) |- (((MEM (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) (list_of_darts L)) ==> (uniq (list_of_darts L)))
T c==> cgood_list f0 c==> cMEM cl'y f0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 clist_of_darts f0 cuniq clist_of_darts f0
+ |- (((?y. ((((l'y L) r) x) = y)) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)))) = ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x))))
T c= c==> c? / c= cl'y f0 f1 f2 b0 cMEM cl'z f0 cntrans f0 f3 f1 f2 cNUMERAL c_0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2 cfind_face f0 cl'y f0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2 cMEM cl'z f0 cntrans f0 f3 f1 f2 cNUMERAL c_0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2 cfind_face f0 cl'y f0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2
+ |- ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
+ (good_list L), ((MEM x) r) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> (((MEM (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y)) r) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x))))) ==> (((MEM (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) (list_of_darts L)) ==> (uniq (list_of_darts L)))))))))))
T c==> cgood_list f0 c==> cMEM f1 f2 c/\ cMEM f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f1 cf_list f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f1 c==> cs_flag_list f0 f3 f2 f1 c==> c= cl'y f0 f2 f1 f4 c==> cMEM cPOWER * part cf_list f0 cSUC cl'p f0 f3 f2 f1 f4 f2 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f2 f1 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f3 f2 f1 f4 cPOWER * part cf_list f0 b0 f1 c==> cMEM cl'y f0 crtrans f0 f3 f2 f1 cNUMERAL c_0 f1 clist_of_darts f0 cuniq clist_of_darts f0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x), ((\y. ((((l'y L) r) x) = y)) y) |- (((\y. ((((l'y L) r) x) = y)) y) /\ ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 c==> * / c= cl'y f0 f1 f2 b0 f4 c/\ * / c= cl'y f0 f1 f2 b0 f4 cMEM cl'z f0 cntrans f0 f3 f1 f2 cNUMERAL c_0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2 cfind_face f0 cl'y f0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((MEM ((((l'z L) N) r) x)) r) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ (((((l'z L) N) r) x) = (((POWER (f_list L)) i) x)))))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c/\ cMEM cl'z f0 f1 f2 b0 f2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cSUC cl'm f0 f2 b0 c~ c= cl'z f0 f1 f2 b0 cPOWER * part cf_list f0 b1 b0 f3
+ |- ((\N. (!r. (!x. (((((l'z L) N) r) x) = (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) (((l'y L) r) x)))))) N)
T * / ! ! c= cl'z f0 b0 b1 b2 cPOWER * part cf_list f0 cSUC cl'p f0 b0 b1 b2 cl'y f0 b1 b2 f1
+ |- ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 cs_flag_list f0 f3 f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 cMEM cl'z f0 cntrans f0 f3 f1 f2 cNUMERAL c_0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2 cfind_face f0 cl'y f0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2
+ (good_list L), ((normal_list L) N) |- (((normal_list L) N) /\ (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> (((MEM (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y)) r) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x))))) ==> (((MEM (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) (list_of_darts L)) ==> (uniq (list_of_darts L)))))))))))))
T c==> cgood_list f0 c==> cnormal_list f0 f1 c/\ cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> cMEM cPOWER * part cf_list f0 cSUC cl'p f0 f1 f2 f3 f4 f2 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f2 f3 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f1 f2 f3 f4 cPOWER * part cf_list f0 b0 f3 c==> cMEM cl'y f0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 clist_of_darts f0 cuniq clist_of_darts f0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))))) N)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 clist_of_darts f0 f1
- |- (((!x'. (((\y. ((((l'y L) r) x) = y)) x') ==> (?y. ((((l'y L) r) x) = y)))) ==> ((?y. ((((l'y L) r) x) = y)) ==> (?y. ((((l'y L) r) x) = y)))) = ((?y. ((((l'y L) r) x) = y)) ==> (?y. ((((l'y L) r) x) = y))))
T c= c==> ! c==> * / c= cl'y f0 f1 f2 b1 b0 c? / c= cl'y f0 f1 f2 b1 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ c= cnext_el f1 f2 cf_list f0 f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 cs_flag_list f0 f3 f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 cMEM cl'z f0 cntrans f0 f3 f1 f2 cNUMERAL c_0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2 cfind_face f0 cl'y f0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2
- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x))))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f3 f1 f2 f4 cPOWER * part cf_list f0 b0 f2 c==> c/\ c<= cNUMERAL cBIT1 c_0 f5 c<= f5 cSUC cl'm f0 f1 f2 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f3 f1 f2 f4 cPOWER * part cf_list f0 f5 f2
- |- (((LET f) x) = (f x))
T c= cLET f0 f1 * f0 f1
+ |- (?y. ((((l'y L) r) x) = y))
T c? / c= cl'y f0 f1 f2 b0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 cs_flag_list f0 f3 f1 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cmarked_list f0 f3 f1 f2 cMEM cl'z f0 cntrans f0 f3 f1 f2 cNUMERAL c_0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2 cfind_face f0 cl'y f0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2
- |- ((!d. t) = t)
T c= ! f0 f0
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
- |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> (((MEM (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y)) r) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x))))) ==> (((MEM (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) (list_of_darts L)) ==> (uniq (list_of_darts L))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 c==> c= cl'y f0 f1 f2 f4 c==> cMEM cPOWER * part cf_list f0 cSUC cl'p f0 f3 f1 f2 f4 f1 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f3 f1 f2 f4 cPOWER * part cf_list f0 b0 f2 c==> cMEM cl'y f0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2 clist_of_darts f0 cuniq clist_of_darts f0
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))) = T)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 clist_of_darts f0 cT
- |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y)) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((MEM (((POWER (f_list L)) (SUC ((((l'p L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x))) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x))) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f3 f1 f2 f4 cPOWER * part cf_list f0 b0 f2 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM cPOWER * part cf_list f0 cSUC cl'p f0 f3 f1 f2 f4 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 cMEM cPOWER * part cf_list f0 cSUC cl'p f0 cntrans f0 f3 f1 f2 cNUMERAL c_0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2 cl'y f0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2 cfind_face f0 cl'y f0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2
+ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) |- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) /\ ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) ((find_face L) (((((ytrans L) N) r) x) (NUMERAL _0)))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c/\ c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 cfind_face f0 cytrans f0 f1 f2 f3 cNUMERAL c_0
+ |- (((!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
+ (is_restricted (hypermap_of_list L)), (good_list L) |- ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((l'y L) r) x) = y) ==> (((MEM (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y)) r) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x))))) ==> (((MEM (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) (list_of_darts L)) ==> (uniq (list_of_darts L))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c/\ cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c==> c= cl'y f0 f2 f3 f4 c==> cMEM cPOWER * part cf_list f0 cSUC cl'p f0 f1 f2 f3 f4 f2 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f2 f3 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f1 f2 f3 f4 cPOWER * part cf_list f0 b0 f3 c==> cMEM cl'y f0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 clist_of_darts f0 cuniq clist_of_darts f0
+ (good_list L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r)))) |- ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) ((find_face L) (((((ytrans L) N) r) x) (NUMERAL _0))))
T c==> cgood_list f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 cfind_face f0 cytrans f0 f1 f2 f3 cNUMERAL c_0
+ |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) ((find_face L) (((((ytrans L) N) r) x) (NUMERAL _0))))) = T)
T c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 cfind_face f0 cytrans f0 f1 f2 f3 cNUMERAL c_0 cT
+ |- ((\r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cytrans f0 f1 b0 b1 b2 cl'y f0 crtrans f0 f1 b0 b1 b2 b1 f2
- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x))))) |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x)))) = T)
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f3 f1 f2 f4 cPOWER * part cf_list f0 b0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f5 c<= f5 cSUC cl'm f0 f1 f2 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f3 f1 f2 f4 cPOWER * part cf_list f0 f5 f2 cT
+ (~ ((final_list L) r)) |- ((((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)))) = (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)))))
T c==> c~ cfinal_list f0 f1 c= c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 cfind_face f0 cl'y f0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c/\ c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 cfind_face f0 cl'y f0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3
+ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (SUC (((l'm L) r) x)))) ==> (~ ((((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y) = (((POWER (f_list L)) i) x))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), ((((l'y L) r) x) = y), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y)) r), ((MEM (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) (list_of_darts L)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (uniq (list_of_darts L))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC cl'm f0 f1 f2 c~ c= cPOWER * part cf_list f0 cSUC cl'p f0 f3 f1 f2 f4 cPOWER * part cf_list f0 b0 f2 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM cPOWER * part cf_list f0 cSUC cl'p f0 f3 f1 f2 f4 f1 c==> cMEM cl'y f0 crtrans f0 f3 f1 f2 cNUMERAL c_0 f2 clist_of_darts f0 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cs_flag_list f0 f3 f1 f2 c==> cmarked_list f0 f3 f1 f2 cuniq clist_of_darts f0
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
- (!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))) |- ((((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d))) = T)
T c==> ! c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 c= c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 f2 f1 cfind_face f0 f1 cT
- ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
+ |- ((\x. (((((l'z L) N) r) x) = (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) (((l'y L) r) x)))) x)
T * / c= cl'z f0 f1 f2 b0 cPOWER * part cf_list f0 cSUC cl'p f0 f1 f2 b0 cl'y f0 f2 b0 f3
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))) |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))) x))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 clist_of_darts b0 c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 clist_of_darts f0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 clist_of_darts f0 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 clist_of_darts f0 f3
- |- (((((l'y L) r) x) = y) = ((\y. ((((l'y L) r) x) = y)) y))
T c= c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
- |- ((\j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) j)
T * / c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 f4
- |- (!y. (((\y. ((((l'y L) r) x) = y)) y) ==> (?y. ((((l'y L) r) x) = y))))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
- |- ((LET_END t) = t)
T c= cLET_END f0 f0
- ((((l'y L) r) x) = y) |- ((\y. ((((l'y L) r) x) = y)) y)
T c==> c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
- |- (((((l'y L) r) x) = y) ==> (?y. ((((l'y L) r) x) = y)))
T c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
- |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
- (!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))) |- ((!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))) /\ (!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))))
T c==> ! c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 c/\ ! c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 ! c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))) = (\x. (((((marked_list L) N) r) x) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c~ cfinal_list f0 f1 cMEM cytrans f0 f2 f1 b0 cNUMERAL c_0 clist_of_darts f0 / c==> cmarked_list f0 f2 f1 b0 cMEM cytrans f0 f2 f1 b0 cNUMERAL c_0 clist_of_darts f0
- |- ((!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))) ==> (!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))))
T c==> ! c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 ! c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1
- |- ((x = x) = T)
T c= c= f0 f0 cT
- (!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))), ((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) |- (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) /\ ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))
T c==> ! c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c/\ c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 f2 f1 cfind_face f0 f1
- |- (((!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))) ==> (!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d))))) = (!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))))
T c= c==> ! c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 ! c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 ! c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1
- ((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) |- ((!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c==> ! c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 cMEM cPOWER * part cf_list f0 f2 f1 cfind_face f0 f1
- (!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))), ((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) |- ((!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))) /\ ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))
T c==> ! c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c/\ ! c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 cMEM cPOWER * part cf_list f0 f2 f1 cfind_face f0 f1
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) ==> ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 cMEM cl'z f0 cntrans f0 f1 f2 f3 cNUMERAL c_0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 cNUMERAL c_0 f3
- ((((s_flag_list L) N) r) x) |- (((((s_flag_list L) N) r) x) = T)
T c==> cs_flag_list f0 f1 f2 f3 c= cs_flag_list f0 f1 f2 f3 cT
- ((\y. ((((l'y L) r) x) = y)) y) |- ((((((l'y L) r) x) = y) ==> (?y. ((((l'y L) r) x) = y))) = (?y. ((((l'y L) r) x) = y)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c= c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
- (good_list L), (good_list_nodes L) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))) = (\r. (!x. ((((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 clist_of_darts f0 / ! c==> c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 clist_of_darts f0
- |- ((((\y. ((((l'y L) r) x) = y)) y) ==> (?y. ((((l'y L) r) x) = y))) = T)
T c= c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))), ((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) |- ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d))
T c==> ! c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 f2 f1 cfind_face f0 f1
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- (!k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))) |- ((\k. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((MEM (((POWER (f_list L)) k) d)) ((find_face L) d)))) k)
T c==> ! c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 * / c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 cMEM cPOWER * part cf_list f0 b0 f1 cfind_face f0 f1 f2
- |- ((\t. ((LET_END t) = t)) t)
T * / c= cLET_END b0 b0 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ ((MEM ((((l'z L) (((((ntrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0))) x)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) (NUMERAL _0))) x))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 cMEM cl'z f0 cntrans f0 f2 f1 f3 cNUMERAL c_0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3 cfind_face f0 cl'y f0 crtrans f0 f2 f1 f3 cNUMERAL c_0 f3
- |- ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))
T c= cPOWER * * part ctransform_list f0 f1 f2 c, f3 f4 c, cntrans f0 f3 f4 f1 f2 crtrans f0 f3 f4 f1 f2
- |- (((!j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) ==> ((\j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) j)) = ((\j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) j))
T c= c==> ! c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 * / c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 f4 * / c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 f4
- ((MEM (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y)) r) |- (((MEM (((POWER (f_list L)) (SUC ((((l'p L) N) r) x))) y)) r) = T)
T c==> cMEM cPOWER * part cf_list f0 cSUC cl'p f0 f1 f2 f3 f4 f2 c= cMEM cPOWER * part cf_list f0 cSUC cl'p f0 f1 f2 f3 f4 f2 cT
- ((\y. ((((l'y L) r) x) = y)) y) |- (((\y. ((((l'y L) r) x) = y)) y) /\ (?y. ((((l'y L) r) x) = y)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c/\ * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
- ((((l'y L) r) x) = y) |- (((((l'y L) r) x) = y) /\ (?y. ((((l'y L) r) x) = y)))
T c==> c= cl'y f0 f1 f2 f3 c/\ c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
- ((MEM x) r) |- (((MEM x) r) = T)
T c==> cMEM f0 f1 c= cMEM f0 f1 cT
