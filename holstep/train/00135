N Xwitccn.SCS_A_B__EQ_MOD_5_sqrt8
C |- ((s = ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) ==> (!i. (!j. (((((scs_a_v39 s) i) j) = (((scs_a_v39 s) (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((((scs_b_v39 s) i) j) = (((scs_b_v39 s) (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))))))
T c==> c= f0 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! ! c/\ c= cscs_a_v39 f0 b0 b1 cscs_a_v39 f0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cscs_b_v39 f0 b0 b1 cscs_b_v39 f0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D DIVMOD_UNIQ
A |- (!m. (!n. (!q. (!r. (((m = ((q * n) + r)) /\ (r < n)) ==> (((m DIV n) = q) /\ ((m MOD n) = r)))))))
T c==> c/\ c= f0 c+ c* f1 f2 f3 c< f3 f2 c/\ c= cDIV f0 f2 f1 c= cMOD f0 f2 f3
D MOD_MOD_REFL
A |- (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((m MOD n) MOD n) = (m MOD n)))))
T c==> c~ c= f0 cNUMERAL c_0 c= cMOD cMOD f1 f0 f0 cMOD f1 f0
D MOD_ADD_MOD
A |- (!a. (!b. (!n. ((~ (n = (NUMERAL _0))) ==> ((((a MOD n) + (b MOD n)) MOD n) = ((a + b) MOD n))))))
T c==> c~ c= f0 cNUMERAL c_0 c= cMOD c+ cMOD f1 f0 cMOD f2 f0 f0 cMOD c+ f1 f2 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D Appendix.scs_a_v39_explicit
A |- (!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))))
T c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f2
D Appendix.scs_b_v39_explicit
A |- (!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))))
T c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f5
D Appendix.mk_unadorned_v39
A |- (!k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))))
T c= cmk_unadorned_v39 f0 f1 f2 f3 cscs_v39 c, f0 c, f1 c, f2 c, f2 c, f3 c, f3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY
D Zithlqn.CS_ADJ
A |- (cs_adj = (\k. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))
T c= part ccs_adj / / / / / cCOND c= cMOD b3 b0 cMOD b4 b0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD b4 b0 cMOD cSUC b3 b0 c= cMOD cSUC b4 b0 cMOD b3 b0 b1 b2
- |- ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)
T c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f0
- |- (((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F)
T c= c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
+ |- ((((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) ==> ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + ((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) = ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))
T c= c==> c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))) alpha)
T * / ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f2 f5
+ |- ((((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) ==> ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + ((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) = ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))
T c= c==> c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- ((((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) = (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) ==> ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + ((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))))
T c= c==> c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
+ |- (((NUMERAL (BIT1 _0)) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = T)
T c= c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cT
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ |- ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))
T c==> c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- (((!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) ==> ((\str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) str)) = ((\str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) str))
T c= c==> ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 * / c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 f9 * / c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 f9
- |- (((!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))) ==> ((\lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))) lo)) = ((\lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))) lo))
T c= c==> ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f0 * / ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f0 f8 * / ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f0 f8
+ |- (((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))
T c==> c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ |- (((NUMERAL (BIT1 _0)) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((((NUMERAL (BIT1 _0)) DIV (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0)))))
T c==> c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cDIV cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT1 _0)))) = F)
T c= c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
+ |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 * / ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 f2 * / ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 f2
- |- ((\str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)) str)
T * / c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f0 f9
+ |- ((\J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) J)
T * / ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 f7
+ |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 f2
+ (s = ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) |- (!j. (((((scs_a_v39 s) i) j) = (((scs_a_v39 s) (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((((scs_b_v39 s) i) j) = (((scs_b_v39 s) (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))))
T c==> c= f0 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c/\ c= cscs_a_v39 f0 f1 b0 cscs_a_v39 f0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cscs_b_v39 f0 f1 b0 cscs_b_v39 f0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) |- (((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8))) = ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8))))
T c==> c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c= cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 c= cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8
+ |- ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8))))
T c==> c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8
+ |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))) b)
T * / ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f2 f4
+ |- ((\m. ((SUC m) = (m + (NUMERAL (BIT1 _0))))) m)
T * / c= cSUC b0 c+ b0 cNUMERAL cBIT1 c_0 f0
+ |- (((!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) ==> ((\J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) J)) = ((\J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) J))
T c= c==> ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 * / ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 f7 * / ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 f7
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- ((((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)))) = (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) ==> ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + ((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)))))
T c= c==> c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 c==> c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8
- |- (((!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)) ==> ((\str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)) str)) = ((\str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)) str))
T c= c==> ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f1 * / c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f1 f9 * / c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f1 f9
+ |- (((!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) beta))
T c= c==> ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 * / ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 f6 * / ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 f6
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
+ (s = ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) |- ((((scs_a_v39 s) i) j) = (((scs_a_v39 s) (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))
T c==> c= f0 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cscs_a_v39 f0 f1 f2 cscs_a_v39 f0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ |- (((!m. ((SUC m) = (m + (NUMERAL (BIT1 _0))))) ==> ((\m. ((SUC m) = (m + (NUMERAL (BIT1 _0))))) m)) = ((\m. ((SUC m) = (m + (NUMERAL (BIT1 _0))))) m))
T c= c==> ! c= cSUC b0 c+ b0 cNUMERAL cBIT1 c_0 * / c= cSUC b0 c+ b0 cNUMERAL cBIT1 c_0 f0 * / c= cSUC b0 c+ b0 cNUMERAL cBIT1 c_0 f0
+ (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) |- ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))
T c==> c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (((!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))) beta))
T c= c==> ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f0 * / ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f0 f6 * / ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f0 f6
- |- (((!x. ((x IN P) = (P x))) ==> ((\x. ((x IN P) = (P x))) x)) = ((\x. ((x IN P) = (P x))) x))
T c= c==> ! c= cIN b0 f0 * f0 b0 * / c= cIN b0 f0 * f0 b0 f1 * / c= cIN b0 f0 * f0 b0 f1
- ((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) |- ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))
T c==> c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))))) k)
T * / ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b2 f1
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ |- ((\b. (!n. ((~ (n = (NUMERAL _0))) ==> ((((j MOD n) + (b MOD n)) MOD n) = ((j + b) MOD n))))) (NUMERAL (BIT1 _0)))
T * / ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD c+ cMOD f0 b1 cMOD b0 b1 b1 cMOD c+ f0 b0 b1 cNUMERAL cBIT1 c_0
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
- |- ((\J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))) J)
T * / ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f1 f7
- |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))))) a)
T * / ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 f1 f3
+ (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) |- (((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8))) = ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8))))
T c==> c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8
- |- ((\P. (!x. ((x IN P) = (P x)))) P)
T * / ! c= cIN b1 b0 * b0 b1 f0
+ (s = ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) |- ((((scs_b_v39 s) i) j) = (((scs_b_v39 s) (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))
T c==> c= f0 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cscs_b_v39 f0 f1 f2 cscs_b_v39 f0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- ((\beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))) beta)
T * / ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f4 f6
+ (s = ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) |- (((((scs_a_v39 s) i) j) = (((scs_a_v39 s) (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((((scs_b_v39 s) i) j) = (((scs_b_v39 s) (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))
T c==> c= f0 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c= cscs_a_v39 f0 f1 f2 cscs_a_v39 f0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cscs_b_v39 f0 f1 f2 cscs_b_v39 f0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f2 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 f1 * / ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 f1 f3 * / ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 f1 f3
+ |- (((!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) ==> ((\J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) J)) = ((\J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) J))
T c= c==> ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 * / ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 f7 * / ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 f7
- |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))))) b)
T * / ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f0 f4
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- (((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8))))
T c==> c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8
+ |- (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) ==> ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + ((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))
T c==> c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- (((NUMERAL _0) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) |- (((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))
T c==> c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b0 * / ! ! ! ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b0 f1 * / ! ! ! ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b0 f1
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
+ |- ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)))
T c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8
+ |- ((((NUMERAL (BIT1 _0)) < (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((((NUMERAL (BIT1 _0)) DIV (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))))) = ((((NUMERAL (BIT1 _0)) DIV (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0)))))
T c= c==> c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cDIV cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cDIV cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
+ (s = ((LET (\upperbd. (LET_END ((LET (\a_pro. (LET_END ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) upperbd))))) (\k. (\p. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((i MOD k) INSERT ((j MOD k) INSERT EMPTY)) = ((NUMERAL _0) INSERT ((NUMERAL (BIT1 _0)) INSERT EMPTY)))) p) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) |- ((!j. (((((scs_a_v39 s) i) j) = (((scs_a_v39 s) (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((((scs_b_v39 s) i) j) = (((scs_b_v39 s) (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) = T)
T c==> c= f0 cLET / cLET_END cLET / cLET_END cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 / / / / / / cCOND c= cMOD b5 b1 cMOD b6 b1 creal_of_num cNUMERAL c_0 cCOND c= * * part cINSERT cMOD b5 b1 * * part cINSERT cMOD b6 b1 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT cNUMERAL cBIT1 c_0 part cEMPTY b2 cCOND c\/ c= cMOD b6 b1 cMOD cSUC b5 b1 c= cMOD cSUC b6 b1 cMOD b5 b1 b3 b4 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ! c/\ c= cscs_a_v39 f0 f1 b0 cscs_a_v39 f0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cscs_b_v39 f0 f1 b0 cscs_b_v39 f0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cT
+ |- (((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) = (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) ==> (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))))
T c= c==> c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))))) b))
T c= c==> ! ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f0 * / ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f0 f4 * / ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f0 f4
- |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b0 * / ! ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b0 f2 * / ! ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b0 f2
- |- (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) ==> (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)) = F)) = (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)) = F))
T c= c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 cF c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 cF
+ |- (((!n. ((~ (n = (NUMERAL _0))) ==> (((i MOD n) MOD n) = (i MOD n)))) ==> ((\n. ((~ (n = (NUMERAL _0))) ==> (((i MOD n) MOD n) = (i MOD n)))) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((\n. ((~ (n = (NUMERAL _0))) ==> (((i MOD n) MOD n) = (i MOD n)))) (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c= c==> ! c==> c~ c= b0 cNUMERAL c_0 c= cMOD cMOD f0 b0 b0 cMOD f0 b0 * / c==> c~ c= b0 cNUMERAL c_0 c= cMOD cMOD f0 b0 b0 cMOD f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * / c==> c~ c= b0 cNUMERAL c_0 c= cMOD cMOD f0 b0 b0 cMOD f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- (T = ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0)))))
T c= cT c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
+ ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) |- (T = ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8))))
T c==> c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cT c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8
- |- ((\lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))) lo)
T * / ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f1 f8
+ ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) |- (((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8))))
T c==> c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8
+ |- ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))
T c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- ((\d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) d)
T * / ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f1
- |- (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT1 _0)))))
T c~ c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
+ |- (((!b. (!n. ((~ (n = (NUMERAL _0))) ==> ((((j MOD n) + (b MOD n)) MOD n) = ((j + b) MOD n))))) ==> ((\b. (!n. ((~ (n = (NUMERAL _0))) ==> ((((j MOD n) + (b MOD n)) MOD n) = ((j + b) MOD n))))) (NUMERAL (BIT1 _0)))) = ((\b. (!n. ((~ (n = (NUMERAL _0))) ==> ((((j MOD n) + (b MOD n)) MOD n) = ((j + b) MOD n))))) (NUMERAL (BIT1 _0))))
T c= c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD c+ cMOD f0 b1 cMOD b0 b1 b1 cMOD c+ f0 b0 b1 * / ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD c+ cMOD f0 b1 cMOD b0 b1 b1 cMOD c+ f0 b0 b1 cNUMERAL cBIT1 c_0 * / ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD c+ cMOD f0 b1 cMOD b0 b1 b1 cMOD c+ f0 b0 b1 cNUMERAL cBIT1 c_0
+ |- (((!n. ((~ (n = (NUMERAL _0))) ==> ((((j MOD n) + ((NUMERAL (BIT1 _0)) MOD n)) MOD n) = ((j + (NUMERAL (BIT1 _0))) MOD n)))) ==> ((\n. ((~ (n = (NUMERAL _0))) ==> ((((j MOD n) + ((NUMERAL (BIT1 _0)) MOD n)) MOD n) = ((j + (NUMERAL (BIT1 _0))) MOD n)))) (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = ((\n. ((~ (n = (NUMERAL _0))) ==> ((((j MOD n) + ((NUMERAL (BIT1 _0)) MOD n)) MOD n) = ((j + (NUMERAL (BIT1 _0))) MOD n)))) (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c= c==> ! c==> c~ c= b0 cNUMERAL c_0 c= cMOD c+ cMOD f0 b0 cMOD cNUMERAL cBIT1 c_0 b0 b0 cMOD c+ f0 cNUMERAL cBIT1 c_0 b0 * / c==> c~ c= b0 cNUMERAL c_0 c= cMOD c+ cMOD f0 b0 cMOD cNUMERAL cBIT1 c_0 b0 b0 cMOD c+ f0 cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * / c==> c~ c= b0 cNUMERAL c_0 c= cMOD c+ cMOD f0 b0 cMOD cNUMERAL cBIT1 c_0 b0 b0 cMOD c+ f0 cNUMERAL cBIT1 c_0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) ==> (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8))))
T c==> c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8
- |- (((!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))) beta))
T c= c==> ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f1 * / ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f1 f6 * / ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f1 f6
+ |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
+ |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))) b)
T * / ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b0 f4
+ |- ((NUMERAL (BIT1 _0)) < (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T c< cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 * / ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 f2 * / ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 f2
- |- ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)
T c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f1
+ |- (((!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) ==> ((\d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) d)) = ((\d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) d))
T c= c==> ! ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY * / ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f1 * / ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f1
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
+ |- ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))
T c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- ((\a. (!b. (!n. ((~ (n = (NUMERAL _0))) ==> ((((a MOD n) + (b MOD n)) MOD n) = ((a + b) MOD n)))))) j)
T * / ! ! c==> c~ c= b2 cNUMERAL c_0 c= cMOD c+ cMOD b0 b2 cMOD b1 b2 b2 cMOD c+ b0 b1 b2 f0
+ (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) |- ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8))))
T c==> c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8
- |- ((\beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))) beta)
T * / ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f0 f6
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 * / ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 f1 * / ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 f1
- |- (~ ((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c~ c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) ==> (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))
T c==> c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (((!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))) ==> ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))) alpha)) = ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))) alpha))
T c= c==> ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f1 * / ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f1 f5 * / ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f1 f5
- |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b1 * / ! ! ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b1 f1 * / ! ! ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b1 f1
- |- ((x IN P) = (P x))
T c= cIN f0 f1 * f1 f0
- |- ((\beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))) beta)
T * / ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f1 f6
+ ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) |- (((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) /\ ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))
T c==> c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- ((\lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))) lo)
T * / ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f5 f8
+ |- ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))
T c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- ((((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) ==> (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)))) = ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8))))
T c= c==> c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 c= cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8
+ |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 cF
- |- (((!P. (!x. ((x IN P) = (P x)))) ==> ((\P. (!x. ((x IN P) = (P x)))) P)) = ((\P. (!x. ((x IN P) = (P x)))) P))
T c= c==> ! ! c= cIN b1 b0 * b0 b1 * / ! c= cIN b1 b0 * b0 b1 f0 * / ! c= cIN b1 b0 * b0 b1 f0
+ |- (((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0)))
T c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (((!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) ==> ((\lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) lo)) = ((\lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) lo))
T c= c==> ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 * / ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 f8 * / ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 f8
+ |- (((!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) ==> ((\str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) str)) = ((\str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) str))
T c= c==> ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 * / c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 f9 * / c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 f9
+ |- ((((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) = (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) ==> ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + ((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))))
T c= c==> c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) ==> ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + ((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))
T c==> c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- ((\J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))) J)
T * / ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f0 f7
+ |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))) a)
T * / ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b0 f3
+ |- (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) ==> (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))
T c==> c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- ((\vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))) vv)
T * / c= cBBs_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b1 part cball_annulus c/\ cperiodic b0 cscs_k_v39 f0 c/\ ! ! c/\ creal_le cscs_a_v39 f0 b4 b5 cdistance c, * b0 b4 * b0 b5 creal_le cdistance c, * b0 b4 * b0 b5 cscs_b_v39 f0 b4 b5 c\/ c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b1 c, b2 b3 * * part cIMAGE / c, * b0 b3 * b0 cSUC b3 part cUNIV * * part cIMAGE / * * part cINSERT * b0 b2 * * part cINSERT * b0 cSUC b2 part cEMPTY part cUNIV * * part cIMAGE b0 part cUNIV f1
+ |- ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)))
T c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8
+ |- ((((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) ==> ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + ((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)))) = ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((i + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8))))
T c= c==> c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD c+ f1 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8
+ |- (((!k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) ==> ((\k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) k)) = ((\k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) k))
T c= c==> ! ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY * / ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f0 * / ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f0
- |- (((!s. (!vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV))))) ==> ((\s. (!vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV))))) s)) = ((\s. (!vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV))))) s))
T c= c==> ! ! c= cBBs_v39 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b2 part cball_annulus c/\ cperiodic b1 cscs_k_v39 b0 c/\ ! ! c/\ creal_le cscs_a_v39 b0 b5 b6 cdistance c, * b1 b5 * b1 b6 creal_le cdistance c, * b1 b5 * b1 b6 cscs_b_v39 b0 b5 b6 c\/ c<= cscs_k_v39 b0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b2 c, b3 b4 * * part cIMAGE / c, * b1 b4 * b1 cSUC b4 part cUNIV * * part cIMAGE / * * part cINSERT * b1 b3 * * part cINSERT * b1 cSUC b3 part cEMPTY part cUNIV * * part cIMAGE b1 part cUNIV * / ! c= cBBs_v39 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b2 part cball_annulus c/\ cperiodic b1 cscs_k_v39 b0 c/\ ! ! c/\ creal_le cscs_a_v39 b0 b5 b6 cdistance c, * b1 b5 * b1 b6 creal_le cdistance c, * b1 b5 * b1 b6 cscs_b_v39 b0 b5 b6 c\/ c<= cscs_k_v39 b0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b2 c, b3 b4 * * part cIMAGE / c, * b1 b4 * b1 cSUC b4 part cUNIV * * part cIMAGE / * * part cINSERT * b1 b3 * * part cINSERT * b1 cSUC b3 part cEMPTY part cUNIV * * part cIMAGE b1 part cUNIV f0 * / ! c= cBBs_v39 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b2 part cball_annulus c/\ cperiodic b1 cscs_k_v39 b0 c/\ ! ! c/\ creal_le cscs_a_v39 b0 b5 b6 cdistance c, * b1 b5 * b1 b6 creal_le cdistance c, * b1 b5 * b1 b6 cscs_b_v39 b0 b5 b6 c\/ c<= cscs_k_v39 b0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b2 c, b3 b4 * * part cIMAGE / c, * b1 b4 * b1 cSUC b4 part cUNIV * * part cIMAGE / * * part cINSERT * b1 b3 * * part cINSERT * b1 cSUC b3 part cEMPTY part cUNIV * * part cIMAGE b1 part cUNIV f0
+ |- (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) ==> ((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) + ((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((j + (NUMERAL (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8))))
T c==> c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD c+ cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD c+ f0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8
+ |- ((\k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) k)
T * / ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f0
- |- (T = (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT1 _0))))))
T c= cT c~ c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))))))) d)
T * / ! ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b0 f2
- |- (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))
T c= cBBs_v39 f0 f1 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b0 part cball_annulus c/\ cperiodic f1 cscs_k_v39 f0 c/\ ! ! c/\ creal_le cscs_a_v39 f0 b3 b4 cdistance c, * f1 b3 * f1 b4 creal_le cdistance c, * f1 b3 * f1 b4 cscs_b_v39 f0 b3 b4 c\/ c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b0 c, b1 b2 * * part cIMAGE / c, * f1 b2 * f1 cSUC b2 part cUNIV * * part cIMAGE / * * part cINSERT * f1 b1 * * part cINSERT * f1 cSUC b1 part cEMPTY part cUNIV * * part cIMAGE f1 part cUNIV
- |- ((\lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))) lo)
T * / ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f0 f8
- |- ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))))))) k)
T * / ! ! ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b1 f1
- |- (((!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))) ==> ((\J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))) J)) = ((\J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))) J))
T c= c==> ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f1 * / ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f1 f7 * / ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f1 f7
- |- (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)))
T c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- (F = (~ T))
T c= cF c~ cT
- |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))))))) a)
T * / ! ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 f0 f3
- |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)))))) alpha)
T * / ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f1 f5
- |- (((!vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))) ==> ((\vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))) vv)) = ((\vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV)))) vv))
T c= c==> ! c= cBBs_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b1 part cball_annulus c/\ cperiodic b0 cscs_k_v39 f0 c/\ ! ! c/\ creal_le cscs_a_v39 f0 b4 b5 cdistance c, * b0 b4 * b0 b5 creal_le cdistance c, * b0 b4 * b0 b5 cscs_b_v39 f0 b4 b5 c\/ c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b1 c, b2 b3 * * part cIMAGE / c, * b0 b3 * b0 cSUC b3 part cUNIV * * part cIMAGE / * * part cINSERT * b0 b2 * * part cINSERT * b0 cSUC b2 part cEMPTY part cUNIV * * part cIMAGE b0 part cUNIV * / c= cBBs_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b1 part cball_annulus c/\ cperiodic b0 cscs_k_v39 f0 c/\ ! ! c/\ creal_le cscs_a_v39 f0 b4 b5 cdistance c, * b0 b4 * b0 b5 creal_le cdistance c, * b0 b4 * b0 b5 cscs_b_v39 f0 b4 b5 c\/ c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b1 c, b2 b3 * * part cIMAGE / c, * b0 b3 * b0 cSUC b3 part cUNIV * * part cIMAGE / * * part cINSERT * b0 b2 * * part cINSERT * b0 cSUC b2 part cEMPTY part cUNIV * * part cIMAGE b0 part cUNIV f1 * / c= cBBs_v39 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b1 part cball_annulus c/\ cperiodic b0 cscs_k_v39 f0 c/\ ! ! c/\ creal_le cscs_a_v39 f0 b4 b5 cdistance c, * b0 b4 * b0 b5 creal_le cdistance c, * b0 b4 * b0 b5 cscs_b_v39 f0 b4 b5 c\/ c<= cscs_k_v39 f0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b1 c, b2 b3 * * part cIMAGE / c, * b0 b3 * b0 cSUC b3 part cUNIV * * part cIMAGE / * * part cINSERT * b0 b2 * * part cINSERT * b0 cSUC b2 part cEMPTY part cUNIV * * part cIMAGE b0 part cUNIV f1
- |- (((!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))) ==> ((\lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))) lo)) = ((\lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))) lo))
T c= c==> ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f1 * / ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f1 f8 * / ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f1 f8
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- |- ((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0))))
T c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 f0 * / ! ! ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 f0 f2 * / ! ! ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 f0 f2
- |- ((~ T) = F)
T c= c~ cT cF
- |- (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT1 _0))))) ==> (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT1 _0)))) = F)) = (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT1 _0)))) = F))
T c= c==> c~ c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF c= c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 f0 * / ! ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 f0 f3 * / ! ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 f0 f3
- |- ((\s. (!vv. (((BBs_v39 s) vv) = ((LET (\V. (LET_END ((LET (\E. (LET_END ((LET (\FF. (LET_END ((V SUBSET ball_annulus) /\ (((periodic vv) (scs_k_v39 s)) /\ ((!i. (!j. (((real_le (((scs_a_v39 s) i) j)) (distance ((vv i) , (vv j)))) /\ ((real_le (distance ((vv i) , (vv j)))) (((scs_b_v39 s) i) j))))) /\ (((scs_k_v39 s) <= (NUMERAL (BIT1 (BIT1 _0)))) \/ (convex_local_fan (V , (E , FF)))))))))) ((IMAGE (\i. ((vv i) , (vv (SUC i))))) UNIV))))) ((IMAGE (\i. ((vv i) INSERT ((vv (SUC i)) INSERT EMPTY)))) UNIV))))) ((IMAGE vv) UNIV))))) s)
T * / ! c= cBBs_v39 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END c/\ cSUBSET b2 part cball_annulus c/\ cperiodic b1 cscs_k_v39 b0 c/\ ! ! c/\ creal_le cscs_a_v39 b0 b5 b6 cdistance c, * b1 b5 * b1 b6 creal_le cdistance c, * b1 b5 * b1 b6 cscs_b_v39 b0 b5 b6 c\/ c<= cscs_k_v39 b0 cNUMERAL cBIT1 cBIT1 c_0 cconvex_local_fan c, b2 c, b3 b4 * * part cIMAGE / c, * b1 b4 * b1 cSUC b4 part cUNIV * * part cIMAGE / * * part cINSERT * b1 b3 * * part cINSERT * b1 cSUC b3 part cEMPTY part cUNIV * * part cIMAGE b1 part cUNIV f0
- |- (((!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)) ==> ((\str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)) str)) = ((\str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)) str))
T c= c==> ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f0 * / c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f0 f9 * / c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f0 f9
- |- (T = ((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT1 (BIT1 _0)))))
T c= cT c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- ((\str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d)) str)
T * / c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f1 f9
- |- ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))))))))) k)
T * / ! ! ! ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b0 f1
- |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))))) alpha)
T * / ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f0 f5
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- ((\x. ((x IN P) = (P x))) x)
T * / c= cIN b0 f0 * f0 b0 f1
- |- ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))))
T c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))))))))) d)
T * / ! ! ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 f0 f2
- |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))))) b)
T * / ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f1 f4
- |- (((\j. (f j)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((~ ((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> (((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F)) = (((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F))
T c= c==> c~ c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF c= c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
- |- ((T /\ t) = t)
T c= c/\ cT f0 f0
- |- (T = (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))))
T c= cT c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- (((!alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))))) ==> ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))))) alpha)) = ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))))) alpha))
T c= c==> ! ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f0 * / ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f0 f5 * / ! ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f0 f5
- ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)) |- ((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T c==> c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_d_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = d))))))) b))
T c= c==> ! ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f1 * / ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f1 f4 * / ! ! ! ! ! c= cscs_d_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f1 f4
- |- (~ (~ T))
T c~ c~ cT
- |- (((!J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))) ==> ((\J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))) J)) = ((\J. (!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)))) J))
T c= c==> ! ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f0 * / ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f0 f7 * / ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f0 f7
