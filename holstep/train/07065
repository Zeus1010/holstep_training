N Dangeyj.DANGEYJ
C |- (!L. (!N. (!r. (!x. (!i. (!j. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> ((set_of_list (flatten (((((ntrans L) N) r) x) i))) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) j)))))))))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= f4 f5 cSUBSET * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f5
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D MEM_APPEND
A |- (!x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))))
T c= cMEM f0 cAPPEND f1 f2 c\/ cMEM f0 f1 cMEM f0 f2
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_eq
A |- (!x. (!y. ((x = y) = ((real_of_int x) = (real_of_int y)))))
T c= c= f0 f1 c= creal_of_int f0 creal_of_int f1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_EQ
A |- (!x. (!y. ((~ (x = y)) = (((int_lt x) y) \/ ((int_lt y) x)))))
T c= c~ c= f0 f1 c\/ cint_lt f0 f1 cint_lt f1 f0
D INT_NOT_LE
A |- (!x. (!y. ((~ ((int_le x) y)) = ((int_lt y) x))))
T c= c~ cint_le f0 f1 cint_lt f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D Misc_defs_and_lemmas.IN_ELIM_THM'
A |- ((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D UNIONS
A |- (!s. ((UNIONS s) = (GSPEC (\GEN%PVAR%1. (?x. (((SETSPEC GEN%PVAR%1) (?u. ((u IN s) /\ (x IN u)))) x))))))
T c= * part cUNIONS f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ cIN b2 f0 cIN b1 b2 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D IN_SET_OF_LIST
A |- (!x. (!l. ((x IN (set_of_list l)) = ((MEM x) l))))
T c= cIN f0 * part cset_of_list f1 cMEM f0 f1
D Hypermap.COM_POWER
A |- (!n. (!f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))))
T c= * * part cPOWER f0 cSUC f1 * * part co f0 * * part cPOWER f0 f1
D Hexagons.disj1
A |- (A ==> (A \/ B))
T c==> f0 c\/ f0 f1
D Nkezbfc_local.lemma
A |- (!A. (A \/ (~ A)))
T c\/ f0 c~ f0
D Nkezbfc_local.lemma1
A |- (!A. ((~ A) \/ A))
T c\/ c~ f0 f0
D Seq.mem_seq1
A |- (!x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y))))
T c= cMEM f0 cCONS f1 cNIL c= f0 f1
D Seq2.set_of_list_flatten
A |- (!s. ((set_of_list (flatten s)) = (UNIONS (GSPEC (\GEN%PVAR%7653. (?l. (((SETSPEC GEN%PVAR%7653) ((MEM l) s)) (set_of_list l))))))))
T c= * part cset_of_list cflatten f0 * part cUNIONS * part cGSPEC / c? / cSETSPEC b0 cMEM b1 f0 * part cset_of_list b1
D Tame_defs2.normal_list
A |- (!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))))))
T c= cnormal_list f0 f1 c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1
D Tame_defs2.transform_list
A |- (!L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))))
T c= ctransform_list f0 f1 c, f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f3 c, f2 f3 c, b5 cSND b4 cAPPEND creplace f3 cCONS cSND b4 cNIL f2 cCONS cFST b4 cNIL csplit_normal_list f0 f3 b3 b0 b2 cfind_face f0 b0 cprev_el f3 b1 cl'z f0 f2 f3 f1 cl'y f0 f3 f1
D Tame_defs2.ntrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= cntrans f0 f1 f2 f3 f4 cFST cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.MEM2_replace
A |- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))))
T c==> c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1
D Tame_list.MEM3_replace
A |- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))))
T c==> c/\ c~ c= f0 f1 cMEM f0 f2 cMEM f0 creplace f1 f3 f2
D Tame_list.uniq_flatten_uniq
A |- (!L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1
D Tame_list.AQIUNPP3
A |- (!L. (!i. (!N. (!r. (!x. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
D Dangeyj.transform_list_power_rep
A |- (!j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))))
T c= cPOWER * * part ctransform_list f0 f1 f2 c, f3 f4 c, cntrans f0 f3 f4 f1 f2 crtrans f0 f3 f4 f1 f2
D Dangeyj.SPLIT_NORMAL_LIST_CASES
A |- ((((MEM x) r) /\ (uniq r)) ==> (((MEM x) (FST (((((split_normal_list L) r) f) ram1) ram2))) \/ ((MEM x) (SND (((((split_normal_list L) r) f) ram1) ram2)))))
T c==> c/\ cMEM f0 f1 cuniq f1 c\/ cMEM f0 cFST csplit_normal_list f2 f1 f3 f4 f5 cMEM f0 cSND csplit_normal_list f2 f1 f3 f4 f5
+ (~ ((final_list L) r1)), (((next_el r1) x) = ((f_list L) x)), ((((l'y L) r1) x) = ram1), (l' = r1), (((find_face L) ram1) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)), (((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (((MEM x') r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> c~ cfinal_list f0 f1 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cl'y f0 f1 f2 f3 c==> c= f4 f1 c==> c= cfind_face f0 f3 f5 c==> c= crtrans f0 f6 f7 f2 f8 f1 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f6 f7 f2 f8 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f6 f7 f2 f8 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f6 f7 f2 f8 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f6 f7 f2 f8 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f6 f7 f2 f8 c==> cnormal_list f0 cntrans f0 f6 f7 f2 f8 c==> c= cprev_el f1 cl'z f0 cntrans f0 f6 f7 f2 f8 f1 f2 f9 c==> cMEM f10 f1 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f3 f9 cNIL cntrans f0 f6 f7 f2 f8 cCONS cFST csplit_normal_list f0 f1 f5 f3 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((~ (A ==> (A \/ B))) ==> F), (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) /\ ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c/\ c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((~ (l' = (((((rtrans L) N) r) x) j))) \/ (l' = (((((rtrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM l') (((((ntrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (((~ (l' = (((((rtrans L) N) r) x) j))) \/ (l' = (((((rtrans L) N) r) x) j))) /\ (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> c\/ c~ c= f6 crtrans f0 f1 f2 f3 f4 c= f6 crtrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM f6 cntrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f7 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c/\ c\/ c~ c= f6 crtrans f0 f1 f2 f3 f4 c= f6 crtrans f0 f1 f2 f3 f4 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b0 * part cset_of_list b1 cIN f7 b0
+ |- (((!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) ==> ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i)) = ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i))
T c= c==> ! c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (u = (set_of_list l)) |- ((\l'. (((MEM l') ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l')))) = (\l'. (((MEM l') ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ ((set_of_list l) = (set_of_list l')))))
T c==> c= f0 * part cset_of_list f1 c= / c/\ cMEM b0 cAPPEND creplace f2 cCONS cSND csplit_normal_list f3 f2 f4 f5 f6 cNIL cntrans f3 f7 f8 f9 f10 cCONS cFST csplit_normal_list f3 f2 f4 f5 f6 cNIL c= f0 * part cset_of_list b0 / c/\ cMEM b0 cAPPEND creplace f2 cCONS cSND csplit_normal_list f3 f2 f4 f5 f6 cNIL cntrans f3 f7 f8 f9 f10 cCONS cFST csplit_normal_list f3 f2 f4 f5 f6 cNIL c= * part cset_of_list f1 * part cset_of_list b0
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), ((((marked_list L) N) r) x) |- (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f5 c= b0 * part cset_of_list b1 cIN f6 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f5 cSUC f4 c==> cmarked_list f0 f1 f2 f3 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f6 b0
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- ((((\r1. ((((((rtrans L) N) r) x) j) = r1)) r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) f) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) f) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = T)
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f7 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f8 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f9 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 f7 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 f7 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b0 * part cset_of_list b1 cIN f8 b0 cT
+ (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) r1)), (u' = (set_of_list l')), (((next_el r1) x) = ((f_list L) x)), (l' = r1), (((find_face L) ram1) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)), (((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((((((rtrans L) N) r) x) j) = r1) /\ (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))
T c==> c~ cfinal_list f0 f1 c==> c= f2 * part cset_of_list f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= f3 f1 c==> c= cfind_face f0 f5 f6 c==> c= crtrans f0 f7 f8 f4 f9 f1 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f7 f8 f4 f9 f1 f4 c==> c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f7 f8 f4 f9 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f7 f8 f4 f9 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f7 f8 f4 f9 c==> cMEM f4 f1 c==> cMEM f1 cntrans f0 f7 f8 f4 f9 c==> cIN f10 f2 c==> cnormal_list f0 cntrans f0 f7 f8 f4 f9 c/\ c= crtrans f0 f7 f8 f4 f9 f1 c==> c= cl'y f0 f1 f4 f5 c==> c= cprev_el f1 cl'z f0 cntrans f0 f7 f8 f4 f9 f1 f4 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f6 f5 f11 cNIL cntrans f0 f7 f8 f4 f9 cCONS cFST csplit_normal_list f0 f1 f6 f5 f11 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
- ((~ (!A. ((~ A) \/ A))) ==> F) |- (((~ (!A. ((~ A) \/ A))) ==> F) /\ ((~ (!A. ((~ A) \/ A))) ==> F))
T c==> c==> c~ ! c\/ c~ b0 b0 cF c/\ c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ ((((((rtrans L) N) r) x) j) = r1), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) |- (((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j)))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cfinal_list f0 f5 cflag_list f0 cntrans f0 f1 f2 f3 f4
+ |- (((!x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) ==> ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x)) = ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x))
T c= c==> ! ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
- |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((((l'y L) r1) x) = ram1), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cl'y f0 f7 f3 f8 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f9 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f10 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f8 c==> c= cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f7 cCONS cSND csplit_normal_list f0 f7 f9 f8 f11 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f7 f9 f8 f11 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ |- (((!L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) ==> ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)) = ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L))
T c= c==> ! ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0 * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
- (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), ((((marked_list L) N) r) x) |- ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> ! c==> c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 f4 c= b1 * part cset_of_list b2 cIN b0 b1 c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 f5 c= b1 * part cset_of_list b2 cIN b0 b1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f6 * part cset_of_list f7 c==> c<= f4 f5 c==> c<= f4 cSUC f5 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cIN f8 f6 c==> cmarked_list f0 f1 f2 f3 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f8 b0 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f5 c= b0 * part cset_of_list b1 cIN f8 b0
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), ((((marked_list L) N) r) x) |- (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 * part cset_of_list f6 c==> c<= f7 f4 c==> c<= f7 cSUC f4 c==> cMEM f6 cntrans f0 f1 f2 f3 f7 c==> cIN f8 f5 c==> cmarked_list f0 f1 f2 f3 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f8 b0
- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((i <= (SUC j)) ==> (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> c<= f5 cSUC f4 c==> cMEM f6 cntrans f0 f1 f2 f3 f5 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f5 f4 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f8 b0
+ |- (((!l. ((x IN (set_of_list l)) = ((MEM x) l))) ==> ((\l. ((x IN (set_of_list l)) = ((MEM x) l))) l)) = ((\l. ((x IN (set_of_list l)) = ((MEM x) l))) l))
T c= c==> ! c= cIN f0 * part cset_of_list b0 cMEM f0 b0 * / c= cIN f0 * part cset_of_list b0 cMEM f0 b0 f1 * / c= cIN f0 * part cset_of_list b0 cMEM f0 b0 f1
+ (~ (l' = (((((rtrans L) N) r) x) j))) |- ((l' = (((((rtrans L) N) r) x) j)) = F)
T c==> c~ c= f0 crtrans f1 f2 f3 f4 f5 c= c= f0 crtrans f1 f2 f3 f4 f5 cF
+ (u' = (set_of_list l')), (((next_el r1) x) = ((f_list L) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)) |- ((((next_el r1) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))))
T c==> c= f0 * part cset_of_list f1 c==> c= cnext_el f2 f3 cf_list f4 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f4 cntrans f4 f5 f6 f3 f7 c==> cMEM f3 f2 c==> cMEM f2 cntrans f4 f5 f6 f3 f7 c==> cIN f8 f0 c==> cnormal_list f4 cntrans f4 f5 f6 f3 f7 c/\ c= cnext_el f2 f3 cf_list f4 f3 c==> cLET / cLET_END cfinal_list f4 b0 cfind_list cntrans f4 f5 f6 f3 f7 ce_list f3 c==> c==> cfinal_list f4 f2 cflag_list f4 cntrans f4 f5 f6 f3 f7 c==> c==> c~ cfinal_list f4 f2 cs_flag_list f4 cntrans f4 f5 f6 f3 f7 f2 f3 c==> c~ cfinal_list f4 f2 c==> c= f1 f2 c==> c= cfind_face f4 f9 f10 c==> c= crtrans f4 f5 f6 f3 f7 f2 c==> c= cl'y f4 f2 f3 f9 c==> c= cprev_el f2 cl'z f4 cntrans f4 f5 f6 f3 f7 f2 f3 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f4 f2 f10 f9 f11 cNIL cntrans f4 f5 f6 f3 f7 cCONS cFST csplit_normal_list f4 f2 f10 f9 f11 cNIL c= b0 * part cset_of_list b1 cIN f8 b0
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
- |- ((!A. (A ==> (A \/ T))) = ((T ==> (T \/ T)) /\ (F ==> (F \/ T))))
T c= ! c==> b0 c\/ b0 cT c/\ c==> cT c\/ cT cT c==> cF c\/ cF cT
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) f) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) f) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f7 c==> c= crtrans f0 f1 f2 f3 f4 f8 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f9 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 f7 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 f7 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b0 * part cset_of_list b1 cIN f9 b0
+ |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ ((MEM l) (((((ntrans L) N) r) x) i)) |- ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i = (SUC j)) ==> ((MEM l) (((((ntrans L) N) r) x) (SUC j))))))
T c==> cMEM f0 cntrans f1 f2 f3 f4 f5 c==> c= f6 * part cset_of_list f0 c==> cIN f7 f6 c==> c= f5 cSUC f8 cMEM f0 cntrans f1 f2 f3 f4 cSUC f8
- |- ((?ram1. ((((l'y L) r1) x) = ram1)) ==> (?ram1. ((((l'y L) r1) x) = ram1)))
T c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
- |- ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) = ((\ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) ram2))
T c= c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 f6 * / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0 f6
+ |- ((((i <= (SUC j)) ==> ((i <= j) \/ (i = (SUC j)))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c= c==> c==> c<= f0 cSUC f1 c\/ c<= f0 f1 c= f0 cSUC f1 c? / c/\ c? / c/\ cMEM b1 cntrans f2 f3 f4 f5 cSUC f1 c= b0 * part cset_of_list b1 cIN f6 b0 c? / c/\ c? / c/\ cMEM b1 cntrans f2 f3 f4 f5 cSUC f1 c= b0 * part cset_of_list b1 cIN f6 b0
+ (((MEM x') (FST (((((split_normal_list L) r1) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r1) f) ram1) ram2)))), ((MEM r1) (((((ntrans L) N) r) x) j)) |- (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> c\/ cMEM f0 cFST csplit_normal_list f1 f2 f3 f4 f5 cMEM f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f2 cntrans f1 f6 f7 f8 f9 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL cntrans f1 f6 f7 f8 f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c= b0 * part cset_of_list b1 cIN f0 b0
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- ((\ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) ram2) |- (((\ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) ram2) /\ (?ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)))
T c==> * / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0 f6 c/\ * / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0 f6 c? / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (((((l'y L) r1) x) = ram1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f7 c==> c= crtrans f0 f1 f2 f3 f4 f8 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f9 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c= cl'y f0 f8 f3 f10 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f8 cCONS cSND csplit_normal_list f0 f8 f7 cl'y f0 f8 f3 cprev_el f8 cl'z f0 cntrans f0 f1 f2 f3 f4 f8 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f8 f7 cl'y f0 f8 f3 cprev_el f8 cl'z f0 cntrans f0 f1 f2 f3 f4 f8 f3 cNIL c= b0 * part cset_of_list b1 cIN f9 b0
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (u' = (set_of_list l')), ((MEM r1) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))))))
T c==> c= f0 * part cset_of_list f1 c==> cMEM f2 cntrans f3 f4 f5 f6 f7 c==> cIN f8 f0 c==> cnormal_list f3 cntrans f3 f4 f5 f6 f7 c==> cMEM f6 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 cntrans f3 f4 f5 f6 f7 c==> c= cnext_el f2 f6 cf_list f3 f6 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list cntrans f3 f4 f5 f6 f7 ce_list f6 c==> c==> cfinal_list f3 f2 cflag_list f3 cntrans f3 f4 f5 f6 f7 c==> c==> c~ cfinal_list f3 f2 cs_flag_list f3 cntrans f3 f4 f5 f6 f7 f2 f6 c==> c~ cfinal_list f3 f2 c==> c= f1 f2 c==> c= cfind_face f3 f9 f10 c==> c= crtrans f3 f4 f5 f6 f7 f2 c==> c= cl'y f3 f2 f6 f9 c==> c= cprev_el f2 cl'z f3 cntrans f3 f4 f5 f6 f7 f2 f6 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f3 f2 f10 f9 f11 cNIL cntrans f3 f4 f5 f6 f7 cCONS cFST csplit_normal_list f3 f2 f10 f9 f11 cNIL c= b0 * part cset_of_list b1 cIN f8 b0
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ (u' = (set_of_list l')), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) /\ ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))))
T c==> c= f0 * part cset_of_list f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f2 cntrans f2 f3 f4 f5 f6 c==> cMEM f5 f7 c==> cMEM f7 cntrans f2 f3 f4 f5 f6 c==> cIN f8 f0 c==> cnormal_list f2 cntrans f2 f3 f4 f5 f6 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f2 cntrans f2 f3 f4 f5 f6 c==> c= cnext_el f7 f5 cf_list f2 f5 c==> cLET / cLET_END cfinal_list f2 b0 cfind_list cntrans f2 f3 f4 f5 f6 ce_list f5 c==> c==> cfinal_list f2 f7 cflag_list f2 cntrans f2 f3 f4 f5 f6 c==> c==> c~ cfinal_list f2 f7 cs_flag_list f2 cntrans f2 f3 f4 f5 f6 f7 f5 c==> c~ cfinal_list f2 f7 c==> c= f1 f7 c==> c= cfind_face f2 f9 f10 c==> c= crtrans f2 f3 f4 f5 f6 f7 c==> c= cl'y f2 f7 f5 f9 c==> c= cprev_el f7 cl'z f2 cntrans f2 f3 f4 f5 f6 f7 f5 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f7 cCONS cSND csplit_normal_list f2 f7 f10 f9 f11 cNIL cntrans f2 f3 f4 f5 f6 cCONS cFST csplit_normal_list f2 f7 f10 f9 f11 cNIL c= b0 * part cset_of_list b1 cIN f8 b0
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))) |- (((final_list L) (((((rtrans L) N) r) x) j)) = F)
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c= cfinal_list f0 crtrans f0 f1 f2 f3 f4 cF
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num j)) ==> ((~ ((int_le (int_of_num i)) ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0)))))) \/ (((int_le (int_of_num i)) (int_of_num j)) \/ ((int_of_num i) = ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0)))))))) = ((~ ((int_le (int_of_num i)) ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0)))))) \/ (((int_le (int_of_num i)) (int_of_num j)) \/ ((int_of_num i) = ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c~ cint_le cint_of_num f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c\/ cint_le cint_of_num f1 cint_of_num f0 c= cint_of_num f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c\/ c~ cint_le cint_of_num f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c\/ cint_le cint_of_num f1 cint_of_num f0 c= cint_of_num f1 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0
- (u = (set_of_list l)) |- ((\l'. (((MEM l') (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l')))) = (\l'. (((MEM l') (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ ((set_of_list l) = (set_of_list l')))))
T c==> c= f0 * part cset_of_list f1 c= / c/\ cMEM b0 cFST ctransform_list f2 f3 cPOWER * * part ctransform_list f2 f3 f4 c, f5 f6 c= f0 * part cset_of_list b0 / c/\ cMEM b0 cFST ctransform_list f2 f3 cPOWER * * part ctransform_list f2 f3 f4 c, f5 f6 c= * part cset_of_list f1 * part cset_of_list b0
+ |- ((\f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))) f)
T * / c= * * part cPOWER b0 cSUC f0 * * part co b0 * * part cPOWER b0 f0 f1
- (u = (set_of_list l)) |- ((\l'. (((MEM l') (FST (((transform_list L) x) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))))) /\ (u = (set_of_list l')))) = (\l'. (((MEM l') (FST (((transform_list L) x) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))))) /\ ((set_of_list l) = (set_of_list l')))))
T c==> c= f0 * part cset_of_list f1 c= / c/\ cMEM b0 cFST ctransform_list f2 f3 c, cntrans f2 f4 f5 f3 f6 crtrans f2 f4 f5 f3 f6 c= f0 * part cset_of_list b0 / c/\ cMEM b0 cFST ctransform_list f2 f3 c, cntrans f2 f4 f5 f3 f6 crtrans f2 f4 f5 f3 f6 c= * part cset_of_list f1 * part cset_of_list b0
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- (((!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) ==> ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x)) = ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x))
T c= c==> ! c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3 * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ |- (((uniq (flatten (((((ntrans L) N) r) x) j))) /\ ((MEM r1) (((((ntrans L) N) r) x) j))) ==> (uniq r1))
T c==> c/\ cuniq cflatten cntrans f0 f1 f2 f3 f4 cMEM f5 cntrans f0 f1 f2 f3 f4 cuniq f5
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2), ((((l'y L) r1) x) = ram1), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) /\ (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f10 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f11 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c/\ c= cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 f8 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f7 cCONS cSND csplit_normal_list f0 f7 f10 f9 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f7 f10 f9 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL c= b0 * part cset_of_list b1 cIN f11 b0
+ (i = (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)) |- ((i = (SUC j)) /\ ((MEM l) (((((ntrans L) N) r) x) (SUC j))))
T c==> c= f0 cSUC f1 c==> cMEM f2 cntrans f3 f4 f5 f6 f0 c/\ c= f0 cSUC f1 cMEM f2 cntrans f3 f4 f5 f6 cSUC f1
+ (~ ((final_list L) r1)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2), ((((l'y L) r1) x) = ram1), (l' = r1), (((find_face L) ram1) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)), (((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((MEM x') r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 f1 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 f1 c==> c= cfind_face f0 f7 f9 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f3 f4 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c==> cMEM f10 f1 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f7 f6 cNIL cntrans f0 f3 f4 f2 f5 cCONS cFST csplit_normal_list f0 f1 f9 f7 f6 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ ((\u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) u) |- ((((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u)) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> * / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 f6 c= c==> c/\ c? / c/\ cMEM b0 cntrans f0 f1 f2 f3 f4 c= f6 * part cset_of_list b0 cIN f5 f6 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f7 c= b0 * part cset_of_list b1 cIN f5 b0 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f7 c= b0 * part cset_of_list b1 cIN f5 b0
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), (x' IN u), ((((marked_list L) N) r) x) |- ((((\l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) l) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = T)
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f5 cSUC f4 c==> cIN f6 f7 c==> cmarked_list f0 f1 f2 f3 c= c==> * / c/\ cMEM b0 cntrans f0 f1 f2 f3 f5 c= f7 * part cset_of_list b0 f8 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f6 b0 cT
- |- ((?r1. ((((((rtrans L) N) r) x) j) = r1)) ==> (?r1. ((((((rtrans L) N) r) x) j) = r1)))
T c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c? / c= crtrans f0 f1 f2 f3 f4 b0
- |- ((((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f) ==> (?f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)))
T c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f5 c? / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0
+ ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((MEM x') r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> cMEM f0 cntrans f1 f2 f3 f4 f5 c==> cnormal_list f1 cntrans f1 f2 f3 f4 f5 c==> cMEM f6 f0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f0 cCONS cSND csplit_normal_list f1 f0 f7 f8 f9 cNIL cntrans f1 f2 f3 f4 f5 cCONS cFST csplit_normal_list f1 f0 f7 f8 f9 cNIL c= b0 * part cset_of_list b1 cIN f6 b0
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- |- ((transform_assumption_v2 L) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((i <= (SUC j)) ==> (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (((MEM l') (((((ntrans L) N) r) x) j)) ==> ((u' = (set_of_list l')) ==> ((x' IN u') ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))))))
T c==> ctransform_assumption_v2 f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c<= f4 cSUC f5 c==> cMEM f6 cntrans f0 f1 f2 f3 f4 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f4 f5 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f8 b0 c==> cMEM f9 cntrans f0 f1 f2 f3 f5 c==> c= f10 * part cset_of_list f9 c==> cIN f8 f10 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 cPOWER * * part ctransform_list f0 f3 f5 c, f1 f2 c= b0 * part cset_of_list b1 cIN f8 b0
+ |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x), ((\ram1. ((((l'y L) r1) x) = ram1)) ram1) |- (((\ram1. ((((l'y L) r1) x) = ram1)) ram1) /\ (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f7 c==> c= crtrans f0 f1 f2 f3 f4 f8 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f9 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> * / c= cl'y f0 f8 f3 b0 f10 c/\ * / c= cl'y f0 f8 f3 b0 f10 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f8 cCONS cSND csplit_normal_list f0 f8 f7 cl'y f0 f8 f3 cprev_el f8 cl'z f0 cntrans f0 f1 f2 f3 f4 f8 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f8 f7 cl'y f0 f8 f3 cprev_el f8 cl'z f0 cntrans f0 f1 f2 f3 f4 f8 f3 cNIL c= b0 * part cset_of_list b1 cIN f9 b0
+ |- (((!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) ==> ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)) = ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L))
T c= c==> ! ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), ((((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) /\ ((((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM l') (((((ntrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (?u. ((?l. (((MEM l) (FST (((transform_list L) x) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> cis_restricted chypermap_of_list f0 c==> c= f1 * part cset_of_list f2 c==> c/\ c= cnext_el crtrans f0 f3 f4 f5 f6 f5 cf_list f0 f5 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f5 f6 ce_list f5 c/\ c==> cfinal_list f0 crtrans f0 f3 f4 f5 f6 cflag_list f0 cntrans f0 f3 f4 f5 f6 c==> c~ cfinal_list f0 crtrans f0 f3 f4 f5 f6 cs_flag_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f5 f6 c==> cMEM f5 crtrans f0 f3 f4 f5 f6 c==> cMEM f2 cntrans f0 f3 f4 f5 f6 c==> cMEM crtrans f0 f3 f4 f5 f6 cntrans f0 f3 f4 f5 f6 c==> cIN f7 f1 c==> cnormal_list f0 cntrans f0 f3 f4 f5 f6 c==> cmarked_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f5 c, cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 c= b0 * part cset_of_list b1 cIN f7 b0
+ |- ((((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) j)) /\ (((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)) /\ (((MEM x) (((((rtrans L) N) r) x) j)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) /\ ((((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) /\ ((((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)))))))))) ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = (((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c= c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c/\ cMEM f3 crtrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c/\ c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c/\ c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 c, cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2 c= b0 * part cset_of_list b1 cIN f5 b0
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) /\ ((((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) /\ ((((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)))))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM l') (((((ntrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (?u. ((?l. (((MEM l) (FST (((transform_list L) x) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> cis_restricted chypermap_of_list f0 c==> c= f1 * part cset_of_list f2 c==> c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f5 f6 c/\ c= cnext_el crtrans f0 f3 f4 f5 f6 f5 cf_list f0 f5 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f5 f6 ce_list f5 c/\ c==> cfinal_list f0 crtrans f0 f3 f4 f5 f6 cflag_list f0 cntrans f0 f3 f4 f5 f6 c==> c~ cfinal_list f0 crtrans f0 f3 f4 f5 f6 cs_flag_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f5 f6 c==> cMEM f5 crtrans f0 f3 f4 f5 f6 c==> cMEM f2 cntrans f0 f3 f4 f5 f6 c==> cMEM crtrans f0 f3 f4 f5 f6 cntrans f0 f3 f4 f5 f6 c==> cIN f7 f1 c==> cnormal_list f0 cntrans f0 f3 f4 f5 f6 c==> cmarked_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f5 c, cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 c= b0 * part cset_of_list b1 cIN f7 b0
+ |- ((\f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))) f)
T * / ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2 f1
- (~ ((final_list L) (((((rtrans L) N) r) x) j))), (u = (set_of_list l)) |- ((\l'. (((MEM l') (FST (((COND ((final_list L) (((((rtrans L) N) r) x) j))) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))) (((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) , (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)))))))) /\ (u = (set_of_list l')))) = (\l'. (((MEM l') ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ ((set_of_list l) = (set_of_list l')))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> c= f5 * part cset_of_list f6 c= / c/\ cMEM b0 cFST cCOND cfinal_list f0 crtrans f0 f1 f2 f3 f4 c, cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 c, cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= f5 * part cset_of_list b0 / c/\ cMEM b0 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= * part cset_of_list f6 * part cset_of_list b0
+ (((MEM x') (SND (((((split_normal_list L) r1) f) ram1) ram2))) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))), (((MEM x') (FST (((((split_normal_list L) r1) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r1) f) ram1) ram2)))) |- (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> c==> cMEM f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL cntrans f1 f6 f7 f8 f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c= b0 * part cset_of_list b1 cIN f0 b0 c==> c\/ cMEM f0 cFST csplit_normal_list f1 f2 f3 f4 f5 cMEM f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL cntrans f1 f6 f7 f8 f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c= b0 * part cset_of_list b1 cIN f0 b0
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))) = T)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= ! ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2 cT
+ (u' = (set_of_list l')), (x' IN u') |- (((normal_list L) (((((ntrans L) N) r) x) j)) ==> (((MEM r1) (((((ntrans L) N) r) x) j)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))))))))
T c==> c= f0 * part cset_of_list f1 c==> cIN f2 f0 c==> cnormal_list f3 cntrans f3 f4 f5 f6 f7 c==> cMEM f8 cntrans f3 f4 f5 f6 f7 c==> cMEM f6 f8 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 cntrans f3 f4 f5 f6 f7 c==> c= cnext_el f8 f6 cf_list f3 f6 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list cntrans f3 f4 f5 f6 f7 ce_list f6 c==> c==> cfinal_list f3 f8 cflag_list f3 cntrans f3 f4 f5 f6 f7 c==> c==> c~ cfinal_list f3 f8 cs_flag_list f3 cntrans f3 f4 f5 f6 f7 f8 f6 c==> c~ cfinal_list f3 f8 c==> c= f1 f8 c==> c= cfind_face f3 f9 f10 c==> c= crtrans f3 f4 f5 f6 f7 f8 c==> c= cl'y f3 f8 f6 f9 c==> c= cprev_el f8 cl'z f3 cntrans f3 f4 f5 f6 f7 f8 f6 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f8 cCONS cSND csplit_normal_list f3 f8 f10 f9 f11 cNIL cntrans f3 f4 f5 f6 f7 cCONS cFST csplit_normal_list f3 f8 f10 f9 f11 cNIL c= b0 * part cset_of_list b1 cIN f2 b0
+ ((\r1. ((((((rtrans L) N) r) x) j) = r1)) r1) |- ((((((((rtrans L) N) r) x) j) = r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) f) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) f) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) f) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) f) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c= c==> c= crtrans f0 f1 f2 f3 f4 f5 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 f6 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 f6 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b0 * part cset_of_list b1 cIN f7 b0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 f6 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 f6 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b0 * part cset_of_list b1 cIN f7 b0
+ (~ ((final_list L) r1)), (u' = (set_of_list l')), (((next_el r1) x) = ((f_list L) x)), ((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)), (((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)) |- ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))
T c==> c~ cfinal_list f0 f1 c==> c= f2 * part cset_of_list f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f5 f6 f4 f7 f1 f4 c==> c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f5 f6 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f5 f6 f4 f7 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f5 f6 f4 f7 c==> cMEM f4 f1 c==> cMEM f1 cntrans f0 f5 f6 f4 f7 c==> cIN f8 f2 c==> cnormal_list f0 cntrans f0 f5 f6 f4 f7 c==> c= f3 f1 c==> c= cfind_face f0 f9 f10 c==> c= crtrans f0 f5 f6 f4 f7 f1 c==> c= cl'y f0 f1 f4 f9 c==> c= cprev_el f1 cl'z f0 cntrans f0 f5 f6 f4 f7 f1 f4 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f10 f9 f11 cNIL cntrans f0 f5 f6 f4 f7 cCONS cFST csplit_normal_list f0 f1 f10 f9 f11 cNIL c= b0 * part cset_of_list b1 cIN f8 b0
+ (u' = (set_of_list l')), ((MEM l') (((((ntrans L) N) r) x) j)), (x' IN u') |- ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l)))) /\ (x' IN u'))
T c==> c= f0 * part cset_of_list f1 c==> cMEM f1 cntrans f2 f3 f4 f5 f6 c==> cIN f7 f0 c/\ c? / c/\ cMEM b0 cntrans f2 f3 f4 f5 f6 c= f0 * part cset_of_list b0 cIN f7 f0
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302402)) /\ ((((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402)) \/ (((real_le ((real_add (real_of_int _10302402)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402)))) /\ (((real_le (real_of_int _10302402)) (real_of_num (NUMERAL _0))) \/ ((real_of_int _10302402) = (real_of_num (NUMERAL _0)))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302402)) /\ ((((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402)) \/ (((real_le ((real_add (real_of_int _10302402)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402)))) /\ (((real_le (real_of_int _10302402)) (real_of_num (NUMERAL _0))) \/ ((real_of_int _10302402) = (real_of_num (NUMERAL _0)))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c\/ creal_le creal_of_int f0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c\/ creal_le creal_of_int f0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 cF
+ (u = (set_of_list l)), (i = (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u) |- ((?l'. (((MEM l') (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l')))) /\ (x' IN u))
T c==> c= f0 * part cset_of_list f1 c==> c= f2 cSUC f3 c==> cMEM f1 cntrans f4 f5 f6 f7 f2 c==> cIN f8 f0 c/\ c? / c/\ cMEM b0 cntrans f4 f5 f6 f7 cSUC f3 c= f0 * part cset_of_list b0 cIN f8 f0
+ |- (((!i. (!j. ((i <= (SUC j)) ==> ((i <= j) \/ (i = (SUC j)))))) ==> ((\i. (!j. ((i <= (SUC j)) ==> ((i <= j) \/ (i = (SUC j)))))) i)) = ((\i. (!j. ((i <= (SUC j)) ==> ((i <= j) \/ (i = (SUC j)))))) i))
T c= c==> ! ! c==> c<= b0 cSUC b1 c\/ c<= b0 b1 c= b0 cSUC b1 * / ! c==> c<= b0 cSUC b1 c\/ c<= b0 b1 c= b0 cSUC b1 f0 * / ! c==> c<= b0 cSUC b1 c\/ c<= b0 b1 c= b0 cSUC b1 f0
- (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), ((((marked_list L) N) r) x) |- (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f6 c= b0 * part cset_of_list b1 cIN f5 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f7 * part cset_of_list f8 c==> c<= f4 f6 c==> c<= f4 cSUC f6 c==> cMEM f8 cntrans f0 f1 f2 f3 f4 c==> cIN f5 f7 c==> cmarked_list f0 f1 f2 f3 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f6 c= b0 * part cset_of_list b1 cIN f5 b0
+ |- ((t \/ T) = T)
T c= c\/ f0 cT cT
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- ((\x. (((real_mul x) (real_of_int _10302402)) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM l') (((((ntrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (?u. ((?l. (((MEM l) (FST (((transform_list L) x) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> cis_restricted chypermap_of_list f0 c==> c= f1 * part cset_of_list f2 c==> c= cnext_el crtrans f0 f3 f4 f5 f6 f5 cf_list f0 f5 c==> c==> c~ cfinal_list f0 crtrans f0 f3 f4 f5 f6 cs_flag_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c==> c==> cfinal_list f0 crtrans f0 f3 f4 f5 f6 cflag_list f0 cntrans f0 f3 f4 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f5 f6 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f5 f6 c==> cMEM f5 crtrans f0 f3 f4 f5 f6 c==> cMEM f2 cntrans f0 f3 f4 f5 f6 c==> cMEM crtrans f0 f3 f4 f5 f6 cntrans f0 f3 f4 f5 f6 c==> cIN f7 f1 c==> cnormal_list f0 cntrans f0 f3 f4 f5 f6 c==> cmarked_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f5 c, cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 c= b0 * part cset_of_list b1 cIN f7 b0
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((marked_list L) N) r) x) |- ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (((MEM l') (((((ntrans L) N) r) x) j)) ==> ((u' = (set_of_list l')) ==> ((x' IN u') ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c==> c= f4 * part cset_of_list f5 c==> cIN f6 f4 c==> c<= f7 f8 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f7 c= b0 * part cset_of_list b1 cIN f6 b0 c==> cMEM f9 cntrans f0 f1 f2 f3 f8 c==> c= f10 * part cset_of_list f9 c==> cIN f6 f10 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 cPOWER * * part ctransform_list f0 f3 f8 c, f1 f2 c= b0 * part cset_of_list b1 cIN f6 b0
+ ((MEM l') (((((ntrans L) N) r) x) j)) |- (T = (((MEM l') (((((ntrans L) N) r) x) j)) /\ ((set_of_list l') = (set_of_list l'))))
T c==> cMEM f0 cntrans f1 f2 f3 f4 f5 c= cT c/\ cMEM f0 cntrans f1 f2 f3 f4 f5 c= * part cset_of_list f0 * part cset_of_list f0
+ (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)) /\ (((MEM x) (((((rtrans L) N) r) x) j)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) /\ ((((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) /\ ((((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)))))))), ((MEM l') (((((ntrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (?u. ((?l. (((MEM l) (FST (((transform_list L) x) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> cis_restricted chypermap_of_list f0 c==> c= f1 * part cset_of_list f2 c==> c/\ cMEM crtrans f0 f3 f4 f5 f6 cntrans f0 f3 f4 f5 f6 c/\ cMEM f5 crtrans f0 f3 f4 f5 f6 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f5 f6 c/\ c= cnext_el crtrans f0 f3 f4 f5 f6 f5 cf_list f0 f5 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f5 f6 ce_list f5 c/\ c==> cfinal_list f0 crtrans f0 f3 f4 f5 f6 cflag_list f0 cntrans f0 f3 f4 f5 f6 c==> c~ cfinal_list f0 crtrans f0 f3 f4 f5 f6 cs_flag_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c==> cMEM f2 cntrans f0 f3 f4 f5 f6 c==> cMEM crtrans f0 f3 f4 f5 f6 cntrans f0 f3 f4 f5 f6 c==> cIN f7 f1 c==> cnormal_list f0 cntrans f0 f3 f4 f5 f6 c==> cmarked_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f5 c, cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 c= b0 * part cset_of_list b1 cIN f7 b0
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))) ==> ((\g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))) g)) = ((\g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))) g))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= c==> ! c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0 * / c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0 f3 * / c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0 f3
+ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (((MEM l') (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l'))), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), (x' IN u'), ((((marked_list L) N) r) x) |- (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f6 * part cset_of_list f7 c==> c/\ cMEM f8 cntrans f0 f1 f2 f3 f9 c= f10 * part cset_of_list f8 c==> c<= f4 f9 c==> c<= f4 cSUC f9 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cIN f5 f6 c==> cIN f5 f10 c==> cmarked_list f0 f1 f2 f3 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f9 c= b0 * part cset_of_list b1 cIN f5 b0
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (((MEM x') r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))))
T c==> cMEM f0 cntrans f1 f2 f3 f4 f5 c==> cnormal_list f1 cntrans f1 f2 f3 f4 f5 c==> c= cnext_el f0 f4 cf_list f1 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list cntrans f1 f2 f3 f4 f5 ce_list f4 c==> c==> cfinal_list f1 f0 cflag_list f1 cntrans f1 f2 f3 f4 f5 c==> c==> c~ cfinal_list f1 f0 cs_flag_list f1 cntrans f1 f2 f3 f4 f5 f0 f4 c==> c~ cfinal_list f1 f0 c==> c= f6 f0 c==> c= cfind_face f1 f7 f8 c==> c= crtrans f1 f2 f3 f4 f5 f0 c==> c= cl'y f1 f0 f4 f7 c==> c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 f9 c==> cMEM f10 f0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f0 cCONS cSND csplit_normal_list f1 f0 f8 f7 f9 cNIL cntrans f1 f2 f3 f4 f5 cCONS cFST csplit_normal_list f1 f0 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((((((rtrans L) N) r) x) j) = r1) |- (((next_el r1) x) = ((f_list L) x))
T c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c= cnext_el f5 f3 cf_list f0 f3
+ ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) \/ ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))))) |- (((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) \/ ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))))) /\ F)
T c==> c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 cF
+ |- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= (NUMERAL _0)))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (NUMERAL _0))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= f4 cNUMERAL c_0 ! c==> c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 f4 c= b1 * part cset_of_list b2 cIN b0 b1 c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 cNUMERAL c_0 c= b1 * part cset_of_list b2 cIN b0 b1
+ (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) ==> ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1)) = ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1))
T c= c==> ! ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((((l'y L) r1) x) = ram1), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cl'y f0 f7 f3 f8 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f9 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f10 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c= cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f7 cCONS cSND csplit_normal_list f0 f7 f9 f8 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f7 f9 f8 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), (x' IN u'), ((((marked_list L) N) r) x) |- ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l)))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f6 * part cset_of_list f7 c==> c<= f4 f8 c==> c<= f4 cSUC f8 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cIN f5 f6 c==> cIN f5 f9 c==> cmarked_list f0 f1 f2 f3 c==> c? / c/\ cMEM b0 cntrans f0 f1 f2 f3 f8 c= f9 * part cset_of_list b0 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f8 c= b0 * part cset_of_list b1 cIN f5 b0
+ (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM l') (((((ntrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (?u. ((?l. (((MEM l) (FST (((transform_list L) x) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> cis_restricted chypermap_of_list f0 c==> c= f1 * part cset_of_list f2 c==> c= cnext_el crtrans f0 f3 f4 f5 f6 f5 cf_list f0 f5 c==> c/\ c==> cfinal_list f0 crtrans f0 f3 f4 f5 f6 cflag_list f0 cntrans f0 f3 f4 f5 f6 c==> c~ cfinal_list f0 crtrans f0 f3 f4 f5 f6 cs_flag_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f5 f6 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f5 f6 c==> cMEM f5 crtrans f0 f3 f4 f5 f6 c==> cMEM f2 cntrans f0 f3 f4 f5 f6 c==> cMEM crtrans f0 f3 f4 f5 f6 cntrans f0 f3 f4 f5 f6 c==> cIN f7 f1 c==> cnormal_list f0 cntrans f0 f3 f4 f5 f6 c==> cmarked_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f5 c, cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 c= b0 * part cset_of_list b1 cIN f7 b0
+ (transform_assumption_v2 L) |- ((transform_assumption_v2 L) = T)
T c==> ctransform_assumption_v2 f0 c= ctransform_assumption_v2 f0 cT
- (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) |- ((\ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) ram2)
T c==> c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 f6 * / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0 f6
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), ((((marked_list L) N) r) x) |- (((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l)))) /\ (x' IN u')) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f6 * part cset_of_list f7 c==> c<= f4 f8 c==> c<= f4 cSUC f8 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cIN f5 f6 c==> cmarked_list f0 f1 f2 f3 c==> c/\ c? / c/\ cMEM b0 cntrans f0 f1 f2 f3 f8 c= f9 * part cset_of_list b0 cIN f5 f9 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f8 c= b0 * part cset_of_list b1 cIN f5 b0
- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), ((((marked_list L) N) r) x) |- (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f5 cSUC f4 c==> cmarked_list f0 f1 f2 f3 c==> cMEM f6 cntrans f0 f1 f2 f3 f5 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f5 f4 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f8 b0
+ |- (((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)) ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c= c==> c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2 c= b0 * part cset_of_list b1 cIN f5 b0 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2 c= b0 * part cset_of_list b1 cIN f5 b0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302402)) /\ ((((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402)) \/ (((real_le ((real_add (real_of_int _10302402)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402)))) /\ (((real_le (real_of_int _10302402)) (real_of_num (NUMERAL _0))) \/ ((real_of_int _10302402) = (real_of_num (NUMERAL _0)))))))) |- (((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) \/ ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))))) \/ ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) \/ ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c\/ creal_le creal_of_int f0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c\/ c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0
+ (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), ((((((rtrans L) N) r) x) j) = r1), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (((MEM r1) (((((ntrans L) N) r) x) j)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> c= f1 * part cset_of_list f2 c==> c= crtrans f0 f3 f4 f5 f6 f7 c==> cIN f8 f1 c==> cnormal_list f0 cntrans f0 f3 f4 f5 f6 c==> cmarked_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c==> cMEM f7 cntrans f0 f3 f4 f5 f6 c==> cMEM f5 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f5 f6 c==> c= cnext_el f7 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f5 f6 ce_list f5 c==> c==> cfinal_list f0 f7 cflag_list f0 cntrans f0 f3 f4 f5 f6 c==> c==> c~ cfinal_list f0 f7 cs_flag_list f0 cntrans f0 f3 f4 f5 f6 f7 f5 c==> c~ cfinal_list f0 f7 c==> c= f2 f7 c==> c= cfind_face f0 f9 f10 c==> c= crtrans f0 f3 f4 f5 f6 f7 c==> c= cl'y f0 f7 f5 f9 c==> c= cprev_el f7 cl'z f0 cntrans f0 f3 f4 f5 f6 f7 f5 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f7 cCONS cSND csplit_normal_list f0 f7 f10 f9 f11 cNIL cntrans f0 f3 f4 f5 f6 cCONS cFST csplit_normal_list f0 f7 f10 f9 f11 cNIL c= b0 * part cset_of_list b1 cIN f8 b0
- (u = (set_of_list l)) |- ((\l'. (((MEM l') (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l')))) = (\l'. (((MEM l') (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ ((set_of_list l) = (set_of_list l')))))
T c==> c= f0 * part cset_of_list f1 c= / c/\ cMEM b0 cntrans f2 f3 f4 f5 cSUC f6 c= f0 * part cset_of_list b0 / c/\ cMEM b0 cFST ctransform_list f2 f5 cPOWER * * part ctransform_list f2 f5 f6 c, f3 f4 c= * part cset_of_list f1 * part cset_of_list b0
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), ((((marked_list L) N) r) x) |- (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f5 cSUC f4 c==> cmarked_list f0 f1 f2 f3 ! c==> c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 f5 c= b1 * part cset_of_list b2 cIN b0 b1 c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 cSUC f4 c= b1 * part cset_of_list b2 cIN b0 b1
- |- (T = ((~ (!A. (A \/ (~ A)))) ==> F))
T c= cT c==> c~ ! c\/ b0 c~ b0 cF
+ |- (((?ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c= c==> c? / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f0 cCONS cSND csplit_normal_list f1 f0 f6 f7 cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 cNIL cntrans f1 f2 f3 f4 f5 cCONS cFST csplit_normal_list f1 f0 f6 f7 cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 cNIL c= b0 * part cset_of_list b1 cIN f8 b0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f0 cCONS cSND csplit_normal_list f1 f0 f6 f7 cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 cNIL cntrans f1 f2 f3 f4 f5 cCONS cFST csplit_normal_list f1 f0 f6 f7 cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 cNIL c= b0 * part cset_of_list b1 cIN f8 b0
- |- (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (((((((rtrans L) N) r) x) j) = r1) /\ (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) f) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) f) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f7 c==> c= crtrans f0 f1 f2 f3 f4 f8 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f9 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c/\ c= crtrans f0 f1 f2 f3 f4 f8 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 f7 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 f7 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b0 * part cset_of_list b1 cIN f9 b0
+ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), ((((marked_list L) N) r) x) |- (!u'. (((\u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))) u') ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f6 * part cset_of_list f7 c==> c<= f4 f8 c==> c<= f4 cSUC f8 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cIN f5 f6 c==> cmarked_list f0 f1 f2 f3 ! c==> * / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 f8 c= b1 * part cset_of_list b2 cIN f5 b1 b0 c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 cSUC f8 c= b1 * part cset_of_list b2 cIN f5 b1
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= ! ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 cT
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ |- (((!f. (!ram1. (!ram2. ((((MEM x') r1) /\ (uniq r1)) ==> (((MEM x') (FST (((((split_normal_list L) r1) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r1) f) ram1) ram2)))))))) ==> ((\f. (!ram1. (!ram2. ((((MEM x') r1) /\ (uniq r1)) ==> (((MEM x') (FST (((((split_normal_list L) r1) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r1) f) ram1) ram2)))))))) f)) = ((\f. (!ram1. (!ram2. ((((MEM x') r1) /\ (uniq r1)) ==> (((MEM x') (FST (((((split_normal_list L) r1) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r1) f) ram1) ram2)))))))) f))
T c= c==> ! ! ! c==> c/\ cMEM f0 f1 cuniq f1 c\/ cMEM f0 cFST csplit_normal_list f2 f1 b0 b1 b2 cMEM f0 cSND csplit_normal_list f2 f1 b0 b1 b2 * / ! ! c==> c/\ cMEM f0 f1 cuniq f1 c\/ cMEM f0 cFST csplit_normal_list f2 f1 b0 b1 b2 cMEM f0 cSND csplit_normal_list f2 f1 b0 b1 b2 f3 * / ! ! c==> c/\ cMEM f0 f1 cuniq f1 c\/ cMEM f0 cFST csplit_normal_list f2 f1 b0 b1 b2 cMEM f0 cSND csplit_normal_list f2 f1 b0 b1 b2 f3
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (transform_assumption_v2 L), ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= (SUC j))))) |- (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> ctransform_assumption_v2 f0 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= f5 cSUC f4 ! c==> c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 f5 c= b1 * part cset_of_list b2 cIN b0 b1 c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 cSUC f4 c= b1 * part cset_of_list b2 cIN b0 b1
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 cT
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))
T c==> cis_restricted chypermap_of_list f0 c==> c= f1 * part cset_of_list f2 c==> c= cnext_el crtrans f0 f3 f4 f5 f6 f5 cf_list f0 f5 c==> c= crtrans f0 f3 f4 f5 f6 f7 c==> c==> c~ cfinal_list f0 crtrans f0 f3 f4 f5 f6 cs_flag_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c==> c==> cfinal_list f0 crtrans f0 f3 f4 f5 f6 cflag_list f0 cntrans f0 f3 f4 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f5 f6 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f5 f6 c==> cMEM f5 crtrans f0 f3 f4 f5 f6 c==> cMEM crtrans f0 f3 f4 f5 f6 cntrans f0 f3 f4 f5 f6 c==> cIN f8 f1 c==> cnormal_list f0 cntrans f0 f3 f4 f5 f6 c==> cmarked_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c==> c~ cfinal_list f0 f7 c==> c= f2 f7 c==> c= cfind_face f0 f9 f10 c==> c= crtrans f0 f3 f4 f5 f6 f7 c==> c= cl'y f0 f7 f5 f9 c==> c= cprev_el f7 cl'z f0 cntrans f0 f3 f4 f5 f6 f7 f5 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f7 cCONS cSND csplit_normal_list f0 f7 f10 f9 f11 cNIL cntrans f0 f3 f4 f5 f6 cCONS cFST csplit_normal_list f0 f7 f10 f9 f11 cNIL c= b0 * part cset_of_list b1 cIN f8 b0
+ (((next_el r1) x) = ((f_list L) x)), ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- ((((next_el r1) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (((MEM x') r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))))
T c==> c= cnext_el f0 f1 cf_list f2 f1 c==> cMEM f0 cntrans f2 f3 f4 f1 f5 c==> cnormal_list f2 cntrans f2 f3 f4 f1 f5 c/\ c= cnext_el f0 f1 cf_list f2 f1 c==> cLET / cLET_END cfinal_list f2 b0 cfind_list cntrans f2 f3 f4 f1 f5 ce_list f1 c==> c==> cfinal_list f2 f0 cflag_list f2 cntrans f2 f3 f4 f1 f5 c==> c==> c~ cfinal_list f2 f0 cs_flag_list f2 cntrans f2 f3 f4 f1 f5 f0 f1 c==> c~ cfinal_list f2 f0 c==> c= f6 f0 c==> c= cfind_face f2 f7 f8 c==> c= crtrans f2 f3 f4 f1 f5 f0 c==> c= cl'y f2 f0 f1 f7 c==> c= cprev_el f0 cl'z f2 cntrans f2 f3 f4 f1 f5 f0 f1 f9 c==> cMEM f10 f0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f0 cCONS cSND csplit_normal_list f2 f0 f8 f7 f9 cNIL cntrans f2 f3 f4 f1 f5 cCONS cFST csplit_normal_list f2 f0 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- (((!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) ==> ((\x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) x)) = ((\x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) x))
T c= c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 * / ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 f0 * / ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 f0
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!i. (!j. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> ((set_of_list (flatten (((((ntrans L) N) r) x) i))) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) j))))))) = T)
T c= ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 b1 cSUBSET * part cset_of_list cflatten cntrans f0 f1 f2 f3 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 b1 cT
+ (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((((l'y L) r1) x) = ram1), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cl'y f0 f7 f3 f8 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f9 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f10 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c= cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f7 cCONS cSND csplit_normal_list f0 f7 f9 f8 f11 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f7 f9 f8 f11 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
- |- (((!x'. (((\ram1. ((((l'y L) r1) x) = ram1)) x') ==> (?ram1. ((((l'y L) r1) x) = ram1)))) ==> ((?ram1. ((((l'y L) r1) x) = ram1)) ==> (?ram1. ((((l'y L) r1) x) = ram1)))) = ((?ram1. ((((l'y L) r1) x) = ram1)) ==> (?ram1. ((((l'y L) r1) x) = ram1))))
T c= c==> ! c==> * / c= cl'y f0 f1 f2 b1 b0 c? / c= cl'y f0 f1 f2 b1 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0 c==> c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
- ((all (f_last L)) (((((ntrans L) N) r) x) j)) |- (((all (f_last L)) (((((ntrans L) N) r) x) j)) = T)
T c==> call * part cf_last f0 cntrans f0 f1 f2 f3 f4 c= call * part cf_last f0 cntrans f0 f1 f2 f3 f4 cT
+ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) |- ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) = T)
T c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c= c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 cT
+ |- ((\u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))) = (\u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c= / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f5 b0 / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2 c= b0 * part cset_of_list b1 cIN f5 b0
+ |- ((\s. ((UNIONS s) = (GSPEC (\GEN%PVAR%1. (?x. (((SETSPEC GEN%PVAR%1) (?u. ((u IN s) /\ (x IN u)))) x)))))) s)
T * / c= * part cUNIONS b0 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ cIN b3 b0 cIN b2 b3 b2 f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), (l' = (((((rtrans L) N) r) x) j)), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f7 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b0 * part cset_of_list b1 cIN f7 b0
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), (x' IN u), ((((marked_list L) N) r) x) |- ((((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f5 cSUC f4 c==> cIN f6 f7 c==> cmarked_list f0 f1 f2 f3 c==> c/\ cMEM f8 cntrans f0 f1 f2 f3 f5 c= f7 * part cset_of_list f8 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f6 b0
+ ((((l'y L) r1) x) = ram1), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((((((rtrans L) N) r) x) j) = r1) |- (((find_face L) ram1) = f)
T c==> c= cl'y f0 f1 f2 f3 c==> c= cfind_face f0 cl'y f0 crtrans f0 f4 f5 f2 f6 f2 f7 c==> c= crtrans f0 f4 f5 f2 f6 f1 c= cfind_face f0 f3 f7
+ (~ ((final_list L) r1)), (u' = (set_of_list l')), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2), ((((l'y L) r1) x) = ram1), (l' = r1), (((find_face L) ram1) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)), (((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> c~ cfinal_list f0 f1 c==> c= f2 * part cset_of_list f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cprev_el f1 cl'z f0 cntrans f0 f5 f6 f4 f7 f1 f4 f8 c==> c= cl'y f0 f1 f4 f9 c==> c= f3 f1 c==> c= cfind_face f0 f9 f10 c==> c= crtrans f0 f5 f6 f4 f7 f1 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f5 f6 f4 f7 f1 f4 c==> c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f5 f6 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f5 f6 f4 f7 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f5 f6 f4 f7 c==> cMEM f4 f1 c==> cMEM f1 cntrans f0 f5 f6 f4 f7 c==> cIN f11 f2 c==> cnormal_list f0 cntrans f0 f5 f6 f4 f7 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f10 f9 f8 cNIL cntrans f0 f5 f6 f4 f7 cCONS cFST csplit_normal_list f0 f1 f10 f9 f8 cNIL c= b0 * part cset_of_list b1 cIN f11 b0
- |- ((!A'. (A' \/ (~ A))) = ((!A. A) \/ (~ A)))
T c= ! c\/ b0 c~ f0 c\/ ! b0 c~ f0
+ |- ((\r. (!f. (!ram1. (!ram2. ((((MEM x') r) /\ (uniq r)) ==> (((MEM x') (FST (((((split_normal_list L) r) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r) f) ram1) ram2))))))))) r1)
T * / ! ! ! c==> c/\ cMEM f0 b0 cuniq b0 c\/ cMEM f0 cFST csplit_normal_list f1 b0 b1 b2 b3 cMEM f0 cSND csplit_normal_list f1 b0 b1 b2 b3 f2
+ (u' = (set_of_list l')), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((MEM x) r1) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))))))
T c==> c= f0 * part cset_of_list f1 c==> cMEM f2 f3 c==> cMEM f3 cntrans f4 f5 f6 f2 f7 c==> cIN f8 f0 c==> cnormal_list f4 cntrans f4 f5 f6 f2 f7 c/\ cMEM f2 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f4 cntrans f4 f5 f6 f2 f7 c==> c= cnext_el f3 f2 cf_list f4 f2 c==> cLET / cLET_END cfinal_list f4 b0 cfind_list cntrans f4 f5 f6 f2 f7 ce_list f2 c==> c==> cfinal_list f4 f3 cflag_list f4 cntrans f4 f5 f6 f2 f7 c==> c==> c~ cfinal_list f4 f3 cs_flag_list f4 cntrans f4 f5 f6 f2 f7 f3 f2 c==> c~ cfinal_list f4 f3 c==> c= f1 f3 c==> c= cfind_face f4 f9 f10 c==> c= crtrans f4 f5 f6 f2 f7 f3 c==> c= cl'y f4 f3 f2 f9 c==> c= cprev_el f3 cl'z f4 cntrans f4 f5 f6 f2 f7 f3 f2 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f3 cCONS cSND csplit_normal_list f4 f3 f10 f9 f11 cNIL cntrans f4 f5 f6 f2 f7 cCONS cFST csplit_normal_list f4 f3 f10 f9 f11 cNIL c= b0 * part cset_of_list b1 cIN f8 b0
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), ((((marked_list L) N) r) x) |- ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f5 cSUC f4 c==> cmarked_list f0 f1 f2 f3 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f5 c= b0 * part cset_of_list b1 cIN f6 b0 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f6 b0
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ ((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)), ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) /\ ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (((MEM x') r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))
T c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f2 f3 f4 f5 f1 f4 c==> cMEM f1 cntrans f0 f2 f3 f4 f5 c==> cnormal_list f0 cntrans f0 f2 f3 f4 f5 c/\ c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f2 f3 f4 f5 f1 f4 c==> c~ cfinal_list f0 f1 c==> c= f6 f1 c==> c= cfind_face f0 f7 f8 c==> c= crtrans f0 f2 f3 f4 f5 f1 c==> c= cl'y f0 f1 f4 f7 c==> c= cprev_el f1 cl'z f0 cntrans f0 f2 f3 f4 f5 f1 f4 f9 c==> cMEM f10 f1 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f7 f9 cNIL cntrans f0 f2 f3 f4 f5 cCONS cFST csplit_normal_list f0 f1 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) /\ F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 cF
+ ((\ram1. ((((l'y L) r1) x) = ram1)) ram1) |- ((((((l'y L) r1) x) = ram1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c= c==> c= cl'y f0 f1 f2 f3 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f4 cl'y f0 f1 f2 cprev_el f1 cl'z f0 cntrans f0 f5 f6 f2 f7 f1 f2 cNIL cntrans f0 f5 f6 f2 f7 cCONS cFST csplit_normal_list f0 f1 f4 cl'y f0 f1 f2 cprev_el f1 cl'z f0 cntrans f0 f5 f6 f2 f7 f1 f2 cNIL c= b0 * part cset_of_list b1 cIN f8 b0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f4 cl'y f0 f1 f2 cprev_el f1 cl'z f0 cntrans f0 f5 f6 f2 f7 f1 f2 cNIL cntrans f0 f5 f6 f2 f7 cCONS cFST csplit_normal_list f0 f1 f4 cl'y f0 f1 f2 cprev_el f1 cl'z f0 cntrans f0 f5 f6 f2 f7 f1 f2 cNIL c= b0 * part cset_of_list b1 cIN f8 b0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), (x' IN u'), ((((marked_list L) N) r) x) |- ((((\l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l)))) l') ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = T)
T c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f6 * part cset_of_list f7 c==> c<= f4 f8 c==> c<= f4 cSUC f8 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cIN f5 f6 c==> cIN f5 f9 c==> cmarked_list f0 f1 f2 f3 c= c==> * / c/\ cMEM b0 cntrans f0 f1 f2 f3 f8 c= f9 * part cset_of_list b0 f10 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f8 c= b0 * part cset_of_list b1 cIN f5 b0 cT
+ |- (((!r. (!f. (!ram1. (!ram2. ((((MEM x') r) /\ (uniq r)) ==> (((MEM x') (FST (((((split_normal_list L) r) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r) f) ram1) ram2))))))))) ==> ((\r. (!f. (!ram1. (!ram2. ((((MEM x') r) /\ (uniq r)) ==> (((MEM x') (FST (((((split_normal_list L) r) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r) f) ram1) ram2))))))))) r1)) = ((\r. (!f. (!ram1. (!ram2. ((((MEM x') r) /\ (uniq r)) ==> (((MEM x') (FST (((((split_normal_list L) r) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r) f) ram1) ram2))))))))) r1))
T c= c==> ! ! ! ! c==> c/\ cMEM f0 b0 cuniq b0 c\/ cMEM f0 cFST csplit_normal_list f1 b0 b1 b2 b3 cMEM f0 cSND csplit_normal_list f1 b0 b1 b2 b3 * / ! ! ! c==> c/\ cMEM f0 b0 cuniq b0 c\/ cMEM f0 cFST csplit_normal_list f1 b0 b1 b2 b3 cMEM f0 cSND csplit_normal_list f1 b0 b1 b2 b3 f2 * / ! ! ! c==> c/\ cMEM f0 b0 cuniq b0 c\/ cMEM f0 cFST csplit_normal_list f1 b0 b1 b2 b3 cMEM f0 cSND csplit_normal_list f1 b0 b1 b2 b3 f2
+ |- ((((((MEM x') r1) /\ (uniq r1)) ==> (((MEM x') (FST (((((split_normal_list L) r1) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r1) f) ram1) ram2))))) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c= c==> c==> c/\ cMEM f0 f1 cuniq f1 c\/ cMEM f0 cFST csplit_normal_list f2 f1 f3 f4 f5 cMEM f0 cSND csplit_normal_list f2 f1 f3 f4 f5 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL cntrans f2 f6 f7 f8 f9 cCONS cFST csplit_normal_list f2 f1 f3 f4 f5 cNIL c= b0 * part cset_of_list b1 cIN f0 b0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f2 f1 f3 f4 f5 cNIL cntrans f2 f6 f7 f8 f9 cCONS cFST csplit_normal_list f2 f1 f3 f4 f5 cNIL c= b0 * part cset_of_list b1 cIN f0 b0
+ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), (x' IN u'), ((((marked_list L) N) r) x), ((\l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l)))) l') |- (((\l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l)))) l') /\ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f6 * part cset_of_list f7 c==> c<= f4 f8 c==> c<= f4 cSUC f8 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cIN f5 f6 c==> cIN f5 f9 c==> cmarked_list f0 f1 f2 f3 c==> * / c/\ cMEM b0 cntrans f0 f1 f2 f3 f8 c= f9 * part cset_of_list b0 f10 c/\ * / c/\ cMEM b0 cntrans f0 f1 f2 f3 f8 c= f9 * part cset_of_list b0 f10 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f8 c= b0 * part cset_of_list b1 cIN f5 b0
+ |- (((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)) = ((\u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))) u))
T c= c/\ c? / c/\ cMEM b0 cntrans f0 f1 f2 f3 cSUC f4 c= f5 * part cset_of_list b0 cIN f6 f5 * / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f6 b0 f5
- ((MEM x) (((((rtrans L) N) r) x) j)) |- (((MEM x) (((((rtrans L) N) r) x) j)) = T)
T c==> cMEM f0 crtrans f1 f2 f3 f0 f4 c= cMEM f0 crtrans f1 f2 f3 f0 f4 cT
+ (u' = (set_of_list l')), ((MEM l') (((((ntrans L) N) r) x) j)), (x' IN u'), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c= f0 * part cset_of_list f1 c==> cMEM f1 cntrans f2 f3 f4 f5 f6 c==> cIN f7 f0 c==> cmarked_list f2 cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 f5 c==> cmarked_list f2 cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 f5 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f2 f5 cPOWER * * part ctransform_list f2 f5 f6 c, f3 f4 c= b0 * part cset_of_list b1 cIN f7 b0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1
- |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) j)) /\ (((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)) /\ (((MEM x) (((((rtrans L) N) r) x) j)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) /\ ((((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) /\ ((((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)))))))))), ((MEM l') (((((ntrans L) N) r) x) j)), (x' IN u'), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (?u. ((?l. (((MEM l) (FST (((transform_list L) x) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> cis_restricted chypermap_of_list f0 c==> c= f1 * part cset_of_list f2 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 cntrans f0 f3 f4 f5 f6 c/\ cMEM crtrans f0 f3 f4 f5 f6 cntrans f0 f3 f4 f5 f6 c/\ cMEM f5 crtrans f0 f3 f4 f5 f6 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f5 f6 c/\ c= cnext_el crtrans f0 f3 f4 f5 f6 f5 cf_list f0 f5 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f5 f6 ce_list f5 c/\ c==> cfinal_list f0 crtrans f0 f3 f4 f5 f6 cflag_list f0 cntrans f0 f3 f4 f5 f6 c==> c~ cfinal_list f0 crtrans f0 f3 f4 f5 f6 cs_flag_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c==> cMEM f2 cntrans f0 f3 f4 f5 f6 c==> cIN f7 f1 c==> cmarked_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f5 c, cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 c= b0 * part cset_of_list b1 cIN f7 b0
- ((~ (!A. ((~ A) \/ A))) ==> F) |- ((((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)) ==> ((~ (!A. ((~ A) \/ A))) ==> F))
T c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF
+ (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((marked_list L) N) r) x) |- (((MEM l') (((((ntrans L) N) r) x) j)) ==> ((u' = (set_of_list l')) ==> ((x' IN u') ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c==> cMEM f4 cntrans f0 f1 f2 f3 f5 c==> c= f6 * part cset_of_list f4 c==> cIN f7 f6 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 cPOWER * * part ctransform_list f0 f3 f5 c, f1 f2 c= b0 * part cset_of_list b1 cIN f7 b0
+ ((MEM x') (FST (((((split_normal_list L) r1) f) ram1) ram2))) |- (((MEM x') (FST (((((split_normal_list L) r1) f) ram1) ram2))) /\ (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> cMEM f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c/\ cMEM f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL cntrans f1 f6 f7 f8 f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c= b0 * part cset_of_list b1 cIN f0 b0
+ |- ((((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))))) ==> F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ (~ (l' = (((((rtrans L) N) r) x) j))), (u' = (set_of_list l')), ((MEM l') (((((ntrans L) N) r) x) j)), (x' IN u') |- ((~ (l' = (((((rtrans L) N) r) x) j))) /\ (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ c= f0 crtrans f1 f2 f3 f4 f5 c==> c= f6 * part cset_of_list f0 c==> cMEM f0 cntrans f1 f2 f3 f4 f5 c==> cIN f7 f6 c/\ c~ c= f0 crtrans f1 f2 f3 f4 f5 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f1 f2 f3 f4 f5 cCONS cSND csplit_normal_list f1 crtrans f1 f2 f3 f4 f5 cfind_face f1 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cprev_el crtrans f1 f2 f3 f4 f5 cl'z f1 cntrans f1 f2 f3 f4 f5 crtrans f1 f2 f3 f4 f5 f4 cNIL cntrans f1 f2 f3 f4 f5 cCONS cFST csplit_normal_list f1 crtrans f1 f2 f3 f4 f5 cfind_face f1 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cprev_el crtrans f1 f2 f3 f4 f5 cl'z f1 cntrans f1 f2 f3 f4 f5 crtrans f1 f2 f3 f4 f5 f4 cNIL c= b0 * part cset_of_list b1 cIN f7 b0
+ ((MEM l') (((((ntrans L) N) r) x) j)) |- ((\l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ ((set_of_list l') = (set_of_list l)))) l')
T c==> cMEM f0 cntrans f1 f2 f3 f4 f5 * / c/\ cMEM b0 cntrans f1 f2 f3 f4 f5 c= * part cset_of_list f0 * part cset_of_list b0 f0
+ |- (?ram1. ((((l'y L) r1) x) = ram1))
T c? / c= cl'y f0 f1 f2 b0
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))) |- ((\i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))) i)
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 * / c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 f5
- |- ((!A. (A ==> (A \/ F))) = ((T ==> (T \/ F)) /\ (F ==> (F \/ F))))
T c= ! c==> b0 c\/ b0 cF c/\ c==> cT c\/ cT cF c==> cF c\/ cF cF
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), (l' = (((((rtrans L) N) r) x) j)), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f8 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c= cfind_face f0 f9 f10 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c= cl'y f0 f7 f3 f9 c==> c= cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f7 cCONS cSND csplit_normal_list f0 f7 f10 f9 f11 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f7 f10 f9 f11 cNIL c= b0 * part cset_of_list b1 cIN f8 b0
+ |- (((((((rtrans L) N) r) x) j) = (((((rtrans L) N) r) x) j)) = ((\r1. ((((((rtrans L) N) r) x) j) = r1)) (((((rtrans L) N) r) x) j)))
T c= c= crtrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 * / c= crtrans f0 f1 f2 f3 f4 b0 crtrans f0 f1 f2 f3 f4
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ |- (((!j. ((i <= (SUC j)) ==> ((i <= j) \/ (i = (SUC j))))) ==> ((\j. ((i <= (SUC j)) ==> ((i <= j) \/ (i = (SUC j))))) j)) = ((\j. ((i <= (SUC j)) ==> ((i <= j) \/ (i = (SUC j))))) j))
T c= c==> ! c==> c<= f0 cSUC b0 c\/ c<= f0 b0 c= f0 cSUC b0 * / c==> c<= f0 cSUC b0 c\/ c<= f0 b0 c= f0 cSUC b0 f1 * / c==> c<= f0 cSUC b0 c\/ c<= f0 b0 c= f0 cSUC b0 f1
+ ((((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))))) ==> F), ((((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))))))) \/ (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))))) |- F
T c==> c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- ((?r1. ((((((rtrans L) N) r) x) j) = r1)) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) f) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) f) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f7 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f8 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 f7 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 f7 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b0 * part cset_of_list b1 cIN f8 b0
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ |- ((?u. ((?l. (((MEM l) (FST (((COND ((final_list L) (((((rtrans L) N) r) x) j))) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))) (((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) , (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)))))))) /\ (u = (set_of_list l)))) /\ (x' IN u))) = (?u. ((?l. (((MEM l) (FST (((transform_list L) x) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c= c? / c/\ c? / c/\ cMEM b1 cFST cCOND cfinal_list f0 crtrans f0 f1 f2 f3 f4 c, cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 c, cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= b0 * part cset_of_list b1 cIN f5 b0 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 c, cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0
+ (~ ((final_list L) r1)), (u' = (set_of_list l')), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2), ((((l'y L) r1) x) = ram1), (l' = r1), (((find_face L) ram1) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)), (((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)) |- ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) /\ (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 f1 c==> c= f2 * part cset_of_list f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cprev_el f1 cl'z f0 cntrans f0 f5 f6 f4 f7 f1 f4 f8 c==> c= cl'y f0 f1 f4 f9 c==> c= f3 f1 c==> c= cfind_face f0 f9 f10 c==> c= crtrans f0 f5 f6 f4 f7 f1 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f5 f6 f4 f7 f1 f4 c==> c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f5 f6 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f5 f6 f4 f7 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f5 f6 f4 f7 c==> cMEM f4 f1 c==> cMEM f1 cntrans f0 f5 f6 f4 f7 c==> cIN f11 f2 c==> cnormal_list f0 cntrans f0 f5 f6 f4 f7 c/\ c= cprev_el f1 cl'z f0 cntrans f0 f5 f6 f4 f7 f1 f4 f8 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f10 f9 f8 cNIL cntrans f0 f5 f6 f4 f7 cCONS cFST csplit_normal_list f0 f1 f10 f9 f8 cNIL c= b0 * part cset_of_list b1 cIN f11 b0
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), ((((marked_list L) N) r) x) |- (((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = T)
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f5 cSUC f4 c==> cmarked_list f0 f1 f2 f3 c= c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f5 c= b0 * part cset_of_list b1 cIN f6 b0 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f6 b0 cT
+ ((MEM x') (SND (((((split_normal_list L) r1) f) ram1) ram2))), ((MEM r1) (((((ntrans L) N) r) x) j)) |- ((\u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))) (set_of_list (SND (((((split_normal_list L) r1) f) ram1) ram2))))
T c==> cMEM f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f2 cntrans f1 f6 f7 f8 f9 * / c/\ c? / c/\ cMEM b1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL cntrans f1 f6 f7 f8 f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c= b0 * part cset_of_list b1 cIN f0 b0 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5
+ |- ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x)
T * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3
+ ((((l'y L) r1) x) = ram1) |- ((?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))) = (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c= cl'y f0 f1 f2 f3 c= c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f4 f3 cprev_el f1 cl'z f0 cntrans f0 f5 f6 f2 f7 f1 f2 cNIL cntrans f0 f5 f6 f2 f7 cCONS cFST csplit_normal_list f0 f1 f4 f3 cprev_el f1 cl'z f0 cntrans f0 f5 f6 f2 f7 f1 f2 cNIL c= b0 * part cset_of_list b1 cIN f8 b0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f4 cl'y f0 f1 f2 cprev_el f1 cl'z f0 cntrans f0 f5 f6 f2 f7 f1 f2 cNIL cntrans f0 f5 f6 f2 f7 cCONS cFST csplit_normal_list f0 f1 f4 cl'y f0 f1 f2 cprev_el f1 cl'z f0 cntrans f0 f5 f6 f2 f7 f1 f2 cNIL c= b0 * part cset_of_list b1 cIN f8 b0
+ (~ ((final_list L) r1)), (u' = (set_of_list l')), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2), ((((l'y L) r1) x) = ram1), (l' = r1), (((find_face L) ram1) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)), (((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- ((x' IN u') ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 f1 c==> c= f2 * part cset_of_list f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cprev_el f1 cl'z f0 cntrans f0 f5 f6 f4 f7 f1 f4 f8 c==> c= cl'y f0 f1 f4 f9 c==> c= f3 f1 c==> c= cfind_face f0 f9 f10 c==> c= crtrans f0 f5 f6 f4 f7 f1 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f5 f6 f4 f7 f1 f4 c==> c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f5 f6 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f5 f6 f4 f7 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f5 f6 f4 f7 c==> cMEM f4 f1 c==> cMEM f1 cntrans f0 f5 f6 f4 f7 c==> cnormal_list f0 cntrans f0 f5 f6 f4 f7 c==> cIN f11 f2 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f10 f9 f8 cNIL cntrans f0 f5 f6 f4 f7 cCONS cFST csplit_normal_list f0 f1 f10 f9 f8 cNIL c= b0 * part cset_of_list b1 cIN f11 b0
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), ((((marked_list L) N) r) x), ((\u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) u) |- (((\u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) u) /\ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f5 cSUC f4 c==> cmarked_list f0 f1 f2 f3 c==> * / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f5 c= b0 * part cset_of_list b1 cIN f6 b0 f7 c/\ * / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f5 c= b0 * part cset_of_list b1 cIN f6 b0 f7 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f6 b0
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)
T * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ ((\u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) u) |- ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))
T c==> * / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 f6 c/\ c? / c/\ cMEM b0 cntrans f0 f1 f2 f3 f4 c= f6 * part cset_of_list b0 cIN f5 f6
+ |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ (l' = (((((rtrans L) N) r) x) j)), ((((((rtrans L) N) r) x) j) = r1) |- (((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))) = ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))
T c==> c= f0 crtrans f1 f2 f3 f4 f5 c==> c= crtrans f1 f2 f3 f4 f5 f6 c= c==> c= f0 f6 c==> c= cfind_face f1 f7 f8 c==> c= crtrans f1 f2 f3 f4 f5 f6 c==> c= cl'y f1 f6 f4 f7 c==> c= cprev_el f6 cl'z f1 cntrans f1 f2 f3 f4 f5 f6 f4 f9 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f6 cCONS cSND csplit_normal_list f1 f6 f8 f7 f9 cNIL cntrans f1 f2 f3 f4 f5 cCONS cFST csplit_normal_list f1 f6 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0 c==> c= cfind_face f1 f7 f8 c==> c= crtrans f1 f2 f3 f4 f5 f6 c==> c= cl'y f1 f6 f4 f7 c==> c= cprev_el f6 cl'z f1 cntrans f1 f2 f3 f4 f5 f6 f4 f9 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f6 cCONS cSND csplit_normal_list f1 f6 f8 f7 f9 cNIL cntrans f1 f2 f3 f4 f5 cCONS cFST csplit_normal_list f1 f6 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ |- ((((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ ((set_of_list l) = (set_of_list l))) = ((\l'. (((MEM l') (((((ntrans L) N) r) x) (SUC j))) /\ ((set_of_list l) = (set_of_list l')))) l))
T c= c/\ cMEM f0 cntrans f1 f2 f3 f4 cSUC f5 c= * part cset_of_list f0 * part cset_of_list f0 * / c/\ cMEM b0 cntrans f1 f2 f3 f4 cSUC f5 c= * part cset_of_list f0 * part cset_of_list b0 f0
+ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (((MEM l') (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l'))), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), (x' IN u'), ((((marked_list L) N) r) x) |- ((((MEM l') (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l'))) /\ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f6 * part cset_of_list f7 c==> c/\ cMEM f8 cntrans f0 f1 f2 f3 f9 c= f10 * part cset_of_list f8 c==> c<= f4 f9 c==> c<= f4 cSUC f9 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cIN f5 f6 c==> cIN f5 f10 c==> cmarked_list f0 f1 f2 f3 c/\ c/\ cMEM f8 cntrans f0 f1 f2 f3 f9 c= f10 * part cset_of_list f8 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f9 c= b0 * part cset_of_list b1 cIN f5 b0
- (((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) |- ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) = T)
T c==> c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f2 f3 f4 f5 c= c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f2 f3 f4 f5 cT
- |- ((!A. ((~ A) \/ A)) = (((~ T) \/ T) /\ ((~ F) \/ F)))
T c= ! c\/ c~ b0 b0 c/\ c\/ c~ cT cT c\/ c~ cF cF
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i = (NUMERAL _0)))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (NUMERAL _0))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))) = (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= (NUMERAL _0)))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (NUMERAL _0))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))
T c= ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c= b0 cNUMERAL c_0 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 cNUMERAL c_0 c= b2 * part cset_of_list b3 cIN b1 b2 ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 cNUMERAL c_0 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 cNUMERAL c_0 c= b2 * part cset_of_list b3 cIN b1 b2
+ (~ ((final_list L) r1)), (u' = (set_of_list l')), (((next_el r1) x) = ((f_list L) x)), ((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)), (((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)) |- ((~ ((final_list L) r1)) /\ ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))
T c==> c~ cfinal_list f0 f1 c==> c= f2 * part cset_of_list f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f5 f6 f4 f7 f1 f4 c==> c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f5 f6 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f5 f6 f4 f7 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f5 f6 f4 f7 c==> cMEM f4 f1 c==> cMEM f1 cntrans f0 f5 f6 f4 f7 c==> cIN f8 f2 c==> cnormal_list f0 cntrans f0 f5 f6 f4 f7 c/\ c~ cfinal_list f0 f1 c==> c= f3 f1 c==> c= cfind_face f0 f9 f10 c==> c= crtrans f0 f5 f6 f4 f7 f1 c==> c= cl'y f0 f1 f4 f9 c==> c= cprev_el f1 cl'z f0 cntrans f0 f5 f6 f4 f7 f1 f4 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f10 f9 f11 cNIL cntrans f0 f5 f6 f4 f7 cCONS cFST csplit_normal_list f0 f1 f10 f9 f11 cNIL c= b0 * part cset_of_list b1 cIN f8 b0
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))) |- ((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= (SUC j)))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))) = T)
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c= c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= f5 cSUC f4 ! c==> c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 f5 c= b1 * part cset_of_list b2 cIN b0 b1 c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 cSUC f4 c= b1 * part cset_of_list b2 cIN b0 b1 cT
+ |- (((!x. (!L. (!r. (!f. (!ram1. (!ram2. ((((MEM x) r) /\ (uniq r)) ==> (((MEM x) (FST (((((split_normal_list L) r) f) ram1) ram2))) \/ ((MEM x) (SND (((((split_normal_list L) r) f) ram1) ram2))))))))))) ==> ((\x. (!L. (!r. (!f. (!ram1. (!ram2. ((((MEM x) r) /\ (uniq r)) ==> (((MEM x) (FST (((((split_normal_list L) r) f) ram1) ram2))) \/ ((MEM x) (SND (((((split_normal_list L) r) f) ram1) ram2))))))))))) x')) = ((\x. (!L. (!r. (!f. (!ram1. (!ram2. ((((MEM x) r) /\ (uniq r)) ==> (((MEM x) (FST (((((split_normal_list L) r) f) ram1) ram2))) \/ ((MEM x) (SND (((((split_normal_list L) r) f) ram1) ram2))))))))))) x'))
T c= c==> ! ! ! ! ! ! c==> c/\ cMEM b0 b2 cuniq b2 c\/ cMEM b0 cFST csplit_normal_list b1 b2 b3 b4 b5 cMEM b0 cSND csplit_normal_list b1 b2 b3 b4 b5 * / ! ! ! ! ! c==> c/\ cMEM b0 b2 cuniq b2 c\/ cMEM b0 cFST csplit_normal_list b1 b2 b3 b4 b5 cMEM b0 cSND csplit_normal_list b1 b2 b3 b4 b5 f0 * / ! ! ! ! ! c==> c/\ cMEM b0 b2 cuniq b2 c\/ cMEM b0 cFST csplit_normal_list b1 b2 b3 b4 b5 cMEM b0 cSND csplit_normal_list b1 b2 b3 b4 b5 f0
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!ram1. (!ram2. ((((MEM x') r1) /\ (uniq r1)) ==> (((MEM x') (FST (((((split_normal_list L) r1) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r1) f) ram1) ram2))))))) ==> ((\ram1. (!ram2. ((((MEM x') r1) /\ (uniq r1)) ==> (((MEM x') (FST (((((split_normal_list L) r1) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r1) f) ram1) ram2))))))) ram1)) = ((\ram1. (!ram2. ((((MEM x') r1) /\ (uniq r1)) ==> (((MEM x') (FST (((((split_normal_list L) r1) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r1) f) ram1) ram2))))))) ram1))
T c= c==> ! ! c==> c/\ cMEM f0 f1 cuniq f1 c\/ cMEM f0 cFST csplit_normal_list f2 f1 f3 b0 b1 cMEM f0 cSND csplit_normal_list f2 f1 f3 b0 b1 * / ! c==> c/\ cMEM f0 f1 cuniq f1 c\/ cMEM f0 cFST csplit_normal_list f2 f1 f3 b0 b1 cMEM f0 cSND csplit_normal_list f2 f1 f3 b0 b1 f4 * / ! c==> c/\ cMEM f0 f1 cuniq f1 c\/ cMEM f0 cFST csplit_normal_list f2 f1 f3 b0 b1 cMEM f0 cSND csplit_normal_list f2 f1 f3 b0 b1 f4
+ ((MEM r1) (((((ntrans L) N) r) x) j)) |- (((MEM (SND (((((split_normal_list L) r1) f) ram1) ram2))) (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) \/ ((SND (((((split_normal_list L) r1) f) ram1) ram2)) = (FST (((((split_normal_list L) r1) f) ram1) ram2))))
T c==> cMEM f0 cntrans f1 f2 f3 f4 f5 c\/ cMEM cSND csplit_normal_list f1 f0 f6 f7 f8 creplace f0 cCONS cSND csplit_normal_list f1 f0 f6 f7 f8 cNIL cntrans f1 f2 f3 f4 f5 c= cSND csplit_normal_list f1 f0 f6 f7 f8 cFST csplit_normal_list f1 f0 f6 f7 f8
- |- (((!x. (((\f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)) x) ==> (?f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)))) ==> ((?f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)) ==> (?f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)))) = ((?f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)) ==> (?f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f))))
T c= c==> ! c==> * / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b1 b0 c? / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b1 c==> c? / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0 c? / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0 c==> c? / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0 c? / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0
+ (l' = (((((rtrans L) N) r) x) j)), ((((((rtrans L) N) r) x) j) = r1) |- (l' = r1)
T c==> c= f0 crtrans f1 f2 f3 f4 f5 c==> c= crtrans f1 f2 f3 f4 f5 f6 c= f0 f6
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num i)) ==> ((((int_le (int_of_num i)) (int_of_num (NUMERAL _0))) /\ ((int_of_num i) = (int_of_num (NUMERAL _0)))) \/ ((~ ((int_le (int_of_num i)) (int_of_num (NUMERAL _0)))) /\ (~ ((int_of_num i) = (int_of_num (NUMERAL _0))))))) = ((((int_le (int_of_num i)) (int_of_num (NUMERAL _0))) /\ ((int_of_num i) = (int_of_num (NUMERAL _0)))) \/ ((~ ((int_le (int_of_num i)) (int_of_num (NUMERAL _0)))) /\ (~ ((int_of_num i) = (int_of_num (NUMERAL _0)))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c/\ cint_le cint_of_num f0 cint_of_num cNUMERAL c_0 c= cint_of_num f0 cint_of_num cNUMERAL c_0 c/\ c~ cint_le cint_of_num f0 cint_of_num cNUMERAL c_0 c~ c= cint_of_num f0 cint_of_num cNUMERAL c_0 c\/ c/\ cint_le cint_of_num f0 cint_of_num cNUMERAL c_0 c= cint_of_num f0 cint_of_num cNUMERAL c_0 c/\ c~ cint_le cint_of_num f0 cint_of_num cNUMERAL c_0 c~ c= cint_of_num f0 cint_of_num cNUMERAL c_0
- A |- ((A ==> (A \/ B)) ==> (A \/ B))
T c==> f0 c==> c==> f0 c\/ f0 f1 c\/ f0 f1
+ (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (x' IN u') |- ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) (((((ntrans L) N) r) x) j)) ==> (((MEM r1) (((((ntrans L) N) r) x) j)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> c= f1 * part cset_of_list f2 c==> cIN f3 f1 c/\ cis_restricted chypermap_of_list f0 c==> cnormal_list f0 cntrans f0 f4 f5 f6 f7 c==> cMEM f8 cntrans f0 f4 f5 f6 f7 c==> cMEM f6 f8 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f4 f5 f6 f7 c==> c= cnext_el f8 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f4 f5 f6 f7 ce_list f6 c==> c==> cfinal_list f0 f8 cflag_list f0 cntrans f0 f4 f5 f6 f7 c==> c==> c~ cfinal_list f0 f8 cs_flag_list f0 cntrans f0 f4 f5 f6 f7 f8 f6 c==> c~ cfinal_list f0 f8 c==> c= f2 f8 c==> c= cfind_face f0 f9 f10 c==> c= crtrans f0 f4 f5 f6 f7 f8 c==> c= cl'y f0 f8 f6 f9 c==> c= cprev_el f8 cl'z f0 cntrans f0 f4 f5 f6 f7 f8 f6 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f8 cCONS cSND csplit_normal_list f0 f8 f10 f9 f11 cNIL cntrans f0 f4 f5 f6 f7 cCONS cFST csplit_normal_list f0 f8 f10 f9 f11 cNIL c= b0 * part cset_of_list b1 cIN f3 b0
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), (x' IN u), ((((marked_list L) N) r) x) |- (!l. (((\l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) l) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f5 cSUC f4 c==> cIN f6 f7 c==> cmarked_list f0 f1 f2 f3 ! c==> * / c/\ cMEM b1 cntrans f0 f1 f2 f3 f5 c= f7 * part cset_of_list b1 b0 c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 cSUC f4 c= b1 * part cset_of_list b2 cIN f6 b1
+ |- (((int_le (int_of_num (NUMERAL _0))) _10302398) ==> (((int_le (int_of_num (NUMERAL _0))) _10302399) ==> ((~ ((int_le _10302398) ((int_add _10302399) (int_of_num (NUMERAL (BIT1 _0)))))) \/ (((int_le _10302398) _10302399) \/ (_10302398 = ((int_add _10302399) (int_of_num (NUMERAL (BIT1 _0)))))))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c~ cint_le f0 cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 c\/ cint_le f0 f1 c= f0 cint_add f1 cint_of_num cNUMERAL cBIT1 c_0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) x)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 f0
+ (u' = (set_of_list l')), (x' IN u') |- ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) j)) ==> (((MEM r1) (((((ntrans L) N) r) x) j)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))))))))
T c==> c= f0 * part cset_of_list f1 c==> cIN f2 f0 c==> cis_restricted chypermap_of_list f3 c==> cnormal_list f3 cntrans f3 f4 f5 f6 f7 c==> cMEM f8 cntrans f3 f4 f5 f6 f7 c==> cMEM f6 f8 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 cntrans f3 f4 f5 f6 f7 c==> c= cnext_el f8 f6 cf_list f3 f6 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list cntrans f3 f4 f5 f6 f7 ce_list f6 c==> c==> cfinal_list f3 f8 cflag_list f3 cntrans f3 f4 f5 f6 f7 c==> c==> c~ cfinal_list f3 f8 cs_flag_list f3 cntrans f3 f4 f5 f6 f7 f8 f6 c==> c~ cfinal_list f3 f8 c==> c= f1 f8 c==> c= cfind_face f3 f9 f10 c==> c= crtrans f3 f4 f5 f6 f7 f8 c==> c= cl'y f3 f8 f6 f9 c==> c= cprev_el f8 cl'z f3 cntrans f3 f4 f5 f6 f7 f8 f6 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f8 cCONS cSND csplit_normal_list f3 f8 f10 f9 f11 cNIL cntrans f3 f4 f5 f6 f7 cCONS cFST csplit_normal_list f3 f8 f10 f9 f11 cNIL c= b0 * part cset_of_list b1 cIN f2 b0
- |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ (uniq (flatten (((((ntrans L) N) r) x) j))), ((MEM x') r1), ((MEM r1) (((((ntrans L) N) r) x) j)) |- ((((uniq (flatten (((((ntrans L) N) r) x) j))) /\ ((MEM r1) (((((ntrans L) N) r) x) j))) ==> (uniq r1)) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> cuniq cflatten cntrans f0 f1 f2 f3 f4 c==> cMEM f5 f6 c==> cMEM f6 cntrans f0 f1 f2 f3 f4 c==> c==> c/\ cuniq cflatten cntrans f0 f1 f2 f3 f4 cMEM f6 cntrans f0 f1 f2 f3 f4 cuniq f6 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f6 cCONS cSND csplit_normal_list f0 f6 f7 f8 f9 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f6 f7 f8 f9 cNIL c= b0 * part cset_of_list b1 cIN f5 b0
+ (u' = (set_of_list l')), ((MEM r1) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((MEM r1) (((((ntrans L) N) r) x) j)) /\ (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))))))
T c==> c= f0 * part cset_of_list f1 c==> cMEM f2 cntrans f3 f4 f5 f6 f7 c==> cIN f8 f0 c==> cnormal_list f3 cntrans f3 f4 f5 f6 f7 c/\ cMEM f2 cntrans f3 f4 f5 f6 f7 c==> cMEM f6 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 cntrans f3 f4 f5 f6 f7 c==> c= cnext_el f2 f6 cf_list f3 f6 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list cntrans f3 f4 f5 f6 f7 ce_list f6 c==> c==> cfinal_list f3 f2 cflag_list f3 cntrans f3 f4 f5 f6 f7 c==> c==> c~ cfinal_list f3 f2 cs_flag_list f3 cntrans f3 f4 f5 f6 f7 f2 f6 c==> c~ cfinal_list f3 f2 c==> c= f1 f2 c==> c= cfind_face f3 f9 f10 c==> c= crtrans f3 f4 f5 f6 f7 f2 c==> c= cl'y f3 f2 f6 f9 c==> c= cprev_el f2 cl'z f3 cntrans f3 f4 f5 f6 f7 f2 f6 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f3 f2 f10 f9 f11 cNIL cntrans f3 f4 f5 f6 f7 cCONS cFST csplit_normal_list f3 f2 f10 f9 f11 cNIL c= b0 * part cset_of_list b1 cIN f8 b0
+ |- (((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l)))) /\ (x' IN u')) = ((\u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))) u'))
T c= c/\ c? / c/\ cMEM b0 cntrans f0 f1 f2 f3 f4 c= f5 * part cset_of_list b0 cIN f6 f5 * / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f6 b0 f5
- |- ((?l'. t) = t)
T c= c? / f0 f0
+ ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) /\ ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (((MEM x') r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))))
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cMEM f5 cntrans f0 f1 f2 f3 f4 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> c==> cfinal_list f0 f5 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> c==> c~ cfinal_list f0 f5 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c~ cfinal_list f0 f5 c==> c= f6 f5 c==> c= cfind_face f0 f7 f8 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 f7 c==> c= cprev_el f5 cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f9 c==> cMEM f10 f5 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f5 cCONS cSND csplit_normal_list f0 f5 f8 f7 f9 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f5 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
- |- ((?ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) ==> (?ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)))
T c==> c? / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0 c? / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0
+ (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM l') (((((ntrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (?u. ((?l. (((MEM l) (FST (((COND ((final_list L) (((((rtrans L) N) r) x) j))) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))) (((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) , (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)))))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> cis_restricted chypermap_of_list f0 c==> c= f1 * part cset_of_list f2 c==> c= cnext_el crtrans f0 f3 f4 f5 f6 f5 cf_list f0 f5 c==> c==> c~ cfinal_list f0 crtrans f0 f3 f4 f5 f6 cs_flag_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c==> c==> cfinal_list f0 crtrans f0 f3 f4 f5 f6 cflag_list f0 cntrans f0 f3 f4 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f5 f6 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f5 f6 c==> cMEM f5 crtrans f0 f3 f4 f5 f6 c==> cMEM f2 cntrans f0 f3 f4 f5 f6 c==> cMEM crtrans f0 f3 f4 f5 f6 cntrans f0 f3 f4 f5 f6 c==> cIN f7 f1 c==> cnormal_list f0 cntrans f0 f3 f4 f5 f6 c==> cmarked_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c? / c/\ c? / c/\ cMEM b1 cFST cCOND cfinal_list f0 crtrans f0 f3 f4 f5 f6 c, cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 c, cAPPEND creplace crtrans f0 f3 f4 f5 f6 cCONS cSND csplit_normal_list f0 crtrans f0 f3 f4 f5 f6 cfind_face f0 cl'y f0 crtrans f0 f3 f4 f5 f6 f5 cl'y f0 crtrans f0 f3 f4 f5 f6 f5 cprev_el crtrans f0 f3 f4 f5 f6 cl'z f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 cNIL cntrans f0 f3 f4 f5 f6 cCONS cFST csplit_normal_list f0 crtrans f0 f3 f4 f5 f6 cfind_face f0 cl'y f0 crtrans f0 f3 f4 f5 f6 f5 cl'y f0 crtrans f0 f3 f4 f5 f6 f5 cprev_el crtrans f0 f3 f4 f5 f6 cl'z f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 cNIL cSND csplit_normal_list f0 crtrans f0 f3 f4 f5 f6 cfind_face f0 cl'y f0 crtrans f0 f3 f4 f5 f6 f5 cl'y f0 crtrans f0 f3 f4 f5 f6 f5 cprev_el crtrans f0 f3 f4 f5 f6 cl'z f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c= b0 * part cset_of_list b1 cIN f7 b0
+ (x' IN u') |- ((x' IN u') = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
+ ((((((rtrans L) N) r) x) j) = r1), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)) |- ((((MEM r1) (((((ntrans L) N) r) x) j)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))))))) = (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))))))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c= c==> cMEM f5 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f5 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> c==> cfinal_list f0 f5 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> c==> c~ cfinal_list f0 f5 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c~ cfinal_list f0 f5 c==> c= f6 f5 c==> c= cfind_face f0 f7 f8 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 f7 c==> c= cprev_el f5 cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f9 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f5 cCONS cSND csplit_normal_list f0 f5 f8 f7 f9 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f5 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0 c==> cMEM f3 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f5 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> c==> cfinal_list f0 f5 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> c==> c~ cfinal_list f0 f5 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c~ cfinal_list f0 f5 c==> c= f6 f5 c==> c= cfind_face f0 f7 f8 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 f7 c==> c= cprev_el f5 cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f9 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f5 cCONS cSND csplit_normal_list f0 f5 f8 f7 f9 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f5 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ |- ((u IN (GSPEC (\GEN%PVAR%7653. (?l. (((SETSPEC GEN%PVAR%7653) ((MEM l) (((((ntrans L) N) r) x) j))) (set_of_list l)))))) = (?l. (((\p. (\t. (p /\ (u = t)))) ((MEM l) (((((ntrans L) N) r) x) j))) (set_of_list l))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 cMEM b1 cntrans f1 f2 f3 f4 f5 * part cset_of_list b1 c? / * * / / c/\ b1 c= f0 b2 cMEM b0 cntrans f1 f2 f3 f4 f5 * part cset_of_list b0
+ (l' = r1), ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- ((l' = r1) /\ ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (((MEM x') r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))
T c==> c= f0 f1 c==> cMEM f1 cntrans f2 f3 f4 f5 f6 c==> cnormal_list f2 cntrans f2 f3 f4 f5 f6 c/\ c= f0 f1 c==> c= cfind_face f2 f7 f8 c==> c= crtrans f2 f3 f4 f5 f6 f1 c==> c= cl'y f2 f1 f5 f7 c==> c= cprev_el f1 cl'z f2 cntrans f2 f3 f4 f5 f6 f1 f5 f9 c==> cMEM f10 f1 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f2 f1 f8 f7 f9 cNIL cntrans f2 f3 f4 f5 f6 cCONS cFST csplit_normal_list f2 f1 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
- (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) j))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) j)))))) |- ((((MEM d) (flatten (((((ntrans L) N) r) x) j))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) j))))) = T)
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 c= c==> cMEM f5 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 f5 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 cT
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- ((?ram1. ((((l'y L) r1) x) = ram1)) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f7 c==> c= crtrans f0 f1 f2 f3 f4 f8 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f9 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c? / c= cl'y f0 f8 f3 b0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f8 cCONS cSND csplit_normal_list f0 f8 f7 cl'y f0 f8 f3 cprev_el f8 cl'z f0 cntrans f0 f1 f2 f3 f4 f8 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f8 f7 cl'y f0 f8 f3 cprev_el f8 cl'z f0 cntrans f0 f1 f2 f3 f4 f8 f3 cNIL c= b0 * part cset_of_list b1 cIN f9 b0
+ |- ((\r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))) r)
T * / ! c= ctransform_list f0 b1 c, f1 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b0 c, f1 b0 c, b7 cSND b6 cAPPEND creplace b0 cCONS cSND b6 cNIL f1 cCONS cFST b6 cNIL csplit_normal_list f0 b0 b5 b2 b4 cfind_face f0 b2 cprev_el b0 b3 cl'z f0 f1 b0 b1 cl'y f0 b0 b1 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (l' = (((((rtrans L) N) r) x) j))), ((MEM l') (((((ntrans L) N) r) x) j)) |- (?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ ((set_of_list l') = (set_of_list l))))
T c==> c~ c= f0 crtrans f1 f2 f3 f4 f5 c==> cMEM f0 cntrans f1 f2 f3 f4 f5 c? / c/\ cMEM b0 cAPPEND creplace crtrans f1 f2 f3 f4 f5 cCONS cSND csplit_normal_list f1 crtrans f1 f2 f3 f4 f5 cfind_face f1 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cprev_el crtrans f1 f2 f3 f4 f5 cl'z f1 cntrans f1 f2 f3 f4 f5 crtrans f1 f2 f3 f4 f5 f4 cNIL cntrans f1 f2 f3 f4 f5 cCONS cFST csplit_normal_list f1 crtrans f1 f2 f3 f4 f5 cfind_face f1 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cprev_el crtrans f1 f2 f3 f4 f5 cl'z f1 cntrans f1 f2 f3 f4 f5 crtrans f1 f2 f3 f4 f5 f4 cNIL c= * part cset_of_list f0 * part cset_of_list b0
+ |- ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x)
T * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0
+ |- (((!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) ==> ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x)) = ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x))
T c= c==> ! ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
- |- (((((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)) ==> (((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F))) = (((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)))
T c= c==> c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF
+ (u' = (set_of_list l')), ((MEM l') (((((ntrans L) N) r) x) j)), (x' IN u') |- ((~ (l' = (((((rtrans L) N) r) x) j))) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c= f0 * part cset_of_list f1 c==> cMEM f1 cntrans f2 f3 f4 f5 f6 c==> cIN f7 f0 c==> c~ c= f1 crtrans f2 f3 f4 f5 f6 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f2 f3 f4 f5 f6 cCONS cSND csplit_normal_list f2 crtrans f2 f3 f4 f5 f6 cfind_face f2 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cprev_el crtrans f2 f3 f4 f5 f6 cl'z f2 cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 f5 cNIL cntrans f2 f3 f4 f5 f6 cCONS cFST csplit_normal_list f2 crtrans f2 f3 f4 f5 f6 cfind_face f2 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cprev_el crtrans f2 f3 f4 f5 f6 cl'z f2 cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 f5 cNIL c= b0 * part cset_of_list b1 cIN f7 b0
+ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), (x' IN u'), ((((marked_list L) N) r) x) |- (!l'. (((\l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l)))) l') ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f6 * part cset_of_list f7 c==> c<= f4 f8 c==> c<= f4 cSUC f8 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cIN f5 f6 c==> cIN f5 f9 c==> cmarked_list f0 f1 f2 f3 ! c==> * / c/\ cMEM b1 cntrans f0 f1 f2 f3 f8 c= f9 * part cset_of_list b1 b0 c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 cSUC f8 c= b1 * part cset_of_list b2 cIN f5 b1
+ (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM l') (((((ntrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> (?u. ((?l. (((MEM l) (FST (((COND ((final_list L) (((((rtrans L) N) r) x) j))) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))) (((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) , (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)))))))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> cis_restricted chypermap_of_list f0 c==> c= f1 * part cset_of_list f2 c==> c= cnext_el crtrans f0 f3 f4 f5 f6 f5 cf_list f0 f5 c==> c==> c~ cfinal_list f0 crtrans f0 f3 f4 f5 f6 cs_flag_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c==> c==> cfinal_list f0 crtrans f0 f3 f4 f5 f6 cflag_list f0 cntrans f0 f3 f4 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f5 f6 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f5 f6 c==> cMEM f5 crtrans f0 f3 f4 f5 f6 c==> cMEM f2 cntrans f0 f3 f4 f5 f6 c==> cMEM crtrans f0 f3 f4 f5 f6 cntrans f0 f3 f4 f5 f6 c==> cIN f7 f1 c==> cnormal_list f0 cntrans f0 f3 f4 f5 f6 c==> cmarked_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c==> c~ cfinal_list f0 crtrans f0 f3 f4 f5 f6 c? / c/\ c? / c/\ cMEM b1 cFST cCOND cfinal_list f0 crtrans f0 f3 f4 f5 f6 c, cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 c, cAPPEND creplace crtrans f0 f3 f4 f5 f6 cCONS cSND csplit_normal_list f0 crtrans f0 f3 f4 f5 f6 cfind_face f0 cl'y f0 crtrans f0 f3 f4 f5 f6 f5 cl'y f0 crtrans f0 f3 f4 f5 f6 f5 cprev_el crtrans f0 f3 f4 f5 f6 cl'z f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 cNIL cntrans f0 f3 f4 f5 f6 cCONS cFST csplit_normal_list f0 crtrans f0 f3 f4 f5 f6 cfind_face f0 cl'y f0 crtrans f0 f3 f4 f5 f6 f5 cl'y f0 crtrans f0 f3 f4 f5 f6 f5 cprev_el crtrans f0 f3 f4 f5 f6 cl'z f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 cNIL cSND csplit_normal_list f0 crtrans f0 f3 f4 f5 f6 cfind_face f0 cl'y f0 crtrans f0 f3 f4 f5 f6 f5 cl'y f0 crtrans f0 f3 f4 f5 f6 f5 cprev_el crtrans f0 f3 f4 f5 f6 cl'z f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c= b0 * part cset_of_list b1 cIN f7 b0
+ |- ((((!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= (NUMERAL _0)))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (NUMERAL _0))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))) /\ (!j. ((!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))) ==> (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= (SUC j)))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))) ==> (!j. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))) = (!j. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))
T c= c==> c/\ ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 cNUMERAL c_0 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 cNUMERAL c_0 c= b2 * part cset_of_list b3 cIN b1 b2 ! c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b1 b0 ! c==> c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b1 c= b3 * part cset_of_list b4 cIN b2 b3 c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b0 c= b3 * part cset_of_list b4 cIN b2 b3 ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b1 cSUC b0 ! c==> c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b1 c= b3 * part cset_of_list b4 cIN b2 b3 c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 cSUC b0 c= b3 * part cset_of_list b4 cIN b2 b3 ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b1 b0 ! c==> c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b1 c= b3 * part cset_of_list b4 cIN b2 b3 c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b0 c= b3 * part cset_of_list b4 cIN b2 b3 ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b1 b0 ! c==> c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b1 c= b3 * part cset_of_list b4 cIN b2 b3 c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b0 c= b3 * part cset_of_list b4 cIN b2 b3
+ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (u' = (set_of_list l')), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), ((MEM l') (((((ntrans L) N) r) x) j)), (x' IN u), (x' IN u'), ((((marked_list L) N) r) x) |- (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f6 * part cset_of_list f7 c==> c= f8 * part cset_of_list f9 c==> c<= f4 f10 c==> c<= f4 cSUC f10 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cMEM f9 cntrans f0 f1 f2 f3 f10 c==> cIN f5 f6 c==> cIN f5 f8 c==> cmarked_list f0 f1 f2 f3 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 cPOWER * * part ctransform_list f0 f3 f10 c, f1 f2 c= b0 * part cset_of_list b1 cIN f5 b0
+ |- ((\ram1. (!ram2. ((((MEM x') r1) /\ (uniq r1)) ==> (((MEM x') (FST (((((split_normal_list L) r1) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r1) f) ram1) ram2))))))) ram1)
T * / ! c==> c/\ cMEM f0 f1 cuniq f1 c\/ cMEM f0 cFST csplit_normal_list f2 f1 f3 b0 b1 cMEM f0 cSND csplit_normal_list f2 f1 f3 b0 b1 f4
+ ((MEM x') (SND (((((split_normal_list L) r1) f) ram1) ram2))) |- ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ ((set_of_list (SND (((((split_normal_list L) r1) f) ram1) ram2))) = (set_of_list l)))) = ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ ((set_of_list (SND (((((split_normal_list L) r1) f) ram1) ram2))) = (set_of_list l)))) /\ (x' IN (set_of_list (SND (((((split_normal_list L) r1) f) ram1) ram2))))))
T c==> cMEM f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c= c? / c/\ cMEM b0 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL cntrans f1 f6 f7 f8 f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c= * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 * part cset_of_list b0 c/\ c? / c/\ cMEM b0 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL cntrans f1 f6 f7 f8 f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c= * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 * part cset_of_list b0 cIN f0 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5
- |- ((((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)) ==> (((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)))
T c==> c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF
- |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) ==> (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3
+ ((\l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) l) |- (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))
T c==> * / c/\ cMEM b0 cntrans f0 f1 f2 f3 f4 c= f5 * part cset_of_list b0 f6 c/\ cMEM f6 cntrans f0 f1 f2 f3 f4 c= f5 * part cset_of_list f6
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), ((((marked_list L) N) r) x) |- (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 * part cset_of_list f6 c==> c<= f7 cSUC f4 c==> cMEM f6 cntrans f0 f1 f2 f3 f7 c==> cIN f8 f5 c==> cmarked_list f0 f1 f2 f3 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f8 b0
+ (i = (SUC j)) |- (T = (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((MEM l) (((((ntrans L) N) r) x) (SUC j)))))
T c==> c= f0 cSUC f1 c= cT c==> cMEM f2 cntrans f3 f4 f5 f6 f0 cMEM f2 cntrans f3 f4 f5 f6 cSUC f1
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (transform_assumption_v2 L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= (SUC j)))) |- (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> ctransform_assumption_v2 f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= f5 cSUC f4 ! c==> c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 f5 c= b1 * part cset_of_list b2 cIN b0 b1 c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 cSUC f4 c= b1 * part cset_of_list b2 cIN b0 b1
+ |- ((!i. (!j. ((~ ((int_le (int_of_num i)) ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0)))))) \/ (((int_le (int_of_num i)) (int_of_num j)) \/ ((int_of_num i) = ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0))))))))) = (!i. (!j. ((i <= (SUC j)) ==> ((i <= j) \/ (i = (SUC j)))))))
T c= ! ! c\/ c~ cint_le cint_of_num b0 cint_add cint_of_num b1 cint_of_num cNUMERAL cBIT1 c_0 c\/ cint_le cint_of_num b0 cint_of_num b1 c= cint_of_num b0 cint_add cint_of_num b1 cint_of_num cNUMERAL cBIT1 c_0 ! ! c==> c<= b0 cSUC b1 c\/ c<= b0 b1 c= b0 cSUC b1
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))), (((MEM f) g) /\ ((MEM x) xs)) |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) /\ ((MEM x) (((replace f) xs) g)))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c==> c/\ cMEM f0 f1 cMEM f2 f3 c/\ ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 cMEM f2 creplace f0 f3 f1
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ |- (((!x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) ==> ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x)) = ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x))
T c= c==> ! ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0 * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((((l'y L) r1) x) = ram1), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (((\ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cl'y f0 f7 f3 f8 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f9 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f10 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> * / c= cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 b0 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f7 cCONS cSND csplit_normal_list f0 f7 f9 f8 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f7 f9 f8 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), (x' IN u'), ((((marked_list L) N) r) x) |- (((!x. (((\l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l)))) x) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))) ==> ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l)))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))) = ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l)))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f6 * part cset_of_list f7 c==> c<= f4 f8 c==> c<= f4 cSUC f8 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cIN f5 f6 c==> cIN f5 f9 c==> cmarked_list f0 f1 f2 f3 c= c==> ! c==> * / c/\ cMEM b1 cntrans f0 f1 f2 f3 f8 c= f9 * part cset_of_list b1 b0 c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 cSUC f8 c= b1 * part cset_of_list b2 cIN f5 b1 c==> c? / c/\ cMEM b0 cntrans f0 f1 f2 f3 f8 c= f9 * part cset_of_list b0 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f8 c= b0 * part cset_of_list b1 cIN f5 b0 c==> c? / c/\ cMEM b0 cntrans f0 f1 f2 f3 f8 c= f9 * part cset_of_list b0 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f8 c= b0 * part cset_of_list b1 cIN f5 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), ((((marked_list L) N) r) x) |- (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (((MEM l') (((((ntrans L) N) r) x) j)) ==> ((u' = (set_of_list l')) ==> ((x' IN u') ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f1 cSUC f2 c==> cmarked_list f0 f3 f4 f5 c==> cMEM f6 cntrans f0 f3 f4 f5 f1 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f1 f2 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f3 f4 f5 f1 c= b0 * part cset_of_list b1 cIN f8 b0 c==> cMEM f9 cntrans f0 f3 f4 f5 f2 c==> c= f10 * part cset_of_list f9 c==> cIN f8 f10 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f5 cPOWER * * part ctransform_list f0 f5 f2 c, f3 f4 c= b0 * part cset_of_list b1 cIN f8 b0
+ |- ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) ==> F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 cF
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- ((\A. (A \/ (~ A))) ((final_list L) (((((rtrans L) N) r) x) j)))
T * / c\/ b0 c~ b0 cfinal_list f0 crtrans f0 f1 f2 f3 f4
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (!r1. (((\r1. ((((((rtrans L) N) r) x) j) = r1)) r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) f) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) f) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f7 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f8 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 ! c==> * / c= crtrans f0 f1 f2 f3 f4 b1 b0 c? / c/\ c? / c/\ cMEM b2 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 f7 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 f7 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b1 * part cset_of_list b2 cIN f8 b1
+ |- (((((uniq (flatten (((((ntrans L) N) r) x) j))) /\ ((MEM r1) (((((ntrans L) N) r) x) j))) ==> (uniq r1)) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c= c==> c==> c/\ cuniq cflatten cntrans f0 f1 f2 f3 f4 cMEM f5 cntrans f0 f1 f2 f3 f4 cuniq f5 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f5 cCONS cSND csplit_normal_list f0 f5 f6 f7 f8 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f5 f6 f7 f8 cNIL c= b0 * part cset_of_list b1 cIN f9 b0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f5 cCONS cSND csplit_normal_list f0 f5 f6 f7 f8 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f5 f6 f7 f8 cNIL c= b0 * part cset_of_list b1 cIN f9 b0
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2
+ (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((\f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)) f) ==> (?f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f))) = T)
T c= c==> * / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0 f5 c? / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0 cT
+ |- (((!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= (NUMERAL _0)))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (NUMERAL _0))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))) /\ (!j. ((!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))) ==> (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= (SUC j)))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))) ==> (!j. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))
T c==> c/\ ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 cNUMERAL c_0 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 cNUMERAL c_0 c= b2 * part cset_of_list b3 cIN b1 b2 ! c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b1 b0 ! c==> c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b1 c= b3 * part cset_of_list b4 cIN b2 b3 c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b0 c= b3 * part cset_of_list b4 cIN b2 b3 ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b1 cSUC b0 ! c==> c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b1 c= b3 * part cset_of_list b4 cIN b2 b3 c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 cSUC b0 c= b3 * part cset_of_list b4 cIN b2 b3 ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b1 b0 ! c==> c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b1 c= b3 * part cset_of_list b4 cIN b2 b3 c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b0 c= b3 * part cset_of_list b4 cIN b2 b3
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((((l'y L) r1) x) = ram1), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (((((l'y L) r1) x) = ram1) /\ (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cl'y f0 f7 f3 f8 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f9 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f10 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c/\ c= cl'y f0 f7 f3 f8 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f7 cCONS cSND csplit_normal_list f0 f7 f9 cl'y f0 f7 f3 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f7 f9 cl'y f0 f7 f3 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
- |- ((!A. (A \/ (~ A))) = ((T \/ (~ T)) /\ (F \/ (~ F))))
T c= ! c\/ b0 c~ b0 c/\ c\/ cT c~ cT c\/ cF c~ cF
+ ((((((rtrans L) N) r) x) j) = r1), ((MEM x) (((((rtrans L) N) r) x) j)) |- ((MEM x) r1)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 cMEM f3 f5
- |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) ==> (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)))
T c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
+ (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((next_el r1) x) = ((f_list L) x)), ((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)), (((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (((MEM x') r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))
T c==> c= cnext_el f0 f1 cf_list f2 f1 c==> c==> c~ cfinal_list f2 f0 cs_flag_list f2 cntrans f2 f3 f4 f1 f5 f0 f1 c==> c==> cfinal_list f2 f0 cflag_list f2 cntrans f2 f3 f4 f1 f5 c==> cLET / cLET_END cfinal_list f2 b0 cfind_list cntrans f2 f3 f4 f1 f5 ce_list f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f2 cntrans f2 f3 f4 f1 f5 c==> cMEM f1 f0 c==> cMEM f0 cntrans f2 f3 f4 f1 f5 c==> cnormal_list f2 cntrans f2 f3 f4 f1 f5 c==> c~ cfinal_list f2 f0 c==> c= f6 f0 c==> c= cfind_face f2 f7 f8 c==> c= crtrans f2 f3 f4 f1 f5 f0 c==> c= cl'y f2 f0 f1 f7 c==> c= cprev_el f0 cl'z f2 cntrans f2 f3 f4 f1 f5 f0 f1 f9 c==> cMEM f10 f0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f0 cCONS cSND csplit_normal_list f2 f0 f8 f7 f9 cNIL cntrans f2 f3 f4 f1 f5 cCONS cFST csplit_normal_list f2 f0 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ |- ((((int_le (int_of_num i)) (int_of_num (NUMERAL _0))) /\ ((int_of_num i) = (int_of_num (NUMERAL _0)))) \/ ((~ ((int_le (int_of_num i)) (int_of_num (NUMERAL _0)))) /\ (~ ((int_of_num i) = (int_of_num (NUMERAL _0))))))
T c\/ c/\ cint_le cint_of_num f0 cint_of_num cNUMERAL c_0 c= cint_of_num f0 cint_of_num cNUMERAL c_0 c/\ c~ cint_le cint_of_num f0 cint_of_num cNUMERAL c_0 c~ c= cint_of_num f0 cint_of_num cNUMERAL c_0
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= (SUC j)))) |- (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= f5 cSUC f4 ! c==> c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 f5 c= b1 * part cset_of_list b2 cIN b0 b1 c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 cSUC f4 c= b1 * part cset_of_list b2 cIN b0 b1
+ (~ (l' = (((((rtrans L) N) r) x) j))), ((MEM l') (((((ntrans L) N) r) x) j)) |- (((MEM l') ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ ((set_of_list l') = (set_of_list l')))
T c==> c~ c= f0 crtrans f1 f2 f3 f4 f5 c==> cMEM f0 cntrans f1 f2 f3 f4 f5 c/\ cMEM f0 cAPPEND creplace crtrans f1 f2 f3 f4 f5 cCONS cSND csplit_normal_list f1 crtrans f1 f2 f3 f4 f5 cfind_face f1 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cprev_el crtrans f1 f2 f3 f4 f5 cl'z f1 cntrans f1 f2 f3 f4 f5 crtrans f1 f2 f3 f4 f5 f4 cNIL cntrans f1 f2 f3 f4 f5 cCONS cFST csplit_normal_list f1 crtrans f1 f2 f3 f4 f5 cfind_face f1 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cprev_el crtrans f1 f2 f3 f4 f5 cl'z f1 cntrans f1 f2 f3 f4 f5 crtrans f1 f2 f3 f4 f5 f4 cNIL c= * part cset_of_list f0 * part cset_of_list f0
- ((~ (!A. ((~ A) \/ A))) ==> F), (((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)) |- (((~ (!A. ((~ A) \/ A))) ==> F) /\ ((~ (!A. ((~ A) \/ A))) ==> F))
T c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c/\ c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), ((((marked_list L) N) r) x) |- ((!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f1 * part cset_of_list f2 c==> c<= f3 f4 c==> c<= f3 cSUC f4 c==> cMEM f2 cntrans f0 f5 f6 f7 f3 c==> cIN f8 f1 c==> cmarked_list f0 f5 f6 f7 c==> ! c==> c? / c/\ c? / c/\ cMEM b2 cntrans f0 f5 f6 f7 f3 c= b1 * part cset_of_list b2 cIN b0 b1 c? / c/\ c? / c/\ cMEM b2 cntrans f0 f5 f6 f7 f4 c= b1 * part cset_of_list b2 cIN b0 b1 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f5 f6 f7 cSUC f4 c= b0 * part cset_of_list b1 cIN f8 b0
+ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((marked_list L) N) r) x) |- ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) /\ (((MEM l') (((((ntrans L) N) r) x) j)) ==> ((u' = (set_of_list l')) ==> ((x' IN u') ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))
T c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c/\ c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> cMEM f6 cntrans f0 f1 f2 f3 f7 c==> c= f8 * part cset_of_list f6 c==> cIN f5 f8 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 cPOWER * * part ctransform_list f0 f3 f7 c, f1 f2 c= b0 * part cset_of_list b1 cIN f5 b0
- ((~ (A ==> (A \/ B))) ==> F) |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) ==> ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- (((int_le (int_of_num (NUMERAL _0))) _10302402) ==> ((((int_le _10302402) (int_of_num (NUMERAL _0))) /\ (_10302402 = (int_of_num (NUMERAL _0)))) \/ ((~ ((int_le _10302402) (int_of_num (NUMERAL _0)))) /\ (~ (_10302402 = (int_of_num (NUMERAL _0)))))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c\/ c/\ cint_le f0 cint_of_num cNUMERAL c_0 c= f0 cint_of_num cNUMERAL c_0 c/\ c~ cint_le f0 cint_of_num cNUMERAL c_0 c~ c= f0 cint_of_num cNUMERAL c_0
+ |- (((((MEM x) r) /\ (uniq r)) ==> (((MEM x) (FST (((((split_normal_list L) r) f) ram1) ram2))) \/ ((MEM x) (SND (((((split_normal_list L) r) f) ram1) ram2))))) = T)
T c= c==> c/\ cMEM f0 f1 cuniq f1 c\/ cMEM f0 cFST csplit_normal_list f2 f1 f3 f4 f5 cMEM f0 cSND csplit_normal_list f2 f1 f3 f4 f5 cT
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= ! ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 cT
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302402)) /\ ((((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402)) \/ (((real_le ((real_add (real_of_int _10302402)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_le ((real_add (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402)))) /\ (((real_le (real_of_int _10302402)) (real_of_num (NUMERAL _0))) \/ ((real_of_int _10302402) = (real_of_num (NUMERAL _0)))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_le creal_add creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c\/ creal_le creal_of_int f0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- (!x. (((real_mul x) (real_of_int _10302402)) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (uniq r1), ((MEM x') r1), ((MEM r1) (((((ntrans L) N) r) x) j)) |- (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> cuniq f0 c==> cMEM f1 f0 c==> cMEM f0 cntrans f2 f3 f4 f5 f6 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f0 cCONS cSND csplit_normal_list f2 f0 f7 f8 f9 cNIL cntrans f2 f3 f4 f5 f6 cCONS cFST csplit_normal_list f2 f0 f7 f8 f9 cNIL c= b0 * part cset_of_list b1 cIN f1 b0
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((marked_list L) N) r) x) |- ((((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = ((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)) ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c= c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2 c= b0 * part cset_of_list b1 cIN f5 b0 c==> c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2 c= b0 * part cset_of_list b1 cIN f5 b0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2
- (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) j))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) j)))))) |- (((MEM d) (flatten (((((ntrans L) N) r) x) j))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) j)))))
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 c==> cMEM f5 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 f5 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4
+ (~ (l' = (((((rtrans L) N) r) x) j))), ((MEM l') (((((ntrans L) N) r) x) j)) |- ((MEM l') (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j)))
T c==> c~ c= f0 crtrans f1 f2 f3 f4 f5 c==> cMEM f0 cntrans f1 f2 f3 f4 f5 cMEM f0 creplace crtrans f1 f2 f3 f4 f5 cCONS cSND csplit_normal_list f1 crtrans f1 f2 f3 f4 f5 cfind_face f1 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cprev_el crtrans f1 f2 f3 f4 f5 cl'z f1 cntrans f1 f2 f3 f4 f5 crtrans f1 f2 f3 f4 f5 f4 cNIL cntrans f1 f2 f3 f4 f5
+ ((\l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l)))) l') |- (((((MEM l') (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l'))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> * / c/\ cMEM b0 cntrans f0 f1 f2 f3 f4 c= f5 * part cset_of_list b0 f6 c= c==> c/\ cMEM f6 cntrans f0 f1 f2 f3 f4 c= f5 * part cset_of_list f6 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f7 b0 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f7 b0
+ |- (((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) \/ ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))))) ==> F)
T c==> c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 cF
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((((l'y L) r1) x) = ram1), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cl'y f0 f7 f3 f8 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f9 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f10 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f7 cCONS cSND csplit_normal_list f0 f7 f9 f8 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f7 f9 f8 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))), (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), ((((marked_list L) N) r) x) |- (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> ! c==> c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 f4 c= b1 * part cset_of_list b2 cIN b0 b1 c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 f5 c= b1 * part cset_of_list b2 cIN b0 b1 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f6 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f7 * part cset_of_list f8 c==> c<= f4 f5 c==> c<= f4 cSUC f5 c==> cMEM f8 cntrans f0 f1 f2 f3 f4 c==> cIN f6 f7 c==> cmarked_list f0 f1 f2 f3 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f5 c= b0 * part cset_of_list b1 cIN f6 b0
- |- (((((l'y L) r1) x) = ram1) = ((\ram1. ((((l'y L) r1) x) = ram1)) ram1))
T c= c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
+ |- ((\s. (((uniq (flatten (((((ntrans L) N) r) x) j))) /\ ((MEM s) (((((ntrans L) N) r) x) j))) ==> (uniq s))) r1)
T * / c==> c/\ cuniq cflatten cntrans f0 f1 f2 f3 f4 cMEM b0 cntrans f0 f1 f2 f3 f4 cuniq b0 f5
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), (x' IN u), ((((marked_list L) N) r) x) |- (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> c? / c/\ cMEM b0 cntrans f0 f1 f2 f3 f5 c= f6 * part cset_of_list b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f5 cSUC f4 c==> cIN f7 f6 c==> cmarked_list f0 f1 f2 f3 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f7 b0
+ |- ((!f. (!ram1. (!ram2. ((((MEM x) r) /\ (uniq r)) ==> (((MEM x) (FST (((((split_normal_list L) r) f) ram1) ram2))) \/ ((MEM x) (SND (((((split_normal_list L) r) f) ram1) ram2)))))))) = T)
T c= ! ! ! c==> c/\ cMEM f0 f1 cuniq f1 c\/ cMEM f0 cFST csplit_normal_list f2 f1 b0 b1 b2 cMEM f0 cSND csplit_normal_list f2 f1 b0 b1 b2 cT
+ ((((((rtrans L) N) r) x) j) = r1) |- ((?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))) = (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) f) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) f) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c= c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f5 cCONS cSND csplit_normal_list f0 f5 f6 cl'y f0 f5 f3 cprev_el f5 cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f5 f6 cl'y f0 f5 f3 cprev_el f5 cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 cNIL c= b0 * part cset_of_list b1 cIN f7 b0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 f6 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 f6 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b0 * part cset_of_list b1 cIN f7 b0
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((((l'y L) r1) x) = ram1), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- ((((\ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = T)
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cl'y f0 f7 f3 f8 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f9 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f10 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= c==> * / c= cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 b0 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f7 cCONS cSND csplit_normal_list f0 f7 f9 f8 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f7 f9 f8 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL c= b0 * part cset_of_list b1 cIN f10 b0 cT
+ (uniq (flatten (((((ntrans L) N) r) x) j))) |- ((uniq (flatten (((((ntrans L) N) r) x) j))) = T)
T c==> cuniq cflatten cntrans f0 f1 f2 f3 f4 c= cuniq cflatten cntrans f0 f1 f2 f3 f4 cT
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ (((next_el r1) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (((MEM x') r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))
T c==> c= cnext_el f0 f1 cf_list f2 f1 c==> cLET / cLET_END cfinal_list f2 b0 cfind_list cntrans f2 f3 f4 f1 f5 ce_list f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f2 cntrans f2 f3 f4 f1 f5 c==> cMEM f1 f0 c==> cMEM f0 cntrans f2 f3 f4 f1 f5 c==> cnormal_list f2 cntrans f2 f3 f4 f1 f5 c==> c==> cfinal_list f2 f0 cflag_list f2 cntrans f2 f3 f4 f1 f5 c==> c==> c~ cfinal_list f2 f0 cs_flag_list f2 cntrans f2 f3 f4 f1 f5 f0 f1 c==> c~ cfinal_list f2 f0 c==> c= f6 f0 c==> c= cfind_face f2 f7 f8 c==> c= crtrans f2 f3 f4 f1 f5 f0 c==> c= cl'y f2 f0 f1 f7 c==> c= cprev_el f0 cl'z f2 cntrans f2 f3 f4 f1 f5 f0 f1 f9 c==> cMEM f10 f0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f0 cCONS cSND csplit_normal_list f2 f0 f8 f7 f9 cNIL cntrans f2 f3 f4 f1 f5 cCONS cFST csplit_normal_list f2 f0 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((MEM x) r1) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (((MEM x') r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))))))
T c==> cMEM f0 f1 c==> cMEM f1 cntrans f2 f3 f4 f0 f5 c==> cnormal_list f2 cntrans f2 f3 f4 f0 f5 c/\ cMEM f0 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f2 cntrans f2 f3 f4 f0 f5 c==> c= cnext_el f1 f0 cf_list f2 f0 c==> cLET / cLET_END cfinal_list f2 b0 cfind_list cntrans f2 f3 f4 f0 f5 ce_list f0 c==> c==> cfinal_list f2 f1 cflag_list f2 cntrans f2 f3 f4 f0 f5 c==> c==> c~ cfinal_list f2 f1 cs_flag_list f2 cntrans f2 f3 f4 f0 f5 f1 f0 c==> c~ cfinal_list f2 f1 c==> c= f6 f1 c==> c= cfind_face f2 f7 f8 c==> c= crtrans f2 f3 f4 f0 f5 f1 c==> c= cl'y f2 f1 f0 f7 c==> c= cprev_el f1 cl'z f2 cntrans f2 f3 f4 f0 f5 f1 f0 f9 c==> cMEM f10 f1 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f2 f1 f8 f7 f9 cNIL cntrans f2 f3 f4 f0 f5 cCONS cFST csplit_normal_list f2 f1 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
- ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)) |- (((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)) = T)
T c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c= cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((\r1. ((((((rtrans L) N) r) x) j) = r1)) r1) ==> (?r1. ((((((rtrans L) N) r) x) j) = r1))) = T)
T c= c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0 cT
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!L. (!r. (!f. (!ram1. (!ram2. ((((MEM x') r) /\ (uniq r)) ==> (((MEM x') (FST (((((split_normal_list L) r) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r) f) ram1) ram2)))))))))) ==> ((\L. (!r. (!f. (!ram1. (!ram2. ((((MEM x') r) /\ (uniq r)) ==> (((MEM x') (FST (((((split_normal_list L) r) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r) f) ram1) ram2)))))))))) L)) = ((\L. (!r. (!f. (!ram1. (!ram2. ((((MEM x') r) /\ (uniq r)) ==> (((MEM x') (FST (((((split_normal_list L) r) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r) f) ram1) ram2)))))))))) L))
T c= c==> ! ! ! ! ! c==> c/\ cMEM f0 b1 cuniq b1 c\/ cMEM f0 cFST csplit_normal_list b0 b1 b2 b3 b4 cMEM f0 cSND csplit_normal_list b0 b1 b2 b3 b4 * / ! ! ! ! c==> c/\ cMEM f0 b1 cuniq b1 c\/ cMEM f0 cFST csplit_normal_list b0 b1 b2 b3 b4 cMEM f0 cSND csplit_normal_list b0 b1 b2 b3 b4 f1 * / ! ! ! ! c==> c/\ cMEM f0 b1 cuniq b1 c\/ cMEM f0 cFST csplit_normal_list b0 b1 b2 b3 b4 cMEM f0 cSND csplit_normal_list b0 b1 b2 b3 b4 f1
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), (x' IN u), ((((marked_list L) N) r) x) |- (((!x. (((\l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) x) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))) ==> ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))) = ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f5 cSUC f4 c==> cIN f6 f7 c==> cmarked_list f0 f1 f2 f3 c= c==> ! c==> * / c/\ cMEM b1 cntrans f0 f1 f2 f3 f5 c= f7 * part cset_of_list b1 b0 c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 cSUC f4 c= b1 * part cset_of_list b2 cIN f6 b1 c==> c? / c/\ cMEM b0 cntrans f0 f1 f2 f3 f5 c= f7 * part cset_of_list b0 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f6 b0 c==> c? / c/\ cMEM b0 cntrans f0 f1 f2 f3 f5 c= f7 * part cset_of_list b0 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f6 b0
+ |- ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)
T * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
+ ((MEM x') (FST (((((split_normal_list L) r1) f) ram1) ram2))) |- (((MEM x') (FST (((((split_normal_list L) r1) f) ram1) ram2))) = T)
T c==> cMEM f0 cFST csplit_normal_list f1 f2 f3 f4 f5 c= cMEM f0 cFST csplit_normal_list f1 f2 f3 f4 f5 cT
+ (((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) /\ (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (((MEM x') r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))
T c==> c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f2 f3 f4 f5 c==> cMEM f1 cntrans f0 f2 f3 f4 f5 c==> cnormal_list f0 cntrans f0 f2 f3 f4 f5 c/\ c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f2 f3 f4 f5 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f2 f3 f4 f5 f1 f4 c==> c~ cfinal_list f0 f1 c==> c= f6 f1 c==> c= cfind_face f0 f7 f8 c==> c= crtrans f0 f2 f3 f4 f5 f1 c==> c= cl'y f0 f1 f4 f7 c==> c= cprev_el f1 cl'z f0 cntrans f0 f2 f3 f4 f5 f1 f4 f9 c==> cMEM f10 f1 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f8 f7 f9 cNIL cntrans f0 f2 f3 f4 f5 cCONS cFST csplit_normal_list f0 f1 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), ((((((rtrans L) N) r) x) j) = r1), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> c= f1 * part cset_of_list f2 c==> c= crtrans f0 f3 f4 f5 f6 f7 c==> cMEM f5 crtrans f0 f3 f4 f5 f6 c==> cMEM crtrans f0 f3 f4 f5 f6 cntrans f0 f3 f4 f5 f6 c==> cIN f8 f1 c==> cnormal_list f0 cntrans f0 f3 f4 f5 f6 c==> cmarked_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f5 f6 c==> c= cnext_el f7 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f5 f6 ce_list f5 c==> c==> cfinal_list f0 f7 cflag_list f0 cntrans f0 f3 f4 f5 f6 c==> c==> c~ cfinal_list f0 f7 cs_flag_list f0 cntrans f0 f3 f4 f5 f6 f7 f5 c==> c~ cfinal_list f0 f7 c==> c= f2 f7 c==> c= cfind_face f0 f9 f10 c==> c= crtrans f0 f3 f4 f5 f6 f7 c==> c= cl'y f0 f7 f5 f9 c==> c= cprev_el f7 cl'z f0 cntrans f0 f3 f4 f5 f6 f7 f5 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f7 cCONS cSND csplit_normal_list f0 f7 f10 f9 f11 cNIL cntrans f0 f3 f4 f5 f6 cCONS cFST csplit_normal_list f0 f7 f10 f9 f11 cNIL c= b0 * part cset_of_list b1 cIN f8 b0
+ |- ((\j. ((((POWER ((transform_list L) x)) j) (N , r)) = ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j)))) j)
T * / c= cPOWER * * part ctransform_list f0 f1 b0 c, f2 f3 c, cntrans f0 f2 f3 f1 b0 crtrans f0 f2 f3 f1 b0 f4
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402)) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ (l' = (((((rtrans L) N) r) x) j))), ((MEM l') (((((ntrans L) N) r) x) j)) |- (((MEM l') (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) \/ ((MEM l') ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)))
T c==> c~ c= f0 crtrans f1 f2 f3 f4 f5 c==> cMEM f0 cntrans f1 f2 f3 f4 f5 c\/ cMEM f0 creplace crtrans f1 f2 f3 f4 f5 cCONS cSND csplit_normal_list f1 crtrans f1 f2 f3 f4 f5 cfind_face f1 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cprev_el crtrans f1 f2 f3 f4 f5 cl'z f1 cntrans f1 f2 f3 f4 f5 crtrans f1 f2 f3 f4 f5 f4 cNIL cntrans f1 f2 f3 f4 f5 cMEM f0 cCONS cFST csplit_normal_list f1 crtrans f1 f2 f3 f4 f5 cfind_face f1 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cprev_el crtrans f1 f2 f3 f4 f5 cl'z f1 cntrans f1 f2 f3 f4 f5 crtrans f1 f2 f3 f4 f5 f4 cNIL
+ |- ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)
T * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- (((((real_of_int _10302402) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add (real_of_int _10302402)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add (real_of_int _10302402)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (!ram1. (((\ram1. ((((l'y L) r1) x) = ram1)) ram1) ==> (?ram1. ((((l'y L) r1) x) = ram1))))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
- (good_list L), (good_list_nodes L), (transform_assumption_v2 L) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> ((i <= (SUC j)) ==> (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (((MEM l') (((((ntrans L) N) r) x) j)) ==> ((u' = (set_of_list l')) ==> ((x' IN u') ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c<= f4 cSUC f5 c==> cMEM f6 cntrans f0 f1 f2 f3 f4 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f4 f5 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f8 b0 c==> cMEM f9 cntrans f0 f1 f2 f3 f5 c==> c= f10 * part cset_of_list f9 c==> cIN f8 f10 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 cPOWER * * part ctransform_list f0 f3 f5 c, f1 f2 c= b0 * part cset_of_list b1 cIN f8 b0
- ((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) |- (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) = T)
T c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f2 f3 f4 f5 f1 f4 c= c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f2 f3 f4 f5 f1 f4 cT
+ (((next_el r1) x) = ((f_list L) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (((MEM x') r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))))
T c==> c= cnext_el f0 f1 cf_list f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f2 cntrans f2 f3 f4 f1 f5 c==> cMEM f1 f0 c==> cMEM f0 cntrans f2 f3 f4 f1 f5 c==> cnormal_list f2 cntrans f2 f3 f4 f1 f5 c==> cLET / cLET_END cfinal_list f2 b0 cfind_list cntrans f2 f3 f4 f1 f5 ce_list f1 c==> c==> cfinal_list f2 f0 cflag_list f2 cntrans f2 f3 f4 f1 f5 c==> c==> c~ cfinal_list f2 f0 cs_flag_list f2 cntrans f2 f3 f4 f1 f5 f0 f1 c==> c~ cfinal_list f2 f0 c==> c= f6 f0 c==> c= cfind_face f2 f7 f8 c==> c= crtrans f2 f3 f4 f1 f5 f0 c==> c= cl'y f2 f0 f1 f7 c==> c= cprev_el f0 cl'z f2 cntrans f2 f3 f4 f1 f5 f0 f1 f9 c==> cMEM f10 f0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f0 cCONS cSND csplit_normal_list f2 f0 f8 f7 f9 cNIL cntrans f2 f3 f4 f1 f5 cCONS cFST csplit_normal_list f2 f0 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ (uniq (flatten (((((ntrans L) N) r) x) j))), ((MEM r1) (((((ntrans L) N) r) x) j)) |- (((uniq r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = ((((uniq (flatten (((((ntrans L) N) r) x) j))) /\ ((MEM r1) (((((ntrans L) N) r) x) j))) ==> (uniq r1)) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> cuniq cflatten cntrans f0 f1 f2 f3 f4 c==> cMEM f5 cntrans f0 f1 f2 f3 f4 c= c==> cuniq f5 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f5 cCONS cSND csplit_normal_list f0 f5 f6 f7 f8 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f5 f6 f7 f8 cNIL c= b0 * part cset_of_list b1 cIN f9 b0 c==> c==> c/\ cuniq cflatten cntrans f0 f1 f2 f3 f4 cMEM f5 cntrans f0 f1 f2 f3 f4 cuniq f5 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f5 cCONS cSND csplit_normal_list f0 f5 f6 f7 f8 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f5 f6 f7 f8 cNIL c= b0 * part cset_of_list b1 cIN f9 b0
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ (i = (NUMERAL _0)) |- (T = (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (NUMERAL _0))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))
T c==> c= f0 cNUMERAL c_0 c= cT ! c==> c? / c/\ c? / c/\ cMEM b2 cntrans f1 f2 f3 f4 f0 c= b1 * part cset_of_list b2 cIN b0 b1 c? / c/\ c? / c/\ cMEM b2 cntrans f1 f2 f3 f4 cNUMERAL c_0 c= b1 * part cset_of_list b2 cIN b0 b1
+ ((\ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) ram2) |- (((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> * / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0 f6 c= c==> c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 f6 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f0 cCONS cSND csplit_normal_list f1 f0 f7 f8 cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 cNIL cntrans f1 f2 f3 f4 f5 cCONS cFST csplit_normal_list f1 f0 f7 f8 cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 cNIL c= b0 * part cset_of_list b1 cIN f9 b0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f0 cCONS cSND csplit_normal_list f1 f0 f7 f8 cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 cNIL cntrans f1 f2 f3 f4 f5 cCONS cFST csplit_normal_list f1 f0 f7 f8 cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 cNIL c= b0 * part cset_of_list b1 cIN f9 b0
- |- ((\B. (!A. ((~ (A ==> (A \/ B))) ==> F))) B)
T * / ! c==> c~ c==> b1 c\/ b1 b0 cF f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), (l' = (((((rtrans L) N) r) x) j)), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (!f. (((\f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)) f) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f7 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 ! c==> * / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b1 b0 c? / c/\ c? / c/\ cMEM b2 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b1 * part cset_of_list b2 cIN f7 b1
- ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) = T)
T c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cT
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 cF
+ |- ((\ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)))
T * / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0 cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4
- (~ (!A. (A \/ (~ A)))) |- F
T c==> c~ ! c\/ b0 c~ b0 cF
+ (uniq r1), ((MEM x') r1) |- (((((MEM x') (FST (((((split_normal_list L) r1) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r1) f) ram1) ram2)))) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = (((((MEM x') r1) /\ (uniq r1)) ==> (((MEM x') (FST (((((split_normal_list L) r1) f) ram1) ram2))) \/ ((MEM x') (SND (((((split_normal_list L) r1) f) ram1) ram2))))) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> cuniq f0 c==> cMEM f1 f0 c= c==> c\/ cMEM f1 cFST csplit_normal_list f2 f0 f3 f4 f5 cMEM f1 cSND csplit_normal_list f2 f0 f3 f4 f5 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f0 cCONS cSND csplit_normal_list f2 f0 f3 f4 f5 cNIL cntrans f2 f6 f7 f8 f9 cCONS cFST csplit_normal_list f2 f0 f3 f4 f5 cNIL c= b0 * part cset_of_list b1 cIN f1 b0 c==> c==> c/\ cMEM f1 f0 cuniq f0 c\/ cMEM f1 cFST csplit_normal_list f2 f0 f3 f4 f5 cMEM f1 cSND csplit_normal_list f2 f0 f3 f4 f5 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f0 cCONS cSND csplit_normal_list f2 f0 f3 f4 f5 cNIL cntrans f2 f6 f7 f8 f9 cCONS cFST csplit_normal_list f2 f0 f3 f4 f5 cNIL c= b0 * part cset_of_list b1 cIN f1 b0
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((marked_list L) N) r) x) |- (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (((MEM l') (((((ntrans L) N) r) x) j)) ==> ((u' = (set_of_list l')) ==> ((x' IN u') ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c==> cMEM f4 cntrans f0 f1 f2 f3 f5 c==> c= f6 * part cset_of_list f4 c==> cIN f7 f6 c==> c<= f5 f8 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f5 c= b0 * part cset_of_list b1 cIN f7 b0 c==> cMEM f9 cntrans f0 f1 f2 f3 f8 c==> c= f10 * part cset_of_list f9 c==> cIN f7 f10 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 cPOWER * * part ctransform_list f0 f3 f8 c, f1 f2 c= b0 * part cset_of_list b1 cIN f7 b0
+ |- ((\x. (!l. ((x IN (set_of_list l)) = ((MEM x) l)))) x)
T * / ! c= cIN b0 * part cset_of_list b1 cMEM b0 b1 f0
+ (u = (set_of_list l)), (i = (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u) |- (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> c= f0 * part cset_of_list f1 c==> c= f2 cSUC f3 c==> cMEM f1 cntrans f4 f5 f6 f7 f2 c==> cIN f8 f0 c? / c/\ c? / c/\ cMEM b1 cntrans f4 f5 f6 f7 cSUC f3 c= b0 * part cset_of_list b1 cIN f8 b0
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- (((!x. (((real_mul x) (real_of_int _10302402)) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) (real_of_int _10302402)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) (real_of_int _10302402)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- ((((l'y L) r1) x) = ram1) |- ((\ram1. ((((l'y L) r1) x) = ram1)) ram1)
T c==> c= cl'y f0 f1 f2 f3 * / c= cl'y f0 f1 f2 b0 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), (l' = (((((rtrans L) N) r) x) j)), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- ((((\f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)) f) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = T)
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f7 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= c==> * / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0 f8 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b0 * part cset_of_list b1 cIN f7 b0 cT
+ |- ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)
T * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), (l' = (((((rtrans L) N) r) x) j)), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- ((?f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f7 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c? / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b0 * part cset_of_list b1 cIN f7 b0
- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (transform_assumption_v2 L) |- ((transform_assumption_v2 L) /\ ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((i <= (SUC j)) ==> (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> ctransform_assumption_v2 f0 c/\ ctransform_assumption_v2 f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c<= f5 cSUC f4 c==> cMEM f6 cntrans f0 f1 f2 f3 f5 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f5 f4 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f8 b0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) g)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 f3
+ (~ ((final_list L) r1)), (((next_el r1) x) = ((f_list L) x)), (l' = r1), (((find_face L) ram1) = f), ((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)), (((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (((MEM x') r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))
T c==> c~ cfinal_list f0 f1 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= f3 f1 c==> c= cfind_face f0 f4 f5 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f6 f7 f2 f8 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f6 f7 f2 f8 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f6 f7 f2 f8 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f6 f7 f2 f8 c==> cMEM f2 f1 c==> cMEM f1 cntrans f0 f6 f7 f2 f8 c==> cnormal_list f0 cntrans f0 f6 f7 f2 f8 c==> c= crtrans f0 f6 f7 f2 f8 f1 c==> c= cl'y f0 f1 f2 f4 c==> c= cprev_el f1 cl'z f0 cntrans f0 f6 f7 f2 f8 f1 f2 f9 c==> cMEM f10 f1 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f5 f4 f9 cNIL cntrans f0 f6 f7 f2 f8 cCONS cFST csplit_normal_list f0 f1 f5 f4 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((MEM l') (((((ntrans L) N) r) x) j)), ((((marked_list L) N) r) x) |- ((u' = (set_of_list l')) ==> ((x' IN u') ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cMEM f1 cntrans f0 f2 f3 f4 f5 c==> cmarked_list f0 f2 f3 f4 c==> c= f6 * part cset_of_list f1 c==> cIN f7 f6 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f4 cPOWER * * part ctransform_list f0 f4 f5 c, f2 f3 c= b0 * part cset_of_list b1 cIN f7 b0
+ (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) /\ ((((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM l') (((((ntrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (?u. ((?l. (((MEM l) (FST (((transform_list L) x) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> cis_restricted chypermap_of_list f0 c==> c= f1 * part cset_of_list f2 c==> c= cnext_el crtrans f0 f3 f4 f5 f6 f5 cf_list f0 f5 c==> c/\ c= cnext_el crtrans f0 f3 f4 f5 f6 f5 cf_list f0 f5 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f5 f6 ce_list f5 c/\ c==> cfinal_list f0 crtrans f0 f3 f4 f5 f6 cflag_list f0 cntrans f0 f3 f4 f5 f6 c==> c~ cfinal_list f0 crtrans f0 f3 f4 f5 f6 cs_flag_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f5 f6 c==> cMEM f5 crtrans f0 f3 f4 f5 f6 c==> cMEM f2 cntrans f0 f3 f4 f5 f6 c==> cMEM crtrans f0 f3 f4 f5 f6 cntrans f0 f3 f4 f5 f6 c==> cIN f7 f1 c==> cnormal_list f0 cntrans f0 f3 f4 f5 f6 c==> cmarked_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f5 c, cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 c= b0 * part cset_of_list b1 cIN f7 b0
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), ((((marked_list L) N) r) x) |- (((!x. (((\u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) x) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))) ==> ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))) = ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f5 cSUC f4 c==> cmarked_list f0 f1 f2 f3 c= c==> ! c==> * / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 f5 c= b1 * part cset_of_list b2 cIN f6 b1 b0 c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 cSUC f4 c= b1 * part cset_of_list b2 cIN f6 b1 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f5 c= b0 * part cset_of_list b1 cIN f6 b0 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f6 b0 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f5 c= b0 * part cset_of_list b1 cIN f6 b0 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f6 b0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ ((MEM x') (FST (((((split_normal_list L) r1) f) ram1) ram2))) |- ((\u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))) (set_of_list (FST (((((split_normal_list L) r1) f) ram1) ram2))))
T c==> cMEM f0 cFST csplit_normal_list f1 f2 f3 f4 f5 * / c/\ c? / c/\ cMEM b1 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL cntrans f1 f6 f7 f8 f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c= b0 * part cset_of_list b1 cIN f0 b0 * part cset_of_list cFST csplit_normal_list f1 f2 f3 f4 f5
+ (u = (set_of_list l)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u) |- ((i = (SUC j)) ==> ((MEM l) (((((ntrans L) N) r) x) (SUC j))))
T c==> c= f0 * part cset_of_list f1 c==> cMEM f1 cntrans f2 f3 f4 f5 f6 c==> cIN f7 f0 c==> c= f6 cSUC f8 cMEM f1 cntrans f2 f3 f4 f5 cSUC f8
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) ==> ((\x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) x)) = ((\x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) x))
T c= c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 f0 * / ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), ((((((rtrans L) N) r) x) j) = r1) |- (~ ((final_list L) r1))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> c= crtrans f0 f1 f2 f3 f4 f5 c~ cfinal_list f0 f5
- |- ((!A. ((P A) \/ Q)) = ((!A. (P A)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), ((((marked_list L) N) r) x) |- ((i <= (SUC j)) /\ (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f5 cSUC f4 c==> cmarked_list f0 f1 f2 f3 c/\ c<= f5 cSUC f4 c==> cMEM f6 cntrans f0 f1 f2 f3 f5 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f5 f4 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f8 b0
- |- (((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F))
T c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (((!x''. (((\ram1. ((((l'y L) r1) x) = ram1)) x'') ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))) ==> ((?ram1. ((((l'y L) r1) x) = ram1)) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))) = ((?ram1. ((((l'y L) r1) x) = ram1)) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) (((l'y L) r1) x)) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f7 c==> c= crtrans f0 f1 f2 f3 f4 f8 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f9 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= c==> ! c==> * / c= cl'y f0 f8 f3 b1 b0 c? / c/\ c? / c/\ cMEM b2 cAPPEND creplace f8 cCONS cSND csplit_normal_list f0 f8 f7 cl'y f0 f8 f3 cprev_el f8 cl'z f0 cntrans f0 f1 f2 f3 f4 f8 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f8 f7 cl'y f0 f8 f3 cprev_el f8 cl'z f0 cntrans f0 f1 f2 f3 f4 f8 f3 cNIL c= b1 * part cset_of_list b2 cIN f9 b1 c==> c? / c= cl'y f0 f8 f3 b0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f8 cCONS cSND csplit_normal_list f0 f8 f7 cl'y f0 f8 f3 cprev_el f8 cl'z f0 cntrans f0 f1 f2 f3 f4 f8 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f8 f7 cl'y f0 f8 f3 cprev_el f8 cl'z f0 cntrans f0 f1 f2 f3 f4 f8 f3 cNIL c= b0 * part cset_of_list b1 cIN f9 b0 c==> c? / c= cl'y f0 f8 f3 b0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f8 cCONS cSND csplit_normal_list f0 f8 f7 cl'y f0 f8 f3 cprev_el f8 cl'z f0 cntrans f0 f1 f2 f3 f4 f8 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f8 f7 cl'y f0 f8 f3 cprev_el f8 cl'z f0 cntrans f0 f1 f2 f3 f4 f8 f3 cNIL c= b0 * part cset_of_list b1 cIN f9 b0
+ |- ((((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))))))) ==> F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 cF
- |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) = ((~ (!A. (A \/ (~ A)))) ==> F))
T c= c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302398)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10302399)) /\ (((real_le (real_of_int _10302398)) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398)) /\ (((real_le ((real_add (real_of_int _10302398)) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
+ |- (((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u' = (set_of_list l)))) /\ (x' IN u')) = ((\u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))) u'))
T c= c/\ c? / c/\ cMEM b0 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= f5 * part cset_of_list b0 cIN f6 f5 * / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b0 * part cset_of_list b1 cIN f6 b0 f5
- |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
+ |- ((\g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))) g)
T * / c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0 f3
- ((~ (!A. (A \/ (~ A)))) ==> F), (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- (((~ (!A. (A \/ (~ A)))) ==> F) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (transform_assumption_v2 L) |- ((good_list L) /\ ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((i <= (SUC j)) ==> (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> ctransform_assumption_v2 f0 c/\ cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c<= f5 cSUC f4 c==> cMEM f6 cntrans f0 f1 f2 f3 f5 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f5 f4 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f8 b0
+ (uniq (flatten (((((ntrans L) N) r) x) j))), ((MEM x') r1), ((MEM r1) (((((ntrans L) N) r) x) j)) |- (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> cuniq cflatten cntrans f0 f1 f2 f3 f4 c==> cMEM f5 f6 c==> cMEM f6 cntrans f0 f1 f2 f3 f4 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f6 cCONS cSND csplit_normal_list f0 f6 f7 f8 f9 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f6 f7 f8 f9 cNIL c= b0 * part cset_of_list b1 cIN f5 b0
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c= cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 cT
- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> ((i <= (SUC j)) ==> (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c<= f5 cSUC f4 c==> cMEM f6 cntrans f0 f1 f2 f3 f5 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f5 f4 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f8 b0
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402)) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((final_list L) r1)), (u' = (set_of_list l')), (((next_el r1) x) = ((f_list L) x)), (l' = r1), (((find_face L) ram1) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)), (((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> c~ cfinal_list f0 f1 c==> c= f2 * part cset_of_list f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= f3 f1 c==> c= cfind_face f0 f5 f6 c==> c= crtrans f0 f7 f8 f4 f9 f1 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f7 f8 f4 f9 f1 f4 c==> c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f7 f8 f4 f9 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f7 f8 f4 f9 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f7 f8 f4 f9 c==> cMEM f4 f1 c==> cMEM f1 cntrans f0 f7 f8 f4 f9 c==> cIN f10 f2 c==> cnormal_list f0 cntrans f0 f7 f8 f4 f9 c==> c= cl'y f0 f1 f4 f5 c==> c= cprev_el f1 cl'z f0 cntrans f0 f7 f8 f4 f9 f1 f4 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f6 f5 f11 cNIL cntrans f0 f7 f8 f4 f9 cCONS cFST csplit_normal_list f0 f1 f6 f5 f11 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ ((MEM x') (SND (((((split_normal_list L) r1) f) ram1) ram2))) |- (((MEM x') (SND (((((split_normal_list L) r1) f) ram1) ram2))) = T)
T c==> cMEM f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c= cMEM f0 cSND csplit_normal_list f1 f2 f3 f4 f5 cT
- (good_list L), (transform_assumption_v2 L) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((i <= (SUC j)) ==> (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (((MEM l') (((((ntrans L) N) r) x) j)) ==> ((u' = (set_of_list l')) ==> ((x' IN u') ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))))
T c==> cgood_list f0 c==> ctransform_assumption_v2 f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c<= f4 cSUC f5 c==> cMEM f6 cntrans f0 f1 f2 f3 f4 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f4 f5 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f8 b0 c==> cMEM f9 cntrans f0 f1 f2 f3 f5 c==> c= f10 * part cset_of_list f9 c==> cIN f8 f10 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 cPOWER * * part ctransform_list f0 f3 f5 c, f1 f2 c= b0 * part cset_of_list b1 cIN f8 b0
+ (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)) /\ (((MEM x) (((((rtrans L) N) r) x) j)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) /\ ((((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) /\ ((((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)))))))), ((MEM l') (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (?u. ((?l. (((MEM l) (FST (((transform_list L) x) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> cis_restricted chypermap_of_list f0 c==> c= f1 * part cset_of_list f2 c==> c/\ cMEM crtrans f0 f3 f4 f5 f6 cntrans f0 f3 f4 f5 f6 c/\ cMEM f5 crtrans f0 f3 f4 f5 f6 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f5 f6 c/\ c= cnext_el crtrans f0 f3 f4 f5 f6 f5 cf_list f0 f5 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f5 f6 ce_list f5 c/\ c==> cfinal_list f0 crtrans f0 f3 f4 f5 f6 cflag_list f0 cntrans f0 f3 f4 f5 f6 c==> c~ cfinal_list f0 crtrans f0 f3 f4 f5 f6 cs_flag_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c==> cMEM f2 cntrans f0 f3 f4 f5 f6 c==> cIN f7 f1 c==> cnormal_list f0 cntrans f0 f3 f4 f5 f6 c==> cmarked_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f5 c, cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 c= b0 * part cset_of_list b1 cIN f7 b0
+ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (u' = (set_of_list l')), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), ((MEM l') (((((ntrans L) N) r) x) j)), (x' IN u), (x' IN u'), ((((marked_list L) N) r) x) |- (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f6 * part cset_of_list f7 c==> c= f8 * part cset_of_list f9 c==> c<= f4 f10 c==> c<= f4 cSUC f10 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cMEM f9 cntrans f0 f1 f2 f3 f10 c==> cIN f5 f6 c==> cIN f5 f8 c==> cmarked_list f0 f1 f2 f3 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f10 c= b0 * part cset_of_list b1 cIN f5 b0
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))) = T)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= ! c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0 cT
+ |- (((!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) ==> ((\xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) xs)) = ((\xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) xs))
T c= c==> ! ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 * / ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 f2 * / ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 f2
- A, (A ==> (A \/ B)) |- (A /\ (A \/ B))
T c==> f0 c==> c==> f0 c\/ f0 f1 c/\ f0 c\/ f0 f1
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x), ((\r1. ((((((rtrans L) N) r) x) j) = r1)) r1) |- (((\r1. ((((((rtrans L) N) r) x) j) = r1)) r1) /\ (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) f) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) f) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f7 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f8 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f9 c/\ * / c= crtrans f0 f1 f2 f3 f4 b0 f9 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 f7 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 f7 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b0 * part cset_of_list b1 cIN f8 b0
+ |- (((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ ((set_of_list (FST (((((split_normal_list L) r1) f) ram1) ram2))) = (set_of_list l)))) /\ (x' IN (set_of_list (FST (((((split_normal_list L) r1) f) ram1) ram2))))) = ((\u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))) (set_of_list (FST (((((split_normal_list L) r1) f) ram1) ram2)))))
T c= c/\ c? / c/\ cMEM b0 cAPPEND creplace f0 cCONS cSND csplit_normal_list f1 f0 f2 f3 f4 cNIL cntrans f1 f5 f6 f7 f8 cCONS cFST csplit_normal_list f1 f0 f2 f3 f4 cNIL c= * part cset_of_list cFST csplit_normal_list f1 f0 f2 f3 f4 * part cset_of_list b0 cIN f9 * part cset_of_list cFST csplit_normal_list f1 f0 f2 f3 f4 * / c/\ c? / c/\ cMEM b1 cAPPEND creplace f0 cCONS cSND csplit_normal_list f1 f0 f2 f3 f4 cNIL cntrans f1 f5 f6 f7 f8 cCONS cFST csplit_normal_list f1 f0 f2 f3 f4 cNIL c= b0 * part cset_of_list b1 cIN f9 b0 * part cset_of_list cFST csplit_normal_list f1 f0 f2 f3 f4
- ((\r1. ((((((rtrans L) N) r) x) j) = r1)) r1) |- (((\r1. ((((((rtrans L) N) r) x) j) = r1)) r1) /\ (?r1. ((((((rtrans L) N) r) x) j) = r1)))
T c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c/\ * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0
+ (u = (set_of_list l)), (i = (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u) |- ((\u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))) u)
T c==> c= f0 * part cset_of_list f1 c==> c= f2 cSUC f3 c==> cMEM f1 cntrans f4 f5 f6 f7 f2 c==> cIN f8 f0 * / c/\ c? / c/\ cMEM b1 cntrans f4 f5 f6 f7 cSUC f3 c= b0 * part cset_of_list b1 cIN f8 b0 f0
+ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l)))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l)))) /\ (x' IN u')), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), ((((marked_list L) N) r) x) |- (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> c? / c/\ cMEM b0 cntrans f0 f1 f2 f3 f6 c= f7 * part cset_of_list b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f8 * part cset_of_list f9 c==> c/\ c? / c/\ cMEM b0 cntrans f0 f1 f2 f3 f6 c= f7 * part cset_of_list b0 cIN f5 f7 c==> c<= f4 f6 c==> c<= f4 cSUC f6 c==> cMEM f9 cntrans f0 f1 f2 f3 f4 c==> cIN f5 f8 c==> cmarked_list f0 f1 f2 f3 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f6 c= b0 * part cset_of_list b1 cIN f5 b0
- (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f) |- ((\f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)) f)
T c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f5 * / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0 f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((real_ge x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((l'y L) r1) x) = ram1) ==> (?ram1. ((((l'y L) r1) x) = ram1)))
T c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
- |- ((((\ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) ram2) ==> (?ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2))) = T)
T c= c==> * / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0 f6 c? / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0 cT
+ |- (((((int_le (int_of_num i)) (int_of_num (NUMERAL _0))) /\ ((int_of_num i) = (int_of_num (NUMERAL _0)))) \/ ((~ ((int_le (int_of_num i)) (int_of_num (NUMERAL _0)))) /\ (~ ((int_of_num i) = (int_of_num (NUMERAL _0)))))) = ((i <= (NUMERAL _0)) = (i = (NUMERAL _0))))
T c= c\/ c/\ cint_le cint_of_num f0 cint_of_num cNUMERAL c_0 c= cint_of_num f0 cint_of_num cNUMERAL c_0 c/\ c~ cint_le cint_of_num f0 cint_of_num cNUMERAL c_0 c~ c= cint_of_num f0 cint_of_num cNUMERAL c_0 c= c<= f0 cNUMERAL c_0 c= f0 cNUMERAL c_0
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u' = (set_of_list l)))) /\ (x' IN u')), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), ((((marked_list L) N) r) x) |- (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f6 * part cset_of_list f7 c==> c/\ c? / c/\ cMEM b0 cntrans f0 f1 f2 f3 f8 c= f9 * part cset_of_list b0 cIN f5 f9 c==> c<= f4 f8 c==> c<= f4 cSUC f8 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cIN f5 f6 c==> cmarked_list f0 f1 f2 f3 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f8 c= b0 * part cset_of_list b1 cIN f5 b0
+ (u' = (set_of_list l')), (x' IN u'), ((((marked_list L) (((((ntrans L) N) r) x) j)) r1) x) |- (((((marked_list L) (((((ntrans L) N) r) x) j)) r1) x) /\ ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) (((((ntrans L) N) r) x) j)) ==> (((MEM r1) (((((ntrans L) N) r) x) j)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))))))))))
T c==> c= f0 * part cset_of_list f1 c==> cIN f2 f0 c==> cmarked_list f3 cntrans f3 f4 f5 f6 f7 f8 f6 c/\ cmarked_list f3 cntrans f3 f4 f5 f6 f7 f8 f6 c==> cis_restricted chypermap_of_list f3 c==> cnormal_list f3 cntrans f3 f4 f5 f6 f7 c==> cMEM f8 cntrans f3 f4 f5 f6 f7 c==> cMEM f6 f8 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 cntrans f3 f4 f5 f6 f7 c==> c= cnext_el f8 f6 cf_list f3 f6 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list cntrans f3 f4 f5 f6 f7 ce_list f6 c==> c==> cfinal_list f3 f8 cflag_list f3 cntrans f3 f4 f5 f6 f7 c==> c==> c~ cfinal_list f3 f8 cs_flag_list f3 cntrans f3 f4 f5 f6 f7 f8 f6 c==> c~ cfinal_list f3 f8 c==> c= f1 f8 c==> c= cfind_face f3 f9 f10 c==> c= crtrans f3 f4 f5 f6 f7 f8 c==> c= cl'y f3 f8 f6 f9 c==> c= cprev_el f8 cl'z f3 cntrans f3 f4 f5 f6 f7 f8 f6 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f8 cCONS cSND csplit_normal_list f3 f8 f10 f9 f11 cNIL cntrans f3 f4 f5 f6 f7 cCONS cFST csplit_normal_list f3 f8 f10 f9 f11 cNIL c= b0 * part cset_of_list b1 cIN f2 b0
- |- (((((((rtrans L) N) r) x) j) = r1) = ((\r1. ((((((rtrans L) N) r) x) j) = r1)) r1))
T c= c= crtrans f0 f1 f2 f3 f4 f5 * / c= crtrans f0 f1 f2 f3 f4 b0 f5
+ (i = (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)) |- ((MEM l) (((((ntrans L) N) r) x) (SUC j)))
T c==> c= f0 cSUC f1 c==> cMEM f2 cntrans f3 f4 f5 f6 f0 cMEM f2 cntrans f3 f4 f5 f6 cSUC f1
+ |- ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1)
T * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ |- (((((l'y L) r1) x) = (((l'y L) r1) x)) = ((\ram1. ((((l'y L) r1) x) = ram1)) (((l'y L) r1) x)))
T c= c= cl'y f0 f1 f2 cl'y f0 f1 f2 * / c= cl'y f0 f1 f2 b0 cl'y f0 f1 f2
- (~ (l' = (((((rtrans L) N) r) x) j))) |- (((~ ((((((rtrans L) N) r) x) j) = l')) ==> (((((((rtrans L) N) r) x) j) = l') = F)) = (((((((rtrans L) N) r) x) j) = l') = F))
T c==> c~ c= f0 crtrans f1 f2 f3 f4 f5 c= c==> c~ c= crtrans f1 f2 f3 f4 f5 f0 c= c= crtrans f1 f2 f3 f4 f5 f0 cF c= c= crtrans f1 f2 f3 f4 f5 f0 cF
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\n. (!f. (((POWER f) (SUC n)) = (f o ((POWER f) n))))) n)
T * / ! c= * * part cPOWER b1 cSUC b0 * * part co b1 * * part cPOWER b1 b0 f0
+ (~ ((final_list L) r1)), (u' = (set_of_list l')), (((next_el r1) x) = ((f_list L) x)), (l' = r1), ((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)), (((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)) |- ((l' = r1) /\ ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))
T c==> c~ cfinal_list f0 f1 c==> c= f2 * part cset_of_list f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= f3 f1 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f5 f6 f4 f7 f1 f4 c==> c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f5 f6 f4 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f5 f6 f4 f7 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f5 f6 f4 f7 c==> cMEM f4 f1 c==> cMEM f1 cntrans f0 f5 f6 f4 f7 c==> cIN f8 f2 c==> cnormal_list f0 cntrans f0 f5 f6 f4 f7 c/\ c= f3 f1 c==> c= cfind_face f0 f9 f10 c==> c= crtrans f0 f5 f6 f4 f7 f1 c==> c= cl'y f0 f1 f4 f9 c==> c= cprev_el f1 cl'z f0 cntrans f0 f5 f6 f4 f7 f1 f4 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f10 f9 f11 cNIL cntrans f0 f5 f6 f4 f7 cCONS cFST csplit_normal_list f0 f1 f10 f9 f11 cNIL c= b0 * part cset_of_list b1 cIN f8 b0
+ ((MEM x') r1), ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> cMEM f0 f1 c==> cMEM f1 cntrans f2 f3 f4 f5 f6 c==> cnormal_list f2 cntrans f2 f3 f4 f5 f6 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f2 f1 f7 f8 f9 cNIL cntrans f2 f3 f4 f5 f6 cCONS cFST csplit_normal_list f2 f1 f7 f8 f9 cNIL c= b0 * part cset_of_list b1 cIN f0 b0
+ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), ((((marked_list L) N) r) x), ((\u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))) u') |- (((\u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))) u') /\ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f6 * part cset_of_list f7 c==> c<= f4 f8 c==> c<= f4 cSUC f8 c==> cMEM f7 cntrans f0 f1 f2 f3 f4 c==> cIN f5 f6 c==> cmarked_list f0 f1 f2 f3 c==> * / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f8 c= b0 * part cset_of_list b1 cIN f5 b0 f9 c/\ * / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f8 c= b0 * part cset_of_list b1 cIN f5 b0 f9 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f8 c= b0 * part cset_of_list b1 cIN f5 b0
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- ((l' = (((((rtrans L) N) r) x) j)) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f7 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c= f6 crtrans f0 f1 f2 f3 f4 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b0 * part cset_of_list b1 cIN f7 b0
+ |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)) |- ((((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)) /\ (((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)))
T c==> c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c/\ c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF
+ (~ (l' = (((((rtrans L) N) r) x) j))), ((MEM l') (((((ntrans L) N) r) x) j)) |- ((\l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ ((set_of_list l') = (set_of_list l)))) l')
T c==> c~ c= f0 crtrans f1 f2 f3 f4 f5 c==> cMEM f0 cntrans f1 f2 f3 f4 f5 * / c/\ cMEM b0 cAPPEND creplace crtrans f1 f2 f3 f4 f5 cCONS cSND csplit_normal_list f1 crtrans f1 f2 f3 f4 f5 cfind_face f1 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cprev_el crtrans f1 f2 f3 f4 f5 cl'z f1 cntrans f1 f2 f3 f4 f5 crtrans f1 f2 f3 f4 f5 f4 cNIL cntrans f1 f2 f3 f4 f5 cCONS cFST csplit_normal_list f1 crtrans f1 f2 f3 f4 f5 cfind_face f1 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cprev_el crtrans f1 f2 f3 f4 f5 cl'z f1 cntrans f1 f2 f3 f4 f5 crtrans f1 f2 f3 f4 f5 f4 cNIL c= * part cset_of_list f0 * part cset_of_list b0 f0
+ |- (!j. ((!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))) ==> (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= (SUC j)))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 cSUC f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 cSUC f4 c= b2 * part cset_of_list b3 cIN b1 b2
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (~ (l' = (((((rtrans L) N) r) x) j))) |- (((((((rtrans L) N) r) x) j) = l') = F)
T c==> c~ c= f0 crtrans f1 f2 f3 f4 f5 c= c= crtrans f1 f2 f3 f4 f5 f0 cF
- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (transform_assumption_v2 L) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((i <= (SUC j)) ==> (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> ctransform_assumption_v2 f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c<= f5 cSUC f4 c==> cMEM f6 cntrans f0 f1 f2 f3 f5 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f5 f4 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f8 b0
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((MEM l') (((((ntrans L) N) r) x) j)) |- (?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ ((set_of_list l') = (set_of_list l))))
T c==> cMEM f0 cntrans f1 f2 f3 f4 f5 c? / c/\ cMEM b0 cntrans f1 f2 f3 f4 f5 c= * part cset_of_list f0 * part cset_of_list b0
+ |- (((!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L))
T c= c==> ! ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0 * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))) ==> ((\f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))) f)) = ((\f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))) f))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= c==> ! ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2 * / ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2 f1 * / ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2 f1
+ |- ((!j. ((~ ((int_le (int_of_num i)) ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0)))))) \/ (((int_le (int_of_num i)) (int_of_num j)) \/ ((int_of_num i) = ((int_add (int_of_num j)) (int_of_num (NUMERAL (BIT1 _0)))))))) = T)
T c= ! c\/ c~ cint_le cint_of_num f0 cint_add cint_of_num b0 cint_of_num cNUMERAL cBIT1 c_0 c\/ cint_le cint_of_num f0 cint_of_num b0 c= cint_of_num f0 cint_add cint_of_num b0 cint_of_num cNUMERAL cBIT1 c_0 cT
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2), ((((l'y L) r1) x) = ram1), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 f8 c==> c= cl'y f0 f7 f3 f9 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f10 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f11 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f7 cCONS cSND csplit_normal_list f0 f7 f10 f9 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f7 f10 f9 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL c= b0 * part cset_of_list b1 cIN f11 b0
+ |- ((m <= n) = ((int_le (int_of_num m)) (int_of_num n)))
T c= c<= f0 f1 cint_le cint_of_num f0 cint_of_num f1
+ |- ((!j. ((!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))) ==> (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= (SUC j)))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))) = ((!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= (NUMERAL _0)))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (NUMERAL _0))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))) /\ (!j. ((!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))) ==> (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= (SUC j)))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))
T c= ! c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b1 b0 ! c==> c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b1 c= b3 * part cset_of_list b4 cIN b2 b3 c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b0 c= b3 * part cset_of_list b4 cIN b2 b3 ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b1 cSUC b0 ! c==> c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b1 c= b3 * part cset_of_list b4 cIN b2 b3 c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 cSUC b0 c= b3 * part cset_of_list b4 cIN b2 b3 c/\ ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 cNUMERAL c_0 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 cNUMERAL c_0 c= b2 * part cset_of_list b3 cIN b1 b2 ! c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b1 b0 ! c==> c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b1 c= b3 * part cset_of_list b4 cIN b2 b3 c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b0 c= b3 * part cset_of_list b4 cIN b2 b3 ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b1 cSUC b0 ! c==> c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b1 c= b3 * part cset_of_list b4 cIN b2 b3 c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 cSUC b0 c= b3 * part cset_of_list b4 cIN b2 b3
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) j)
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
+ ((MEM x') r1), ((MEM r1) (((((ntrans L) N) r) x) j)) |- (((uniq (flatten (((((ntrans L) N) r) x) j))) /\ (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) j)) /\ (((all (f_last L)) (((((ntrans L) N) r) x) j)) /\ (((all (loop_list L)) (((((ntrans L) N) r) x) j)) /\ (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) j))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) j)))))))))) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> cMEM f0 f1 c==> cMEM f1 cntrans f2 f3 f4 f5 f6 c==> c/\ cuniq cflatten cntrans f2 f3 f4 f5 f6 c/\ call / c~ c= b0 cNIL cntrans f2 f3 f4 f5 f6 c/\ call * part cf_last f2 cntrans f2 f3 f4 f5 f6 c/\ call * part cloop_list f2 cntrans f2 f3 f4 f5 f6 ! c==> cMEM b0 cflatten cntrans f2 f3 f4 f5 f6 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten cntrans f2 f3 f4 f5 f6 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f2 f1 f7 f8 f9 cNIL cntrans f2 f3 f4 f5 f6 cCONS cFST csplit_normal_list f2 f1 f7 f8 f9 cNIL c= b0 * part cset_of_list b1 cIN f0 b0
+ (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((((((rtrans L) N) r) x) j) = r1) |- (((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))) = (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))))
T c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= crtrans f0 f1 f2 f3 f4 f5 c= c==> c= cnext_el f5 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> c==> cfinal_list f0 f5 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> c==> c~ cfinal_list f0 f5 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c~ cfinal_list f0 f5 c==> c= f6 f5 c==> c= cfind_face f0 f7 f8 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 f7 c==> c= cprev_el f5 cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f9 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f5 cCONS cSND csplit_normal_list f0 f5 f8 f7 f9 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f5 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> c==> cfinal_list f0 f5 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> c==> c~ cfinal_list f0 f5 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c~ cfinal_list f0 f5 c==> c= f6 f5 c==> c= cfind_face f0 f7 f8 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 f7 c==> c= cprev_el f5 cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f9 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f5 cCONS cSND csplit_normal_list f0 f5 f8 f7 f9 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f5 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) ==> F), ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0)))))) |- F
T c==> c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 cF
+ ((final_list L) (((((rtrans L) N) r) x) j)) |- ((\u. ((?l. (((MEM l) (FST (((COND ((final_list L) (((((rtrans L) N) r) x) j))) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))) (((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) , (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)))))))) /\ (u = (set_of_list l)))) /\ (x' IN u))) = (\u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 c= / c/\ c? / c/\ cMEM b1 cFST cCOND cfinal_list f0 crtrans f0 f1 f2 f3 f4 c, cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 c, cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= b0 * part cset_of_list b1 cIN f5 b0 / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((MEM x') (SND (((((split_normal_list L) r1) f) ram1) ram2))), ((MEM r1) (((((ntrans L) N) r) x) j)) |- ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ ((set_of_list (SND (((((split_normal_list L) r1) f) ram1) ram2))) = (set_of_list l)))) /\ (x' IN (set_of_list (SND (((((split_normal_list L) r1) f) ram1) ram2)))))
T c==> cMEM f0 cSND csplit_normal_list f1 f2 f3 f4 f5 c==> cMEM f2 cntrans f1 f6 f7 f8 f9 c/\ c? / c/\ cMEM b0 cAPPEND creplace f2 cCONS cSND csplit_normal_list f1 f2 f3 f4 f5 cNIL cntrans f1 f6 f7 f8 f9 cCONS cFST csplit_normal_list f1 f2 f3 f4 f5 cNIL c= * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5 * part cset_of_list b0 cIN f0 * part cset_of_list cSND csplit_normal_list f1 f2 f3 f4 f5
+ |- (((!L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) ==> ((\L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) (((((ntrans L) N) r) x) j))) = ((\L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) (((((ntrans L) N) r) x) j)))
T c= c==> ! ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 * / ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 cntrans f0 f1 f2 f3 f4 * / ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 cntrans f0 f1 f2 f3 f4
+ |- ((!j. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))) = (!j. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> ((set_of_list (flatten (((((ntrans L) N) r) x) i))) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) j))))))))
T c= ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b1 b0 ! c==> c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b1 c= b3 * part cset_of_list b4 cIN b2 b3 c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b0 c= b3 * part cset_of_list b4 cIN b2 b3 ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b1 b0 cSUBSET * part cset_of_list cflatten cntrans f0 f1 f2 f3 b1 * part cset_of_list cflatten cntrans f0 f1 f2 f3 b0
- A, (A ==> (A \/ B)) |- ((A ==> (A \/ B)) /\ (A \/ B))
T c==> f0 c==> c==> f0 c\/ f0 f1 c/\ c==> f0 c\/ f0 f1 c\/ f0 f1
+ ((MEM r1) (((((ntrans L) N) r) x) j)) |- (((MEM (SND (((((split_normal_list L) r1) f) ram1) ram2))) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ ((set_of_list (SND (((((split_normal_list L) r1) f) ram1) ram2))) = (set_of_list (SND (((((split_normal_list L) r1) f) ram1) ram2)))))
T c==> cMEM f0 cntrans f1 f2 f3 f4 f5 c/\ cMEM cSND csplit_normal_list f1 f0 f6 f7 f8 cAPPEND creplace f0 cCONS cSND csplit_normal_list f1 f0 f6 f7 f8 cNIL cntrans f1 f2 f3 f4 f5 cCONS cFST csplit_normal_list f1 f0 f6 f7 f8 cNIL c= * part cset_of_list cSND csplit_normal_list f1 f0 f6 f7 f8 * part cset_of_list cSND csplit_normal_list f1 f0 f6 f7 f8
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM l') (((((ntrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM f6 cntrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f7 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b0 * part cset_of_list b1 cIN f7 b0
+ (u = (set_of_list l)), (x' IN u) |- ((?l'. (((MEM l') (((((ntrans L) N) r) x) (SUC j))) /\ ((set_of_list l) = (set_of_list l')))) = ((?l'. (((MEM l') (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l')))) /\ (x' IN u)))
T c==> c= f0 * part cset_of_list f1 c==> cIN f2 f0 c= c? / c/\ cMEM b0 cntrans f3 f4 f5 f6 cSUC f7 c= * part cset_of_list f1 * part cset_of_list b0 c/\ c? / c/\ cMEM b0 cntrans f3 f4 f5 f6 cSUC f7 c= f0 * part cset_of_list b0 cIN f2 f0
+ (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), (((final_list L) (((((rtrans L) N) r) x) j)) \/ (~ ((final_list L) (((((rtrans L) N) r) x) j)))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM l') (((((ntrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- ((((final_list L) (((((rtrans L) N) r) x) j)) \/ (~ ((final_list L) (((((rtrans L) N) r) x) j)))) /\ (?u. ((?l. (((MEM l) (FST (((COND ((final_list L) (((((rtrans L) N) r) x) j))) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))) (((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) , (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)))))))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> cis_restricted chypermap_of_list f0 c==> c= f1 * part cset_of_list f2 c==> c= cnext_el crtrans f0 f3 f4 f5 f6 f5 cf_list f0 f5 c==> c==> c~ cfinal_list f0 crtrans f0 f3 f4 f5 f6 cs_flag_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c==> c==> cfinal_list f0 crtrans f0 f3 f4 f5 f6 cflag_list f0 cntrans f0 f3 f4 f5 f6 c==> c\/ cfinal_list f0 crtrans f0 f3 f4 f5 f6 c~ cfinal_list f0 crtrans f0 f3 f4 f5 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f5 f6 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f5 f6 c==> cMEM f5 crtrans f0 f3 f4 f5 f6 c==> cMEM f2 cntrans f0 f3 f4 f5 f6 c==> cMEM crtrans f0 f3 f4 f5 f6 cntrans f0 f3 f4 f5 f6 c==> cIN f7 f1 c==> cnormal_list f0 cntrans f0 f3 f4 f5 f6 c==> cmarked_list f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c/\ c\/ cfinal_list f0 crtrans f0 f3 f4 f5 f6 c~ cfinal_list f0 crtrans f0 f3 f4 f5 f6 c? / c/\ c? / c/\ cMEM b1 cFST cCOND cfinal_list f0 crtrans f0 f3 f4 f5 f6 c, cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 c, cAPPEND creplace crtrans f0 f3 f4 f5 f6 cCONS cSND csplit_normal_list f0 crtrans f0 f3 f4 f5 f6 cfind_face f0 cl'y f0 crtrans f0 f3 f4 f5 f6 f5 cl'y f0 crtrans f0 f3 f4 f5 f6 f5 cprev_el crtrans f0 f3 f4 f5 f6 cl'z f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 cNIL cntrans f0 f3 f4 f5 f6 cCONS cFST csplit_normal_list f0 crtrans f0 f3 f4 f5 f6 cfind_face f0 cl'y f0 crtrans f0 f3 f4 f5 f6 f5 cl'y f0 crtrans f0 f3 f4 f5 f6 f5 cprev_el crtrans f0 f3 f4 f5 f6 cl'z f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 cNIL cSND csplit_normal_list f0 crtrans f0 f3 f4 f5 f6 cfind_face f0 cl'y f0 crtrans f0 f3 f4 f5 f6 f5 cl'y f0 crtrans f0 f3 f4 f5 f6 f5 cprev_el crtrans f0 f3 f4 f5 f6 cl'z f0 cntrans f0 f3 f4 f5 f6 crtrans f0 f3 f4 f5 f6 f5 c= b0 * part cset_of_list b1 cIN f7 b0
+ |- (((!y. (((MEM x) ((CONS y) NIL)) = (x = y))) ==> ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y)) = ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y))
T c= c==> ! c= cMEM f0 cCONS b0 cNIL c= f0 b0 * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1 * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1
- (!d. (((MEM d) (flatten (((((ntrans L) N) r) x) j))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) j)))))) |- ((\d. (((MEM d) (flatten (((((ntrans L) N) r) x) j))) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) j)))))) d)
T c==> ! c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 * / c==> cMEM b0 cflatten cntrans f0 f1 f2 f3 f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 f5
+ (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), ((((marked_list L) N) r) x) |- ((i <= (SUC j)) /\ (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (((MEM l') (((((ntrans L) N) r) x) j)) ==> ((u' = (set_of_list l')) ==> ((x' IN u') ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f1 cSUC f2 c==> cmarked_list f0 f3 f4 f5 c/\ c<= f1 cSUC f2 c==> cMEM f6 cntrans f0 f3 f4 f5 f1 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f1 f2 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f3 f4 f5 f1 c= b0 * part cset_of_list b1 cIN f8 b0 c==> cMEM f9 cntrans f0 f3 f4 f5 f2 c==> c= f10 * part cset_of_list f9 c==> cIN f8 f10 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f5 cPOWER * * part ctransform_list f0 f5 f2 c, f3 f4 c= b0 * part cset_of_list b1 cIN f8 b0
- |- (((!A. ((~ (A ==> (A \/ B))) ==> F)) ==> ((\A. ((~ (A ==> (A \/ B))) ==> F)) A)) = ((\A. ((~ (A ==> (A \/ B))) ==> F)) A))
T c= c==> ! c==> c~ c==> b0 c\/ b0 f0 cF * / c==> c~ c==> b0 c\/ b0 f0 cF f1 * / c==> c~ c==> b0 c\/ b0 f0 cF f1
+ (~ ((final_list L) r1)), (u' = (set_of_list l')), (((next_el r1) x) = ((f_list L) x)), ((((l'y L) r1) x) = ram1), (l' = r1), (((find_face L) ram1) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)), (((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM r1) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)) |- ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 f1 c==> c= f2 * part cset_of_list f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cl'y f0 f1 f4 f5 c==> c= f3 f1 c==> c= cfind_face f0 f5 f6 c==> c= crtrans f0 f7 f8 f4 f9 f1 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f7 f8 f4 f9 f1 f4 c==> c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f7 f8 f4 f9 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f7 f8 f4 f9 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f7 f8 f4 f9 c==> cMEM f4 f1 c==> cMEM f1 cntrans f0 f7 f8 f4 f9 c==> cIN f10 f2 c==> cnormal_list f0 cntrans f0 f7 f8 f4 f9 c==> c= cprev_el f1 cl'z f0 cntrans f0 f7 f8 f4 f9 f1 f4 f11 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f6 f5 f11 cNIL cntrans f0 f7 f8 f4 f9 cCONS cFST csplit_normal_list f0 f1 f6 f5 f11 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), ((((marked_list L) N) r) x) |- (((\u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) u) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f5 cSUC f4 c==> cmarked_list f0 f1 f2 f3 c==> * / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f5 c= b0 * part cset_of_list b1 cIN f6 b0 f7 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f6 b0
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- ((real_of_int _10302402) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0
+ (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((MEM x) (((((rtrans L) N) r) x) j)) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) /\ ((((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) /\ ((((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM l') (((((ntrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (?u. ((?l. (((MEM l) (FST (((transform_list L) x) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> cis_restricted chypermap_of_list f0 c==> c= f1 * part cset_of_list f2 c==> c/\ cMEM f3 crtrans f0 f4 f5 f3 f6 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f4 f5 f3 f6 c/\ c= cnext_el crtrans f0 f4 f5 f3 f6 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f4 f5 f3 f6 ce_list f3 c/\ c==> cfinal_list f0 crtrans f0 f4 f5 f3 f6 cflag_list f0 cntrans f0 f4 f5 f3 f6 c==> c~ cfinal_list f0 crtrans f0 f4 f5 f3 f6 cs_flag_list f0 cntrans f0 f4 f5 f3 f6 crtrans f0 f4 f5 f3 f6 f3 c==> cMEM f3 crtrans f0 f4 f5 f3 f6 c==> cMEM f2 cntrans f0 f4 f5 f3 f6 c==> cMEM crtrans f0 f4 f5 f3 f6 cntrans f0 f4 f5 f3 f6 c==> cIN f7 f1 c==> cnormal_list f0 cntrans f0 f4 f5 f3 f6 c==> cmarked_list f0 cntrans f0 f4 f5 f3 f6 crtrans f0 f4 f5 f3 f6 f3 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 c, cntrans f0 f4 f5 f3 f6 crtrans f0 f4 f5 f3 f6 c= b0 * part cset_of_list b1 cIN f7 b0
+ ((((l'y L) r1) x) = ram1), ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((((l'y L) r1) x) = ram1) /\ ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (((MEM x') r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))
T c==> c= cl'y f0 f1 f2 f3 c==> cMEM f1 cntrans f0 f4 f5 f2 f6 c==> cnormal_list f0 cntrans f0 f4 f5 f2 f6 c/\ c= cl'y f0 f1 f2 f3 c==> c= cprev_el f1 cl'z f0 cntrans f0 f4 f5 f2 f6 f1 f2 f7 c==> cMEM f8 f1 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f3 f7 cNIL cntrans f0 f4 f5 f2 f6 cCONS cFST csplit_normal_list f0 f1 f9 f3 f7 cNIL c= b0 * part cset_of_list b1 cIN f8 b0
+ (good_list_nodes L) |- ((good_list_nodes L) = T)
T c==> cgood_list_nodes f0 c= cgood_list_nodes f0 cT
+ |- ((\i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> ((set_of_list (flatten (((((ntrans L) N) r) x) i))) SUBSET (set_of_list (flatten (((((ntrans L) N) r) x) j)))))) i)
T * / c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 cSUBSET * part cset_of_list cflatten cntrans f0 f1 f2 f3 b0 * part cset_of_list cflatten cntrans f0 f1 f2 f3 f4 f5
+ ((\f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)) f) |- (((((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = (?u. ((?l. (((MEM l) ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> * / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0 f5 c= c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f5 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b0 * part cset_of_list b1 cIN f6 b0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace crtrans f0 f1 f2 f3 f4 cCONS cSND csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 crtrans f0 f1 f2 f3 f4 cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 cprev_el crtrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cNIL c= b0 * part cset_of_list b1 cIN f6 b0
+ |- (((!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) ==> ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs)) = ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs))
T c= c==> ! ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
+ (~ (l' = (((((rtrans L) N) r) x) j))), ((MEM l') (((((ntrans L) N) r) x) j)) |- ((((MEM l') (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ==> (((MEM l') (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) \/ ((MEM l') ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)))) = (((MEM l') (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) \/ ((MEM l') ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))))
T c==> c~ c= f0 crtrans f1 f2 f3 f4 f5 c==> cMEM f0 cntrans f1 f2 f3 f4 f5 c= c==> cMEM f0 creplace crtrans f1 f2 f3 f4 f5 cCONS cSND csplit_normal_list f1 crtrans f1 f2 f3 f4 f5 cfind_face f1 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cprev_el crtrans f1 f2 f3 f4 f5 cl'z f1 cntrans f1 f2 f3 f4 f5 crtrans f1 f2 f3 f4 f5 f4 cNIL cntrans f1 f2 f3 f4 f5 c\/ cMEM f0 creplace crtrans f1 f2 f3 f4 f5 cCONS cSND csplit_normal_list f1 crtrans f1 f2 f3 f4 f5 cfind_face f1 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cprev_el crtrans f1 f2 f3 f4 f5 cl'z f1 cntrans f1 f2 f3 f4 f5 crtrans f1 f2 f3 f4 f5 f4 cNIL cntrans f1 f2 f3 f4 f5 cMEM f0 cCONS cFST csplit_normal_list f1 crtrans f1 f2 f3 f4 f5 cfind_face f1 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cprev_el crtrans f1 f2 f3 f4 f5 cl'z f1 cntrans f1 f2 f3 f4 f5 crtrans f1 f2 f3 f4 f5 f4 cNIL c\/ cMEM f0 creplace crtrans f1 f2 f3 f4 f5 cCONS cSND csplit_normal_list f1 crtrans f1 f2 f3 f4 f5 cfind_face f1 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cprev_el crtrans f1 f2 f3 f4 f5 cl'z f1 cntrans f1 f2 f3 f4 f5 crtrans f1 f2 f3 f4 f5 f4 cNIL cntrans f1 f2 f3 f4 f5 cMEM f0 cCONS cFST csplit_normal_list f1 crtrans f1 f2 f3 f4 f5 cfind_face f1 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cl'y f1 crtrans f1 f2 f3 f4 f5 f4 cprev_el crtrans f1 f2 f3 f4 f5 cl'z f1 cntrans f1 f2 f3 f4 f5 crtrans f1 f2 f3 f4 f5 f4 cNIL
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) ==> ((\f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) f)) = ((\f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) f))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> ! ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 * / ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 f1 * / ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 f1
+ |- ((((MEM l') (((((ntrans L) N) r) x) j)) /\ ((set_of_list l') = (set_of_list l'))) = ((\l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ ((set_of_list l') = (set_of_list l)))) l'))
T c= c/\ cMEM f0 cntrans f1 f2 f3 f4 f5 c= * part cset_of_list f0 * part cset_of_list f0 * / c/\ cMEM b0 cntrans f1 f2 f3 f4 f5 c= * part cset_of_list f0 * part cset_of_list b0 f0
+ (~ ((final_list L) (((((rtrans L) N) r) x) j))), (is_restricted (hypermap_of_list L)), (u' = (set_of_list l')), (((next_el (((((rtrans L) N) r) x) j)) x) = ((f_list L) x)), ((((l'y L) r1) x) = ram1), (l' = (((((rtrans L) N) r) x) j)), (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)), (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) (((((rtrans L) N) r) x) j)), ((MEM (((((rtrans L) N) r) x) j)) (((((ntrans L) N) r) x) j)), (x' IN u'), ((normal_list L) (((((ntrans L) N) r) x) j)), ((((marked_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x) |- (((!x''. (((\ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) x'') ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))) ==> ((?ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))) = ((?ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x))))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> c= f5 * part cset_of_list f6 c==> c= cnext_el crtrans f0 f1 f2 f3 f4 f3 cf_list f0 f3 c==> c= cl'y f0 f7 f3 f8 c==> c= f6 crtrans f0 f1 f2 f3 f4 c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f9 c==> c= crtrans f0 f1 f2 f3 f4 f7 c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 crtrans f0 f1 f2 f3 f4 c==> cMEM crtrans f0 f1 f2 f3 f4 cntrans f0 f1 f2 f3 f4 c==> cIN f10 f5 c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= c==> ! c==> * / c= cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 b1 b0 c? / c/\ c? / c/\ cMEM b2 cAPPEND creplace f7 cCONS cSND csplit_normal_list f0 f7 f9 f8 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f7 f9 f8 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL c= b1 * part cset_of_list b2 cIN f10 b1 c==> c? / c= cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 b0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f7 cCONS cSND csplit_normal_list f0 f7 f9 f8 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f7 f9 f8 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL c= b0 * part cset_of_list b1 cIN f10 b0 c==> c? / c= cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 b0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f7 cCONS cSND csplit_normal_list f0 f7 f9 f8 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f7 f9 f8 cprev_el f7 cl'z f0 cntrans f0 f1 f2 f3 f4 f7 f3 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ ((MEM x') r1), ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((MEM x') r1) /\ (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> cMEM f0 f1 c==> cMEM f1 cntrans f2 f3 f4 f5 f6 c==> cnormal_list f2 cntrans f2 f3 f4 f5 f6 c/\ cMEM f0 f1 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f2 f1 f7 f8 f9 cNIL cntrans f2 f3 f4 f5 f6 cCONS cFST csplit_normal_list f2 f1 f7 f8 f9 cNIL c= b0 * part cset_of_list b1 cIN f0 b0
+ |- ((!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= (NUMERAL _0)))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (NUMERAL _0))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))) /\ (!j. ((!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))) ==> (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= (SUC j)))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))
T c/\ ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 cNUMERAL c_0 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 cNUMERAL c_0 c= b2 * part cset_of_list b3 cIN b1 b2 ! c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b1 b0 ! c==> c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b1 c= b3 * part cset_of_list b4 cIN b2 b3 c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b0 c= b3 * part cset_of_list b4 cIN b2 b3 ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b1 cSUC b0 ! c==> c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 b1 c= b3 * part cset_of_list b4 cIN b2 b3 c? / c/\ c? / c/\ cMEM b4 cntrans f0 f1 f2 f3 cSUC b0 c= b3 * part cset_of_list b4 cIN b2 b3
+ (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l))), (i <= (SUC j)), (x' IN u), ((((marked_list L) N) r) x) |- (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c/\ cMEM f5 cntrans f0 f1 f2 f3 f6 c= f7 * part cset_of_list f5 c==> c<= f6 cSUC f4 c==> cIN f8 f7 c==> cmarked_list f0 f1 f2 f3 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f8 b0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) /\ F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 cF
+ ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (((MEM x') r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))))))
T c==> cMEM f0 cntrans f1 f2 f3 f4 f5 c==> cnormal_list f1 cntrans f1 f2 f3 f4 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 cntrans f1 f2 f3 f4 f5 c==> c= cnext_el f0 f4 cf_list f1 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list cntrans f1 f2 f3 f4 f5 ce_list f4 c==> c==> cfinal_list f1 f0 cflag_list f1 cntrans f1 f2 f3 f4 f5 c==> c==> c~ cfinal_list f1 f0 cs_flag_list f1 cntrans f1 f2 f3 f4 f5 f0 f4 c==> c~ cfinal_list f1 f0 c==> c= f6 f0 c==> c= cfind_face f1 f7 f8 c==> c= crtrans f1 f2 f3 f4 f5 f0 c==> c= cl'y f1 f0 f4 f7 c==> c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 f9 c==> cMEM f10 f0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f0 cCONS cSND csplit_normal_list f1 f0 f8 f7 f9 cNIL cntrans f1 f2 f3 f4 f5 cCONS cFST csplit_normal_list f1 f0 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
+ |- ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x)
T * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ (((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0)))))) ==> F), ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) \/ ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))))) |- F
T c==> c==> c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 cF
+ (((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) \/ ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))))) ==> F), (((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) \/ ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))))) \/ ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) \/ ((((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) \/ (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0)))))))) |- F
T c==> c==> c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 cF c==> c\/ c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 cF
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((A ==> (A \/ B)) ==> (A ==> (A \/ B))) = (A ==> (A \/ B)))
T c= c==> c==> f0 c\/ f0 f1 c==> f0 c\/ f0 f1 c==> f0 c\/ f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (l' = (((((rtrans L) N) r) x) j))) |- (~ ((((((rtrans L) N) r) x) j) = l'))
T c==> c~ c= f0 crtrans f1 f2 f3 f4 f5 c~ c= crtrans f1 f2 f3 f4 f5 f0
- |- (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- (~ (!A. (A \/ (~ A)))) |- ((~ (!A. (A \/ (~ A)))) /\ F)
T c==> c~ ! c\/ b0 c~ b0 c/\ c~ ! c\/ b0 c~ b0 cF
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) /\ (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))), ((~ (x = f)) /\ ((MEM x) g)) |- ((!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) /\ ((MEM x) (((replace f) xs) g)))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c==> c/\ c~ c= f0 f1 cMEM f0 f2 c/\ ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 cMEM f0 creplace f1 f3 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) ==> (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F))) = (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)))
T c= c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- |- ((!A'. ((~ A) \/ A')) = ((~ A) \/ (!A. A)))
T c= ! c\/ c~ f0 b0 c\/ c~ f0 ! b0
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!x'. (((\ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) x') ==> (?ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)))) ==> ((?ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) ==> (?ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)))) = ((?ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) ==> (?ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2))))
T c= c==> ! c==> * / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b1 b0 c? / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b1 c==> c? / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0 c? / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0 c==> c? / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0 c? / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- (!x. (((real_mul x) (real_of_int _10302402)) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ (!A. ((~ A) \/ A))) ==> F) = (!A. ((~ A) \/ A)))
T c= c==> c~ ! c\/ c~ b0 b0 cF ! c\/ c~ b0 b0
- ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((MEM r1) (((((ntrans L) N) r) x) j)) ==> (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (((MEM x') r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))))))))
T c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c==> cMEM f5 cntrans f0 f1 f2 f3 f4 c==> cMEM f3 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f1 f2 f3 f4 c==> c= cnext_el f5 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f1 f2 f3 f4 ce_list f3 c==> c==> cfinal_list f0 f5 cflag_list f0 cntrans f0 f1 f2 f3 f4 c==> c==> c~ cfinal_list f0 f5 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c==> c~ cfinal_list f0 f5 c==> c= f6 f5 c==> c= cfind_face f0 f7 f8 c==> c= crtrans f0 f1 f2 f3 f4 f5 c==> c= cl'y f0 f5 f3 f7 c==> c= cprev_el f5 cl'z f0 cntrans f0 f1 f2 f3 f4 f5 f3 f9 c==> cMEM f10 f5 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f5 cCONS cSND csplit_normal_list f0 f5 f8 f7 f9 cNIL cntrans f0 f1 f2 f3 f4 cCONS cFST csplit_normal_list f0 f5 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- ((?f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)) ==> (?f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)))
T c==> c? / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0 c? / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))) = T)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= c==> c/\ c~ c= f0 f1 cMEM f0 f2 cMEM f0 creplace f1 f3 f2 cT
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((MEM r1) (((((ntrans L) N) r) x) j)) /\ (((MEM x) r1) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))) ==> ((((next_el r1) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))) ==> ((((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) ==> (((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)) ==> ((~ ((final_list L) r1)) ==> ((l' = r1) ==> ((((find_face L) ram1) = f) ==> (((((((rtrans L) N) r) x) j) = r1) ==> (((((l'y L) r1) x) = ram1) ==> ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (((MEM x') r1) ==> (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))))))))
T c==> cMEM f0 cntrans f1 f2 f3 f4 f5 c==> cnormal_list f1 cntrans f1 f2 f3 f4 f5 c/\ cMEM f0 cntrans f1 f2 f3 f4 f5 c==> cMEM f4 f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 cntrans f1 f2 f3 f4 f5 c==> c= cnext_el f0 f4 cf_list f1 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list cntrans f1 f2 f3 f4 f5 ce_list f4 c==> c==> cfinal_list f1 f0 cflag_list f1 cntrans f1 f2 f3 f4 f5 c==> c==> c~ cfinal_list f1 f0 cs_flag_list f1 cntrans f1 f2 f3 f4 f5 f0 f4 c==> c~ cfinal_list f1 f0 c==> c= f6 f0 c==> c= cfind_face f1 f7 f8 c==> c= crtrans f1 f2 f3 f4 f5 f0 c==> c= cl'y f1 f0 f4 f7 c==> c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 f9 c==> cMEM f10 f0 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f0 cCONS cSND csplit_normal_list f1 f0 f8 f7 f9 cNIL cntrans f1 f2 f3 f4 f5 cCONS cFST csplit_normal_list f1 f0 f8 f7 f9 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
- |- ((!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) ==> (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3
- ((~ (!A. ((~ A) \/ A))) ==> F), (((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)) |- ((((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)) /\ ((~ (!A. ((~ A) \/ A))) ==> F))
T c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c/\ c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF
- (~ (A ==> (A \/ B))) |- F
T c==> c~ c==> f0 c\/ f0 f1 cF
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- ((((real_of_int _10302402) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) (real_of_int _10302402)) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) (real_of_int _10302402)) = (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c= creal_of_int f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0
- ((((((rtrans L) N) r) x) j) = l') |- (l' = (((((rtrans L) N) r) x) j))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c= f5 crtrans f0 f1 f2 f3 f4
- |- ((((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f) = ((\f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)) f))
T c= c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f5 * / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0 f5
- ((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) j)) |- (((all (\s. (~ (s = NIL)))) (((((ntrans L) N) r) x) j)) = T)
T c==> call / c~ c= b0 cNIL cntrans f0 f1 f2 f3 f4 c= call / c~ c= b0 cNIL cntrans f0 f1 f2 f3 f4 cT
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) xs)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 * / ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 f2
- (~ ((final_list L) r1)) |- (((final_list L) r1) = F)
T c==> c~ cfinal_list f0 f1 c= cfinal_list f0 f1 cF
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0
- ((~ (x = f)) /\ ((MEM x) g)) |- ((!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) ==> ((MEM x) (((replace f) xs) g)))
T c==> c/\ c~ c= f0 f1 cMEM f0 f2 c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 cMEM f0 creplace f1 f3 f2
- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x) |- ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f5 cSUC f4 c==> cMEM f6 cntrans f0 f1 f2 f3 f5 c==> cmarked_list f0 f1 f2 f3 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f5 f4 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f8 b0
- (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) |- ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) /\ (?ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)))
T c==> c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 f6 c/\ c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 f6 c? / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0
- (u = (set_of_list l)) |- ((\l'. (((MEM l') ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ (u = (set_of_list l')))) = (\l'. (((MEM l') ((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL))) /\ ((set_of_list l) = (set_of_list l')))))
T c==> c= f0 * part cset_of_list f1 c= / c/\ cMEM b0 cAPPEND creplace crtrans f2 f3 f4 f5 f6 cCONS cSND csplit_normal_list f2 crtrans f2 f3 f4 f5 f6 cfind_face f2 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cprev_el crtrans f2 f3 f4 f5 f6 cl'z f2 cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 f5 cNIL cntrans f2 f3 f4 f5 f6 cCONS cFST csplit_normal_list f2 crtrans f2 f3 f4 f5 f6 cfind_face f2 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cprev_el crtrans f2 f3 f4 f5 f6 cl'z f2 cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 f5 cNIL c= f0 * part cset_of_list b0 / c/\ cMEM b0 cAPPEND creplace crtrans f2 f3 f4 f5 f6 cCONS cSND csplit_normal_list f2 crtrans f2 f3 f4 f5 f6 cfind_face f2 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cprev_el crtrans f2 f3 f4 f5 f6 cl'z f2 cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 f5 cNIL cntrans f2 f3 f4 f5 f6 cCONS cFST csplit_normal_list f2 crtrans f2 f3 f4 f5 f6 cfind_face f2 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cprev_el crtrans f2 f3 f4 f5 f6 cl'z f2 cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 f5 cNIL c= * part cset_of_list f1 * part cset_of_list b0
- ((\f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)) f) |- (((((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f) ==> (?f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f))) = (?f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)))
T c==> * / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0 f5 c= c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f5 c? / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0 c? / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- (l' = (((((rtrans L) N) r) x) j)) |- ((((((rtrans L) N) r) x) j) = l')
T c==> c= f0 crtrans f1 f2 f3 f4 f5 c= crtrans f1 f2 f3 f4 f5 f0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= ! c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 cT
- |- (T = (!B. (!A. ((~ (A ==> (A \/ B))) ==> F))))
T c= cT ! ! c==> c~ c==> b1 c\/ b1 b0 cF
- (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) /\ (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)))
T c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c/\ c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- |- ((((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) = ((~ (A ==> (A \/ B))) ==> F))
T c= c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- |- ((((~ (!A. ((~ A) \/ A))) ==> F) ==> ((~ (!A. ((~ A) \/ A))) ==> F)) = ((~ (!A. ((~ A) \/ A))) ==> F))
T c= c==> c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF c==> c~ ! c\/ c~ b0 b0 cF
- |- (((!B. (!A. ((~ (A ==> (A \/ B))) ==> F))) ==> ((\B. (!A. ((~ (A ==> (A \/ B))) ==> F))) B)) = ((\B. (!A. ((~ (A ==> (A \/ B))) ==> F))) B))
T c= c==> ! ! c==> c~ c==> b1 c\/ b1 b0 cF * / ! c==> c~ c==> b1 c\/ b1 b0 cF f0 * / ! c==> c~ c==> b1 c\/ b1 b0 cF f0
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))), ((~ (x = f)) /\ ((MEM x) g)) |- ((MEM x) (((replace f) xs) g))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c==> c/\ c~ c= f0 f1 cMEM f0 f2 cMEM f0 creplace f1 f3 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((i <= (SUC j)) ==> (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (((MEM l') (((((ntrans L) N) r) x) j)) ==> ((u' = (set_of_list l')) ==> ((x' IN u') ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> c<= f4 cSUC f5 c==> cMEM f6 cntrans f0 f1 f2 f3 f4 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f4 f5 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f8 b0 c==> cMEM f9 cntrans f0 f1 f2 f3 f5 c==> c= f10 * part cset_of_list f9 c==> cIN f8 f10 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 cPOWER * * part ctransform_list f0 f3 f5 c, f1 f2 c= b0 * part cset_of_list b1 cIN f8 b0
- (A ==> (A \/ B)) |- ((A ==> (A \/ B)) /\ (A ==> (A \/ B)))
T c==> c==> f0 c\/ f0 f1 c/\ c==> f0 c\/ f0 f1 c==> f0 c\/ f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((\ram1. ((((l'y L) r1) x) = ram1)) ram1) |- ((((((l'y L) r1) x) = ram1) ==> (?ram1. ((((l'y L) r1) x) = ram1))) = (?ram1. ((((l'y L) r1) x) = ram1)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c= c==> c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0 c? / c= cl'y f0 f1 f2 b0
- ((~ (A ==> (A \/ B))) ==> F) |- (((~ (A ==> (A \/ B))) ==> F) /\ ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c/\ c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- ((~ (!A. (A \/ (~ A)))) ==> F), (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((A ==> (A \/ B)) ==> (A ==> (A \/ B)))
T c==> c==> f0 c\/ f0 f1 c==> f0 c\/ f0 f1
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))), (((MEM f) g) /\ ((MEM x) xs)) |- ((MEM x) (((replace f) xs) g))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c==> c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10302402))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10302402))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((((\ram1. ((((l'y L) r1) x) = ram1)) ram1) ==> (?ram1. ((((l'y L) r1) x) = ram1))) = T)
T c= c==> * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0 cT
- |- ((T \/ t) = T)
T c= c\/ cT f0 cT
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) ==> ((\xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) xs)) = ((\xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) xs))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= c==> ! ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 * / ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 f2 * / ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 f2
- |- ((!A. (P \/ (Q A))) = (P \/ (!A. (Q A))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- |- ((F ==> t) = T)
T c= c==> cF f0 cT
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- ((((((rtrans L) N) r) x) j) = r1) |- ((\r1. ((((((rtrans L) N) r) x) j) = r1)) r1)
T c==> c= crtrans f0 f1 f2 f3 f4 f5 * / c= crtrans f0 f1 f2 f3 f4 b0 f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))) f)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 * / ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2 f1
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) /\ (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c/\ ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) ==> ((\g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) g)) = ((\g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))) g))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> ! c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 * / c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 f3 * / c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0 f3
- |- (((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F))) = (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c= c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) /\ (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c/\ ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
- ((((((rtrans L) N) r) x) j) = r1) |- (((((((rtrans L) N) r) x) j) = r1) /\ (?r1. ((((((rtrans L) N) r) x) j) = r1)))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c/\ c= crtrans f0 f1 f2 f3 f4 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))) = T)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c= ! ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1 cT
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! ! c==> c/\ c~ c= f0 f1 cMEM f0 b1 cMEM f0 creplace f1 b0 b1
- ((\ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) ram2) |- (((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2))) = (?ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)))
T c==> * / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0 f6 c= c==> c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 f6 c? / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0 c? / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x)))) ==> ((((marked_list L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)) = T)
T c= c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 cmarked_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cT
- ((~ (!A. (A \/ (~ A)))) ==> F) |- (((~ (!A. (A \/ (~ A)))) ==> F) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
- (u = (set_of_list l)), ((final_list L) (((((rtrans L) N) r) x) j)) |- ((\l'. (((MEM l') (FST (((COND ((final_list L) (((((rtrans L) N) r) x) j))) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))) (((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) , (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)))))))) /\ (u = (set_of_list l')))) = (\l'. (((MEM l') (((((ntrans L) N) r) x) j)) /\ ((set_of_list l) = (set_of_list l')))))
T c==> c= f0 * part cset_of_list f1 c==> cfinal_list f2 crtrans f2 f3 f4 f5 f6 c= / c/\ cMEM b0 cFST cCOND cfinal_list f2 crtrans f2 f3 f4 f5 f6 c, cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 c, cAPPEND creplace crtrans f2 f3 f4 f5 f6 cCONS cSND csplit_normal_list f2 crtrans f2 f3 f4 f5 f6 cfind_face f2 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cprev_el crtrans f2 f3 f4 f5 f6 cl'z f2 cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 f5 cNIL cntrans f2 f3 f4 f5 f6 cCONS cFST csplit_normal_list f2 crtrans f2 f3 f4 f5 f6 cfind_face f2 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cprev_el crtrans f2 f3 f4 f5 f6 cl'z f2 cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 f5 cNIL cSND csplit_normal_list f2 crtrans f2 f3 f4 f5 f6 cfind_face f2 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cprev_el crtrans f2 f3 f4 f5 f6 cl'z f2 cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 f5 c= f0 * part cset_of_list b0 / c/\ cMEM b0 cntrans f2 f3 f4 f5 f6 c= * part cset_of_list f1 * part cset_of_list b0
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- (~ ((final_list L) r1)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2), ((((l'y L) r1) x) = ram1), (l' = r1), (((find_face L) ram1) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)), (((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM x') r1), ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((MEM x') r1) /\ (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c~ cfinal_list f0 f1 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 f1 c==> c= cfind_face f0 f7 f9 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f3 f4 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> cMEM f2 f1 c==> cMEM f10 f1 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c/\ cMEM f10 f1 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f7 f6 cNIL cntrans f0 f3 f4 f2 f5 cCONS cFST csplit_normal_list f0 f1 f9 f7 f6 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))) |- ((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u)))))) = T)
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c= c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= f5 f4 ! c==> c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 f5 c= b1 * part cset_of_list b2 cIN b0 b1 c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 f4 c= b1 * part cset_of_list b2 cIN b0 b1 cT
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))) g)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 * / c==> c/\ c~ c= f0 f1 cMEM f0 b0 cMEM f0 creplace f1 f2 b0 f3
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) x)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 * / ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 f0
- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), ((((marked_list L) N) r) x) |- ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) /\ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f5 c= b0 * part cset_of_list b1 cIN f6 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f5 cSUC f4 c==> cmarked_list f0 f1 f2 f3 c/\ c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f5 c= b0 * part cset_of_list b1 cIN f6 b0 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f6 b0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))), (((MEM f) g) /\ ((MEM x) xs)) |- ((((MEM f) g) /\ ((MEM x) xs)) /\ ((MEM x) (((replace f) xs) g)))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c==> c/\ cMEM f0 f1 cMEM f2 f3 c/\ c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1
- (((MEM f) g) /\ ((MEM x) xs)) |- ((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) ==> ((MEM x) (((replace f) xs) g)))
T c==> c/\ cMEM f0 f1 cMEM f2 f3 c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 cMEM f2 creplace f0 f3 f1
- |- (((~ (A ==> (A \/ B))) ==> F) = (A ==> (A \/ B)))
T c= c==> c~ c==> f0 c\/ f0 f1 cF c==> f0 c\/ f0 f1
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((F \/ t) = t)
T c= c\/ cF f0 f0
- ((((marked_list L) (((((ntrans L) N) r) x) j)) r1) x) |- (((((marked_list L) (((((ntrans L) N) r) x) j)) r1) x) = T)
T c==> cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 c= cmarked_list f0 cntrans f0 f1 f2 f3 f4 f5 f3 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! c==> c/\ cMEM b0 b2 cMEM f0 b1 cMEM f0 creplace b0 b1 b2
- |- (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) |- ((\f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))) f)
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 * / ! ! c==> c/\ c~ c= f0 b0 cMEM f0 b2 cMEM f0 creplace b0 b1 b2 f1
- ((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)) |- (((~ ((final_list L) (((((rtrans L) N) r) x) j))) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)) = T)
T c==> c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 cs_flag_list f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cT
- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))) |- ((transform_assumption_v2 L) ==> ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((i <= (SUC j)) ==> (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> ctransform_assumption_v2 f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c<= f5 cSUC f4 c==> cMEM f6 cntrans f0 f1 f2 f3 f5 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f5 f4 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f8 b0
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) ==> ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs)) = ((\xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))) xs))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> ! ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2 * / ! c==> c/\ cMEM f0 b1 cMEM f1 b0 cMEM f1 creplace f0 b0 b1 f2
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!A. (P A)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) ==> (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g)))))))) = (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))))
T c= c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3
- (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), ((((marked_list L) N) r) x) |- ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))) /\ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f5 b0 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f6 c= b0 * part cset_of_list b1 cIN f5 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f7 * part cset_of_list f8 c==> c<= f4 f6 c==> c<= f4 cSUC f6 c==> cMEM f8 cntrans f0 f1 f2 f3 f4 c==> cIN f5 f7 c==> cmarked_list f0 f1 f2 f3 c/\ c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f6 c= b0 * part cset_of_list b1 cIN f5 b0 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f6 c= b0 * part cset_of_list b1 cIN f5 b0
- |- (((((((rtrans L) N) r) x) j) = r1) ==> (?r1. ((((((rtrans L) N) r) x) j) = r1)))
T c==> c= crtrans f0 f1 f2 f3 f4 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0
- (~ (!A. ((~ A) \/ A))) |- F
T c==> c~ ! c\/ c~ b0 b0 cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x) |- (((MEM l) (((((ntrans L) N) r) x) i)) /\ ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c<= f5 cSUC f4 c==> cMEM f6 cntrans f0 f1 f2 f3 f5 c==> cmarked_list f0 f1 f2 f3 c/\ cMEM f6 cntrans f0 f1 f2 f3 f5 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f5 f4 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f8 b0
- ((\f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)) f) |- (((\f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)) f) /\ (?f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)))
T c==> * / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0 f5 c/\ * / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0 f5 c? / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f) |- ((((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f) /\ (?f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)))
T c==> c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f5 c/\ c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 f5 c? / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0
- ((all (loop_list L)) (((((ntrans L) N) r) x) j)) |- (((all (loop_list L)) (((((ntrans L) N) r) x) j)) = T)
T c==> call * part cloop_list f0 cntrans f0 f1 f2 f3 f4 c= call * part cloop_list f0 cntrans f0 f1 f2 f3 f4 cT
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))) = T)
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 c= c==> c/\ cMEM f0 f1 cMEM f2 f3 cMEM f2 creplace f0 f3 f1 cT
- (!x. (!f. (!xs. (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))))) |- (!g. ((((MEM f) g) /\ ((MEM x) xs)) ==> ((MEM x) (((replace f) xs) g))))
T c==> ! ! ! ! c==> c/\ cMEM b1 b3 cMEM b0 b2 cMEM b0 creplace b1 b2 b3 ! c==> c/\ cMEM f0 b0 cMEM f1 f2 cMEM f1 creplace f0 f2 b0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2) ==> (?ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)))
T c==> c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 f6 c? / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0
- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x) |- ((u = (set_of_list l)) /\ ((x' IN u) ==> ((i <= j) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 * part cset_of_list f6 c==> c<= f7 cSUC f4 c==> cMEM f6 cntrans f0 f1 f2 f3 f7 c==> cmarked_list f0 f1 f2 f3 c/\ c= f5 * part cset_of_list f6 c==> cIN f8 f5 c==> c<= f7 f4 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f8 b0
- |- (((!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))) ==> (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g)))))))) = (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))))
T c= c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- (((!x. (((real_mul x) (real_of_int _10302402)) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) (real_of_int _10302402)) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) (real_of_int _10302402)) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!r1. (((\r1. ((((((rtrans L) N) r) x) j) = r1)) r1) ==> (?r1. ((((((rtrans L) N) r) x) j) = r1))))
T c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0
- (good_list L), (transform_assumption_v2 L) |- ((good_list L) /\ ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((i <= (SUC j)) ==> (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (((MEM l') (((((ntrans L) N) r) x) j)) ==> ((u' = (set_of_list l')) ==> ((x' IN u') ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))))))))
T c==> cgood_list f0 c==> ctransform_assumption_v2 f0 c/\ cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c<= f4 cSUC f5 c==> cMEM f6 cntrans f0 f1 f2 f3 f4 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f4 f5 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f8 b0 c==> cMEM f9 cntrans f0 f1 f2 f3 f5 c==> c= f10 * part cset_of_list f9 c==> cIN f8 f10 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 cPOWER * * part ctransform_list f0 f3 f5 c, f1 f2 c= b0 * part cset_of_list b1 cIN f8 b0
- (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))) |- (((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u)))) = T)
T c==> ! c==> c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 f4 c= b1 * part cset_of_list b2 cIN b0 b1 c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 f5 c= b1 * part cset_of_list b2 cIN b0 b1 c= c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f6 b0 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f5 c= b0 * part cset_of_list b1 cIN f6 b0 cT
- ((~ (A ==> (A \/ B))) ==> F), (((~ (A ==> (A \/ B))) ==> F) ==> ((~ (A ==> (A \/ B))) ==> F)) |- (((~ (A ==> (A \/ B))) ==> F) /\ ((~ (A ==> (A \/ B))) ==> F))
T c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c==> c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF c/\ c==> c~ c==> f0 c\/ f0 f1 cF c==> c~ c==> f0 c\/ f0 f1 cF
- |- (((\N'. (f N')) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) |- ((((final_list L) (((((rtrans L) N) r) x) j)) ==> ((flag_list L) (((((ntrans L) N) r) x) j))) = T)
T c==> c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 c= c==> cfinal_list f0 crtrans f0 f1 f2 f3 f4 cflag_list f0 cntrans f0 f1 f2 f3 f4 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((\r1. ((((((rtrans L) N) r) x) j) = r1)) r1) |- ((((((((rtrans L) N) r) x) j) = r1) ==> (?r1. ((((((rtrans L) N) r) x) j) = r1))) = (?r1. ((((((rtrans L) N) r) x) j) = r1)))
T c==> * / c= crtrans f0 f1 f2 f3 f4 b0 f5 c= c==> c= crtrans f0 f1 f2 f3 f4 f5 c? / c= crtrans f0 f1 f2 f3 f4 b0 c? / c= crtrans f0 f1 f2 f3 f4 b0
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (!f. (((\f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f)) f) ==> (?f. (((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x)) = f))))
T c==> * / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0 f5 c? / c= cfind_face f0 cl'y f0 crtrans f0 f1 f2 f3 f4 f3 b0
- (~ ((final_list L) r1)), (((next_el r1) x) = ((f_list L) x)), (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2), ((((l'y L) r1) x) = ram1), (l' = r1), (((find_face L) ram1) = f), ((((((rtrans L) N) r) x) j) = r1), ((~ ((final_list L) r1)) ==> ((((s_flag_list L) (((((ntrans L) N) r) x) j)) r1) x)), (((final_list L) r1) ==> ((flag_list L) (((((ntrans L) N) r) x) j))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list (((((ntrans L) N) r) x) j)) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) (((((ntrans L) N) r) x) j))), ((MEM x) r1), ((MEM x') r1), ((MEM r1) (((((ntrans L) N) r) x) j)), ((normal_list L) (((((ntrans L) N) r) x) j)) |- (?u. ((?l. (((MEM l) ((APPEND (((replace r1) ((CONS (SND (((((split_normal_list L) r1) f) ram1) ram2))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) r1) f) ram1) ram2))) NIL))) /\ (u = (set_of_list l)))) /\ (x' IN u)))
T c==> c~ cfinal_list f0 f1 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cprev_el f1 cl'z f0 cntrans f0 f3 f4 f2 f5 f1 f2 f6 c==> c= cl'y f0 f1 f2 f7 c==> c= f8 f1 c==> c= cfind_face f0 f7 f9 c==> c= crtrans f0 f3 f4 f2 f5 f1 c==> c==> c~ cfinal_list f0 f1 cs_flag_list f0 cntrans f0 f3 f4 f2 f5 f1 f2 c==> c==> cfinal_list f0 f1 cflag_list f0 cntrans f0 f3 f4 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list cntrans f0 f3 f4 f2 f5 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 cntrans f0 f3 f4 f2 f5 c==> cMEM f2 f1 c==> cMEM f10 f1 c==> cMEM f1 cntrans f0 f3 f4 f2 f5 c==> cnormal_list f0 cntrans f0 f3 f4 f2 f5 c? / c/\ c? / c/\ cMEM b1 cAPPEND creplace f1 cCONS cSND csplit_normal_list f0 f1 f9 f7 f6 cNIL cntrans f0 f3 f4 f2 f5 cCONS cFST csplit_normal_list f0 f1 f9 f7 f6 cNIL c= b0 * part cset_of_list b1 cIN f10 b0
- |- (T = ((~ (!A. ((~ A) \/ A))) ==> F))
T c= cT c==> c~ ! c\/ c~ b0 b0 cF
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ (!A. ((~ A) \/ A))) |- ((~ (!A. ((~ A) \/ A))) /\ F)
T c==> c~ ! c\/ c~ b0 b0 c/\ c~ ! c\/ c~ b0 b0 cF
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), ((((marked_list L) N) r) x) |- ((x' IN u) ==> ((i <= j) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 * part cset_of_list f6 c==> c<= f7 cSUC f4 c==> cMEM f6 cntrans f0 f1 f2 f3 f7 c==> cmarked_list f0 f1 f2 f3 c==> cIN f8 f5 c==> c<= f7 f4 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f8 b0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), ((((marked_list L) N) r) x) |- ((x' IN u) /\ ((i <= j) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f5 * part cset_of_list f6 c==> c<= f7 cSUC f4 c==> cMEM f6 cntrans f0 f1 f2 f3 f7 c==> cIN f8 f5 c==> cmarked_list f0 f1 f2 f3 c/\ cIN f8 f5 c==> c<= f7 f4 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f8 b0
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- |- (((!x. (((\r1. ((((((rtrans L) N) r) x) j) = r1)) x) ==> (?r1. ((((((rtrans L) N) r) x) j) = r1)))) ==> ((?r1. ((((((rtrans L) N) r) x) j) = r1)) ==> (?r1. ((((((rtrans L) N) r) x) j) = r1)))) = ((?r1. ((((((rtrans L) N) r) x) j) = r1)) ==> (?r1. ((((((rtrans L) N) r) x) j) = r1))))
T c= c==> ! c==> * / c= crtrans f0 f1 f2 f3 f4 b1 b0 c? / c= crtrans f0 f1 f2 f3 f4 b1 c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c? / c= crtrans f0 f1 f2 f3 f4 b0 c==> c? / c= crtrans f0 f1 f2 f3 f4 b0 c? / c= crtrans f0 f1 f2 f3 f4 b0
- |- ((!B. (!A. (A ==> (A \/ B)))) = ((!A. (A ==> (A \/ T))) /\ (!A. (A ==> (A \/ F)))))
T c= ! ! c==> b1 c\/ b1 b0 c/\ ! c==> b0 c\/ b0 cT ! c==> b0 c\/ b0 cF
- |- (!ram2. (((\ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2)) ram2) ==> (?ram2. (((prev_el r1) ((((l'z L) (((((ntrans L) N) r) x) j)) r1) x)) = ram2))))
T c==> * / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0 f6 c? / c= cprev_el f0 cl'z f1 cntrans f1 f2 f3 f4 f5 f0 f4 b0
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- (((~ (!A. (A \/ (~ A)))) ==> F) = (!A. (A \/ (~ A))))
T c= c==> c~ ! c\/ b0 c~ b0 cF ! c\/ b0 c~ b0
- ((~ (!A. (A \/ (~ A)))) ==> F) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302402)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302398)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) ((real_add (real_of_int _10302399)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10302398)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302399))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302398))) (real_of_int _10302399))) (real_of_num (NUMERAL _0))))))) |- ((real_ge (real_of_int _10302399)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302402)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302402))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302402) = (real_of_num (NUMERAL _0))))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10302402)) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- ((\ram1. ((((l'y L) r1) x) = ram1)) ram1) |- (((\ram1. ((((l'y L) r1) x) = ram1)) ram1) /\ (?ram1. ((((l'y L) r1) x) = ram1)))
T c==> * / c= cl'y f0 f1 f2 b0 f3 c/\ * / c= cl'y f0 f1 f2 b0 f3 c? / c= cl'y f0 f1 f2 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\A. ((~ (A ==> (A \/ B))) ==> F)) A)
T * / c==> c~ c==> b0 c\/ b0 f0 cF f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (A ==> (A \/ B))) |- ((~ (A ==> (A \/ B))) /\ F)
T c==> c~ c==> f0 c\/ f0 f1 c/\ c~ c==> f0 c\/ f0 f1 cF
- ((normal_list L) (((((ntrans L) N) r) x) j)) |- (((normal_list L) (((((ntrans L) N) r) x) j)) = T)
T c==> cnormal_list f0 cntrans f0 f1 f2 f3 f4 c= cnormal_list f0 cntrans f0 f1 f2 f3 f4 cT
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (i <= j))))) ==> (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L) |- (((((marked_list L) N) r) x) ==> ((i <= (SUC j)) ==> (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u)))))))))
T c==> ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c<= b0 f4 ! c==> c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 b0 c= b2 * part cset_of_list b3 cIN b1 b2 c? / c/\ c? / c/\ cMEM b3 cntrans f0 f1 f2 f3 f4 c= b2 * part cset_of_list b3 cIN b1 b2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> cmarked_list f0 f1 f2 f3 c==> c<= f5 cSUC f4 c==> cMEM f6 cntrans f0 f1 f2 f3 f5 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f5 f4 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f4 c= b0 * part cset_of_list b1 cIN f8 b0
- ((((l'y L) r1) x) = ram1) |- (((((l'y L) r1) x) = ram1) /\ (?ram1. ((((l'y L) r1) x) = ram1)))
T c==> c= cl'y f0 f1 f2 f3 c/\ c= cl'y f0 f1 f2 f3 c? / c= cl'y f0 f1 f2 b0
- (!x. (!f. (!xs. (!g. (((~ (x = f)) /\ ((MEM x) g)) ==> ((MEM x) (((replace f) xs) g))))))), ((~ (x = f)) /\ ((MEM x) g)) |- (((~ (x = f)) /\ ((MEM x) g)) /\ ((MEM x) (((replace f) xs) g)))
T c==> ! ! ! ! c==> c/\ c~ c= b0 b1 cMEM b0 b3 cMEM b0 creplace b1 b2 b3 c==> c/\ c~ c= f0 f1 cMEM f0 f2 c/\ c/\ c~ c= f0 f1 cMEM f0 f2 cMEM f0 creplace f1 f3 f2
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- (!x'. ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) j)) /\ (u = (set_of_list l)))) /\ (x' IN u))))), (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (u = (set_of_list l)), (i <= j), (i <= (SUC j)), ((MEM l) (((((ntrans L) N) r) x) i)), (x' IN u), ((((marked_list L) N) r) x) |- ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) /\ (?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) (SUC j))) /\ (u = (set_of_list l)))) /\ (x' IN u))))
T c==> ! c==> c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 f4 c= b1 * part cset_of_list b2 cIN b0 b1 c? / c/\ c? / c/\ cMEM b2 cntrans f0 f1 f2 f3 f5 c= b1 * part cset_of_list b2 cIN b0 b1 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f6 b0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f7 * part cset_of_list f8 c==> c<= f4 f5 c==> c<= f4 cSUC f5 c==> cMEM f8 cntrans f0 f1 f2 f3 f4 c==> cIN f6 f7 c==> cmarked_list f0 f1 f2 f3 c/\ c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f6 b0 c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 cSUC f5 c= b0 * part cset_of_list b1 cIN f6 b0
- (transform_assumption_v2 L) |- ((transform_assumption_v2 L) /\ ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((i <= (SUC j)) ==> (((MEM l) (((((ntrans L) N) r) x) i)) ==> ((u = (set_of_list l)) ==> ((x' IN u) ==> ((i <= j) ==> ((?u. ((?l. (((MEM l) (((((ntrans L) N) r) x) i)) /\ (u = (set_of_list l)))) /\ (x' IN u))) ==> (((MEM l') (((((ntrans L) N) r) x) j)) ==> ((u' = (set_of_list l')) ==> ((x' IN u') ==> (?u. ((?l. (((MEM l) (FST (((transform_list L) x) (((POWER ((transform_list L) x)) j) (N , r))))) /\ (u = (set_of_list l)))) /\ (x' IN u))))))))))))))))
T c==> ctransform_assumption_v2 f0 c/\ ctransform_assumption_v2 f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c<= f4 cSUC f5 c==> cMEM f6 cntrans f0 f1 f2 f3 f4 c==> c= f7 * part cset_of_list f6 c==> cIN f8 f7 c==> c<= f4 f5 c==> c? / c/\ c? / c/\ cMEM b1 cntrans f0 f1 f2 f3 f4 c= b0 * part cset_of_list b1 cIN f8 b0 c==> cMEM f9 cntrans f0 f1 f2 f3 f5 c==> c= f10 * part cset_of_list f9 c==> cIN f8 f10 c? / c/\ c? / c/\ cMEM b1 cFST ctransform_list f0 f3 cPOWER * * part ctransform_list f0 f3 f5 c, f1 f2 c= b0 * part cset_of_list b1 cIN f8 b0
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (u = (set_of_list l)) |- ((\l'. (((MEM l') (FST (((COND ((final_list L) (((((rtrans L) N) r) x) j))) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))) (((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) , (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)))))))) /\ (u = (set_of_list l')))) = (\l'. (((MEM l') (FST (((COND ((final_list L) (((((rtrans L) N) r) x) j))) ((((((ntrans L) N) r) x) j) , (((((rtrans L) N) r) x) j))) (((APPEND (((replace (((((rtrans L) N) r) x) j)) ((CONS (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) (((((ntrans L) N) r) x) j))) ((CONS (FST (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x))))) NIL)) , (SND (((((split_normal_list L) (((((rtrans L) N) r) x) j)) ((find_face L) (((l'y L) (((((rtrans L) N) r) x) j)) x))) (((l'y L) (((((rtrans L) N) r) x) j)) x)) ((prev_el (((((rtrans L) N) r) x) j)) ((((l'z L) (((((ntrans L) N) r) x) j)) (((((rtrans L) N) r) x) j)) x)))))))) /\ ((set_of_list l) = (set_of_list l')))))
T c==> c= f0 * part cset_of_list f1 c= / c/\ cMEM b0 cFST cCOND cfinal_list f2 crtrans f2 f3 f4 f5 f6 c, cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 c, cAPPEND creplace crtrans f2 f3 f4 f5 f6 cCONS cSND csplit_normal_list f2 crtrans f2 f3 f4 f5 f6 cfind_face f2 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cprev_el crtrans f2 f3 f4 f5 f6 cl'z f2 cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 f5 cNIL cntrans f2 f3 f4 f5 f6 cCONS cFST csplit_normal_list f2 crtrans f2 f3 f4 f5 f6 cfind_face f2 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cprev_el crtrans f2 f3 f4 f5 f6 cl'z f2 cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 f5 cNIL cSND csplit_normal_list f2 crtrans f2 f3 f4 f5 f6 cfind_face f2 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cprev_el crtrans f2 f3 f4 f5 f6 cl'z f2 cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 f5 c= f0 * part cset_of_list b0 / c/\ cMEM b0 cFST cCOND cfinal_list f2 crtrans f2 f3 f4 f5 f6 c, cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 c, cAPPEND creplace crtrans f2 f3 f4 f5 f6 cCONS cSND csplit_normal_list f2 crtrans f2 f3 f4 f5 f6 cfind_face f2 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cprev_el crtrans f2 f3 f4 f5 f6 cl'z f2 cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 f5 cNIL cntrans f2 f3 f4 f5 f6 cCONS cFST csplit_normal_list f2 crtrans f2 f3 f4 f5 f6 cfind_face f2 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cprev_el crtrans f2 f3 f4 f5 f6 cl'z f2 cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 f5 cNIL cSND csplit_normal_list f2 crtrans f2 f3 f4 f5 f6 cfind_face f2 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cl'y f2 crtrans f2 f3 f4 f5 f6 f5 cprev_el crtrans f2 f3 f4 f5 f6 cl'z f2 cntrans f2 f3 f4 f5 f6 crtrans f2 f3 f4 f5 f6 f5 c= * part cset_of_list f1 * part cset_of_list b0
