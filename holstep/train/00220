N Bump.MCELL3
C |- (!V. (!ul. (((mcell3 V) ul) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul))))
T c= * * part cmcell3 f0 f1 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 f0 f1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D Pack_defs.mcell
A |- (!i. (!V. (!ul. ((((mcell i) V) ul) = (((COND (i = (NUMERAL _0))) ((mcell0 V) ul)) (((COND (i = (NUMERAL (BIT1 _0)))) ((mcell1 V) ul)) (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) ((mcell2 V) ul)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) ((mcell3 V) ul)) ((mcell4 V) ul)))))))))
T c= * * * part cmcell f0 f1 f2 * * * part cCOND c= f0 cNUMERAL c_0 * * part cmcell0 f1 f2 * * * part cCOND c= f0 cNUMERAL cBIT1 c_0 * * part cmcell1 f1 f2 * * * part cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cmcell2 f1 f2 * * * part cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 * * part cmcell3 f1 f2 * * part cmcell4 f1 f2
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
- |- (((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- (~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0)))
T c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = F)) = (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = F))
T c= c==> c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c==> c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0
- ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c==> c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\i. (!V. (!ul. ((((mcell i) V) ul) = (((COND (i = (NUMERAL _0))) ((mcell0 V) ul)) (((COND (i = (NUMERAL (BIT1 _0)))) ((mcell1 V) ul)) (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) ((mcell2 V) ul)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) ((mcell3 V) ul)) ((mcell4 V) ul))))))))) i)
T * / ! ! c= * * * part cmcell b0 b1 b2 * * * part cCOND c= b0 cNUMERAL c_0 * * part cmcell0 b1 b2 * * * part cCOND c= b0 cNUMERAL cBIT1 c_0 * * part cmcell1 b1 b2 * * * part cCOND c= b0 cNUMERAL cBIT0 cBIT1 c_0 * * part cmcell2 b1 b2 * * * part cCOND c= b0 cNUMERAL cBIT1 cBIT1 c_0 * * part cmcell3 b1 b2 * * part cmcell4 b1 b2 f0
- |- (~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))))
T c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
+ |- ((!ul. t) = t)
T c= ! f0 f0
+ |- (((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cF
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
- |- ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ (~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))))))
T c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
+ |- (T = (!V. (!ul. (((mcell3 V) ul) = (((mcell (NUMERAL (BIT1 (BIT1 _0)))) V) ul)))))
T c= cT ! ! c= * * part cmcell3 b0 b1 * * * part cmcell cNUMERAL cBIT1 cBIT1 c_0 b0 b1
+ |- ((\ul. ((((mcell i) V) ul) = (((COND (i = (NUMERAL _0))) ((mcell0 V) ul)) (((COND (i = (NUMERAL (BIT1 _0)))) ((mcell1 V) ul)) (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) ((mcell2 V) ul)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) ((mcell3 V) ul)) ((mcell4 V) ul))))))) ul)
T * / c= * * * part cmcell f0 f1 b0 * * * part cCOND c= f0 cNUMERAL c_0 * * part cmcell0 f1 b0 * * * part cCOND c= f0 cNUMERAL cBIT1 c_0 * * part cmcell1 f1 b0 * * * part cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cmcell2 f1 b0 * * * part cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 * * part cmcell3 f1 b0 * * part cmcell4 f1 b0 f2
- |- (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = F)
T c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- (~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 _0))))
T c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- |- (T = ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ (~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))))))
T c= cT c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((!ul. ((((mcell i) V) ul) = (((COND (i = (NUMERAL _0))) ((mcell0 V) ul)) (((COND (i = (NUMERAL (BIT1 _0)))) ((mcell1 V) ul)) (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) ((mcell2 V) ul)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) ((mcell3 V) ul)) ((mcell4 V) ul))))))) ==> ((\ul. ((((mcell i) V) ul) = (((COND (i = (NUMERAL _0))) ((mcell0 V) ul)) (((COND (i = (NUMERAL (BIT1 _0)))) ((mcell1 V) ul)) (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) ((mcell2 V) ul)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) ((mcell3 V) ul)) ((mcell4 V) ul))))))) ul)) = ((\ul. ((((mcell i) V) ul) = (((COND (i = (NUMERAL _0))) ((mcell0 V) ul)) (((COND (i = (NUMERAL (BIT1 _0)))) ((mcell1 V) ul)) (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) ((mcell2 V) ul)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) ((mcell3 V) ul)) ((mcell4 V) ul))))))) ul))
T c= c==> ! c= * * * part cmcell f0 f1 b0 * * * part cCOND c= f0 cNUMERAL c_0 * * part cmcell0 f1 b0 * * * part cCOND c= f0 cNUMERAL cBIT1 c_0 * * part cmcell1 f1 b0 * * * part cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cmcell2 f1 b0 * * * part cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 * * part cmcell3 f1 b0 * * part cmcell4 f1 b0 * / c= * * * part cmcell f0 f1 b0 * * * part cCOND c= f0 cNUMERAL c_0 * * part cmcell0 f1 b0 * * * part cCOND c= f0 cNUMERAL cBIT1 c_0 * * part cmcell1 f1 b0 * * * part cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cmcell2 f1 b0 * * * part cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 * * part cmcell3 f1 b0 * * part cmcell4 f1 b0 f2 * / c= * * * part cmcell f0 f1 b0 * * * part cCOND c= f0 cNUMERAL c_0 * * part cmcell0 f1 b0 * * * part cCOND c= f0 cNUMERAL cBIT1 c_0 * * part cmcell1 f1 b0 * * * part cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cmcell2 f1 b0 * * * part cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 * * part cmcell3 f1 b0 * * part cmcell4 f1 b0 f2
+ |- (((!i. (!V. (!ul. ((((mcell i) V) ul) = (((COND (i = (NUMERAL _0))) ((mcell0 V) ul)) (((COND (i = (NUMERAL (BIT1 _0)))) ((mcell1 V) ul)) (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) ((mcell2 V) ul)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) ((mcell3 V) ul)) ((mcell4 V) ul))))))))) ==> ((\i. (!V. (!ul. ((((mcell i) V) ul) = (((COND (i = (NUMERAL _0))) ((mcell0 V) ul)) (((COND (i = (NUMERAL (BIT1 _0)))) ((mcell1 V) ul)) (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) ((mcell2 V) ul)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) ((mcell3 V) ul)) ((mcell4 V) ul))))))))) i)) = ((\i. (!V. (!ul. ((((mcell i) V) ul) = (((COND (i = (NUMERAL _0))) ((mcell0 V) ul)) (((COND (i = (NUMERAL (BIT1 _0)))) ((mcell1 V) ul)) (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) ((mcell2 V) ul)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) ((mcell3 V) ul)) ((mcell4 V) ul))))))))) i))
T c= c==> ! ! ! c= * * * part cmcell b0 b1 b2 * * * part cCOND c= b0 cNUMERAL c_0 * * part cmcell0 b1 b2 * * * part cCOND c= b0 cNUMERAL cBIT1 c_0 * * part cmcell1 b1 b2 * * * part cCOND c= b0 cNUMERAL cBIT0 cBIT1 c_0 * * part cmcell2 b1 b2 * * * part cCOND c= b0 cNUMERAL cBIT1 cBIT1 c_0 * * part cmcell3 b1 b2 * * part cmcell4 b1 b2 * / ! ! c= * * * part cmcell b0 b1 b2 * * * part cCOND c= b0 cNUMERAL c_0 * * part cmcell0 b1 b2 * * * part cCOND c= b0 cNUMERAL cBIT1 c_0 * * part cmcell1 b1 b2 * * * part cCOND c= b0 cNUMERAL cBIT0 cBIT1 c_0 * * part cmcell2 b1 b2 * * * part cCOND c= b0 cNUMERAL cBIT1 cBIT1 c_0 * * part cmcell3 b1 b2 * * part cmcell4 b1 b2 f0 * / ! ! c= * * * part cmcell b0 b1 b2 * * * part cCOND c= b0 cNUMERAL c_0 * * part cmcell0 b1 b2 * * * part cCOND c= b0 cNUMERAL cBIT1 c_0 * * part cmcell1 b1 b2 * * * part cCOND c= b0 cNUMERAL cBIT0 cBIT1 c_0 * * part cmcell2 b1 b2 * * * part cCOND c= b0 cNUMERAL cBIT1 cBIT1 c_0 * * part cmcell3 b1 b2 * * part cmcell4 b1 b2 f0
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
+ |- (((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) = F)
T c= c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cF
+ |- (((!V. (!ul. ((((mcell i) V) ul) = (((COND (i = (NUMERAL _0))) ((mcell0 V) ul)) (((COND (i = (NUMERAL (BIT1 _0)))) ((mcell1 V) ul)) (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) ((mcell2 V) ul)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) ((mcell3 V) ul)) ((mcell4 V) ul)))))))) ==> ((\V. (!ul. ((((mcell i) V) ul) = (((COND (i = (NUMERAL _0))) ((mcell0 V) ul)) (((COND (i = (NUMERAL (BIT1 _0)))) ((mcell1 V) ul)) (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) ((mcell2 V) ul)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) ((mcell3 V) ul)) ((mcell4 V) ul)))))))) V)) = ((\V. (!ul. ((((mcell i) V) ul) = (((COND (i = (NUMERAL _0))) ((mcell0 V) ul)) (((COND (i = (NUMERAL (BIT1 _0)))) ((mcell1 V) ul)) (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) ((mcell2 V) ul)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) ((mcell3 V) ul)) ((mcell4 V) ul)))))))) V))
T c= c==> ! ! c= * * * part cmcell f0 b0 b1 * * * part cCOND c= f0 cNUMERAL c_0 * * part cmcell0 b0 b1 * * * part cCOND c= f0 cNUMERAL cBIT1 c_0 * * part cmcell1 b0 b1 * * * part cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cmcell2 b0 b1 * * * part cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 * * part cmcell3 b0 b1 * * part cmcell4 b0 b1 * / ! c= * * * part cmcell f0 b0 b1 * * * part cCOND c= f0 cNUMERAL c_0 * * part cmcell0 b0 b1 * * * part cCOND c= f0 cNUMERAL cBIT1 c_0 * * part cmcell1 b0 b1 * * * part cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cmcell2 b0 b1 * * * part cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 * * part cmcell3 b0 b1 * * part cmcell4 b0 b1 f1 * / ! c= * * * part cmcell f0 b0 b1 * * * part cCOND c= f0 cNUMERAL c_0 * * part cmcell0 b0 b1 * * * part cCOND c= f0 cNUMERAL cBIT1 c_0 * * part cmcell1 b0 b1 * * * part cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cmcell2 b0 b1 * * * part cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 * * part cmcell3 b0 b1 * * part cmcell4 b0 b1 f1
+ |- (((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 _0))) = F)
T c= c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cF
+ |- ((\V. (!ul. ((((mcell i) V) ul) = (((COND (i = (NUMERAL _0))) ((mcell0 V) ul)) (((COND (i = (NUMERAL (BIT1 _0)))) ((mcell1 V) ul)) (((COND (i = (NUMERAL (BIT0 (BIT1 _0))))) ((mcell2 V) ul)) (((COND (i = (NUMERAL (BIT1 (BIT1 _0))))) ((mcell3 V) ul)) ((mcell4 V) ul)))))))) V)
T * / ! c= * * * part cmcell f0 b0 b1 * * * part cCOND c= f0 cNUMERAL c_0 * * part cmcell0 b0 b1 * * * part cCOND c= f0 cNUMERAL cBIT1 c_0 * * part cmcell1 b0 b1 * * * part cCOND c= f0 cNUMERAL cBIT0 cBIT1 c_0 * * part cmcell2 b0 b1 * * * part cCOND c= f0 cNUMERAL cBIT1 cBIT1 c_0 * * part cmcell3 b0 b1 * * part cmcell4 b0 b1 f1
