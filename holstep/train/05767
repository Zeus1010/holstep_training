N Tame_list.quotient_list_rot
C |- (!L. (!N. (!N'. (((good_list L) /\ (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((quotient_list L) N)) ((quotient_list L) N'))))))
T c==> c/\ cgood_list f0 c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ call * part cfinal_list f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f1 f2 cALL2 / / c? / c= b1 crot b2 b0 cquotient_list f0 f1 cquotient_list f0 f2
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D list_INDUCT
A |- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
D MAP
A |- ((!f. (((MAP f) NIL) = NIL)) /\ (!f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))))
T c/\ ! c= cMAP b0 cNIL cNIL ! ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2
D ALL2
A |- (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))
T c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 f2 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f3 f4 cF c= cALL2 f0 cCONS f1 f2 cCONS f3 f4 c/\ * * f0 f1 f3 cALL2 f0 f2 f4
D Seq.map_rot
A |- (!n0. (!f. (!s. (((map f) ((rot n0) s)) = ((rot n0) ((map f) s))))))
T c= cmap f0 crot f1 f2 crot f1 cmap f0 f2
D Tame_list.lower_case
A |- ((MAP = map) /\ ((LENGTH = sizel) /\ ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))))))
T c/\ c= part cMAP part cmap c/\ c= part cLENGTH part csizel c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
D Tame_list.final_list_quotient
A |- (!L. (!N. (((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) ==> (((quotient_list L) N) = ((MAP (MAP FST)) N)))))
T c==> c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f1 call * part cfinal_list f0 f1 c= cquotient_list f0 f1 cMAP * part cMAP part cFST f1
D Tame_list.normal_list_rot
A |- (!L. (!N. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((normal_list L) N')))))
T c==> c/\ cgood_list f0 c/\ cnormal_list f0 f1 c/\ call * part cfinal_list f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f1 f2 cnormal_list f0 f2
D Tame_list.all_final_list_rot
A |- (!L. (!N. (!N'. ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) ==> ((all (final_list L)) N')))))
T c==> c/\ call * part cfinal_list f0 f1 c/\ cnormal_list f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f1 f2 call * part cfinal_list f0 f2
- |- ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))
T c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) = (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))))
T c= c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- ((!t. ((!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))) ==> (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) ((CONS h) t))))))) = T)
T c= ! c==> ! c==> cALL2 / / c? / c= b3 crot b4 b2 b1 b0 cALL2 / / c? / c= b3 crot b4 b2 cMAP * part cMAP part cFST b1 cMAP * part cMAP part cFST b0 ! c==> cALL2 / / c? / c= b3 crot b4 b2 b1 cCONS f0 b0 cALL2 / / c? / c= b3 crot b4 b2 cMAP * part cMAP part cFST b1 cMAP * part cMAP part cFST cCONS f0 b0 cT
+ |- ((\L. (!N'. ((?N. ((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))))) ==> ((normal_list L) N')))) L)
T * / ! c==> c? / c/\ cgood_list b0 c/\ cnormal_list b0 b2 c/\ call * part cfinal_list b0 b2 cALL2 / / c? / c= b4 crot b5 b3 b2 b1 cnormal_list b0 b1 f0
+ (!L. (!N. (!N'. ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) ==> ((all (final_list L)) N'))))) |- ((\N'. ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) ==> ((all (final_list L)) N'))) N')
T c==> ! ! ! c==> c/\ call * part cfinal_list b0 b1 c/\ cnormal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 call * part cfinal_list b0 b2 * / c==> c/\ call * part cfinal_list f0 f1 c/\ cnormal_list f0 f1 cALL2 / / c? / c= b2 crot b3 b1 f1 b0 call * part cfinal_list f0 b0 f2
+ (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))) |- (!h'. (!t'. (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) ((CONS h) t)))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h') t')) ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) ((CONS h') t'))) ((MAP (MAP FST)) ((CONS h) t)))))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 ! ! c==> c==> cALL2 / / c? / c= b3 crot b4 b2 b1 cCONS f1 f0 cALL2 / / c? / c= b3 crot b4 b2 cMAP * part cMAP part cFST b1 cMAP * part cMAP part cFST cCONS f1 f0 c==> cALL2 / / c? / c= b3 crot b4 b2 cCONS b0 b1 cCONS f1 f0 cALL2 / / c? / c= b3 crot b4 b2 cMAP * part cMAP part cFST cCONS b0 b1 cMAP * part cMAP part cFST cCONS f1 f0
+ (good_list L), ((all (final_list L)) N), ((normal_list L) N), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N') |- (((all (final_list L)) N') = (((normal_list L) N') /\ ((all (final_list L)) N')))
T c==> cgood_list f0 c==> call * part cfinal_list f0 f1 c==> cnormal_list f0 f1 c==> cALL2 / / c? / c= b1 crot b2 b0 f1 f2 c= call * part cfinal_list f0 f2 c/\ cnormal_list f0 f2 call * part cfinal_list f0 f2
- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) ((CONS h) t)))), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) ((CONS h) t))))
T c==> c==> cALL2 / / c? / c= b1 crot b2 b0 f0 cCONS f1 f2 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f0 cMAP * part cMAP part cFST cCONS f1 f2 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 cCONS f1 f2 c/\ cALL2 / / c? / c= b1 crot b2 b0 f0 cCONS f1 f2 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f0 cMAP * part cMAP part cFST cCONS f1 f2
+ |- ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) = ((\N. (((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) N))
T c= c/\ call * part cfinal_list f0 f1 c/\ cnormal_list f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f1 f2 * / c/\ call * part cfinal_list f0 b0 c/\ cnormal_list f0 b0 cALL2 / / c? / c= b2 crot b3 b1 b0 f2 f1
- |- ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))))
T c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ |- (!y. (((\x. ((\v. (((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) v))) x)) y) = ((\v. (((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) v))) y)))
T c= * / * / c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f1 call * part cfinal_list f0 f1 cALL2 / / c? / c= b3 crot b4 b2 cMAP * part cMAP part cFST f1 b1 b0 f2 * / c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f1 call * part cfinal_list f0 f1 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST f1 b0 f2
+ (!L. (!N. (!N'. ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) ==> ((all (final_list L)) N'))))) |- ((!N'. ((?N. (((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((all (final_list L)) N'))) = T)
T c==> ! ! ! c==> c/\ call * part cfinal_list b0 b1 c/\ cnormal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 call * part cfinal_list b0 b2 c= ! c==> c? / c/\ call * part cfinal_list f0 b1 c/\ cnormal_list f0 b1 cALL2 / / c? / c= b3 crot b4 b2 b1 b0 call * part cfinal_list f0 b0 cT
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (~ F), (~ (P b)), (P c), (b = c) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ cF cF
+ |- (((!f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) ==> ((\f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) f)) = ((\f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) f))
T c= c==> ! ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 * / ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 f0 * / ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 f0
+ ((\N. ((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))))) N) |- ((((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((!L. (!N. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((normal_list L) N'))))) ==> ((normal_list L) N'))) = ((!L. (!N. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((normal_list L) N'))))) ==> ((normal_list L) N')))
T c==> * / c/\ cgood_list f0 c/\ cnormal_list f0 b0 c/\ call * part cfinal_list f0 b0 cALL2 / / c? / c= b2 crot b3 b1 b0 f1 f2 c= c==> c/\ cgood_list f0 c/\ cnormal_list f0 f2 c/\ call * part cfinal_list f0 f2 cALL2 / / c? / c= b1 crot b2 b0 f2 f1 c==> ! ! ! c==> c/\ cgood_list b0 c/\ cnormal_list b0 b1 c/\ call * part cfinal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 cnormal_list b0 b2 cnormal_list f0 f1 c==> ! ! ! c==> c/\ cgood_list b0 c/\ cnormal_list b0 b1 c/\ call * part cfinal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 cnormal_list b0 b2 cnormal_list f0 f1
+ (((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) |- ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) /\ ((!L. (!N. (!N'. ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) ==> ((all (final_list L)) N'))))) ==> ((all (final_list L)) N')))
T c==> c/\ call * part cfinal_list f0 f1 c/\ cnormal_list f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f1 f2 c/\ c/\ call * part cfinal_list f0 f1 c/\ cnormal_list f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f1 f2 c==> ! ! ! c==> c/\ call * part cfinal_list b0 b1 c/\ cnormal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 call * part cfinal_list b0 b2 call * part cfinal_list f0 f2
+ (!L. (!N. (!N'. ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) ==> ((all (final_list L)) N'))))) |- (!N. (!N'. ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) ==> ((all (final_list L)) N'))))
T c==> ! ! ! c==> c/\ call * part cfinal_list b0 b1 c/\ cnormal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 call * part cfinal_list b0 b2 ! ! c==> c/\ call * part cfinal_list f0 b0 c/\ cnormal_list f0 b0 cALL2 / / c? / c= b3 crot b4 b2 b0 b1 call * part cfinal_list f0 b1
- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) ((CONS h) t)))) |- (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) ((CONS h) t)))) /\ ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) ((CONS h) t)))))
T c==> c==> cALL2 / / c? / c= b1 crot b2 b0 f0 cCONS f1 f2 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f0 cMAP * part cMAP part cFST cCONS f1 f2 c/\ c==> cALL2 / / c? / c= b1 crot b2 b0 f0 cCONS f1 f2 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f0 cMAP * part cMAP part cFST cCONS f1 f2 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 cCONS f1 f2 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f0 cMAP * part cMAP part cFST cCONS f1 f2
- |- ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))
T c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) NIL) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) NIL)) ((MAP (MAP FST)) NIL)))
T c==> cALL2 / / c? / c= b1 crot b2 b0 cNIL cNIL cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST cNIL cMAP * part cMAP part cFST cNIL
+ ((all (final_list L)) N), ((normal_list L) N), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N') |- (((?N. (((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((all (final_list L)) N')) = ((all (final_list L)) N'))
T c==> call * part cfinal_list f0 f1 c==> cnormal_list f0 f1 c==> cALL2 / / c? / c= b1 crot b2 b0 f1 f2 c= c==> c? / c/\ call * part cfinal_list f0 b0 c/\ cnormal_list f0 b0 cALL2 / / c? / c= b2 crot b3 b1 b0 f2 call * part cfinal_list f0 f2 call * part cfinal_list f0 f2
+ |- ((\c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))) c)
T * / c==> c==> f0 c= f1 b0 ! c==> c/\ f0 * b1 b0 * b1 f1 f2
- |- ((!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))) ==> (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0
+ (P c), (b = c) |- (P b)
T c==> * f0 f1 c==> c= f2 f1 * f0 f2
- |- ((!n. (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) = T)
T c= ! c? / c= crot b0 cmap part cFST f0 crot b1 cmap part cFST f0 cT
+ |- (!N. (((\N. ((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))))) N) ==> ((!L. (!N. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((normal_list L) N'))))) ==> ((normal_list L) N'))))
T c==> * / c/\ cgood_list f0 c/\ cnormal_list f0 b0 c/\ call * part cfinal_list f0 b0 cALL2 / / c? / c= b2 crot b3 b1 b0 f1 f2 c==> ! ! ! c==> c/\ cgood_list b0 c/\ cnormal_list b0 b1 c/\ call * part cfinal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 cnormal_list b0 b2 cnormal_list f0 f1
+ |- (((b = c) ==> (!P. ((P c) ==> (P b)))) = T)
T c= c==> c= f0 f1 ! c==> * b0 f1 * b0 f0 cT
+ (!L. (!N. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((normal_list L) N'))))), (?N. ((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))))) |- ((?N. ((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))))) /\ ((normal_list L) N'))
T c==> ! ! ! c==> c/\ cgood_list b0 c/\ cnormal_list b0 b1 c/\ call * part cfinal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 cnormal_list b0 b2 c==> c? / c/\ cgood_list f0 c/\ cnormal_list f0 b0 c/\ call * part cfinal_list f0 b0 cALL2 / / c? / c= b2 crot b3 b1 b0 f1 c/\ c? / c/\ cgood_list f0 c/\ cnormal_list f0 b0 c/\ call * part cfinal_list f0 b0 cALL2 / / c? / c= b2 crot b3 b1 b0 f1 cnormal_list f0 f1
+ (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') t) |- ((h = ((rot n) h')) ==> ((?n'. (((MAP FST) h) = ((rot n') ((MAP FST) h')))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) t))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 c==> cALL2 / / c? / c= b1 crot b2 b0 f1 f0 c==> c= f2 crot f3 f4 c/\ c? / c= cMAP part cFST f2 crot b0 cMAP part cFST f4 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f1 cMAP * part cMAP part cFST f0
- (!L. (!N. (!P. ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N)))))), (((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) |- ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) /\ (P ((quotient_list L) N)))
T c==> ! ! ! c==> c/\ c/\ cgood_list b0 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cnormal_list b0 b1 call * part cfinal_list b0 b1 * b2 cMAP * part cMAP part cFST b1 * b2 cquotient_list b0 b1 c==> c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f1 call * part cfinal_list f0 f1 * f2 cMAP * part cMAP part cFST f1 c/\ c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f1 call * part cfinal_list f0 f1 * f2 cMAP * part cMAP part cFST f1 * f2 cquotient_list f0 f1
- |- ((!h'. (!n. (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h')))))) = (!h'. (!n. ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F))))
T c= ! ! c? / c= crot b1 cmap part cFST b0 crot b2 cmap part cFST b0 ! ! c==> c~ c? / c= crot b1 cmap part cFST b0 crot b2 cmap part cFST b0 cF
+ |- ((\N. (((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) ==> (((quotient_list L) N) = ((MAP (MAP FST)) N)))) N)
T * / c==> c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 b0 call * part cfinal_list f0 b0 c= cquotient_list f0 b0 cMAP * part cMAP part cFST b0 f1
+ ((all (final_list L)) N), ((normal_list L) N), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N') |- ((all (final_list L)) N')
T c==> call * part cfinal_list f0 f1 c==> cnormal_list f0 f1 c==> cALL2 / / c? / c= b1 crot b2 b0 f1 f2 call * part cfinal_list f0 f2
- (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))) |- (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t))) = T)
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 c= c==> cALL2 / / c? / c= b1 crot b2 b0 f1 f0 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f1 cMAP * part cMAP part cFST f0 cT
+ |- (((!x. (((\N. (((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) x) ==> ((!L. (!N. (!N'. ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) ==> ((all (final_list L)) N'))))) ==> ((all (final_list L)) N')))) ==> ((?N. (((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((!L. (!N. (!N'. ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) ==> ((all (final_list L)) N'))))) ==> ((all (final_list L)) N')))) = ((?N. (((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((!L. (!N. (!N'. ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) ==> ((all (final_list L)) N'))))) ==> ((all (final_list L)) N'))))
T c= c==> ! c==> * / c/\ call * part cfinal_list f0 b1 c/\ cnormal_list f0 b1 cALL2 / / c? / c= b3 crot b4 b2 b1 f1 b0 c==> ! ! ! c==> c/\ call * part cfinal_list b1 b2 c/\ cnormal_list b1 b2 cALL2 / / c? / c= b5 crot b6 b4 b2 b3 call * part cfinal_list b1 b3 call * part cfinal_list f0 f1 c==> c? / c/\ call * part cfinal_list f0 b0 c/\ cnormal_list f0 b0 cALL2 / / c? / c= b2 crot b3 b1 b0 f1 c==> ! ! ! c==> c/\ call * part cfinal_list b0 b1 c/\ cnormal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 call * part cfinal_list b0 b2 call * part cfinal_list f0 f1 c==> c? / c/\ call * part cfinal_list f0 b0 c/\ cnormal_list f0 b0 cALL2 / / c? / c= b2 crot b3 b1 b0 f1 c==> ! ! ! c==> c/\ call * part cfinal_list b0 b1 c/\ cnormal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 call * part cfinal_list b0 b2 call * part cfinal_list f0 f1
+ ((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) |- (((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) /\ ((!L. (!N. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((normal_list L) N'))))) ==> ((normal_list L) N')))
T c==> c/\ cgood_list f0 c/\ cnormal_list f0 f1 c/\ call * part cfinal_list f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f1 f2 c/\ c/\ cgood_list f0 c/\ cnormal_list f0 f1 c/\ call * part cfinal_list f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f1 f2 c==> ! ! ! c==> c/\ cgood_list b0 c/\ cnormal_list b0 b1 c/\ call * part cfinal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 cnormal_list b0 b2 cnormal_list f0 f2
+ |- (MAP = map)
T c= part cMAP part cmap
- |- (LENGTH = sizel)
T c= part cLENGTH part csizel
+ (is_edge_nondegenerate (hypermap_of_list L)), (good_list L), ((all (final_list L)) N), ((normal_list L) N), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N') |- (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((quotient_list L) N)) ((quotient_list L) N'))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cgood_list f0 c==> call * part cfinal_list f0 f1 c==> cnormal_list f0 f1 c==> cALL2 / / c? / c= b1 crot b2 b0 f1 f2 cALL2 / / c? / c= b1 crot b2 b0 cquotient_list f0 f1 cquotient_list f0 f2
+ |- (((!f. (!s. (((map f) ((rot n0) s)) = ((rot n0) ((map f) s))))) ==> ((\f. (!s. (((map f) ((rot n0) s)) = ((rot n0) ((map f) s))))) f)) = ((\f. (!s. (((map f) ((rot n0) s)) = ((rot n0) ((map f) s))))) f))
T c= c==> ! ! c= cmap b0 crot f0 b1 crot f0 cmap b0 b1 * / ! c= cmap b0 crot f0 b1 crot f0 cmap b0 b1 f1 * / ! c= cmap b0 crot f0 b1 crot f0 cmap b0 b1 f1
- |- (((!n. ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F)) ==> ((\n. ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F)) n)) = ((\n. ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F)) n))
T c= c==> ! c==> c~ c? / c= crot b0 cmap part cFST f0 crot b1 cmap part cFST f0 cF * / c==> c~ c? / c= crot b0 cmap part cFST f0 crot b1 cmap part cFST f0 cF f1 * / c==> c~ c? / c= crot b0 cmap part cFST f0 crot b1 cmap part cFST f0 cF f1
- |- ((?n'. (P n')) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
+ (!L. (!N. (!P. ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N)))))) |- ((\N. (!P. ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N))))) N)
T c==> ! ! ! c==> c/\ c/\ cgood_list b0 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cnormal_list b0 b1 call * part cfinal_list b0 b1 * b2 cMAP * part cMAP part cFST b1 * b2 cquotient_list b0 b1 * / ! c==> c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 b0 call * part cfinal_list f0 b0 * b1 cMAP * part cMAP part cFST b0 * b1 cquotient_list f0 b0 f1
- (_10216478 = _10216480) |- ((_10216478 = _10216480) /\ ((~ (_10216479 = _10216481)) \/ (((map _10216478) _10216479) = ((map _10216480) _10216481))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cmap f0 f2 cmap f1 f3
+ (!L. (!N. (!P. ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N)))))) |- ((!L. (!N. (!P. ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N)))))) /\ (!P. (!L. (!N. ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N)))))))
T c==> ! ! ! c==> c/\ c/\ cgood_list b0 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cnormal_list b0 b1 call * part cfinal_list b0 b1 * b2 cMAP * part cMAP part cFST b1 * b2 cquotient_list b0 b1 c/\ ! ! ! c==> c/\ c/\ cgood_list b0 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cnormal_list b0 b1 call * part cfinal_list b0 b1 * b2 cMAP * part cMAP part cFST b1 * b2 cquotient_list b0 b1 ! ! ! c==> c/\ c/\ cgood_list b1 c/\ cis_edge_nondegenerate chypermap_of_list b1 c/\ cnormal_list b1 b2 call * part cfinal_list b1 b2 * b0 cMAP * part cMAP part cFST b2 * b0 cquotient_list b1 b2
+ (~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) |- (((!n'. (~ (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> ((\n'. (~ (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) _10216477)) = ((\n'. (~ (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) _10216477))
T c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 c= c==> ! c~ c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 * / c~ c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 f2 * / c~ c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 f2
+ (!L. (!N. (!N'. ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) ==> ((all (final_list L)) N'))))), (((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) |- ((all (final_list L)) N')
T c==> ! ! ! c==> c/\ call * part cfinal_list b0 b1 c/\ cnormal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 call * part cfinal_list b0 b2 c==> c/\ call * part cfinal_list f0 f1 c/\ cnormal_list f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f1 f2 call * part cfinal_list f0 f2
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)
T * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
+ (h = ((rot n) h')) |- ((?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h')))) = (?n'. (((MAP FST) h) = ((rot n') ((MAP FST) h')))))
T c==> c= f0 crot f1 f2 c= c? / c= crot f1 cmap part cFST f2 crot b0 cmap part cFST f2 c? / c= cMAP part cFST f0 crot b0 cMAP part cFST f2
+ ((\n. (h = ((rot n) h'))) n) |- (h = ((rot n) h'))
T c==> * / c= f0 crot b0 f1 f2 c= f0 crot f2 f1
+ (~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) |- ((((rot n) ((map FST) h')) = ((rot _10216477) ((map FST) h'))) ==> F)
T c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 c==> c= crot f0 cmap part cFST f1 crot f2 cmap part cFST f1 cF
- |- ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))
T c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0
+ ((all (final_list L)) N), ((normal_list L) N), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N') |- (((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))
T c==> call * part cfinal_list f0 f1 c==> cnormal_list f0 f1 c==> cALL2 / / c? / c= b1 crot b2 b0 f1 f2 c/\ call * part cfinal_list f0 f1 c/\ cnormal_list f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f1 f2
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- (((((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F) ==> ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F)) ==> (((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F) ==> ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F))) = (((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F) ==> ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F)))
T c= c==> c==> c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF
- |- ((((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F) ==> ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F)) = ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F))
T c= c==> c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF
+ |- ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N') /\ ((all (final_list L)) N')))) /\ (((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) N')))) = (((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N') /\ ((all (final_list L)) N')))) /\ ((\x. ((\v. (((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) v))) x)) ((MAP (MAP FST)) N'))))
T c= c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f1 call * part cfinal_list f0 f1 c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f2 call * part cfinal_list f0 f2 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f2 cMAP * part cMAP part cFST f1 c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f1 call * part cfinal_list f0 f1 * / * / c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f2 call * part cfinal_list f0 f2 cALL2 / / c? / c= b3 crot b4 b2 cMAP * part cMAP part cFST f2 b1 b0 cMAP * part cMAP part cFST f1
+ (!L. (!N. (!P. ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N)))))) |- ((!L. (!N. ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N))))) = T)
T c==> ! ! ! c==> c/\ c/\ cgood_list b0 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cnormal_list b0 b1 call * part cfinal_list b0 b1 * b2 cMAP * part cMAP part cFST b1 * b2 cquotient_list b0 b1 c= ! ! c==> c/\ c/\ cgood_list b0 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cnormal_list b0 b1 call * part cfinal_list b0 b1 * f0 cMAP * part cMAP part cFST b1 * f0 cquotient_list b0 b1 cT
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (good_list L), ((all (final_list L)) N), ((normal_list L) N), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N') |- (?N. ((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))))
T c==> cgood_list f0 c==> call * part cfinal_list f0 f1 c==> cnormal_list f0 f1 c==> cALL2 / / c? / c= b1 crot b2 b0 f1 f2 c? / c/\ cgood_list f0 c/\ cnormal_list f0 b0 c/\ call * part cfinal_list f0 b0 cALL2 / / c? / c= b2 crot b3 b1 b0 f2
+ (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))) |- (!t'. (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) ((CONS h) t)))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h') t')) ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) ((CONS h') t'))) ((MAP (MAP FST)) ((CONS h) t))))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 ! c==> c==> cALL2 / / c? / c= b2 crot b3 b1 b0 cCONS f1 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST cCONS f1 f0 c==> cALL2 / / c? / c= b2 crot b3 b1 cCONS f2 b0 cCONS f1 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST cCONS f2 b0 cMAP * part cMAP part cFST cCONS f1 f0
+ (~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) |- (~ (((rot n) ((map FST) h')) = ((rot _10216477) ((map FST) h'))))
T c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 c~ c= crot f0 cmap part cFST f1 crot f2 cmap part cFST f1
+ |- ((((\N. ((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))))) N) ==> ((!L. (!N. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((normal_list L) N'))))) ==> ((normal_list L) N'))) = T)
T c= c==> * / c/\ cgood_list f0 c/\ cnormal_list f0 b0 c/\ call * part cfinal_list f0 b0 cALL2 / / c? / c= b2 crot b3 b1 b0 f1 f2 c==> ! ! ! c==> c/\ cgood_list b0 c/\ cnormal_list b0 b1 c/\ call * part cfinal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 cnormal_list b0 b2 cnormal_list f0 f1 cT
+ |- ((((?n. (h = ((rot n) h'))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') t)) ==> ((?n. (((MAP FST) h) = ((rot n) ((MAP FST) h')))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) t)))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h') t')) ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) ((CONS h') t'))) ((MAP (MAP FST)) ((CONS h) t)))))
T c= c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c/\ c? / c= cMAP part cFST f0 crot b0 cMAP part cFST f1 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f2 cMAP * part cMAP part cFST f3 c==> cALL2 / / c? / c= b1 crot b2 b0 cCONS f1 f2 cCONS f0 f3 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST cCONS f1 f2 cMAP * part cMAP part cFST cCONS f0 f3
+ |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) NIL)) ((MAP (MAP FST)) ((CONS h) t))))
T c==> cALL2 / / c? / c= b1 crot b2 b0 cNIL cCONS f0 f1 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST cNIL cMAP * part cMAP part cFST cCONS f0 f1
+ |- ((\N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N') ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) N')))) N)
T * / c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 f1
- (b = c) |- ((P c) = (P c))
T c==> c= f0 f1 c= * f2 f1 * f2 f1
+ |- (((\x. ((\v. (((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) v))) x)) ((quotient_list L) N')) = ((\v. (((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) v))) ((quotient_list L) N')))
T c= * / * / c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f1 call * part cfinal_list f0 f1 cALL2 / / c? / c= b3 crot b4 b2 cMAP * part cMAP part cFST f1 b1 b0 cquotient_list f0 f2 * / c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f1 call * part cfinal_list f0 f1 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST f1 b0 cquotient_list f0 f2
+ |- ((\N'. ((?N. (((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((all (final_list L)) N'))) N')
T * / c==> c? / c/\ call * part cfinal_list f0 b1 c/\ cnormal_list f0 b1 cALL2 / / c? / c= b3 crot b4 b2 b1 b0 call * part cfinal_list f0 b0 f1
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') t) |- (T = (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') t))
T c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f1 c= cT cALL2 / / c? / c= b1 crot b2 b0 f0 f1
+ |- (((!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) NIL) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) NIL)))) /\ (!h. (!t. ((!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))) ==> (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) ((CONS h) t))))))))) ==> (!N'. (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N') ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) N'))))))
T c==> c/\ ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 cNIL cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST cNIL ! ! c==> ! c==> cALL2 / / c? / c= b4 crot b5 b3 b2 b1 cALL2 / / c? / c= b4 crot b5 b3 cMAP * part cMAP part cFST b2 cMAP * part cMAP part cFST b1 ! c==> cALL2 / / c? / c= b4 crot b5 b3 b2 cCONS b0 b1 cALL2 / / c? / c= b4 crot b5 b3 cMAP * part cMAP part cFST b2 cMAP * part cMAP part cFST cCONS b0 b1 ! ! c==> cALL2 / / c? / c= b3 crot b4 b2 b1 b0 cALL2 / / c? / c= b3 crot b4 b2 cMAP * part cMAP part cFST b1 cMAP * part cMAP part cFST b0
- ((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) |- (((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (((quotient_list L) N) = ((MAP (MAP FST)) N)))
T c==> c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f1 call * part cfinal_list f0 f1 c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f1 call * part cfinal_list f0 f1 c= cquotient_list f0 f1 cMAP * part cMAP part cFST f1
+ |- (((!N'. ((?N. (((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((all (final_list L)) N'))) ==> ((\N'. ((?N. (((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((all (final_list L)) N'))) N')) = ((\N'. ((?N. (((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((all (final_list L)) N'))) N'))
T c= c==> ! c==> c? / c/\ call * part cfinal_list f0 b1 c/\ cnormal_list f0 b1 cALL2 / / c? / c= b3 crot b4 b2 b1 b0 call * part cfinal_list f0 b0 * / c==> c? / c/\ call * part cfinal_list f0 b1 c/\ cnormal_list f0 b1 cALL2 / / c? / c= b3 crot b4 b2 b1 b0 call * part cfinal_list f0 b0 f1 * / c==> c? / c/\ call * part cfinal_list f0 b1 c/\ cnormal_list f0 b1 cALL2 / / c? / c= b3 crot b4 b2 b1 b0 call * part cfinal_list f0 b0 f1
+ (h = ((rot n) h')) |- ((\n'. (((MAP FST) h) = ((rot n') ((MAP FST) h')))) = (\n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h')))))
T c==> c= f0 crot f1 f2 c= / c= cMAP part cFST f0 crot b0 cMAP part cFST f2 / c= crot f1 cmap part cFST f2 crot b0 cmap part cFST f2
+ (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))) |- (((((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) NIL)) ((MAP (MAP FST)) ((CONS h) t)))) /\ (!h'. (!t'. (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) ((CONS h) t)))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h') t')) ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) ((CONS h') t'))) ((MAP (MAP FST)) ((CONS h) t)))))))) ==> (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) ((CONS h) t)))))) = (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) ((CONS h) t))))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 c= c==> c/\ c==> cALL2 / / c? / c= b1 crot b2 b0 cNIL cCONS f1 f0 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST cNIL cMAP * part cMAP part cFST cCONS f1 f0 ! ! c==> c==> cALL2 / / c? / c= b3 crot b4 b2 b1 cCONS f1 f0 cALL2 / / c? / c= b3 crot b4 b2 cMAP * part cMAP part cFST b1 cMAP * part cMAP part cFST cCONS f1 f0 c==> cALL2 / / c? / c= b3 crot b4 b2 cCONS b0 b1 cCONS f1 f0 cALL2 / / c? / c= b3 crot b4 b2 cMAP * part cMAP part cFST cCONS b0 b1 cMAP * part cMAP part cFST cCONS f1 f0 ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 cCONS f1 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST cCONS f1 f0 ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 cCONS f1 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST cCONS f1 f0
+ |- ((!t. (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t) NIL) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t)) ((MAP (MAP FST)) NIL))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h) t)) NIL) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) ((CONS h) t))) ((MAP (MAP FST)) NIL))))) = T)
T c= ! c==> c==> cALL2 / / c? / c= b2 crot b3 b1 b0 cNIL cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST cNIL c==> cALL2 / / c? / c= b2 crot b3 b1 cCONS f0 b0 cNIL cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST cCONS f0 b0 cMAP * part cMAP part cFST cNIL cT
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F), (((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F) ==> ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F)) |- (((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F) /\ ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F))
T c==> c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c==> c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c/\ c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF
- |- ((?n'. t) = t)
T c= c? / f0 f0
+ |- ((\L. (!N'. ((?N. (((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((all (final_list L)) N')))) L)
T * / ! c==> c? / c/\ call * part cfinal_list b0 b2 c/\ cnormal_list b0 b2 cALL2 / / c? / c= b4 crot b5 b3 b2 b1 call * part cfinal_list b0 b1 f0
+ (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h') t')) ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) ((CONS h') t'))) ((MAP (MAP FST)) ((CONS h) t))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 c==> cALL2 / / c? / c= b1 crot b2 b0 cCONS f1 f2 cCONS f3 f0 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST cCONS f1 f2 cMAP * part cMAP part cFST cCONS f3 f0
+ (!L. (!N. (!N'. ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) ==> ((all (final_list L)) N'))))) |- ((?N. (((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((all (final_list L)) N'))
T c==> ! ! ! c==> c/\ call * part cfinal_list b0 b1 c/\ cnormal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 call * part cfinal_list b0 b2 c==> c? / c/\ call * part cfinal_list f0 b0 c/\ cnormal_list f0 b0 cALL2 / / c? / c= b2 crot b3 b1 b0 f1 call * part cfinal_list f0 f1
- |- (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) ((CONS h) t)))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) ((CONS h) t)))))
T c==> c==> cALL2 / / c? / c= b1 crot b2 b0 f0 cCONS f1 f2 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f0 cMAP * part cMAP part cFST cCONS f1 f2 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 cCONS f1 f2 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f0 cMAP * part cMAP part cFST cCONS f1 f2
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))) = (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c= c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((~ (_10216478 = _10216480)) \/ ((~ (_10216479 = _10216481)) \/ (((map _10216478) _10216479) = ((map _10216480) _10216481))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cmap f0 f2 cmap f1 f3
+ (is_edge_nondegenerate (hypermap_of_list L)), (good_list L), ((all (final_list L)) N), ((normal_list L) N), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N') |- (((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N') /\ ((all (final_list L)) N')))) /\ (((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) N'))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cgood_list f0 c==> call * part cfinal_list f0 f1 c==> cnormal_list f0 f1 c==> cALL2 / / c? / c= b1 crot b2 b0 f1 f2 c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f2 call * part cfinal_list f0 f2 c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f1 call * part cfinal_list f0 f1 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f1 cMAP * part cMAP part cFST f2
+ |- (((!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t))))) ==> ((\h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t))))) h)) = ((\h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t))))) h))
T c= c==> ! ! c= cMAP f0 cCONS b0 b1 cCONS * f0 b0 cMAP f0 b1 * / ! c= cMAP f0 cCONS b0 b1 cCONS * f0 b0 cMAP f0 b1 f1 * / ! c= cMAP f0 cCONS b0 b1 cCONS * f0 b0 cMAP f0 b1 f1
+ (!L. (!N. (!P. ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N)))))) |- ((\L. (!N. (!P. ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N)))))) L)
T c==> ! ! ! c==> c/\ c/\ cgood_list b0 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cnormal_list b0 b1 call * part cfinal_list b0 b1 * b2 cMAP * part cMAP part cFST b1 * b2 cquotient_list b0 b1 * / ! ! c==> c/\ c/\ cgood_list b0 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cnormal_list b0 b1 call * part cfinal_list b0 b1 * b2 cMAP * part cMAP part cFST b1 * b2 cquotient_list b0 b1 f0
+ (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))), (?n. (h = ((rot n) h'))), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') t) |- ((?n'. (((MAP FST) h) = ((rot n') ((MAP FST) h')))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) t)))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 c==> c? / c= f1 crot b0 f2 c==> cALL2 / / c? / c= b1 crot b2 b0 f3 f0 c/\ c? / c= cMAP part cFST f1 crot b0 cMAP part cFST f2 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f3 cMAP * part cMAP part cFST f0
+ ((all (final_list L)) N), ((normal_list L) N), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N') |- (T = (((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))))
T c==> call * part cfinal_list f0 f1 c==> cnormal_list f0 f1 c==> cALL2 / / c? / c= b1 crot b2 b0 f1 f2 c= cT c/\ call * part cfinal_list f0 f1 c/\ cnormal_list f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f1 f2
+ |- (!h. (!t. (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t) NIL) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t)) ((MAP (MAP FST)) NIL))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h) t)) NIL) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) ((CONS h) t))) ((MAP (MAP FST)) NIL))))))
T c==> c==> cALL2 / / c? / c= b1 crot b2 b0 f0 cNIL cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f0 cMAP * part cMAP part cFST cNIL c==> cALL2 / / c? / c= b1 crot b2 b0 cCONS f1 f0 cNIL cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST cCONS f1 f0 cMAP * part cMAP part cFST cNIL
+ ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
+ |- ((?N. ((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))))) ==> ((normal_list L) N'))
T c==> c? / c/\ cgood_list f0 c/\ cnormal_list f0 b0 c/\ call * part cfinal_list f0 b0 cALL2 / / c? / c= b2 crot b3 b1 b0 f1 cnormal_list f0 f1
+ ((\N. ((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))))) N) |- ((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))))
T c==> * / c/\ cgood_list f0 c/\ cnormal_list f0 b0 c/\ call * part cfinal_list f0 b0 cALL2 / / c? / c= b2 crot b3 b1 b0 f1 f2 c/\ cgood_list f0 c/\ cnormal_list f0 f2 c/\ call * part cfinal_list f0 f2 cALL2 / / c? / c= b1 crot b2 b0 f2 f1
+ |- (!b. (!c. ((b = c) ==> (!P. ((P c) ==> (P b))))))
T c==> c= f0 f1 ! c==> * b0 f1 * b0 f0
+ (!L. (!N. (!N'. ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) ==> ((all (final_list L)) N'))))) |- ((\N. (!N'. ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) ==> ((all (final_list L)) N')))) N)
T c==> ! ! ! c==> c/\ call * part cfinal_list b0 b1 c/\ cnormal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 call * part cfinal_list b0 b2 * / ! c==> c/\ call * part cfinal_list f0 b0 c/\ cnormal_list f0 b0 cALL2 / / c? / c= b3 crot b4 b2 b0 b1 call * part cfinal_list f0 b1 f1
+ (~ (P b)), (P c), (b = c) |- ((~ (P b)) /\ F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ * f0 f1 cF
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (is_edge_nondegenerate (hypermap_of_list L)), (good_list L), (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')), ((all (final_list L)) N), ((normal_list L) N) |- (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((quotient_list L) N)) ((quotient_list L) N'))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cgood_list f0 c==> c/\ call * part cfinal_list f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f1 f2 c==> call * part cfinal_list f0 f1 c==> cnormal_list f0 f1 cALL2 / / c? / c= b1 crot b2 b0 cquotient_list f0 f1 cquotient_list f0 f2
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))
T c==> c==> f0 c= f1 f2 ! c==> c/\ f0 * b0 f2 * b0 f1
+ |- (T = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h) t)) NIL) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) ((CONS h) t))) ((MAP (MAP FST)) NIL))))
T c= cT c==> cALL2 / / c? / c= b1 crot b2 b0 cCONS f0 f1 cNIL cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST cCONS f0 f1 cMAP * part cMAP part cFST cNIL
+ (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))) |- ((!t'. (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) ((CONS h) t)))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h') t')) ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) ((CONS h') t'))) ((MAP (MAP FST)) ((CONS h) t)))))) = T)
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 c= ! c==> c==> cALL2 / / c? / c= b2 crot b3 b1 b0 cCONS f1 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST cCONS f1 f0 c==> cALL2 / / c? / c= b2 crot b3 b1 cCONS f2 b0 cCONS f1 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST cCONS f2 b0 cMAP * part cMAP part cFST cCONS f1 f0 cT
+ (b = c) |- ((b = c) /\ (!P. ((P c) ==> (P b))))
T c==> c= f0 f1 c/\ c= f0 f1 ! c==> * b0 f1 * b0 f0
+ |- ((!L. (!N. (!N'. ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) ==> ((all (final_list L)) N'))))) ==> (!L. (!N'. ((?N. (((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((all (final_list L)) N')))))
T c==> ! ! ! c==> c/\ call * part cfinal_list b0 b1 c/\ cnormal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 call * part cfinal_list b0 b2 ! ! c==> c? / c/\ call * part cfinal_list b0 b2 c/\ cnormal_list b0 b2 cALL2 / / c? / c= b4 crot b5 b3 b2 b1 call * part cfinal_list b0 b1
+ (!L. (!N. (!N'. ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) ==> ((all (final_list L)) N'))))) |- ((\L. (!N. (!N'. ((((all (final_list L)) N) /\ (((normal_list L) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))) ==> ((all (final_list L)) N'))))) L)
T c==> ! ! ! c==> c/\ call * part cfinal_list b0 b1 c/\ cnormal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 call * part cfinal_list b0 b2 * / ! ! c==> c/\ call * part cfinal_list b0 b1 c/\ cnormal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 call * part cfinal_list b0 b2 f0
- |- ((~ (((rot n) ((map FST) h')) = ((rot n) ((map FST) h')))) ==> (((rot n) ((map FST) h')) = ((rot n) ((map FST) h'))))
T c==> c~ c= crot f0 cmap part cFST f1 crot f0 cmap part cFST f1 c= crot f0 cmap part cFST f1 crot f0 cmap part cFST f1
+ |- (((!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))) ==> (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) ((CONS h) t)))))) = T)
T c= c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 cCONS f1 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST cCONS f1 f0 cT
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((\h'. (!n. ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F))) h')
T * / ! c==> c~ c? / c= crot b1 cmap part cFST b0 crot b2 cmap part cFST b0 cF f0
+ |- (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))
T c/\ c= cALL2 f0 cCONS f1 f2 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f3 f4 cF c= cALL2 f0 cCONS f1 f2 cCONS f3 f4 c/\ * * f0 f1 f3 cALL2 f0 f2 f4
+ (good_list L), (((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) |- (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((quotient_list L) N)) ((quotient_list L) N'))
T c==> cgood_list f0 c==> c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ call * part cfinal_list f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f1 f2 cALL2 / / c? / c= b1 crot b2 b0 cquotient_list f0 f1 cquotient_list f0 f2
+ (P c), (b = c) |- ((~ (P b)) ==> F)
T c==> * f0 f1 c==> c= f2 f1 c==> c~ * f0 f2 cF
+ |- (((!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N') ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) N')))) ==> ((\N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N') ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) N')))) N)) = ((\N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N') ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) N')))) N))
T c= c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 * / c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 f1 * / c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 f1
+ (!L. (!N. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((normal_list L) N'))))), ((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) |- ((normal_list L) N')
T c==> ! ! ! c==> c/\ cgood_list b0 c/\ cnormal_list b0 b1 c/\ call * part cfinal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 cnormal_list b0 b2 c==> c/\ cgood_list f0 c/\ cnormal_list f0 f1 c/\ call * part cfinal_list f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f1 f2 cnormal_list f0 f2
+ (~ (P b)), (b = c) |- (~ (P c))
T c==> c~ * f0 f1 c==> c= f1 f2 c~ * f0 f2
+ (!L. (!N. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((normal_list L) N'))))) |- (((!N. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((normal_list L) N')))) ==> ((\N. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((normal_list L) N')))) N)) = ((\N. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((normal_list L) N')))) N))
T c==> ! ! ! c==> c/\ cgood_list b0 c/\ cnormal_list b0 b1 c/\ call * part cfinal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 cnormal_list b0 b2 c= c==> ! ! c==> c/\ cgood_list f0 c/\ cnormal_list f0 b0 c/\ call * part cfinal_list f0 b0 cALL2 / / c? / c= b3 crot b4 b2 b0 b1 cnormal_list f0 b1 * / ! c==> c/\ cgood_list f0 c/\ cnormal_list f0 b0 c/\ call * part cfinal_list f0 b0 cALL2 / / c? / c= b3 crot b4 b2 b0 b1 cnormal_list f0 b1 f1 * / ! c==> c/\ cgood_list f0 c/\ cnormal_list f0 b0 c/\ call * part cfinal_list f0 b0 cALL2 / / c? / c= b3 crot b4 b2 b0 b1 cnormal_list f0 b1 f1
+ |- ((!N. (!P. ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N))))) = T)
T c= ! ! c==> c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 b0 call * part cfinal_list f0 b0 * b1 cMAP * part cMAP part cFST b0 * b1 cquotient_list f0 b0 cT
+ (!L. (!N. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((normal_list L) N'))))) |- ((!N'. ((?N. ((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))))) ==> ((normal_list L) N'))) = T)
T c==> ! ! ! c==> c/\ cgood_list b0 c/\ cnormal_list b0 b1 c/\ call * part cfinal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 cnormal_list b0 b2 c= ! c==> c? / c/\ cgood_list f0 c/\ cnormal_list f0 b1 c/\ call * part cfinal_list f0 b1 cALL2 / / c? / c= b3 crot b4 b2 b1 b0 cnormal_list f0 b0 cT
+ |- ((!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))) = ((!b. (!c. ((T ==> (b = c)) ==> (!P. ((T /\ (P c)) ==> (P b)))))) /\ (!b. (!c. ((F ==> (b = c)) ==> (!P. ((F /\ (P c)) ==> (P b))))))))
T c= ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ ! ! c==> c==> cT c= b0 b1 ! c==> c/\ cT * b2 b1 * b2 b0 ! ! c==> c==> cF c= b0 b1 ! c==> c/\ cF * b2 b1 * b2 b0
+ (!L. (!N. (!P. ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N)))))) |- (((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N))) = T)
T c==> ! ! ! c==> c/\ c/\ cgood_list b0 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cnormal_list b0 b1 call * part cfinal_list b0 b1 * b2 cMAP * part cMAP part cFST b1 * b2 cquotient_list b0 b1 c= c==> c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f1 call * part cfinal_list f0 f1 * f2 cMAP * part cMAP part cFST f1 * f2 cquotient_list f0 f1 cT
+ (good_list L), ((all (final_list L)) N), ((normal_list L) N), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N') |- ((((normal_list L) N') /\ ((all (final_list L)) N')) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) N')))
T c==> cgood_list f0 c==> call * part cfinal_list f0 f1 c==> cnormal_list f0 f1 c==> cALL2 / / c? / c= b1 crot b2 b0 f1 f2 c/\ c/\ cnormal_list f0 f2 call * part cfinal_list f0 f2 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f1 cMAP * part cMAP part cFST f2
- |- ((?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h')))) = T)
T c= c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cT
+ (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))), (h = ((rot n) h')), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') t) |- ((h = ((rot n) h')) /\ ((?n'. (((MAP FST) h) = ((rot n') ((MAP FST) h')))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) t))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 c==> c= f1 crot f2 f3 c==> cALL2 / / c? / c= b1 crot b2 b0 f4 f0 c/\ c= f1 crot f2 f3 c/\ c? / c= cMAP part cFST f1 crot b0 cMAP part cFST f3 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f4 cMAP * part cMAP part cFST f0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (((~ (P b)) ==> F) = (P b))
T c= c==> c~ * f0 f1 cF * f0 f1
+ |- ((!L. (!N. (!P. ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N)))))) ==> (!P. (!L. (!N. ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N)))))))
T c==> ! ! ! c==> c/\ c/\ cgood_list b0 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cnormal_list b0 b1 call * part cfinal_list b0 b1 * b2 cMAP * part cMAP part cFST b1 * b2 cquotient_list b0 b1 ! ! ! c==> c/\ c/\ cgood_list b1 c/\ cis_edge_nondegenerate chypermap_of_list b1 c/\ cnormal_list b1 b2 call * part cfinal_list b1 b2 * b0 cMAP * part cMAP part cFST b2 * b0 cquotient_list b1 b2
+ (!L. (!N. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((normal_list L) N'))))) |- ((!L. (!N. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((normal_list L) N'))))) /\ (!L. (!N'. ((?N. ((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))))) ==> ((normal_list L) N')))))
T c==> ! ! ! c==> c/\ cgood_list b0 c/\ cnormal_list b0 b1 c/\ call * part cfinal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 cnormal_list b0 b2 c/\ ! ! ! c==> c/\ cgood_list b0 c/\ cnormal_list b0 b1 c/\ call * part cfinal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 cnormal_list b0 b2 ! ! c==> c? / c/\ cgood_list b0 c/\ cnormal_list b0 b2 c/\ call * part cfinal_list b0 b2 cALL2 / / c? / c= b4 crot b5 b3 b2 b1 cnormal_list b0 b1
- (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) |- (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) ((CONS h) t)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) ((CONS h) t))))
T c==> cALL2 / / c? / c= b1 crot b2 b0 f0 cCONS f1 f2 c==> c==> cALL2 / / c? / c= b1 crot b2 b0 f0 cCONS f1 f2 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f0 cMAP * part cMAP part cFST cCONS f1 f2 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f0 cMAP * part cMAP part cFST cCONS f1 f2
+ |- ((\P. (!L. (!N. ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N)))))) P)
T * / ! ! c==> c/\ c/\ cgood_list b1 c/\ cis_edge_nondegenerate chypermap_of_list b1 c/\ cnormal_list b1 b2 call * part cfinal_list b1 b2 * b0 cMAP * part cMAP part cFST b2 * b0 cquotient_list b1 b2 f0
+ (!L. (!N. (!N'. (((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N')))) ==> ((normal_list L) N'))))) |- ((?N. ((good_list L) /\ (((normal_list L) N) /\ (((all (final_list L)) N) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) N'))))) ==> ((normal_list L) N'))
T c==> ! ! ! c==> c/\ cgood_list b0 c/\ cnormal_list b0 b1 c/\ call * part cfinal_list b0 b1 cALL2 / / c? / c= b4 crot b5 b3 b1 b2 cnormal_list b0 b2 c==> c? / c/\ cgood_list f0 c/\ cnormal_list f0 b0 c/\ call * part cfinal_list f0 b0 cALL2 / / c? / c= b2 crot b3 b1 b0 f1 cnormal_list f0 f1
- (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))) |- ((!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))) /\ (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 c/\ ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0
- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) ((CONS h) t)))) |- (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) ((CONS h) t)))) = T)
T c==> c==> cALL2 / / c? / c= b1 crot b2 b0 f0 cCONS f1 f2 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f0 cMAP * part cMAP part cFST cCONS f1 f2 c= c==> cALL2 / / c? / c= b1 crot b2 b0 f0 cCONS f1 f2 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f0 cMAP * part cMAP part cFST cCONS f1 f2 cT
- |- ((_10216483 = _10216485) ==> ((~ (_10216482 = _10216484)) \/ (((rot _10216482) _10216483) = ((rot _10216484) _10216485))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= crot f2 f0 crot f3 f1
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((x = x) = T)
T c= c= f0 f0 cT
- (_10216478 = _10216480) |- ((_10216479 = _10216481) ==> (((map _10216478) _10216479) = ((map _10216480) _10216481)))
T c==> c= f0 f1 c==> c= f2 f3 c= cmap f0 f2 cmap f1 f3
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F) ==> ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F)) |- ((((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F) ==> ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F)) /\ (((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F) ==> ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F)))
T c==> c==> c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c/\ c==> c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- |- (((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F) ==> ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F))
T c==> c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF
- (~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) |- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) /\ F)
T c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F) ==> ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F)) ==> (((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F) ==> ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F)))
T c==> c==> c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF
- (~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) |- ((~ F) ==> F)
T c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 c==> c~ cF cF
- (((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) |- ((!L. (!N. (!P. ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N)))))) ==> (P ((quotient_list L) N)))
T c==> c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f1 call * part cfinal_list f0 f1 * f2 cMAP * part cMAP part cFST f1 c==> ! ! ! c==> c/\ c/\ cgood_list b0 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cnormal_list b0 b1 call * part cfinal_list b0 b1 * b2 cMAP * part cMAP part cFST b1 * b2 cquotient_list b0 b1 * f2 cquotient_list f0 f1
- |- (((!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) ==> ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)) = ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0))
T c= c==> ! c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
- (!L. (!N. (!P. ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N)))))), (((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) |- ((!L. (!N. (!P. ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (P ((MAP (MAP FST)) N))) ==> (P ((quotient_list L) N)))))) /\ (P ((quotient_list L) N)))
T c==> ! ! ! c==> c/\ c/\ cgood_list b0 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cnormal_list b0 b1 call * part cfinal_list b0 b1 * b2 cMAP * part cMAP part cFST b1 * b2 cquotient_list b0 b1 c==> c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f1 call * part cfinal_list f0 f1 * f2 cMAP * part cMAP part cFST f1 c/\ ! ! ! c==> c/\ c/\ cgood_list b0 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cnormal_list b0 b1 call * part cfinal_list b0 b1 * b2 cMAP * part cMAP part cFST b1 * b2 cquotient_list b0 b1 * f2 cquotient_list f0 f1
- (b = c) |- (F = F)
T c==> c= f0 f1 c= cF cF
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (_10216483 = _10216485) |- ((_10216482 = _10216484) ==> (((rot _10216482) _10216483) = ((rot _10216484) _10216485)))
T c==> c= f0 f1 c==> c= f2 f3 c= crot f2 f0 crot f3 f1
- |- ((((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((quotient_list L) N'))) = ((\x. ((\v. (((good_list L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((normal_list L) N) /\ ((all (final_list L)) N)))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) v))) x)) ((quotient_list L) N')))
T c= c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f1 call * part cfinal_list f0 f1 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f1 cquotient_list f0 f2 * / * / c/\ c/\ cgood_list f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cnormal_list f0 f1 call * part cfinal_list f0 f1 cALL2 / / c? / c= b3 crot b4 b2 cMAP * part cMAP part cFST f1 b1 b0 cquotient_list f0 f2
- |- ((~ (_10216483 = _10216485)) \/ ((~ (_10216482 = _10216484)) \/ (((rot _10216482) _10216483) = ((rot _10216484) _10216485))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= crot f2 f0 crot f3 f1
- |- (((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) ==> ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)) = ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s))
T c= c==> ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
- (~ (P c)), (P c) |- ((~ (P c)) /\ (P c))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ * f0 f1 * f0 f1
- (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) |- ((!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 c==> cALL2 / / c? / c= b1 crot b2 b0 f1 f0 c/\ ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f1 cMAP * part cMAP part cFST f0
- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))) = T)
T c= c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0 cT
- |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((LENGTH = sizel) /\ ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))))
T c/\ c= part cLENGTH part csizel c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (~ F), (~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 c/\ c~ cF cF
- |- (((!h'. (!n. ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F))) ==> ((\h'. (!n. ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F))) h')) = ((\h'. (!n. ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F))) h'))
T c= c==> ! ! c==> c~ c? / c= crot b1 cmap part cFST b0 crot b2 cmap part cFST b0 cF * / ! c==> c~ c? / c= crot b1 cmap part cFST b0 crot b2 cmap part cFST b0 cF f0 * / ! c==> c~ c? / c= crot b1 cmap part cFST b0 crot b2 cmap part cFST b0 cF f0
- (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) |- ((!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))
T c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f1 c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f1 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f1 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f0 cMAP * part cMAP part cFST f1
- |- ((\n. ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F)) n)
T * / c==> c~ c? / c= crot b0 cmap part cFST f0 crot b1 cmap part cFST f0 cF f1
- (_10216478 = _10216480), (_10216479 = _10216481) |- ((_10216479 = _10216481) /\ (((map _10216478) _10216479) = ((map _10216480) _10216481)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cmap f0 f2 cmap f1 f3
- ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F) |- ((((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F) ==> ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F)) ==> ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F))
T c==> c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c==> c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- (!N. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) N) t) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) N)) ((MAP (MAP FST)) t)))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 b0 f0 cALL2 / / c? / c= b2 crot b3 b1 cMAP * part cMAP part cFST b0 cMAP * part cMAP part cFST f0 c==> cALL2 / / c? / c= b1 crot b2 b0 f1 f0 c/\ cALL2 / / c? / c= b1 crot b2 b0 f1 f0 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f1 cMAP * part cMAP part cFST f0
- |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((quotient_list L) N)) ((quotient_list L) N')) = ((\x. ((\v. (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) v) ((quotient_list L) N'))) x)) ((quotient_list L) N)))
T c= cALL2 / / c? / c= b1 crot b2 b0 cquotient_list f0 f1 cquotient_list f0 f2 * / * / cALL2 / / c? / c= b3 crot b4 b2 b1 cquotient_list f0 f2 b0 cquotient_list f0 f1
- |- ((APPEND = cat) /\ (ALL = all))
T c/\ c= part cAPPEND part ccat c= part cALL part call
- |- (FILTER = filter)
T c= part cFILTER part cfilter
- (P c) |- ((~ (P c)) ==> (P c))
T c==> * f0 f1 c==> c~ * f0 f1 * f0 f1
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) = ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c= c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((\f2. (f f2)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (_10216483 = _10216485) |- ((_10216483 = _10216485) /\ ((~ (_10216482 = _10216484)) \/ (((rot _10216482) _10216483) = ((rot _10216484) _10216485))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= crot f2 f0 crot f3 f1
- ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F) |- (((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F) /\ ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F))
T c==> c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c/\ c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF
- (~ (P b)), (P c), (b = c) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c==> c~ cF cF
- (_10216482 = _10216484), (_10216483 = _10216485) |- ((_10216482 = _10216484) /\ (((rot _10216482) _10216483) = ((rot _10216484) _10216485)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= crot f0 f2 crot f1 f3
- ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F), (((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F) ==> ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F)) |- ((((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F) ==> ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F)) /\ ((~ (?n'. (((rot n) ((map FST) h')) = ((rot n') ((map FST) h'))))) ==> F))
T c==> c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c==> c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c/\ c==> c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF c==> c~ c? / c= crot f0 cmap part cFST f1 crot b0 cmap part cFST f1 cF
- |- ((_10216478 = _10216480) ==> ((~ (_10216479 = _10216481)) \/ (((map _10216478) _10216479) = ((map _10216480) _10216481))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cmap f0 f2 cmap f1 f3
- (~ (((rot n) ((map FST) h')) = ((rot n) ((map FST) h')))) |- ((~ (((rot n) ((map FST) h')) = ((rot n) ((map FST) h')))) /\ (((rot n) ((map FST) h')) = ((rot n) ((map FST) h'))))
T c==> c~ c= crot f0 cmap part cFST f1 crot f0 cmap part cFST f1 c/\ c~ c= crot f0 cmap part cFST f1 crot f0 cmap part cFST f1 c= crot f0 cmap part cFST f1 crot f0 cmap part cFST f1
- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) ((CONS h) t)))), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) |- (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t') ((CONS h) t)) ==> (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) ((CONS h) t)))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((MAP (MAP FST)) t')) ((MAP (MAP FST)) ((CONS h) t))))
T c==> c==> cALL2 / / c? / c= b1 crot b2 b0 f0 cCONS f1 f2 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f0 cMAP * part cMAP part cFST cCONS f1 f2 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 cCONS f1 f2 c/\ c==> cALL2 / / c? / c= b1 crot b2 b0 f0 cCONS f1 f2 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f0 cMAP * part cMAP part cFST cCONS f1 f2 cALL2 / / c? / c= b1 crot b2 b0 cMAP * part cMAP part cFST f0 cMAP * part cMAP part cFST cCONS f1 f2
- |- ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)
T * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
