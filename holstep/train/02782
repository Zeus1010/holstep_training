N Hypermap.face_degenerate_walkup_face_map
C |- (!H. (!x. (!y. (((x IN (dart H)) /\ (((face_map H) x) = x)) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y))))))
T c==> c/\ cIN f0 * part cdart f1 c= cface_map f1 f0 f0 c= cface_map cedge_walkup f1 f0 f2 cface_map f1 f2
D TRUTH
A |- T
T cT
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D Hypermap.hypermap_lemma
A |- (!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))))
T c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
D Hypermap.face_map_walkup
A |- (!H. (!x. (!y. ((((face_map ((edge_walkup H) x)) x) = x) /\ ((((face_map ((edge_walkup H) x)) ((inverse (face_map H)) x)) = ((face_map H) x)) /\ (((~ (y = x)) /\ (~ (y = ((inverse (face_map H)) x)))) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y))))))))
T c/\ c= cface_map cedge_walkup f0 f1 f1 f1 c/\ c= cface_map cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cface_map f0 f1 c==> c/\ c~ c= f2 f1 c~ c= f2 cinverse * part cface_map f0 f1 c= cface_map cedge_walkup f0 f1 f2 cface_map f0 f2
D Hypermap.fixed_point_lemma
A |- (!D. (!p. (((permutes p) D) ==> (!x. (((p x) = x) = (((inverse p) x) = x))))))
T c==> cpermutes f0 f1 ! c= c= * f0 b0 b0 c= cinverse f0 b0 b0
+ (~ (y = x)), (((face_map H) x) = x) |- ((~ (y = x)) /\ (((face_map ((edge_walkup H) x)) y) = ((face_map H) y)))
T c==> c~ c= f0 f1 c==> c= cface_map f2 f1 f1 c/\ c~ c= f0 f1 c= cface_map cedge_walkup f2 f1 f0 cface_map f2 f0
+ (y = x), (((face_map H) x) = x) |- (T = (((face_map ((edge_walkup H) x)) y) = ((face_map H) y)))
T c==> c= f0 f1 c==> c= cface_map f2 f1 f1 c= cT c= cface_map cedge_walkup f2 f1 f0 cface_map f2 f0
+ |- ((!x. (!y. (((x IN (dart H)) /\ (((face_map H) x) = x)) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y))))) = T)
T c= ! ! c==> c/\ cIN b0 * part cdart f0 c= cface_map f0 b0 b0 c= cface_map cedge_walkup f0 b0 b1 cface_map f0 b1 cT
+ |- (((((permutes (face_map H)) (dart H)) ==> (!x. ((((face_map H) x) = x) = (((inverse (face_map H)) x) = x)))) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y))) = (((face_map ((edge_walkup H) x)) y) = ((face_map H) y)))
T c= c==> c==> cpermutes * part cface_map f0 * part cdart f0 ! c= c= cface_map f0 b0 b0 c= cinverse * part cface_map f0 b0 b0 c= cface_map cedge_walkup f0 f1 f2 cface_map f0 f2 c= cface_map cedge_walkup f0 f1 f2 cface_map f0 f2
+ (y = x), (((face_map H) x) = x) |- ((y = x) /\ (((face_map ((edge_walkup H) x)) y) = ((face_map H) y)))
T c==> c= f0 f1 c==> c= cface_map f2 f1 f1 c/\ c= f0 f1 c= cface_map cedge_walkup f2 f1 f0 cface_map f2 f0
+ |- (((~ (y = x)) /\ (~ (y = ((inverse (face_map H)) x)))) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y)))
T c==> c/\ c~ c= f0 f1 c~ c= f0 cinverse * part cface_map f2 f1 c= cface_map cedge_walkup f2 f1 f0 cface_map f2 f0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (((face_map H) x) = x) |- ((y = x) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y)))
T c==> c= cface_map f0 f1 f1 c==> c= f2 f1 c= cface_map cedge_walkup f0 f1 f2 cface_map f0 f2
+ |- ((((x IN (dart H)) /\ (((face_map H) x) = x)) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y))) = T)
T c= c==> c/\ cIN f0 * part cdart f1 c= cface_map f1 f0 f0 c= cface_map cedge_walkup f1 f0 f2 cface_map f1 f2 cT
+ |- (((permutes (face_map H)) (dart H)) = T)
T c= cpermutes * part cface_map f0 * part cdart f0 cT
- |- ((permutes (node_map H)) (dart H))
T cpermutes * part cnode_map f0 * part cdart f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!x. t) = t)
T c= ! f0 f0
+ (~ (y = x)), (((inverse (face_map H)) x) = x) |- ((((~ (y = x)) /\ (~ (y = ((inverse (face_map H)) x)))) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y))) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y)))
T c==> c~ c= f0 f1 c==> c= cinverse * part cface_map f2 f1 f1 c==> c==> c/\ c~ c= f0 f1 c~ c= f0 cinverse * part cface_map f2 f1 c= cface_map cedge_walkup f2 f1 f0 cface_map f2 f0 c= cface_map cedge_walkup f2 f1 f0 cface_map f2 f0
+ |- (((!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) ==> ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) H)) = ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) H))
T c= c==> ! c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI f0 * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI f0
+ (~ (y = x)), (((face_map H) x) = x) |- (((face_map ((edge_walkup H) x)) y) = ((face_map H) y))
T c==> c~ c= f0 f1 c==> c= cface_map f2 f1 f1 c= cface_map cedge_walkup f2 f1 f0 cface_map f2 f0
- |- (((permutes (edge_map H)) (dart H)) = T)
T c= cpermutes * part cedge_map f0 * part cdart f0 cT
+ |- (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))
T c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
+ |- ((((face_map ((edge_walkup H) x)) ((inverse (face_map H)) x)) = ((face_map H) x)) /\ (((~ (y = x)) /\ (~ (y = ((inverse (face_map H)) x)))) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y))))
T c/\ c= cface_map cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cface_map f0 f1 c==> c/\ c~ c= f2 f1 c~ c= f2 cinverse * part cface_map f0 f1 c= cface_map cedge_walkup f0 f1 f2 cface_map f0 f2
- |- ((((~ (y = x)) /\ (~ (y = ((inverse (face_map H)) x)))) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y))) = T)
T c= c==> c/\ c~ c= f0 f1 c~ c= f0 cinverse * part cface_map f2 f1 c= cface_map cedge_walkup f2 f1 f0 cface_map f2 f0 cT
+ (~ (y = x)), (((face_map H) x) = x) |- ((!x. ((((face_map H) x) = x) = (((inverse (face_map H)) x) = x))) ==> (((face_map ((edge_walkup H) x)) y) = ((face_map H) y)))
T c==> c~ c= f0 f1 c==> c= cface_map f2 f1 f1 c==> ! c= c= cface_map f2 b0 b0 c= cinverse * part cface_map f2 b0 b0 c= cface_map cedge_walkup f2 f1 f0 cface_map f2 f0
+ |- ((\t. (t \/ (~ t))) (y = x))
T * / c\/ b0 c~ b0 c= f0 f1
- |- (FINITE (dart H))
T cFINITE * part cdart f0
- (~ (y = x)) |- (((~ (x = y)) ==> ((x = y) = F)) = ((x = y) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
- (x = y) |- (y = x)
T c==> c= f0 f1 c= f1 f0
- |- (((permutes (node_map H)) (dart H)) = T)
T c= cpermutes * part cnode_map f0 * part cdart f0 cT
- |- (((edge_map H) o ((node_map H) o (face_map H))) = I)
T c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
- |- ((FINITE (dart H)) = T)
T c= cFINITE * part cdart f0 cT
- |- ((permutes (edge_map H)) (dart H))
T cpermutes * part cedge_map f0 * part cdart f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (~ (y = x)) |- (~ (x = y))
T c==> c~ c= f0 f1 c~ c= f1 f0
- (~ (y = x)) |- ((x = y) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- |- (((face_map ((edge_walkup H) x)) ((inverse (face_map H)) x)) = ((face_map H) x))
T c= cface_map cedge_walkup f0 f1 cinverse * part cface_map f0 f1 cface_map f0 f1
- (x IN (dart H)) |- ((x IN (dart H)) = T)
T c==> cIN f0 * part cdart f1 c= cIN f0 * part cdart f1 cT
