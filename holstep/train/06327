N NADD_INV_0
C |- ((nadd_eq (nadd_inv (nadd_of_num (NUMERAL _0)))) (nadd_of_num (NUMERAL _0)))
T cnadd_eq cnadd_inv cnadd_of_num cNUMERAL c_0 cnadd_of_num cNUMERAL c_0
D TRUTH
A |- T
T cT
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D NADD_EQ_REFL
A |- (!x. ((nadd_eq x) x))
T cnadd_eq f0 f0
D nadd_inv
A |- (!x. ((nadd_inv x) = (((COND ((nadd_eq x) (nadd_of_num (NUMERAL _0)))) (nadd_of_num (NUMERAL _0))) (mk_nadd (nadd_rinv x)))))
T c= cnadd_inv f0 cCOND cnadd_eq f0 cnadd_of_num cNUMERAL c_0 cnadd_of_num cNUMERAL c_0 cmk_nadd * part cnadd_rinv f0
