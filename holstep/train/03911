N Oxlzlez.PERIODIC_REDUCE_MOD
C |- (!f. (!n. (!i. ((((NUMERAL (BIT1 _0)) <= n) /\ ((periodic f) n)) ==> (?j. ((j < n) /\ (((f i) = (f j)) /\ ((f (SUC i)) = (f (SUC j))))))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 cperiodic f1 f0 c? / c/\ c< b0 f0 c/\ c= * f1 f2 * f1 b0 c= * f1 cSUC f2 * f1 cSUC b0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D RIGHT_FORALL_OR_THM
A |- (!P. (!Q. ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
D RIGHT_OR_FORALL_THM
A |- (!P. (!Q. ((P \/ (!x. (Q x))) = (!x. (P \/ (Q x))))))
T c= c\/ f0 ! * f1 b0 ! c\/ f0 * f1 b0
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D DIVISION
A |- (!m. (!n. ((~ (n = (NUMERAL _0))) ==> ((m = (((m DIV n) * n) + (m MOD n))) /\ ((m MOD n) < n)))))
T c==> c~ c= f0 cNUMERAL c_0 c/\ c= f1 c+ c* cDIV f1 f0 f0 cMOD f1 f0 c< cMOD f1 f0 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_eq
A |- (!x. (!y. ((x = y) = ((real_of_int x) = (real_of_int y)))))
T c= c= f0 f1 c= creal_of_int f0 creal_of_int f1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D Hypermap.lemma_suc_mod
A |- (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n)))))
T c==> c~ c= f0 cNUMERAL c_0 c= cMOD cSUC cMOD f1 f0 f0 cMOD cSUC f1 f0
D Oxl_def.periodic_mod
A |- (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n)))))))
T c==> c/\ cperiodic f0 f1 c~ c= f1 cNUMERAL c_0 c= * f0 f2 * f0 cMOD f2 f1
- |- ((_7203038 = _7203040) ==> ((~ (_7203039 = _7203041)) \/ (((I _7203040) _7203041) \/ (~ ((I _7203038) _7203039)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
+ (((real_ge (real_of_int _7203028)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((periodic f) n) /\ ((real_of_int _7203028) = (real_of_num (NUMERAL _0)))))) |- ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7203028)) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ cperiodic f1 f2 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F) = F)
T c= c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF cF
- (_7203062 = _7203064), (_7203063 = _7203065) |- ((_7203063 = _7203065) /\ (((I _7203062) _7203063) = ((I _7203064) _7203065)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
- |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- ((NUMERAL (BIT1 _0)) <= n) |- (((NUMERAL (BIT1 _0)) <= n) = T)
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c<= cNUMERAL cBIT1 c_0 f0 cT
+ (~ (n = (NUMERAL _0))) |- ((((f i) = (f (i MOD n))) /\ ((f (SUC i)) = (f (SUC (i MOD n))))) = (((i MOD n) < n) /\ (((f i) = (f (i MOD n))) /\ ((f (SUC i)) = (f (SUC (i MOD n)))))))
T c==> c~ c= f0 cNUMERAL c_0 c= c/\ c= * f1 f2 * f1 cMOD f2 f0 c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c/\ c< cMOD f2 f0 f0 c/\ c= * f1 f2 * f1 cMOD f2 f0 c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0
+ (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (~ (n = ((I NUMERAL) _0))), ((periodic f) n) |- ((((I f) ((I SUC) i)) = ((I f) ((I ((I MOD) ((I SUC) i))) n))) /\ (((I f) ((I SUC) i)) = ((I f) ((I SUC) i))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> c~ c= f0 cI part cNUMERAL c_0 c==> cperiodic f1 f0 c/\ c= cI f1 cI part cSUC f2 cI f1 cI * * part cI part cMOD cI part cSUC f2 f0 c= cI f1 cI part cSUC f2 cI f1 cI part cSUC f2
+ ((NUMERAL (BIT1 _0)) <= n) |- (((NUMERAL (BIT1 _0)) <= n) /\ (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> (~ (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))))))))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c~ ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (f = f)) ==> (f = f))
T c==> c~ c= f0 f0 c= f0 f0
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) |- ((\n. ((n = ((I NUMERAL) _0)) \/ (((I ((I MOD) ((I SUC) ((I ((I MOD) _7203036)) n)))) n) = ((I ((I MOD) ((I SUC) _7203036))) n)))) _7203037)
T c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 * / c\/ c= b0 cI part cNUMERAL c_0 c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f0 b0 b0 cI * * part cI part cMOD cI part cSUC f0 b0 f1
+ (~ (n = (NUMERAL _0))) |- (((~ ((NUMERAL _0) = n)) ==> (((NUMERAL _0) = n) = F)) = (((NUMERAL _0) = n) = F))
T c==> c~ c= f0 cNUMERAL c_0 c= c==> c~ c= cNUMERAL c_0 f0 c= c= cNUMERAL c_0 f0 cF c= c= cNUMERAL c_0 f0 cF
+ (~ (n = (NUMERAL _0))), ((NUMERAL (BIT1 _0)) <= n), ((periodic f) n) |- (((f i) = (f (i MOD n))) /\ ((f (SUC i)) = (f (SUC (i MOD n)))))
T c==> c~ c= f0 cNUMERAL c_0 c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c/\ c= * f1 f2 * f1 cMOD f2 f0 c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ (n = ((I NUMERAL) _0))) |- ((~ (((I f) ((I ((I MOD) ((I SUC) i))) n)) = ((I f) ((I SUC) ((I ((I MOD) i)) n))))) = ((((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)) = ((I f) ((I ((I MOD) ((I SUC) i))) n))) /\ (~ (((I f) ((I ((I MOD) ((I SUC) i))) n)) = ((I f) ((I SUC) ((I ((I MOD) i)) n)))))))
T c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ c= f0 cI part cNUMERAL c_0 c= c~ c= cI f1 cI * * part cI part cMOD cI part cSUC f2 f0 cI f1 cI part cSUC cI * * part cI part cMOD f2 f0 c/\ c= cI f1 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f2 f0 f0 cI f1 cI * * part cI part cMOD cI part cSUC f2 f0 c~ c= cI f1 cI * * part cI part cMOD cI part cSUC f2 f0 cI f1 cI part cSUC cI * * part cI part cMOD f2 f0
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = (NUMERAL _0))), ((periodic f) n) |- ((~ F) ==> F)
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cNUMERAL c_0 c==> cperiodic f0 f2 c==> c~ cF cF
+ |- ((\m. ((((periodic f) n) /\ (~ ((NUMERAL _0) = n))) ==> ((f (m MOD n)) = (f m)))) m)
T * / c==> c/\ cperiodic f0 f1 c~ c= cNUMERAL c_0 f1 c= * f0 cMOD b0 f1 * f0 b0 f2
+ (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = (NUMERAL _0))), ((periodic f) n) |- ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) /\ (~ (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n)))))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cNUMERAL c_0 c==> cperiodic f0 f2 c/\ ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c~ ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1
- |- ((!n'. ((n = (NUMERAL _0)) \/ (((SUC (m MOD n')) MOD n') = ((SUC m) MOD n')))) = ((n = (NUMERAL _0)) \/ (!n. (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n)))))
T c= ! c\/ c= f0 cNUMERAL c_0 c= cMOD cSUC cMOD f1 b0 b0 cMOD cSUC f1 b0 c\/ c= f0 cNUMERAL c_0 ! c= cMOD cSUC cMOD f1 b0 b0 cMOD cSUC f1 b0
+ (~ (n = (NUMERAL _0))), ((NUMERAL (BIT1 _0)) <= n), ((periodic f) n) |- (((i MOD n) < n) /\ (((f i) = (f (i MOD n))) /\ ((f (SUC i)) = (f (SUC (i MOD n))))))
T c==> c~ c= f0 cNUMERAL c_0 c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c/\ c< cMOD f2 f0 f0 c/\ c= * f1 f2 * f1 cMOD f2 f0 c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0
+ ((NUMERAL (BIT1 _0)) <= n), ((periodic f) n) |- (?j. ((j < n) /\ (((f i) = (f j)) /\ ((f (SUC i)) = (f (SUC j))))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c? / c/\ c< b0 f0 c/\ c= * f1 f2 * f1 b0 c= * f1 cSUC f2 * f1 cSUC b0
+ ((f m) = (f (m MOD n))) |- ((f (m MOD n)) = (f m))
T c==> c= * f0 f1 * f0 cMOD f1 f2 c= * f0 cMOD f1 f2 * f0 f1
+ (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) |- (((!m. (!n. ((n = ((I NUMERAL) _0)) \/ (((I ((I MOD) ((I SUC) ((I ((I MOD) m)) n)))) n) = ((I ((I MOD) ((I SUC) m))) n))))) ==> ((\m. (!n. ((n = ((I NUMERAL) _0)) \/ (((I ((I MOD) ((I SUC) ((I ((I MOD) m)) n)))) n) = ((I ((I MOD) ((I SUC) m))) n))))) _7203036)) = ((\m. (!n. ((n = ((I NUMERAL) _0)) \/ (((I ((I MOD) ((I SUC) ((I ((I MOD) m)) n)))) n) = ((I ((I MOD) ((I SUC) m))) n))))) _7203036))
T c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c= c==> ! ! c\/ c= b1 cI part cNUMERAL c_0 c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD b0 b1 b1 cI * * part cI part cMOD cI part cSUC b0 b1 * / ! c\/ c= b1 cI part cNUMERAL c_0 c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD b0 b1 b1 cI * * part cI part cMOD cI part cSUC b0 b1 f0 * / ! c\/ c= b1 cI part cNUMERAL c_0 c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD b0 b1 b1 cI * * part cI part cMOD cI part cSUC b0 b1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (n = (NUMERAL _0))) ==> ((m = (((m DIV n) * n) + (m MOD n))) = T))
T c==> c~ c= f0 cNUMERAL c_0 c= c= f1 c+ c* cDIV f1 f0 f0 cMOD f1 f0 cT
- |- ((_7203062 = _7203064) ==> ((~ (_7203063 = _7203065)) \/ (((I _7203062) _7203063) = ((I _7203064) _7203065))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
- (_7203038 = _7203040) |- ((_7203038 = _7203040) /\ ((~ (_7203039 = _7203041)) \/ (((I _7203040) _7203041) \/ (~ ((I _7203038) _7203039)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ |- ((!n. (!i. ((((NUMERAL (BIT1 _0)) <= n) /\ ((periodic f) n)) ==> (?j. ((j < n) /\ (((f i) = (f j)) /\ ((f (SUC i)) = (f (SUC j))))))))) = T)
T c= ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 cperiodic f0 b0 c? / c/\ c< b2 b0 c/\ c= * f0 b1 * f0 b2 c= * f0 cSUC b1 * f0 cSUC b2 cT
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (T = (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> (~ (n = (NUMERAL _0))))))
T c= cT c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c~ c= f0 cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (~ (n = (NUMERAL _0))) |- (((i MOD n) < n) = T)
T c==> c~ c= f0 cNUMERAL c_0 c= c< cMOD f1 f0 f0 cT
- (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ (n = ((I NUMERAL) _0))) |- ((~ (((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n) = ((I ((I MOD) ((I SUC) i))) n))) ==> (((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n) = ((I ((I MOD) ((I SUC) i))) n)))
T c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ c= f0 cI part cNUMERAL c_0 c==> c~ c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f0 f0 cI * * part cI part cMOD cI part cSUC f1 f0 c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f0 f0 cI * * part cI part cMOD cI part cSUC f1 f0
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) |- ((\m. (!n. ((n = ((I NUMERAL) _0)) \/ (((I ((I MOD) ((I SUC) ((I ((I MOD) m)) n)))) n) = ((I ((I MOD) ((I SUC) m))) n))))) _7203036)
T c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 * / ! c\/ c= b1 cI part cNUMERAL c_0 c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD b0 b1 b1 cI * * part cI part cMOD cI part cSUC b0 b1 f0
+ |- (((!m. (!n. ((~ (n = (NUMERAL _0))) ==> ((m = (((m DIV n) * n) + (m MOD n))) /\ ((m MOD n) < n))))) ==> ((\m. (!n. ((~ (n = (NUMERAL _0))) ==> ((m = (((m DIV n) * n) + (m MOD n))) /\ ((m MOD n) < n))))) m)) = ((\m. (!n. ((~ (n = (NUMERAL _0))) ==> ((m = (((m DIV n) * n) + (m MOD n))) /\ ((m MOD n) < n))))) m))
T c= c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c/\ c= b0 c+ c* cDIV b0 b1 b1 cMOD b0 b1 c< cMOD b0 b1 b1 * / ! c==> c~ c= b1 cNUMERAL c_0 c/\ c= b0 c+ c* cDIV b0 b1 b1 cMOD b0 b1 c< cMOD b0 b1 b1 f0 * / ! c==> c~ c= b1 cNUMERAL c_0 c/\ c= b0 c+ c* cDIV b0 b1 b1 cMOD b0 b1 c< cMOD b0 b1 b1 f0
- (_7203038 = _7203040), (_7203039 = _7203041) |- (((((I _7203038) _7203039) = ((I _7203040) _7203041)) ==> (((I _7203040) _7203041) \/ (~ ((I _7203038) _7203039)))) = (((I _7203040) _7203041) \/ (~ ((I _7203038) _7203039))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cI f0 f2 cI f1 f3 c\/ cI f1 f3 c~ cI f0 f2 c\/ cI f1 f3 c~ cI f0 f2
+ |- (((x = y) /\ (~ (y = z))) ==> (~ (x = z)))
T c==> c/\ c= f0 f1 c~ c= f1 f2 c~ c= f0 f2
+ (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) |- ((((I ((I periodic) _7203030)) _7203031) /\ (~ (((I _7203030) _7203032) = ((I _7203030) ((I ((I MOD) _7203032)) _7203031))))) ==> (_7203031 = ((I NUMERAL) _0)))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> c/\ cI * * part cI part cperiodic f0 f1 c~ c= cI f0 f2 cI f0 cI * * part cI part cMOD f2 f1 c= f1 cI part cNUMERAL c_0
- |- ((!n'. (((~ ((periodic f) n')) \/ (n' = (NUMERAL _0))) \/ (!m. ((f m) = (f (m MOD n)))))) = ((!n. ((~ ((periodic f) n)) \/ (n = (NUMERAL _0)))) \/ (!m. ((f m) = (f (m MOD n))))))
T c= ! c\/ c\/ c~ cperiodic f0 b0 c= b0 cNUMERAL c_0 ! c= * f0 b1 * f0 cMOD b1 f1 c\/ ! c\/ c~ cperiodic f0 b0 c= b0 cNUMERAL c_0 ! c= * f0 b0 * f0 cMOD b0 f1
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- (((~ ((int_le (int_of_num (NUMERAL (BIT1 _0)))) (int_of_num n))) \/ ((~ ((periodic f) n)) \/ (~ ((int_of_num n) = (int_of_num (NUMERAL _0)))))) = (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> (~ (n = (NUMERAL _0))))))
T c= c\/ c~ cint_le cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f0 c\/ c~ cperiodic f1 f0 c~ c= cint_of_num f0 cint_of_num cNUMERAL c_0 c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c~ c= f0 cNUMERAL c_0
+ |- (((!f. (!n. (!m. ((((periodic f) n) /\ (~ ((NUMERAL _0) = n))) ==> ((f (m MOD n)) = (f m)))))) ==> ((\f. (!n. (!m. ((((periodic f) n) /\ (~ ((NUMERAL _0) = n))) ==> ((f (m MOD n)) = (f m)))))) f)) = ((\f. (!n. (!m. ((((periodic f) n) /\ (~ ((NUMERAL _0) = n))) ==> ((f (m MOD n)) = (f m)))))) f))
T c= c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= cNUMERAL c_0 b1 c= * b0 cMOD b2 b1 * b0 b2 * / ! ! c==> c/\ cperiodic b0 b1 c~ c= cNUMERAL c_0 b1 c= * b0 cMOD b2 b1 * b0 b2 f0 * / ! ! c==> c/\ cperiodic b0 b1 c~ c= cNUMERAL c_0 b1 c= * b0 cMOD b2 b1 * b0 b2 f0
- |- ((~ (((I f) ((I SUC) i)) = ((I f) ((I SUC) i)))) ==> (((I f) ((I SUC) i)) = ((I f) ((I SUC) i))))
T c==> c~ c= cI f0 cI part cSUC f1 cI f0 cI part cSUC f1 c= cI f0 cI part cSUC f1 cI f0 cI part cSUC f1
+ (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ (n = ((I NUMERAL) _0))) |- (((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)) = ((I f) ((I ((I MOD) ((I SUC) i))) n)))
T c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ c= f0 cI part cNUMERAL c_0 c= cI f1 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f2 f0 f0 cI f1 cI * * part cI part cMOD cI part cSUC f2 f0
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ (((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)) = ((I f) ((I ((I MOD) ((I SUC) i))) n)))), (~ (n = ((I NUMERAL) _0))) |- ((~ (((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)) = ((I f) ((I ((I MOD) ((I SUC) i))) n)))) /\ (((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)) = ((I f) ((I ((I MOD) ((I SUC) i))) n))))
T c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ c= cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2 cI f0 cI * * part cI part cMOD cI part cSUC f1 f2 c==> c~ c= f2 cI part cNUMERAL c_0 c/\ c~ c= cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2 cI f0 cI * * part cI part cMOD cI part cSUC f1 f2 c= cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2 cI f0 cI * * part cI part cMOD cI part cSUC f1 f2
+ |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = ((I NUMERAL) _0))), ((periodic f) n) |- (~ (((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)) = ((I f) ((I SUC) ((I ((I MOD) i)) n)))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cI part cNUMERAL c_0 c==> cperiodic f0 f2 c~ c= cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2
+ |- ((\n. (!m. ((((periodic f) n) /\ (~ ((NUMERAL _0) = n))) ==> ((f (m MOD n)) = (f m))))) n)
T * / ! c==> c/\ cperiodic f0 b0 c~ c= cNUMERAL c_0 b0 c= * f0 cMOD b1 b0 * f0 b1 f1
+ (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (~ (n = ((I NUMERAL) _0))), ((periodic f) n) |- (((I f) ((I ((I MOD) ((I SUC) i))) n)) = ((I f) ((I SUC) i)))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> c~ c= f0 cI part cNUMERAL c_0 c==> cperiodic f1 f0 c= cI f1 cI * * part cI part cMOD cI part cSUC f2 f0 cI f1 cI part cSUC f2
- |- ((!m. t) = t)
T c= ! f0 f0
- |- ((~ (_7203038 = _7203040)) \/ ((~ (_7203039 = _7203041)) \/ (((I _7203040) _7203041) \/ (~ ((I _7203038) _7203039)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
+ |- ((\m. (!n. ((~ (n = (NUMERAL _0))) ==> ((m = (((m DIV n) * n) + (m MOD n))) /\ ((m MOD n) < n))))) m)
T * / ! c==> c~ c= b1 cNUMERAL c_0 c/\ c= b0 c+ c* cDIV b0 b1 b1 cMOD b0 b1 c< cMOD b0 b1 b1 f0
+ |- (((!n. (!i. (!f. (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F)))))))))) ==> ((\n. (!i. (!f. (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F)))))))))) n)) = ((\n. (!i. (!f. (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F)))))))))) n))
T c= c==> ! ! ! c==> c<= cNUMERAL cBIT1 c_0 b0 c==> cperiodic b2 b0 c==> c~ c= b0 cNUMERAL c_0 c==> c~ c= * b2 cSUC b1 * b2 cSUC cMOD b1 b0 c==> ! ! ! c==> c/\ cperiodic b3 b3 c~ c= b3 cNUMERAL c_0 c= * b3 b3 * b3 cMOD b3 b3 c==> ! ! ! c==> c/\ cperiodic b3 b4 c~ c= b4 cNUMERAL c_0 c= * b3 b4 * b3 cMOD b4 b4 c==> ! ! c==> c~ c= b4 cNUMERAL c_0 c= cMOD cSUC cMOD b3 b4 b4 cMOD cSUC b3 b4 cF * / ! ! c==> c<= cNUMERAL cBIT1 c_0 b0 c==> cperiodic b2 b0 c==> c~ c= b0 cNUMERAL c_0 c==> c~ c= * b2 cSUC b1 * b2 cSUC cMOD b1 b0 c==> ! ! ! c==> c/\ cperiodic b3 b3 c~ c= b3 cNUMERAL c_0 c= * b3 b3 * b3 cMOD b3 b3 c==> ! ! ! c==> c/\ cperiodic b3 b4 c~ c= b4 cNUMERAL c_0 c= * b3 b4 * b3 cMOD b4 b4 c==> ! ! c==> c~ c= b4 cNUMERAL c_0 c= cMOD cSUC cMOD b3 b4 b4 cMOD cSUC b3 b4 cF f0 * / ! ! c==> c<= cNUMERAL cBIT1 c_0 b0 c==> cperiodic b2 b0 c==> c~ c= b0 cNUMERAL c_0 c==> c~ c= * b2 cSUC b1 * b2 cSUC cMOD b1 b0 c==> ! ! ! c==> c/\ cperiodic b3 b3 c~ c= b3 cNUMERAL c_0 c= * b3 b3 * b3 cMOD b3 b3 c==> ! ! ! c==> c/\ cperiodic b3 b4 c~ c= b4 cNUMERAL c_0 c= * b3 b4 * b3 cMOD b4 b4 c==> ! ! c==> c~ c= b4 cNUMERAL c_0 c= cMOD cSUC cMOD b3 b4 b4 cMOD cSUC b3 b4 cF f0
+ |- ((f x) = ((I f) x))
T c= * f0 f1 cI f0 f1
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))) = ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F)))
T c= c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF
- (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = ((I NUMERAL) _0))), (((I f) ((I ((I MOD) ((I SUC) i))) n)) = ((I f) ((I SUC) ((I ((I MOD) i)) n)))), ((periodic f) n) |- ((((I f) ((I ((I MOD) ((I SUC) i))) n)) = ((I f) ((I SUC) ((I ((I MOD) i)) n)))) /\ (~ (((I f) ((I ((I MOD) ((I SUC) i))) n)) = ((I f) ((I SUC) ((I ((I MOD) i)) n))))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cI part cNUMERAL c_0 c==> c= cI f0 cI * * part cI part cMOD cI part cSUC f1 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 c==> cperiodic f0 f2 c/\ c= cI f0 cI * * part cI part cMOD cI part cSUC f1 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 c~ c= cI f0 cI * * part cI part cMOD cI part cSUC f1 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2
- (~ ((f (SUC i)) = (f (SUC (i MOD n))))) |- ((((I f) ((I SUC) i)) = ((I f) ((I SUC) ((I ((I MOD) i)) n)))) ==> (~ (((I f) ((I SUC) i)) = ((I f) ((I SUC) ((I ((I MOD) i)) n))))))
T c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c= cI f0 cI part cSUC f1 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 c~ c= cI f0 cI part cSUC f1 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ (~ (n = (NUMERAL _0))), ((periodic f) n) |- (T = (((periodic f) n) /\ (~ ((NUMERAL _0) = n))))
T c==> c~ c= f0 cNUMERAL c_0 c==> cperiodic f1 f0 c= cT c/\ cperiodic f1 f0 c~ c= cNUMERAL c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (n = (NUMERAL _0))), ((periodic f) n) |- ((f (i MOD n)) = (f i))
T c==> c~ c= f0 cNUMERAL c_0 c==> cperiodic f1 f0 c= * f1 cMOD f2 f0 * f1 f2
+ (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = ((I NUMERAL) _0))), ((periodic f) n) |- ((((I f) ((I ((I MOD) ((I SUC) i))) n)) = ((I f) ((I SUC) i))) /\ (~ (((I f) ((I SUC) i)) = ((I f) ((I SUC) ((I ((I MOD) i)) n))))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cI part cNUMERAL c_0 c==> cperiodic f0 f2 c/\ c= cI f0 cI * * part cI part cMOD cI part cSUC f1 f2 cI f0 cI part cSUC f1 c~ c= cI f0 cI part cSUC f1 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2
+ |- ((((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n) = ((I ((I MOD) ((I SUC) i))) n)) = ((f = f) /\ (((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n) = ((I ((I MOD) ((I SUC) i))) n))))
T c= c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f0 f1 f1 cI * * part cI part cMOD cI part cSUC f0 f1 c/\ c= f2 f2 c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f0 f1 f1 cI * * part cI part cMOD cI part cSUC f0 f1
+ (~ (n = (NUMERAL _0))) |- (~ ((NUMERAL _0) = n))
T c==> c~ c= f0 cNUMERAL c_0 c~ c= cNUMERAL c_0 f0
+ (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ (n = ((I NUMERAL) _0))) |- ((f = f) /\ (((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n) = ((I ((I MOD) ((I SUC) i))) n)))
T c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ c= f0 cI part cNUMERAL c_0 c/\ c= f1 f1 c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f2 f0 f0 cI * * part cI part cMOD cI part cSUC f2 f0
- (~ (n = (NUMERAL _0))) |- (T = (~ (n = (NUMERAL _0))))
T c==> c~ c= f0 cNUMERAL c_0 c= cT c~ c= f0 cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (n = (NUMERAL _0))) |- ((m MOD n) < n)
T c==> c~ c= f0 cNUMERAL c_0 c< cMOD f1 f0 f0
- |- (T = (((~ (x = y)) \/ ((~ (x = z)) \/ (y = z))) = ((y = z) \/ ((~ (x = y)) \/ (~ (x = z))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f0 f2 c= f1 f2 c\/ c= f1 f2 c\/ c~ c= f0 f1 c~ c= f0 f2
+ (((NUMERAL (BIT1 _0)) <= n) /\ ((periodic f) n)), ((NUMERAL (BIT1 _0)) <= n) |- (?j. ((j < n) /\ (((f i) = (f j)) /\ ((f (SUC i)) = (f (SUC j))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 cperiodic f1 f0 c==> c<= cNUMERAL cBIT1 c_0 f0 c? / c/\ c< b0 f0 c/\ c= * f1 f2 * f1 b0 c= * f1 cSUC f2 * f1 cSUC b0
- |- ((((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> (~ (n = (NUMERAL _0))))) = T)
T c= c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c~ c= f0 cNUMERAL c_0 cT
+ (((real_ge (real_of_int _7203028)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((periodic f) n) /\ ((real_of_int _7203028) = (real_of_num (NUMERAL _0)))))) |- (((periodic f) n) /\ ((real_of_int _7203028) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ cperiodic f1 f2 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ cperiodic f1 f2 c= creal_of_int f0 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _7203028)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((periodic f) n) /\ ((real_of_int _7203028) = (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ cperiodic f1 f2 c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- (((int_le (int_of_num (NUMERAL _0))) _7203028) ==> ((~ ((int_le (int_of_num (NUMERAL (BIT1 _0)))) _7203028)) \/ ((~ ((periodic f) n)) \/ (~ (_7203028 = (int_of_num (NUMERAL _0)))))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c\/ c~ cint_le cint_of_num cNUMERAL cBIT1 c_0 f0 c\/ c~ cperiodic f1 f2 c~ c= f0 cint_of_num cNUMERAL c_0
+ (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) |- ((((I ((I periodic) _7203030)) _7203031) /\ (~ (_7203031 = ((I NUMERAL) _0)))) ==> (((I _7203030) _7203032) = ((I _7203030) ((I ((I MOD) _7203032)) _7203031))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> c/\ cI * * part cI part cperiodic f0 f1 c~ c= f1 cI part cNUMERAL c_0 c= cI f0 f2 cI f0 cI * * part cI part cMOD f2 f1
+ |- ((\n. (!i. (!f. (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F)))))))))) n)
T * / ! ! c==> c<= cNUMERAL cBIT1 c_0 b0 c==> cperiodic b2 b0 c==> c~ c= b0 cNUMERAL c_0 c==> c~ c= * b2 cSUC b1 * b2 cSUC cMOD b1 b0 c==> ! ! ! c==> c/\ cperiodic b3 b3 c~ c= b3 cNUMERAL c_0 c= * b3 b3 * b3 cMOD b3 b3 c==> ! ! ! c==> c/\ cperiodic b3 b4 c~ c= b4 cNUMERAL c_0 c= * b3 b4 * b3 cMOD b4 b4 c==> ! ! c==> c~ c= b4 cNUMERAL c_0 c= cMOD cSUC cMOD b3 b4 b4 cMOD cSUC b3 b4 cF f0
+ |- (((!f. (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F)))))))) ==> ((\f. (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F)))))))) f)) = ((\f. (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F)))))))) f))
T c= c==> ! c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic b0 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * b0 cSUC f1 * b0 cSUC cMOD f1 f0 c==> ! ! ! c==> c/\ cperiodic b1 b1 c~ c= b1 cNUMERAL c_0 c= * b1 b2 * b1 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b1 b2 c~ c= b2 cNUMERAL c_0 c= * b1 b3 * b1 cMOD b3 b2 c==> ! ! c==> c~ c= b2 cNUMERAL c_0 c= cMOD cSUC cMOD b1 b2 b2 cMOD cSUC b1 b2 cF * / c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic b0 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * b0 cSUC f1 * b0 cSUC cMOD f1 f0 c==> ! ! ! c==> c/\ cperiodic b1 b1 c~ c= b1 cNUMERAL c_0 c= * b1 b2 * b1 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b1 b2 c~ c= b2 cNUMERAL c_0 c= * b1 b3 * b1 cMOD b3 b2 c==> ! ! c==> c~ c= b2 cNUMERAL c_0 c= cMOD cSUC cMOD b1 b2 b2 cMOD cSUC b1 b2 cF f2 * / c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic b0 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * b0 cSUC f1 * b0 cSUC cMOD f1 f0 c==> ! ! ! c==> c/\ cperiodic b1 b1 c~ c= b1 cNUMERAL c_0 c= * b1 b2 * b1 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b1 b2 c~ c= b2 cNUMERAL c_0 c= * b1 b3 * b1 cMOD b3 b2 c==> ! ! c==> c~ c= b2 cNUMERAL c_0 c= cMOD cSUC cMOD b1 b2 b2 cMOD cSUC b1 b2 cF f2
- |- (T = (((~ ((I ((I periodic) _7203030)) _7203031)) \/ ((_7203031 = ((I NUMERAL) _0)) \/ (((I _7203030) _7203032) = ((I _7203030) ((I ((I MOD) _7203032)) _7203031))))) = ((_7203031 = ((I NUMERAL) _0)) \/ ((~ ((I ((I periodic) _7203030)) _7203031)) \/ (((I _7203030) _7203032) = ((I _7203030) ((I ((I MOD) _7203032)) _7203031)))))))
T c= cT c= c\/ c~ cI * * part cI part cperiodic f0 f1 c\/ c= f1 cI part cNUMERAL c_0 c= cI f0 f2 cI f0 cI * * part cI part cMOD f2 f1 c\/ c= f1 cI part cNUMERAL c_0 c\/ c~ cI * * part cI part cperiodic f0 f1 c= cI f0 f2 cI f0 cI * * part cI part cMOD f2 f1
+ ((NUMERAL (BIT1 _0)) <= n), ((periodic f) n) |- ((\j. ((j < n) /\ (((f i) = (f j)) /\ ((f (SUC i)) = (f (SUC j)))))) (i MOD n))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 * / c/\ c< b0 f0 c/\ c= * f1 f2 * f1 b0 c= * f1 cSUC f2 * f1 cSUC b0 cMOD f2 f0
+ (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = ((I NUMERAL) _0))), ((periodic f) n) |- ((((I f) ((I SUC) ((I ((I MOD) i)) n))) = ((I f) ((I SUC) ((I ((I MOD) i)) n)))) /\ (~ (((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)) = ((I f) ((I SUC) ((I ((I MOD) i)) n))))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cI part cNUMERAL c_0 c==> cperiodic f0 f2 c/\ c= cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 c~ c= cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) |- ((_7203037 = ((I NUMERAL) _0)) \/ (((I ((I MOD) ((I SUC) ((I ((I MOD) _7203036)) _7203037)))) _7203037) = ((I ((I MOD) ((I SUC) _7203036))) _7203037)))
T c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c\/ c= f0 cI part cNUMERAL c_0 c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f0 f0 cI * * part cI part cMOD cI part cSUC f1 f0
- (((periodic f) n) /\ (~ ((NUMERAL _0) = n))) |- ((((periodic f) n) /\ (~ ((NUMERAL _0) = n))) /\ ((f (m MOD n)) = (f m)))
T c==> c/\ cperiodic f0 f1 c~ c= cNUMERAL c_0 f1 c/\ c/\ cperiodic f0 f1 c~ c= cNUMERAL c_0 f1 c= * f0 cMOD f2 f1 * f0 f2
- (_7203062 = _7203064) |- ((_7203063 = _7203065) ==> (((I _7203062) _7203063) = ((I _7203064) _7203065)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
+ |- ((!n. (!i. (!f. (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> (~ (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))))))))))))) = (!n. (!i. (!f. (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F)))))))))))
T c= ! ! ! c==> c<= cNUMERAL cBIT1 c_0 b0 c==> cperiodic b2 b0 c==> c~ c= b0 cNUMERAL c_0 c==> c~ c= * b2 cSUC b1 * b2 cSUC cMOD b1 b0 c==> ! ! ! c==> c/\ cperiodic b3 b3 c~ c= b3 cNUMERAL c_0 c= * b3 b3 * b3 cMOD b3 b3 c==> ! ! ! c==> c/\ cperiodic b3 b4 c~ c= b4 cNUMERAL c_0 c= * b3 b4 * b3 cMOD b4 b4 c~ ! ! c==> c~ c= b4 cNUMERAL c_0 c= cMOD cSUC cMOD b3 b4 b4 cMOD cSUC b3 b4 ! ! ! c==> c<= cNUMERAL cBIT1 c_0 b0 c==> cperiodic b2 b0 c==> c~ c= b0 cNUMERAL c_0 c==> c~ c= * b2 cSUC b1 * b2 cSUC cMOD b1 b0 c==> ! ! ! c==> c/\ cperiodic b3 b3 c~ c= b3 cNUMERAL c_0 c= * b3 b3 * b3 cMOD b3 b3 c==> ! ! ! c==> c/\ cperiodic b3 b4 c~ c= b4 cNUMERAL c_0 c= * b3 b4 * b3 cMOD b4 b4 c==> ! ! c==> c~ c= b4 cNUMERAL c_0 c= cMOD cSUC cMOD b3 b4 b4 cMOD cSUC b3 b4 cF
+ (((real_ge (real_of_int _7203028)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((periodic f) n) /\ ((real_of_int _7203028) = (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ cperiodic f1 f2 c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((~ (((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)) = ((I f) ((I SUC) ((I ((I MOD) i)) n))))) = ((((I f) ((I SUC) ((I ((I MOD) i)) n))) = ((I f) ((I SUC) ((I ((I MOD) i)) n)))) /\ (~ (((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)) = ((I f) ((I SUC) ((I ((I MOD) i)) n)))))))
T c= c~ c= cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 c/\ c= cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 c~ c= cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = (NUMERAL _0))), ((periodic f) n) |- ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) /\ ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> (~ (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n)))))))))
T c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cNUMERAL c_0 c==> cperiodic f0 f2 c/\ c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c~ ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1
- |- ((!n. ((P n) \/ Q)) = ((!n. (P n)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = ((I NUMERAL) _0))), ((periodic f) n) |- (~ (((I f) ((I SUC) ((I ((I MOD) i)) n))) = ((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cI part cNUMERAL c_0 c==> cperiodic f0 f2 c~ c= cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2
+ |- ((!f. (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> (~ (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))))))))))) = T)
T c= ! c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic b0 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * b0 cSUC f1 * b0 cSUC cMOD f1 f0 c==> ! ! ! c==> c/\ cperiodic b1 b1 c~ c= b1 cNUMERAL c_0 c= * b1 b2 * b1 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b1 b2 c~ c= b2 cNUMERAL c_0 c= * b1 b3 * b1 cMOD b3 b2 c~ ! ! c==> c~ c= b2 cNUMERAL c_0 c= cMOD cSUC cMOD b1 b2 b2 cMOD cSUC b1 b2 cT
+ (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = ((I NUMERAL) _0))), ((periodic f) n) |- ((~ (n = ((I NUMERAL) _0))) /\ (n = ((I NUMERAL) _0)))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cI part cNUMERAL c_0 c==> cperiodic f0 f2 c/\ c~ c= f2 cI part cNUMERAL c_0 c= f2 cI part cNUMERAL c_0
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7203028)) /\ (((real_le (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _7203028)) /\ (((periodic f) n) /\ ((real_of_int _7203028) = (real_of_num (NUMERAL _0)))))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7203028)) /\ (((real_le (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _7203028)) /\ (((periodic f) n) /\ ((real_of_int _7203028) = (real_of_num (NUMERAL _0)))))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _7203028)) /\ (((real_le (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _7203028)) /\ (((periodic f) n) /\ ((real_of_int _7203028) = (real_of_num (NUMERAL _0))))))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ cperiodic f1 f2 c= creal_of_int f0 creal_of_num cNUMERAL c_0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ cperiodic f1 f2 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ cperiodic f1 f2 c= creal_of_int f0 creal_of_num cNUMERAL c_0
+ (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (~ (n = ((I NUMERAL) _0))), ((periodic f) n) |- ((((I f) ((I SUC) i)) = ((I f) ((I SUC) i))) = ((((I f) ((I SUC) i)) = ((I f) ((I ((I MOD) ((I SUC) i))) n))) /\ (((I f) ((I SUC) i)) = ((I f) ((I SUC) i)))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> c~ c= f0 cI part cNUMERAL c_0 c==> cperiodic f1 f0 c= c= cI f1 cI part cSUC f2 cI f1 cI part cSUC f2 c/\ c= cI f1 cI part cSUC f2 cI f1 cI * * part cI part cMOD cI part cSUC f2 f0 c= cI f1 cI part cSUC f2 cI f1 cI part cSUC f2
+ (~ (n = (NUMERAL _0))), ((periodic f) n) |- ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> (~ (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n)))))))))
T c==> c~ c= f0 cNUMERAL c_0 c==> cperiodic f1 f0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c~ ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= n) /\ ((periodic f) n)) ==> (?j. ((j < n) /\ (((f i) = (f j)) /\ ((f (SUC i)) = (f (SUC j)))))))) = T)
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 cperiodic f1 f0 c? / c/\ c< b1 f0 c/\ c= * f1 b0 * f1 b1 c= * f1 cSUC b0 * f1 cSUC b1 cT
+ |- (((!i. (!f. (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))))) ==> ((\i. (!f. (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))))) i)) = ((\i. (!f. (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))))) i))
T c= c==> ! ! c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic b1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * b1 cSUC b0 * b1 cSUC cMOD b0 f0 c==> ! ! ! c==> c/\ cperiodic b2 b2 c~ c= b2 cNUMERAL c_0 c= * b2 b3 * b2 cMOD b3 b2 c==> ! ! ! c==> c/\ cperiodic b2 b3 c~ c= b3 cNUMERAL c_0 c= * b2 b4 * b2 cMOD b4 b3 c==> ! ! c==> c~ c= b3 cNUMERAL c_0 c= cMOD cSUC cMOD b2 b3 b3 cMOD cSUC b2 b3 cF * / ! c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic b1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * b1 cSUC b0 * b1 cSUC cMOD b0 f0 c==> ! ! ! c==> c/\ cperiodic b2 b2 c~ c= b2 cNUMERAL c_0 c= * b2 b3 * b2 cMOD b3 b2 c==> ! ! ! c==> c/\ cperiodic b2 b3 c~ c= b3 cNUMERAL c_0 c= * b2 b4 * b2 cMOD b4 b3 c==> ! ! c==> c~ c= b3 cNUMERAL c_0 c= cMOD cSUC cMOD b2 b3 b3 cMOD cSUC b2 b3 cF f1 * / ! c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic b1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * b1 cSUC b0 * b1 cSUC cMOD b0 f0 c==> ! ! ! c==> c/\ cperiodic b2 b2 c~ c= b2 cNUMERAL c_0 c= * b2 b3 * b2 cMOD b3 b2 c==> ! ! ! c==> c/\ cperiodic b2 b3 c~ c= b3 cNUMERAL c_0 c= * b2 b4 * b2 cMOD b4 b3 c==> ! ! c==> c~ c= b3 cNUMERAL c_0 c= cMOD cSUC cMOD b2 b3 b3 cMOD cSUC b2 b3 cF f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))) ==> (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F)))))))) ==> ((((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))) ==> (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F)))))))))
T c==> c==> c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF c==> c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ (n = (NUMERAL _0))), ((NUMERAL (BIT1 _0)) <= n), ((periodic f) n) |- ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))
T c==> c~ c= f0 cNUMERAL c_0 c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF
+ (n = (NUMERAL _0)) |- ((NUMERAL _0) = n)
T c==> c= f0 cNUMERAL c_0 c= cNUMERAL c_0 f0
- ((NUMERAL (BIT1 _0)) <= n) |- ((I ((I <=) ((I NUMERAL) ((I BIT1) _0)))) n)
T c==> c<= cNUMERAL cBIT1 c_0 f0 cI * * part cI part c<= cI part cNUMERAL cI part cBIT1 c_0 f0
+ ((periodic f) n) |- ((~ (n = ((I NUMERAL) _0))) = (((I ((I periodic) f)) n) /\ (~ (n = ((I NUMERAL) _0)))))
T c==> cperiodic f0 f1 c= c~ c= f1 cI part cNUMERAL c_0 c/\ cI * * part cI part cperiodic f0 f1 c~ c= f1 cI part cNUMERAL c_0
- (~ (n = (NUMERAL _0))) |- ((n = (NUMERAL _0)) = F)
T c==> c~ c= f0 cNUMERAL c_0 c= c= f0 cNUMERAL c_0 cF
+ (~ (n = (NUMERAL _0))), ((NUMERAL (BIT1 _0)) <= n), ((periodic f) n) |- ((f (SUC i)) = (f (SUC (i MOD n))))
T c==> c~ c= f0 cNUMERAL c_0 c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (~ (n = ((I NUMERAL) _0))) |- ((n = ((I NUMERAL) _0)) ==> (~ (n = ((I NUMERAL) _0))))
T c==> c~ c= f0 cI part cNUMERAL c_0 c==> c= f0 cI part cNUMERAL c_0 c~ c= f0 cI part cNUMERAL c_0
+ |- ((m <= n) = ((int_le (int_of_num m)) (int_of_num n)))
T c= c<= f0 f1 cint_le cint_of_num f0 cint_of_num f1
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) n)
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
+ (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) |- (!n. ((n = ((I NUMERAL) _0)) \/ (((I ((I MOD) ((I SUC) ((I ((I MOD) _7203036)) n)))) n) = ((I ((I MOD) ((I SUC) _7203036))) n))))
T c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 ! c\/ c= b0 cI part cNUMERAL c_0 c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f0 b0 b0 cI * * part cI part cMOD cI part cSUC f0 b0
+ (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) |- (((!n. ((n = ((I NUMERAL) _0)) \/ (((I ((I MOD) ((I SUC) ((I ((I MOD) _7203036)) n)))) n) = ((I ((I MOD) ((I SUC) _7203036))) n)))) ==> ((\n. ((n = ((I NUMERAL) _0)) \/ (((I ((I MOD) ((I SUC) ((I ((I MOD) _7203036)) n)))) n) = ((I ((I MOD) ((I SUC) _7203036))) n)))) _7203037)) = ((\n. ((n = ((I NUMERAL) _0)) \/ (((I ((I MOD) ((I SUC) ((I ((I MOD) _7203036)) n)))) n) = ((I ((I MOD) ((I SUC) _7203036))) n)))) _7203037))
T c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c= c==> ! c\/ c= b0 cI part cNUMERAL c_0 c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f0 b0 b0 cI * * part cI part cMOD cI part cSUC f0 b0 * / c\/ c= b0 cI part cNUMERAL c_0 c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f0 b0 b0 cI * * part cI part cMOD cI part cSUC f0 b0 f1 * / c\/ c= b0 cI part cNUMERAL c_0 c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f0 b0 b0 cI * * part cI part cMOD cI part cSUC f0 b0 f1
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _7203028) ==> ((~ ((int_le (int_of_num (NUMERAL (BIT1 _0)))) _7203028)) \/ ((~ ((periodic f) n)) \/ (~ (_7203028 = (int_of_num (NUMERAL _0)))))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c\/ c~ cint_le cint_of_num cNUMERAL cBIT1 c_0 f0 c\/ c~ cperiodic f1 f2 c~ c= f0 cint_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_ge (real_of_int _7203028)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((periodic f) n) /\ ((real_of_int _7203028) = (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7203028))) ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ cperiodic f1 f2 c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ (n = (NUMERAL _0))), ((periodic f) n) |- (((f (SUC i)) = (f (SUC (i MOD n)))) = (((f i) = (f (i MOD n))) /\ ((f (SUC i)) = (f (SUC (i MOD n))))))
T c==> c~ c= f0 cNUMERAL c_0 c==> cperiodic f1 f0 c= c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c/\ c= * f1 f2 * f1 cMOD f2 f0 c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0
+ ((periodic f) n) |- ((~ (((I f) ((I SUC) ((I ((I MOD) i)) n))) = ((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)))) = (((I ((I periodic) f)) n) /\ (~ (((I f) ((I SUC) ((I ((I MOD) i)) n))) = ((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n))))))
T c==> cperiodic f0 f1 c= c~ c= cI f0 cI part cSUC cI * * part cI part cMOD f2 f1 cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f2 f1 f1 c/\ cI * * part cI part cperiodic f0 f1 c~ c= cI f0 cI part cSUC cI * * part cI part cMOD f2 f1 cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f2 f1 f1
+ |- (((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> F) = ((f (SUC i)) = (f (SUC (i MOD n)))))
T c= c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 cF c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2
+ (((real_ge (real_of_int _7203028)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((periodic f) n) /\ ((real_of_int _7203028) = (real_of_num (NUMERAL _0)))))) |- ((\x. (((real_mul x) (real_of_int _7203028)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ cperiodic f1 f2 c= creal_of_int f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ (((NUMERAL (BIT1 _0)) <= n) /\ ((periodic f) n)) |- ((((NUMERAL (BIT1 _0)) <= n) /\ ((periodic f) n)) /\ (?j. ((j < n) /\ (((f i) = (f j)) /\ ((f (SUC i)) = (f (SUC j)))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 cperiodic f1 f0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 cperiodic f1 f0 c? / c/\ c< b0 f0 c/\ c= * f1 f2 * f1 b0 c= * f1 cSUC f2 * f1 cSUC b0
+ (((real_ge (real_of_int _7203028)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((periodic f) n) /\ ((real_of_int _7203028) = (real_of_num (NUMERAL _0)))))) |- ((((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7203028)) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7203028))) ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _7203028))) ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ cperiodic f1 f2 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (~ (n = ((I NUMERAL) _0))), ((periodic f) n) |- (((I f) _7203032) = ((I f) ((I ((I MOD) _7203032)) n)))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> c~ c= f0 cI part cNUMERAL c_0 c==> cperiodic f1 f0 c= cI f1 f2 cI f1 cI * * part cI part cMOD f2 f0
+ |- (((!m. ((((periodic f) n) /\ (~ ((NUMERAL _0) = n))) ==> ((f (m MOD n)) = (f m)))) ==> ((\m. ((((periodic f) n) /\ (~ ((NUMERAL _0) = n))) ==> ((f (m MOD n)) = (f m)))) m)) = ((\m. ((((periodic f) n) /\ (~ ((NUMERAL _0) = n))) ==> ((f (m MOD n)) = (f m)))) m))
T c= c==> ! c==> c/\ cperiodic f0 f1 c~ c= cNUMERAL c_0 f1 c= * f0 cMOD b0 f1 * f0 b0 * / c==> c/\ cperiodic f0 f1 c~ c= cNUMERAL c_0 f1 c= * f0 cMOD b0 f1 * f0 b0 f2 * / c==> c/\ cperiodic f0 f1 c~ c= cNUMERAL c_0 f1 c= * f0 cMOD b0 f1 * f0 b0 f2
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
- (~ (((I f) ((I SUC) ((I ((I MOD) i)) n))) = ((I f) ((I SUC) ((I ((I MOD) i)) n))))) |- ((~ (((I f) ((I SUC) ((I ((I MOD) i)) n))) = ((I f) ((I SUC) ((I ((I MOD) i)) n))))) /\ (((I f) ((I SUC) ((I ((I MOD) i)) n))) = ((I f) ((I SUC) ((I ((I MOD) i)) n)))))
T c==> c~ c= cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 c/\ c~ c= cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 c= cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2
+ ((f (m MOD n)) = (f m)) |- ((f m) = (f (m MOD n)))
T c==> c= * f0 cMOD f1 f2 * f0 f1 c= * f0 f1 * f0 cMOD f1 f2
+ (~ (n = (NUMERAL _0))) |- ((n = ((I NUMERAL) _0)) ==> F)
T c==> c~ c= f0 cNUMERAL c_0 c==> c= f0 cI part cNUMERAL c_0 cF
+ (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = (NUMERAL _0))), ((periodic f) n) |- ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) /\ ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> (~ (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cNUMERAL c_0 c==> cperiodic f0 f2 c/\ ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c~ ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1
+ |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ |- (((!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ==> ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) n)) = ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) n))
T c= c==> ! cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
+ (~ (n = ((I NUMERAL) _0))), ((periodic f) n) |- (((I ((I periodic) f)) n) /\ (~ (n = ((I NUMERAL) _0))))
T c==> c~ c= f0 cI part cNUMERAL c_0 c==> cperiodic f1 f0 c/\ cI * * part cI part cperiodic f1 f0 c~ c= f0 cI part cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = (((~ (_7203050 = _7203052)) \/ ((~ (_7203051 = _7203053)) \/ (((I _7203050) _7203051) = ((I _7203052) _7203053)))) = ((((I _7203050) _7203051) = ((I _7203052) _7203053)) \/ ((~ (_7203050 = _7203052)) \/ (~ (_7203051 = _7203053))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3 c\/ c= cI f0 f2 cI f1 f3 c\/ c~ c= f0 f1 c~ c= f2 f3
+ (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = (NUMERAL _0))), ((NUMERAL (BIT1 _0)) <= n), ((periodic f) n) |- ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F)
T c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cNUMERAL c_0 c==> c<= cNUMERAL cBIT1 c_0 f2 c==> cperiodic f0 f2 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF
+ ((NUMERAL (BIT1 _0)) <= n), ((periodic f) n) |- ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F)))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF
+ (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = ((I NUMERAL) _0))), ((periodic f) n) |- ((((((I f) ((I SUC) ((I ((I MOD) i)) n))) = ((I f) ((I SUC) ((I ((I MOD) i)) n)))) /\ (~ (((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)) = ((I f) ((I SUC) ((I ((I MOD) i)) n)))))) ==> (~ (((I f) ((I SUC) ((I ((I MOD) i)) n))) = ((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n))))) = (~ (((I f) ((I SUC) ((I ((I MOD) i)) n))) = ((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cI part cNUMERAL c_0 c==> cperiodic f0 f2 c= c==> c/\ c= cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 c~ c= cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 c~ c= cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2 c~ c= cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2
+ |- ((\n. ((~ (n = (NUMERAL _0))) ==> ((m = (((m DIV n) * n) + (m MOD n))) /\ ((m MOD n) < n)))) n)
T * / c==> c~ c= b0 cNUMERAL c_0 c/\ c= f0 c+ c* cDIV f0 b0 b0 cMOD f0 b0 c< cMOD f0 b0 b0 f1
+ (~ (n = (NUMERAL _0))), ((NUMERAL (BIT1 _0)) <= n), ((periodic f) n) |- ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> F)
T c==> c~ c= f0 cNUMERAL c_0 c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 cF
+ (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = (NUMERAL _0))), ((NUMERAL (BIT1 _0)) <= n), ((periodic f) n) |- ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))
T c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cNUMERAL c_0 c==> c<= cNUMERAL cBIT1 c_0 f2 c==> cperiodic f0 f2 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF
+ (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ ((f (SUC i)) = (f (SUC (i MOD n))))), ((periodic f) n) |- (((n = ((I NUMERAL) _0)) ==> F) = F)
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> cperiodic f0 f2 c= c==> c= f2 cI part cNUMERAL c_0 cF cF
- |- ((p ==> (~ p)) = (~ p))
T c= c==> f0 c~ f0 c~ f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- |- (((real_ge ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ F), (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = (NUMERAL _0))), ((periodic f) n) |- ((~ F) /\ F)
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ cF c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cNUMERAL c_0 c==> cperiodic f0 f2 c/\ c~ cF cF
- (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = ((I NUMERAL) _0))), ((periodic f) n) |- ((((I f) ((I ((I MOD) ((I SUC) i))) n)) = ((I f) ((I SUC) ((I ((I MOD) i)) n)))) ==> (~ (((I f) ((I ((I MOD) ((I SUC) i))) n)) = ((I f) ((I SUC) ((I ((I MOD) i)) n))))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cI part cNUMERAL c_0 c==> cperiodic f0 f2 c==> c= cI f0 cI * * part cI part cMOD cI part cSUC f1 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 c~ c= cI f0 cI * * part cI part cMOD cI part cSUC f1 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2
- |- (T = (((~ (x = y)) \/ ((~ (x = z)) \/ (y = z))) = ((~ (x = z)) \/ ((~ (x = y)) \/ (y = z)))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f0 f2 c= f1 f2 c\/ c~ c= f0 f2 c\/ c~ c= f0 f1 c= f1 f2
- (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = ((I NUMERAL) _0))), ((periodic f) n) |- ((((I f) ((I SUC) ((I ((I MOD) i)) n))) = ((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n))) ==> (~ (((I f) ((I SUC) ((I ((I MOD) i)) n))) = ((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cI part cNUMERAL c_0 c==> cperiodic f0 f2 c==> c= cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2 c~ c= cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2
- |- ((!n'. (((~ ((periodic f) n)) \/ (n = (NUMERAL _0))) \/ (!m. ((f m) = (f (m MOD n')))))) = (((~ ((periodic f) n)) \/ (n = (NUMERAL _0))) \/ (!n. (!m. ((f m) = (f (m MOD n)))))))
T c= ! c\/ c\/ c~ cperiodic f0 f1 c= f1 cNUMERAL c_0 ! c= * f0 b1 * f0 cMOD b1 b0 c\/ c\/ c~ cperiodic f0 f1 c= f1 cNUMERAL c_0 ! ! c= * f0 b1 * f0 cMOD b1 b0
- (~ (n = (NUMERAL _0))) |- ((~ (n = (NUMERAL _0))) /\ (m = (((m DIV n) * n) + (m MOD n))))
T c==> c~ c= f0 cNUMERAL c_0 c/\ c~ c= f0 cNUMERAL c_0 c= f1 c+ c* cDIV f1 f0 f0 cMOD f1 f0
- (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = ((I NUMERAL) _0))), (((I f) ((I SUC) ((I ((I MOD) i)) n))) = ((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n))), ((periodic f) n) |- ((((I f) ((I SUC) ((I ((I MOD) i)) n))) = ((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n))) /\ (~ (((I f) ((I SUC) ((I ((I MOD) i)) n))) = ((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cI part cNUMERAL c_0 c==> c= cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2 c==> cperiodic f0 f2 c/\ c= cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2 c~ c= cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((I ((I periodic) f)) n)), ((periodic f) n) |- ((~ ((I ((I periodic) f)) n)) /\ ((I ((I periodic) f)) n))
T c==> c~ cI * * part cI part cperiodic f0 f1 c==> cperiodic f0 f1 c/\ c~ cI * * part cI part cperiodic f0 f1 cI * * part cI part cperiodic f0 f1
- |- ((~ (_7203062 = _7203064)) \/ ((~ (_7203063 = _7203065)) \/ (((I _7203062) _7203063) = ((I _7203064) _7203065))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
- (~ (n = (NUMERAL _0))) |- (((periodic SUC) n) = (((periodic SUC) n) /\ (~ ((NUMERAL _0) = n))))
T c==> c~ c= f0 cNUMERAL c_0 c= cperiodic part cSUC f0 c/\ cperiodic part cSUC f0 c~ c= cNUMERAL c_0 f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- (~ (n = ((I NUMERAL) _0))), (n = ((I NUMERAL) _0)) |- ((n = ((I NUMERAL) _0)) /\ (~ (n = ((I NUMERAL) _0))))
T c==> c~ c= f0 cI part cNUMERAL c_0 c==> c= f0 cI part cNUMERAL c_0 c/\ c= f0 cI part cNUMERAL c_0 c~ c= f0 cI part cNUMERAL c_0
- (~ (n = (NUMERAL _0))) |- ((~ (n = (NUMERAL _0))) /\ ((m = (((m DIV n) * n) + (m MOD n))) = T))
T c==> c~ c= f0 cNUMERAL c_0 c/\ c~ c= f0 cNUMERAL c_0 c= c= f1 c+ c* cDIV f1 f0 f0 cMOD f1 f0 cT
- (_7203038 = _7203040) |- ((_7203039 = _7203041) ==> (((I _7203040) _7203041) \/ (~ ((I _7203038) _7203039))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _7203028)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((periodic f) n) /\ ((real_of_int _7203028) = (real_of_num (NUMERAL _0)))))) |- ((periodic f) n)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ cperiodic f1 f2 c= creal_of_int f0 creal_of_num cNUMERAL c_0 cperiodic f1 f2
- ((periodic f) n) |- ((~ ((I ((I periodic) f)) n)) ==> ((I ((I periodic) f)) n))
T c==> cperiodic f0 f1 c==> c~ cI * * part cI part cperiodic f0 f1 cI * * part cI part cperiodic f0 f1
- (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))) |- (((((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))) ==> (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F)))))))) ==> (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))))
T c==> c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF c==> c==> c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _7203028)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((periodic f) n) /\ ((real_of_int _7203028) = (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ cperiodic f1 f2 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (_7203038 = _7203040), (_7203039 = _7203041) |- ((_7203039 = _7203041) /\ (((I _7203040) _7203041) \/ (~ ((I _7203038) _7203039))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
- (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (((I f) ((I SUC) i)) = ((I f) ((I SUC) ((I ((I MOD) i)) n)))) |- ((((I f) ((I SUC) i)) = ((I f) ((I SUC) ((I ((I MOD) i)) n)))) /\ (~ (((I f) ((I SUC) i)) = ((I f) ((I SUC) ((I ((I MOD) i)) n))))))
T c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c= cI f0 cI part cSUC f1 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 c/\ c= cI f0 cI part cSUC f1 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 c~ c= cI f0 cI part cSUC f1 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2
- |- ((((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))) ==> (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))))
T c==> c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF
- (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (~ (n = ((I NUMERAL) _0))), ((periodic f) n) |- ((~ (((I f) ((I SUC) i)) = ((I f) ((I ((I MOD) ((I SUC) i))) n)))) ==> (((I f) ((I SUC) i)) = ((I f) ((I ((I MOD) ((I SUC) i))) n))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> c~ c= f0 cI part cNUMERAL c_0 c==> cperiodic f1 f0 c==> c~ c= cI f1 cI part cSUC f2 cI f1 cI * * part cI part cMOD cI part cSUC f2 f0 c= cI f1 cI part cSUC f2 cI f1 cI * * part cI part cMOD cI part cSUC f2 f0
- (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (~ (((I f) ((I ((I MOD) ((I SUC) i))) n)) = ((I f) ((I SUC) i)))), (~ (n = ((I NUMERAL) _0))), ((periodic f) n) |- ((~ (((I f) ((I ((I MOD) ((I SUC) i))) n)) = ((I f) ((I SUC) i)))) /\ (((I f) ((I ((I MOD) ((I SUC) i))) n)) = ((I f) ((I SUC) i))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> c~ c= cI f0 cI * * part cI part cMOD cI part cSUC f1 f2 cI f0 cI part cSUC f1 c==> c~ c= f2 cI part cNUMERAL c_0 c==> cperiodic f0 f2 c/\ c~ c= cI f0 cI * * part cI part cMOD cI part cSUC f1 f2 cI f0 cI part cSUC f1 c= cI f0 cI * * part cI part cMOD cI part cSUC f1 f2 cI f0 cI part cSUC f1
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!m. (P m)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ (n = ((I NUMERAL) _0))), (~ (((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n) = ((I ((I MOD) ((I SUC) i))) n))) |- ((~ (((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n) = ((I ((I MOD) ((I SUC) i))) n))) /\ (((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n) = ((I ((I MOD) ((I SUC) i))) n)))
T c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ c= f0 cI part cNUMERAL c_0 c==> c~ c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f0 f0 cI * * part cI part cMOD cI part cSUC f1 f0 c/\ c~ c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f0 f0 cI * * part cI part cMOD cI part cSUC f1 f0 c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f0 f0 cI * * part cI part cMOD cI part cSUC f1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _7203028)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((periodic f) n) /\ ((real_of_int _7203028) = (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ cperiodic f1 f2 c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (((real_ge (real_of_int _7203028)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ (((periodic f) n) /\ ((real_of_int _7203028) = (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _7203028)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ cperiodic f1 f2 c= creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_7203062 = _7203064) |- ((_7203062 = _7203064) /\ ((~ (_7203063 = _7203065)) \/ (((I _7203062) _7203063) = ((I _7203064) _7203065))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
- (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ (n = ((I NUMERAL) _0))) |- ((~ (((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)) = ((I f) ((I ((I MOD) ((I SUC) i))) n)))) ==> (((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)) = ((I f) ((I ((I MOD) ((I SUC) i))) n))))
T c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ c= f0 cI part cNUMERAL c_0 c==> c~ c= cI f1 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f2 f0 f0 cI f1 cI * * part cI part cMOD cI part cSUC f2 f0 c= cI f1 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f2 f0 f0 cI f1 cI * * part cI part cMOD cI part cSUC f2 f0
- |- ((~ (((I f) ((I SUC) ((I ((I MOD) i)) n))) = ((I f) ((I SUC) ((I ((I MOD) i)) n))))) ==> (((I f) ((I SUC) ((I ((I MOD) i)) n))) = ((I f) ((I SUC) ((I ((I MOD) i)) n)))))
T c==> c~ c= cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 c= cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2
- (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (~ (((I f) ((I SUC) i)) = ((I f) ((I ((I MOD) ((I SUC) i))) n)))), (~ (n = ((I NUMERAL) _0))), ((periodic f) n) |- ((~ (((I f) ((I SUC) i)) = ((I f) ((I ((I MOD) ((I SUC) i))) n)))) /\ (((I f) ((I SUC) i)) = ((I f) ((I ((I MOD) ((I SUC) i))) n))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> c~ c= cI f0 cI part cSUC f1 cI f0 cI * * part cI part cMOD cI part cSUC f1 f2 c==> c~ c= f2 cI part cNUMERAL c_0 c==> cperiodic f0 f2 c/\ c~ c= cI f0 cI part cSUC f1 cI f0 cI * * part cI part cMOD cI part cSUC f1 f2 c= cI f0 cI part cSUC f1 cI f0 cI * * part cI part cMOD cI part cSUC f1 f2
- (~ (f = f)) |- ((~ (f = f)) /\ (f = f))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- |- (((((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))) ==> (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F)))))))) = (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))))
T c= c==> c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF
- |- ((!n'. ((n' = (NUMERAL _0)) \/ (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n)))) = ((!n. (n = (NUMERAL _0))) \/ (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))
T c= ! c\/ c= b0 cNUMERAL c_0 c= cMOD cSUC cMOD f0 f1 f1 cMOD cSUC f0 f1 c\/ ! c= b0 cNUMERAL c_0 c= cMOD cSUC cMOD f0 f1 f1 cMOD cSUC f0 f1
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (n = (NUMERAL _0))) ==> (m = (((m DIV n) * n) + (m MOD n))))
T c==> c~ c= f0 cNUMERAL c_0 c= f1 c+ c* cDIV f1 f0 f0 cMOD f1 f0
- (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = ((I NUMERAL) _0))), ((periodic f) n) |- ((((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)) = ((I f) ((I SUC) ((I ((I MOD) i)) n)))) ==> (~ (((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)) = ((I f) ((I SUC) ((I ((I MOD) i)) n))))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cI part cNUMERAL c_0 c==> cperiodic f0 f2 c==> c= cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 c~ c= cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2
- (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (~ (n = ((I NUMERAL) _0))), ((periodic f) n) |- ((~ (((I f) ((I ((I MOD) ((I SUC) i))) n)) = ((I f) ((I SUC) i)))) ==> (((I f) ((I ((I MOD) ((I SUC) i))) n)) = ((I f) ((I SUC) i))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> c~ c= f0 cI part cNUMERAL c_0 c==> cperiodic f1 f0 c==> c~ c= cI f1 cI * * part cI part cMOD cI part cSUC f2 f0 cI f1 cI part cSUC f2 c= cI f1 cI * * part cI part cMOD cI part cSUC f2 f0 cI f1 cI part cSUC f2
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))) |- ((((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))) /\ (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))))
T c==> c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF c/\ c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))) ==> (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F)))))))), (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))) |- ((((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))) /\ (((NUMERAL (BIT1 _0)) <= n) ==> (((periodic f) n) ==> ((~ (n = (NUMERAL _0))) ==> ((~ ((f (SUC i)) = (f (SUC (i MOD n))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))) ==> ((!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))) ==> F))))))))
T c==> c==> c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF c==> c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF c/\ c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF c==> c<= cNUMERAL cBIT1 c_0 f0 c==> cperiodic f1 f0 c==> c~ c= f0 cNUMERAL c_0 c==> c~ c= * f1 cSUC f2 * f1 cSUC cMOD f2 f0 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 cF
- (~ (((I f) ((I SUC) i)) = ((I f) ((I SUC) i)))) |- ((~ (((I f) ((I SUC) i)) = ((I f) ((I SUC) i)))) /\ (((I f) ((I SUC) i)) = ((I f) ((I SUC) i))))
T c==> c~ c= cI f0 cI part cSUC f1 cI f0 cI part cSUC f1 c/\ c~ c= cI f0 cI part cSUC f1 cI f0 cI part cSUC f1 c= cI f0 cI part cSUC f1 cI f0 cI part cSUC f1
- |- (T = (((_7203037 = ((I NUMERAL) _0)) \/ (((I ((I MOD) ((I SUC) ((I ((I MOD) _7203036)) _7203037)))) _7203037) = ((I ((I MOD) ((I SUC) _7203036))) _7203037))) = ((((I ((I MOD) ((I SUC) ((I ((I MOD) _7203036)) _7203037)))) _7203037) = ((I ((I MOD) ((I SUC) _7203036))) _7203037)) \/ (_7203037 = ((I NUMERAL) _0)))))
T c= cT c= c\/ c= f0 cI part cNUMERAL c_0 c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f0 f0 cI * * part cI part cMOD cI part cSUC f1 f0 c\/ c= cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f0 f0 cI * * part cI part cMOD cI part cSUC f1 f0 c= f0 cI part cNUMERAL c_0
- (!f. (!n. (!m. ((((periodic f) n) /\ (~ (n = (NUMERAL _0)))) ==> ((f m) = (f (m MOD n))))))), (!m. (!n. ((~ (n = (NUMERAL _0))) ==> (((SUC (m MOD n)) MOD n) = ((SUC m) MOD n))))), (~ ((f (SUC i)) = (f (SUC (i MOD n))))), (~ (n = ((I NUMERAL) _0))), (((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)) = ((I f) ((I SUC) ((I ((I MOD) i)) n)))), ((periodic f) n) |- ((((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)) = ((I f) ((I SUC) ((I ((I MOD) i)) n)))) /\ (~ (((I f) ((I ((I MOD) ((I SUC) ((I ((I MOD) i)) n)))) n)) = ((I f) ((I SUC) ((I ((I MOD) i)) n))))))
T c==> ! ! ! c==> c/\ cperiodic b0 b1 c~ c= b1 cNUMERAL c_0 c= * b0 b2 * b0 cMOD b2 b1 c==> ! ! c==> c~ c= b1 cNUMERAL c_0 c= cMOD cSUC cMOD b0 b1 b1 cMOD cSUC b0 b1 c==> c~ c= * f0 cSUC f1 * f0 cSUC cMOD f1 f2 c==> c~ c= f2 cI part cNUMERAL c_0 c==> c= cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 c==> cperiodic f0 f2 c/\ c= cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2 c~ c= cI f0 cI * * part cI part cMOD cI part cSUC cI * * part cI part cMOD f1 f2 f2 cI f0 cI part cSUC cI * * part cI part cMOD f1 f2
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
