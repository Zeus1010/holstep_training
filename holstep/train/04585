N Planarity.aff_gt_subset_component_y_fan
C |- (!x. (!V. (!E. (!U. (!y. (!z. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ ((z IN U) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET U))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part ctopological_component_yfan c, f0 c, f1 f2 c/\ cIN f4 f3 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f5 c% b0 f4 * part cyfan c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY f3
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_LE_01
A |- ((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))
T creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_mul
A |- (!c. (!x. (((% c) x) = (lambdai. ((real_mul c) (x $ i))))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
D CONNECTED_IFF_CONNECTED_COMPONENT
A |- (!s. ((connected s) = (!x. (!y. (((x IN s) /\ (y IN s)) ==> (((connected_component s) x) y))))))
T c= cconnected f0 ! ! c==> c/\ cIN b0 f0 cIN b1 f0 cconnected_component f0 b0 b1
D CONNECTED_COMPONENT_MAXIMAL
A |- (!s. (!t. (!x. (((x IN t) /\ ((connected t) /\ (t SUBSET s))) ==> (t SUBSET ((connected_component s) x))))))
T c==> c/\ cIN f0 f1 c/\ cconnected f1 cSUBSET f1 f2 cSUBSET f1 * * part cconnected_component f2 f0
D CONNECTED_COMPONENT_EQ_EQ
A |- (!s. (!x. (!y. ((((connected_component s) x) = ((connected_component s) y)) = (((~ (x IN s)) /\ (~ (y IN s))) \/ ((x IN s) /\ ((y IN s) /\ (((connected_component s) x) y))))))))
T c= c= * * part cconnected_component f0 f1 * * part cconnected_component f0 f2 c\/ c/\ c~ cIN f1 f0 c~ cIN f2 f0 c/\ cIN f1 f0 c/\ cIN f2 f0 cconnected_component f0 f1 f2
D CONVEX_CONNECTED
A |- (!s. ((convex s) ==> (connected s)))
T c==> cconvex f0 cconnected f0
D CONVEX_CONVEX_HULL
A |- (!s. (convex ((hull convex) s)))
T cconvex * * part chull part cconvex f0
D SEGMENT_CONVEX_HULL
A |- (!a. (!b. ((closed_segment ((CONS (a , b)) NIL)) = ((hull convex) (a INSERT (b INSERT EMPTY))))))
T c= * part cclosed_segment cCONS c, f0 f1 cNIL * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
D CONVEX_AFF_GT
A |- (!s. (!t. (convex ((aff_gt s) t))))
T cconvex * * part caff_gt f0 f1
D Planarity.expansion1_convex_fan
A |- (!v. (!u. (!s. ((((real_le (real_of_num (NUMERAL _0))) s) /\ ((real_le s) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) s)) v)) ((% s) u)) IN ((hull convex) (v INSERT (u INSERT EMPTY))))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le f0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D Planarity.CONNECTED_COMPONENT_OF_SUBSET
A |- (!s. (!t. (!x. (!y. (((s SUBSET t) /\ (((connected_component s) x) y)) ==> (((connected_component t) x) y))))))
T c==> c/\ cSUBSET f0 f1 cconnected_component f0 f2 f3 cconnected_component f1 f2 f3
D Planarity.nonsetedge_fully_surround_fan
A |- (!x. (!V. (!E. (((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (FAN (x , (V , E)))) ==> (~ (E = EMPTY))))))
T c==> c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 cFAN c, f2 c, f0 f1 c~ c= f1 part cEMPTY
D Planarity.aff_gt_connect_bound_subset_yfan
A |- (!x. (!V. (!E. (!y. (!z. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET (yfan (x , (V , E))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f3 c% b0 f4 * part cyfan c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * part cyfan c, f0 c, f1 f2
D Planarity.zpoint_in_yfan
A |- (!x. (!V. (!E. (!U. (!z. (((FAN (x , (V , E))) /\ ((~ (E = EMPTY)) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U)))) ==> (z IN (yfan (x , (V , E))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ c~ c= f2 part cEMPTY c/\ cIN f3 * part ctopological_component_yfan c, f0 c, f1 f2 cIN f4 f3 cIN f4 * part cyfan c, f0 c, f1 f2
D Planarity.expand_element_in_topological_component_yfan
A |- (!x. (!V. (!E. (!U. (!z. (((FAN (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U))) ==> (U = ((connected_component (yfan (x , (V , E)))) z))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN f3 * part ctopological_component_yfan c, f0 c, f1 f2 cIN f4 f3 c= f3 * * part cconnected_component * part cyfan c, f0 c, f1 f2 f4
D Planarity.point_in_aff_gt_in_yfan
A |- (!x. (!V. (!E. (!y. (!z. (!w. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ ((w IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E))))))))) ==> (w IN (yfan (x , (V , E)))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f3 c% b0 f4 * part cyfan c, f0 c, f1 f2 cIN f5 * part cyfan c, f0 c, f1 f2
D Planarity.segment_subset_yfan
A |- (!x. (!V. (!E. (!y. (!z. (!w. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ ((z IN (yfan (x , (V , E)))) /\ ((w IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))))) ==> ((closed_segment ((CONS (w , z)) NIL)) SUBSET (yfan (x , (V , E)))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cIN f4 * part cyfan c, f0 c, f1 f2 c/\ cIN f5 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f3 c% b0 f4 * part cyfan c, f0 c, f1 f2 cSUBSET * part cclosed_segment cCONS c, f5 f4 cNIL * part cyfan c, f0 c, f1 f2
D Planarity.exists_in_aff_gt_disjoint
A |- (!x. (!v. (!u. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) ==> (?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))))
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\E. (((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (FAN (x , (V , E)))) ==> (~ (E = EMPTY)))) E)
T * / c==> c/\ ! c==> cIN b1 f0 c> cCARD * * * part cset_of_edge b1 f0 b0 cNUMERAL cBIT1 c_0 cFAN c, f1 c, f0 b0 c~ c= b0 part cEMPTY f2
+ |- ((\a. (!b. ((closed_segment ((CONS (a , b)) NIL)) = ((hull convex) (a INSERT (b INSERT EMPTY)))))) a)
T * / ! c= * part cclosed_segment cCONS c, b0 b1 cNIL * * part chull part cconvex * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (z IN U), (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z)))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f6 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f5 c==> cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f6 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f6 c= * * part cconnected_component * part cyfan c, f2 c, f3 f4 f6 * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1
- ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F), (((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)) |- ((((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)) /\ ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c==> c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c/\ c==> c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (y' IN (yfan (x , (V , E)))), (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (z IN U), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- ((y' IN (yfan (x , (V , E)))) /\ (((~ (y' IN (yfan (x , (V , E))))) /\ (~ (z IN (yfan (x , (V , E)))))) \/ ((y' IN (yfan (x , (V , E)))) /\ ((z IN (yfan (x , (V , E)))) /\ (((connected_component (yfan (x , (V , E)))) y') z)))))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f6 * part cyfan c, f2 c, f3 f4 c==> cIN f6 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f5 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f6 * part cyfan c, f2 c, f3 f4 c\/ c/\ c~ cIN f6 * part cyfan c, f2 c, f3 f4 c~ cIN f1 * part cyfan c, f2 c, f3 f4 c/\ cIN f6 * part cyfan c, f2 c, f3 f4 c/\ cIN f1 * part cyfan c, f2 c, f3 f4 cconnected_component * part cyfan c, f2 c, f3 f4 f6 f1
- (~ (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (u $ i))) = (u $ i))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 c$ f2 f1 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((!u. (((DISJOINT (x INSERT EMPTY)) (y INSERT (u INSERT EMPTY))) ==> (?y'. (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (u INSERT EMPTY))))))) ==> ((\u. (((DISJOINT (x INSERT EMPTY)) (y INSERT (u INSERT EMPTY))) ==> (?y'. (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (u INSERT EMPTY))))))) z)) = ((\u. (((DISJOINT (x INSERT EMPTY)) (y INSERT (u INSERT EMPTY))) ==> (?y'. (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (u INSERT EMPTY))))))) z))
T c= c==> ! c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / cIN b1 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * / c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / cIN b1 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2 * / c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c? / cIN b1 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
+ |- (((!x. (!V. (!E. (!U. (!z. (((FAN (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U))) ==> (U = ((connected_component (yfan (x , (V , E)))) z)))))))) ==> ((\x. (!V. (!E. (!U. (!z. (((FAN (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U))) ==> (U = ((connected_component (yfan (x , (V , E)))) z)))))))) x)) = ((\x. (!V. (!E. (!U. (!z. (((FAN (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U))) ==> (U = ((connected_component (yfan (x , (V , E)))) z)))))))) x))
T c= c==> ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN b3 * part ctopological_component_yfan c, b0 c, b1 b2 cIN b4 b3 c= b3 * * part cconnected_component * part cyfan c, b0 c, b1 b2 b4 * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN b3 * part ctopological_component_yfan c, b0 c, b1 b2 cIN b4 b3 c= b3 * * part cconnected_component * part cyfan c, b0 c, b1 b2 b4 f0 * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN b3 * part ctopological_component_yfan c, b0 c, b1 b2 cIN b4 b3 c= b3 * * part cconnected_component * part cyfan c, b0 c, b1 b2 b4 f0
+ |- ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ ((z IN U) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET U)) = T)
T c= c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part ctopological_component_yfan c, f0 c, f1 f2 c/\ cIN f4 f3 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f5 c% b0 f4 * part cyfan c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY f3 cT
+ |- (((!s. ((((real_le (real_of_num (NUMERAL _0))) s) /\ ((real_le s) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) s)) y')) ((% s) z)) IN ((hull convex) (y' INSERT (z INSERT EMPTY)))))) ==> ((\s. ((((real_le (real_of_num (NUMERAL _0))) s) /\ ((real_le s) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) s)) y')) ((% s) z)) IN ((hull convex) (y' INSERT (z INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\s. ((((real_le (real_of_num (NUMERAL _0))) s) /\ ((real_le s) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) s)) y')) ((% s) z)) IN ((hull convex) (y' INSERT (z INSERT EMPTY)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= c==> ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0 * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_of_num cNUMERAL cBIT1 c_0
+ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) |- F
T c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))), (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') |- ((~ (((connected_component (yfan (x , (V , E)))) y') x')) ==> (((connected_component (yfan (x , (V , E)))) y') x'))
T c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> c~ cconnected_component * part cyfan c, f0 c, f3 f4 f5 f6 cconnected_component * part cyfan c, f0 c, f3 f4 f5 f6
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (v $ i))) $ i)) ((lambdai. ((real_mul (real_of_num (NUMERAL _0))) (u $ i))) $ i))) $ i) = (v $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) v)) ((% (real_of_num (NUMERAL _0))) u)) $ i) = (v $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 b1 b0 c$ clambda / creal_mul creal_of_num cNUMERAL c_0 c$ f2 b1 b0 f0 c$ f1 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 c% creal_of_num cNUMERAL c_0 f2 f0 c$ f1 f0
+ |- ((((~ (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> F) ==> (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c==> c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 cF c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (!t. (convex ((aff_gt (x INSERT EMPTY)) t)))
T cconvex * * part caff_gt * * part cINSERT f0 part cEMPTY f1
+ ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) |- (((!x'. ((~ (((connected_component (yfan (x , (V , E)))) y') x')) \/ (((connected_component (yfan (x , (V , E)))) z) x'))) ==> ((\x'. ((~ (((connected_component (yfan (x , (V , E)))) y') x')) \/ (((connected_component (yfan (x , (V , E)))) z) x'))) _3017189)) = ((\x'. ((~ (((connected_component (yfan (x , (V , E)))) y') x')) \/ (((connected_component (yfan (x , (V , E)))) z) x'))) _3017189))
T c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 c= c==> ! c\/ c~ cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 * / c\/ c~ cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 f6 * / c\/ c~ cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 f6
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) |- ((y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) = T)
T c==> cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ |- ((\z. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET (yfan (x , (V , E)))))) z)
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT b0 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt b1 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 f3 c% b1 b0 * part cyfan c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT b0 part cEMPTY * part cyfan c, f0 c, f1 f2 f4
- ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) |- (((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) /\ ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c/\ c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF
+ |- ((\b. ((closed_segment ((CONS (a , b)) NIL)) = ((hull convex) (a INSERT (b INSERT EMPTY))))) b)
T * / c= * part cclosed_segment cCONS c, f0 b0 cNIL * * part chull part cconvex * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
+ |- (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ ((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\z. (((FAN (x , (V , E))) /\ ((~ (E = EMPTY)) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U)))) ==> (z IN (yfan (x , (V , E)))))) z)
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ c~ c= f2 part cEMPTY c/\ cIN f3 * part ctopological_component_yfan c, f0 c, f1 f2 cIN b0 f3 cIN b0 * part cyfan c, f0 c, f1 f2 f4
+ |- ((\s. ((connected s) = (!x. (!y. (((x IN s) /\ (y IN s)) ==> (((connected_component s) x) y)))))) ((hull convex) (y' INSERT (z INSERT EMPTY))))
T * / c= cconnected b0 ! ! c==> c/\ cIN b1 b0 cIN b2 b0 cconnected_component b0 b1 b2 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) |- (((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x')) = T)
T c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 c= c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 cconnected_component * part cyfan c, f0 c, f3 f4 f2 f6 cT
+ (connected ((hull convex) (y' INSERT (z INSERT EMPTY)))) |- (((!x. (!y. (((x IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) x) y)))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z)) = (((connected ((hull convex) (y' INSERT (z INSERT EMPTY)))) = (!x. (!y. (((x IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) x) y))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z)))
T c==> cconnected * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c==> ! ! c==> c/\ cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 b1 cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1 c==> c= cconnected * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! ! c==> c/\ cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 b1 cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1
+ (y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) |- ((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) = T)
T c==> cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
- ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) |- ((\x'. ((((connected_component (yfan (x , (V , E)))) y') x') \/ (~ (((connected_component (yfan (x , (V , E)))) z) x')))) _3017188)
T c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 * / c\/ cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 c~ cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 f6
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (connected ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (z IN U), (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET (yfan (x , (V , E)))), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> cconnected * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f6 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f5 c==> cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cyfan c, f2 c, f3 f4 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ |- (((((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET (yfan (x , (V , E))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))) = (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f3 c% b0 f4 * part cyfan c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * part cyfan c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f1 f2 f4 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f1 f2 f4
+ (!x. (!y. (((x IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) x) y)))) |- (((((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z)) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z)) = (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z))
T c==> ! ! c==> c/\ cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 b1 c= c==> c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1 cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1 cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1
+ (~ (E = EMPTY)), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (z IN U) |- (((z IN (yfan (x , (V , E)))) ==> ((z IN (yfan (x , (V , E)))) /\ (((connected_component (yfan (x , (V , E)))) y') z))) = ((((FAN (x , (V , E))) /\ ((~ (E = EMPTY)) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U)))) ==> (z IN (yfan (x , (V , E))))) ==> ((z IN (yfan (x , (V , E)))) /\ (((connected_component (yfan (x , (V , E)))) y') z))))
T c==> c~ c= f0 part cEMPTY c==> cFAN c, f1 c, f2 f0 c==> cIN f3 * part ctopological_component_yfan c, f1 c, f2 f0 c==> cIN f4 f3 c= c==> cIN f4 * part cyfan c, f1 c, f2 f0 c/\ cIN f4 * part cyfan c, f1 c, f2 f0 cconnected_component * part cyfan c, f1 c, f2 f0 f5 f4 c==> c==> c/\ cFAN c, f1 c, f2 f0 c/\ c~ c= f0 part cEMPTY c/\ cIN f3 * part ctopological_component_yfan c, f1 c, f2 f0 cIN f4 f3 cIN f4 * part cyfan c, f1 c, f2 f0 c/\ cIN f4 * part cyfan c, f1 c, f2 f0 cconnected_component * part cyfan c, f1 c, f2 f0 f5 f4
+ |- (((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)))
T c==> c/\ cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 c= * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2
+ |- (((!x. (!V. (!E. (!U. (!z. (((FAN (x , (V , E))) /\ ((~ (E = EMPTY)) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U)))) ==> (z IN (yfan (x , (V , E)))))))))) ==> ((\x. (!V. (!E. (!U. (!z. (((FAN (x , (V , E))) /\ ((~ (E = EMPTY)) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U)))) ==> (z IN (yfan (x , (V , E)))))))))) x)) = ((\x. (!V. (!E. (!U. (!z. (((FAN (x , (V , E))) /\ ((~ (E = EMPTY)) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U)))) ==> (z IN (yfan (x , (V , E)))))))))) x))
T c= c==> ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ c~ c= b2 part cEMPTY c/\ cIN b3 * part ctopological_component_yfan c, b0 c, b1 b2 cIN b4 b3 cIN b4 * part cyfan c, b0 c, b1 b2 * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ c~ c= b2 part cEMPTY c/\ cIN b3 * part ctopological_component_yfan c, b0 c, b1 b2 cIN b4 b3 cIN b4 * part cyfan c, b0 c, b1 b2 f0 * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ c~ c= b2 part cEMPTY c/\ cIN b3 * part ctopological_component_yfan c, b0 c, b1 b2 cIN b4 b3 cIN b4 * part cyfan c, b0 c, b1 b2 f0
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (z IN U), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- ((~ (E = EMPTY)) ==> ((z IN (yfan (x , (V , E)))) /\ (((connected_component (yfan (x , (V , E)))) y') z)))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f6 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f5 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ c= f4 part cEMPTY c/\ cIN f1 * part cyfan c, f2 c, f3 f4 cconnected_component * part cyfan c, f2 c, f3 f4 f6 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ ((z IN U) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E))))))))))) |- (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET U)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f2 c, f0 f1 c/\ cIN f3 * part ctopological_component_yfan c, f2 c, f0 f1 c/\ cIN f4 f3 c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f5 c% b0 f4 * part cyfan c, f2 c, f0 f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY f3
+ |- ((((convex ((hull convex) (y' INSERT (z INSERT EMPTY)))) ==> (connected ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z)) = (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z))
T c= c==> c==> cconvex * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1 cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1
- (((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z)) |- ((((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z)) = T)
T c==> c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1 c= c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1 cT
- (~ (((connected_component (yfan (x , (V , E)))) y') x')), ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))), (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') |- ((~ (((connected_component (yfan (x , (V , E)))) y') x')) /\ (((connected_component (yfan (x , (V , E)))) y') x'))
T c==> c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4 c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f1 f2 f3 b0 ! c= cconnected_component * part cyfan c, f0 c, f1 f2 f3 b0 cconnected_component * part cyfan c, f0 c, f1 f2 f6 b0 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f4 c/\ c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4 cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4
+ |- (((((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) ==> (?y'. (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))) = (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)))
T c= c==> c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2
- (EMPTY = E) |- (E = EMPTY)
T c==> c= part cEMPTY f0 c= f0 part cEMPTY
- |- ((!E. (!V. (!x. (!y. (!y'. (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))))))) = T)
T c= ! ! ! ! ! c==> c/\ ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 part cEMPTY b5 cconnected_component * part cyfan c, b2 c, b1 b0 b4 b5 ! c= cconnected_component * part cyfan c, b2 c, b1 b0 b4 b5 cconnected_component * part cyfan c, b2 c, b1 b0 f0 b5 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 part cEMPTY b5 cconnected_component * part cyfan c, b2 c, b1 b0 f0 b5 cT
+ |- ((((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)) ==> (((connected_component (yfan (x , (V , E)))) y') z)) ==> (((connected_component (yfan (x , (V , E)))) y') z)) = (((connected_component (yfan (x , (V , E)))) y') z))
T c= c==> c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f0 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f0 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f0 f1
+ ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) |- ((((connected_component (yfan (x , (V , E)))) z) _3017189) \/ (~ (((connected_component (yfan (x , (V , E)))) y') _3017189)))
T c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 c\/ cconnected_component * part cyfan c, f0 c, f3 f4 f2 f6 c~ cconnected_component * part cyfan c, f0 c, f3 f4 f5 f6
+ |- (((!s. ((convex s) ==> (connected s))) ==> ((\s. ((convex s) ==> (connected s))) ((hull convex) (y' INSERT (z INSERT EMPTY))))) = ((\s. ((convex s) ==> (connected s))) ((hull convex) (y' INSERT (z INSERT EMPTY)))))
T c= c==> ! c==> cconvex b0 cconnected b0 * / c==> cconvex b0 cconnected b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * / c==> cconvex b0 cconnected b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((\z. (!w. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ ((z IN (yfan (x , (V , E)))) /\ ((w IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))))) ==> ((closed_segment ((CONS (w , z)) NIL)) SUBSET (yfan (x , (V , E))))))) z)
T * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT b0 part cEMPTY c/\ cIN b0 * part cyfan c, f0 c, f1 f2 c/\ cIN b1 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT b0 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b2 creal_lt b2 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 f3 c% b2 b0 * part cyfan c, f0 c, f1 f2 cSUBSET * part cclosed_segment cCONS c, b1 b0 cNIL * part cyfan c, f0 c, f1 f2 f4
+ |- (((!x. (!V. (!E. (((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (FAN (x , (V , E)))) ==> (~ (E = EMPTY)))))) ==> ((\x. (!V. (!E. (((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (FAN (x , (V , E)))) ==> (~ (E = EMPTY)))))) x)) = ((\x. (!V. (!E. (((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (FAN (x , (V , E)))) ==> (~ (E = EMPTY)))))) x))
T c= c==> ! ! ! c==> c/\ ! c==> cIN b3 b1 c> cCARD * * * part cset_of_edge b3 b1 b2 cNUMERAL cBIT1 c_0 cFAN c, b0 c, b1 b2 c~ c= b2 part cEMPTY * / ! ! c==> c/\ ! c==> cIN b3 b1 c> cCARD * * * part cset_of_edge b3 b1 b2 cNUMERAL cBIT1 c_0 cFAN c, b0 c, b1 b2 c~ c= b2 part cEMPTY f0 * / ! ! c==> c/\ ! c==> cIN b3 b1 c> cCARD * * * part cset_of_edge b3 b1 b2 cNUMERAL cBIT1 c_0 cFAN c, b0 c, b1 b2 c~ c= b2 part cEMPTY f0
+ |- (((!E. (!y. (!z. (!w. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ ((w IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E))))))))) ==> (w IN (yfan (x , (V , E))))))))) ==> ((\E. (!y. (!z. (!w. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ ((w IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E))))))))) ==> (w IN (yfan (x , (V , E))))))))) E)) = ((\E. (!y. (!z. (!w. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ ((w IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E))))))))) ==> (w IN (yfan (x , (V , E))))))))) E))
T c= c==> ! ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b3 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt b4 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b1 c% b4 b2 * part cyfan c, f0 c, f1 b0 cIN b3 * part cyfan c, f0 c, f1 b0 * / ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b3 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt b4 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b1 c% b4 b2 * part cyfan c, f0 c, f1 b0 cIN b3 * part cyfan c, f0 c, f1 b0 f2 * / ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b3 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt b4 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b1 c% b4 b2 * part cyfan c, f0 c, f1 b0 cIN b3 * part cyfan c, f0 c, f1 b0 f2
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (FAN (x , (V , E))), (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (z IN (yfan (x , (V , E)))), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- ((((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ ((z IN (yfan (x , (V , E)))) /\ ((y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))))) ==> ((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E))))) ==> (((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 * part cyfan c, f2 c, f3 f4 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c==> c/\ cFAN c, f2 c, f3 f4 c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 * part cyfan c, f2 c, f3 f4 c/\ cIN f5 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 cSUBSET * part cclosed_segment cCONS c, f5 f1 cNIL * part cyfan c, f2 c, f3 f4 c/\ cSUBSET * part cclosed_segment cCONS c, f5 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f5 f1 cNIL f5 f1
+ ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) |- (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) /\ (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))
T c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 c/\ c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (!V. (!E. (!y. (!z. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET (yfan (x , (V , E)))))))))) ==> ((\x. (!V. (!E. (!y. (!z. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET (yfan (x , (V , E)))))))))) x)) = ((\x. (!V. (!E. (!y. (!z. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET (yfan (x , (V , E)))))))))) x))
T c= c==> ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b5 creal_lt b5 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b3 c% b5 b4 * part cyfan c, b0 c, b1 b2 cSUBSET * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * part cyfan c, b0 c, b1 b2 * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b5 creal_lt b5 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b3 c% b5 b4 * part cyfan c, b0 c, b1 b2 cSUBSET * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * part cyfan c, b0 c, b1 b2 f0 * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b5 creal_lt b5 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b3 c% b5 b4 * part cyfan c, b0 c, b1 b2 cSUBSET * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * part cyfan c, b0 c, b1 b2 f0
+ |- ((!x'. (((((connected_component (yfan (x , (V , E)))) y') x') \/ (~ (((connected_component (yfan (x , (V , E)))) z) x'))) /\ ((~ (((connected_component (yfan (x , (V , E)))) y') x')) \/ (((connected_component (yfan (x , (V , E)))) z) x')))) = ((!x'. ((((connected_component (yfan (x , (V , E)))) y') x') \/ (~ (((connected_component (yfan (x , (V , E)))) z) x')))) /\ (!x'. ((~ (((connected_component (yfan (x , (V , E)))) y') x')) \/ (((connected_component (yfan (x , (V , E)))) z) x')))))
T c= ! c/\ c\/ cconnected_component * part cyfan c, f0 c, f1 f2 f3 b0 c~ cconnected_component * part cyfan c, f0 c, f1 f2 f4 b0 c\/ c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 b0 cconnected_component * part cyfan c, f0 c, f1 f2 f4 b0 c/\ ! c\/ cconnected_component * part cyfan c, f0 c, f1 f2 f3 b0 c~ cconnected_component * part cyfan c, f0 c, f1 f2 f4 b0 ! c\/ c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 b0 cconnected_component * part cyfan c, f0 c, f1 f2 f4 b0
- |- ((~ (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (u $ i))) = (u $ i))) ==> F)
T c==> c~ c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 c$ f2 f1 cF
+ |- ((\t. (!x'. (((x' IN t) /\ ((connected t) /\ (t SUBSET (yfan (x , (V , E)))))) ==> (t SUBSET ((connected_component (yfan (x , (V , E)))) x'))))) ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))))
T * / ! c==> c/\ cIN b1 b0 c/\ cconnected b0 cSUBSET b0 * part cyfan c, f0 c, f1 f2 cSUBSET b0 * * part cconnected_component * part cyfan c, f0 c, f1 f2 b1 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E))))))), (U IN (topological_component_yfan (x , (V , E)))), (z IN U) |- (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET U)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f3 c% b0 f4 * part cyfan c, f2 c, f0 f1 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f0 f1 c==> cIN f4 f5 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5
- |- (((!y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))) ==> ((\y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))) y)) = ((\y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))) y))
T c= c==> ! ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b2 cconnected_component * part cyfan c, f0 c, f2 f3 b1 b2 ! c= cconnected_component * part cyfan c, f0 c, f2 f3 b1 b2 cconnected_component * part cyfan c, f0 c, f2 f3 f1 b2 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b2 cconnected_component * part cyfan c, f0 c, f2 f3 f1 b2 cF * / ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b2 cconnected_component * part cyfan c, f0 c, f2 f3 b1 b2 ! c= cconnected_component * part cyfan c, f0 c, f2 f3 b1 b2 cconnected_component * part cyfan c, f0 c, f2 f3 f1 b2 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b2 cconnected_component * part cyfan c, f0 c, f2 f3 f1 b2 cF f4 * / ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b2 cconnected_component * part cyfan c, f0 c, f2 f3 b1 b2 ! c= cconnected_component * part cyfan c, f0 c, f2 f3 b1 b2 cconnected_component * part cyfan c, f0 c, f2 f3 f1 b2 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b2 cconnected_component * part cyfan c, f0 c, f2 f3 f1 b2 cF f4
+ |- (((!s. (!t. (!x. (!y. (((s SUBSET t) /\ (((connected_component s) x) y)) ==> (((connected_component t) x) y)))))) ==> ((\s. (!t. (!x. (!y. (((s SUBSET t) /\ (((connected_component s) x) y)) ==> (((connected_component t) x) y)))))) (closed_segment ((CONS (y' , z)) NIL)))) = ((\s. (!t. (!x. (!y. (((s SUBSET t) /\ (((connected_component s) x) y)) ==> (((connected_component t) x) y)))))) (closed_segment ((CONS (y' , z)) NIL))))
T c= c==> ! ! ! ! c==> c/\ cSUBSET b0 b1 cconnected_component b0 b2 b3 cconnected_component b1 b2 b3 * / ! ! ! c==> c/\ cSUBSET b0 b1 cconnected_component b0 b2 b3 cconnected_component b1 b2 b3 * part cclosed_segment cCONS c, f0 f1 cNIL * / ! ! ! c==> c/\ cSUBSET b0 b1 cconnected_component b0 b2 b3 cconnected_component b1 b2 b3 * part cclosed_segment cCONS c, f0 f1 cNIL
+ |- (((convex ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))) = (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)))
T c= c==> cconvex * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2
+ (z IN (yfan (x , (V , E)))) |- ((((connected_component (yfan (x , (V , E)))) y') z) = ((z IN (yfan (x , (V , E)))) /\ (((connected_component (yfan (x , (V , E)))) y') z)))
T c==> cIN f0 * part cyfan c, f1 c, f2 f3 c= cconnected_component * part cyfan c, f1 c, f2 f3 f4 f0 c/\ cIN f0 * part cyfan c, f1 c, f2 f3 cconnected_component * part cyfan c, f1 c, f2 f3 f4 f0
- (((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)), ((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)) ==> (((connected_component (yfan (x , (V , E)))) y') z)) |- ((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)) /\ (((connected_component (yfan (x , (V , E)))) y') z))
T c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1 c==> c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f0 f1 c/\ c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f0 f1
- (((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)), ((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)) ==> (((connected_component (yfan (x , (V , E)))) y') z)) |- (((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)) ==> (((connected_component (yfan (x , (V , E)))) y') z)) /\ (((connected_component (yfan (x , (V , E)))) y') z))
T c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1 c==> c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f0 f1 c/\ c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f0 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f0 f1
+ |- (((!U. (!z. (((FAN (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U))) ==> (U = ((connected_component (yfan (x , (V , E)))) z))))) ==> ((\U. (!z. (((FAN (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U))) ==> (U = ((connected_component (yfan (x , (V , E)))) z))))) U)) = ((\U. (!z. (((FAN (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U))) ==> (U = ((connected_component (yfan (x , (V , E)))) z))))) U))
T c= c==> ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN b0 * part ctopological_component_yfan c, f0 c, f1 f2 cIN b1 b0 c= b0 * * part cconnected_component * part cyfan c, f0 c, f1 f2 b1 * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN b0 * part ctopological_component_yfan c, f0 c, f1 f2 cIN b1 b0 c= b0 * * part cconnected_component * part cyfan c, f0 c, f1 f2 b1 f3 * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN b0 * part ctopological_component_yfan c, f0 c, f1 f2 cIN b1 b0 c= b0 * * part cconnected_component * part cyfan c, f0 c, f1 f2 b1 f3
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- ((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)) ==> (((connected_component (yfan (x , (V , E)))) y') z)) |- (((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)) ==> (((connected_component (yfan (x , (V , E)))) y') z)) = T)
T c==> c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f0 f1 c= c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f0 f1 cT
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- ((\x. (!y. ((((connected_component s) x) = ((connected_component s) y)) = (((~ (x IN s)) /\ (~ (y IN s))) \/ ((x IN s) /\ ((y IN s) /\ (((connected_component s) x) y))))))) x)
T * / ! c= c= * * part cconnected_component f0 b0 * * part cconnected_component f0 b1 c\/ c/\ c~ cIN b0 f0 c~ cIN b1 f0 c/\ cIN b0 f0 c/\ cIN b1 f0 cconnected_component f0 b0 b1 f1
+ |- ((\s. ((convex s) ==> (connected s))) ((hull convex) (y' INSERT (z INSERT EMPTY))))
T * / c==> cconvex b0 cconnected b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (z IN U), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- ((((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) ==> (?y'. (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f1 f5 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / cIN b0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1
- |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
- |- ((!V. (!x. (!y. (!y'. (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x')))))))) = T)
T c= ! ! ! ! c==> c/\ ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 part cEMPTY b4 cconnected_component * part cyfan c, b1 c, b0 f1 b3 b4 ! c= cconnected_component * part cyfan c, b1 c, b0 f1 b3 b4 cconnected_component * part cyfan c, b1 c, b0 f1 f0 b4 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 part cEMPTY b4 cconnected_component * part cyfan c, b1 c, b0 f1 f0 b4 cT
+ |- ((((convex ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> (connected ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))) = (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)))
T c= c==> c==> cconvex * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cconnected * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2
- |- (((!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)) ==> ((\y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)) y')) = ((\y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)) y'))
T c= c==> ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cconnected_component * part cyfan c, f0 c, f3 f4 b0 b1 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 b0 b1 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b1 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b1 cF * / c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cconnected_component * part cyfan c, f0 c, f3 f4 b0 b1 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 b0 b1 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b1 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b1 cF f5 * / c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cconnected_component * part cyfan c, f0 c, f3 f4 b0 b1 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 b0 b1 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b1 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b1 cF f5
+ |- ((\x'. (!y. ((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) x') y)) ==> (((connected_component (yfan (x , (V , E)))) x') y)))) y')
T * / ! c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL b0 b1 cconnected_component * part cyfan c, f2 c, f3 f4 b0 b1 f0
+ |- ((\E. (!y. (!z. (!w. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ ((z IN (yfan (x , (V , E)))) /\ ((w IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))))) ==> ((closed_segment ((CONS (w , z)) NIL)) SUBSET (yfan (x , (V , E))))))))) E)
T * / ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b2 * part cyfan c, f0 c, f1 b0 c/\ cIN b3 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt b4 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b1 c% b4 b2 * part cyfan c, f0 c, f1 b0 cSUBSET * part cclosed_segment cCONS c, b3 b2 cNIL * part cyfan c, f0 c, f1 b0 f2
+ |- (((!x. (!V. (!E. (!y. (!z. (!w. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ ((w IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E))))))))) ==> (w IN (yfan (x , (V , E))))))))))) ==> ((\x. (!V. (!E. (!y. (!z. (!w. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ ((w IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E))))))))) ==> (w IN (yfan (x , (V , E))))))))))) x)) = ((\x. (!V. (!E. (!y. (!z. (!w. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ ((w IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E))))))))) ==> (w IN (yfan (x , (V , E))))))))))) x))
T c= c==> ! ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN b5 * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b6 creal_lt b6 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b6 b3 c% b6 b4 * part cyfan c, b0 c, b1 b2 cIN b5 * part cyfan c, b0 c, b1 b2 * / ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN b5 * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b6 creal_lt b6 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b6 b3 c% b6 b4 * part cyfan c, b0 c, b1 b2 cIN b5 * part cyfan c, b0 c, b1 b2 f0 * / ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cIN b5 * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b6 creal_lt b6 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b6 b3 c% b6 b4 * part cyfan c, b0 c, b1 b2 cIN b5 * part cyfan c, b0 c, b1 b2 f0
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (z IN U), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- ((y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f1 f5 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f6 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1
+ ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) |- ((\x'. ((~ (((connected_component (yfan (x , (V , E)))) y') x')) \/ (((connected_component (yfan (x , (V , E)))) z) x'))) _3017189)
T c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 * / c\/ c~ cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 f6
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))
T cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
+ |- (((!t. (convex ((aff_gt (x INSERT EMPTY)) t))) ==> ((\t. (convex ((aff_gt (x INSERT EMPTY)) t))) (y INSERT (z INSERT EMPTY)))) = ((\t. (convex ((aff_gt (x INSERT EMPTY)) t))) (y INSERT (z INSERT EMPTY))))
T c= c==> ! cconvex * * part caff_gt * * part cINSERT f0 part cEMPTY b0 * / cconvex * * part caff_gt * * part cINSERT f0 part cEMPTY b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * / cconvex * * part caff_gt * * part cINSERT f0 part cEMPTY b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((~ (((connected_component (yfan (x , (V , E)))) z) x')) ==> F) = (((connected_component (yfan (x , (V , E)))) z) x'))
T c= c==> c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4 cF cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ ((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c==> c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)) ==> (((connected_component (yfan (x , (V , E)))) y') z)) |- (((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)) ==> (((connected_component (yfan (x , (V , E)))) y') z)) /\ ((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)) ==> (((connected_component (yfan (x , (V , E)))) y') z)))
T c==> c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f0 f1 c/\ c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f0 f1 c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f0 f1
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (z IN U), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- (((\y'. (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))))) y') ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f1 f5 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> * / cIN b0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f6 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))) |- (((~ (E = EMPTY)) ==> ((z IN (yfan (x , (V , E)))) /\ (((connected_component (yfan (x , (V , E)))) y') z))) = ((((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (FAN (x , (V , E)))) ==> (~ (E = EMPTY))) ==> ((z IN (yfan (x , (V , E)))) /\ (((connected_component (yfan (x , (V , E)))) y') z))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c= c==> c~ c= f1 part cEMPTY c/\ cIN f3 * part cyfan c, f2 c, f0 f1 cconnected_component * part cyfan c, f2 c, f0 f1 f4 f3 c==> c==> c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 cFAN c, f2 c, f0 f1 c~ c= f1 part cEMPTY c/\ cIN f3 * part cyfan c, f2 c, f0 f1 cconnected_component * part cyfan c, f2 c, f0 f1 f4 f3
+ (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F), (((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) |- F
T c==> c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF c==> c\/ creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((!V. (!E. (!y. (!z. (!w. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ ((w IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E))))))))) ==> (w IN (yfan (x , (V , E)))))))))) ==> ((\V. (!E. (!y. (!z. (!w. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ ((w IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E))))))))) ==> (w IN (yfan (x , (V , E)))))))))) V)) = ((\V. (!E. (!y. (!z. (!w. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ ((w IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E))))))))) ==> (w IN (yfan (x , (V , E)))))))))) V))
T c= c==> ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN b4 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b5 creal_lt b5 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b2 c% b5 b3 * part cyfan c, f0 c, b0 b1 cIN b4 * part cyfan c, f0 c, b0 b1 * / ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN b4 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b5 creal_lt b5 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b2 c% b5 b3 * part cyfan c, f0 c, b0 b1 cIN b4 * part cyfan c, f0 c, b0 b1 f1 * / ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cIN b4 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b5 creal_lt b5 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b2 c% b5 b3 * part cyfan c, f0 c, b0 b1 cIN b4 * part cyfan c, f0 c, b0 b1 f1
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (convex ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (z IN U), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- ((convex ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> cconvex * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f6 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f5 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cconvex * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1
+ (FAN (x , (V , E))), ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ ((z IN U) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E))))))))))) |- (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET U)
T c==> cFAN c, f0 c, f1 f2 c==> c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part ctopological_component_yfan c, f0 c, f1 f2 c/\ cIN f4 f3 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f5 c% b0 f4 * part cyfan c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY f3
+ |- (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) = T)
T c= creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cT
+ |- (((!V. (!E. (!U. (!z. (((FAN (x , (V , E))) /\ ((~ (E = EMPTY)) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U)))) ==> (z IN (yfan (x , (V , E))))))))) ==> ((\V. (!E. (!U. (!z. (((FAN (x , (V , E))) /\ ((~ (E = EMPTY)) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U)))) ==> (z IN (yfan (x , (V , E))))))))) V)) = ((\V. (!E. (!U. (!z. (((FAN (x , (V , E))) /\ ((~ (E = EMPTY)) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U)))) ==> (z IN (yfan (x , (V , E))))))))) V))
T c= c==> ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ c~ c= b1 part cEMPTY c/\ cIN b2 * part ctopological_component_yfan c, f0 c, b0 b1 cIN b3 b2 cIN b3 * part cyfan c, f0 c, b0 b1 * / ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ c~ c= b1 part cEMPTY c/\ cIN b2 * part ctopological_component_yfan c, f0 c, b0 b1 cIN b3 b2 cIN b3 * part cyfan c, f0 c, b0 b1 f1 * / ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ c~ c= b1 part cEMPTY c/\ cIN b2 * part ctopological_component_yfan c, f0 c, b0 b1 cIN b3 b2 cIN b3 * part cyfan c, f0 c, b0 b1 f1
+ |- (((!y. ((((connected_component s) x) = ((connected_component s) y)) = (((~ (x IN s)) /\ (~ (y IN s))) \/ ((x IN s) /\ ((y IN s) /\ (((connected_component s) x) y)))))) ==> ((\y. ((((connected_component s) x) = ((connected_component s) y)) = (((~ (x IN s)) /\ (~ (y IN s))) \/ ((x IN s) /\ ((y IN s) /\ (((connected_component s) x) y)))))) y)) = ((\y. ((((connected_component s) x) = ((connected_component s) y)) = (((~ (x IN s)) /\ (~ (y IN s))) \/ ((x IN s) /\ ((y IN s) /\ (((connected_component s) x) y)))))) y))
T c= c==> ! c= c= * * part cconnected_component f0 f1 * * part cconnected_component f0 b0 c\/ c/\ c~ cIN f1 f0 c~ cIN b0 f0 c/\ cIN f1 f0 c/\ cIN b0 f0 cconnected_component f0 f1 b0 * / c= c= * * part cconnected_component f0 f1 * * part cconnected_component f0 b0 c\/ c/\ c~ cIN f1 f0 c~ cIN b0 f0 c/\ cIN f1 f0 c/\ cIN b0 f0 cconnected_component f0 f1 b0 f2 * / c= c= * * part cconnected_component f0 f1 * * part cconnected_component f0 b0 c\/ c/\ c~ cIN f1 f0 c~ cIN b0 f0 c/\ cIN f1 f0 c/\ cIN b0 f0 cconnected_component f0 f1 b0 f2
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (z IN U), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- ((z IN (yfan (x , (V , E)))) /\ (((connected_component (yfan (x , (V , E)))) y') z))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f6 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f5 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 * part cyfan c, f2 c, f3 f4 cconnected_component * part cyfan c, f2 c, f3 f4 f6 f1
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (z IN U), (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f6 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f5 c==> cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f6 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ (((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) |- F
T c==> c\/ creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)) ==> (((connected_component (yfan (x , (V , E)))) y') z))
T c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f0 f1
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x')))) = (((!x'. ((x' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> (x' IN ((connected_component (yfan (x , (V , E)))) y')))) /\ (!x'. ((x' IN ((connected_component (yfan (x , (V , E)))) y')) = (x' IN ((connected_component (yfan (x , (V , E)))) z))))) ==> (!x'. ((x' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> (x' IN ((connected_component (yfan (x , (V , E)))) z))))))
T c= c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 c==> c/\ ! c==> cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 ! c= cIN b0 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 cIN b0 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 ! c==> cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2
+ (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (z IN U) |- (((U = ((connected_component (yfan (x , (V , E)))) z)) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET U)) = ((((FAN (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U))) ==> (U = ((connected_component (yfan (x , (V , E)))) z))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET U)))
T c==> cFAN c, f0 c, f1 f2 c==> cIN f3 * part ctopological_component_yfan c, f0 c, f1 f2 c==> cIN f4 f3 c= c==> c= f3 * * part cconnected_component * part cyfan c, f0 c, f1 f2 f4 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY f3 c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN f3 * part ctopological_component_yfan c, f0 c, f1 f2 cIN f4 f3 c= f3 * * part cconnected_component * part cyfan c, f0 c, f1 f2 f4 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY f3
+ |- (((!b. ((closed_segment ((CONS (a , b)) NIL)) = ((hull convex) (a INSERT (b INSERT EMPTY))))) ==> ((\b. ((closed_segment ((CONS (a , b)) NIL)) = ((hull convex) (a INSERT (b INSERT EMPTY))))) b)) = ((\b. ((closed_segment ((CONS (a , b)) NIL)) = ((hull convex) (a INSERT (b INSERT EMPTY))))) b))
T c= c==> ! c= * part cclosed_segment cCONS c, f0 b0 cNIL * * part chull part cconvex * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / c= * part cclosed_segment cCONS c, f0 b0 cNIL * * part chull part cconvex * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1 * / c= * part cclosed_segment cCONS c, f0 b0 cNIL * * part chull part cconvex * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (U = ((connected_component (yfan (x , (V , E)))) z)), (U IN (topological_component_yfan (x , (V , E)))), (z IN U), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- ((U = ((connected_component (yfan (x , (V , E)))) z)) /\ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET U))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f3 f4 c==> c= f5 * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f1 f5 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c= f5 * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f5
+ |- (convex ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))))
T cconvex * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) |- ((((connected_component (yfan (x , (V , E)))) y') _3017188) \/ (~ (((connected_component (yfan (x , (V , E)))) z) _3017188)))
T c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 c\/ cconnected_component * part cyfan c, f0 c, f3 f4 f5 f6 c~ cconnected_component * part cyfan c, f0 c, f3 f4 f2 f6
- (((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))) |- ((((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))) /\ (((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))))
T c==> c==> c/\ cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 c= * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 c/\ c==> c/\ cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 c= * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 c==> c/\ cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 c= * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2
+ |- (((!x'. (!y. ((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) x') y)) ==> (((connected_component (yfan (x , (V , E)))) x') y)))) ==> ((\x'. (!y. ((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) x') y)) ==> (((connected_component (yfan (x , (V , E)))) x') y)))) y')) = ((\x'. (!y. ((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) x') y)) ==> (((connected_component (yfan (x , (V , E)))) x') y)))) y'))
T c= c==> ! ! c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL b0 b1 cconnected_component * part cyfan c, f2 c, f3 f4 b0 b1 * / ! c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL b0 b1 cconnected_component * part cyfan c, f2 c, f3 f4 b0 b1 f0 * / ! c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL b0 b1 cconnected_component * part cyfan c, f2 c, f3 f4 b0 b1 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (u $ i))) = (u $ i)) = (((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) $ i)) ((lambdai. ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (u $ i))) $ i))) $ i) = (u $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c$ f1 f0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f0 c$ f2 f0 c= c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c$ f1 b1 b0 c$ clambda / creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f2 b1 b0 f0 c$ f2 f0
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ |- ((!z. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ ((z IN U) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET U))) = T)
T c= ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 c/\ cIN f3 * part ctopological_component_yfan c, f0 c, f1 f2 c/\ cIN b0 f3 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT b0 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt b1 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 f4 c% b1 b0 * part cyfan c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f3 cT
- |- ((?y'. t) = t)
T c= c? / f0 f0
+ |- ((\z. (((FAN (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U))) ==> (U = ((connected_component (yfan (x , (V , E)))) z)))) z)
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN f3 * part ctopological_component_yfan c, f0 c, f1 f2 cIN b0 f3 c= f3 * * part cconnected_component * part cyfan c, f0 c, f1 f2 b0 f4
+ |- ((!V. (!E. (!U. (!y. (!z. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ ((z IN U) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET U))))))) = T)
T c= ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ ! c==> cIN b5 b0 c> cCARD * * * part cset_of_edge b5 b0 b1 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, b0 b1 c/\ cIN b2 * part ctopological_component_yfan c, f0 c, b0 b1 c/\ cIN b4 b2 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b5 creal_lt b5 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b3 c% b5 b4 * part cyfan c, f0 c, b0 b1 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 cT
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (z IN U), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- ((y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f6 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f5 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f6 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1
+ (convex ((hull convex) (y' INSERT (z INSERT EMPTY)))) |- ((convex ((hull convex) (y' INSERT (z INSERT EMPTY)))) = T)
T c==> cconvex * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= cconvex * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
+ (z IN U) |- ((z IN U) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
+ (z IN (yfan (x , (V , E)))) |- ((z IN (yfan (x , (V , E)))) = T)
T c==> cIN f0 * part cyfan c, f1 c, f2 f3 c= cIN f0 * part cyfan c, f1 c, f2 f3 cT
+ ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) |- (((!x'. ((~ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x')) \/ (((connected_component (yfan (x , (V , E)))) y') x'))) ==> ((\x'. ((~ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x')) \/ (((connected_component (yfan (x , (V , E)))) y') x'))) _3017187)) = ((\x'. ((~ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x')) \/ (((connected_component (yfan (x , (V , E)))) y') x'))) _3017187))
T c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 c= c==> ! c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 * / c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 f6 * / c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 f6
+ (convex ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) |- ((convex ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) = T)
T c==> cconvex * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cconvex * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ (U = ((connected_component (yfan (x , (V , E)))) z)) |- ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)) = (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET U))
T c==> c= f0 * * part cconnected_component * part cyfan c, f1 c, f2 f3 f4 c= cSUBSET * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * * part cconnected_component * part cyfan c, f1 c, f2 f3 f4 cSUBSET * * part caff_gt * * part cINSERT f1 part cEMPTY * * part cINSERT f5 * * part cINSERT f4 part cEMPTY f0
- ((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))), (((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z)) |- (((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) /\ (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z))
T c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1 c/\ c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1
- (((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z)) |- ((((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z)) /\ (((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z)))
T c==> c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1 c/\ c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1 c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1
- ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z))), (((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))) |- (((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z))) /\ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)))
T c==> c/\ cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 c= * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 c==> c==> c/\ cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 c= * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 c/\ c/\ cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 c= * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2
+ |- (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z)
T cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1
+ |- (((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) ==> (((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)))
T c==> cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (u $ i))) = (u $ i))) ==> F) ==> (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (u $ i))) = (u $ i))) = (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (u $ i))) = (u $ i)))
T c= c==> c==> c~ c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 c$ f2 f1 cF c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 c$ f2 f1 c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 c$ f2 f1
+ |- ((\y. ((((connected_component s) x) = ((connected_component s) y)) = (((~ (x IN s)) /\ (~ (y IN s))) \/ ((x IN s) /\ ((y IN s) /\ (((connected_component s) x) y)))))) y)
T * / c= c= * * part cconnected_component f0 f1 * * part cconnected_component f0 b0 c\/ c/\ c~ cIN f1 f0 c~ cIN b0 f0 c/\ cIN f1 f0 c/\ cIN b0 f0 cconnected_component f0 f1 b0 f2
+ |- ((\v. (!u. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) ==> (?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))) y)
T * / ! c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c? / cIN b2 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
+ |- ((convex ((hull convex) (y' INSERT (z INSERT EMPTY)))) ==> (connected ((hull convex) (y' INSERT (z INSERT EMPTY)))))
T c==> cconvex * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- (T = (((~ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) _3017187)) \/ (((connected_component (yfan (x , (V , E)))) y') _3017187)) = ((((connected_component (yfan (x , (V , E)))) y') _3017187) \/ (~ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) _3017187)))))
T c= cT c= c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cconnected_component * part cyfan c, f0 c, f4 f5 f6 f3 c\/ cconnected_component * part cyfan c, f0 c, f4 f5 f6 f3 c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) v)) ((% (real_of_num (NUMERAL _0))) u)) $ i) = (v $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f1 c% creal_of_num cNUMERAL c_0 f2 f0 c$ f1 f0
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (y' IN (yfan (x , (V , E)))), (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (z IN U), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- (((~ (y' IN (yfan (x , (V , E))))) /\ (~ (z IN (yfan (x , (V , E)))))) \/ ((y' IN (yfan (x , (V , E)))) /\ ((z IN (yfan (x , (V , E)))) /\ (((connected_component (yfan (x , (V , E)))) y') z))))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f6 * part cyfan c, f2 c, f3 f4 c==> cIN f6 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f5 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c/\ c~ cIN f6 * part cyfan c, f2 c, f3 f4 c~ cIN f1 * part cyfan c, f2 c, f3 f4 c/\ cIN f6 * part cyfan c, f2 c, f3 f4 c/\ cIN f1 * part cyfan c, f2 c, f3 f4 cconnected_component * part cyfan c, f2 c, f3 f4 f6 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\y. (!z. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET (yfan (x , (V , E))))))) y)
T * / ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b2 creal_lt b2 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b0 c% b2 b1 * part cyfan c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * part cyfan c, f0 c, f1 f2 f3
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (FAN (x , (V , E))), (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (z IN (yfan (x , (V , E)))), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- (((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 * part cyfan c, f2 c, f3 f4 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cSUBSET * part cclosed_segment cCONS c, f5 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f5 f1 cNIL f5 f1
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (z IN U), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))), ((\y'. (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))))) y') |- (((\y'. (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))))) y') /\ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f1 f5 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> * / cIN b0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f6 c/\ * / cIN b0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f6 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E))))))), (U IN (topological_component_yfan (x , (V , E)))), (z IN U), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET U)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f3 c% b0 f4 * part cyfan c, f2 c, f0 f1 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f0 f1 c==> cIN f4 f5 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5
+ |- (((!z. (((FAN (x , (V , E))) /\ ((~ (E = EMPTY)) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U)))) ==> (z IN (yfan (x , (V , E)))))) ==> ((\z. (((FAN (x , (V , E))) /\ ((~ (E = EMPTY)) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U)))) ==> (z IN (yfan (x , (V , E)))))) z)) = ((\z. (((FAN (x , (V , E))) /\ ((~ (E = EMPTY)) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U)))) ==> (z IN (yfan (x , (V , E)))))) z))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ c~ c= f2 part cEMPTY c/\ cIN f3 * part ctopological_component_yfan c, f0 c, f1 f2 cIN b0 f3 cIN b0 * part cyfan c, f0 c, f1 f2 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ c~ c= f2 part cEMPTY c/\ cIN f3 * part ctopological_component_yfan c, f0 c, f1 f2 cIN b0 f3 cIN b0 * part cyfan c, f0 c, f1 f2 f4 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ c~ c= f2 part cEMPTY c/\ cIN f3 * part ctopological_component_yfan c, f0 c, f1 f2 cIN b0 f3 cIN b0 * part cyfan c, f0 c, f1 f2 f4
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (v $ i))) ((real_mul (real_of_num (NUMERAL _0))) (u $ i))) = (v $ i)) = (((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (v $ i))) $ i)) ((lambdai. ((real_mul (real_of_num (NUMERAL _0))) (u $ i))) $ i))) $ i) = (v $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 f0 creal_mul creal_of_num cNUMERAL c_0 c$ f2 f0 c$ f1 f0 c= c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 b1 b0 c$ clambda / creal_mul creal_of_num cNUMERAL c_0 c$ f2 b1 b0 f0 c$ f1 f0
+ |- (((!x'. ((x' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> (x' IN ((connected_component (yfan (x , (V , E)))) y')))) /\ (!x'. ((x' IN ((connected_component (yfan (x , (V , E)))) y')) = (x' IN ((connected_component (yfan (x , (V , E)))) z))))) ==> (!x'. ((x' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> (x' IN ((connected_component (yfan (x , (V , E)))) z)))))
T c==> c/\ ! c==> cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 ! c= cIN b0 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 cIN b0 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 ! c==> cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- (((!t. (!x'. (((x' IN t) /\ ((connected t) /\ (t SUBSET (yfan (x , (V , E)))))) ==> (t SUBSET ((connected_component (yfan (x , (V , E)))) x'))))) ==> ((\t. (!x'. (((x' IN t) /\ ((connected t) /\ (t SUBSET (yfan (x , (V , E)))))) ==> (t SUBSET ((connected_component (yfan (x , (V , E)))) x'))))) ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))))) = ((\t. (!x'. (((x' IN t) /\ ((connected t) /\ (t SUBSET (yfan (x , (V , E)))))) ==> (t SUBSET ((connected_component (yfan (x , (V , E)))) x'))))) ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))))
T c= c==> ! ! c==> c/\ cIN b1 b0 c/\ cconnected b0 cSUBSET b0 * part cyfan c, f0 c, f1 f2 cSUBSET b0 * * part cconnected_component * part cyfan c, f0 c, f1 f2 b1 * / ! c==> c/\ cIN b1 b0 c/\ cconnected b0 cSUBSET b0 * part cyfan c, f0 c, f1 f2 cSUBSET b0 * * part cconnected_component * part cyfan c, f0 c, f1 f2 b1 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * / ! c==> c/\ cIN b1 b0 c/\ cconnected b0 cSUBSET b0 * part cyfan c, f0 c, f1 f2 cSUBSET b0 * * part cconnected_component * part cyfan c, f0 c, f1 f2 b1 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) $ i)) ((lambdai. ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (u $ i))) $ i))) $ i) = (u $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c$ f1 b1 b0 c$ clambda / creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f2 b1 b0 f0 c$ f2 f0
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (FAN (x , (V , E))), (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (z IN (yfan (x , (V , E)))), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- (((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)) ==> (((connected_component (yfan (x , (V , E)))) y') z)) = (((connected_component (yfan (x , (V , E)))) y') z))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 * part cyfan c, f2 c, f3 f4 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c==> c/\ cSUBSET * part cclosed_segment cCONS c, f5 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f5 f1 cNIL f5 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f5 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f5 f1
+ |- (((!v. (!u. (!s. ((((real_le (real_of_num (NUMERAL _0))) s) /\ ((real_le s) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) s)) v)) ((% s) u)) IN ((hull convex) (v INSERT (u INSERT EMPTY)))))))) ==> ((\v. (!u. (!s. ((((real_le (real_of_num (NUMERAL _0))) s) /\ ((real_le s) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) s)) v)) ((% s) u)) IN ((hull convex) (v INSERT (u INSERT EMPTY)))))))) y')) = ((\v. (!u. (!s. ((((real_le (real_of_num (NUMERAL _0))) s) /\ ((real_le s) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) s)) v)) ((% s) u)) IN ((hull convex) (v INSERT (u INSERT EMPTY)))))))) y'))
T c= c==> ! ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b0 c% b2 b1 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b0 c% b2 b1 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 * / ! ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 b2 creal_le b2 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b0 c% b2 b1 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
+ |- ((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) ==> ((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))))
T c==> cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (!x. (!y. (((x IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) x) y)))) |- ((\y. (((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') y))) z)
T c==> ! ! c==> c/\ cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 b1 * / c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 b0 f1
+ |- ((~ (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ ((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)
T c==> c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ ((y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E))))))))) ==> (y' IN (yfan (x , (V , E))))) ==> (((~ (y' IN (yfan (x , (V , E))))) /\ (~ (z IN (yfan (x , (V , E)))))) \/ ((y' IN (yfan (x , (V , E)))) /\ ((z IN (yfan (x , (V , E)))) /\ (((connected_component (yfan (x , (V , E)))) y') z))))) = (((~ (y' IN (yfan (x , (V , E))))) /\ (~ (z IN (yfan (x , (V , E)))))) \/ ((y' IN (yfan (x , (V , E)))) /\ ((z IN (yfan (x , (V , E)))) /\ (((connected_component (yfan (x , (V , E)))) y') z)))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cIN f5 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f3 c% b0 f4 * part cyfan c, f0 c, f1 f2 cIN f5 * part cyfan c, f0 c, f1 f2 c\/ c/\ c~ cIN f5 * part cyfan c, f0 c, f1 f2 c~ cIN f4 * part cyfan c, f0 c, f1 f2 c/\ cIN f5 * part cyfan c, f0 c, f1 f2 c/\ cIN f4 * part cyfan c, f0 c, f1 f2 cconnected_component * part cyfan c, f0 c, f1 f2 f5 f4 c\/ c/\ c~ cIN f5 * part cyfan c, f0 c, f1 f2 c~ cIN f4 * part cyfan c, f0 c, f1 f2 c/\ cIN f5 * part cyfan c, f0 c, f1 f2 c/\ cIN f4 * part cyfan c, f0 c, f1 f2 cconnected_component * part cyfan c, f0 c, f1 f2 f5 f4
- ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) |- ((((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)) ==> ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c==> c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF
+ |- ((\E. (!U. (!z. (((FAN (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U))) ==> (U = ((connected_component (yfan (x , (V , E)))) z)))))) E)
T * / ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN b1 * part ctopological_component_yfan c, f0 c, f1 b0 cIN b2 b1 c= b1 * * part cconnected_component * part cyfan c, f0 c, f1 b0 b2 f2
+ |- ((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (z IN U), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- ((U = ((connected_component (yfan (x , (V , E)))) z)) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET U))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f1 f5 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= f5 * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f5
+ (connected ((hull convex) (y' INSERT (z INSERT EMPTY)))) |- ((connected ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z))
T c==> cconnected * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cconnected * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1
+ ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) |- ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))
T c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 cconnected_component * part cyfan c, f0 c, f3 f4 f2 f6
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cIN f2 f0 c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0
- ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z))) |- ((((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)))
T c==> c/\ cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 c= * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 c==> c==> c/\ cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 c= * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2
+ |- ((\s. ((((real_le (real_of_num (NUMERAL _0))) s) /\ ((real_le s) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) s)) y')) ((% s) z)) IN ((hull convex) (y' INSERT (z INSERT EMPTY)))))) (real_of_num (NUMERAL _0)))
T * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_of_num cNUMERAL c_0
+ |- ((\s. (convex ((hull convex) s))) (y' INSERT (z INSERT EMPTY)))
T * / cconvex * * part chull part cconvex b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (z IN U), (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- ((((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))) = (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f6 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f5 c==> cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f6 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c==> c/\ cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f6 c= * * part cconnected_component * part cyfan c, f2 c, f3 f4 f6 * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1 cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- (((!V. (!E. (!y. (!z. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET (yfan (x , (V , E))))))))) ==> ((\V. (!E. (!y. (!z. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET (yfan (x , (V , E))))))))) V)) = ((\V. (!E. (!y. (!z. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET (yfan (x , (V , E))))))))) V))
T c= c==> ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt b4 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b2 c% b4 b3 * part cyfan c, f0 c, b0 b1 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * part cyfan c, f0 c, b0 b1 * / ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt b4 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b2 c% b4 b3 * part cyfan c, f0 c, b0 b1 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * part cyfan c, f0 c, b0 b1 f1 * / ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt b4 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b2 c% b4 b3 * part cyfan c, f0 c, b0 b1 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * part cyfan c, f0 c, b0 b1 f1
- |- ((real_neg ((real_sub ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (u $ i)))) (u $ i))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 c$ f2 f1 creal_of_num cNUMERAL c_0
+ |- ((((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z)) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z))
T c==> c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1 cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1
+ |- ((((~ (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ ((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> F) ==> (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ ((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ ((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c==> c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cF c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) |- ((!x'. ((((connected_component (yfan (x , (V , E)))) y') x') \/ (~ (((connected_component (yfan (x , (V , E)))) z) x')))) /\ (!x'. ((~ (((connected_component (yfan (x , (V , E)))) y') x')) \/ (((connected_component (yfan (x , (V , E)))) z) x'))))
T c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 c/\ ! c\/ cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 c~ cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c\/ c~ cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) $ i)) ((lambdai. ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (u $ i))) $ i))) $ i) = (u $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c$ f1 b1 b0 c$ clambda / creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f2 b1 b0 f0 c$ f2 f0
- (fan80 (x , (V , E))) |- ((fan80 (x , (V , E))) = T)
T c==> cfan80 c, f0 c, f1 f2 c= cfan80 c, f0 c, f1 f2 cT
+ ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))), (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') |- (((((connected_component (yfan (x , (V , E)))) y') x') ==> (((connected_component (yfan (x , (V , E)))) z) x')) = (((connected_component (yfan (x , (V , E)))) z) x'))
T c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c= c==> cconnected_component * part cyfan c, f0 c, f3 f4 f5 f6 cconnected_component * part cyfan c, f0 c, f3 f4 f2 f6 cconnected_component * part cyfan c, f0 c, f3 f4 f2 f6
+ |- ((!E. (!U. (!y. (!z. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ ((z IN U) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET U)))))) = T)
T c= ! ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b4 f1 c> cCARD * * * part cset_of_edge b4 f1 b0 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 b0 c/\ cIN b1 * part ctopological_component_yfan c, f0 c, f1 b0 c/\ cIN b3 b1 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt b4 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b2 c% b4 b3 * part cyfan c, f0 c, f1 b0 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 cT
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) ==> ((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY)))))) = (((((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ ((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) y')) ((% (real_of_num (NUMERAL _0))) z)) IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> ((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY)))))))
T c= c==> cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c==> c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0 c% creal_of_num cNUMERAL c_0 f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (((!z. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET (yfan (x , (V , E)))))) ==> ((\z. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET (yfan (x , (V , E)))))) z)) = ((\z. (((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET (yfan (x , (V , E)))))) z))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT b0 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt b1 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 f3 c% b1 b0 * part cyfan c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT b0 part cEMPTY * part cyfan c, f0 c, f1 f2 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT b0 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt b1 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 f3 c% b1 b0 * part cyfan c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT b0 part cEMPTY * part cyfan c, f0 c, f1 f2 f4 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT b0 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt b1 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 f3 c% b1 b0 * part cyfan c, f0 c, f1 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT b0 part cEMPTY * part cyfan c, f0 c, f1 f2 f4
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (v $ i))) $ i)) ((lambdai. ((real_mul (real_of_num (NUMERAL _0))) (u $ i))) $ i))) $ i) = (v $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f1 b1 b0 c$ clambda / creal_mul creal_of_num cNUMERAL c_0 c$ f2 b1 b0 f0 c$ f1 f0
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ ((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) y')) ((% (real_of_num (NUMERAL _0))) z)) IN ((hull convex) (y' INSERT (z INSERT EMPTY)))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 f0 c% creal_of_num cNUMERAL c_0 f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((!x'. ((P x') \/ Q)) = ((!x'. (P x')) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))) |- ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f5 creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f0 c% f5 f1 * part cyfan c, f2 c, f3 f4
+ |- ((\t. (!x. (!y. ((((closed_segment ((CONS (y' , z)) NIL)) SUBSET t) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) x) y)) ==> (((connected_component t) x) y))))) (yfan (x , (V , E))))
T * / ! ! c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL b0 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL b1 b2 cconnected_component b0 b1 b2 * part cyfan c, f2 c, f3 f4
+ |- (((!x'. (((x' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ ((connected ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET (yfan (x , (V , E)))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) x')))) ==> ((\x'. (((x' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ ((connected ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET (yfan (x , (V , E)))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) x')))) y')) = ((\x'. (((x' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ ((connected ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET (yfan (x , (V , E)))))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) x')))) y'))
T c= c==> ! c==> c/\ cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cconnected * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cyfan c, f0 c, f3 f4 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 b0 * / c==> c/\ cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cconnected * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cyfan c, f0 c, f3 f4 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 b0 f5 * / c==> c/\ cIN b0 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cconnected * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * part cyfan c, f0 c, f3 f4 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 b0 f5
+ |- (((!E. (((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (FAN (x , (V , E)))) ==> (~ (E = EMPTY)))) ==> ((\E. (((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (FAN (x , (V , E)))) ==> (~ (E = EMPTY)))) E)) = ((\E. (((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (FAN (x , (V , E)))) ==> (~ (E = EMPTY)))) E))
T c= c==> ! c==> c/\ ! c==> cIN b1 f0 c> cCARD * * * part cset_of_edge b1 f0 b0 cNUMERAL cBIT1 c_0 cFAN c, f1 c, f0 b0 c~ c= b0 part cEMPTY * / c==> c/\ ! c==> cIN b1 f0 c> cCARD * * * part cset_of_edge b1 f0 b0 cNUMERAL cBIT1 c_0 cFAN c, f1 c, f0 b0 c~ c= b0 part cEMPTY f2 * / c==> c/\ ! c==> cIN b1 f0 c> cCARD * * * part cset_of_edge b1 f0 b0 cNUMERAL cBIT1 c_0 cFAN c, f1 c, f0 b0 c~ c= b0 part cEMPTY f2
+ (~ (E = EMPTY)) |- ((E = EMPTY) = F)
T c==> c~ c= f0 part cEMPTY c= c= f0 part cEMPTY cF
+ |- (((!V. (!E. (!U. (!z. (((FAN (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U))) ==> (U = ((connected_component (yfan (x , (V , E)))) z))))))) ==> ((\V. (!E. (!U. (!z. (((FAN (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U))) ==> (U = ((connected_component (yfan (x , (V , E)))) z))))))) V)) = ((\V. (!E. (!U. (!z. (((FAN (x , (V , E))) /\ ((U IN (topological_component_yfan (x , (V , E)))) /\ (z IN U))) ==> (U = ((connected_component (yfan (x , (V , E)))) z))))))) V))
T c= c==> ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN b2 * part ctopological_component_yfan c, f0 c, b0 b1 cIN b3 b2 c= b2 * * part cconnected_component * part cyfan c, f0 c, b0 b1 b3 * / ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN b2 * part ctopological_component_yfan c, f0 c, b0 b1 cIN b3 b2 c= b2 * * part cconnected_component * part cyfan c, f0 c, b0 b1 b3 f1 * / ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN b2 * part ctopological_component_yfan c, f0 c, b0 b1 cIN b3 b2 c= b2 * * part cconnected_component * part cyfan c, f0 c, b0 b1 b3 f1
+ |- ((~ (((real_le (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) /\ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)
T c==> c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!x. (!v. (!u. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) ==> (?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))))) ==> ((\x. (!v. (!u. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) ==> (?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))))) x)) = ((\x. (!v. (!u. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) ==> (?y. (y IN ((aff_gt (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))))) x))
T c= c==> ! ! ! c==> cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / cIN b3 * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / cIN b3 * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0 * / ! ! c==> cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c? / cIN b3 * * part caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (convex ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (z IN U), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> cconvex * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f6 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f5 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1
- |- ((!y'. (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) = T)
T c= ! c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cconnected_component * part cyfan c, f0 c, f3 f4 b0 b1 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 b0 b1 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b1 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b1 cT
+ (convex ((hull convex) (y' INSERT (z INSERT EMPTY)))) |- (((convex ((hull convex) (y' INSERT (z INSERT EMPTY)))) ==> (connected ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z))
T c==> cconvex * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c==> cconvex * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1
+ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (z IN U), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- ((convex ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f6 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cIN f1 f5 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cconvex * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) ==> F), (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) |- F
T c==> c==> creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) |- (((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)))
T c==> cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1
+ |- (((((FAN (x , (V , E))) /\ (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) /\ ((z IN (yfan (x , (V , E)))) /\ ((y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))))))) ==> ((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E))))) ==> (((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z))) = (((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cIN f4 * part cyfan c, f0 c, f1 f2 c/\ cIN f5 * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f3 c% b0 f4 * part cyfan c, f0 c, f1 f2 cSUBSET * part cclosed_segment cCONS c, f5 f4 cNIL * part cyfan c, f0 c, f1 f2 c/\ cSUBSET * part cclosed_segment cCONS c, f5 f4 cNIL * part cyfan c, f0 c, f1 f2 cconnected_component * part cclosed_segment cCONS c, f5 f4 cNIL f5 f4 c/\ cSUBSET * part cclosed_segment cCONS c, f5 f4 cNIL * part cyfan c, f0 c, f1 f2 cconnected_component * part cclosed_segment cCONS c, f5 f4 cNIL f5 f4
- |- ((\y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))) y)
T * / ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b2 cconnected_component * part cyfan c, f0 c, f2 f3 b1 b2 ! c= cconnected_component * part cyfan c, f0 c, f2 f3 b1 b2 cconnected_component * part cyfan c, f0 c, f2 f3 f1 b2 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b2 cconnected_component * part cyfan c, f0 c, f2 f3 f1 b2 cF f4
+ ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))), (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') |- (((connected_component (yfan (x , (V , E)))) y') x')
T c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 cconnected_component * part cyfan c, f0 c, f3 f4 f5 f6
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\x. (!y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)))) x)
T * / ! ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 part cEMPTY b3 cconnected_component * part cyfan c, b0 c, f1 f2 b2 b3 ! c= cconnected_component * part cyfan c, b0 c, f1 f2 b2 b3 cconnected_component * part cyfan c, b0 c, f1 f2 f0 b3 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 part cEMPTY b3 cconnected_component * part cyfan c, b0 c, f1 f2 f0 b3 cF f3
- |- (((!E. (!V. (!x. (!y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)))))) ==> ((\E. (!V. (!x. (!y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)))))) E)) = ((\E. (!V. (!x. (!y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)))))) E))
T c= c==> ! ! ! ! ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 part cEMPTY b5 cconnected_component * part cyfan c, b2 c, b1 b0 b4 b5 ! c= cconnected_component * part cyfan c, b2 c, b1 b0 b4 b5 cconnected_component * part cyfan c, b2 c, b1 b0 f0 b5 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 part cEMPTY b5 cconnected_component * part cyfan c, b2 c, b1 b0 f0 b5 cF * / ! ! ! ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 part cEMPTY b5 cconnected_component * part cyfan c, b2 c, b1 b0 b4 b5 ! c= cconnected_component * part cyfan c, b2 c, b1 b0 b4 b5 cconnected_component * part cyfan c, b2 c, b1 b0 f0 b5 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 part cEMPTY b5 cconnected_component * part cyfan c, b2 c, b1 b0 f0 b5 cF f1 * / ! ! ! ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 part cEMPTY b5 cconnected_component * part cyfan c, b2 c, b1 b0 b4 b5 ! c= cconnected_component * part cyfan c, b2 c, b1 b0 b4 b5 cconnected_component * part cyfan c, b2 c, b1 b0 f0 b5 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 part cEMPTY b5 cconnected_component * part cyfan c, b2 c, b1 b0 f0 b5 cF f1
- (((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)) |- (((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)) ==> (((connected_component (yfan (x , (V , E)))) y') z)) ==> (((connected_component (yfan (x , (V , E)))) y') z))
T c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1 c==> c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f0 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f0 f1
- |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)) |- ((((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)) /\ (((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c/\ c==> c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF
- |- (((!x. (!y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)))) ==> ((\x. (!y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)))) x)) = ((\x. (!y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)))) x))
T c= c==> ! ! ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 part cEMPTY b3 cconnected_component * part cyfan c, b0 c, f1 f2 b2 b3 ! c= cconnected_component * part cyfan c, b0 c, f1 f2 b2 b3 cconnected_component * part cyfan c, b0 c, f1 f2 f0 b3 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 part cEMPTY b3 cconnected_component * part cyfan c, b0 c, f1 f2 f0 b3 cF * / ! ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 part cEMPTY b3 cconnected_component * part cyfan c, b0 c, f1 f2 b2 b3 ! c= cconnected_component * part cyfan c, b0 c, f1 f2 b2 b3 cconnected_component * part cyfan c, b0 c, f1 f2 f0 b3 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 part cEMPTY b3 cconnected_component * part cyfan c, b0 c, f1 f2 f0 b3 cF f3 * / ! ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 part cEMPTY b3 cconnected_component * part cyfan c, b0 c, f1 f2 b2 b3 ! c= cconnected_component * part cyfan c, b0 c, f1 f2 b2 b3 cconnected_component * part cyfan c, b0 c, f1 f2 f0 b3 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 part cEMPTY b3 cconnected_component * part cyfan c, b0 c, f1 f2 f0 b3 cF f3
- (~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) |- F
T c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF
- (!x. (!y. (((x IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) x) y)))) |- (!y. (((x IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) x) y)))
T c==> ! ! c==> c/\ cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 b1 ! c==> c/\ cIN f2 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 b0
- |- ((x = x) = T)
T c= c= f0 f0 cT
- (~ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x')), (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') |- ((~ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x')) /\ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x'))
T c==> c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F), (((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)) |- (((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) /\ ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c==> c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c/\ c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF
- (!x. (!y. (((x IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) x) y)))) |- ((\x. (!y. (((x IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) x) y)))) x)
T c==> ! ! c==> c/\ cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 b1 * / ! c==> c/\ cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 b1 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (?y'. (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (z IN U), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> c? / cIN b0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f1 f5 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1
- |- ((!x''. ((~ (((connected_component (yfan (x , (V , E)))) y') x')) \/ (((connected_component (yfan (x , (V , E)))) z) x''))) = ((~ (((connected_component (yfan (x , (V , E)))) y') x')) \/ (!x'. (((connected_component (yfan (x , (V , E)))) z) x'))))
T c= ! c\/ c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4 cconnected_component * part cyfan c, f0 c, f1 f2 f5 b0 c\/ c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4 ! cconnected_component * part cyfan c, f0 c, f1 f2 f5 b0
- |- (((((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)) ==> (((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))) = (((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)))
T c= c==> c==> c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF
- |- ((!x''. ((((connected_component (yfan (x , (V , E)))) y') x') \/ (~ (((connected_component (yfan (x , (V , E)))) z) x'')))) = ((((connected_component (yfan (x , (V , E)))) y') x') \/ (!x'. (~ (((connected_component (yfan (x , (V , E)))) z) x')))))
T c= ! c\/ cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4 c~ cconnected_component * part cyfan c, f0 c, f1 f2 f5 b0 c\/ cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4 ! c~ cconnected_component * part cyfan c, f0 c, f1 f2 f5 b0
- |- ((~ (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (v $ i))) ((real_mul (real_of_num (NUMERAL _0))) (u $ i))) = (v $ i))) ==> F)
T c==> c~ c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL c_0 c$ f2 f1 c$ f0 f1 cF
- (!x. (!y. (((x IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) x) y)))) |- ((((x IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) x) y)) = T)
T c==> ! ! c==> c/\ cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 b1 c= c==> c/\ cIN f2 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 f3 cT
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (~ (E = EMPTY)) |- (((~ (EMPTY = E)) ==> ((EMPTY = E) = F)) = ((EMPTY = E) = F))
T c==> c~ c= f0 part cEMPTY c= c==> c~ c= part cEMPTY f0 c= c= part cEMPTY f0 cF c= c= part cEMPTY f0 cF
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
- ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z))), (((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))) |- ((((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))) /\ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)))
T c==> c/\ cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 c= * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 c==> c==> c/\ cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 c= * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 c/\ c==> c/\ cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 c= * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2
- (~ (E = EMPTY)) |- (~ (EMPTY = E))
T c==> c~ c= f0 part cEMPTY c~ c= part cEMPTY f0
- |- ((!x''. ((~ (((connected_component (yfan (x , (V , E)))) y') x'')) \/ (((connected_component (yfan (x , (V , E)))) z) x'))) = ((!x'. (~ (((connected_component (yfan (x , (V , E)))) y') x'))) \/ (((connected_component (yfan (x , (V , E)))) z) x')))
T c= ! c\/ c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 b0 cconnected_component * part cyfan c, f0 c, f1 f2 f4 f5 c\/ ! c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 b0 cconnected_component * part cyfan c, f0 c, f1 f2 f4 f5
- |- ((\E. (!V. (!x. (!y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)))))) E)
T * / ! ! ! ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 part cEMPTY b5 cconnected_component * part cyfan c, b2 c, b1 b0 b4 b5 ! c= cconnected_component * part cyfan c, b2 c, b1 b0 b4 b5 cconnected_component * part cyfan c, b2 c, b1 b0 f0 b5 ! c==> caff_gt * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT f0 part cEMPTY b5 cconnected_component * part cyfan c, b2 c, b1 b0 f0 b5 cF f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!V. (!x. (!y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))))) ==> ((\V. (!x. (!y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))))) V)) = ((\V. (!x. (!y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))))) V))
T c= c==> ! ! ! ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 part cEMPTY b4 cconnected_component * part cyfan c, b1 c, b0 f1 b3 b4 ! c= cconnected_component * part cyfan c, b1 c, b0 f1 b3 b4 cconnected_component * part cyfan c, b1 c, b0 f1 f0 b4 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 part cEMPTY b4 cconnected_component * part cyfan c, b1 c, b0 f1 f0 b4 cF * / ! ! ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 part cEMPTY b4 cconnected_component * part cyfan c, b1 c, b0 f1 b3 b4 ! c= cconnected_component * part cyfan c, b1 c, b0 f1 b3 b4 cconnected_component * part cyfan c, b1 c, b0 f1 f0 b4 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 part cEMPTY b4 cconnected_component * part cyfan c, b1 c, b0 f1 f0 b4 cF f2 * / ! ! ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 part cEMPTY b4 cconnected_component * part cyfan c, b1 c, b0 f1 b3 b4 ! c= cconnected_component * part cyfan c, b1 c, b0 f1 b3 b4 cconnected_component * part cyfan c, b1 c, b0 f1 f0 b4 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 part cEMPTY b4 cconnected_component * part cyfan c, b1 c, b0 f1 f0 b4 cF f2
- |- ((!x. (!y. (!y'. (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))))) = T)
T c= ! ! ! c==> c/\ ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 part cEMPTY b3 cconnected_component * part cyfan c, b0 c, f1 f2 b2 b3 ! c= cconnected_component * part cyfan c, b0 c, f1 f2 b2 b3 cconnected_component * part cyfan c, b0 c, f1 f2 f0 b3 ! c==> caff_gt * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT f0 part cEMPTY b3 cconnected_component * part cyfan c, b0 c, f1 f2 f0 b3 cT
- (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') |- ((~ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x')) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x'))
T c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- ((!x'. (P \/ (Q x'))) = (P \/ (!x'. (Q x'))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (u $ i))) = (u $ i))) |- ((~ (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (v $ i))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (u $ i))) = (u $ i))) /\ F)
T c==> c~ c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 c$ f2 f1 c/\ c~ c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL cBIT1 c_0 c$ f2 f1 c$ f2 f1 cF
- |- (T = (((~ (((connected_component (yfan (x , (V , E)))) y') _3017189)) \/ (((connected_component (yfan (x , (V , E)))) z) _3017189)) = ((((connected_component (yfan (x , (V , E)))) z) _3017189) \/ (~ (((connected_component (yfan (x , (V , E)))) y') _3017189)))))
T c= cT c= c\/ c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4 cconnected_component * part cyfan c, f0 c, f1 f2 f5 f4 c\/ cconnected_component * part cyfan c, f0 c, f1 f2 f5 f4 c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!x. (!y. (((x IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) x) y)))) |- (((!y. (((x IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) x) y))) ==> ((\y. (((x IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) x) y))) y)) = ((\y. (((x IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) x) y))) y))
T c==> ! ! c==> c/\ cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 b1 c= c==> ! c==> c/\ cIN f2 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 b0 * / c==> c/\ cIN f2 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 b0 f3 * / c==> c/\ cIN f2 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 b0 f3
- |- ((real_neg ((real_sub ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (v $ i))) ((real_mul (real_of_num (NUMERAL _0))) (u $ i)))) (v $ i))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL c_0 c$ f2 f1 c$ f0 f1 creal_of_num cNUMERAL c_0
- |- ((((~ (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (v $ i))) ((real_mul (real_of_num (NUMERAL _0))) (u $ i))) = (v $ i))) ==> F) ==> (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (v $ i))) ((real_mul (real_of_num (NUMERAL _0))) (u $ i))) = (v $ i))) = (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (v $ i))) ((real_mul (real_of_num (NUMERAL _0))) (u $ i))) = (v $ i)))
T c= c==> c==> c~ c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL c_0 c$ f2 f1 c$ f0 f1 cF c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL c_0 c$ f2 f1 c$ f0 f1 c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL c_0 c$ f2 f1 c$ f0 f1
- |- (((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF
- |- ((!x''. ((((connected_component (yfan (x , (V , E)))) y') x'') \/ (~ (((connected_component (yfan (x , (V , E)))) z) x')))) = ((!x'. (((connected_component (yfan (x , (V , E)))) y') x')) \/ (~ (((connected_component (yfan (x , (V , E)))) z) x'))))
T c= ! c\/ cconnected_component * part cyfan c, f0 c, f1 f2 f3 b0 c~ cconnected_component * part cyfan c, f0 c, f1 f2 f4 f5 c\/ ! cconnected_component * part cyfan c, f0 c, f1 f2 f3 b0 c~ cconnected_component * part cyfan c, f0 c, f1 f2 f4 f5
- (~ (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (v $ i))) ((real_mul (real_of_num (NUMERAL _0))) (u $ i))) = (v $ i))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL c_0 c$ f2 f1 c$ f0 f1 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))), (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') |- (((((connected_component (yfan (x , (V , E)))) z) x') ==> F) = F)
T c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c= c==> cconnected_component * part cyfan c, f0 c, f3 f4 f2 f6 cF cF
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) |- ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) /\ F)
T c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 c/\ c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF
- |- ((\V. (!x. (!y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))))) V)
T * / ! ! ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 part cEMPTY b4 cconnected_component * part cyfan c, b1 c, b0 f1 b3 b4 ! c= cconnected_component * part cyfan c, b1 c, b0 f1 b3 b4 cconnected_component * part cyfan c, b1 c, b0 f1 f0 b4 ! c==> caff_gt * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT f0 part cEMPTY b4 cconnected_component * part cyfan c, b1 c, b0 f1 f0 b4 cF f2
- (~ (((connected_component (yfan (x , (V , E)))) z) x')), ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))), (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') |- F
T c==> c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4 c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f3 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f1 f2 f6 b0 ! c= cconnected_component * part cyfan c, f0 c, f1 f2 f6 b0 cconnected_component * part cyfan c, f0 c, f1 f2 f3 b0 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f4 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) = (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x')))))
T c= c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0
- |- ((!z. (!E. (!V. (!x. (!y. (!y'. (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x')))))))))) = (!z. (!E. (!V. (!x. (!y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))))))))
T c= ! ! ! ! ! ! c==> c/\ ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 part cEMPTY b6 cconnected_component * part cyfan c, b3 c, b2 b1 b5 b6 ! c= cconnected_component * part cyfan c, b3 c, b2 b1 b5 b6 cconnected_component * part cyfan c, b3 c, b2 b1 b0 b6 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 part cEMPTY b6 cconnected_component * part cyfan c, b3 c, b2 b1 b0 b6 ! ! ! ! ! ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 part cEMPTY b6 cconnected_component * part cyfan c, b3 c, b2 b1 b5 b6 ! c= cconnected_component * part cyfan c, b3 c, b2 b1 b5 b6 cconnected_component * part cyfan c, b3 c, b2 b1 b0 b6 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 part cEMPTY b6 cconnected_component * part cyfan c, b3 c, b2 b1 b0 b6 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))), (((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z)) |- ((((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z)) /\ (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z))
T c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1 c/\ c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1 cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1
- |- ((((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))) ==> (((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))))
T c==> c==> c/\ cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 c= * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 c==> c/\ cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 c= * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2
- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))) |- F
T c==> c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (v $ i))) ((real_mul (real_of_num (NUMERAL _0))) (u $ i))) = (v $ i))) |- ((~ (((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))) (v $ i))) ((real_mul (real_of_num (NUMERAL _0))) (u $ i))) = (v $ i))) /\ F)
T c==> c~ c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL c_0 c$ f2 f1 c$ f0 f1 c/\ c~ c= creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c$ f0 f1 creal_mul creal_of_num cNUMERAL c_0 c$ f2 f1 c$ f0 f1 cF
- |- ((((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)) = ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))
T c= c==> c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!x'. (P x')) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))), (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') |- ((~ (((connected_component (yfan (x , (V , E)))) z) x')) ==> (((connected_component (yfan (x , (V , E)))) z) x'))
T c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> c~ cconnected_component * part cyfan c, f0 c, f3 f4 f2 f6 cconnected_component * part cyfan c, f0 c, f3 f4 f2 f6
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (~ (((connected_component (yfan (x , (V , E)))) z) x')) |- ((((connected_component (yfan (x , (V , E)))) z) x') ==> F)
T c==> c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4 c==> cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4 cF
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (E = EMPTY) |- (EMPTY = E)
T c==> c= f0 part cEMPTY c= part cEMPTY f0
- ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) |- (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') \/ (~ (((connected_component (yfan (x , (V , E)))) z) x'))))
T c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c\/ cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 c~ cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0
- |- (((((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))) ==> (((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)))) = (((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) y')) /\ (((connected_component (yfan (x , (V , E)))) y') = ((connected_component (yfan (x , (V , E)))) z))) ==> (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z))))
T c= c==> c==> c/\ cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 c= * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 c==> c/\ cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 c= * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 c==> c/\ cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 c= * * part cconnected_component * part cyfan c, f0 c, f3 f4 f5 * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2 cSUBSET * * part caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cconnected_component * part cyfan c, f0 c, f3 f4 f2
- (~ (((connected_component (yfan (x , (V , E)))) z) x')), ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))), (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') |- ((~ (((connected_component (yfan (x , (V , E)))) z) x')) /\ (((connected_component (yfan (x , (V , E)))) z) x'))
T c==> c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4 c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f3 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f1 f2 f6 b0 ! c= cconnected_component * part cyfan c, f0 c, f1 f2 f6 b0 cconnected_component * part cyfan c, f0 c, f1 f2 f3 b0 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f4 c/\ c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4 cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4
- |- (((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)) ==> (((connected_component (yfan (x , (V , E)))) y') z)) ==> ((((closed_segment ((CONS (y' , z)) NIL)) SUBSET (yfan (x , (V , E)))) /\ (((connected_component (closed_segment ((CONS (y' , z)) NIL))) y') z)) ==> (((connected_component (yfan (x , (V , E)))) y') z)))
T c==> c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f0 f1 c==> c/\ cSUBSET * part cclosed_segment cCONS c, f0 f1 cNIL * part cyfan c, f2 c, f3 f4 cconnected_component * part cclosed_segment cCONS c, f0 f1 cNIL f0 f1 cconnected_component * part cyfan c, f2 c, f3 f4 f0 f1
- (~ (E = EMPTY)) |- ((EMPTY = E) = F)
T c==> c~ c= f0 part cEMPTY c= c= part cEMPTY f0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!x''. ((~ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x')) \/ (((connected_component (yfan (x , (V , E)))) y') x''))) = ((~ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x')) \/ (!x'. (((connected_component (yfan (x , (V , E)))) y') x'))))
T c= ! c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 cconnected_component * part cyfan c, f0 c, f4 f5 f6 b0 c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 ! cconnected_component * part cyfan c, f0 c, f4 f5 f6 b0
- (!x. (!y. (((x IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) x) y)))) |- ((\y. (((x IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) x) y))) y)
T c==> ! ! c==> c/\ cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 b1 * / c==> c/\ cIN f2 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 b0 f3
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((connected_component (yfan (x , (V , E)))) z) x')), ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))), (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') |- ((~ F) ==> F)
T c==> c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4 c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f3 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f1 f2 f6 b0 ! c= cconnected_component * part cyfan c, f0 c, f1 f2 f6 b0 cconnected_component * part cyfan c, f0 c, f1 f2 f3 b0 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f4 c==> c~ cF cF
- ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) |- (((!x'. ((((connected_component (yfan (x , (V , E)))) y') x') \/ (~ (((connected_component (yfan (x , (V , E)))) z) x')))) ==> ((\x'. ((((connected_component (yfan (x , (V , E)))) y') x') \/ (~ (((connected_component (yfan (x , (V , E)))) z) x')))) _3017188)) = ((\x'. ((((connected_component (yfan (x , (V , E)))) y') x') \/ (~ (((connected_component (yfan (x , (V , E)))) z) x')))) _3017188))
T c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 c= c==> ! c\/ cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 c~ cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 * / c\/ cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 c~ cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 f6 * / c\/ cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 c~ cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 f6
- (~ (((connected_component (yfan (x , (V , E)))) z) x')), ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))), (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') |- ((~ (((connected_component (yfan (x , (V , E)))) z) x')) /\ F)
T c==> c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4 c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f3 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f1 f2 f6 b0 ! c= cconnected_component * part cyfan c, f0 c, f1 f2 f6 b0 cconnected_component * part cyfan c, f0 c, f1 f2 f3 b0 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f4 c/\ c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4 cF
- ((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) |- ((((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z)) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z))
T c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1 cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1
- |- (((!z. (!E. (!V. (!x. (!y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))))))) ==> ((\z. (!E. (!V. (!x. (!y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))))))) z)) = ((\z. (!E. (!V. (!x. (!y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))))))) z))
T c= c==> ! ! ! ! ! ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 part cEMPTY b6 cconnected_component * part cyfan c, b3 c, b2 b1 b5 b6 ! c= cconnected_component * part cyfan c, b3 c, b2 b1 b5 b6 cconnected_component * part cyfan c, b3 c, b2 b1 b0 b6 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 part cEMPTY b6 cconnected_component * part cyfan c, b3 c, b2 b1 b0 b6 cF * / ! ! ! ! ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 part cEMPTY b6 cconnected_component * part cyfan c, b3 c, b2 b1 b5 b6 ! c= cconnected_component * part cyfan c, b3 c, b2 b1 b5 b6 cconnected_component * part cyfan c, b3 c, b2 b1 b0 b6 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 part cEMPTY b6 cconnected_component * part cyfan c, b3 c, b2 b1 b0 b6 cF f0 * / ! ! ! ! ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 part cEMPTY b6 cconnected_component * part cyfan c, b3 c, b2 b1 b5 b6 ! c= cconnected_component * part cyfan c, b3 c, b2 b1 b5 b6 cconnected_component * part cyfan c, b3 c, b2 b1 b0 b6 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 part cEMPTY b6 cconnected_component * part cyfan c, b3 c, b2 b1 b0 b6 cF f0
- |- ((!x''. ((~ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x'')) \/ (((connected_component (yfan (x , (V , E)))) y') x'))) = ((!x'. (~ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x'))) \/ (((connected_component (yfan (x , (V , E)))) y') x')))
T c= ! c\/ c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 f6 c\/ ! c~ caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 f6
- |- ((~ p) = (p ==> F))
T c= c~ f0 c==> f0 cF
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)) ==> (((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F) ==> ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cF
- ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))), (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') |- ((~ (((connected_component (yfan (x , (V , E)))) z) x')) ==> F)
T c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> c~ cconnected_component * part cyfan c, f0 c, f3 f4 f2 f6 cF
- |- ((!y. (!y'. (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x')))))) = T)
T c= ! ! c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b2 cconnected_component * part cyfan c, f0 c, f2 f3 b1 b2 ! c= cconnected_component * part cyfan c, f0 c, f2 f3 b1 b2 cconnected_component * part cyfan c, f0 c, f2 f3 f1 b2 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b2 cconnected_component * part cyfan c, f0 c, f2 f3 f1 b2 cT
- (!x. (!y. (((x IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) x) y)))) |- (((x IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (y IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) x) y))
T c==> ! ! c==> c/\ cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 b1 c==> c/\ cIN f2 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f3 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 f3
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x')))) = T)
T c= c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 f5 b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b0 cT
- |- ((\y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F)) y')
T * / c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cconnected_component * part cyfan c, f0 c, f3 f4 b0 b1 ! c= cconnected_component * part cyfan c, f0 c, f3 f4 b0 b1 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b1 ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b1 cconnected_component * part cyfan c, f0 c, f3 f4 f2 b1 cF f5
- |- ((\z. (!E. (!V. (!x. (!y. (!y'. ((~ (((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))) ==> (!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) z) x'))))) ==> F))))))) z)
T * / ! ! ! ! ! c==> c~ c==> c/\ ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 part cEMPTY b6 cconnected_component * part cyfan c, b3 c, b2 b1 b5 b6 ! c= cconnected_component * part cyfan c, b3 c, b2 b1 b5 b6 cconnected_component * part cyfan c, b3 c, b2 b1 b0 b6 ! c==> caff_gt * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b0 part cEMPTY b6 cconnected_component * part cyfan c, b3 c, b2 b1 b0 b6 cF f0
- (~ F), (~ (((connected_component (yfan (x , (V , E)))) z) x')), ((!x'. ((((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') ==> (((connected_component (yfan (x , (V , E)))) y') x'))) /\ (!x'. ((((connected_component (yfan (x , (V , E)))) y') x') = (((connected_component (yfan (x , (V , E)))) z) x')))), (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) x') |- ((~ F) /\ F)
T c==> c~ cF c==> c~ cconnected_component * part cyfan c, f0 c, f1 f2 f3 f4 c==> c/\ ! c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f3 part cEMPTY b0 cconnected_component * part cyfan c, f0 c, f1 f2 f6 b0 ! c= cconnected_component * part cyfan c, f0 c, f1 f2 f6 b0 cconnected_component * part cyfan c, f0 c, f1 f2 f3 b0 c==> caff_gt * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f4 c/\ c~ cF cF
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z)) ==> (((y' IN ((hull convex) (y' INSERT (z INSERT EMPTY)))) /\ (z IN ((hull convex) (y' INSERT (z INSERT EMPTY))))) ==> (((connected_component ((hull convex) (y' INSERT (z INSERT EMPTY)))) y') z)))
T c==> c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1 c==> c/\ cIN f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f1 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cconnected_component * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!t. ((((real_lt (real_of_num (NUMERAL _0))) t) /\ ((real_lt t) (real_of_num (NUMERAL (BIT1 _0))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) t)) y)) ((% t) z)) IN (yfan (x , (V , E)))))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (?y'. (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))))), (FAN (x , (V , E))), (U IN (topological_component_yfan (x , (V , E)))), (z IN U), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- ((?y'. (y' IN ((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))))) /\ (((aff_gt (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) SUBSET ((connected_component (yfan (x , (V , E)))) z)))
T c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f0 c% b0 f1 * part cyfan c, f2 c, f3 f4 c==> ! c==> cIN b0 f3 c> cCARD * * * part cset_of_edge b0 f3 f4 cNUMERAL cBIT1 c_0 c==> c? / cIN b0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f2 c, f3 f4 c==> cIN f5 * part ctopological_component_yfan c, f2 c, f3 f4 c==> cIN f1 f5 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c? / cIN b0 * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_gt * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cconnected_component * part cyfan c, f2 c, f3 f4 f1
