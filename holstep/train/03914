N Hypermap.lemma_card_walkup_dart
C |- (!H. (!x. ((x IN (dart H)) ==> ((CARD (dart H)) = ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))))
T c==> cIN f0 * part cdart f1 c= cCARD * part cdart f1 c+ cCARD * part cdart cedge_walkup f1 f0 cNUMERAL cBIT1 c_0
D TRUTH
A |- T
T cT
D Hypermap.hypermap_lemma
A |- (!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))))
T c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
D Hypermap.lemma_edge_walkup
A |- (!H. (!x. (((dart ((edge_walkup H) x)) = ((dart H) DELETE x)) /\ (((edge_map ((edge_walkup H) x)) = ((inverse ((swap (x , ((face_map H) x))) o (face_map H))) o (inverse ((swap (x , ((node_map H) x))) o (node_map H))))) /\ (((node_map ((edge_walkup H) x)) = ((swap (x , ((node_map H) x))) o (node_map H))) /\ ((face_map ((edge_walkup H) x)) = ((swap (x , ((face_map H) x))) o (face_map H))))))))
T c/\ c= * part cdart cedge_walkup f0 f1 * * part cDELETE * part cdart f0 f1 c/\ c= * part cedge_map cedge_walkup f0 f1 * * part co * part cinverse * * part co * part cswap c, f1 cface_map f0 f1 * part cface_map f0 * part cinverse * * part co * part cswap c, f1 cnode_map f0 f1 * part cnode_map f0 c/\ c= * part cnode_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cnode_map f0 f1 * part cnode_map f0 c= * part cface_map cedge_walkup f0 f1 * * part co * part cswap c, f1 cface_map f0 f1 * part cface_map f0
D Hypermap.CARD_MINUS_ONE
A |- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))))
T c==> c/\ cFINITE f0 cIN f1 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0
+ ((dart ((edge_walkup H) x)) = ((dart H) DELETE x)), (x IN (dart H)) |- (((dart ((edge_walkup H) x)) = ((dart H) DELETE x)) /\ ((CARD (dart H)) = ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))
T c==> c= * part cdart cedge_walkup f0 f1 * * part cDELETE * part cdart f0 f1 c==> cIN f1 * part cdart f0 c/\ c= * part cdart cedge_walkup f0 f1 * * part cDELETE * part cdart f0 f1 c= cCARD * part cdart f0 c+ cCARD * part cdart cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
- |- (((permutes (face_map H)) (dart H)) = T)
T c= cpermutes * part cface_map f0 * part cdart f0 cT
- |- ((permutes (node_map H)) (dart H))
T cpermutes * part cnode_map f0 * part cdart f0
+ |- (((!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) ==> ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) H)) = ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) H))
T c= c==> ! c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI f0 * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI f0
+ |- (((!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) ==> ((\x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) x)) = ((\x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) x))
T c= c==> ! c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 * / c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 f1 * / c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 f1
- |- (((permutes (edge_map H)) (dart H)) = T)
T c= cpermutes * part cedge_map f0 * part cdart f0 cT
- |- (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))
T c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- ((\s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) s)
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 * / ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 f0
+ |- ((\x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) x)
T * / c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 f1
+ (x IN (dart H)) |- ((FINITE (dart H)) /\ (x IN (dart H)))
T c==> cIN f0 * part cdart f1 c/\ cFINITE * part cdart f1 cIN f0 * part cdart f1
+ |- (FINITE (dart H))
T cFINITE * part cdart f0
+ ((dart ((edge_walkup H) x)) = ((dart H) DELETE x)) |- (((CARD (dart H)) = ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))) = ((CARD (dart H)) = ((CARD ((dart H) DELETE x)) + (NUMERAL (BIT1 _0)))))
T c==> c= * part cdart cedge_walkup f0 f1 * * part cDELETE * part cdart f0 f1 c= c= cCARD * part cdart f0 c+ cCARD * part cdart cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 c= cCARD * part cdart f0 c+ cCARD * * part cDELETE * part cdart f0 f1 cNUMERAL cBIT1 c_0
+ (x IN (dart H)) |- (T = ((FINITE (dart H)) /\ (x IN (dart H))))
T c==> cIN f0 * part cdart f1 c= cT c/\ cFINITE * part cdart f1 cIN f0 * part cdart f1
- |- (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))
T c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
+ |- (((x IN (dart H)) ==> ((CARD (dart H)) = ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))) = T)
T c= c==> cIN f0 * part cdart f1 c= cCARD * part cdart f1 c+ cCARD * part cdart cedge_walkup f1 f0 cNUMERAL cBIT1 c_0 cT
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- (((!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) ==> ((\x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) x)) = ((\x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) x))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c= c==> ! c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 * / c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 f1 * / c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 f1
- |- ((permutes (face_map H)) (dart H))
T cpermutes * part cface_map f0 * part cdart f0
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- ((!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) = T)
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c= ! c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 cT
+ ((dart ((edge_walkup H) x)) = ((dart H) DELETE x)), (x IN (dart H)) |- ((CARD (dart H)) = ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))
T c==> c= * part cdart cedge_walkup f0 f1 * * part cDELETE * part cdart f0 f1 c==> cIN f1 * part cdart f0 c= cCARD * part cdart f0 c+ cCARD * part cdart cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ |- ((((dart ((edge_walkup H) x)) = ((dart H) DELETE x)) ==> ((CARD (dart H)) = ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0))))) = ((CARD (dart H)) = ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))
T c= c==> c= * part cdart cedge_walkup f0 f1 * * part cDELETE * part cdart f0 f1 c= cCARD * part cdart f0 c+ cCARD * part cdart cedge_walkup f0 f1 cNUMERAL cBIT1 c_0 c= cCARD * part cdart f0 c+ cCARD * part cdart cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))), ((FINITE s) /\ (x IN s)) |- ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c==> c/\ cFINITE f0 cIN f1 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0
- |- (((permutes (node_map H)) (dart H)) = T)
T c= cpermutes * part cnode_map f0 * part cdart f0 cT
- |- (((edge_map H) o ((node_map H) o (face_map H))) = I)
T c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
- |- ((!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) ==> (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0
+ ((dart ((edge_walkup H) x)) = ((dart H) DELETE x)) |- (((CARD (dart H)) = ((CARD ((dart H) DELETE x)) + (NUMERAL (BIT1 _0)))) = ((CARD (dart H)) = ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))
T c==> c= * part cdart cedge_walkup f0 f1 * * part cDELETE * part cdart f0 f1 c= c= cCARD * part cdart f0 c+ cCARD * * part cDELETE * part cdart f0 f1 cNUMERAL cBIT1 c_0 c= cCARD * part cdart f0 c+ cCARD * part cdart cedge_walkup f0 f1 cNUMERAL cBIT1 c_0
+ |- ((FINITE (dart H)) = T)
T c= cFINITE * part cdart f0 cT
- |- (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))
T c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- ((((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))) = T)
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c= c==> c/\ cFINITE f0 cIN f1 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0 cT
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- ((\x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))) x)
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 * / c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0 f1
- |- ((permutes (edge_map H)) (dart H))
T cpermutes * part cedge_map f0 * part cdart f0
+ (x IN (dart H)) |- ((x IN (dart H)) /\ ((CARD (dart H)) = ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))
T c==> cIN f0 * part cdart f1 c/\ cIN f0 * part cdart f1 c= cCARD * part cdart f1 c+ cCARD * part cdart cedge_walkup f1 f0 cNUMERAL cBIT1 c_0
+ |- ((dart ((edge_walkup H) x)) = ((dart H) DELETE x))
T c= * part cdart cedge_walkup f0 f1 * * part cDELETE * part cdart f0 f1
+ |- ((!x. ((x IN (dart H)) ==> ((CARD (dart H)) = ((CARD (dart ((edge_walkup H) x))) + (NUMERAL (BIT1 _0)))))) = T)
T c= ! c==> cIN b0 * part cdart f0 c= cCARD * part cdart f0 c+ cCARD * part cdart cedge_walkup f0 b0 cNUMERAL cBIT1 c_0 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 ! c==> c/\ cFINITE f0 cIN b0 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 b0 cNUMERAL cBIT1 c_0
+ |- (((!H. (!x. (((dart ((edge_walkup H) x)) = ((dart H) DELETE x)) /\ (((edge_map ((edge_walkup H) x)) = ((inverse ((swap (x , ((face_map H) x))) o (face_map H))) o (inverse ((swap (x , ((node_map H) x))) o (node_map H))))) /\ (((node_map ((edge_walkup H) x)) = ((swap (x , ((node_map H) x))) o (node_map H))) /\ ((face_map ((edge_walkup H) x)) = ((swap (x , ((face_map H) x))) o (face_map H)))))))) ==> ((\H. (!x. (((dart ((edge_walkup H) x)) = ((dart H) DELETE x)) /\ (((edge_map ((edge_walkup H) x)) = ((inverse ((swap (x , ((face_map H) x))) o (face_map H))) o (inverse ((swap (x , ((node_map H) x))) o (node_map H))))) /\ (((node_map ((edge_walkup H) x)) = ((swap (x , ((node_map H) x))) o (node_map H))) /\ ((face_map ((edge_walkup H) x)) = ((swap (x , ((face_map H) x))) o (face_map H)))))))) H)) = ((\H. (!x. (((dart ((edge_walkup H) x)) = ((dart H) DELETE x)) /\ (((edge_map ((edge_walkup H) x)) = ((inverse ((swap (x , ((face_map H) x))) o (face_map H))) o (inverse ((swap (x , ((node_map H) x))) o (node_map H))))) /\ (((node_map ((edge_walkup H) x)) = ((swap (x , ((node_map H) x))) o (node_map H))) /\ ((face_map ((edge_walkup H) x)) = ((swap (x , ((face_map H) x))) o (face_map H)))))))) H))
T c= c==> ! ! c/\ c= * part cdart cedge_walkup b0 b1 * * part cDELETE * part cdart b0 b1 c/\ c= * part cedge_map cedge_walkup b0 b1 * * part co * part cinverse * * part co * part cswap c, b1 cface_map b0 b1 * part cface_map b0 * part cinverse * * part co * part cswap c, b1 cnode_map b0 b1 * part cnode_map b0 c/\ c= * part cnode_map cedge_walkup b0 b1 * * part co * part cswap c, b1 cnode_map b0 b1 * part cnode_map b0 c= * part cface_map cedge_walkup b0 b1 * * part co * part cswap c, b1 cface_map b0 b1 * part cface_map b0 * / ! c/\ c= * part cdart cedge_walkup b0 b1 * * part cDELETE * part cdart b0 b1 c/\ c= * part cedge_map cedge_walkup b0 b1 * * part co * part cinverse * * part co * part cswap c, b1 cface_map b0 b1 * part cface_map b0 * part cinverse * * part co * part cswap c, b1 cnode_map b0 b1 * part cnode_map b0 c/\ c= * part cnode_map cedge_walkup b0 b1 * * part co * part cswap c, b1 cnode_map b0 b1 * part cnode_map b0 c= * part cface_map cedge_walkup b0 b1 * * part co * part cswap c, b1 cface_map b0 b1 * part cface_map b0 f0 * / ! c/\ c= * part cdart cedge_walkup b0 b1 * * part cDELETE * part cdart b0 b1 c/\ c= * part cedge_map cedge_walkup b0 b1 * * part co * part cinverse * * part co * part cswap c, b1 cface_map b0 b1 * part cface_map b0 * part cinverse * * part co * part cswap c, b1 cnode_map b0 b1 * part cnode_map b0 c/\ c= * part cnode_map cedge_walkup b0 b1 * * part co * part cswap c, b1 cnode_map b0 b1 * part cnode_map b0 c= * part cface_map cedge_walkup b0 b1 * * part co * part cswap c, b1 cface_map b0 b1 * part cface_map b0 f0
+ (x IN (dart H)) |- ((((FINITE (dart H)) /\ (x IN (dart H))) ==> ((CARD (dart H)) = ((CARD ((dart H) DELETE x)) + (NUMERAL (BIT1 _0))))) = ((CARD (dart H)) = ((CARD ((dart H) DELETE x)) + (NUMERAL (BIT1 _0)))))
T c==> cIN f0 * part cdart f1 c= c==> c/\ cFINITE * part cdart f1 cIN f0 * part cdart f1 c= cCARD * part cdart f1 c+ cCARD * * part cDELETE * part cdart f1 f0 cNUMERAL cBIT1 c_0 c= cCARD * part cdart f1 c+ cCARD * * part cDELETE * part cdart f1 f0 cNUMERAL cBIT1 c_0
+ |- ((\s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) s)
T * / ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 f0
- ((FINITE s) /\ (x IN s)) |- ((!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))
T c==> c/\ cFINITE f0 cIN f1 f0 c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))), ((FINITE s) /\ (x IN s)) |- ((!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) /\ ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c==> c/\ cFINITE f0 cIN f1 f0 c/\ ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0
+ |- (((!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) ==> ((\s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) s)) = ((\s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) s))
T c= c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 * / ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 f0 * / ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 f0
+ |- (((!x. (((dart ((edge_walkup H) x)) = ((dart H) DELETE x)) /\ (((edge_map ((edge_walkup H) x)) = ((inverse ((swap (x , ((face_map H) x))) o (face_map H))) o (inverse ((swap (x , ((node_map H) x))) o (node_map H))))) /\ (((node_map ((edge_walkup H) x)) = ((swap (x , ((node_map H) x))) o (node_map H))) /\ ((face_map ((edge_walkup H) x)) = ((swap (x , ((face_map H) x))) o (face_map H))))))) ==> ((\x. (((dart ((edge_walkup H) x)) = ((dart H) DELETE x)) /\ (((edge_map ((edge_walkup H) x)) = ((inverse ((swap (x , ((face_map H) x))) o (face_map H))) o (inverse ((swap (x , ((node_map H) x))) o (node_map H))))) /\ (((node_map ((edge_walkup H) x)) = ((swap (x , ((node_map H) x))) o (node_map H))) /\ ((face_map ((edge_walkup H) x)) = ((swap (x , ((face_map H) x))) o (face_map H))))))) x)) = ((\x. (((dart ((edge_walkup H) x)) = ((dart H) DELETE x)) /\ (((edge_map ((edge_walkup H) x)) = ((inverse ((swap (x , ((face_map H) x))) o (face_map H))) o (inverse ((swap (x , ((node_map H) x))) o (node_map H))))) /\ (((node_map ((edge_walkup H) x)) = ((swap (x , ((node_map H) x))) o (node_map H))) /\ ((face_map ((edge_walkup H) x)) = ((swap (x , ((face_map H) x))) o (face_map H))))))) x))
T c= c==> ! c/\ c= * part cdart cedge_walkup f0 b0 * * part cDELETE * part cdart f0 b0 c/\ c= * part cedge_map cedge_walkup f0 b0 * * part co * part cinverse * * part co * part cswap c, b0 cface_map f0 b0 * part cface_map f0 * part cinverse * * part co * part cswap c, b0 cnode_map f0 b0 * part cnode_map f0 c/\ c= * part cnode_map cedge_walkup f0 b0 * * part co * part cswap c, b0 cnode_map f0 b0 * part cnode_map f0 c= * part cface_map cedge_walkup f0 b0 * * part co * part cswap c, b0 cface_map f0 b0 * part cface_map f0 * / c/\ c= * part cdart cedge_walkup f0 b0 * * part cDELETE * part cdart f0 b0 c/\ c= * part cedge_map cedge_walkup f0 b0 * * part co * part cinverse * * part co * part cswap c, b0 cface_map f0 b0 * part cface_map f0 * part cinverse * * part co * part cswap c, b0 cnode_map f0 b0 * part cnode_map f0 c/\ c= * part cnode_map cedge_walkup f0 b0 * * part co * part cswap c, b0 cnode_map f0 b0 * part cnode_map f0 c= * part cface_map cedge_walkup f0 b0 * * part co * part cswap c, b0 cface_map f0 b0 * part cface_map f0 f1 * / c/\ c= * part cdart cedge_walkup f0 b0 * * part cDELETE * part cdart f0 b0 c/\ c= * part cedge_map cedge_walkup f0 b0 * * part co * part cinverse * * part co * part cswap c, b0 cface_map f0 b0 * part cface_map f0 * part cinverse * * part co * part cswap c, b0 cnode_map f0 b0 * part cnode_map f0 c/\ c= * part cnode_map cedge_walkup f0 b0 * * part co * part cswap c, b0 cnode_map f0 b0 * part cnode_map f0 c= * part cface_map cedge_walkup f0 b0 * * part co * part cswap c, b0 cface_map f0 b0 * part cface_map f0 f1
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))), ((FINITE s) /\ (x IN s)) |- (((FINITE s) /\ (x IN s)) /\ ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c==> c/\ cFINITE f0 cIN f1 f0 c/\ c/\ cFINITE f0 cIN f1 f0 c= cCARD f0 c+ cCARD * * part cDELETE f0 f1 cNUMERAL cBIT1 c_0
+ |- ((\H. (!x. (((dart ((edge_walkup H) x)) = ((dart H) DELETE x)) /\ (((edge_map ((edge_walkup H) x)) = ((inverse ((swap (x , ((face_map H) x))) o (face_map H))) o (inverse ((swap (x , ((node_map H) x))) o (node_map H))))) /\ (((node_map ((edge_walkup H) x)) = ((swap (x , ((node_map H) x))) o (node_map H))) /\ ((face_map ((edge_walkup H) x)) = ((swap (x , ((face_map H) x))) o (face_map H)))))))) H)
T * / ! c/\ c= * part cdart cedge_walkup b0 b1 * * part cDELETE * part cdart b0 b1 c/\ c= * part cedge_map cedge_walkup b0 b1 * * part co * part cinverse * * part co * part cswap c, b1 cface_map b0 b1 * part cface_map b0 * part cinverse * * part co * part cswap c, b1 cnode_map b0 b1 * part cnode_map b0 c/\ c= * part cnode_map cedge_walkup b0 b1 * * part co * part cswap c, b1 cnode_map b0 b1 * part cnode_map b0 c= * part cface_map cedge_walkup b0 b1 * * part co * part cswap c, b1 cface_map b0 b1 * part cface_map b0 f0
+ |- ((\x. (((dart ((edge_walkup H) x)) = ((dart H) DELETE x)) /\ (((edge_map ((edge_walkup H) x)) = ((inverse ((swap (x , ((face_map H) x))) o (face_map H))) o (inverse ((swap (x , ((node_map H) x))) o (node_map H))))) /\ (((node_map ((edge_walkup H) x)) = ((swap (x , ((node_map H) x))) o (node_map H))) /\ ((face_map ((edge_walkup H) x)) = ((swap (x , ((face_map H) x))) o (face_map H))))))) x)
T * / c/\ c= * part cdart cedge_walkup f0 b0 * * part cDELETE * part cdart f0 b0 c/\ c= * part cedge_map cedge_walkup f0 b0 * * part co * part cinverse * * part co * part cswap c, b0 cface_map f0 b0 * part cface_map f0 * part cinverse * * part co * part cswap c, b0 cnode_map f0 b0 * part cnode_map f0 c/\ c= * part cnode_map cedge_walkup f0 b0 * * part co * part cswap c, b0 cnode_map f0 b0 * part cnode_map f0 c= * part cface_map cedge_walkup f0 b0 * * part co * part cswap c, b0 cface_map f0 b0 * part cface_map f0 f1
+ (x IN (dart H)) |- ((CARD (dart H)) = ((CARD ((dart H) DELETE x)) + (NUMERAL (BIT1 _0))))
T c==> cIN f0 * part cdart f1 c= cCARD * part cdart f1 c+ cCARD * * part cDELETE * part cdart f1 f0 cNUMERAL cBIT1 c_0
- (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) |- ((!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) /\ (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))))
T c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 c/\ ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0
- |- (((!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))) ==> (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0)))))))) = (!s. (!x. (((FINITE s) /\ (x IN s)) ==> ((CARD s) = ((CARD (s DELETE x)) + (NUMERAL (BIT1 _0))))))))
T c= c==> ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0 ! ! c==> c/\ cFINITE b0 cIN b1 b0 c= cCARD b0 c+ cCARD * * part cDELETE b0 b1 cNUMERAL cBIT1 c_0
