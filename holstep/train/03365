N Seq2.all_perm_eq
C |- (!a. (!s1. (!s2. (((perm_eq s1) s2) ==> (((all a) s1) = ((all a) s2))))))
T c==> cperm_eq f0 f1 c= call f2 f0 call f2 f1
D Seq.all_count
A |- (!a. (!s. (((all a) s) = (((count a) s) = (sizel s)))))
T c= call f0 f1 c= ccount f0 f1 csizel f1
D Seq.perm_eqP
A |- (!s1. (!s2. (((perm_eq s1) s2) = (!a. (((count a) s1) = ((count a) s2))))))
T c= cperm_eq f0 f1 ! c= ccount b0 f0 ccount b0 f1
D Seq.perm_eq_size
A |- (!s1. (!s2. (((perm_eq s1) s2) ==> ((sizel s1) = (sizel s2)))))
T c==> cperm_eq f0 f1 c= csizel f0 csizel f1
+ |- ((!s1. (!s2. (((perm_eq s1) s2) ==> (((all a) s1) = ((all a) s2))))) = T)
T c= ! ! c==> cperm_eq b0 b1 c= call f0 b0 call f0 b1 cT
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
+ |- (((!s2. (((perm_eq s1) s2) = (!a. (((count a) s1) = ((count a) s2))))) ==> ((\s2. (((perm_eq s1) s2) = (!a. (((count a) s1) = ((count a) s2))))) s2)) = ((\s2. (((perm_eq s1) s2) = (!a. (((count a) s1) = ((count a) s2))))) s2))
T c= c==> ! c= cperm_eq f0 b0 ! c= ccount b1 f0 ccount b1 b0 * / c= cperm_eq f0 b0 ! c= ccount b1 f0 ccount b1 b0 f1 * / c= cperm_eq f0 b0 ! c= ccount b1 f0 ccount b1 b0 f1
- |- (T = ((((count a) s2) = (sizel s2)) = (((count a) s2) = (sizel s2))))
T c= cT c= c= ccount f0 f1 csizel f1 c= ccount f0 f1 csizel f1
+ (!a. (((count a) s1) = ((count a) s2))), ((perm_eq s1) s2) |- ((!a. (((count a) s1) = ((count a) s2))) /\ (((all a) s1) = ((all a) s2)))
T c==> ! c= ccount b0 f0 ccount b0 f1 c==> cperm_eq f0 f1 c/\ ! c= ccount b0 f0 ccount b0 f1 c= call f2 f0 call f2 f1
+ (!a. (((count a) s1) = ((count a) s2))), ((perm_eq s1) s2) |- ((((count a) s1) = (sizel s1)) = (((count a) s2) = (sizel s2)))
T c==> ! c= ccount b0 f0 ccount b0 f1 c==> cperm_eq f0 f1 c= c= ccount f2 f0 csizel f0 c= ccount f2 f1 csizel f1
+ |- (((!a. (((count a) s1) = ((count a) s2))) ==> (((all a) s1) = ((all a) s2))) = (((perm_eq s1) s2) ==> (((all a) s1) = ((all a) s2))))
T c= c==> ! c= ccount b0 f0 ccount b0 f1 c= call f2 f0 call f2 f1 c==> cperm_eq f0 f1 c= call f2 f0 call f2 f1
+ |- ((!s2. (((perm_eq s1) s2) ==> (((all a) s1) = ((all a) s2)))) = T)
T c= ! c==> cperm_eq f0 b0 c= call f1 f0 call f1 b0 cT
+ |- (((((count a) s1) = (sizel s1)) = (((count a) s2) = (sizel s2))) = ((((count a) s1) = (sizel s1)) = ((all a) s2)))
T c= c= c= ccount f0 f1 csizel f1 c= ccount f0 f2 csizel f2 c= c= ccount f0 f1 csizel f1 call f0 f2
+ |- ((((perm_eq s1) s2) ==> (((all a) s1) = ((all a) s2))) = T)
T c= c==> cperm_eq f0 f1 c= call f2 f0 call f2 f1 cT
+ |- ((\s2. (((perm_eq s1) s2) ==> ((sizel s1) = (sizel s2)))) s2)
T * / c==> cperm_eq f0 b0 c= csizel f0 csizel b0 f1
+ ((perm_eq s1) s2) |- (((perm_eq s1) s2) /\ (((all a) s1) = ((all a) s2)))
T c==> cperm_eq f0 f1 c/\ cperm_eq f0 f1 c= call f2 f0 call f2 f1
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
+ |- (((!s1. (!s2. (((perm_eq s1) s2) ==> ((sizel s1) = (sizel s2))))) ==> ((\s1. (!s2. (((perm_eq s1) s2) ==> ((sizel s1) = (sizel s2))))) s1)) = ((\s1. (!s2. (((perm_eq s1) s2) ==> ((sizel s1) = (sizel s2))))) s1))
T c= c==> ! ! c==> cperm_eq b0 b1 c= csizel b0 csizel b1 * / ! c==> cperm_eq b0 b1 c= csizel b0 csizel b1 f0 * / ! c==> cperm_eq b0 b1 c= csizel b0 csizel b1 f0
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- ((perm_eq s1) s2) |- (((perm_eq s1) s2) = T)
T c==> cperm_eq f0 f1 c= cperm_eq f0 f1 cT
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- (!a. (((count a) s1) = ((count a) s2))) |- (((((count a) s2) = (sizel s2)) = (((count a) s2) = (sizel s2))) = ((((count a) s1) = (sizel s2)) = (((count a) s2) = (sizel s2))))
T c==> ! c= ccount b0 f0 ccount b0 f1 c= c= c= ccount f2 f1 csizel f1 c= ccount f2 f1 csizel f1 c= c= ccount f2 f0 csizel f1 c= ccount f2 f1 csizel f1
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
