N Planarity.sym_line0_fan
C |- (!x. (!y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY))))))))
T c==> c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D DISJOINT
A |- (!s. (!t. (((DISJOINT s) t) = ((s INTER t) = EMPTY))))
T c= cDISJOINT f0 f1 c= * * part cINTER f0 f1 part cEMPTY
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D HULL_MONO
A |- (!P. (!s. (!t. ((s SUBSET t) ==> (((hull P) s) SUBSET ((hull P) t))))))
T c==> cSUBSET f0 f1 cSUBSET * * part chull f2 f0 * * part chull f2 f1
D Sphere.aff
A |- (aff = (hull affine))
T c= part caff * part chull part caffine
D Planarity.sym_line1_fan
A |- (!x. (!y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ (~ (x = y))) ==> (z IN (aff (x INSERT (y INSERT EMPTY))))))))
T c==> c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f0 f1 cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
D Planarity.POINT_IN_LINE
A |- (!x. (!y. (x IN (aff (x INSERT (y INSERT EMPTY))))))
T cIN f0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
D Planarity.AFFINE_HULL_AFFINE_EQ
A |- (!s. (((hull affine) ((hull affine) s)) = ((hull affine) s)))
T c= * * part chull part caffine * * part chull part caffine f0 * * part chull part caffine f0
+ ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- (((~ (x = y)) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY))))) = ((((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) ==> (~ (x = y))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY))))))
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> c~ c= f0 f1 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f0 f1 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (x IN (aff (y INSERT (z INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- ((((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) ==> (~ (x = y))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY)))))
T c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f0 f1 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (x IN (aff (y INSERT (z INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY))))
T c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
+ (~ ((aff (x INSERT (y INSERT EMPTY))) x')), (x' = z) |- (((aff (x INSERT (y INSERT EMPTY))) z) ==> F)
T c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c= f2 f3 c==> caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 cF
+ |- (((!t. (((x INSERT (z INSERT EMPTY)) SUBSET t) ==> (((hull affine) (x INSERT (z INSERT EMPTY))) SUBSET ((hull affine) t)))) ==> ((\t. (((x INSERT (z INSERT EMPTY)) SUBSET t) ==> (((hull affine) (x INSERT (z INSERT EMPTY))) SUBSET ((hull affine) t)))) (aff (x INSERT (y INSERT EMPTY))))) = ((\t. (((x INSERT (z INSERT EMPTY)) SUBSET t) ==> (((hull affine) (x INSERT (z INSERT EMPTY))) SUBSET ((hull affine) t)))) (aff (x INSERT (y INSERT EMPTY)))))
T c= c==> ! c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cSUBSET * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine b0 * / c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cSUBSET * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine b0 * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * / c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cSUBSET * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine b0 * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- (((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) ==> ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)) |- ((((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) ==> ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)) /\ (((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) ==> ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c/\ c==> c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ |- ((\z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ (~ (x = y))) ==> (z IN (aff (x INSERT (y INSERT EMPTY)))))) z)
T * / c==> c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ c= f0 f1 cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
- (~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) |- ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) /\ F)
T c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 c/\ c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF
- |- ((!x''. ((~ (x' = x)) \/ ((~ (x'' = y)) /\ (~ (x'' = z))))) = ((~ (x' = x)) \/ (!x'. ((~ (x' = y)) /\ (~ (x' = z))))))
T c= ! c\/ c~ c= f0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 c\/ c~ c= f0 f1 ! c/\ c~ c= b0 f2 c~ c= b0 f3
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (y = y)) ==> (y = y))
T c==> c~ c= f0 f0 c= f0 f0
- |- ((\y. (!x. (!z. ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)))) y)
T * / ! ! c==> c~ c==> c/\ caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b1 caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c==> c\/ c= b3 b1 c= b3 b2 caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 cF f0
- (~ ((aff (x INSERT (y INSERT EMPTY))) x')), (x' = x), (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) |- ((~ F) ==> F)
T c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c= f2 f0 c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c==> c~ cF cF
+ |- (((x INSERT (z INSERT EMPTY)) SUBSET (aff (x INSERT (y INSERT EMPTY)))) ==> (((hull affine) (x INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (aff (x INSERT (y INSERT EMPTY))))))
T c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cSUBSET * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ (!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) |- ((\x'. (((~ (x' = x)) \/ (~ (x' = y))) /\ ((~ (x' = x)) \/ (~ (x' = z))))) _3016568)
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * / c/\ c\/ c~ c= b0 f0 c~ c= b0 f1 c\/ c~ c= b0 f0 c~ c= b0 f2 f3
- (!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))), (~ F), (x = y) |- ((~ F) /\ F)
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c==> c~ cF c==> c= f0 f1 c/\ c~ cF cF
- |- ((((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)) ==> (((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)))
T c==> c==> c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF
+ |- (((!x'. ((x' IN ((x INSERT EMPTY) INTER (y INSERT (z INSERT EMPTY)))) = (x' IN EMPTY))) ==> (~ (x = y))) = (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) ==> (~ (x = y))))
T c= c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 part cEMPTY c~ c= f0 f1 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f0 f1
- (((hull affine) (x INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (aff (x INSERT (y INSERT EMPTY))))) |- ((((hull affine) (x INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (aff (x INSERT (y INSERT EMPTY))))) = T)
T c==> cSUBSET * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c= cSUBSET * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cT
- |- ((\x. (!z. ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F))) x)
T * / ! c==> c~ c==> ! c~ c/\ c= b2 b0 c\/ c= b2 f0 c= b2 b1 c~ c= b0 f0 cF f1
+ (~ (x = y)), (x IN (aff (y INSERT (z INSERT EMPTY)))) |- (((z IN (aff (x INSERT (y INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY))))) = ((((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ (~ (x = y))) ==> (z IN (aff (x INSERT (y INSERT EMPTY))))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY))))))
T c==> c~ c= f0 f1 c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c==> c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f0 f1 cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) |- ((((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x')) = T)
T c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c= c==> c\/ c= f3 f0 c= f3 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 cT
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (x = y) |- (((~ (_3016568 = x)) \/ (~ (_3016568 = y))) = ((~ (_3016568 = y)) \/ (~ (_3016568 = y))))
T c==> c= f0 f1 c= c\/ c~ c= f2 f0 c~ c= f2 f1 c\/ c~ c= f2 f1 c~ c= f2 f1
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)), ((x' = x) \/ (x' = z)) |- (((x' = x) \/ (x' = z)) /\ ((aff (x INSERT (y INSERT EMPTY))) x'))
T c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c\/ c= f3 f0 c= f3 f2 c/\ c\/ c= f3 f0 c= f3 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3
+ |- ((\P. (!s. (!t. ((s SUBSET t) ==> (((hull P) s) SUBSET ((hull P) t)))))) affine)
T * / ! ! c==> cSUBSET b1 b2 cSUBSET * * part chull b0 b1 * * part chull b0 b2 part caffine
+ (z IN (aff (x INSERT (y INSERT EMPTY)))) |- ((((x INSERT (z INSERT EMPTY)) SUBSET (aff (x INSERT (y INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY))))) = (((z IN (aff (x INSERT (y INSERT EMPTY)))) ==> ((x INSERT (z INSERT EMPTY)) SUBSET (aff (x INSERT (y INSERT EMPTY))))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY))))))
T c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cSUBSET * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (z IN (aff (x INSERT (y INSERT EMPTY)))) |- ((z IN (aff (x INSERT (y INSERT EMPTY)))) /\ ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY)))))
T c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (~ ((aff (x INSERT (y INSERT EMPTY))) x')), (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)), ((x' = x) \/ (x' = z)) |- ((~ ((aff (x INSERT (y INSERT EMPTY))) x')) /\ F)
T c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c==> c\/ c= f2 f0 c= f2 f3 c/\ c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
- |- (((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) ==> ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F))
T c==> c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF
+ |- (((!x. (!y. (x IN (aff (x INSERT (y INSERT EMPTY)))))) ==> ((\x. (!y. (x IN (aff (x INSERT (y INSERT EMPTY)))))) x)) = ((\x. (!y. (x IN (aff (x INSERT (y INSERT EMPTY)))))) x))
T c= c==> ! ! cIN b0 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! cIN b0 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 * / ! cIN b0 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
+ (!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) |- ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) /\ (~ (x = y)))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1
+ |- ((((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY))))) = T)
T c= c==> c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- ((!y. (!x. (!z. ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))))) = (!y. (!x. (!z. ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)))))
T c= ! ! ! c==> ! c~ c/\ c= b3 b1 c\/ c= b3 b0 c= b3 b2 c~ c= b1 b0 ! ! ! c==> c~ c==> ! c~ c/\ c= b3 b1 c\/ c= b3 b0 c= b3 b2 c~ c= b1 b0 cF
+ |- ((y = y) = ((y = y) /\ (y = y)))
T c= c= f0 f0 c/\ c= f0 f0 c= f0 f0
+ |- ((\y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ (~ (x = y))) ==> (z IN (aff (x INSERT (y INSERT EMPTY))))))) y)
T * / ! c==> c/\ cIN f0 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ c= f0 b0 cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
- |- ((!z. t) = t)
T c= ! f0 f0
- (x = y) |- (((~ (_3016568 = x)) \/ (~ (_3016568 = z))) = ((~ (_3016568 = y)) \/ (~ (_3016568 = z))))
T c==> c= f0 f1 c= c\/ c~ c= f2 f0 c~ c= f2 f3 c\/ c~ c= f2 f1 c~ c= f2 f3
+ |- (((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x')))) = (((x IN (aff (x INSERT (y INSERT EMPTY)))) /\ (z IN (aff (x INSERT (y INSERT EMPTY))))) ==> (!x'. ((x' IN (x INSERT (z INSERT EMPTY))) ==> (x' IN (aff (x INSERT (y INSERT EMPTY))))))))
T c= c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c==> c/\ cIN f0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (((!x. (!y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ (~ (x = y))) ==> (z IN (aff (x INSERT (y INSERT EMPTY)))))))) ==> ((\x. (!y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ (~ (x = y))) ==> (z IN (aff (x INSERT (y INSERT EMPTY)))))))) x)) = ((\x. (!y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ (~ (x = y))) ==> (z IN (aff (x INSERT (y INSERT EMPTY)))))))) x))
T c= c==> ! ! ! c==> c/\ cIN b0 * part caff * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= b0 b1 cIN b2 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! ! c==> c/\ cIN b0 * part caff * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= b0 b1 cIN b2 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 * / ! ! c==> c/\ cIN b0 * part caff * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= b0 b1 cIN b2 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- (!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))), (x = y) |- ((~ F) ==> F)
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c==> c= f0 f1 c==> c~ cF cF
- |- ((\z. ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)) z)
T * / c==> c~ c==> ! c~ c/\ c= b1 f0 c\/ c= b1 f1 c= b1 b0 c~ c= f0 f1 cF f2
+ (~ ((aff (x INSERT (y INSERT EMPTY))) x')), (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) |- ((x' = x) ==> F)
T c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c==> c= f2 f0 cF
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ |- (((!y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ (~ (x = y))) ==> (z IN (aff (x INSERT (y INSERT EMPTY))))))) ==> ((\y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ (~ (x = y))) ==> (z IN (aff (x INSERT (y INSERT EMPTY))))))) y)) = ((\y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ (~ (x = y))) ==> (z IN (aff (x INSERT (y INSERT EMPTY))))))) y))
T c= c==> ! ! c==> c/\ cIN f0 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ c= f0 b0 cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / ! c==> c/\ cIN f0 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ c= f0 b0 cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1 * / ! c==> c/\ cIN f0 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ c= f0 b0 cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
- (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) |- ((~ ((aff (x INSERT (y INSERT EMPTY))) x)) ==> ((aff (x INSERT (y INSERT EMPTY))) x))
T c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0
- |- ((!x. (!z. ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y))))) = T)
T c= ! ! c==> ! c~ c/\ c= b2 b0 c\/ c= b2 f0 c= b2 b1 c~ c= b0 f0 cT
- |- ((((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) ==> ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)) ==> (((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) ==> ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF
+ (~ ((aff (x INSERT (y INSERT EMPTY))) x')), (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) |- ((x' = z) ==> F)
T c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c==> c= f2 f3 cF
- |- (((!y. (!x. (!z. ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)))) ==> ((\y. (!x. (!z. ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)))) y)) = ((\y. (!x. (!z. ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)))) y))
T c= c==> ! ! ! c==> c~ c==> c/\ caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b1 caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c==> c\/ c= b3 b1 c= b3 b2 caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 cF * / ! ! c==> c~ c==> c/\ caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b1 caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c==> c\/ c= b3 b1 c= b3 b2 caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 cF f0 * / ! ! c==> c~ c==> c/\ caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b1 caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c==> c\/ c= b3 b1 c= b3 b2 caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 cF f0
+ (!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) |- (((~ (_3016568 = x)) \/ (~ (_3016568 = y))) /\ ((~ (_3016568 = x)) \/ (~ (_3016568 = z))))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c\/ c~ c= f3 f0 c~ c= f3 f1 c\/ c~ c= f3 f0 c~ c= f3 f2
+ (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) |- ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) /\ (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))
T c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c/\ c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0
+ |- (((!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ (~ (x = y))) ==> (z IN (aff (x INSERT (y INSERT EMPTY)))))) ==> ((\z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ (~ (x = y))) ==> (z IN (aff (x INSERT (y INSERT EMPTY)))))) z)) = ((\z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ (~ (x = y))) ==> (z IN (aff (x INSERT (y INSERT EMPTY)))))) z))
T c= c==> ! c==> c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ c= f0 f1 cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * / c==> c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ c= f0 f1 cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 * / c==> c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c~ c= f0 f1 cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ ((x INSERT (z INSERT EMPTY)) SUBSET (aff (x INSERT (y INSERT EMPTY)))) |- ((((x INSERT (z INSERT EMPTY)) SUBSET (aff (x INSERT (y INSERT EMPTY)))) ==> (((hull affine) (x INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (aff (x INSERT (y INSERT EMPTY)))))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY)))))
T c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cSUBSET * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- |- (((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) = ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y))))
T c= c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1
- (!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) |- ((~ (_3016568 = x)) \/ (~ (_3016568 = z)))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c~ c= f3 f0 c~ c= f3 f2
+ (~ ((aff (x INSERT (y INSERT EMPTY))) x')), (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)), ((x' = x) \/ (x' = z)) |- F
T c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c==> c\/ c= f2 f0 c= f2 f3 cF
+ |- ((!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY)))))) = T)
T c= ! c==> c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
- (~ (x = y)) |- (((~ (y = x)) ==> ((y = x) = F)) = ((y = x) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ (~ (x = y)) |- ((x = y) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
- (~ ((aff (x INSERT (y INSERT EMPTY))) x)), (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) |- ((~ ((aff (x INSERT (y INSERT EMPTY))) x)) /\ ((aff (x INSERT (y INSERT EMPTY))) x))
T c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c/\ c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (~ ((aff (x INSERT (y INSERT EMPTY))) x')), (x' = z) |- (~ ((aff (x INSERT (y INSERT EMPTY))) z))
T c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c= f2 f3 c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3
- |- ((!x'. ((P x') \/ Q)) = ((!x'. (P x')) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- ((\t. (((x INSERT (z INSERT EMPTY)) SUBSET t) ==> (((hull affine) (x INSERT (z INSERT EMPTY))) SUBSET ((hull affine) t)))) (aff (x INSERT (y INSERT EMPTY))))
T * / c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cSUBSET * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine b0 * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ |- (((((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ (~ (x = y))) ==> (z IN (aff (x INSERT (y INSERT EMPTY))))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY))))) = ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY)))))
T c= c==> c==> c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f0 f1 cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- (((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F))
T c==> c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF
- |- (((!z. ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)) ==> ((\z. ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)) z)) = ((\z. ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)) z))
T c= c==> ! c==> c~ c==> ! c~ c/\ c= b1 f0 c\/ c= b1 f1 c= b1 b0 c~ c= f0 f1 cF * / c==> c~ c==> ! c~ c/\ c= b1 f0 c\/ c= b1 f1 c= b1 b0 c~ c= f0 f1 cF f2 * / c==> c~ c==> ! c~ c/\ c= b1 f0 c\/ c= b1 f1 c= b1 b0 c~ c= f0 f1 cF f2
- |- (((((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) ==> ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)) ==> (((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) ==> ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F))) = (((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) ==> ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)))
T c= c==> c==> c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF
+ (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)), ((x' = x) \/ (x' = z)) |- ((~ ((aff (x INSERT (y INSERT EMPTY))) x')) ==> F)
T c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c\/ c= f3 f0 c= f3 f2 c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 cF
+ ((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))), (x IN (aff (y INSERT (z INSERT EMPTY)))) |- ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY))))
T c==> c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y))) = ((!x'. ((x' IN ((x INSERT EMPTY) INTER (y INSERT (z INSERT EMPTY)))) = (x' IN EMPTY))) ==> (~ (x = y))))
T c= c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 part cEMPTY c~ c= f0 f1
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (z IN (aff (x INSERT (y INSERT EMPTY)))) |- ((z IN (aff (x INSERT (y INSERT EMPTY)))) = T)
T c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ (~ (x = y)), (x IN (aff (y INSERT (z INSERT EMPTY)))) |- ((~ (x = y)) /\ ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY)))))
T c==> c~ c= f0 f1 c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 f1 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((!z. ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) = T)
T c= ! c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> c\/ c= b1 f0 c= b1 b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 cT
- (~ ((aff (x INSERT (y INSERT EMPTY))) x')), (x' = z), (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) |- ((~ F) ==> F)
T c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c= f2 f3 c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c==> c~ cF cF
+ (!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) |- (!x'. (((~ (x' = x)) \/ (~ (x' = y))) /\ ((~ (x' = x)) \/ (~ (x' = z)))))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c/\ c\/ c~ c= b0 f0 c~ c= b0 f1 c\/ c~ c= b0 f0 c~ c= b0 f2
+ ((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) |- (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) /\ ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY)))))
T c==> c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c/\ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) |- ((~ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> ((aff (x INSERT (y INSERT EMPTY))) z))
T c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
- |- (((!x. (!z. ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F))) ==> ((\x. (!z. ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F))) x)) = ((\x. (!z. ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F))) x))
T c= c==> ! ! c==> c~ c==> c/\ caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b0 caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 ! c==> c\/ c= b2 b0 c= b2 b1 caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 cF * / ! c==> c~ c==> c/\ caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b0 caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 ! c==> c\/ c= b2 b0 c= b2 b1 caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 cF f1 * / ! c==> c~ c==> c/\ caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b0 caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 ! c==> c\/ c= b2 b0 c= b2 b1 caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 cF f1
+ ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) |- (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) = T)
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((\z. ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)) z)
T * / c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> c\/ c= b1 f0 c= b1 b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 cF f2
+ (z IN (aff (x INSERT (y INSERT EMPTY)))) |- (((z IN (aff (x INSERT (y INSERT EMPTY)))) ==> ((x INSERT (z INSERT EMPTY)) SUBSET (aff (x INSERT (y INSERT EMPTY))))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY)))))
T c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ ((aff (x INSERT (y INSERT EMPTY))) x')), (x' = x), (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) |- ((x' = x) /\ F)
T c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c= f2 f0 c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c/\ c= f2 f0 cF
- (y = x) |- (x = y)
T c==> c= f0 f1 c= f1 f0
+ ((x INSERT (z INSERT EMPTY)) SUBSET (aff (x INSERT (y INSERT EMPTY)))) |- (((x INSERT (z INSERT EMPTY)) SUBSET (aff (x INSERT (y INSERT EMPTY)))) = T)
T c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c= cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cT
- ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F), (((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) ==> ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)) |- ((((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) ==> ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)) /\ ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F))
T c==> c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c/\ c==> c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF
+ |- (((~ a) \/ (~ b)) = (~ (a /\ b)))
T c= c\/ c~ f0 c~ f1 c~ c/\ f0 f1
+ |- (((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) ==> (~ (x = y)))
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f0 f1
+ |- (((((x IN (aff (x INSERT (y INSERT EMPTY)))) /\ (z IN (aff (x INSERT (y INSERT EMPTY))))) ==> ((x INSERT (z INSERT EMPTY)) SUBSET (aff (x INSERT (y INSERT EMPTY))))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY))))) = ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY)))))
T c= c==> c==> c/\ cIN f0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((\s. (!t. ((s SUBSET t) ==> (((hull affine) s) SUBSET ((hull affine) t))))) (x INSERT (z INSERT EMPTY)))
T * / ! c==> cSUBSET b0 b1 cSUBSET * * part chull part caffine b0 * * part chull part caffine b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (~ (x = y)), (x IN (aff (y INSERT (z INSERT EMPTY)))) |- ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (~ ((aff (x INSERT (y INSERT EMPTY))) x')), (x' = z), (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) |- F
T c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c= f2 f3 c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 cF
+ (x' = x) |- ((~ ((aff (x INSERT (y INSERT EMPTY))) x')) = (~ ((aff (x INSERT (y INSERT EMPTY))) x)))
T c==> c= f0 f1 c= c~ caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c~ caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1
+ |- ((((y = y) /\ (y = y)) ==> F) = F)
T c= c==> c/\ c= f0 f0 c= f0 f0 cF cF
- (x' = x) |- (((aff (x INSERT (y INSERT EMPTY))) x) = ((aff (x INSERT (y INSERT EMPTY))) x))
T c==> c= f0 f1 c= caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1
- ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F), (((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) ==> ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)) |- (((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) /\ ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F))
T c==> c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c/\ c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF
+ |- ((\x. (!y. (x IN (aff (x INSERT (y INSERT EMPTY)))))) x)
T * / ! cIN b0 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
+ ((x INSERT (z INSERT EMPTY)) SUBSET (aff (x INSERT (y INSERT EMPTY)))) |- (((x INSERT (z INSERT EMPTY)) SUBSET (aff (x INSERT (y INSERT EMPTY)))) /\ ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY)))))
T c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- (x = y) |- (F = F)
T c==> c= f0 f1 c= cF cF
+ (!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) |- ((~ (_3016568 = x)) \/ (~ (_3016568 = y)))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c~ c= f3 f0 c~ c= f3 f1
- (x' = z) |- (((aff (x INSERT (y INSERT EMPTY))) z) = ((aff (x INSERT (y INSERT EMPTY))) z))
T c==> c= f0 f1 c= caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1
+ |- ((y = y) /\ (y = y))
T c/\ c= f0 f0 c= f0 f0
+ |- (((x IN (aff (x INSERT (y INSERT EMPTY)))) /\ (z IN (aff (x INSERT (y INSERT EMPTY))))) ==> (!x'. ((x' IN (x INSERT (z INSERT EMPTY))) ==> (x' IN (aff (x INSERT (y INSERT EMPTY)))))))
T c==> c/\ cIN f0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- (((((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)) ==> (((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F))) = (((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)))
T c= c==> c==> c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF
+ |- ((\y. (x IN (aff (x INSERT (y INSERT EMPTY))))) y)
T * / cIN f0 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
- |- ((!x''. ((~ (x'' = x)) \/ ((~ (x' = y)) /\ (~ (x' = z))))) = ((!x'. (~ (x' = x))) \/ ((~ (x' = y)) /\ (~ (x' = z)))))
T c= ! c\/ c~ c= b0 f0 c/\ c~ c= f1 f2 c~ c= f1 f3 c\/ ! c~ c= b0 f0 c/\ c~ c= f1 f2 c~ c= f1 f3
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ |- ((!y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ ((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY)))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY))))))) = T)
T c= ! ! c==> c/\ cIN f0 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cT
- |- (((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y))) = T)
T c= c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cT
+ |- ((x IN (aff (x INSERT (y INSERT EMPTY)))) = T)
T c= cIN f0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
- |- ((!y. (!x. (!z. ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))))) = (!y. (!x. (!z. ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)))))
T c= ! ! ! c==> c/\ caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b1 caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c==> c\/ c= b3 b1 c= b3 b2 caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 ! ! ! c==> c~ c==> c/\ caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b1 caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b2 ! c==> c\/ c= b3 b1 c= b3 b2 caff * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 cF
- (~ F), (~ ((aff (x INSERT (y INSERT EMPTY))) x')), (x' = z), (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c= f2 f3 c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c/\ c~ cF cF
- |- (((!y. (!x. (!z. ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)))) ==> ((\y. (!x. (!z. ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)))) y)) = ((\y. (!x. (!z. ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)))) y))
T c= c==> ! ! ! c==> c~ c==> ! c~ c/\ c= b3 b1 c\/ c= b3 b0 c= b3 b2 c~ c= b1 b0 cF * / ! ! c==> c~ c==> ! c~ c/\ c= b3 b1 c\/ c= b3 b0 c= b3 b2 c~ c= b1 b0 cF f0 * / ! ! c==> c~ c==> ! c~ c/\ c= b3 b1 c\/ c= b3 b0 c= b3 b2 c~ c= b1 b0 cF f0
+ |- ((\s. (((hull affine) ((hull affine) s)) = ((hull affine) s))) s)
T * / c= * * part chull part caffine * * part chull part caffine b0 * * part chull part caffine b0 f0
+ |- (((!s. (!t. ((s SUBSET t) ==> (((hull affine) s) SUBSET ((hull affine) t))))) ==> ((\s. (!t. ((s SUBSET t) ==> (((hull affine) s) SUBSET ((hull affine) t))))) (x INSERT (z INSERT EMPTY)))) = ((\s. (!t. ((s SUBSET t) ==> (((hull affine) s) SUBSET ((hull affine) t))))) (x INSERT (z INSERT EMPTY))))
T c= c==> ! ! c==> cSUBSET b0 b1 cSUBSET * * part chull part caffine b0 * * part chull part caffine b1 * / ! c==> cSUBSET b0 b1 cSUBSET * * part chull part caffine b0 * * part chull part caffine b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * / ! c==> cSUBSET b0 b1 cSUBSET * * part chull part caffine b0 * * part chull part caffine b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (((!P. (!s. (!t. ((s SUBSET t) ==> (((hull P) s) SUBSET ((hull P) t)))))) ==> ((\P. (!s. (!t. ((s SUBSET t) ==> (((hull P) s) SUBSET ((hull P) t)))))) affine)) = ((\P. (!s. (!t. ((s SUBSET t) ==> (((hull P) s) SUBSET ((hull P) t)))))) affine))
T c= c==> ! ! ! c==> cSUBSET b1 b2 cSUBSET * * part chull b0 b1 * * part chull b0 b2 * / ! ! c==> cSUBSET b1 b2 cSUBSET * * part chull b0 b1 * * part chull b0 b2 part caffine * / ! ! c==> cSUBSET b1 b2 cSUBSET * * part chull b0 b1 * * part chull b0 b2 part caffine
+ |- (((((DISJOINT (x INSERT EMPTY)) (y INSERT (z INSERT EMPTY))) ==> (~ (x = y))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY))))) = ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY)))))
T c= c==> c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ c= f0 f1 cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- (((!x. (!z. ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F))) ==> ((\x. (!z. ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F))) x)) = ((\x. (!z. ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F))) x))
T c= c==> ! ! c==> c~ c==> ! c~ c/\ c= b2 b0 c\/ c= b2 f0 c= b2 b1 c~ c= b0 f0 cF * / ! c==> c~ c==> ! c~ c/\ c= b2 b0 c\/ c= b2 f0 c= b2 b1 c~ c= b0 f0 cF f1 * / ! c==> c~ c==> ! c~ c/\ c= b2 b0 c\/ c= b2 f0 c= b2 b1 c~ c= b0 f0 cF f1
+ (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) |- (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))
T c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c\/ c= f3 f0 c= f3 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3
- (~ F), (~ ((aff (x INSERT (y INSERT EMPTY))) x')), (x' = x), (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c= f2 f0 c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c/\ c~ cF cF
- |- ((!x'. (P \/ (Q x'))) = (P \/ (!x'. (Q x'))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ (z IN (aff (x INSERT (y INSERT EMPTY)))) |- ((((x IN (aff (x INSERT (y INSERT EMPTY)))) /\ (z IN (aff (x INSERT (y INSERT EMPTY))))) ==> ((x INSERT (z INSERT EMPTY)) SUBSET (aff (x INSERT (y INSERT EMPTY))))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY)))))
T c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c==> c/\ cIN f1 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) |- (((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) /\ ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F))
T c==> c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c/\ c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF
+ |- ((((x IN (aff (x INSERT (y INSERT EMPTY)))) /\ (z IN (aff (x INSERT (y INSERT EMPTY))))) ==> (!x'. ((x' IN (x INSERT (z INSERT EMPTY))) ==> (x' IN (aff (x INSERT (y INSERT EMPTY))))))) = (((x IN (aff (x INSERT (y INSERT EMPTY)))) /\ (z IN (aff (x INSERT (y INSERT EMPTY))))) ==> ((x INSERT (z INSERT EMPTY)) SUBSET (aff (x INSERT (y INSERT EMPTY))))))
T c= c==> c/\ cIN f0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cIN b0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c/\ cIN f0 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (~ ((aff (x INSERT (y INSERT EMPTY))) x')), (x' = z), (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) |- ((x' = z) /\ F)
T c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c= f2 f3 c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c/\ c= f2 f3 cF
+ |- ((((z IN (aff (x INSERT (y INSERT EMPTY)))) ==> ((x INSERT (z INSERT EMPTY)) SUBSET (aff (x INSERT (y INSERT EMPTY))))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY))))) = ((((x IN (aff (x INSERT (y INSERT EMPTY)))) /\ (z IN (aff (x INSERT (y INSERT EMPTY))))) ==> ((x INSERT (z INSERT EMPTY)) SUBSET (aff (x INSERT (y INSERT EMPTY))))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY))))))
T c= c==> c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c==> c/\ cIN f1 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * part caff * * part cINSERT f1 * * part cINSERT f0 part cEMPTY * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) |- ((((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) ==> ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)) ==> ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F))
T c==> c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c==> c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x')))) = T)
T c= c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cT
- (~ ((aff (x INSERT (y INSERT EMPTY))) z)), (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) |- ((~ ((aff (x INSERT (y INSERT EMPTY))) z)) /\ ((aff (x INSERT (y INSERT EMPTY))) z))
T c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c/\ c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
+ |- ((!x'. ((x' IN ((x INSERT EMPTY) INTER (y INSERT (z INSERT EMPTY)))) = (x' IN EMPTY))) ==> (~ (x = y)))
T c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 part cEMPTY c~ c= f0 f1
+ (~ ((aff (x INSERT (y INSERT EMPTY))) x')), (x' = x) |- (((aff (x INSERT (y INSERT EMPTY))) x) ==> F)
T c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c= f2 f0 c==> caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 cF
+ (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) |- ((((aff (x INSERT (y INSERT EMPTY))) x) ==> F) = F)
T c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c= c==> caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 cF cF
- (~ (x = y)) |- (~ (y = x))
T c==> c~ c= f0 f1 c~ c= f1 f0
- ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) |- (((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) /\ ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F))
T c==> c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c/\ c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF
+ (x' = z) |- ((~ ((aff (x INSERT (y INSERT EMPTY))) x')) = (~ ((aff (x INSERT (y INSERT EMPTY))) z)))
T c==> c= f0 f1 c= c~ caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c~ caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1
- ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) |- ((((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)) ==> ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F))
T c==> c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c==> c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF
+ |- (T = ((((hull affine) (x INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (aff (x INSERT (y INSERT EMPTY))))) ==> ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY))))))
T c= cT c==> cSUBSET * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
+ |- (((!y. (x IN (aff (x INSERT (y INSERT EMPTY))))) ==> ((\y. (x IN (aff (x INSERT (y INSERT EMPTY))))) y)) = ((\y. (x IN (aff (x INSERT (y INSERT EMPTY))))) y))
T c= c==> ! cIN f0 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / cIN f0 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1 * / cIN f0 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
- |- ((\y. (!x. (!z. ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)))) y)
T * / ! ! c==> c~ c==> ! c~ c/\ c= b3 b1 c\/ c= b3 b0 c= b3 b2 c~ c= b1 b0 cF f0
+ (((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) |- ((((aff (x INSERT (y INSERT EMPTY))) z) ==> F) = F)
T c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c= c==> caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF cF
- ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F), (((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)) |- ((((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)) /\ ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F))
T c==> c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c==> c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c/\ c==> c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF
+ |- (((!s. (((hull affine) ((hull affine) s)) = ((hull affine) s))) ==> ((\s. (((hull affine) ((hull affine) s)) = ((hull affine) s))) s)) = ((\s. (((hull affine) ((hull affine) s)) = ((hull affine) s))) s))
T c= c==> ! c= * * part chull part caffine * * part chull part caffine b0 * * part chull part caffine b0 * / c= * * part chull part caffine * * part chull part caffine b0 * * part chull part caffine b0 f0 * / c= * * part chull part caffine * * part chull part caffine b0 * * part chull part caffine b0 f0
- (~ (x = y)) |- ((y = x) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
+ |- ((\x. (!y. (!z. (((x IN (aff (y INSERT (z INSERT EMPTY)))) /\ (~ (x = y))) ==> (z IN (aff (x INSERT (y INSERT EMPTY)))))))) x)
T * / ! ! c==> c/\ cIN b0 * part caff * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ c= b0 b1 cIN b2 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
+ |- ((x IN EMPTY) = F)
T c= cIN f0 part cEMPTY cF
+ (!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))), (x = y) |- (((_3016568 = y) /\ (_3016568 = y)) ==> F)
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c==> c= f0 f1 c==> c/\ c= f3 f1 c= f3 f1 cF
+ (!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) |- (!x'. ((~ (x' = x)) \/ ((~ (x' = y)) /\ (~ (x' = z)))))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c\/ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2
- |- ((\x. (!z. ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F))) x)
T * / ! c==> c~ c==> c/\ caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b0 caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 ! c==> c\/ c= b2 b0 c= b2 b1 caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 cF f1
- |- ((!z. ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) = T)
T c= ! c==> ! c~ c/\ c= b1 f0 c\/ c= b1 f1 c= b1 b0 c~ c= f0 f1 cT
- (~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) |- F
T c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF
- |- ((!x'. (P x')) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)) = ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F))
T c= c==> c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- (((!z. ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)) ==> ((\z. ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)) z)) = ((\z. ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)) z))
T c= c==> ! c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> c\/ c= b1 f0 c= b1 b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 cF * / c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> c\/ c= b1 f0 c= b1 b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 cF f2 * / c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 ! c==> c\/ c= b1 f0 c= b1 b0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 cF f2
- |- (((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) = ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x')))))
T c= c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0
- (x' = z) |- (((aff (x INSERT (y INSERT EMPTY))) x) = ((aff (x INSERT (y INSERT EMPTY))) x))
T c==> c= f0 f1 c= caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2
- |- ((((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F) ==> ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F)) = ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) ==> F))
T c= c==> c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF
- (((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)) |- ((((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)) /\ (((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)))
T c==> c==> c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c/\ c==> c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF
- (x' = x) |- (((aff (x INSERT (y INSERT EMPTY))) z) = ((aff (x INSERT (y INSERT EMPTY))) z))
T c==> c= f0 f1 c= caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- |- ((!x. (!z. ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x')))))) = T)
T c= ! ! c==> c/\ caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b0 caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b1 ! c==> c\/ c= b2 b0 c= b2 b1 caff * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 cT
- (((hull affine) (x INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (aff (x INSERT (y INSERT EMPTY))))) |- ((((hull affine) (x INSERT (z INSERT EMPTY))) SUBSET ((hull affine) (aff (x INSERT (y INSERT EMPTY))))) /\ ((aff (x INSERT (z INSERT EMPTY))) SUBSET (aff (x INSERT (y INSERT EMPTY)))))
T c==> cSUBSET * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c/\ cSUBSET * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part chull part caffine * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cSUBSET * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- (~ (y = y)) |- ((~ (y = y)) /\ (y = y))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- (~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) |- ((~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) /\ F)
T c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 c/\ c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF
- ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F), (((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F)) |- (((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F) /\ ((~ ((!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))) ==> (~ (x = y)))) ==> F))
T c==> c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c==> c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c/\ c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF c==> c~ c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c~ c= f0 f1 cF
- (~ ((((aff (x INSERT (y INSERT EMPTY))) x) /\ ((aff (x INSERT (y INSERT EMPTY))) z)) ==> (!x'. (((x' = x) \/ (x' = z)) ==> ((aff (x INSERT (y INSERT EMPTY))) x'))))) |- F
T c==> c~ c==> c/\ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 ! c==> c\/ c= b0 f0 c= b0 f2 caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b0 cF
- (!x'. (~ ((x' = x) /\ ((x' = y) \/ (x' = z))))), (x = y) |- ((~ (_3016568 = y)) \/ (~ (_3016568 = z)))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c==> c= f0 f1 c\/ c~ c= f3 f1 c~ c= f3 f2
