N SLICE_UNIV
C |- (!k. (!a. (((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV)))) ==> ((((slice k) a) UNIV) = UNIV))))
T c==> c/\ c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= * * * part cslice f0 f1 part cUNIV part cUNIV
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D IN_UNIV
A |- (!x. (x IN UNIV))
T cIN f0 part cUNIV
D IN_IMAGE
A |- (!y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))))
T c= cIN f0 * * part cIMAGE f1 f2 c? / c/\ c= f0 * f1 b0 cIN b0 f2
D INTER_UNIV
A |- ((!s. ((UNIV INTER s) = s)) /\ (!s. ((s INTER UNIV) = s)))
T c/\ ! c= * * part cINTER part cUNIV b0 b0 ! c= * * part cINTER b0 part cUNIV b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D pushin
A |- (!k. (!t. (!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0)))))))))))
T c= cpushin f0 f1 f2 clambda / cCOND c< b0 f0 c$ f2 b0 cCOND c= b0 f0 f1 c$ f2 c- b0 cNUMERAL cBIT1 c_0
D DROPOUT_PUSHIN
A |- (!k. (!t. (!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x)))))
T c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout f0 cpushin f0 f1 f2 f2
D slice
A |- (!s. (!k. (!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x))))))))))
T c= * * * part cslice f0 f1 f2 * * part cIMAGE * part cdropout f0 * * part cINTER f2 * part cGSPEC / c? / cSETSPEC b0 c= c$ b1 f0 f1 b1
+ (~ F) |- ((~ F) /\ ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = a))
T c==> c~ cF c/\ c~ cF c= cCOND c= f0 f0 f1 c$ f2 c- f0 cNUMERAL cBIT1 c_0 f1
+ |- ((\x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x))) x)
T * / c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout f0 cpushin f0 f1 b0 b0 f2
+ (((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) |- ((((((pushin k) a) y) $ k) = a) = ((y = ((dropout k) (((pushin k) a) y))) /\ (((((pushin k) a) y) $ k) = a)))
T c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c= c$ cpushin f0 f1 f2 f0 f1 c/\ c= f2 cdropout f0 cpushin f0 f1 f2 c= c$ cpushin f0 f1 f2 f0 f1
+ ((NUMERAL (BIT1 _0)) <= k) |- (((NUMERAL (BIT1 _0)) <= k) = T)
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c<= cNUMERAL cBIT1 c_0 f0 cT
- |- (((!g'. (!t'. (!e'. (((i < k) = g') ==> ((g' ==> ((y $ i) = t')) ==> (((~ g') ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((i < k) = g') ==> ((g' ==> ((y $ i) = t')) ==> (((~ g') ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((i < k) = g') ==> ((g' ==> ((y $ i) = t')) ==> (((~ g') ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c< f0 f1 b0 c==> c==> b0 c= c$ f2 f0 b1 c==> c==> c~ b0 c= cCOND c= f0 f1 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c< f0 f1 c$ f2 f0 cCOND c= f0 f1 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 * / ! ! c==> c= c< f0 f1 b0 c==> c==> b0 c= c$ f2 f0 b1 c==> c==> c~ b0 c= cCOND c= f0 f1 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c< f0 f1 c$ f2 f0 cCOND c= f0 f1 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f4 * / ! ! c==> c= c< f0 f1 b0 c==> c==> b0 c= c$ f2 f0 b1 c==> c==> c~ b0 c= cCOND c= f0 f1 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c< f0 f1 c$ f2 f0 cCOND c= f0 f1 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f4
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- ((s INTER UNIV) = s)
T c= * * part cINTER f0 part cUNIV f0
+ |- ((\x. (x IN UNIV)) x)
T * / cIN b0 part cUNIV f0
- |- ((((i = k) ==> (a = a)) ==> (((~ (i = k)) ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND (i = k)) a) e')))) = (((~ (i = k)) ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND (i = k)) a) e'))))
T c= c==> c==> c= f0 f1 c= f2 f2 c==> c==> c~ c= f0 f1 c= c$ f3 c- f0 cNUMERAL cBIT1 c_0 f4 c= cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND c= f0 f1 f2 f4 c==> c==> c~ c= f0 f1 c= c$ f3 c- f0 cNUMERAL cBIT1 c_0 f4 c= cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND c= f0 f1 f2 f4
+ |- (((k < k) = g') ==> ((g' ==> ((y $ k) = t')) ==> (((~ g') ==> ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))
T c==> c= c< f0 f0 f1 c==> c==> f1 c= c$ f2 f0 f3 c==> c==> c~ f1 c= cCOND c= f0 f0 f4 c$ f2 c- f0 cNUMERAL cBIT1 c_0 f5 c= cCOND c< f0 f0 c$ f2 f0 cCOND c= f0 f0 f4 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND f1 f3 f5
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ |- ((\t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x)))))))) t)
T * / c= * * * part cslice f0 b0 f1 * * part cIMAGE * part cdropout f0 * * part cINTER f1 * part cGSPEC / c? / cSETSPEC b1 c= c$ b2 f0 b0 b2 f2
+ |- (((!e'. (((k < k) = g') ==> ((g' ==> ((y $ k) = t')) ==> (((~ g') ==> ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))) ==> ((\e'. (((k < k) = g') ==> ((g' ==> ((y $ k) = t')) ==> (((~ g') ==> ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))) e')) = ((\e'. (((k < k) = g') ==> ((g' ==> ((y $ k) = t')) ==> (((~ g') ==> ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c< f0 f0 f1 c==> c==> f1 c= c$ f2 f0 f3 c==> c==> c~ f1 c= cCOND c= f0 f0 f4 c$ f2 c- f0 cNUMERAL cBIT1 c_0 b0 c= cCOND c< f0 f0 c$ f2 f0 cCOND c= f0 f0 f4 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND f1 f3 b0 * / c==> c= c< f0 f0 f1 c==> c==> f1 c= c$ f2 f0 f3 c==> c==> c~ f1 c= cCOND c= f0 f0 f4 c$ f2 c- f0 cNUMERAL cBIT1 c_0 b0 c= cCOND c< f0 f0 c$ f2 f0 cCOND c= f0 f0 f4 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND f1 f3 b0 f5 * / c==> c= c< f0 f0 f1 c==> c==> f1 c= c$ f2 f0 f3 c==> c==> c~ f1 c= cCOND c= f0 f0 f4 c$ f2 c- f0 cNUMERAL cBIT1 c_0 b0 c= cCOND c< f0 f0 c$ f2 f0 cCOND c= f0 f0 f4 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND f1 f3 b0 f5
+ |- ((\t. (!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0)))))))))) t)
T * / ! c= cpushin f0 b0 b1 clambda / cCOND c< b2 f0 c$ b1 b2 cCOND c= b2 f0 b0 c$ b1 c- b2 cNUMERAL cBIT1 c_0 f1
- |- (((!g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> (a = t')) ==> (((~ g') ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> (a = t')) ==> (((~ g') ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> (a = t')) ==> (((~ g') ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= f2 b1 c==> c==> c~ b0 c= c$ f3 c- f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= f2 b1 c==> c==> c~ b0 c= c$ f3 c- f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f4 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= f2 b1 c==> c==> c~ b0 c= c$ f3 c- f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f4
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- |- ((((i = k) = (i = k)) ==> (((i = k) ==> (a = t')) ==> (((~ (i = k)) ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND (i = k)) t') e'))))) = (((i = k) ==> (a = t')) ==> (((~ (i = k)) ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND (i = k)) t') e')))))
T c= c==> c= c= f0 f1 c= f0 f1 c==> c==> c= f0 f1 c= f2 f3 c==> c==> c~ c= f0 f1 c= c$ f4 c- f0 cNUMERAL cBIT1 c_0 f5 c= cCOND c= f0 f1 f2 c$ f4 c- f0 cNUMERAL cBIT1 c_0 cCOND c= f0 f1 f3 f5 c==> c==> c= f0 f1 c= f2 f3 c==> c==> c~ c= f0 f1 c= c$ f4 c- f0 cNUMERAL cBIT1 c_0 f5 c= cCOND c= f0 f1 f2 c$ f4 c- f0 cNUMERAL cBIT1 c_0 cCOND c= f0 f1 f3 f5
- |- (((!t'. (!e'. (((i < k) = g') ==> ((g' ==> ((y $ i) = t')) ==> (((~ g') ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((i < k) = g') ==> ((g' ==> ((y $ i) = t')) ==> (((~ g') ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((i < k) = g') ==> ((g' ==> ((y $ i) = t')) ==> (((~ g') ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c< f0 f1 f2 c==> c==> f2 c= c$ f3 f0 b0 c==> c==> c~ f2 c= cCOND c= f0 f1 f4 c$ f3 c- f0 cNUMERAL cBIT1 c_0 b1 c= cCOND c< f0 f1 c$ f3 f0 cCOND c= f0 f1 f4 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 * / ! c==> c= c< f0 f1 f2 c==> c==> f2 c= c$ f3 f0 b0 c==> c==> c~ f2 c= cCOND c= f0 f1 f4 c$ f3 c- f0 cNUMERAL cBIT1 c_0 b1 c= cCOND c< f0 f1 c$ f3 f0 cCOND c= f0 f1 f4 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 f5 * / ! c==> c= c< f0 f1 f2 c==> c==> f2 c= c$ f3 f0 b0 c==> c==> c~ f2 c= cCOND c= f0 f1 f4 c$ f3 c- f0 cNUMERAL cBIT1 c_0 b1 c= cCOND c< f0 f1 c$ f3 f0 cCOND c= f0 f1 f4 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 f5
+ |- (((!t'. (!e'. (((k < k) = g') ==> ((g' ==> ((y $ k) = t')) ==> (((~ g') ==> ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((k < k) = g') ==> ((g' ==> ((y $ k) = t')) ==> (((~ g') ==> ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((k < k) = g') ==> ((g' ==> ((y $ k) = t')) ==> (((~ g') ==> ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c< f0 f0 f1 c==> c==> f1 c= c$ f2 f0 b0 c==> c==> c~ f1 c= cCOND c= f0 f0 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 b1 c= cCOND c< f0 f0 c$ f2 f0 cCOND c= f0 f0 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 * / ! c==> c= c< f0 f0 f1 c==> c==> f1 c= c$ f2 f0 b0 c==> c==> c~ f1 c= cCOND c= f0 f0 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 b1 c= cCOND c< f0 f0 c$ f2 f0 cCOND c= f0 f0 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 f4 * / ! c==> c= c< f0 f0 f1 c==> c==> f1 c= c$ f2 f0 b0 c==> c==> c~ f1 c= cCOND c= f0 f0 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 b1 c= cCOND c< f0 f0 c$ f2 f0 cCOND c= f0 f0 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 f4
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- |- ((~ (i = k)) ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = (y $ (i - (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 f1 c= c$ f2 c- f0 cNUMERAL cBIT1 c_0 c$ f2 c- f0 cNUMERAL cBIT1 c_0
+ (k <= (dimindex UNIV)), ((NUMERAL (BIT1 _0)) <= k) |- (T = (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))))
T c==> c<= f0 cdimindex part cUNIV c==> c<= cNUMERAL cBIT1 c_0 f0 c= cT c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV
- |- ((\s. ((s INTER UNIV) = s)) s)
T * / c= * * part cINTER b0 part cUNIV b0 f0
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- (~ (i < k)) |- ((i < k) = F)
T c==> c~ c< f0 f1 c= c< f0 f1 cF
+ |- ((x IN (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = a)) x))))) = ((x $ k) = a))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c= c$ b1 f1 f2 b1 c= c$ f0 f1 f2
+ (((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)), (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))), ((NUMERAL (BIT1 _0)) <= k) |- ((((slice k) a) UNIV) = UNIV)
T c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c<= cNUMERAL cBIT1 c_0 f0 c= * * * part cslice f0 f1 part cUNIV part cUNIV
- |- (((!s. ((s INTER UNIV) = s)) ==> ((\s. ((s INTER UNIV) = s)) s)) = ((\s. ((s INTER UNIV) = s)) s))
T c= c==> ! c= * * part cINTER b0 part cUNIV b0 * / c= * * part cINTER b0 part cUNIV b0 f0 * / c= * * part cINTER b0 part cUNIV b0 f0
- |- (((!e'. (((i < k) = g') ==> ((g' ==> ((y $ i) = t')) ==> (((~ g') ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))) ==> ((\e'. (((i < k) = g') ==> ((g' ==> ((y $ i) = t')) ==> (((~ g') ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))) e')) = ((\e'. (((i < k) = g') ==> ((g' ==> ((y $ i) = t')) ==> (((~ g') ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c< f0 f1 f2 c==> c==> f2 c= c$ f3 f0 f4 c==> c==> c~ f2 c= cCOND c= f0 f1 f5 c$ f3 c- f0 cNUMERAL cBIT1 c_0 b0 c= cCOND c< f0 f1 c$ f3 f0 cCOND c= f0 f1 f5 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND f2 f4 b0 * / c==> c= c< f0 f1 f2 c==> c==> f2 c= c$ f3 f0 f4 c==> c==> c~ f2 c= cCOND c= f0 f1 f5 c$ f3 c- f0 cNUMERAL cBIT1 c_0 b0 c= cCOND c< f0 f1 c$ f3 f0 cCOND c= f0 f1 f5 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND f2 f4 b0 f6 * / c==> c= c< f0 f1 f2 c==> c==> f2 c= c$ f3 f0 f4 c==> c==> c~ f2 c= cCOND c= f0 f1 f5 c$ f3 c- f0 cNUMERAL cBIT1 c_0 b0 c= cCOND c< f0 f1 c$ f3 f0 cCOND c= f0 f1 f5 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND f2 f4 b0 f6
- (i < k) |- ((i < k) = T)
T c==> c< f0 f1 c= c< f0 f1 cT
- (((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) |- ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) /\ (((dropout k) (((pushin k) t) x)) = x))
T c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout f0 cpushin f0 f1 f2 f2
+ (k <= (dimindex UNIV)) |- ((k <= (dimindex UNIV)) = T)
T c==> c<= f0 cdimindex part cUNIV c= c<= f0 cdimindex part cUNIV cT
- |- ((!x. t) = t)
T c= ! f0 f0
+ (((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)), (k <= (dimindex UNIV)), ((NUMERAL (BIT1 _0)) <= k) |- (!x. (?x. ((x = ((dropout k) x)) /\ ((x $ k) = a))))
T c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c==> c<= f0 cdimindex part cUNIV c==> c<= cNUMERAL cBIT1 c_0 f0 ! c? / c/\ c= b0 cdropout f0 b1 c= c$ b1 f0 f1
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- ((\s. (!k. (!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x)))))))))) s)
T * / ! ! c= * * * part cslice b1 b2 b0 * * part cIMAGE * part cdropout b1 * * part cINTER b0 * part cGSPEC / c? / cSETSPEC b3 c= c$ b4 b1 b2 b4 f0
+ |- (((!s. ((UNIV INTER s) = s)) ==> ((\s. ((UNIV INTER s) = s)) s)) = ((\s. ((UNIV INTER s) = s)) s))
T c= c==> ! c= * * part cINTER part cUNIV b0 b0 * / c= * * part cINTER part cUNIV b0 b0 f0 * / c= * * part cINTER part cUNIV b0 b0 f0
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ |- ((\y. (!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s))))))) y)
T * / ! ! c= cIN b0 * * part cIMAGE b2 b1 c? / c/\ c= b0 * b2 b3 cIN b3 b1 f0
- |- (((~ (i = k)) ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND (i = k)) a) e')))
T c==> c==> c~ c= f0 f1 c= c$ f2 c- f0 cNUMERAL cBIT1 c_0 f3 c= cCOND c= f0 f1 f4 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND c= f0 f1 f4 f3
- |- ((?x. t) = t)
T c= c? / f0 f0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambda g) $ i) = (g i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
- (~ (i = k)) |- ((~ (i = k)) /\ ((y $ (i - (NUMERAL (BIT1 _0)))) = (y $ (i - (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c= c$ f2 c- f0 cNUMERAL cBIT1 c_0 c$ f2 c- f0 cNUMERAL cBIT1 c_0
+ |- ((\x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0))))))))) x)
T * / c= cpushin f0 f1 b0 clambda / cCOND c< b1 f0 c$ b0 b1 cCOND c= b1 f0 f1 c$ b0 c- b1 cNUMERAL cBIT1 c_0 f2
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ |- ((~ F) ==> ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = a))
T c==> c~ cF c= cCOND c= f0 f0 f1 c$ f2 c- f0 cNUMERAL cBIT1 c_0 f1
+ |- (((!k. (!t. (!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0))))))))))) ==> ((\k. (!t. (!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0))))))))))) k)) = ((\k. (!t. (!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0))))))))))) k))
T c= c==> ! ! ! c= cpushin b0 b1 b2 clambda / cCOND c< b3 b0 c$ b2 b3 cCOND c= b3 b0 b1 c$ b2 c- b3 cNUMERAL cBIT1 c_0 * / ! ! c= cpushin b0 b1 b2 clambda / cCOND c< b3 b0 c$ b2 b3 cCOND c= b3 b0 b1 c$ b2 c- b3 cNUMERAL cBIT1 c_0 f0 * / ! ! c= cpushin b0 b1 b2 clambda / cCOND c< b3 b0 c$ b2 b3 cCOND c= b3 b0 b1 c$ b2 c- b3 cNUMERAL cBIT1 c_0 f0
+ F |- (F /\ ((y $ k) = (y $ k)))
T c==> cF c/\ cF c= c$ f0 f1 c$ f0 f1
+ |- ((\k. (!t. (!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x))))) k)
T * / ! ! c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout b0 cpushin b0 b1 b2 b2 f0
+ |- (((~ F) ==> ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND F) (y $ k)) e')))
T c==> c==> c~ cF c= cCOND c= f0 f0 f1 c$ f2 c- f0 cNUMERAL cBIT1 c_0 f3 c= cCOND c< f0 f0 c$ f2 f0 cCOND c= f0 f0 f1 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND cF c$ f2 f0 f3
+ (((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)), (k <= (dimindex UNIV)), ((NUMERAL (BIT1 _0)) <= k) |- ((y = ((dropout k) (((pushin k) a) y))) /\ (((((pushin k) a) y) $ k) = a))
T c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c==> c<= f0 cdimindex part cUNIV c==> c<= cNUMERAL cBIT1 c_0 f0 c/\ c= f1 cdropout f0 cpushin f0 f2 f1 c= c$ cpushin f0 f2 f1 f0 f2
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- |- ((\g'. (!t'. (!e'. (((i = k) = g') ==> ((g' ==> (a = t')) ==> (((~ g') ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= f2 b1 c==> c==> c~ b0 c= c$ f3 c- f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f4
- (~ (i = k)) |- (((~ (k = i)) ==> ((k = i) = F)) = ((k = i) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ (((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)), (k <= (dimindex UNIV)), ((NUMERAL (BIT1 _0)) <= k) |- ((?x. ((y = ((dropout k) x)) /\ ((x $ k) = a))) = T)
T c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c==> c<= f0 cdimindex part cUNIV c==> c<= cNUMERAL cBIT1 c_0 f0 c= c? / c/\ c= f1 cdropout f0 b0 c= c$ b0 f0 f2 cT
- (~ (i = k)) |- ((i = k) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
- |- ((\t'. (!e'. (((i < k) = g') ==> ((g' ==> ((y $ i) = t')) ==> (((~ g') ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c< f0 f1 f2 c==> c==> f2 c= c$ f3 f0 b0 c==> c==> c~ f2 c= cCOND c= f0 f1 f4 c$ f3 c- f0 cNUMERAL cBIT1 c_0 b1 c= cCOND c< f0 f1 c$ f3 f0 cCOND c= f0 f1 f4 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 f5
- |- ((((~ (i = k)) ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = (y $ (i - (NUMERAL (BIT1 _0)))))) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))))) = ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))))
T c= c==> c==> c~ c= f0 f1 c= c$ f2 c- f0 cNUMERAL cBIT1 c_0 c$ f2 c- f0 cNUMERAL cBIT1 c_0 c= cCOND c= f0 f1 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND c= f0 f1 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 c= cCOND c= f0 f1 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND c= f0 f1 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- |- (((i = k) ==> (a = t')) ==> (((~ (i = k)) ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND (i = k)) t') e'))))
T c==> c==> c= f0 f1 c= f2 f3 c==> c==> c~ c= f0 f1 c= c$ f4 c- f0 cNUMERAL cBIT1 c_0 f5 c= cCOND c= f0 f1 f2 c$ f4 c- f0 cNUMERAL cBIT1 c_0 cCOND c= f0 f1 f3 f5
+ |- ((\s. ((UNIV INTER s) = s)) s)
T * / c= * * part cINTER part cUNIV b0 b0 f0
+ |- (((!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s))))) ==> ((\f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s))))) f)) = ((\f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s))))) f))
T c= c==> ! c= cIN f0 * * part cIMAGE b0 f1 c? / c/\ c= f0 * b0 b1 cIN b1 f1 * / c= cIN f0 * * part cIMAGE b0 f1 c? / c/\ c= f0 * b0 b1 cIN b1 f1 f2 * / c= cIN f0 * * part cIMAGE b0 f1 c? / c/\ c= f0 * b0 b1 cIN b1 f1 f2
+ |- (((!n. (~ (n < n))) ==> ((\n. (~ (n < n))) n)) = ((\n. (~ (n < n))) n))
T c= c==> ! c~ c< b0 b0 * / c~ c< b0 b0 f0 * / c~ c< b0 b0 f0
+ |- (((!k. (!t. (!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x))))) ==> ((\k. (!t. (!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x))))) k)) = ((\k. (!t. (!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x))))) k))
T c= c==> ! ! ! c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout b0 cpushin b0 b1 b2 b2 * / ! ! c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout b0 cpushin b0 b1 b2 b2 f0 * / ! ! c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout b0 cpushin b0 b1 b2 b2 f0
- |- ((i = k) ==> (a = a))
T c==> c= f0 f1 c= f2 f2
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- (((i = k) = g') ==> ((g' ==> (a = t')) ==> (((~ g') ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))
T c==> c= c= f0 f1 f2 c==> c==> f2 c= f3 f4 c==> c==> c~ f2 c= c$ f5 c- f0 cNUMERAL cBIT1 c_0 f6 c= cCOND c= f0 f1 f3 c$ f5 c- f0 cNUMERAL cBIT1 c_0 cCOND f2 f4 f6
- |- ((~ (i < k)) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))))
T c==> c~ c< f0 f1 c= cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s)
T * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0
+ |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
+ |- (((!t. (!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0)))))))))) ==> ((\t. (!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0)))))))))) t)) = ((\t. (!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0)))))))))) t))
T c= c==> ! ! c= cpushin f0 b0 b1 clambda / cCOND c< b2 f0 c$ b1 b2 cCOND c= b2 f0 b0 c$ b1 c- b2 cNUMERAL cBIT1 c_0 * / ! c= cpushin f0 b0 b1 clambda / cCOND c< b2 f0 c$ b1 b2 cCOND c= b2 f0 b0 c$ b1 c- b2 cNUMERAL cBIT1 c_0 f1 * / ! c= cpushin f0 b0 b1 clambda / cCOND c< b2 f0 c$ b1 b2 cCOND c= b2 f0 b0 c$ b1 c- b2 cNUMERAL cBIT1 c_0 f1
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
+ (((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)), ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV)))) |- ((((slice k) a) UNIV) = UNIV)
T c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c==> c/\ c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= * * * part cslice f0 f1 part cUNIV part cUNIV
+ |- (((!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x)))))))) ==> ((\t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x)))))))) t)) = ((\t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x)))))))) t))
T c= c==> ! c= * * * part cslice f0 b0 f1 * * part cIMAGE * part cdropout f0 * * part cINTER f1 * part cGSPEC / c? / cSETSPEC b1 c= c$ b2 f0 b0 b2 * / c= * * * part cslice f0 b0 f1 * * part cIMAGE * part cdropout f0 * * part cINTER f1 * part cGSPEC / c? / cSETSPEC b1 c= c$ b2 f0 b0 b2 f2 * / c= * * * part cslice f0 b0 f1 * * part cIMAGE * part cdropout f0 * * part cINTER f1 * part cGSPEC / c? / cSETSPEC b1 c= c$ b2 f0 b0 b2 f2
+ |- (((!k. (!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x))))))))) ==> ((\k. (!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x))))))))) k)) = ((\k. (!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x))))))))) k))
T c= c==> ! ! c= * * * part cslice b0 b1 f0 * * part cIMAGE * part cdropout b0 * * part cINTER f0 * part cGSPEC / c? / cSETSPEC b2 c= c$ b3 b0 b1 b3 * / ! c= * * * part cslice b0 b1 f0 * * part cIMAGE * part cdropout b0 * * part cINTER f0 * part cGSPEC / c? / cSETSPEC b2 c= c$ b3 b0 b1 b3 f1 * / ! c= * * * part cslice b0 b1 f0 * * part cIMAGE * part cdropout b0 * * part cINTER f0 * part cGSPEC / c? / cSETSPEC b2 c= c$ b3 b0 b1 b3 f1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- (((~ (i < k)) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND (i < k)) (y $ i)) e')))
T c==> c==> c~ c< f0 f1 c= cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0 f4 c= cCOND c< f0 f1 c$ f3 f0 cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND c< f0 f1 c$ f3 f0 f4
+ |- (((!t. (!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x)))) ==> ((\t. (!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x)))) t)) = ((\t. (!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x)))) t))
T c= c==> ! ! c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout f0 cpushin f0 b0 b1 b1 * / ! c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout f0 cpushin f0 b0 b1 b1 f1 * / ! c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout f0 cpushin f0 b0 b1 b1 f1
- |- ((\g'. (!t'. (!e'. (((i < k) = g') ==> ((g' ==> ((y $ i) = t')) ==> (((~ g') ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c< f0 f1 b0 c==> c==> b0 c= c$ f2 f0 b1 c==> c==> c~ b0 c= cCOND c= f0 f1 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c< f0 f1 c$ f2 f0 cCOND c= f0 f1 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f4
+ (k <= (dimindex UNIV)), ((NUMERAL (BIT1 _0)) <= k) |- (((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((lambdai. (((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))))) $ k) = ((\i. (((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))))) k))) = (((lambdai. (((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))))) $ k) = ((\i. (((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))))) k)))
T c==> c<= f0 cdimindex part cUNIV c==> c<= cNUMERAL cBIT1 c_0 f0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / cCOND c< b0 f0 c$ f1 b0 cCOND c= b0 f0 f2 c$ f1 c- b0 cNUMERAL cBIT1 c_0 f0 * / cCOND c< b0 f0 c$ f1 b0 cCOND c= b0 f0 f2 c$ f1 c- b0 cNUMERAL cBIT1 c_0 f0 c= c$ clambda / cCOND c< b0 f0 c$ f1 b0 cCOND c= b0 f0 f2 c$ f1 c- b0 cNUMERAL cBIT1 c_0 f0 * / cCOND c< b0 f0 c$ f1 b0 cCOND c= b0 f0 f2 c$ f1 c- b0 cNUMERAL cBIT1 c_0 f0
- (k = i) |- (i = k)
T c==> c= f0 f1 c= f1 f0
- F |- (F = T)
T c==> cF c= cF cT
+ |- ((t = T) = t)
T c= c= f0 cT f0
+ |- ((x IN UNIV) = T)
T c= cIN f0 part cUNIV cT
+ |- (((!s. (!k. (!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x)))))))))) ==> ((\s. (!k. (!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x)))))))))) s)) = ((\s. (!k. (!t. ((((slice k) t) s) = ((IMAGE (dropout k)) (s INTER (GSPEC (\GEN%PVAR%4965. (?x. (((SETSPEC GEN%PVAR%4965) ((x $ k) = t)) x)))))))))) s))
T c= c==> ! ! ! c= * * * part cslice b1 b2 b0 * * part cIMAGE * part cdropout b1 * * part cINTER b0 * part cGSPEC / c? / cSETSPEC b3 c= c$ b4 b1 b2 b4 * / ! ! c= * * * part cslice b1 b2 b0 * * part cIMAGE * part cdropout b1 * * part cINTER b0 * part cGSPEC / c? / cSETSPEC b3 c= c$ b4 b1 b2 b4 f0 * / ! ! c= * * * part cslice b1 b2 b0 * * part cIMAGE * part cdropout b1 * * part cINTER b0 * part cGSPEC / c? / cSETSPEC b3 c= c$ b4 b1 b2 b4 f0
+ (((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)), (k <= (dimindex UNIV)), ((NUMERAL (BIT1 _0)) <= k) |- (?x. ((y = ((dropout k) x)) /\ ((x $ k) = a)))
T c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c==> c<= f0 cdimindex part cUNIV c==> c<= cNUMERAL cBIT1 c_0 f0 c? / c/\ c= f1 cdropout f0 b0 c= c$ b0 f0 f2
- |- ((((i < k) = (i < k)) ==> (((i < k) ==> ((y $ i) = t')) ==> (((~ (i < k)) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND (i < k)) t') e'))))) = (((i < k) ==> ((y $ i) = t')) ==> (((~ (i < k)) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND (i < k)) t') e')))))
T c= c==> c= c< f0 f1 c< f0 f1 c==> c==> c< f0 f1 c= c$ f2 f0 f3 c==> c==> c~ c< f0 f1 c= cCOND c= f0 f1 f4 c$ f2 c- f0 cNUMERAL cBIT1 c_0 f5 c= cCOND c< f0 f1 c$ f2 f0 cCOND c= f0 f1 f4 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND c< f0 f1 f3 f5 c==> c==> c< f0 f1 c= c$ f2 f0 f3 c==> c==> c~ c< f0 f1 c= cCOND c= f0 f1 f4 c$ f2 c- f0 cNUMERAL cBIT1 c_0 f5 c= cCOND c< f0 f1 c$ f2 f0 cCOND c= f0 f1 f4 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND c< f0 f1 f3 f5
+ |- (((!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) ==> ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s)) = ((\s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t)))))) s))
T c= c==> ! ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0 * / ! c= c= b0 b1 ! c= cIN b2 b0 cIN b2 b1 f0
+ (((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)), (k <= (dimindex UNIV)), ((NUMERAL (BIT1 _0)) <= k) |- ((((slice k) a) UNIV) = UNIV)
T c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c==> c<= f0 cdimindex part cUNIV c==> c<= cNUMERAL cBIT1 c_0 f0 c= * * * part cslice f0 f1 part cUNIV part cUNIV
- |- ((i < k) ==> ((y $ i) = (y $ i)))
T c==> c< f0 f1 c= c$ f2 f0 c$ f2 f0
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
+ |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
+ |- (((~ (n < n)) ==> ((n < n) = F)) = ((n < n) = F))
T c= c==> c~ c< f0 f0 c= c< f0 f0 cF c= c< f0 f0 cF
+ |- (((!g'. (!t'. (!e'. (((k < k) = g') ==> ((g' ==> ((y $ k) = t')) ==> (((~ g') ==> ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((k < k) = g') ==> ((g' ==> ((y $ k) = t')) ==> (((~ g') ==> ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((k < k) = g') ==> ((g' ==> ((y $ k) = t')) ==> (((~ g') ==> ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c< f0 f0 b0 c==> c==> b0 c= c$ f1 f0 b1 c==> c==> c~ b0 c= cCOND c= f0 f0 f2 c$ f1 c- f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c< f0 f0 c$ f1 f0 cCOND c= f0 f0 f2 c$ f1 c- f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 * / ! ! c==> c= c< f0 f0 b0 c==> c==> b0 c= c$ f1 f0 b1 c==> c==> c~ b0 c= cCOND c= f0 f0 f2 c$ f1 c- f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c< f0 f0 c$ f1 f0 cCOND c= f0 f0 f2 c$ f1 c- f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f3 * / ! ! c==> c= c< f0 f0 b0 c==> c==> b0 c= c$ f1 f0 b1 c==> c==> c~ b0 c= cCOND c= f0 f0 f2 c$ f1 c- f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c< f0 f0 c$ f1 f0 cCOND c= f0 f0 f2 c$ f1 c- f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f3
+ |- ((\t. (!x. ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) ==> (((dropout k) (((pushin k) t) x)) = x)))) t)
T * / ! c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cdropout f0 cpushin f0 b0 b1 b1 f1
- |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))))
T c= cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0
+ |- (((!x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0))))))))) ==> ((\x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0))))))))) x)) = ((\x. ((((pushin k) t) x) = (lambdai. (((COND (i < k)) (x $ i)) (((COND (i = k)) t) (x $ (i - (NUMERAL (BIT1 _0))))))))) x))
T c= c==> ! c= cpushin f0 f1 b0 clambda / cCOND c< b1 f0 c$ b0 b1 cCOND c= b1 f0 f1 c$ b0 c- b1 cNUMERAL cBIT1 c_0 * / c= cpushin f0 f1 b0 clambda / cCOND c< b1 f0 c$ b0 b1 cCOND c= b1 f0 f1 c$ b0 c- b1 cNUMERAL cBIT1 c_0 f2 * / c= cpushin f0 f1 b0 clambda / cCOND c< b1 f0 c$ b0 b1 cCOND c= b1 f0 f1 c$ b0 c- b1 cNUMERAL cBIT1 c_0 f2
+ |- ((n < n) = F)
T c= c< f0 f0 cF
+ ((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV)))) |- (((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV)))) /\ ((((slice k) a) UNIV) = UNIV))
T c==> c/\ c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= * * * part cslice f0 f1 part cUNIV part cUNIV
+ |- (F ==> ((y $ k) = (y $ k)))
T c==> cF c= c$ f0 f1 c$ f0 f1
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
+ |- (((!t. ((s = t) = (!x. ((x IN s) = (x IN t))))) ==> ((\t. ((s = t) = (!x. ((x IN s) = (x IN t))))) t)) = ((\t. ((s = t) = (!x. ((x IN s) = (x IN t))))) t))
T c= c==> ! c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 * / c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 f1 * / c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 f1
+ |- ((\e'. (((k < k) = g') ==> ((g' ==> ((y $ k) = t')) ==> (((~ g') ==> ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))) e')
T * / c==> c= c< f0 f0 f1 c==> c==> f1 c= c$ f2 f0 f3 c==> c==> c~ f1 c= cCOND c= f0 f0 f4 c$ f2 c- f0 cNUMERAL cBIT1 c_0 b0 c= cCOND c< f0 f0 c$ f2 f0 cCOND c= f0 f0 f4 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND f1 f3 b0 f5
- |- ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
+ |- ((((~ F) ==> ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = a)) ==> ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND F) (y $ k)) a))) = ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND F) (y $ k)) a)))
T c= c==> c==> c~ cF c= cCOND c= f0 f0 f1 c$ f2 c- f0 cNUMERAL cBIT1 c_0 f1 c= cCOND c< f0 f0 c$ f2 f0 cCOND c= f0 f0 f1 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND cF c$ f2 f0 f1 c= cCOND c< f0 f0 c$ f2 f0 cCOND c= f0 f0 f1 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND cF c$ f2 f0 f1
+ |- (((!s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))) ==> ((\s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))) s)) = ((\s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))) s))
T c= c==> ! ! c= cIN f0 * * part cIMAGE b1 b0 c? / c/\ c= f0 * b1 b2 cIN b2 b0 * / ! c= cIN f0 * * part cIMAGE b1 b0 c? / c/\ c= f0 * b1 b2 cIN b2 b0 f1 * / ! c= cIN f0 * * part cIMAGE b1 b0 c? / c/\ c= f0 * b1 b2 cIN b2 b0 f1
- |- ((\t'. (!e'. (((i = k) = g') ==> ((g' ==> (a = t')) ==> (((~ g') ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= f3 b0 c==> c==> c~ f2 c= c$ f4 c- f0 cNUMERAL cBIT1 c_0 b1 c= cCOND c= f0 f1 f3 c$ f4 c- f0 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 f5
+ |- (((y = ((dropout k) (((pushin k) a) y))) /\ (((((pushin k) a) y) $ k) = a)) = ((\x. ((y = ((dropout k) x)) /\ ((x $ k) = a))) (((pushin k) a) y)))
T c= c/\ c= f0 cdropout f1 cpushin f1 f2 f0 c= c$ cpushin f1 f2 f0 f1 f2 * / c/\ c= f0 cdropout f1 b0 c= c$ b0 f1 f2 cpushin f1 f2 f0
+ |- ((\t'. (!e'. (((k < k) = g') ==> ((g' ==> ((y $ k) = t')) ==> (((~ g') ==> ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c< f0 f0 f1 c==> c==> f1 c= c$ f2 f0 b0 c==> c==> c~ f1 c= cCOND c= f0 f0 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 b1 c= cCOND c< f0 f0 c$ f2 f0 cCOND c= f0 f0 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 f4
+ |- (((!x. (x IN UNIV)) ==> ((\x. (x IN UNIV)) x)) = ((\x. (x IN UNIV)) x))
T c= c==> ! cIN b0 part cUNIV * / cIN b0 part cUNIV f0 * / cIN b0 part cUNIV f0
+ |- ((((((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV)))) ==> ((((slice k) a) UNIV) = UNIV)) = T)
T c= c==> c/\ c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= * * * part cslice f0 f1 part cUNIV part cUNIV cT
+ |- (((F ==> ((y $ k) = (y $ k))) ==> (((~ F) ==> ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND F) (y $ k)) e')))) = (((~ F) ==> ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND F) (y $ k)) e'))))
T c= c==> c==> cF c= c$ f0 f1 c$ f0 f1 c==> c==> c~ cF c= cCOND c= f1 f1 f2 c$ f0 c- f1 cNUMERAL cBIT1 c_0 f3 c= cCOND c< f1 f1 c$ f0 f1 cCOND c= f1 f1 f2 c$ f0 c- f1 cNUMERAL cBIT1 c_0 cCOND cF c$ f0 f1 f3 c==> c==> c~ cF c= cCOND c= f1 f1 f2 c$ f0 c- f1 cNUMERAL cBIT1 c_0 f3 c= cCOND c< f1 f1 c$ f0 f1 cCOND c= f1 f1 f2 c$ f0 c- f1 cNUMERAL cBIT1 c_0 cCOND cF c$ f0 f1 f3
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (i < k)) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))))) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))))) = ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))))))
T c= c==> c==> c~ c< f0 f1 c= cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0 c= cCOND c< f0 f1 c$ f3 f0 cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND c< f0 f1 c$ f3 f0 cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0 c= cCOND c< f0 f1 c$ f3 f0 cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND c< f0 f1 c$ f3 f0 cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0
+ |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
+ |- ((UNIV INTER s) = s)
T c= * * part cINTER part cUNIV f0 f0
+ |- ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND F) (y $ k)) a))
T c= cCOND c< f0 f0 c$ f1 f0 cCOND c= f0 f0 f2 c$ f1 c- f0 cNUMERAL cBIT1 c_0 cCOND cF c$ f1 f0 f2
- |- ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))))
T c= cCOND c< f0 f1 c$ f2 f0 cCOND c= f0 f1 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND c< f0 f1 c$ f2 f0 cCOND c= f0 f1 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0
+ (k <= (dimindex UNIV)), ((NUMERAL (BIT1 _0)) <= k) |- (((lambdai. (((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))))) $ k) = ((\i. (((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))))) k))
T c==> c<= f0 cdimindex part cUNIV c==> c<= cNUMERAL cBIT1 c_0 f0 c= c$ clambda / cCOND c< b0 f0 c$ f1 b0 cCOND c= b0 f0 f2 c$ f1 c- b0 cNUMERAL cBIT1 c_0 f0 * / cCOND c< b0 f0 c$ f1 b0 cCOND c= b0 f0 f2 c$ f1 c- b0 cNUMERAL cBIT1 c_0 f0
+ |- ((\s. (!f. ((y IN ((IMAGE f) s)) = (?x. ((y = (f x)) /\ (x IN s)))))) s)
T * / ! c= cIN f0 * * part cIMAGE b1 b0 c? / c/\ c= f0 * b1 b2 cIN b2 b0 f1
- (~ (i = k)) |- (~ (k = i))
T c==> c~ c= f0 f1 c~ c= f1 f0
- |- (((i < k) ==> ((y $ i) = t')) ==> (((~ (i < k)) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND (i < k)) t') e'))))
T c==> c==> c< f0 f1 c= c$ f2 f0 f3 c==> c==> c~ c< f0 f1 c= cCOND c= f0 f1 f4 c$ f2 c- f0 cNUMERAL cBIT1 c_0 f5 c= cCOND c< f0 f1 c$ f2 f0 cCOND c= f0 f1 f4 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND c< f0 f1 f3 f5
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ |- ((\g'. (!t'. (!e'. (((k < k) = g') ==> ((g' ==> ((y $ k) = t')) ==> (((~ g') ==> ((((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (k < k)) (y $ k)) (((COND (k = k)) a) (y $ (k - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c< f0 f0 b0 c==> c==> b0 c= c$ f1 f0 b1 c==> c==> c~ b0 c= cCOND c= f0 f0 f2 c$ f1 c- f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c< f0 f0 c$ f1 f0 cCOND c= f0 f0 f2 c$ f1 c- f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f3
- (~ F) |- (F = F)
T c==> c~ cF c= cF cF
- |- (((!e'. (((i = k) = g') ==> ((g' ==> (a = t')) ==> (((~ g') ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) ==> ((\e'. (((i = k) = g') ==> ((g' ==> (a = t')) ==> (((~ g') ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) e')) = ((\e'. (((i = k) = g') ==> ((g' ==> (a = t')) ==> (((~ g') ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 f1 f2 c==> c==> f2 c= f3 f4 c==> c==> c~ f2 c= c$ f5 c- f0 cNUMERAL cBIT1 c_0 b0 c= cCOND c= f0 f1 f3 c$ f5 c- f0 cNUMERAL cBIT1 c_0 cCOND f2 f4 b0 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= f3 f4 c==> c==> c~ f2 c= c$ f5 c- f0 cNUMERAL cBIT1 c_0 b0 c= cCOND c= f0 f1 f3 c$ f5 c- f0 cNUMERAL cBIT1 c_0 cCOND f2 f4 b0 f6 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= f3 f4 c==> c==> c~ f2 c= c$ f5 c- f0 cNUMERAL cBIT1 c_0 b0 c= cCOND c= f0 f1 f3 c$ f5 c- f0 cNUMERAL cBIT1 c_0 cCOND f2 f4 b0 f6
+ (((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)), (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((((slice k) a) UNIV) = UNIV)
T c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= * * * part cslice f0 f1 part cUNIV part cUNIV
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
+ |- ((\t. ((s = t) = (!x. ((x IN s) = (x IN t))))) t)
T * / c= c= f0 b0 ! c= cIN b1 f0 cIN b1 b0 f1
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- (~ (i = k)) |- ((k = i) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- (i < k) |- ((i < k) /\ ((y $ i) = (y $ i)))
T c==> c< f0 f1 c/\ c< f0 f1 c= c$ f2 f0 c$ f2 f0
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- ((\e'. (((i < k) = g') ==> ((g' ==> ((y $ i) = t')) ==> (((~ g') ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))) e')
T * / c==> c= c< f0 f1 f2 c==> c==> f2 c= c$ f3 f0 f4 c==> c==> c~ f2 c= cCOND c= f0 f1 f5 c$ f3 c- f0 cNUMERAL cBIT1 c_0 b0 c= cCOND c< f0 f1 c$ f3 f0 cCOND c= f0 f1 f5 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND f2 f4 b0 f6
- (((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)) |- (T = (((dimindex UNIV) + (NUMERAL (BIT1 _0))) = (dimindex UNIV)))
T c==> c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cT c= c+ cdimindex part cUNIV cNUMERAL cBIT1 c_0 cdimindex part cUNIV
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- ((\e'. (((i = k) = g') ==> ((g' ==> (a = t')) ==> (((~ g') ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 f1 f2 c==> c==> f2 c= f3 f4 c==> c==> c~ f2 c= c$ f5 c- f0 cNUMERAL cBIT1 c_0 b0 c= cCOND c= f0 f1 f3 c$ f5 c- f0 cNUMERAL cBIT1 c_0 cCOND f2 f4 b0 f6
- |- (((i < k) = g') ==> ((g' ==> ((y $ i) = t')) ==> (((~ g') ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND g') t') e')))))
T c==> c= c< f0 f1 f2 c==> c==> f2 c= c$ f3 f0 f4 c==> c==> c~ f2 c= cCOND c= f0 f1 f5 c$ f3 c- f0 cNUMERAL cBIT1 c_0 f6 c= cCOND c< f0 f1 c$ f3 f0 cCOND c= f0 f1 f5 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND f2 f4 f6
- (~ (i < k)) |- ((~ (i < k)) /\ ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))))
T c==> c~ c< f0 f1 c/\ c~ c< f0 f1 c= cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0 cCOND c= f0 f1 f2 c$ f3 c- f0 cNUMERAL cBIT1 c_0
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((!t'. (!e'. (((i = k) = g') ==> ((g' ==> (a = t')) ==> (((~ g') ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((i = k) = g') ==> ((g' ==> (a = t')) ==> (((~ g') ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((i = k) = g') ==> ((g' ==> (a = t')) ==> (((~ g') ==> ((y $ (i - (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 f1 f2 c==> c==> f2 c= f3 b0 c==> c==> c~ f2 c= c$ f4 c- f0 cNUMERAL cBIT1 c_0 b1 c= cCOND c= f0 f1 f3 c$ f4 c- f0 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= f3 b0 c==> c==> c~ f2 c= c$ f4 c- f0 cNUMERAL cBIT1 c_0 b1 c= cCOND c= f0 f1 f3 c$ f4 c- f0 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 f5 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= f3 b0 c==> c==> c~ f2 c= c$ f4 c- f0 cNUMERAL cBIT1 c_0 b1 c= cCOND c= f0 f1 f3 c$ f4 c- f0 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 f5
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- (i = k) |- ((i = k) /\ (a = a))
T c==> c= f0 f1 c/\ c= f0 f1 c= f2 f2
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (k <= (dimindex UNIV)), ((NUMERAL (BIT1 _0)) <= k) |- (T = (((((pushin k) a) y) $ k) = a))
T c==> c<= f0 cdimindex part cUNIV c==> c<= cNUMERAL cBIT1 c_0 f0 c= cT c= c$ cpushin f0 f1 f2 f0 f1
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((((i < k) ==> ((y $ i) = (y $ i))) ==> (((~ (i < k)) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND (i < k)) (y $ i)) e')))) = (((~ (i < k)) ==> ((((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0))))) = e')) ==> ((((COND (i < k)) (y $ i)) (((COND (i = k)) a) (y $ (i - (NUMERAL (BIT1 _0)))))) = (((COND (i < k)) (y $ i)) e'))))
T c= c==> c==> c< f0 f1 c= c$ f2 f0 c$ f2 f0 c==> c==> c~ c< f0 f1 c= cCOND c= f0 f1 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 f4 c= cCOND c< f0 f1 c$ f2 f0 cCOND c= f0 f1 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND c< f0 f1 c$ f2 f0 f4 c==> c==> c~ c< f0 f1 c= cCOND c= f0 f1 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 f4 c= cCOND c< f0 f1 c$ f2 f0 cCOND c= f0 f1 f3 c$ f2 c- f0 cNUMERAL cBIT1 c_0 cCOND c< f0 f1 c$ f2 f0 f4
