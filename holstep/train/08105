N Pwssrat.next_el_rotate_to_eq
C |- (!r. ((((MEM x) r) /\ (uniq r)) ==> (((next_el r) x) = ((next_el ((rotate_to r) x)) x))))
T c==> c/\ cMEM f0 f1 cuniq f1 c= cnext_el f1 f0 cnext_el crotate_to f1 f0 f0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.add0n
A |- (!n. (((NUMERAL _0) + n) = n))
T c= c+ cNUMERAL c_0 f0 f0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D ADD_CLAUSES
A |- ((!n. (((NUMERAL _0) + n) = n)) /\ ((!m. ((m + (NUMERAL _0)) = m)) /\ ((!m. (!n. (((SUC m) + n) = (SUC (m + n))))) /\ (!m. (!n. ((m + (SUC n)) = (SUC (m + n))))))))
T c/\ ! c= c+ cNUMERAL c_0 b0 b0 c/\ ! c= c+ b0 cNUMERAL c_0 b0 c/\ ! ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 ! ! c= c+ b0 cSUC b1 cSUC c+ b0 b1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D ADD_ASSOC
A |- (!m. (!n. (!p. ((m + (n + p)) = ((m + n) + p)))))
T c= c+ f0 c+ f1 f2 c+ c+ f0 f1 f2
D ADD_AC
A |- (((m + n) = (n + m)) /\ ((((m + n) + p) = (m + (n + p))) /\ ((m + (n + p)) = (n + (m + p)))))
T c/\ c= c+ f0 f1 c+ f1 f0 c/\ c= c+ c+ f0 f1 f2 c+ f0 c+ f1 f2 c= c+ f0 c+ f1 f2 c+ f1 c+ f0 f2
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D Ssrnat.mul0n
A |- (!n. (((NUMERAL _0) * n) = (NUMERAL _0)))
T c= c* cNUMERAL c_0 f0 cNUMERAL c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D Ssrnat.mul1n
A |- (!n. (((NUMERAL (BIT1 _0)) * n) = n))
T c= c* cNUMERAL cBIT1 c_0 f0 f0
D LEFT_ADD_DISTRIB
A |- (!m. (!n. (!p. ((m * (n + p)) = ((m * n) + (m * p))))))
T c= c* f0 c+ f1 f2 c+ c* f0 f1 c* f0 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D Ssrnat.expnS
A |- (!m. (!n. ((m EXP (SUC n)) = (m * (m EXP n)))))
T c= cEXP f0 cSUC f1 c* f0 cEXP f0 f1
D Ssrnat.expn0
A |- (!m. ((m EXP (NUMERAL _0)) = (NUMERAL (BIT1 _0))))
T c= cEXP f0 cNUMERAL c_0 cNUMERAL cBIT1 c_0
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LE_REFL
A |- (!n. (n <= n))
T c<= f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.subn_eq0
A |- (!m. (!n. (((m - n) = (NUMERAL _0)) = (m <= n))))
T c= c= c- f0 f1 cNUMERAL c_0 c<= f0 f1
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D SUB_ELIM_THM
A |- ((P (a - b)) = (!d. (((a = (b + d)) \/ ((a < b) /\ (d = (NUMERAL _0)))) ==> (P d))))
T c= * f0 c- f1 f2 ! c==> c\/ c= f1 c+ f2 b0 c/\ c< f1 f2 c= b0 cNUMERAL c_0 * f0 b0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D APPEND
A |- ((!l. (((APPEND NIL) l) = l)) /\ (!h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))))
T c/\ ! c= cAPPEND cNIL b0 b0 ! ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2
D APPEND_EQ_NIL
A |- (!l. (!m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL)))))
T c= c= cAPPEND f0 f1 cNIL c/\ c= f0 cNIL c= f1 cNIL
D HD_APPEND
A |- (!l. (!m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l)))))
T c= cHD cAPPEND f0 f1 cCOND c= f0 cNIL cHD f1 cHD f0
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_eq
A |- (!x. (!y. ((x = y) = ((real_of_int x) = (real_of_int y)))))
T c= c= f0 f1 c= creal_of_int f0 creal_of_int f1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_EQ
A |- (!x. (!y. ((~ (x = y)) = (((int_lt x) y) \/ ((int_lt y) x)))))
T c= c~ c= f0 f1 c\/ cint_lt f0 f1 cint_lt f1 f0
D INT_NOT_LT
A |- (!x. (!y. ((~ ((int_lt x) y)) = ((int_le y) x))))
T c= c~ cint_lt f0 f1 cint_le f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_OF_NUM_LT
A |- (!m. (!n. (((int_lt (int_of_num m)) (int_of_num n)) = (m < n))))
T c= cint_lt cint_of_num f0 cint_of_num f1 c< f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D Nkezbfc_local.lemma
A |- (!A. (A \/ (~ A)))
T c\/ f0 c~ f0
D Tame_defs.rotate_to
A |- (!v. (!vs. (((rotate_to vs) v) = ((CONS v) ((APPEND (SND ((split_at v) vs))) (FST ((split_at v) vs)))))))
T c= crotate_to f0 f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0
D Seq.size_cons
A |- (!h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t)))))
T c= csizel cCONS f0 f1 cSUC csizel f1
D Seq.nth
A |- (!x0. (!h. (!t. (!n. (((((nth x0) NIL) n) = x0) /\ (((((nth x0) ((CONS h) t)) (NUMERAL _0)) = h) /\ ((((nth x0) ((CONS h) t)) (SUC n)) = (((nth x0) t) n))))))))
T c/\ c= cnth f0 cNIL f1 f0 c/\ c= cnth f0 cCONS f2 f3 cNUMERAL c_0 f2 c= cnth f0 cCONS f2 f3 cSUC f1 cnth f0 f3 f1
D Seq.nth0
A |- (!x0. (!s. ((((nth x0) s) (NUMERAL _0)) = ((headl x0) s))))
T c= cnth f0 f1 cNUMERAL c_0 cheadl f0 f1
D Seq.index_head
A |- (!x. (!s. (((indexl x) ((CONS x) s)) = (NUMERAL _0))))
T c= cindexl f0 cCONS f0 f1 cNUMERAL c_0
D Seq2.next_el
A |- (!x. (!s. (((next_el s) x) = (((COND (((indexl x) s) = ((sizel s) - (NUMERAL (BIT1 _0))))) ((headl x) s)) (((nth x) s) (((indexl x) s) + (NUMERAL (BIT1 _0))))))))
T c= cnext_el f0 f1 cCOND c= cindexl f1 f0 c- csizel f0 cNUMERAL cBIT1 c_0 cheadl f1 f0 cnth f1 f0 c+ cindexl f1 f0 cNUMERAL cBIT1 c_0
D Seq2.head_HD
A |- (!x0. (!s. (((NUMERAL _0) < (sizel s)) ==> (((headl x0) s) = (HD s)))))
T c==> c< cNUMERAL c_0 csizel f0 c= cheadl f1 f0 cHD f0
D Seq2.size1
A |- (!x. ((sizel ((CONS x) NIL)) = (NUMERAL (BIT1 _0))))
T c= csizel cCONS f0 cNIL cNUMERAL cBIT1 c_0
D Dangeyj.SND_EMPTY_INDEXL
A |- (!r. ((((MEM r1) r) /\ ((uniq r) /\ ((SND ((split_at r1) r)) = NIL))) ==> (((indexl r1) r) = ((sizel r) - (NUMERAL (BIT1 _0))))))
T c==> c/\ cMEM f0 f1 c/\ cuniq f1 c= cSND csplit_at f0 f1 cNIL c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0
D Dangeyj.INDEXL_EQ_SND_EMPTY
A |- (!r. ((((MEM r1) r) /\ (uniq r)) ==> ((((indexl r1) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = ((SND ((split_at r1) r)) = NIL))))
T c==> c/\ cMEM f0 f1 cuniq f1 c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cSND csplit_at f0 f1 cNIL
D Dangeyj.mem_imp_not_nil
A |- (!s. (!x. (((MEM x) s) ==> (~ (s = NIL)))))
T c==> cMEM f0 f1 c~ c= f1 cNIL
D Dangeyj.HD_FST_SPLIT
A |- (!t. ((~ ((FST ((split_at r2) t)) = NIL)) ==> ((HD (FST ((split_at r2) t))) = (HD t))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c= cHD cFST csplit_at f0 f1 cHD f1
D Dangeyj.HD_SND_NTH_SPLIT_AT
A |- (!r. ((~ ((SND ((split_at r1) r)) = NIL)) ==> ((HD (SND ((split_at r1) r))) = (((nth r1) r) (((indexl r1) r) + (NUMERAL (BIT1 _0)))))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c= cHD cSND csplit_at f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0
D Pwssrat.sizel0_not_nil
A |- (!s. ((~ (s = NIL)) = ((NUMERAL _0) < (sizel s))))
T c= c~ c= f0 cNIL c< cNUMERAL c_0 csizel f0
D Pwssrat.FST_SND_EMPTY_SING
A |- (!r. ((((MEM x) r) /\ (((FST ((split_at x) r)) = NIL) /\ ((SND ((split_at x) r)) = NIL))) ==> (r = ((CONS x) NIL))))
T c==> c/\ cMEM f0 f1 c/\ c= cFST csplit_at f0 f1 cNIL c= cSND csplit_at f0 f1 cNIL c= f1 cCONS f0 cNIL
+ |- ((!t. ((~ ((FST ((split_at r2) t)) = NIL)) ==> ((HD (FST ((split_at r2) t))) = (HD t)))) = T)
T c= ! c==> c~ c= cFST csplit_at f0 b0 cNIL c= cHD cFST csplit_at f0 b0 cHD b0 cT
+ (~ ((SND ((split_at x) r)) = NIL)) |- (((~ ((SND ((split_at x) r)) = NIL)) ==> ((HD (SND ((split_at x) r))) = (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (HD (SND ((split_at x) r)))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c==> c==> c~ c= cSND csplit_at f0 f1 cNIL c= cHD cSND csplit_at f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cHD cSND csplit_at f0 f1
+ |- ((((nth x0) ((CONS h) t)) (SUC n)) = (((nth x0) t) n))
T c= cnth f0 cCONS f1 f2 cSUC f3 cnth f0 f2 f3
+ |- ((\e'. (((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = t')) ==> (((~ g') ==> ((((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 f3 c==> c==> c~ f2 c= cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 b0 c= cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cCOND f2 f3 b0 f4
+ |- (((!s. ((~ (s = NIL)) = ((NUMERAL _0) < (sizel s)))) ==> ((\s. ((~ (s = NIL)) = ((NUMERAL _0) < (sizel s)))) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((\s. ((~ (s = NIL)) = ((NUMERAL _0) < (sizel s)))) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))
T c= c==> ! c= c~ c= b0 cNIL c< cNUMERAL c_0 csizel b0 * / c= c~ c= b0 cNIL c< cNUMERAL c_0 csizel b0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 * / c= c~ c= b0 cNIL c< cNUMERAL c_0 csizel b0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1
+ (~ ((SND ((split_at x) r)) = NIL)) |- ((~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((COND ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c==> c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- (((!r. ((((MEM x) r) /\ (((FST ((split_at x) r)) = NIL) /\ ((SND ((split_at x) r)) = NIL))) ==> (r = ((CONS x) NIL)))) ==> ((\r. ((((MEM x) r) /\ (((FST ((split_at x) r)) = NIL) /\ ((SND ((split_at x) r)) = NIL))) ==> (r = ((CONS x) NIL)))) r)) = ((\r. ((((MEM x) r) /\ (((FST ((split_at x) r)) = NIL) /\ ((SND ((split_at x) r)) = NIL))) ==> (r = ((CONS x) NIL)))) r))
T c= c==> ! c==> c/\ cMEM f0 b0 c/\ c= cFST csplit_at f0 b0 cNIL c= cSND csplit_at f0 b0 cNIL c= b0 cCONS f0 cNIL * / c==> c/\ cMEM f0 b0 c/\ c= cFST csplit_at f0 b0 cNIL c= cSND csplit_at f0 b0 cNIL c= b0 cCONS f0 cNIL f1 * / c==> c/\ cMEM f0 b0 c/\ c= cFST csplit_at f0 b0 cNIL c= cSND csplit_at f0 b0 cNIL c= b0 cCONS f0 cNIL f1
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ (~ ((FST ((split_at x) r)) = NIL)) |- ((((HD (FST ((split_at x) r))) = (HD r)) ==> ((HD r) = (HD (FST ((split_at x) r))))) = (((~ ((FST ((split_at x) r)) = NIL)) ==> ((HD (FST ((split_at x) r))) = (HD r))) ==> ((HD r) = (HD (FST ((split_at x) r))))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c= c==> c= cHD cFST csplit_at f0 f1 cHD f1 c= cHD f1 cHD cFST csplit_at f0 f1 c==> c==> c~ c= cFST csplit_at f0 f1 cNIL c= cHD cFST csplit_at f0 f1 cHD f1 c= cHD f1 cHD cFST csplit_at f0 f1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- ((((~ (r = NIL)) = ((NUMERAL _0) < (sizel r))) ==> (((headl x) r) = ((headl x) (FST ((split_at x) r))))) = (((headl x) r) = ((headl x) (FST ((split_at x) r)))))
T c= c==> c= c~ c= f0 cNIL c< cNUMERAL c_0 csizel f0 c= cheadl f1 f0 cheadl f1 cFST csplit_at f1 f0 c= cheadl f1 f0 cheadl f1 cFST csplit_at f1 f0
+ |- ((~ ((FST ((split_at x) r)) = NIL)) = ((NUMERAL _0) < (sizel (FST ((split_at x) r)))))
T c= c~ c= cFST csplit_at f0 f1 cNIL c< cNUMERAL c_0 csizel cFST csplit_at f0 f1
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_of_int _10302737) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
+ |- (((!r1. (!r. ((~ ((SND ((split_at r1) r)) = NIL)) ==> ((HD (SND ((split_at r1) r))) = (((nth r1) r) (((indexl r1) r) + (NUMERAL (BIT1 _0)))))))) ==> ((\r1. (!r. ((~ ((SND ((split_at r1) r)) = NIL)) ==> ((HD (SND ((split_at r1) r))) = (((nth r1) r) (((indexl r1) r) + (NUMERAL (BIT1 _0)))))))) x)) = ((\r1. (!r. ((~ ((SND ((split_at r1) r)) = NIL)) ==> ((HD (SND ((split_at r1) r))) = (((nth r1) r) (((indexl r1) r) + (NUMERAL (BIT1 _0)))))))) x))
T c= c==> ! ! c==> c~ c= cSND csplit_at b0 b1 cNIL c= cHD cSND csplit_at b0 b1 cnth b0 b1 c+ cindexl b0 b1 cNUMERAL cBIT1 c_0 * / ! c==> c~ c= cSND csplit_at b0 b1 cNIL c= cHD cSND csplit_at b0 b1 cnth b0 b1 c+ cindexl b0 b1 cNUMERAL cBIT1 c_0 f0 * / ! c==> c~ c= cSND csplit_at b0 b1 cNIL c= cHD cSND csplit_at b0 b1 cnth b0 b1 c+ cindexl b0 b1 cNUMERAL cBIT1 c_0 f0
+ (~ ((FST ((split_at x) r)) = NIL)), ((MEM x) r) |- (((~ ((FST ((split_at x) r)) = NIL)) = ((NUMERAL _0) < (sizel (FST ((split_at x) r))))) ==> (((headl x) r) = ((headl x) (FST ((split_at x) r)))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c==> cMEM f0 f1 c==> c= c~ c= cFST csplit_at f0 f1 cNIL c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 c= cheadl f0 f1 cheadl f0 cFST csplit_at f0 f1
- (~ (r = NIL)) |- ((NIL = r) = F)
T c==> c~ c= f0 cNIL c= c= cNIL f0 cF
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((NUMERAL _0) < a) = ((~ (a = (NUMERAL _0))) /\ (((NUMERAL _0) + (NUMERAL (BIT1 _0))) = (SUC (NUMERAL _0)))))
T c= c< cNUMERAL c_0 f0 c/\ c~ c= f0 cNUMERAL c_0 c= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
+ |- ((\e'. ((((SND ((split_at x) r)) = NIL) = g') ==> ((g' ==> ((HD (FST ((split_at x) r))) = t')) ==> (((~ g') ==> ((HD (SND ((split_at x) r))) = e')) ==> ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cSND csplit_at f0 f1 cNIL f2 c==> c==> f2 c= cHD cFST csplit_at f0 f1 f3 c==> c==> c~ f2 c= cHD cSND csplit_at f0 f1 b0 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND f2 f3 b0 f4
+ |- ((((~ ((SND ((split_at x) r)) = NIL)) ==> ((HD (SND ((split_at x) r))) = (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (HD (SND ((split_at x) r))))) = ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (HD (SND ((split_at x) r)))))
T c= c==> c==> c~ c= cSND csplit_at f0 f1 cNIL c= cHD cSND csplit_at f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cHD cSND csplit_at f0 f1 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cHD cSND csplit_at f0 f1
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (!x. (((real_mul x) ((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742)))) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- (~ ((SND ((split_at x) r)) = NIL)) |- (((~ (NIL = (SND ((split_at x) r)))) ==> ((NIL = (SND ((split_at x) r))) = F)) = ((NIL = (SND ((split_at x) r))) = F))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c= c==> c~ c= cNIL cSND csplit_at f0 f1 c= c= cNIL cSND csplit_at f0 f1 cF c= c= cNIL cSND csplit_at f0 f1 cF
+ |- ((((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))))
T c= cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
+ (~ ((FST ((split_at x) r)) = NIL)), ((MEM x) r) |- (((NUMERAL _0) < (sizel (FST ((split_at x) r)))) ==> (((headl x) r) = ((headl x) (FST ((split_at x) r)))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c==> cMEM f0 f1 c==> c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 c= cheadl f0 f1 cheadl f0 cFST csplit_at f0 f1
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- ((((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) ==> (((headl x) ((rotate_to r) x)) = ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))))) ==> (((~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0))))) ((headl x) ((rotate_to r) x))) (((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) e')))) = (((~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0))))) ((headl x) ((rotate_to r) x))) (((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) e'))))
T c= c==> c==> c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cheadl f0 crotate_to f1 f0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c==> c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 f2 c= cCOND c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 cheadl f0 crotate_to f1 f0 cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 f2 c==> c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 f2 c= cCOND c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 cheadl f0 crotate_to f1 f0 cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 f2
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ (~ ((FST ((split_at x) r)) = NIL)), ((MEM x) r) |- (((~ ((FST ((split_at x) r)) = NIL)) = ((NUMERAL _0) < (sizel (FST ((split_at x) r))))) ==> (((headl x) r) = (((COND ((NUMERAL _0) = (sizel (FST ((split_at x) r))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c==> cMEM f0 f1 c==> c= c~ c= cFST csplit_at f0 f1 cNIL c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 csizel cFST csplit_at f0 f1 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ ((SND ((split_at x) r)) = NIL), (((FST ((split_at x) r)) = NIL) \/ (~ ((FST ((split_at x) r)) = NIL))), ((MEM x) r) |- ((((FST ((split_at x) r)) = NIL) \/ (~ ((FST ((split_at x) r)) = NIL))) /\ (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c= cSND csplit_at f0 f1 cNIL c==> c\/ c= cFST csplit_at f0 f1 cNIL c~ c= cFST csplit_at f0 f1 cNIL c==> cMEM f0 f1 c/\ c\/ c= cFST csplit_at f0 f1 cNIL c~ c= cFST csplit_at f0 f1 cNIL c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742)) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((m < n) = ((int_lt (int_of_num m)) (int_of_num n)))
T c= c< f0 f1 cint_lt cint_of_num f0 cint_of_num f1
+ (~ ((sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))) = (NUMERAL _0))), (((NUMERAL _0) + (NUMERAL (BIT1 _0))) = (SUC (NUMERAL _0))) |- (((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = ((headl x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((COND ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c~ c= csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL c_0 c==> c= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0 c= c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ (~ ((SND ((split_at x) r)) = NIL)) |- ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND F) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND cF cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1
+ |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_of_int _10302737) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\x. ((sizel ((CONS x) NIL)) = (NUMERAL (BIT1 _0)))) x)
T * / c= csizel cCONS b0 cNIL cNUMERAL cBIT1 c_0 f0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10302741))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10302741))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ (~ ((SND ((split_at x) r)) = NIL)), ((NUMERAL _0) < (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) |- (((NUMERAL _0) < (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) /\ ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = ((headl x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c==> c< cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c/\ c< cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1
+ |- (((!h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t))))) ==> ((\h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t))))) h)) = ((\h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t))))) h))
T c= c==> ! ! c= csizel cCONS b0 b1 cSUC csizel b1 * / ! c= csizel cCONS b0 b1 cSUC csizel b1 f0 * / ! c= csizel cCONS b0 b1 cSUC csizel b1 f0
+ |- (((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((COND ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) = ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))))))
T c= c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
+ (((MEM x) r) /\ (uniq r)), ((MEM x) r) |- (((next_el r) x) = ((next_el ((rotate_to r) x)) x))
T c==> c/\ cMEM f0 f1 cuniq f1 c==> cMEM f0 f1 c= cnext_el f1 f0 cnext_el crotate_to f1 f0 f0
+ (uniq r), ((~ ((SND ((split_at x) r)) = NIL)) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))))), (((SND ((split_at x) r)) = NIL) \/ (~ ((SND ((split_at x) r)) = NIL))), ((MEM x) r) |- ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))))
T c==> cuniq f0 c==> c==> c~ c= cSND csplit_at f1 f0 cNIL c= cCOND c= cindexl f1 f0 c- csizel f0 cNUMERAL cBIT1 c_0 cheadl f1 f0 cnth f1 f0 c+ cindexl f1 f0 cNUMERAL cBIT1 c_0 cCOND c= cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c- csizel cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0 cheadl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cnth f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c+ cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0 c==> c\/ c= cSND csplit_at f1 f0 cNIL c~ c= cSND csplit_at f1 f0 cNIL c==> cMEM f1 f0 c= cCOND c= cindexl f1 f0 c- csizel f0 cNUMERAL cBIT1 c_0 cheadl f1 f0 cnth f1 f0 c+ cindexl f1 f0 cNUMERAL cBIT1 c_0 cCOND c= cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c- csizel cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0 cheadl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cnth f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c+ cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0
+ (uniq r), ((MEM x) r) |- ((~ ((SND ((split_at x) r)) = NIL)) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))))))
T c==> cuniq f0 c==> cMEM f1 f0 c==> c~ c= cSND csplit_at f1 f0 cNIL c= cCOND c= cindexl f1 f0 c- csizel f0 cNUMERAL cBIT1 c_0 cheadl f1 f0 cnth f1 f0 c+ cindexl f1 f0 cNUMERAL cBIT1 c_0 cCOND c= cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c- csizel cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0 cheadl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cnth f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c+ cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742)))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10302737))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- (((NUMERAL (BIT1 _0)) - (NUMERAL (BIT1 _0))) = (NUMERAL _0))
T c= c- cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL c_0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((SND ((split_at x) r)) = NIL), ((MEM x) r) |- (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))
T c==> c= cSND csplit_at f0 f1 cNIL c==> cMEM f0 f1 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- (~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) |- ((((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))) = ((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) = F)
T c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= c= c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cF
- ((NUMERAL _0) < (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) |- (T = ((NUMERAL _0) < (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))))
T c==> c< cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c= cT c< cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1
+ |- ((\h. (!t. ((sizel ((CONS h) t)) = (SUC (sizel t))))) h)
T * / ! c= csizel cCONS b0 b1 cSUC csizel b1 f0
+ |- (((HD (SND ((split_at x) r))) = (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (HD (SND ((split_at x) r)))))
T c==> c= cHD cSND csplit_at f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cHD cSND csplit_at f0 f1
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ (~ ((FST ((split_at x) r)) = NIL)), ((~ ((sizel (FST ((split_at x) r))) = (NUMERAL _0))) /\ (((NUMERAL _0) + (NUMERAL (BIT1 _0))) = (SUC (NUMERAL _0)))), ((MEM x) r) |- (((headl x) r) = (((COND ((NUMERAL _0) = (sizel (FST ((split_at x) r))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c==> c/\ c~ c= csizel cFST csplit_at f0 f1 cNUMERAL c_0 c= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0 c==> cMEM f0 f1 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 csizel cFST csplit_at f0 f1 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (T = ((~ (!A. (A \/ (~ A)))) ==> F))
T c= cT c==> c~ ! c\/ b0 c~ b0 cF
- |- (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10302742)) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((FST ((split_at x) r)) = NIL), ((SND ((split_at x) r)) = NIL), ((MEM x) r) |- (((((MEM x) r) /\ (((FST ((split_at x) r)) = NIL) /\ ((SND ((split_at x) r)) = NIL))) ==> (r = ((CONS x) NIL))) ==> (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) NIL)) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) NIL))) (((nth x) ((CONS x) NIL)) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c= cFST csplit_at f0 f1 cNIL c==> c= cSND csplit_at f0 f1 cNIL c==> cMEM f0 f1 c==> c==> c/\ cMEM f0 f1 c/\ c= cFST csplit_at f0 f1 cNIL c= cSND csplit_at f0 f1 cNIL c= f1 cCONS f0 cNIL c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cNIL cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cNIL cnth f0 cCONS f0 cNIL c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- (((!r. ((((MEM x) r) /\ ((uniq r) /\ ((SND ((split_at x) r)) = NIL))) ==> (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))))) ==> ((\r. ((((MEM x) r) /\ ((uniq r) /\ ((SND ((split_at x) r)) = NIL))) ==> (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))))) r)) = ((\r. ((((MEM x) r) /\ ((uniq r) /\ ((SND ((split_at x) r)) = NIL))) ==> (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))))) r))
T c= c==> ! c==> c/\ cMEM f0 b0 c/\ cuniq b0 c= cSND csplit_at f0 b0 cNIL c= cindexl f0 b0 c- csizel b0 cNUMERAL cBIT1 c_0 * / c==> c/\ cMEM f0 b0 c/\ cuniq b0 c= cSND csplit_at f0 b0 cNIL c= cindexl f0 b0 c- csizel b0 cNUMERAL cBIT1 c_0 f1 * / c==> c/\ cMEM f0 b0 c/\ cuniq b0 c= cSND csplit_at f0 b0 cNIL c= cindexl f0 b0 c- csizel b0 cNUMERAL cBIT1 c_0 f1
+ |- ((\x. (!r. ((((MEM x) r) /\ (((FST ((split_at x) r)) = NIL) /\ ((SND ((split_at x) r)) = NIL))) ==> (r = ((CONS x) NIL))))) x)
T * / ! c==> c/\ cMEM b0 b1 c/\ c= cFST csplit_at b0 b1 cNIL c= cSND csplit_at b0 b1 cNIL c= b1 cCONS b0 cNIL f0
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((HD (FST ((split_at x) r))) = (HD r)) ==> ((HD r) = (HD (FST ((split_at x) r)))))
T c==> c= cHD cFST csplit_at f0 f1 cHD f1 c= cHD f1 cHD cFST csplit_at f0 f1
+ (~ ((FST ((split_at x) r)) = NIL)), ((MEM x) r) |- (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c==> cMEM f0 f1 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- ((!A'. (A' \/ (~ A))) = ((!A. A) \/ (~ A)))
T c= ! c\/ b0 c~ f0 c\/ ! b0 c~ f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))) = (NUMERAL _0))), (~ ((SND ((split_at x) r)) = NIL)), (~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)), (((NUMERAL _0) + (NUMERAL (BIT1 _0))) = (SUC (NUMERAL _0))) |- ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((COND ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))
T c==> c~ c= csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL c_0 c==> c~ c= cSND csplit_at f0 f1 cNIL c==> c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c==> c= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ (~ ((SND ((split_at x) r)) = NIL)) |- (((((SND ((split_at x) r)) = NIL) = F) ==> ((F ==> ((HD (FST ((split_at x) r))) = t')) ==> (((~ F) ==> ((HD (SND ((split_at x) r))) = e')) ==> ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND F) t') e'))))) = ((F ==> ((HD (FST ((split_at x) r))) = t')) ==> (((~ F) ==> ((HD (SND ((split_at x) r))) = e')) ==> ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND F) t') e')))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c= c==> c= c= cSND csplit_at f0 f1 cNIL cF c==> c==> cF c= cHD cFST csplit_at f0 f1 f2 c==> c==> c~ cF c= cHD cSND csplit_at f0 f1 f3 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND cF f2 f3 c==> c==> cF c= cHD cFST csplit_at f0 f1 f2 c==> c==> c~ cF c= cHD cSND csplit_at f0 f1 f3 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND cF f2 f3
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((\g'. (!t'. (!e'. (((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = t')) ==> (((~ g') ==> ((((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 b1 c==> c==> c~ b0 c= cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 b2 c= cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f2
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
+ |- ((\A. (A \/ (~ A))) ((SND ((split_at x) r)) = NIL))
T * / c\/ b0 c~ b0 c= cSND csplit_at f0 f1 cNIL
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302741)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l)))) ==> ((\m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l)))) m)) = ((\m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l)))) m))
T c= c==> ! c= cHD cAPPEND f0 b0 cCOND c= f0 cNIL cHD b0 cHD f0 * / c= cHD cAPPEND f0 b0 cCOND c= f0 cNIL cHD b0 cHD f0 f1 * / c= cHD cAPPEND f0 b0 cCOND c= f0 cNIL cHD b0 cHD f0 f1
- |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742)) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!t. ((~ ((FST ((split_at x) t)) = NIL)) ==> ((HD (FST ((split_at x) t))) = (HD t)))) ==> ((\t. ((~ ((FST ((split_at x) t)) = NIL)) ==> ((HD (FST ((split_at x) t))) = (HD t)))) r)) = ((\t. ((~ ((FST ((split_at x) t)) = NIL)) ==> ((HD (FST ((split_at x) t))) = (HD t)))) r))
T c= c==> ! c==> c~ c= cFST csplit_at f0 b0 cNIL c= cHD cFST csplit_at f0 b0 cHD b0 * / c==> c~ c= cFST csplit_at f0 b0 cNIL c= cHD cFST csplit_at f0 b0 cHD b0 f1 * / c==> c~ c= cFST csplit_at f0 b0 cNIL c= cHD cFST csplit_at f0 b0 cHD b0 f1
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- (((~ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) e')))
T c==> c==> c~ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f2 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 f2
- |- (((!t'. (!e'. (((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) r) = t')) ==> (((~ g') ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) r) = t')) ==> (((~ g') ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) r) = t')) ==> (((~ g') ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 f1 b0 c==> c==> c~ f2 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 b1 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 * / ! c==> c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 f1 b0 c==> c==> c~ f2 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 b1 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 f3 * / ! c==> c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 f1 b0 c==> c==> c~ f2 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 b1 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 f3
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ ((HD (FST ((split_at x) r))) = (HD r)) |- (((HD (FST ((split_at x) r))) = (HD r)) /\ ((HD r) = (HD (FST ((split_at x) r)))))
T c==> c= cHD cFST csplit_at f0 f1 cHD f1 c/\ c= cHD cFST csplit_at f0 f1 cHD f1 c= cHD f1 cHD cFST csplit_at f0 f1
- |- ((!r. t) = t)
T c= ! f0 f0
+ (~ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) |- (((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))))) = ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))))))
T c==> c~ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
+ |- (!d. (((~ (((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add (int_of_num d)) (int_of_num (NUMERAL (BIT1 _0)))))) /\ ((~ ((int_lt ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) \/ (~ ((int_of_num d) = (int_of_num (NUMERAL _0)))))) \/ ((int_of_num d) = (int_of_num a))))
T c\/ c/\ c~ c= cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 c\/ c~ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c~ c= cint_of_num f1 cint_of_num cNUMERAL c_0 c= cint_of_num f1 cint_of_num f0
+ (uniq r), (((SND ((split_at x) r)) = NIL) \/ (~ ((SND ((split_at x) r)) = NIL))), ((MEM x) r) |- ((((SND ((split_at x) r)) = NIL) \/ (~ ((SND ((split_at x) r)) = NIL))) /\ ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))))))
T c==> cuniq f0 c==> c\/ c= cSND csplit_at f1 f0 cNIL c~ c= cSND csplit_at f1 f0 cNIL c==> cMEM f1 f0 c/\ c\/ c= cSND csplit_at f1 f0 cNIL c~ c= cSND csplit_at f1 f0 cNIL c= cCOND c= cindexl f1 f0 c- csizel f0 cNUMERAL cBIT1 c_0 cheadl f1 f0 cnth f1 f0 c+ cindexl f1 f0 cNUMERAL cBIT1 c_0 cCOND c= cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c- csizel cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0 cheadl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cnth f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c+ cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0
+ |- ((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0)))
T c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (((!r. ((~ ((SND ((split_at x) r)) = NIL)) ==> ((HD (SND ((split_at x) r))) = (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))))) ==> ((\r. ((~ ((SND ((split_at x) r)) = NIL)) ==> ((HD (SND ((split_at x) r))) = (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))))) r)) = ((\r. ((~ ((SND ((split_at x) r)) = NIL)) ==> ((HD (SND ((split_at x) r))) = (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))))) r))
T c= c==> ! c==> c~ c= cSND csplit_at f0 b0 cNIL c= cHD cSND csplit_at f0 b0 cnth f0 b0 c+ cindexl f0 b0 cNUMERAL cBIT1 c_0 * / c==> c~ c= cSND csplit_at f0 b0 cNIL c= cHD cSND csplit_at f0 b0 cnth f0 b0 c+ cindexl f0 b0 cNUMERAL cBIT1 c_0 f1 * / c==> c~ c= cSND csplit_at f0 b0 cNIL c= cHD cSND csplit_at f0 b0 cnth f0 b0 c+ cindexl f0 b0 cNUMERAL cBIT1 c_0 f1
- |- ((((~ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))))) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))))) = ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))))))
T c= c==> c==> c~ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_of_int _10302737) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (T = (((NUMERAL (BIT1 _0)) - (NUMERAL (BIT1 _0))) = (NUMERAL _0)))
T c= cT c= c- cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL c_0
+ |- (((SND ((split_at x) r)) = NIL) \/ (~ ((SND ((split_at x) r)) = NIL)))
T c\/ c= cSND csplit_at f0 f1 cNIL c~ c= cSND csplit_at f0 f1 cNIL
+ ((FST ((split_at x) r)) = NIL), ((SND ((split_at x) r)) = NIL), ((MEM x) r) |- (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))
T c==> c= cFST csplit_at f0 f1 cNIL c==> c= cSND csplit_at f0 f1 cNIL c==> cMEM f0 f1 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
- |- ((((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ==> (((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) ==> (((headl x) r) = t')) ==> (((~ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) t') e'))))) = (((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) ==> (((headl x) r) = t')) ==> (((~ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) t') e')))))
T c= c==> c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c==> c==> c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cheadl f0 f1 f2 c==> c==> c~ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f3 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 f2 f3 c==> c==> c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cheadl f0 f1 f2 c==> c==> c~ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f3 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 f2 f3
+ (~ ((FST ((split_at x) r)) = NIL)) |- ((HD r) = (HD (FST ((split_at x) r))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c= cHD f1 cHD cFST csplit_at f0 f1
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
- (~ ((FST ((split_at x) r)) = NIL)) |- ((NIL = (FST ((split_at x) r))) = F)
T c==> c~ c= cFST csplit_at f0 f1 cNIL c= c= cNIL cFST csplit_at f0 f1 cF
+ |- ((((((MEM x) r) /\ (((FST ((split_at x) r)) = NIL) /\ ((SND ((split_at x) r)) = NIL))) ==> (r = ((CONS x) NIL))) ==> (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) NIL)) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) NIL))) (((nth x) ((CONS x) NIL)) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))) = (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) NIL)) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) NIL))) (((nth x) ((CONS x) NIL)) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c= c==> c==> c/\ cMEM f0 f1 c/\ c= cFST csplit_at f0 f1 cNIL c= cSND csplit_at f0 f1 cNIL c= f1 cCONS f0 cNIL c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cNIL cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cNIL cnth f0 cCONS f0 cNIL c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cNIL cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cNIL cnth f0 cCONS f0 cNIL c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- ((NUMERAL _0) < (sizel (FST ((split_at x) r)))) |- (T = ((NUMERAL _0) < (sizel (FST ((split_at x) r)))))
T c==> c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 c= cT c< cNUMERAL c_0 csizel cFST csplit_at f0 f1
+ (~ ((sizel (FST ((split_at x) r))) = (NUMERAL _0))), (~ ((FST ((split_at x) r)) = NIL)), (((NUMERAL _0) + (NUMERAL (BIT1 _0))) = (SUC (NUMERAL _0))), ((MEM x) r) |- (((headl x) r) = (((COND ((NUMERAL _0) = (sizel (FST ((split_at x) r))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))
T c==> c~ c= csizel cFST csplit_at f0 f1 cNUMERAL c_0 c==> c~ c= cFST csplit_at f0 f1 cNIL c==> c= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0 c==> cMEM f0 f1 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 csizel cFST csplit_at f0 f1 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- ((\x. (!s. (((next_el s) x) = (((COND (((indexl x) s) = ((sizel s) - (NUMERAL (BIT1 _0))))) ((headl x) s)) (((nth x) s) (((indexl x) s) + (NUMERAL (BIT1 _0)))))))) x)
T * / ! c= cnext_el b1 b0 cCOND c= cindexl b0 b1 c- csizel b1 cNUMERAL cBIT1 c_0 cheadl b0 b1 cnth b0 b1 c+ cindexl b0 b1 cNUMERAL cBIT1 c_0 f0
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!t. (!n. (((((nth x0) NIL) n) = x0) /\ (((((nth x0) ((CONS h) t)) (NUMERAL _0)) = h) /\ ((((nth x0) ((CONS h) t)) (SUC n)) = (((nth x0) t) n)))))) ==> ((\t. (!n. (((((nth x0) NIL) n) = x0) /\ (((((nth x0) ((CONS h) t)) (NUMERAL _0)) = h) /\ ((((nth x0) ((CONS h) t)) (SUC n)) = (((nth x0) t) n)))))) t)) = ((\t. (!n. (((((nth x0) NIL) n) = x0) /\ (((((nth x0) ((CONS h) t)) (NUMERAL _0)) = h) /\ ((((nth x0) ((CONS h) t)) (SUC n)) = (((nth x0) t) n)))))) t))
T c= c==> ! ! c/\ c= cnth f0 cNIL b1 f0 c/\ c= cnth f0 cCONS f1 b0 cNUMERAL c_0 f1 c= cnth f0 cCONS f1 b0 cSUC b1 cnth f0 b0 b1 * / ! c/\ c= cnth f0 cNIL b1 f0 c/\ c= cnth f0 cCONS f1 b0 cNUMERAL c_0 f1 c= cnth f0 cCONS f1 b0 cSUC b1 cnth f0 b0 b1 f2 * / ! c/\ c= cnth f0 cNIL b1 f0 c/\ c= cnth f0 cCONS f1 b0 cNUMERAL c_0 f1 c= cnth f0 cCONS f1 b0 cSUC b1 cnth f0 b0 b1 f2
+ |- (((!x0. (!h. (!t. (!n. (((((nth x0) NIL) n) = x0) /\ (((((nth x0) ((CONS h) t)) (NUMERAL _0)) = h) /\ ((((nth x0) ((CONS h) t)) (SUC n)) = (((nth x0) t) n)))))))) ==> ((\x0. (!h. (!t. (!n. (((((nth x0) NIL) n) = x0) /\ (((((nth x0) ((CONS h) t)) (NUMERAL _0)) = h) /\ ((((nth x0) ((CONS h) t)) (SUC n)) = (((nth x0) t) n)))))))) x0)) = ((\x0. (!h. (!t. (!n. (((((nth x0) NIL) n) = x0) /\ (((((nth x0) ((CONS h) t)) (NUMERAL _0)) = h) /\ ((((nth x0) ((CONS h) t)) (SUC n)) = (((nth x0) t) n)))))))) x0))
T c= c==> ! ! ! ! c/\ c= cnth b0 cNIL b3 b0 c/\ c= cnth b0 cCONS b1 b2 cNUMERAL c_0 b1 c= cnth b0 cCONS b1 b2 cSUC b3 cnth b0 b2 b3 * / ! ! ! c/\ c= cnth b0 cNIL b3 b0 c/\ c= cnth b0 cCONS b1 b2 cNUMERAL c_0 b1 c= cnth b0 cCONS b1 b2 cSUC b3 cnth b0 b2 b3 f0 * / ! ! ! c/\ c= cnth b0 cNIL b3 b0 c/\ c= cnth b0 cCONS b1 b2 cNUMERAL c_0 b1 c= cnth b0 cCONS b1 b2 cSUC b3 cnth b0 b2 b3 f0
+ (~ ((SND ((split_at x) r)) = NIL)) |- ((((HD (SND ((split_at x) r))) = (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (HD (SND ((split_at x) r))))) = (((~ ((SND ((split_at x) r)) = NIL)) ==> ((HD (SND ((split_at x) r))) = (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (HD (SND ((split_at x) r))))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c= c==> c= cHD cSND csplit_at f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cHD cSND csplit_at f0 f1 c==> c==> c~ c= cSND csplit_at f0 f1 cNIL c= cHD cSND csplit_at f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cHD cSND csplit_at f0 f1
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (uniq r), ((MEM x) r) |- ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))))
T c==> cuniq f0 c==> cMEM f1 f0 c= cCOND c= cindexl f1 f0 c- csizel f0 cNUMERAL cBIT1 c_0 cheadl f1 f0 cnth f1 f0 c+ cindexl f1 f0 cNUMERAL cBIT1 c_0 cCOND c= cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c- csizel cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0 cheadl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cnth f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c+ cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0
+ |- ((((COND (((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0))))) ((headl x) ((rotate_to r) x))) (((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))))
T c= cCOND c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 cheadl f0 crotate_to f1 f0 cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
- |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ (~ F) |- ((~ F) /\ ((HD (SND ((split_at x) r))) = (HD (SND ((split_at x) r)))))
T c==> c~ cF c/\ c~ cF c= cHD cSND csplit_at f0 f1 cHD cSND csplit_at f0 f1
+ |- (((!A. (A \/ (~ A))) ==> ((\A. (A \/ (~ A))) ((SND ((split_at x) r)) = NIL))) = ((\A. (A \/ (~ A))) ((SND ((split_at x) r)) = NIL)))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c= cSND csplit_at f0 f1 cNIL * / c\/ b0 c~ b0 c= cSND csplit_at f0 f1 cNIL
+ ((FST ((split_at x) r)) = NIL), ((SND ((split_at x) r)) = NIL), ((MEM x) r) |- (((FST ((split_at x) r)) = NIL) /\ (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c= cFST csplit_at f0 f1 cNIL c==> c= cSND csplit_at f0 f1 cNIL c==> cMEM f0 f1 c/\ c= cFST csplit_at f0 f1 cNIL c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ (~ ((SND ((split_at x) r)) = NIL)), (uniq r), ((MEM x) r) |- (((((MEM x) r) /\ (uniq r)) ==> ((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = ((SND ((split_at x) r)) = NIL))) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c==> cuniq f1 c==> cMEM f0 f1 c==> c==> c/\ cMEM f0 f1 cuniq f1 c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cSND csplit_at f0 f1 cNIL c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))) = (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))))
T c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
- |- ((\l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))) l)
T * / c= cAPPEND cCONS f0 f1 b0 cCONS f0 cAPPEND f1 b0 f2
+ |- ((\s. (((indexl x) ((CONS x) s)) = (NUMERAL _0))) s)
T * / c= cindexl f0 cCONS f0 b0 cNUMERAL c_0 f1
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) |- ((((sizel r) - (NUMERAL (BIT1 _0))) = ((indexl x) r)) = F)
T c==> c~ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= c= c- csizel f1 cNUMERAL cBIT1 c_0 cindexl f0 f1 cF
- |- (((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) r) = t')) ==> (((~ g') ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))
T c==> c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 f1 f3 c==> c==> c~ f2 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f4 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND f2 f3 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((FST ((split_at x) r)) = NIL), ((SND ((split_at x) r)) = NIL), ((MEM x) r) |- (((r = ((CONS x) NIL)) ==> (((headl x) r) = ((headl x) ((CONS x) NIL)))) = (((((MEM x) r) /\ (((FST ((split_at x) r)) = NIL) /\ ((SND ((split_at x) r)) = NIL))) ==> (r = ((CONS x) NIL))) ==> (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) NIL)) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) NIL))) (((nth x) ((CONS x) NIL)) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))))
T c==> c= cFST csplit_at f0 f1 cNIL c==> c= cSND csplit_at f0 f1 cNIL c==> cMEM f0 f1 c= c==> c= f1 cCONS f0 cNIL c= cheadl f0 f1 cheadl f0 cCONS f0 cNIL c==> c==> c/\ cMEM f0 f1 c/\ c= cFST csplit_at f0 f1 cNIL c= cSND csplit_at f0 f1 cNIL c= f1 cCONS f0 cNIL c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cNIL cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cNIL cnth f0 cCONS f0 cNIL c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- ((\s. (((next_el s) x) = (((COND (((indexl x) s) = ((sizel s) - (NUMERAL (BIT1 _0))))) ((headl x) s)) (((nth x) s) (((indexl x) s) + (NUMERAL (BIT1 _0))))))) s)
T * / c= cnext_el b0 f0 cCOND c= cindexl f0 b0 c- csizel b0 cNUMERAL cBIT1 c_0 cheadl f0 b0 cnth f0 b0 c+ cindexl f0 b0 cNUMERAL cBIT1 c_0 f1
- |- (((!h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))) ==> ((\h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))) h)) = ((\h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))) h))
T c= c==> ! ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2 * / ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2 f0 * / ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2 f0
+ |- ((((~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))) = (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))))) ==> ((((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))))) = ((((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))))))
T c= c==> c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
- (~ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) |- ((~ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) /\ ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))))
T c==> c~ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c/\ c~ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0
+ (uniq r), ((SND ((split_at x) r)) = NIL), ((MEM x) r) |- (((((MEM x) r) /\ ((uniq r) /\ ((SND ((split_at x) r)) = NIL))) ==> (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND NIL) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND NIL) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND NIL) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND NIL) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND NIL) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))))))
T c==> cuniq f0 c==> c= cSND csplit_at f1 f0 cNIL c==> cMEM f1 f0 c==> c==> c/\ cMEM f1 f0 c/\ cuniq f0 c= cSND csplit_at f1 f0 cNIL c= cindexl f1 f0 c- csizel f0 cNUMERAL cBIT1 c_0 c= cCOND c= cindexl f1 f0 c- csizel f0 cNUMERAL cBIT1 c_0 cheadl f1 f0 cnth f1 f0 c+ cindexl f1 f0 cNUMERAL cBIT1 c_0 cCOND c= cindexl f1 cCONS f1 cAPPEND cNIL cFST csplit_at f1 f0 c- csizel cCONS f1 cAPPEND cNIL cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0 cheadl f1 cCONS f1 cAPPEND cNIL cFST csplit_at f1 f0 cnth f1 cCONS f1 cAPPEND cNIL cFST csplit_at f1 f0 c+ cindexl f1 cCONS f1 cAPPEND cNIL cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0
+ (~ ((SND ((split_at x) r)) = NIL)) |- (((NUMERAL _0) < (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = ((headl x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c==> c< cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1
+ |- ((\l. (((APPEND NIL) l) = l)) l)
T * / c= cAPPEND cNIL b0 b0 f0
- |- ((!A. (A \/ (~ A))) = ((T \/ (~ T)) /\ (F \/ (~ F))))
T c= ! c\/ b0 c~ b0 c/\ c\/ cT c~ cT c\/ cF c~ cF
+ |- ((((~ F) ==> ((HD (SND ((split_at x) r))) = (HD (SND ((split_at x) r))))) ==> ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND F) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))))) = ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND F) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r))))))
T c= c==> c==> c~ cF c= cHD cSND csplit_at f0 f1 cHD cSND csplit_at f0 f1 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND cF cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND cF cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_of_int _10302737) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((\x. (((real_mul x) (real_of_int _10302737)) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- ((\g'. (!t'. (!e'. (((((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((rotate_to r) x)) = t')) ==> (((~ g') ==> ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0))))) ((headl x) ((rotate_to r) x))) (((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= cheadl f0 crotate_to f1 f0 b1 c==> c==> c~ b0 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 cheadl f0 crotate_to f1 f0 cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f2
+ |- ((!r. ((((MEM r1) r) /\ ((uniq r) /\ ((SND ((split_at r1) r)) = NIL))) ==> (((indexl r1) r) = ((sizel r) - (NUMERAL (BIT1 _0)))))) = T)
T c= ! c==> c/\ cMEM f0 b0 c/\ cuniq b0 c= cSND csplit_at f0 b0 cNIL c= cindexl f0 b0 c- csizel b0 cNUMERAL cBIT1 c_0 cT
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
+ |- (((NUMERAL _0) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (((!g'. (!t'. (!e'. (((((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((rotate_to r) x)) = t')) ==> (((~ g') ==> ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0))))) ((headl x) ((rotate_to r) x))) (((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((rotate_to r) x)) = t')) ==> (((~ g') ==> ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0))))) ((headl x) ((rotate_to r) x))) (((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((rotate_to r) x)) = t')) ==> (((~ g') ==> ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0))))) ((headl x) ((rotate_to r) x))) (((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= cheadl f0 crotate_to f1 f0 b1 c==> c==> c~ b0 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 cheadl f0 crotate_to f1 f0 cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 * / ! ! c==> c= c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= cheadl f0 crotate_to f1 f0 b1 c==> c==> c~ b0 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 cheadl f0 crotate_to f1 f0 cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f2 * / ! ! c==> c= c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= cheadl f0 crotate_to f1 f0 b1 c==> c==> c~ b0 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 b2 c= cCOND c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 cheadl f0 crotate_to f1 f0 cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f2
- ((SND ((split_at x) r)) = NIL) |- (NIL = (SND ((split_at x) r)))
T c==> c= cSND csplit_at f0 f1 cNIL c= cNIL cSND csplit_at f0 f1
+ (~ ((sizel (FST ((split_at x) r))) = (NUMERAL _0))), (((NUMERAL _0) + (NUMERAL (BIT1 _0))) = (SUC (NUMERAL _0))) |- ((((headl x) r) = ((headl x) (FST ((split_at x) r)))) = (((headl x) r) = (((COND ((NUMERAL _0) = (sizel (FST ((split_at x) r))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c~ c= csizel cFST csplit_at f0 f1 cNUMERAL c_0 c==> c= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0 c= c= cheadl f0 f1 cheadl f0 cFST csplit_at f0 f1 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 csizel cFST csplit_at f0 f1 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- (((((int_lt (int_of_num (NUMERAL _0))) (int_of_num a)) /\ (~ ((int_of_num a) = (int_of_num (NUMERAL _0))))) \/ ((~ ((int_lt (int_of_num (NUMERAL _0))) (int_of_num a))) /\ ((int_of_num a) = (int_of_num (NUMERAL _0))))) = (((NUMERAL _0) < a) = ((~ (a = (NUMERAL _0))) /\ (((NUMERAL _0) + (NUMERAL (BIT1 _0))) = (SUC (NUMERAL _0))))))
T c= c\/ c/\ cint_lt cint_of_num cNUMERAL c_0 cint_of_num f0 c~ c= cint_of_num f0 cint_of_num cNUMERAL c_0 c/\ c~ cint_lt cint_of_num cNUMERAL c_0 cint_of_num f0 c= cint_of_num f0 cint_of_num cNUMERAL c_0 c= c< cNUMERAL c_0 f0 c/\ c~ c= f0 cNUMERAL c_0 c= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
+ |- ((((~ (((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add (int_of_num d)) (int_of_num (NUMERAL (BIT1 _0)))))) /\ ((~ ((int_lt ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) \/ (~ ((int_of_num d) = (int_of_num (NUMERAL _0)))))) \/ ((int_of_num d) = (int_of_num a))) = T)
T c= c\/ c/\ c~ c= cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 c\/ c~ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c~ c= cint_of_num f1 cint_of_num cNUMERAL c_0 c= cint_of_num f1 cint_of_num f0 cT
+ (~ ((FST ((split_at x) r)) = NIL)), ((MEM x) r) |- (((~ ((sizel (FST ((split_at x) r))) = (NUMERAL _0))) /\ (((NUMERAL _0) + (NUMERAL (BIT1 _0))) = (SUC (NUMERAL _0)))) ==> (((headl x) r) = (((COND ((NUMERAL _0) = (sizel (FST ((split_at x) r))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c==> cMEM f0 f1 c==> c/\ c~ c= csizel cFST csplit_at f0 f1 cNUMERAL c_0 c= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 csizel cFST csplit_at f0 f1 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
+ (~ ((sizel (FST ((split_at x) r))) = (NUMERAL _0))) |- (~ ((NUMERAL _0) = (sizel (FST ((split_at x) r)))))
T c==> c~ c= csizel cFST csplit_at f0 f1 cNUMERAL c_0 c~ c= cNUMERAL c_0 csizel cFST csplit_at f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))) = (NUMERAL _0))) |- (((sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))) = (NUMERAL _0)) = F)
T c==> c~ c= csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL c_0 c= c= csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL c_0 cF
- ((NUMERAL _0) < (sizel r)) |- (((NUMERAL _0) < (sizel r)) = T)
T c==> c< cNUMERAL c_0 csizel f0 c= c< cNUMERAL c_0 csizel f0 cT
+ |- ((\x0. (!s. ((((nth x0) s) (NUMERAL _0)) = ((headl x0) s)))) x0)
T * / ! c= cnth b0 b1 cNUMERAL c_0 cheadl b0 b1 f0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL) = (((SND ((split_at x) r)) = NIL) /\ ((FST ((split_at x) r)) = NIL))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((COND ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))) = ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((COND ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c= c==> c= c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c/\ c= cSND csplit_at f0 f1 cNIL c= cFST csplit_at f0 f1 cNIL c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (uniq r), (((SND ((split_at x) r)) = NIL) \/ (~ ((SND ((split_at x) r)) = NIL))), ((MEM x) r) |- ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))))
T c==> cuniq f0 c==> c\/ c= cSND csplit_at f1 f0 cNIL c~ c= cSND csplit_at f1 f0 cNIL c==> cMEM f1 f0 c= cCOND c= cindexl f1 f0 c- csizel f0 cNUMERAL cBIT1 c_0 cheadl f1 f0 cnth f1 f0 c+ cindexl f1 f0 cNUMERAL cBIT1 c_0 cCOND c= cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c- csizel cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0 cheadl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cnth f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c+ cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((SUC a) - (NUMERAL (BIT1 _0))) = a) = (!d. (((~ ((SUC a) = ((NUMERAL (BIT1 _0)) + d))) /\ ((~ ((SUC a) < (NUMERAL (BIT1 _0)))) \/ (~ (d = (NUMERAL _0))))) \/ (d = a))))
T c= c= c- cSUC f0 cNUMERAL cBIT1 c_0 f0 ! c\/ c/\ c~ c= cSUC f0 c+ cNUMERAL cBIT1 c_0 b0 c\/ c~ c< cSUC f0 cNUMERAL cBIT1 c_0 c~ c= b0 cNUMERAL c_0 c= b0 f0
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ (~ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))), (~ ((SND ((split_at x) r)) = NIL)) |- ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))))
T c==> c~ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c==> c~ c= cSND csplit_at f0 f1 cNIL c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_of_int _10302737) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_of_int _10302737) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f0 creal_of_num cNUMERAL c_0
+ (~ (r = NIL)), (~ ((FST ((split_at x) r)) = NIL)), ((NUMERAL _0) < (sizel (FST ((split_at x) r)))) |- (((headl x) r) = ((headl x) (FST ((split_at x) r))))
T c==> c~ c= f0 cNIL c==> c~ c= cFST csplit_at f1 f0 cNIL c==> c< cNUMERAL c_0 csizel cFST csplit_at f1 f0 c= cheadl f1 f0 cheadl f1 cFST csplit_at f1 f0
+ |- ((\m. ((((APPEND (SND ((split_at x) r))) m) = NIL) = (((SND ((split_at x) r)) = NIL) /\ (m = NIL)))) (FST ((split_at x) r)))
T * / c= c= cAPPEND cSND csplit_at f0 f1 b0 cNIL c/\ c= cSND csplit_at f0 f1 cNIL c= b0 cNIL cFST csplit_at f0 f1
+ (~ (r = NIL)), (~ ((FST ((split_at x) r)) = NIL)), ((NUMERAL _0) < (sizel (FST ((split_at x) r)))) |- (((~ (r = NIL)) = ((NUMERAL _0) < (sizel r))) ==> (((headl x) r) = ((headl x) (FST ((split_at x) r)))))
T c==> c~ c= f0 cNIL c==> c~ c= cFST csplit_at f1 f0 cNIL c==> c< cNUMERAL c_0 csizel cFST csplit_at f1 f0 c==> c= c~ c= f0 cNIL c< cNUMERAL c_0 csizel f0 c= cheadl f1 f0 cheadl f1 cFST csplit_at f1 f0
+ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) |- ((((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) = ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- (~ (!A. (A \/ (~ A)))) |- F
T c==> c~ ! c\/ b0 c~ b0 cF
+ |- (((~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0))))) ((headl x) ((rotate_to r) x))) (((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) e')))
T c==> c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 f2 c= cCOND c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 cheadl f0 crotate_to f1 f0 cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 f2
+ |- (((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = t')) ==> (((~ g') ==> ((((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))
T c==> c= c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 f3 c==> c==> c~ f2 c= cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f4 c= cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cCOND f2 f3 f4
+ ((NUMERAL _0) < (sizel r)), ((NUMERAL _0) < (sizel (FST ((split_at x) r)))) |- (((HD r) = (HD (FST ((split_at x) r)))) = (((headl x) r) = ((headl x) (FST ((split_at x) r)))))
T c==> c< cNUMERAL c_0 csizel f0 c==> c< cNUMERAL c_0 csizel cFST csplit_at f1 f0 c= c= cHD f0 cHD cFST csplit_at f1 f0 c= cheadl f1 f0 cheadl f1 cFST csplit_at f1 f0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742)) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- (((!e'. (((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = t')) ==> (((~ g') ==> ((((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) ==> ((\e'. (((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = t')) ==> (((~ g') ==> ((((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) e')) = ((\e'. (((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = t')) ==> (((~ g') ==> ((((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 f3 c==> c==> c~ f2 c= cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 b0 c= cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cCOND f2 f3 b0 * / c==> c= c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 f3 c==> c==> c~ f2 c= cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 b0 c= cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cCOND f2 f3 b0 f4 * / c==> c= c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 f3 c==> c==> c~ f2 c= cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 b0 c= cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cCOND f2 f3 b0 f4
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0)))
T c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((FST ((split_at x) r)) = NIL)) |- (((~ ((FST ((split_at x) r)) = NIL)) ==> ((HD (FST ((split_at x) r))) = (HD r))) ==> ((HD r) = (HD (FST ((split_at x) r)))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c==> c==> c~ c= cFST csplit_at f0 f1 cNIL c= cHD cFST csplit_at f0 f1 cHD f1 c= cHD f1 cHD cFST csplit_at f0 f1
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!A. ((P A) \/ Q)) = ((!A. (P A)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ (~ ((SND ((split_at x) r)) = NIL)), (uniq r), ((MEM x) r) |- ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c==> cuniq f1 c==> cMEM f0 f1 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
- ((NUMERAL _0) < (sizel (FST ((split_at x) r)))) |- (((NUMERAL _0) < (sizel (FST ((split_at x) r)))) = T)
T c==> c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 c= c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 cT
- |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) = ((~ (!A. (A \/ (~ A)))) ==> F))
T c= c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL) |- (NIL = ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))
T c==> c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c= cNIL cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1
- ((~ (!A. (A \/ (~ A)))) ==> F), (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- (((~ (!A. (A \/ (~ A)))) ==> F) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((SND ((split_at x) r)) = NIL)) |- ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (F ==> ((HD (FST ((split_at x) r))) = (HD (FST ((split_at x) r)))))
T c==> cF c= cHD cFST csplit_at f0 f1 cHD cFST csplit_at f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l))))) ==> ((\t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l))))) t)) = ((\t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l))))) t))
T c= c==> ! ! c= cAPPEND cCONS f0 b0 b1 cCONS f0 cAPPEND b0 b1 * / ! c= cAPPEND cCONS f0 b0 b1 cCONS f0 cAPPEND b0 b1 f1 * / ! c= cAPPEND cCONS f0 b0 b1 cCONS f0 cAPPEND b0 b1 f1
+ |- (((!v. (!vs. (((rotate_to vs) v) = ((CONS v) ((APPEND (SND ((split_at v) vs))) (FST ((split_at v) vs))))))) ==> ((\v. (!vs. (((rotate_to vs) v) = ((CONS v) ((APPEND (SND ((split_at v) vs))) (FST ((split_at v) vs))))))) v)) = ((\v. (!vs. (((rotate_to vs) v) = ((CONS v) ((APPEND (SND ((split_at v) vs))) (FST ((split_at v) vs))))))) v))
T c= c==> ! ! c= crotate_to b1 b0 cCONS b0 cAPPEND cSND csplit_at b0 b1 cFST csplit_at b0 b1 * / ! c= crotate_to b1 b0 cCONS b0 cAPPEND cSND csplit_at b0 b1 cFST csplit_at b0 b1 f0 * / ! c= crotate_to b1 b0 cCONS b0 cAPPEND cSND csplit_at b0 b1 cFST csplit_at b0 b1 f0
+ (~ ((FST ((split_at x) r)) = NIL)), ((MEM x) r) |- (((headl x) r) = (((COND ((NUMERAL _0) = (sizel (FST ((split_at x) r))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c==> cMEM f0 f1 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 csizel cFST csplit_at f0 f1 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- (~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) |- (((~ (((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))) = ((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))))) ==> ((((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))) = ((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) = F)) = ((((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))) = ((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) = F))
T c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= c==> c~ c= c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c= c= c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cF c= c= c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((real_ge x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((MEM x) r) |- ((~ ((FST ((split_at x) r)) = NIL)) ==> (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> cMEM f0 f1 c==> c~ c= cFST csplit_at f0 f1 cNIL c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ F |- (F /\ ((HD (FST ((split_at x) r))) = (HD (FST ((split_at x) r)))))
T c==> cF c/\ cF c= cHD cFST csplit_at f0 f1 cHD cFST csplit_at f0 f1
+ |- ((\x. (((MEM x) r) ==> (~ (r = NIL)))) x)
T * / c==> cMEM b0 f0 c~ c= f0 cNIL f1
- (~ ((FST ((split_at x) r)) = NIL)) |- (~ (NIL = (FST ((split_at x) r))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c~ c= cNIL cFST csplit_at f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((sizel (FST ((split_at x) r))) = (NUMERAL _0))) |- (((NUMERAL _0) = (sizel (FST ((split_at x) r)))) = F)
T c==> c~ c= csizel cFST csplit_at f0 f1 cNUMERAL c_0 c= c= cNUMERAL c_0 csizel cFST csplit_at f0 f1 cF
+ |- (((!t'. (!e'. (((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = t')) ==> (((~ g') ==> ((((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = t')) ==> (((~ g') ==> ((((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = t')) ==> (((~ g') ==> ((((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 b0 c==> c==> c~ f2 c= cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 b1 c= cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 * / ! c==> c= c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 b0 c==> c==> c~ f2 c= cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 b1 c= cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 f3 * / ! c==> c= c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 b0 c==> c==> c~ f2 c= cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 b1 c= cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 f3
- |- ((((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) ==> (((headl x) r) = ((headl x) r))) ==> (((~ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) e')))) = (((~ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) e'))))
T c= c==> c==> c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cheadl f0 f1 cheadl f0 f1 c==> c==> c~ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f2 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 f2 c==> c==> c~ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f2 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 f2
+ |- (((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) ==> (((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = t')) ==> (((~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) t') e'))))
T c==> c==> c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 f2 c==> c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f3 c= cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f2 f3
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((((SND ((split_at x) r)) = NIL) = g') ==> ((g' ==> ((HD (FST ((split_at x) r))) = t')) ==> (((~ g') ==> ((HD (SND ((split_at x) r))) = e')) ==> ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND g') t') e')))))
T c==> c= c= cSND csplit_at f0 f1 cNIL f2 c==> c==> f2 c= cHD cFST csplit_at f0 f1 f3 c==> c==> c~ f2 c= cHD cSND csplit_at f0 f1 f4 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND f2 f3 f4
+ |- (((!s. ((~ (s = NIL)) = ((NUMERAL _0) < (sizel s)))) ==> ((\s. ((~ (s = NIL)) = ((NUMERAL _0) < (sizel s)))) r)) = ((\s. ((~ (s = NIL)) = ((NUMERAL _0) < (sizel s)))) r))
T c= c==> ! c= c~ c= b0 cNIL c< cNUMERAL c_0 csizel b0 * / c= c~ c= b0 cNIL c< cNUMERAL c_0 csizel b0 f0 * / c= c~ c= b0 cNIL c< cNUMERAL c_0 csizel b0 f0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) d)
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (!x. (((real_mul x) (real_of_int _10302742)) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((FST ((split_at x) r)) = NIL)), ((~ ((sizel (FST ((split_at x) r))) = (NUMERAL _0))) /\ (((NUMERAL _0) + (NUMERAL (BIT1 _0))) = (SUC (NUMERAL _0)))), ((MEM x) r) |- (((~ ((sizel (FST ((split_at x) r))) = (NUMERAL _0))) /\ (((NUMERAL _0) + (NUMERAL (BIT1 _0))) = (SUC (NUMERAL _0)))) /\ (((headl x) r) = (((COND ((NUMERAL _0) = (sizel (FST ((split_at x) r))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c==> c/\ c~ c= csizel cFST csplit_at f0 f1 cNUMERAL c_0 c= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0 c==> cMEM f0 f1 c/\ c/\ c~ c= csizel cFST csplit_at f0 f1 cNUMERAL c_0 c= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 csizel cFST csplit_at f0 f1 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (NIL = r) |- (r = NIL)
T c==> c= cNIL f0 c= f0 cNIL
+ |- ((~ F) ==> ((HD (SND ((split_at x) r))) = (HD (SND ((split_at x) r)))))
T c==> c~ cF c= cHD cSND csplit_at f0 f1 cHD cSND csplit_at f0 f1
+ (~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)) |- ((((NUMERAL _0) < (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = ((headl x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) = (((~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)) = ((NUMERAL _0) < (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = ((headl x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))))
T c==> c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c= c==> c< cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c==> c= c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c< cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1
+ |- (((!s. (((next_el s) x) = (((COND (((indexl x) s) = ((sizel s) - (NUMERAL (BIT1 _0))))) ((headl x) s)) (((nth x) s) (((indexl x) s) + (NUMERAL (BIT1 _0))))))) ==> ((\s. (((next_el s) x) = (((COND (((indexl x) s) = ((sizel s) - (NUMERAL (BIT1 _0))))) ((headl x) s)) (((nth x) s) (((indexl x) s) + (NUMERAL (BIT1 _0))))))) s)) = ((\s. (((next_el s) x) = (((COND (((indexl x) s) = ((sizel s) - (NUMERAL (BIT1 _0))))) ((headl x) s)) (((nth x) s) (((indexl x) s) + (NUMERAL (BIT1 _0))))))) s))
T c= c==> ! c= cnext_el b0 f0 cCOND c= cindexl f0 b0 c- csizel b0 cNUMERAL cBIT1 c_0 cheadl f0 b0 cnth f0 b0 c+ cindexl f0 b0 cNUMERAL cBIT1 c_0 * / c= cnext_el b0 f0 cCOND c= cindexl f0 b0 c- csizel b0 cNUMERAL cBIT1 c_0 cheadl f0 b0 cnth f0 b0 c+ cindexl f0 b0 cNUMERAL cBIT1 c_0 f1 * / c= cnext_el b0 f0 cCOND c= cindexl f0 b0 c- csizel b0 cNUMERAL cBIT1 c_0 cheadl f0 b0 cnth f0 b0 c+ cindexl f0 b0 cNUMERAL cBIT1 c_0 f1
+ |- (((((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((rotate_to r) x)) = t')) ==> (((~ g') ==> ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0))))) ((headl x) ((rotate_to r) x))) (((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))
T c==> c= c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 crotate_to f1 f0 f3 c==> c==> c~ f2 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 f4 c= cCOND c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 cheadl f0 crotate_to f1 f0 cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cCOND f2 f3 f4
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((next_el ((CONS h) NIL)) h) = h)
T c= cnext_el cCONS f0 cNIL f0 f0
+ |- ((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) ==> (((headl x) ((rotate_to r) x)) = ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))))
T c==> c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cheadl f0 crotate_to f1 f0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1
+ |- ((\r1. (!r. ((((MEM r1) r) /\ (uniq r)) ==> ((((indexl r1) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = ((SND ((split_at r1) r)) = NIL))))) x)
T * / ! c==> c/\ cMEM b0 b1 cuniq b1 c= c= cindexl b0 b1 c- csizel b1 cNUMERAL cBIT1 c_0 c= cSND csplit_at b0 b1 cNIL f0
+ |- (((!e'. (((((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((rotate_to r) x)) = t')) ==> (((~ g') ==> ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0))))) ((headl x) ((rotate_to r) x))) (((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) ==> ((\e'. (((((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((rotate_to r) x)) = t')) ==> (((~ g') ==> ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0))))) ((headl x) ((rotate_to r) x))) (((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) e')) = ((\e'. (((((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((rotate_to r) x)) = t')) ==> (((~ g') ==> ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0))))) ((headl x) ((rotate_to r) x))) (((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 crotate_to f1 f0 f3 c==> c==> c~ f2 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 b0 c= cCOND c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 cheadl f0 crotate_to f1 f0 cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cCOND f2 f3 b0 * / c==> c= c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 crotate_to f1 f0 f3 c==> c==> c~ f2 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 b0 c= cCOND c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 cheadl f0 crotate_to f1 f0 cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cCOND f2 f3 b0 f4 * / c==> c= c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 crotate_to f1 f0 f3 c==> c==> c~ f2 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 b0 c= cCOND c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 cheadl f0 crotate_to f1 f0 cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cCOND f2 f3 b0 f4
+ (~ ((FST ((split_at x) r)) = NIL)) |- (((FST ((split_at x) r)) = NIL) = F)
T c==> c~ c= cFST csplit_at f0 f1 cNIL c= c= cFST csplit_at f0 f1 cNIL cF
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0
- |- ((((nth x0) ((CONS h) t)) (NUMERAL _0)) = h)
T c= cnth f0 cCONS f1 f2 cNUMERAL c_0 f1
+ |- ((\t'. (!e'. (((((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((rotate_to r) x)) = t')) ==> (((~ g') ==> ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0))))) ((headl x) ((rotate_to r) x))) (((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 crotate_to f1 f0 b0 c==> c==> c~ f2 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 b1 c= cCOND c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 cheadl f0 crotate_to f1 f0 cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 f3
+ (~ ((FST ((split_at x) r)) = NIL)), ((NUMERAL _0) < (sizel r)), ((NUMERAL _0) < (sizel (FST ((split_at x) r)))) |- (((NUMERAL _0) < (sizel r)) /\ (((headl x) r) = ((headl x) (FST ((split_at x) r)))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c==> c< cNUMERAL c_0 csizel f1 c==> c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 c/\ c< cNUMERAL c_0 csizel f1 c= cheadl f0 f1 cheadl f0 cFST csplit_at f0 f1
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- ((\t. (!n. (((((nth x0) NIL) n) = x0) /\ (((((nth x0) ((CONS h) t)) (NUMERAL _0)) = h) /\ ((((nth x0) ((CONS h) t)) (SUC n)) = (((nth x0) t) n)))))) t)
T * / ! c/\ c= cnth f0 cNIL b1 f0 c/\ c= cnth f0 cCONS f1 b0 cNUMERAL c_0 f1 c= cnth f0 cCONS f1 b0 cSUC b1 cnth f0 b0 b1 f2
- (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) |- (((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))) = ((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))))
T c==> c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1
+ |- ((\x. (!s. (((indexl x) ((CONS x) s)) = (NUMERAL _0)))) x)
T * / ! c= cindexl b0 cCONS b0 b1 cNUMERAL c_0 f0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))) = (NUMERAL _0))) |- (((~ ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ==> (((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = F)) = (((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = F))
T c==> c~ c= csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL c_0 c= c==> c~ c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c= c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cF c= c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cF
+ |- ((\n. (((((nth x0) NIL) n) = x0) /\ (((((nth x0) ((CONS h) t)) (NUMERAL _0)) = h) /\ ((((nth x0) ((CONS h) t)) (SUC n)) = (((nth x0) t) n))))) n)
T * / c/\ c= cnth f0 cNIL b0 f0 c/\ c= cnth f0 cCONS f1 f2 cNUMERAL c_0 f1 c= cnth f0 cCONS f1 f2 cSUC b0 cnth f0 f2 b0 f3
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!t'. (!e'. (((((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((rotate_to r) x)) = t')) ==> (((~ g') ==> ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0))))) ((headl x) ((rotate_to r) x))) (((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((rotate_to r) x)) = t')) ==> (((~ g') ==> ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0))))) ((headl x) ((rotate_to r) x))) (((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) ((rotate_to r) x)) = t')) ==> (((~ g') ==> ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0))))) ((headl x) ((rotate_to r) x))) (((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 crotate_to f1 f0 b0 c==> c==> c~ f2 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 b1 c= cCOND c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 cheadl f0 crotate_to f1 f0 cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 * / ! c==> c= c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 crotate_to f1 f0 b0 c==> c==> c~ f2 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 b1 c= cCOND c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 cheadl f0 crotate_to f1 f0 cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 f3 * / ! c==> c= c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 crotate_to f1 f0 b0 c==> c==> c~ f2 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 b1 c= cCOND c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 cheadl f0 crotate_to f1 f0 cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\r. ((((MEM x) r) /\ (uniq r)) ==> ((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = ((SND ((split_at x) r)) = NIL)))) r)
T * / c==> c/\ cMEM f0 b0 cuniq b0 c= c= cindexl f0 b0 c- csizel b0 cNUMERAL cBIT1 c_0 c= cSND csplit_at f0 b0 cNIL f1
- |- ((\g'. (!t'. (!e'. (((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) r) = t')) ==> (((~ g') ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= cheadl f0 f1 b1 c==> c==> c~ b0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 b2 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f2
- ((NUMERAL _0) < (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) |- (((NUMERAL _0) < (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = T)
T c==> c< cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c= c< cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cT
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_of_int _10302737) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10302737)) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((\x0. (!s. (((NUMERAL _0) < (sizel s)) ==> (((headl x0) s) = (HD s))))) x0)
T * / ! c==> c< cNUMERAL c_0 csizel b1 c= cheadl b0 b1 cHD b1 f0
- |- ((\e'. (((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) r) = t')) ==> (((~ g') ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 f1 f3 c==> c==> c~ f2 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 b0 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND f2 f3 b0 f4
- (~ (!A. (A \/ (~ A)))) |- ((~ (!A. (A \/ (~ A)))) /\ F)
T c==> c~ ! c\/ b0 c~ b0 c/\ c~ ! c\/ b0 c~ b0 cF
- |- ((real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\r. ((((MEM x) r) /\ ((uniq r) /\ ((SND ((split_at x) r)) = NIL))) ==> (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))))) r)
T * / c==> c/\ cMEM f0 b0 c/\ cuniq b0 c= cSND csplit_at f0 b0 cNIL c= cindexl f0 b0 c- csizel b0 cNUMERAL cBIT1 c_0 f1
- F |- (F = T)
T c==> cF c= cF cT
+ |- (((!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ==> ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) d)) = ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) d))
T c= c==> ! cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
+ |- (((!l. (((APPEND NIL) l) = l)) ==> ((\l. (((APPEND NIL) l) = l)) l)) = ((\l. (((APPEND NIL) l) = l)) l))
T c= c==> ! c= cAPPEND cNIL b0 b0 * / c= cAPPEND cNIL b0 b0 f0 * / c= cAPPEND cNIL b0 b0 f0
+ (~ ((FST ((split_at x) r)) = NIL)) |- ((((~ ((sizel (FST ((split_at x) r))) = (NUMERAL _0))) /\ (((NUMERAL _0) + (NUMERAL (BIT1 _0))) = (SUC (NUMERAL _0)))) ==> (((headl x) r) = (((COND ((NUMERAL _0) = (sizel (FST ((split_at x) r))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))) = (((~ ((FST ((split_at x) r)) = NIL)) = ((NUMERAL _0) < (sizel (FST ((split_at x) r))))) ==> (((headl x) r) = (((COND ((NUMERAL _0) = (sizel (FST ((split_at x) r))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c= c==> c/\ c~ c= csizel cFST csplit_at f0 f1 cNUMERAL c_0 c= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 csizel cFST csplit_at f0 f1 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c= c~ c= cFST csplit_at f0 f1 cNIL c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 csizel cFST csplit_at f0 f1 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((\x. (((real_mul x) ((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742)))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!n. (((((nth x0) NIL) n) = x0) /\ (((((nth x0) ((CONS h) t)) (NUMERAL _0)) = h) /\ ((((nth x0) ((CONS h) t)) (SUC n)) = (((nth x0) t) n))))) ==> ((\n. (((((nth x0) NIL) n) = x0) /\ (((((nth x0) ((CONS h) t)) (NUMERAL _0)) = h) /\ ((((nth x0) ((CONS h) t)) (SUC n)) = (((nth x0) t) n))))) n)) = ((\n. (((((nth x0) NIL) n) = x0) /\ (((((nth x0) ((CONS h) t)) (NUMERAL _0)) = h) /\ ((((nth x0) ((CONS h) t)) (SUC n)) = (((nth x0) t) n))))) n))
T c= c==> ! c/\ c= cnth f0 cNIL b0 f0 c/\ c= cnth f0 cCONS f1 f2 cNUMERAL c_0 f1 c= cnth f0 cCONS f1 f2 cSUC b0 cnth f0 f2 b0 * / c/\ c= cnth f0 cNIL b0 f0 c/\ c= cnth f0 cCONS f1 f2 cNUMERAL c_0 f1 c= cnth f0 cCONS f1 f2 cSUC b0 cnth f0 f2 b0 f3 * / c/\ c= cnth f0 cNIL b0 f0 c/\ c= cnth f0 cCONS f1 f2 cNUMERAL c_0 f1 c= cnth f0 cCONS f1 f2 cSUC b0 cnth f0 f2 b0 f3
- (NIL = ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))) |- (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)
T c==> c= cNIL cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL
- (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) /\ (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (~ (r = NIL)) |- (~ (NIL = r))
T c==> c~ c= f0 cNIL c~ c= cNIL f0
+ (uniq r), ((MEM x) r) |- (((next_el r) x) = ((next_el ((rotate_to r) x)) x))
T c==> cuniq f0 c==> cMEM f1 f0 c= cnext_el f0 f1 cnext_el crotate_to f0 f1 f1
+ ((SND ((split_at x) r)) = NIL) |- (((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND NIL) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND NIL) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND NIL) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND NIL) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND NIL) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))))) = ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))))))
T c==> c= cSND csplit_at f0 f1 cNIL c= c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cNIL cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cNIL cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cNIL cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cNIL cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cNIL cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
+ |- ((\m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l)))) m)
T * / c= cHD cAPPEND f0 b0 cCOND c= f0 cNIL cHD b0 cHD f0 f1
+ |- (((((MEM x) r) /\ (uniq r)) ==> (((next_el r) x) = ((next_el ((rotate_to r) x)) x))) = T)
T c= c==> c/\ cMEM f0 f1 cuniq f1 c= cnext_el f1 f0 cnext_el crotate_to f1 f0 f0 cT
+ |- (((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ ((SND ((split_at x) r)) = NIL), ((MEM x) r) |- ((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c= cSND csplit_at f0 f1 cNIL c==> cMEM f0 f1 c==> c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ ((FST ((split_at x) r)) = NIL), ((SND ((split_at x) r)) = NIL), ((MEM x) r) |- (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) NIL)) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) NIL))) (((nth x) ((CONS x) NIL)) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))
T c==> c= cFST csplit_at f0 f1 cNIL c==> c= cSND csplit_at f0 f1 cNIL c==> cMEM f0 f1 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cNIL cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cNIL cnth f0 cCONS f0 cNIL c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- (~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) |- ((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) = F)
T c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cF
+ (~ ((SND ((split_at x) r)) = NIL)), ((NUMERAL _0) < (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) |- (((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (HD (SND ((split_at x) r)))) = ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = ((headl x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c==> c< cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c= c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cHD cSND csplit_at f0 f1 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\s. (((NUMERAL _0) < (sizel s)) ==> (((headl x0) s) = (HD s)))) s)
T * / c==> c< cNUMERAL c_0 csizel b0 c= cheadl f0 b0 cHD b0 f1
+ (~ ((SND ((split_at x) r)) = NIL)), (~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)) |- ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = ((headl x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c==> c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1
- |- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- (((!vs. (((rotate_to vs) v) = ((CONS v) ((APPEND (SND ((split_at v) vs))) (FST ((split_at v) vs)))))) ==> ((\vs. (((rotate_to vs) v) = ((CONS v) ((APPEND (SND ((split_at v) vs))) (FST ((split_at v) vs)))))) vs)) = ((\vs. (((rotate_to vs) v) = ((CONS v) ((APPEND (SND ((split_at v) vs))) (FST ((split_at v) vs)))))) vs))
T c= c==> ! c= crotate_to b0 f0 cCONS f0 cAPPEND cSND csplit_at f0 b0 cFST csplit_at f0 b0 * / c= crotate_to b0 f0 cCONS f0 cAPPEND cSND csplit_at f0 b0 cFST csplit_at f0 b0 f1 * / c= crotate_to b0 f0 cCONS f0 cAPPEND cSND csplit_at f0 b0 cFST csplit_at f0 b0 f1
+ (~ ((SND ((split_at x) r)) = NIL)), (~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)) |- ((~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)) /\ ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((COND ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c==> c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c/\ c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- (~ ((sizel (FST ((split_at x) r))) = (NUMERAL _0))) |- (((sizel (FST ((split_at x) r))) = (NUMERAL _0)) = F)
T c==> c~ c= csizel cFST csplit_at f0 f1 cNUMERAL c_0 c= c= csizel cFST csplit_at f0 f1 cNUMERAL c_0 cF
+ |- ((\g'. (!t'. (!e'. ((((SND ((split_at x) r)) = NIL) = g') ==> ((g' ==> ((HD (FST ((split_at x) r))) = t')) ==> (((~ g') ==> ((HD (SND ((split_at x) r))) = e')) ==> ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cSND csplit_at f0 f1 cNIL b0 c==> c==> b0 c= cHD cFST csplit_at f0 f1 b1 c==> c==> c~ b0 c= cHD cSND csplit_at f0 f1 b2 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND b0 b1 b2 f2
+ |- ((\vs. (((rotate_to vs) v) = ((CONS v) ((APPEND (SND ((split_at v) vs))) (FST ((split_at v) vs)))))) vs)
T * / c= crotate_to b0 f0 cCONS f0 cAPPEND cSND csplit_at f0 b0 cFST csplit_at f0 b0 f1
- |- ((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) ==> (((headl x) r) = ((headl x) r)))
T c==> c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cheadl f0 f1 cheadl f0 f1
+ (~ ((SND ((split_at x) r)) = NIL)) |- (((~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((COND ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))) = (((((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL) = (((SND ((split_at x) r)) = NIL) /\ ((FST ((split_at x) r)) = NIL))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((COND ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c= c==> c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c= c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c/\ c= cSND csplit_at f0 f1 cNIL c= cFST csplit_at f0 f1 cNIL c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ ((FST ((split_at x) r)) = NIL)), ((MEM x) r) |- (((headl x) r) = ((headl x) (FST ((split_at x) r))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c==> cMEM f0 f1 c= cheadl f0 f1 cheadl f0 cFST csplit_at f0 f1
+ |- ((~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))))
T c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
- (~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) |- (~ (((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))) = ((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))))
T c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c~ c= c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1
- |- ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. ((sizel ((CONS x) NIL)) = (NUMERAL (BIT1 _0)))) ==> ((\x. ((sizel ((CONS x) NIL)) = (NUMERAL (BIT1 _0)))) x)) = ((\x. ((sizel ((CONS x) NIL)) = (NUMERAL (BIT1 _0)))) x))
T c= c==> ! c= csizel cCONS b0 cNIL cNUMERAL cBIT1 c_0 * / c= csizel cCONS b0 cNIL cNUMERAL cBIT1 c_0 f0 * / c= csizel cCONS b0 cNIL cNUMERAL cBIT1 c_0 f0
+ |- ((\v. (!vs. (((rotate_to vs) v) = ((CONS v) ((APPEND (SND ((split_at v) vs))) (FST ((split_at v) vs))))))) v)
T * / ! c= crotate_to b1 b0 cCONS b0 cAPPEND cSND csplit_at b0 b1 cFST csplit_at b0 b1 f0
+ |- (((!x0. (!s. (((NUMERAL _0) < (sizel s)) ==> (((headl x0) s) = (HD s))))) ==> ((\x0. (!s. (((NUMERAL _0) < (sizel s)) ==> (((headl x0) s) = (HD s))))) x0)) = ((\x0. (!s. (((NUMERAL _0) < (sizel s)) ==> (((headl x0) s) = (HD s))))) x0))
T c= c==> ! ! c==> c< cNUMERAL c_0 csizel b1 c= cheadl b0 b1 cHD b1 * / ! c==> c< cNUMERAL c_0 csizel b1 c= cheadl b0 b1 cHD b1 f0 * / ! c==> c< cNUMERAL c_0 csizel b1 c= cheadl b0 b1 cHD b1 f0
- (~ ((SND ((split_at x) r)) = NIL)) |- (~ (NIL = (SND ((split_at x) r))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c~ c= cNIL cSND csplit_at f0 f1
+ |- (((((SND ((split_at x) r)) = NIL) \/ (~ ((SND ((split_at x) r)) = NIL))) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))))) = ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))))))
T c= c==> c\/ c= cSND csplit_at f0 f1 cNIL c~ c= cSND csplit_at f0 f1 cNIL c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
+ ((HD (SND ((split_at x) r))) = (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) |- (((HD (SND ((split_at x) r))) = (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) /\ ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (HD (SND ((split_at x) r)))))
T c==> c= cHD cSND csplit_at f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 c/\ c= cHD cSND csplit_at f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cHD cSND csplit_at f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!s. ((~ (s = NIL)) = ((NUMERAL _0) < (sizel s)))) ==> ((\s. ((~ (s = NIL)) = ((NUMERAL _0) < (sizel s)))) (FST ((split_at x) r)))) = ((\s. ((~ (s = NIL)) = ((NUMERAL _0) < (sizel s)))) (FST ((split_at x) r))))
T c= c==> ! c= c~ c= b0 cNIL c< cNUMERAL c_0 csizel b0 * / c= c~ c= b0 cNIL c< cNUMERAL c_0 csizel b0 cFST csplit_at f0 f1 * / c= c~ c= b0 cNIL c< cNUMERAL c_0 csizel b0 cFST csplit_at f0 f1
- |- (((real_ge ((real_add (real_of_int _10302741)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302741)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!x0. (!s. ((((nth x0) s) (NUMERAL _0)) = ((headl x0) s)))) ==> ((\x0. (!s. ((((nth x0) s) (NUMERAL _0)) = ((headl x0) s)))) x0)) = ((\x0. (!s. ((((nth x0) s) (NUMERAL _0)) = ((headl x0) s)))) x0))
T c= c==> ! ! c= cnth b0 b1 cNUMERAL c_0 cheadl b0 b1 * / ! c= cnth b0 b1 cNUMERAL c_0 cheadl b0 b1 f0 * / ! c= cnth b0 b1 cNUMERAL c_0 cheadl b0 b1 f0
+ (~ ((SND ((split_at x) r)) = NIL)), (~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)), ((~ ((sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))) = (NUMERAL _0))) /\ (((NUMERAL _0) + (NUMERAL (BIT1 _0))) = (SUC (NUMERAL _0)))) |- (((~ ((sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))) = (NUMERAL _0))) /\ (((NUMERAL _0) + (NUMERAL (BIT1 _0))) = (SUC (NUMERAL _0)))) /\ ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((COND ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c==> c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c==> c/\ c~ c= csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL c_0 c= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0 c/\ c/\ c~ c= csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL c_0 c= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- (((~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) e')))
T c==> c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f2 c= cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 f2
+ ((NUMERAL _0) = (sizel (FST ((split_at x) r)))) |- ((sizel (FST ((split_at x) r))) = (NUMERAL _0))
T c==> c= cNUMERAL c_0 csizel cFST csplit_at f0 f1 c= csizel cFST csplit_at f0 f1 cNUMERAL c_0
+ (~ ((SND ((split_at x) r)) = NIL)), (~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)) |- (((~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)) = ((NUMERAL _0) < (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((COND ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c==> c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c==> c= c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c< cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- (((int_le (int_of_num (NUMERAL _0))) (int_of_num d)) ==> (((~ (((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add (int_of_num d)) (int_of_num (NUMERAL (BIT1 _0)))))) /\ ((~ ((int_lt ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) \/ (~ ((int_of_num d) = (int_of_num (NUMERAL _0)))))) \/ ((int_of_num d) = (int_of_num a))))
T c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c/\ c~ c= cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c\/ c~ cint_lt cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c~ c= cint_of_num f0 cint_of_num cNUMERAL c_0 c= cint_of_num f0 cint_of_num f1
- (~ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) |- (~ (((sizel r) - (NUMERAL (BIT1 _0))) = ((indexl x) r)))
T c==> c~ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c~ c= c- csizel f1 cNUMERAL cBIT1 c_0 cindexl f0 f1
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302741)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302741)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302741)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) |- ((sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))) = (NUMERAL _0))
T c==> c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c= csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((SND ((split_at x) r)) = NIL), ((MEM x) r) |- ((((FST ((split_at x) r)) = NIL) \/ (~ ((FST ((split_at x) r)) = NIL))) ==> (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c= cSND csplit_at f0 f1 cNIL c==> cMEM f0 f1 c==> c\/ c= cFST csplit_at f0 f1 cNIL c~ c= cFST csplit_at f0 f1 cNIL c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- ((\l. (!m. ((((APPEND l) m) = NIL) = ((l = NIL) /\ (m = NIL))))) (SND ((split_at x) r)))
T * / ! c= c= cAPPEND b0 b1 cNIL c/\ c= b0 cNIL c= b1 cNIL cSND csplit_at f0 f1
+ (uniq r), ((SND ((split_at x) r)) = NIL), ((MEM x) r) |- ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))))
T c==> cuniq f0 c==> c= cSND csplit_at f1 f0 cNIL c==> cMEM f1 f0 c= cCOND c= cindexl f1 f0 c- csizel f0 cNUMERAL cBIT1 c_0 cheadl f1 f0 cnth f1 f0 c+ cindexl f1 f0 cNUMERAL cBIT1 c_0 cCOND c= cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c- csizel cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0 cheadl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cnth f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c+ cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0
+ |- (((F ==> ((HD (FST ((split_at x) r))) = (HD (FST ((split_at x) r))))) ==> (((~ F) ==> ((HD (SND ((split_at x) r))) = e')) ==> ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND F) (HD (FST ((split_at x) r)))) e')))) = (((~ F) ==> ((HD (SND ((split_at x) r))) = e')) ==> ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND F) (HD (FST ((split_at x) r)))) e'))))
T c= c==> c==> cF c= cHD cFST csplit_at f0 f1 cHD cFST csplit_at f0 f1 c==> c==> c~ cF c= cHD cSND csplit_at f0 f1 f2 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND cF cHD cFST csplit_at f0 f1 f2 c==> c==> c~ cF c= cHD cSND csplit_at f0 f1 f2 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND cF cHD cFST csplit_at f0 f1 f2
+ (~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) |- ((~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) /\ ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))))
T c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c/\ c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
+ |- ((((~ ((FST ((split_at x) r)) = NIL)) ==> ((HD (FST ((split_at x) r))) = (HD r))) ==> ((HD r) = (HD (FST ((split_at x) r))))) = ((HD r) = (HD (FST ((split_at x) r)))))
T c= c==> c==> c~ c= cFST csplit_at f0 f1 cNIL c= cHD cFST csplit_at f0 f1 cHD f1 c= cHD f1 cHD cFST csplit_at f0 f1 c= cHD f1 cHD cFST csplit_at f0 f1
+ (uniq r), ((MEM x) r) |- (((SND ((split_at x) r)) = NIL) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))))))
T c==> cuniq f0 c==> cMEM f1 f0 c==> c= cSND csplit_at f1 f0 cNIL c= cCOND c= cindexl f1 f0 c- csizel f0 cNUMERAL cBIT1 c_0 cheadl f1 f0 cnth f1 f0 c+ cindexl f1 f0 cNUMERAL cBIT1 c_0 cCOND c= cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c- csizel cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0 cheadl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cnth f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c+ cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0
+ |- ((\s. (!x. (((MEM x) s) ==> (~ (s = NIL))))) r)
T * / ! c==> cMEM b1 b0 c~ c= b0 cNIL f0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((int_lt (int_of_num (NUMERAL _0))) (int_of_num a)) /\ (~ ((int_of_num a) = (int_of_num (NUMERAL _0))))) \/ ((~ ((int_lt (int_of_num (NUMERAL _0))) (int_of_num a))) /\ ((int_of_num a) = (int_of_num (NUMERAL _0)))))
T c\/ c/\ cint_lt cint_of_num cNUMERAL c_0 cint_of_num f0 c~ c= cint_of_num f0 cint_of_num cNUMERAL c_0 c/\ c~ cint_lt cint_of_num cNUMERAL c_0 cint_of_num f0 c= cint_of_num f0 cint_of_num cNUMERAL c_0
- |- ((\h. (!t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))))) h)
T * / ! ! c= cAPPEND cCONS b0 b1 b2 cCONS b0 cAPPEND b1 b2 f0
+ ((sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))) = (NUMERAL _0)) |- ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))
T c==> c= csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL c_0 c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1
+ (~ ((SND ((split_at x) r)) = NIL)), (uniq r), ((MEM x) r) |- ((~ ((SND ((split_at x) r)) = NIL)) /\ ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c==> cuniq f1 c==> cMEM f0 f1 c/\ c~ c= cSND csplit_at f0 f1 cNIL c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
- (((sizel r) - (NUMERAL (BIT1 _0))) = ((indexl x) r)) |- (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))
T c==> c= c- csizel f0 cNUMERAL cBIT1 c_0 cindexl f1 f0 c= cindexl f1 f0 c- csizel f0 cNUMERAL cBIT1 c_0
+ |- ((((~ ((FST ((split_at x) r)) = NIL)) = ((NUMERAL _0) < (sizel (FST ((split_at x) r))))) ==> (((headl x) r) = (((COND ((NUMERAL _0) = (sizel (FST ((split_at x) r))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))) = (((headl x) r) = (((COND ((NUMERAL _0) = (sizel (FST ((split_at x) r))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c= c==> c= c~ c= cFST csplit_at f0 f1 cNIL c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 csizel cFST csplit_at f0 f1 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 csizel cFST csplit_at f0 f1 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))) ==> ((\l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))) l)) = ((\l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))) l))
T c= c==> ! c= cAPPEND cCONS f0 f1 b0 cCONS f0 cAPPEND f1 b0 * / c= cAPPEND cCONS f0 f1 b0 cCONS f0 cAPPEND f1 b0 f2 * / c= cAPPEND cCONS f0 f1 b0 cCONS f0 cAPPEND f1 b0 f2
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((\t. ((sizel ((CONS h) t)) = (SUC (sizel t)))) t)
T * / c= csizel cCONS f0 b0 cSUC csizel b0 f1
+ (~ ((sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))) = (NUMERAL _0))), (~ ((SND ((split_at x) r)) = NIL)), (~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)), ((~ ((sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))) = (NUMERAL _0))) /\ (((NUMERAL _0) + (NUMERAL (BIT1 _0))) = (SUC (NUMERAL _0)))) |- ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((COND ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))
T c==> c~ c= csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL c_0 c==> c~ c= cSND csplit_at f0 f1 cNIL c==> c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c==> c/\ c~ c= csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL c_0 c= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((headl x) r) = (((COND ((NUMERAL _0) = (sizel (FST ((split_at x) r))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) = (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c= c= cheadl f0 f1 cCOND c= cNUMERAL c_0 csizel cFST csplit_at f0 f1 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- ((\h. (!t. (!n. (((((nth x0) NIL) n) = x0) /\ (((((nth x0) ((CONS h) t)) (NUMERAL _0)) = h) /\ ((((nth x0) ((CONS h) t)) (SUC n)) = (((nth x0) t) n))))))) h)
T * / ! ! c/\ c= cnth f0 cNIL b2 f0 c/\ c= cnth f0 cCONS b0 b1 cNUMERAL c_0 b0 c= cnth f0 cCONS b0 b1 cSUC b2 cnth f0 b1 b2 f1
- (r = ((CONS x) NIL)) |- (T = (((headl x) r) = ((headl x) ((CONS x) NIL))))
T c==> c= f0 cCONS f1 cNIL c= cT c= cheadl f1 f0 cheadl f1 cCONS f1 cNIL
+ |- (((!t'. (!e'. ((((SND ((split_at x) r)) = NIL) = g') ==> ((g' ==> ((HD (FST ((split_at x) r))) = t')) ==> (((~ g') ==> ((HD (SND ((split_at x) r))) = e')) ==> ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((SND ((split_at x) r)) = NIL) = g') ==> ((g' ==> ((HD (FST ((split_at x) r))) = t')) ==> (((~ g') ==> ((HD (SND ((split_at x) r))) = e')) ==> ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((SND ((split_at x) r)) = NIL) = g') ==> ((g' ==> ((HD (FST ((split_at x) r))) = t')) ==> (((~ g') ==> ((HD (SND ((split_at x) r))) = e')) ==> ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cSND csplit_at f0 f1 cNIL f2 c==> c==> f2 c= cHD cFST csplit_at f0 f1 b0 c==> c==> c~ f2 c= cHD cSND csplit_at f0 f1 b1 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND f2 b0 b1 * / ! c==> c= c= cSND csplit_at f0 f1 cNIL f2 c==> c==> f2 c= cHD cFST csplit_at f0 f1 b0 c==> c==> c~ f2 c= cHD cSND csplit_at f0 f1 b1 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND f2 b0 b1 f3 * / ! c==> c= c= cSND csplit_at f0 f1 cNIL f2 c==> c==> f2 c= cHD cFST csplit_at f0 f1 b0 c==> c==> c~ f2 c= cHD cSND csplit_at f0 f1 b1 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND f2 b0 b1 f3
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
- (~ (r = NIL)) |- (((~ (NIL = r)) ==> ((NIL = r) = F)) = ((NIL = r) = F))
T c==> c~ c= f0 cNIL c= c==> c~ c= cNIL f0 c= c= cNIL f0 cF c= c= cNIL f0 cF
+ ((NUMERAL _0) < (sizel (FST ((split_at x) r)))) |- (((headl x) (FST ((split_at x) r))) = (HD (FST ((split_at x) r))))
T c==> c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 c= cheadl f0 cFST csplit_at f0 f1 cHD cFST csplit_at f0 f1
+ (~ ((FST ((split_at x) r)) = NIL)), ((NUMERAL _0) < (sizel (FST ((split_at x) r)))) |- ((~ (r = NIL)) ==> (((headl x) r) = ((headl x) (FST ((split_at x) r)))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c==> c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 c==> c~ c= f1 cNIL c= cheadl f0 f1 cheadl f0 cFST csplit_at f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\t. ((~ ((FST ((split_at x) t)) = NIL)) ==> ((HD (FST ((split_at x) t))) = (HD t)))) r)
T * / c==> c~ c= cFST csplit_at f0 b0 cNIL c= cHD cFST csplit_at f0 b0 cHD b0 f1
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ (~ ((SND ((split_at x) r)) = NIL)) |- ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((COND ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) |- (((sizel r) - (NUMERAL (BIT1 _0))) = ((indexl x) r))
T c==> c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= c- csizel f1 cNUMERAL cBIT1 c_0 cindexl f0 f1
- |- ((((nth x0) NIL) n) = x0)
T c= cnth f0 cNIL f1 f0
+ |- (((!x. (!s. (((next_el s) x) = (((COND (((indexl x) s) = ((sizel s) - (NUMERAL (BIT1 _0))))) ((headl x) s)) (((nth x) s) (((indexl x) s) + (NUMERAL (BIT1 _0)))))))) ==> ((\x. (!s. (((next_el s) x) = (((COND (((indexl x) s) = ((sizel s) - (NUMERAL (BIT1 _0))))) ((headl x) s)) (((nth x) s) (((indexl x) s) + (NUMERAL (BIT1 _0)))))))) x)) = ((\x. (!s. (((next_el s) x) = (((COND (((indexl x) s) = ((sizel s) - (NUMERAL (BIT1 _0))))) ((headl x) s)) (((nth x) s) (((indexl x) s) + (NUMERAL (BIT1 _0)))))))) x))
T c= c==> ! ! c= cnext_el b1 b0 cCOND c= cindexl b0 b1 c- csizel b1 cNUMERAL cBIT1 c_0 cheadl b0 b1 cnth b0 b1 c+ cindexl b0 b1 cNUMERAL cBIT1 c_0 * / ! c= cnext_el b1 b0 cCOND c= cindexl b0 b1 c- csizel b1 cNUMERAL cBIT1 c_0 cheadl b0 b1 cnth b0 b1 c+ cindexl b0 b1 cNUMERAL cBIT1 c_0 f0 * / ! c= cnext_el b1 b0 cCOND c= cindexl b0 b1 c- csizel b1 cNUMERAL cBIT1 c_0 cheadl b0 b1 cnth b0 b1 c+ cindexl b0 b1 cNUMERAL cBIT1 c_0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((HD (SND ((split_at x) r))) = (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) |- (T = ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (HD (SND ((split_at x) r)))))
T c==> c= cHD cSND csplit_at f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 c= cT c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cHD cSND csplit_at f0 f1
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_of_int _10302737) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (!x. (((real_mul x) (real_of_int _10302737)) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0
- ((~ (!A. (A \/ (~ A)))) ==> F), (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302741)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((x = (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
- |- (F = (~ T))
T c= cF c~ cT
+ (((MEM x) r) /\ (uniq r)) |- ((((MEM x) r) /\ (uniq r)) /\ (((next_el r) x) = ((next_el ((rotate_to r) x)) x)))
T c==> c/\ cMEM f0 f1 cuniq f1 c/\ c/\ cMEM f0 f1 cuniq f1 c= cnext_el f1 f0 cnext_el crotate_to f1 f0 f0
+ (~ ((FST ((split_at x) r)) = NIL)), ((NUMERAL _0) < (sizel r)), ((NUMERAL _0) < (sizel (FST ((split_at x) r)))) |- (((headl x) r) = ((headl x) (FST ((split_at x) r))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c==> c< cNUMERAL c_0 csizel f1 c==> c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 c= cheadl f0 f1 cheadl f0 cFST csplit_at f0 f1
+ (~ (r = NIL)), (~ ((FST ((split_at x) r)) = NIL)), ((NUMERAL _0) < (sizel (FST ((split_at x) r)))) |- ((~ (r = NIL)) /\ (((headl x) r) = ((headl x) (FST ((split_at x) r)))))
T c==> c~ c= f0 cNIL c==> c~ c= cFST csplit_at f1 f0 cNIL c==> c< cNUMERAL c_0 csizel cFST csplit_at f1 f0 c/\ c~ c= f0 cNIL c= cheadl f1 f0 cheadl f1 cFST csplit_at f1 f0
+ (~ ((FST ((split_at x) r)) = NIL)), ((MEM x) r) |- ((~ ((FST ((split_at x) r)) = NIL)) /\ (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c==> cMEM f0 f1 c/\ c~ c= cFST csplit_at f0 f1 cNIL c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- ((T \/ t) = T)
T c= c\/ cT f0 cT
- |- ((!A. (P \/ (Q A))) = (P \/ (!A. (Q A))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
+ |- (((!r1. (!r. ((((MEM r1) r) /\ ((uniq r) /\ ((SND ((split_at r1) r)) = NIL))) ==> (((indexl r1) r) = ((sizel r) - (NUMERAL (BIT1 _0))))))) ==> ((\r1. (!r. ((((MEM r1) r) /\ ((uniq r) /\ ((SND ((split_at r1) r)) = NIL))) ==> (((indexl r1) r) = ((sizel r) - (NUMERAL (BIT1 _0))))))) x)) = ((\r1. (!r. ((((MEM r1) r) /\ ((uniq r) /\ ((SND ((split_at r1) r)) = NIL))) ==> (((indexl r1) r) = ((sizel r) - (NUMERAL (BIT1 _0))))))) x))
T c= c==> ! ! c==> c/\ cMEM b0 b1 c/\ cuniq b1 c= cSND csplit_at b0 b1 cNIL c= cindexl b0 b1 c- csizel b1 cNUMERAL cBIT1 c_0 * / ! c==> c/\ cMEM b0 b1 c/\ cuniq b1 c= cSND csplit_at b0 b1 cNIL c= cindexl b0 b1 c- csizel b1 cNUMERAL cBIT1 c_0 f0 * / ! c==> c/\ cMEM b0 b1 c/\ cuniq b1 c= cSND csplit_at b0 b1 cNIL c= cindexl b0 b1 c- csizel b1 cNUMERAL cBIT1 c_0 f0
+ |- ((\r2. (!t. ((~ ((FST ((split_at r2) t)) = NIL)) ==> ((HD (FST ((split_at r2) t))) = (HD t))))) x)
T * / ! c==> c~ c= cFST csplit_at b0 b1 cNIL c= cHD cFST csplit_at b0 b1 cHD b1 f0
+ (~ ((sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))) = (NUMERAL _0))) |- (~ ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))))
T c==> c~ c= csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL c_0 c~ c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1
+ |- ((\l. (!m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l))))) l)
T * / ! c= cHD cAPPEND b0 b1 cCOND c= b0 cNIL cHD b1 cHD b0 f0
+ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) |- ((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) /\ (((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))))
T c==> c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c/\ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1
+ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))), ((SND ((split_at x) r)) = NIL), ((MEM x) r) |- ((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) /\ ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c==> c= cSND csplit_at f0 f1 cNIL c==> cMEM f0 f1 c/\ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- (((real_le (real_of_num m)) (real_neg (real_of_num n))) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))
T c= creal_le creal_of_num f0 creal_neg creal_of_num f1 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (~ ((SND ((split_at x) r)) = NIL)), (uniq r), ((MEM x) r) |- (((~ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))))) = (((((MEM x) r) /\ (uniq r)) ==> ((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = ((SND ((split_at x) r)) = NIL))) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c==> cuniq f1 c==> cMEM f0 f1 c= c==> c~ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c==> c==> c/\ cMEM f0 f1 cuniq f1 c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cSND csplit_at f0 f1 cNIL c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((((real_of_int _10302742) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) (real_of_int _10302742)) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) (real_of_int _10302742)) = (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c= creal_of_int f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_of_int f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (~ ((FST ((split_at x) r)) = NIL)), ((NUMERAL _0) < (sizel (FST ((split_at x) r)))), ((MEM x) r) |- ((((MEM x) r) ==> (~ (r = NIL))) ==> (((headl x) r) = ((headl x) (FST ((split_at x) r)))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c==> c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 c==> cMEM f0 f1 c==> c==> cMEM f0 f1 c~ c= f1 cNIL c= cheadl f0 f1 cheadl f0 cFST csplit_at f0 f1
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) ==> (((NUMERAL (BIT1 _0)) - (NUMERAL (BIT1 _0))) = (NUMERAL _0))) = (((NUMERAL (BIT1 _0)) - (NUMERAL (BIT1 _0))) = (NUMERAL _0)))
T c= c==> c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c= c- cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL c_0 c= c- cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
+ |- ((F /\ t) = F)
T c= c/\ cF f0 cF
+ (~ ((FST ((split_at x) r)) = NIL)) |- ((((NUMERAL _0) < (sizel (FST ((split_at x) r)))) ==> (((headl x) r) = ((headl x) (FST ((split_at x) r))))) = (((~ ((FST ((split_at x) r)) = NIL)) = ((NUMERAL _0) < (sizel (FST ((split_at x) r))))) ==> (((headl x) r) = ((headl x) (FST ((split_at x) r))))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c= c==> c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 c= cheadl f0 f1 cheadl f0 cFST csplit_at f0 f1 c==> c= c~ c= cFST csplit_at f0 f1 cNIL c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 c= cheadl f0 f1 cheadl f0 cFST csplit_at f0 f1
+ (~ ((FST ((split_at x) r)) = NIL)), ((NUMERAL _0) < (sizel (FST ((split_at x) r)))), ((MEM x) r) |- (((headl x) r) = ((headl x) (FST ((split_at x) r))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c==> c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 c==> cMEM f0 f1 c= cheadl f0 f1 cheadl f0 cFST csplit_at f0 f1
+ (~ ((FST ((split_at x) r)) = NIL)), ((NUMERAL _0) < (sizel (FST ((split_at x) r)))) |- (((NUMERAL _0) < (sizel r)) ==> (((headl x) r) = ((headl x) (FST ((split_at x) r)))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c==> c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 c==> c< cNUMERAL c_0 csizel f1 c= cheadl f0 f1 cheadl f0 cFST csplit_at f0 f1
- |- (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l)))
T c= cAPPEND cCONS f0 f1 f2 cCONS f0 cAPPEND f1 f2
+ |- ((\A. (A \/ (~ A))) ((FST ((split_at x) r)) = NIL))
T * / c\/ b0 c~ b0 c= cFST csplit_at f0 f1 cNIL
+ |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((!x. (((real_mul x) (real_of_int _10302742)) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) (real_of_int _10302742)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) (real_of_int _10302742)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_of_int f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ (~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)) |- ((((~ ((sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))) = (NUMERAL _0))) /\ (((NUMERAL _0) + (NUMERAL (BIT1 _0))) = (SUC (NUMERAL _0)))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((COND ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))) = (((~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)) = ((NUMERAL _0) < (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((COND ((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))))
T c==> c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c= c==> c/\ c~ c= csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL c_0 c= c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c= c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c< cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- ((((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) ==> (((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))))) ==> (((~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) e')))) = (((~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) e'))))
T c= c==> c==> c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c==> c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f2 c= cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 f2 c==> c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f2 c= cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 f2
+ |- ((((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) = (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ==> (((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) ==> (((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = t')) ==> (((~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) t') e'))))) = (((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) ==> (((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = t')) ==> (((~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) t') e')))))
T c= c==> c= c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c==> c==> c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 f2 c==> c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f3 c= cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f2 f3 c==> c==> c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 f2 c==> c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f3 c= cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f2 f3
- |- (((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F))) = (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c= c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
+ (~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)) |- ((((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL) = F)
T c==> c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c= c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL cF
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!s. (!x. (((MEM x) s) ==> (~ (s = NIL))))) ==> ((\s. (!x. (((MEM x) s) ==> (~ (s = NIL))))) r)) = ((\s. (!x. (((MEM x) s) ==> (~ (s = NIL))))) r))
T c= c==> ! ! c==> cMEM b1 b0 c~ c= b0 cNIL * / ! c==> cMEM b1 b0 c~ c= b0 cNIL f0 * / ! c==> cMEM b1 b0 c~ c= b0 cNIL f0
+ |- (((!x. (((MEM x) r) ==> (~ (r = NIL)))) ==> ((\x. (((MEM x) r) ==> (~ (r = NIL)))) x)) = ((\x. (((MEM x) r) ==> (~ (r = NIL)))) x))
T c= c==> ! c==> cMEM b0 f0 c~ c= f0 cNIL * / c==> cMEM b0 f0 c~ c= f0 cNIL f1 * / c==> cMEM b0 f0 c~ c= f0 cNIL f1
- |- (((!e'. (((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) r) = t')) ==> (((~ g') ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) ==> ((\e'. (((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) r) = t')) ==> (((~ g') ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) e')) = ((\e'. (((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) r) = t')) ==> (((~ g') ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 f1 f3 c==> c==> c~ f2 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 b0 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND f2 f3 b0 * / c==> c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 f1 f3 c==> c==> c~ f2 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 b0 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND f2 f3 b0 f4 * / c==> c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 f1 f3 c==> c==> c~ f2 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 b0 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND f2 f3 b0 f4
+ (~ ((SND ((split_at x) r)) = NIL)) |- ((~ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c==> c~ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
+ |- (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 cF
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_of_int _10302737) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((((real_of_int _10302737) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) (real_of_int _10302737)) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) (real_of_int _10302737)) = (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c= creal_of_int f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ (uniq r), ((MEM x) r) |- ((((SND ((split_at x) r)) = NIL) \/ (~ ((SND ((split_at x) r)) = NIL))) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))))))
T c==> cuniq f0 c==> cMEM f1 f0 c==> c\/ c= cSND csplit_at f1 f0 cNIL c~ c= cSND csplit_at f1 f0 cNIL c= cCOND c= cindexl f1 f0 c- csizel f0 cNUMERAL cBIT1 c_0 cheadl f1 f0 cnth f1 f0 c+ cindexl f1 f0 cNUMERAL cBIT1 c_0 cCOND c= cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c- csizel cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0 cheadl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cnth f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c+ cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ (!A. (A \/ (~ A)))) ==> F) |- (((~ (!A. (A \/ (~ A)))) ==> F) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((~ T) = F)
T c= c~ cT cF
+ |- ((\s. ((~ (s = NIL)) = ((NUMERAL _0) < (sizel s)))) (FST ((split_at x) r)))
T * / c= c~ c= b0 cNIL c< cNUMERAL c_0 csizel b0 cFST csplit_at f0 f1
- (~ F) |- (F = F)
T c==> c~ cF c= cF cF
- |- ((\h. (((next_el ((CONS h) NIL)) h) = h)) h)
T * / c= cnext_el cCONS b0 cNIL b0 b0 f0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_of_int _10302737) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((!d. (((~ (((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))) = ((int_add (int_of_num d)) (int_of_num (NUMERAL (BIT1 _0)))))) /\ ((~ ((int_lt ((int_add (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num (NUMERAL (BIT1 _0))))) \/ (~ ((int_of_num d) = (int_of_num (NUMERAL _0)))))) \/ ((int_of_num d) = (int_of_num a)))) = (((SUC a) - (NUMERAL (BIT1 _0))) = a))
T c= ! c\/ c/\ c~ c= cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num b0 cint_of_num cNUMERAL cBIT1 c_0 c\/ c~ cint_lt cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cNUMERAL cBIT1 c_0 c~ c= cint_of_num b0 cint_of_num cNUMERAL c_0 c= cint_of_num b0 cint_of_num f0 c= c- cSUC f0 cNUMERAL cBIT1 c_0 f0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((FST ((split_at x) r)) = NIL)), ((NUMERAL _0) < (sizel (FST ((split_at x) r)))), ((MEM x) r) |- (((NUMERAL _0) < (sizel (FST ((split_at x) r)))) /\ (((headl x) r) = ((headl x) (FST ((split_at x) r)))))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c==> c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 c==> cMEM f0 f1 c/\ c< cNUMERAL c_0 csizel cFST csplit_at f0 f1 c= cheadl f0 f1 cheadl f0 cFST csplit_at f0 f1
- |- (((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) ==> (((headl x) r) = t')) ==> (((~ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) t') e'))))
T c==> c==> c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cheadl f0 f1 f2 c==> c==> c~ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 f3 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 f2 f3
+ (~ ((SND ((split_at x) r)) = NIL)) |- ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (HD (SND ((split_at x) r))))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cHD cSND csplit_at f0 f1
+ |- (((!e'. ((((SND ((split_at x) r)) = NIL) = g') ==> ((g' ==> ((HD (FST ((split_at x) r))) = t')) ==> (((~ g') ==> ((HD (SND ((split_at x) r))) = e')) ==> ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND g') t') e')))))) ==> ((\e'. ((((SND ((split_at x) r)) = NIL) = g') ==> ((g' ==> ((HD (FST ((split_at x) r))) = t')) ==> (((~ g') ==> ((HD (SND ((split_at x) r))) = e')) ==> ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND g') t') e')))))) e')) = ((\e'. ((((SND ((split_at x) r)) = NIL) = g') ==> ((g' ==> ((HD (FST ((split_at x) r))) = t')) ==> (((~ g') ==> ((HD (SND ((split_at x) r))) = e')) ==> ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cSND csplit_at f0 f1 cNIL f2 c==> c==> f2 c= cHD cFST csplit_at f0 f1 f3 c==> c==> c~ f2 c= cHD cSND csplit_at f0 f1 b0 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND f2 f3 b0 * / c==> c= c= cSND csplit_at f0 f1 cNIL f2 c==> c==> f2 c= cHD cFST csplit_at f0 f1 f3 c==> c==> c~ f2 c= cHD cSND csplit_at f0 f1 b0 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND f2 f3 b0 f4 * / c==> c= c= cSND csplit_at f0 f1 cNIL f2 c==> c==> f2 c= cHD cFST csplit_at f0 f1 f3 c==> c==> c~ f2 c= cHD cSND csplit_at f0 f1 b0 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND f2 f3 b0 f4
+ (~ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) |- ((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = F)
T c==> c~ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cF
+ (~ (r = NIL)) |- ((r = NIL) = F)
T c==> c~ c= f0 cNIL c= c= f0 cNIL cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (uniq r), ((SND ((split_at x) r)) = NIL), ((MEM x) r) |- (((SND ((split_at x) r)) = NIL) /\ ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))))))
T c==> cuniq f0 c==> c= cSND csplit_at f1 f0 cNIL c==> cMEM f1 f0 c/\ c= cSND csplit_at f1 f0 cNIL c= cCOND c= cindexl f1 f0 c- csizel f0 cNUMERAL cBIT1 c_0 cheadl f1 f0 cnth f1 f0 c+ cindexl f1 f0 cNUMERAL cBIT1 c_0 cCOND c= cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c- csizel cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0 cheadl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cnth f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 c+ cindexl f1 cCONS f1 cAPPEND cSND csplit_at f1 f0 cFST csplit_at f1 f0 cNUMERAL cBIT1 c_0
+ |- ((!r. ((((MEM x) r) /\ (((FST ((split_at x) r)) = NIL) /\ ((SND ((split_at x) r)) = NIL))) ==> (r = ((CONS x) NIL)))) = T)
T c= ! c==> c/\ cMEM f0 b0 c/\ c= cFST csplit_at f0 b0 cNIL c= cSND csplit_at f0 b0 cNIL c= b0 cCONS f0 cNIL cT
- |- ((\t. (!l. (((APPEND ((CONS h) t)) l) = ((CONS h) ((APPEND t) l))))) t)
T * / ! c= cAPPEND cCONS f0 b0 b1 cCONS f0 cAPPEND b0 b1 f1
+ ((HD (FST ((split_at x) r))) = (HD r)) |- (T = ((HD r) = (HD (FST ((split_at x) r)))))
T c==> c= cHD cFST csplit_at f0 f1 cHD f1 c= cT c= cHD f1 cHD cFST csplit_at f0 f1
+ |- (((((FST ((split_at x) r)) = NIL) \/ (~ ((FST ((split_at x) r)) = NIL))) ==> (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))) = (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c= c==> c\/ c= cFST csplit_at f0 f1 cNIL c~ c= cFST csplit_at f0 f1 cNIL c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ (~ ((sizel (FST ((split_at x) r))) = (NUMERAL _0))) |- (((~ ((NUMERAL _0) = (sizel (FST ((split_at x) r))))) ==> (((NUMERAL _0) = (sizel (FST ((split_at x) r)))) = F)) = (((NUMERAL _0) = (sizel (FST ((split_at x) r)))) = F))
T c==> c~ c= csizel cFST csplit_at f0 f1 cNUMERAL c_0 c= c==> c~ c= cNUMERAL c_0 csizel cFST csplit_at f0 f1 c= c= cNUMERAL c_0 csizel cFST csplit_at f0 f1 cF c= c= cNUMERAL c_0 csizel cFST csplit_at f0 f1 cF
+ (~ ((SND ((split_at x) r)) = NIL)) |- (((~ F) ==> ((HD (SND ((split_at x) r))) = e')) ==> ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND F) (HD (FST ((split_at x) r)))) e')))
T c==> c~ c= cSND csplit_at f0 f1 cNIL c==> c==> c~ cF c= cHD cSND csplit_at f0 f1 f2 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND cF cHD cFST csplit_at f0 f1 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ ((sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))) = (NUMERAL _0))) |- (((NUMERAL _0) = (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = F)
T c==> c~ c= csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL c_0 c= c= cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cF
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- ((((((MEM x) r) /\ (uniq r)) ==> ((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = ((SND ((split_at x) r)) = NIL))) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0))))))) = ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) (((nth x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) + (NUMERAL (BIT1 _0)))))))
T c= c==> c==> c/\ cMEM f0 f1 cuniq f1 c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cSND csplit_at f0 f1 cNIL c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cnth f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c+ cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
- |- ((F \/ t) = t)
T c= c\/ cF f0 f0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10302737))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)) = ((NUMERAL _0) < (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))))
T c= c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c< cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (!m. ((((APPEND (SND ((split_at x) r))) m) = NIL) = (((SND ((split_at x) r)) = NIL) /\ (m = NIL))))
T c= c= cAPPEND cSND csplit_at f0 f1 f2 cNIL c/\ c= cSND csplit_at f0 f1 cNIL c= f2 cNIL
+ ((FST ((split_at x) r)) = NIL) |- ((((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) NIL)) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) NIL))) (((nth x) ((CONS x) NIL)) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) = (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c= cFST csplit_at f0 f1 cNIL c= c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cNIL cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cNIL cnth f0 cCONS f0 cNIL c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- ((((~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)) = ((NUMERAL _0) < (sizel ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = ((headl x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) = ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = ((headl x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))))
T c= c==> c= c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c< cNUMERAL c_0 csizel cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((NUMERAL _0) < (sizel s)) |- (((NUMERAL _0) < (sizel s)) /\ (((headl x0) s) = (HD s)))
T c==> c< cNUMERAL c_0 csizel f0 c/\ c< cNUMERAL c_0 csizel f0 c= cheadl f1 f0 cHD f0
+ |- ((\s. ((~ (s = NIL)) = ((NUMERAL _0) < (sizel s)))) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))
T * / c= c~ c= b0 cNIL c< cNUMERAL c_0 csizel b0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!l. (!m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l))))) ==> ((\l. (!m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l))))) l)) = ((\l. (!m. ((HD ((APPEND l) m)) = (((COND (l = NIL)) (HD m)) (HD l))))) l))
T c= c==> ! ! c= cHD cAPPEND b0 b1 cCOND c= b0 cNIL cHD b1 cHD b0 * / ! c= cHD cAPPEND b0 b1 cCOND c= b0 cNIL cHD b1 cHD b0 f0 * / ! c= cHD cAPPEND b0 b1 cCOND c= b0 cNIL cHD b1 cHD b0 f0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = ((((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_of_int _10302737) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((!x. (((real_mul x) (real_of_int _10302737)) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) (real_of_int _10302737)) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) (real_of_int _10302737)) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))), ((SND ((split_at x) r)) = NIL), ((MEM x) r) |- ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))
T c==> c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c==> c= cSND csplit_at f0 f1 cNIL c==> cMEM f0 f1 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- (((((MEM x) r) ==> (~ (r = NIL))) ==> (((headl x) r) = ((headl x) (FST ((split_at x) r))))) = (((headl x) r) = ((headl x) (FST ((split_at x) r)))))
T c= c==> c==> cMEM f0 f1 c~ c= f1 cNIL c= cheadl f0 f1 cheadl f0 cFST csplit_at f0 f1 c= cheadl f0 f1 cheadl f0 cFST csplit_at f0 f1
+ ((SND ((split_at x) r)) = NIL), ((MEM x) r) |- (((FST ((split_at x) r)) = NIL) ==> (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c= cSND csplit_at f0 f1 cNIL c==> cMEM f0 f1 c==> c= cFST csplit_at f0 f1 cNIL c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\x0. (!h. (!t. (!n. (((((nth x0) NIL) n) = x0) /\ (((((nth x0) ((CONS h) t)) (NUMERAL _0)) = h) /\ ((((nth x0) ((CONS h) t)) (SUC n)) = (((nth x0) t) n)))))))) x0)
T * / ! ! ! c/\ c= cnth b0 cNIL b3 b0 c/\ c= cnth b0 cCONS b1 b2 cNUMERAL c_0 b1 c= cnth b0 cCONS b1 b2 cSUC b3 cnth b0 b2 b3 f0
+ |- ((~ F) = T)
T c= c~ cF cT
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((APPEND NIL) l) = l)
T c= cAPPEND cNIL f0 f0
+ |- ((((((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0)))) = (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ==> (((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) ==> (((headl x) ((rotate_to r) x)) = t')) ==> (((~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0))))) ((headl x) ((rotate_to r) x))) (((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) t') e'))))) = (((((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0)))) ==> (((headl x) ((rotate_to r) x)) = t')) ==> (((~ (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) ((rotate_to r) x)) = ((sizel ((rotate_to r) x)) - (NUMERAL (BIT1 _0))))) ((headl x) ((rotate_to r) x))) (((nth x) ((rotate_to r) x)) (((indexl x) ((rotate_to r) x)) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))) t') e')))))
T c= c==> c= c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c==> c==> c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cheadl f0 crotate_to f1 f0 f2 c==> c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 f3 c= cCOND c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 cheadl f0 crotate_to f1 f0 cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f2 f3 c==> c==> c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cheadl f0 crotate_to f1 f0 f2 c==> c==> c~ c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 c= cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 f3 c= cCOND c= cindexl f0 crotate_to f1 f0 c- csizel crotate_to f1 f0 cNUMERAL cBIT1 c_0 cheadl f0 crotate_to f1 f0 cnth f0 crotate_to f1 f0 c+ cindexl f0 crotate_to f1 f0 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 f2 f3
- (~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)) |- (((~ (NIL = ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) ==> ((NIL = ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))) = F)) = ((NIL = ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))) = F))
T c==> c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c= c==> c~ c= cNIL cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c= c= cNIL cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cF c= c= cNIL cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cF
+ |- (((FST ((split_at x) r)) = NIL) \/ (~ ((FST ((split_at x) r)) = NIL)))
T c\/ c= cFST csplit_at f0 f1 cNIL c~ c= cFST csplit_at f0 f1 cNIL
- |- (((!h. (((next_el ((CONS h) NIL)) h) = h)) ==> ((\h. (((next_el ((CONS h) NIL)) h) = h)) h)) = ((\h. (((next_el ((CONS h) NIL)) h) = h)) h))
T c= c==> ! c= cnext_el cCONS b0 cNIL b0 b0 * / c= cnext_el cCONS b0 cNIL b0 b0 f0 * / c= cnext_el cCONS b0 cNIL b0 b0 f0
+ |- (((!g'. (!t'. (!e'. ((((SND ((split_at x) r)) = NIL) = g') ==> ((g' ==> ((HD (FST ((split_at x) r))) = t')) ==> (((~ g') ==> ((HD (SND ((split_at x) r))) = e')) ==> ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((SND ((split_at x) r)) = NIL) = g') ==> ((g' ==> ((HD (FST ((split_at x) r))) = t')) ==> (((~ g') ==> ((HD (SND ((split_at x) r))) = e')) ==> ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((SND ((split_at x) r)) = NIL) = g') ==> ((g' ==> ((HD (FST ((split_at x) r))) = t')) ==> (((~ g') ==> ((HD (SND ((split_at x) r))) = e')) ==> ((((COND ((SND ((split_at x) r)) = NIL)) (HD (FST ((split_at x) r)))) (HD (SND ((split_at x) r)))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cSND csplit_at f0 f1 cNIL b0 c==> c==> b0 c= cHD cFST csplit_at f0 f1 b1 c==> c==> c~ b0 c= cHD cSND csplit_at f0 f1 b2 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND b0 b1 b2 * / ! ! c==> c= c= cSND csplit_at f0 f1 cNIL b0 c==> c==> b0 c= cHD cFST csplit_at f0 f1 b1 c==> c==> c~ b0 c= cHD cSND csplit_at f0 f1 b2 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND b0 b1 b2 f2 * / ! ! c==> c= c= cSND csplit_at f0 f1 cNIL b0 c==> c==> b0 c= cHD cFST csplit_at f0 f1 b1 c==> c==> c~ b0 c= cHD cSND csplit_at f0 f1 b2 c= cCOND c= cSND csplit_at f0 f1 cNIL cHD cFST csplit_at f0 f1 cHD cSND csplit_at f0 f1 cCOND b0 b1 b2 f2
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((\x. (((real_mul x) (real_of_int _10302742)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_of_int _10302737) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_of_int _10302737) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL) = (((SND ((split_at x) r)) = NIL) /\ ((FST ((split_at x) r)) = NIL)))
T c= c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c/\ c= cSND csplit_at f0 f1 cNIL c= cFST csplit_at f0 f1 cNIL
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!A. (P A)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
+ ((sizel (FST ((split_at x) r))) = (NUMERAL _0)) |- ((NUMERAL _0) = (sizel (FST ((split_at x) r))))
T c==> c= csizel cFST csplit_at f0 f1 cNUMERAL c_0 c= cNUMERAL c_0 csizel cFST csplit_at f0 f1
- (~ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) |- (((~ (((sizel r) - (NUMERAL (BIT1 _0))) = ((indexl x) r))) ==> ((((sizel r) - (NUMERAL (BIT1 _0))) = ((indexl x) r)) = F)) = ((((sizel r) - (NUMERAL (BIT1 _0))) = ((indexl x) r)) = F))
T c==> c~ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= c==> c~ c= c- csizel f1 cNUMERAL cBIT1 c_0 cindexl f0 f1 c= c= c- csizel f1 cNUMERAL cBIT1 c_0 cindexl f0 f1 cF c= c= c- csizel f1 cNUMERAL cBIT1 c_0 cindexl f0 f1 cF
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((SND ((split_at x) r)) = NIL), (((FST ((split_at x) r)) = NIL) \/ (~ ((FST ((split_at x) r)) = NIL))), ((MEM x) r) |- (((headl x) r) = (((COND ((NUMERAL _0) = ((sizel ((CONS x) (FST ((split_at x) r)))) - (NUMERAL (BIT1 _0))))) ((headl x) ((CONS x) (FST ((split_at x) r))))) (((nth x) ((CONS x) (FST ((split_at x) r)))) ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))
T c==> c= cSND csplit_at f0 f1 cNIL c==> c\/ c= cFST csplit_at f0 f1 cNIL c~ c= cFST csplit_at f0 f1 cNIL c==> cMEM f0 f1 c= cheadl f0 f1 cCOND c= cNUMERAL c_0 c- csizel cCONS f0 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cheadl f0 cCONS f0 cFST csplit_at f0 f1 cnth f0 cCONS f0 cFST csplit_at f0 f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) |- ((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) /\ (((headl x) r) = ((headl x) r)))
T c==> c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c/\ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cheadl f0 f1 cheadl f0 f1
- (((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))) = ((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))) |- (((indexl x) ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) = ((sizel ((CONS x) ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))))) - (NUMERAL (BIT1 _0))))
T c==> c= c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0 cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c= cindexl f0 cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 c- csizel cCONS f0 cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNUMERAL cBIT1 c_0
- (~ ((FST ((split_at x) r)) = NIL)) |- (((~ (NIL = (FST ((split_at x) r)))) ==> ((NIL = (FST ((split_at x) r))) = F)) = ((NIL = (FST ((split_at x) r))) = F))
T c==> c~ c= cFST csplit_at f0 f1 cNIL c= c==> c~ c= cNIL cFST csplit_at f0 f1 c= c= cNIL cFST csplit_at f0 f1 cF c= c= cNIL cFST csplit_at f0 f1 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((!x. (((real_mul x) (real_of_int _10302742)) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) (real_of_int _10302742)) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) (real_of_int _10302742)) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_of_int f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (!x. (((real_mul x) (real_of_int _10302742)) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_of_int _10302737) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((FST ((split_at x) r)) = NIL) |- (NIL = (FST ((split_at x) r)))
T c==> c= cFST csplit_at f0 f1 cNIL c= cNIL cFST csplit_at f0 f1
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = ((((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742)) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _10302741))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((\x. (((real_mul x) (real_of_int _10302742)) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742)))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742)))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- ((~ (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))))
T c==> c~ c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- (NIL = (FST ((split_at x) r))) |- ((FST ((split_at x) r)) = NIL)
T c==> c= cNIL cFST csplit_at f0 f1 c= cFST csplit_at f0 f1 cNIL
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_of_int _10302737) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302737))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)) |- (~ (NIL = ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))))
T c==> c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c~ c= cNIL cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1
- (((real_ge (real_of_int _10302737)) (real_of_num (NUMERAL _0))) /\ (((real_of_int _10302737) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10302737)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((~ (!A. (A \/ (~ A)))) ==> F) = (!A. (A \/ (~ A))))
T c= c==> c~ ! c\/ b0 c~ b0 cF ! c\/ b0 c~ b0
- (~ ((SND ((split_at x) r)) = NIL)) |- ((NIL = (SND ((split_at x) r))) = F)
T c==> c~ c= cSND csplit_at f0 f1 cNIL c= c= cNIL cSND csplit_at f0 f1 cF
- ((~ (!A. (A \/ (~ A)))) ==> F) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((NUMERAL _0) < (sizel r)) |- (T = ((NUMERAL _0) < (sizel r)))
T c==> c< cNUMERAL c_0 csizel f0 c= cT c< cNUMERAL c_0 csizel f0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (NIL = (SND ((split_at x) r))) |- ((SND ((split_at x) r)) = NIL)
T c==> c= cNIL cSND csplit_at f0 f1 c= cSND csplit_at f0 f1 cNIL
- (r = NIL) |- (NIL = r)
T c==> c= f0 cNIL c= cNIL f0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))))
T c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0
- |- (~ (~ T))
T c~ c~ cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!g'. (!t'. (!e'. (((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) r) = t')) ==> (((~ g') ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) r) = t')) ==> (((~ g') ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) r) = t')) ==> (((~ g') ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= cheadl f0 f1 b1 c==> c==> c~ b0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 b2 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 * / ! ! c==> c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= cheadl f0 f1 b1 c==> c==> c~ b0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 b2 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f2 * / ! ! c==> c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= cheadl f0 f1 b1 c==> c==> c~ b0 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 b2 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f2
- (~ (((APPEND (SND ((split_at x) r))) (FST ((split_at x) r))) = NIL)) |- ((NIL = ((APPEND (SND ((split_at x) r))) (FST ((split_at x) r)))) = F)
T c==> c~ c= cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cNIL c= c= cNIL cAPPEND cSND csplit_at f0 f1 cFST csplit_at f0 f1 cF
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((((real_of_int _10302742) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) (real_of_int _10302742)) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) (real_of_int _10302742)) = (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c= creal_of_int f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_of_int f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- ((\t'. (!e'. (((((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> (((headl x) r) = t')) ==> (((~ g') ==> ((((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0)))) = e')) ==> ((((COND (((indexl x) r) = ((sizel r) - (NUMERAL (BIT1 _0))))) ((headl x) r)) (((nth x) r) (((indexl x) r) + (NUMERAL (BIT1 _0))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= cheadl f0 f1 b0 c==> c==> c~ f2 c= cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 b1 c= cCOND c= cindexl f0 f1 c- csizel f1 cNUMERAL cBIT1 c_0 cheadl f0 f1 cnth f0 f1 c+ cindexl f0 f1 cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 f3
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_of_int _10302742) = (real_of_num (NUMERAL _0)))) /\ ((real_ge ((real_add (real_of_int _10302741)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10302741)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10302742)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302741))) ((real_add (real_of_int _10302742)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((!x. (((real_mul x) ((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742)))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742)))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) ((real_add (real_of_int _10302741)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10302742)))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
