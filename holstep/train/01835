N Aq9.sizel_gt_1_eq_exists_mem
C |- (!L. (!N. (!v. ((((all uniq) L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((MEM v) (flatten ((quotient_list L) N)))))))) ==> (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2)))))))))))))
T c==> c/\ call part cuniq f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 cMEM f2 cflatten cquotient_list f0 f1 c= c> csizel cfilter * part cMEM f2 cquotient_list f0 f1 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ cMEM f2 cMAP part cFST b0 cMEM f2 cMAP part cFST b1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D MEM_MAP
A |- (!f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))))
T c= cMEM f0 cMAP f1 f2 c? / c/\ cMEM b0 f2 c= f0 * f1 b0
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_LT
A |- (!x. (!y. ((~ ((int_lt x) y)) = ((int_le y) x))))
T c= c~ cint_lt f0 f1 cint_le f1 f0
D INT_OF_NUM_GT
A |- (!m. (!n. (((int_gt (int_of_num m)) (int_of_num n)) = (m > n))))
T c= cint_gt cint_of_num f0 cint_of_num f1 c> f0 f1
D INT_OF_NUM_LT
A |- (!m. (!n. (((int_lt (int_of_num m)) (int_of_num n)) = (m < n))))
T c= cint_lt cint_of_num f0 cint_of_num f1 c< f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D INT_GT
A |- (!x. (!y. (((int_gt x) y) = ((int_lt y) x))))
T c= cint_gt f0 f1 cint_lt f1 f0
D Seq.mem_filter
A |- (!a. (!x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s))))))
T c= cMEM f0 cfilter f1 f2 c/\ * f1 f0 cMEM f0 f2
D Seq.filter_uniq
A |- (!s. (!a. ((uniq s) ==> (uniq ((filter a) s)))))
T c==> cuniq f0 cuniq cfilter f1 f0
D List_hypermap.good_list_uniq
A |- (!L. ((good_list L) ==> (uniq L)))
T c==> cgood_list f0 cuniq f0
D Tame_list.good_list_quotient
A |- (!L. (!N. ((((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((all uniq) L)))) ==> (good_list ((quotient_list L) N)))))
T c==> c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 call part cuniq f0 cgood_list cquotient_list f0 f1
D Tame_list.quotient_list_core
A |- (!L. (!N. (((quotient_list L) N) = ((MAP (core L)) N))))
T c= cquotient_list f0 f1 cMAP * part ccore f0 f1
D Tame_list.mem_core
A |- (!L. (!r. (!v. (((good_list L) /\ (((normal_list L) N) /\ ((MEM r) N))) ==> (((MEM v) ((core L) r)) = ((MEM v) ((MAP FST) r)))))))
T c==> c/\ cgood_list f0 c/\ cnormal_list f0 f1 cMEM f2 f1 c= cMEM f3 ccore f0 f2 cMEM f3 cMAP part cFST f2
D Aq8.uniq_imp_inj
A |- (!y. ((uniq ((MAP f) y)) ==> (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))))
T c==> cuniq cMAP f0 f1 ! ! c==> c/\ cMEM b0 f1 c/\ cMEM b1 f1 c= * f0 b0 * f0 b1 c= b0 b1
D Aq9.eq_sizel_gt_1
A |- ((uniq r) ==> (((NUMERAL (BIT1 _0)) < (sizel r)) = (?a. (?b. (((MEM a) r) /\ (((MEM b) r) /\ (~ (a = b))))))))
T c==> cuniq f0 c= c< cNUMERAL cBIT1 c_0 csizel f0 c? / c? / c/\ cMEM b0 f0 c/\ cMEM b1 f0 c~ c= b0 b1
+ |- (((((int_gt (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))) /\ ((int_lt (int_of_num (NUMERAL (BIT1 _0)))) (int_of_num a))) \/ ((~ ((int_gt (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) /\ (~ ((int_lt (int_of_num (NUMERAL (BIT1 _0)))) (int_of_num a))))) = ((a > (NUMERAL (BIT1 _0))) = ((NUMERAL (BIT1 _0)) < a)))
T c= c\/ c/\ cint_gt cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_lt cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f0 c/\ c~ cint_gt cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c~ cint_lt cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f0 c= c> f0 cNUMERAL cBIT1 c_0 c< cNUMERAL cBIT1 c_0 f0
+ (((all uniq) L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((MEM v) (flatten ((quotient_list L) N)))))))), ((all uniq) L) |- (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2)))))))))
T c==> c/\ call part cuniq f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 cMEM f2 cflatten cquotient_list f0 f1 c==> call part cuniq f0 c= c> csizel cfilter * part cMEM f2 cquotient_list f0 f1 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ cMEM f2 cMAP part cFST b0 cMEM f2 cMAP part cFST b1
+ (good_list L), ((MEM f2) N), ((normal_list L) N) |- (((MEM v) ((core L) f2)) ==> (?x. (((MEM x) f2) /\ (v = (FST x)))))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cMEM f3 ccore f0 f1 c? / c/\ cMEM b0 f1 c= f3 cFST b0
+ (((real_ge (real_of_int _10350512)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (uniq ((MAP (core L)) N)), (((core L) f1) = ((core L) f2)), ((MEM f1) N), ((MEM f2) N) |- ((uniq ((MAP (core L)) N)) /\ (f1 = f2))
T c==> cuniq cMAP * part ccore f0 f1 c==> c= ccore f0 f2 ccore f0 f3 c==> cMEM f2 f1 c==> cMEM f3 f1 c/\ cuniq cMAP * part ccore f0 f1 c= f2 f3
+ (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cgood_list f3 c==> c/\ cMEM f1 f4 c/\ c? / c/\ cMEM b0 f0 c= f2 cFST b0 c? / c/\ cMEM b0 f1 c= f2 cFST b0 c==> cMEM f0 f4 c==> cMEM f1 f4 c==> cnormal_list f3 f4 c? / c? / c/\ c/\ cMEM f2 b0 c? / c/\ cMEM b2 f4 c= b0 ccore f3 b2 c/\ c/\ cMEM f2 b1 c? / c/\ cMEM b2 f4 c= b1 ccore f3 b2 c~ c= b0 b1
- |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (good_list ((quotient_list L) N)) |- (((uniq ((quotient_list L) N)) ==> (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2)))))))))) = (((good_list ((quotient_list L) N)) ==> (uniq ((quotient_list L) N))) ==> (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2)))))))))))
T c==> cgood_list cquotient_list f0 f1 c= c==> cuniq cquotient_list f0 f1 c= c> csizel cfilter * part cMEM f2 cquotient_list f0 f1 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ cMEM f2 cMAP part cFST b0 cMEM f2 cMAP part cFST b1 c==> c==> cgood_list cquotient_list f0 f1 cuniq cquotient_list f0 f1 c= c> csizel cfilter * part cMEM f2 cquotient_list f0 f1 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ cMEM f2 cMAP part cFST b0 cMEM f2 cMAP part cFST b1
+ (good_list L), (a = ((core L) f1)), ((MEM v) a), ((MEM f1) N), ((normal_list L) N) |- (((MEM v) b) ==> (((MEM f2) N) ==> ((b = ((core L) f2)) ==> ((~ (a = b)) ==> (?x. (((MEM x) f1) /\ (v = (FST x))))))))
T c==> cgood_list f0 c==> c= f1 ccore f0 f2 c==> cMEM f3 f1 c==> cMEM f2 f4 c==> cnormal_list f0 f4 c==> cMEM f3 f5 c==> cMEM f6 f4 c==> c= f5 ccore f0 f6 c==> c~ c= f1 f5 c? / c/\ cMEM b0 f2 c= f3 cFST b0
+ |- (((!f. (!y. ((uniq ((MAP f) y)) ==> (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))))) ==> ((\f. (!y. ((uniq ((MAP f) y)) ==> (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))))) (core L))) = ((\f. (!y. ((uniq ((MAP f) y)) ==> (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))))) (core L)))
T c= c==> ! ! c==> cuniq cMAP b0 b1 ! ! c==> c/\ cMEM b2 b1 c/\ cMEM b3 b1 c= * b0 b2 * b0 b3 c= b2 b3 * / ! c==> cuniq cMAP b0 b1 ! ! c==> c/\ cMEM b2 b1 c/\ cMEM b3 b1 c= * b0 b2 * b0 b3 c= b2 b3 * part ccore f0 * / ! c==> cuniq cMAP b0 b1 ! ! c==> c/\ cMEM b2 b1 c/\ cMEM b3 b1 c= * b0 b2 * b0 b3 c= b2 b3 * part ccore f0
+ (x = f1), ((MEM x) N) |- ((((MEM f1) N) ==> ((a = ((core L) f1)) ==> (((MEM v) b) ==> (((MEM f2) N) ==> ((b = ((core L) f2)) ==> ((~ (a = b)) ==> (?x. (((MEM x) f1) /\ (v = (FST x)))))))))) = ((a = ((core L) f1)) ==> (((MEM v) b) ==> (((MEM f2) N) ==> ((b = ((core L) f2)) ==> ((~ (a = b)) ==> (?x. (((MEM x) f1) /\ (v = (FST x))))))))))
T c==> c= f0 f1 c==> cMEM f0 f2 c= c==> cMEM f1 f2 c==> c= f3 ccore f4 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> c= f6 ccore f4 f7 c==> c~ c= f3 f6 c? / c/\ cMEM b0 f1 c= f5 cFST b0 c==> c= f3 ccore f4 f1 c==> cMEM f5 f6 c==> cMEM f7 f2 c==> c= f6 ccore f4 f7 c==> c~ c= f3 f6 c? / c/\ cMEM b0 f1 c= f5 cFST b0
+ (!u. (!v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v)))) |- ((\v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v))) v)
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= ccore f1 b0 ccore f1 b1 c= b0 b1 * / c==> c/\ cMEM f2 f0 c/\ cMEM b0 f0 c= ccore f1 f2 ccore f1 b0 c= f2 b0 f3
+ (~ (a = b)), (a = ((core L) x)), (b = ((core L) x')), (f1 = f2), (x = f1), (x' = f2) |- F
T c==> c~ c= f0 f1 c==> c= f0 ccore f2 f3 c==> c= f1 ccore f2 f4 c==> c= f5 f6 c==> c= f3 f5 c==> c= f4 f6 cF
+ (b = ((core L) x')), (x' = f2) |- (b = ((core L) f2))
T c==> c= f0 ccore f1 f2 c==> c= f2 f3 c= f0 ccore f1 f3
+ (good_list L), ((normal_list L) N) |- ((((\b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))) b) ==> (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))))) = T)
T c==> cgood_list f0 c==> cnormal_list f0 f1 c= c==> * / c/\ c/\ cMEM f2 f3 c? / c/\ cMEM b1 f1 c= f3 ccore f0 b1 c/\ c/\ cMEM f2 b0 c? / c/\ cMEM b1 f1 c= b0 ccore f0 b1 c~ c= f3 b0 f4 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ c? / c/\ cMEM b2 b0 c= f2 cFST b2 c? / c/\ cMEM b2 b1 c= f2 cFST b2 cT
+ |- ((uniq ((MAP (core L)) N)) ==> (!u. (!v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v)))))
T c==> cuniq cMAP * part ccore f0 f1 ! ! c==> c/\ cMEM b0 f1 c/\ cMEM b1 f1 c= ccore f0 b0 ccore f0 b1 c= b0 b1
+ (uniq ((quotient_list L) N)), (good_list L), ((normal_list L) N) |- ((uniq ((quotient_list L) N)) /\ (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2))))))))))
T c==> cuniq cquotient_list f0 f1 c==> cgood_list f0 c==> cnormal_list f0 f1 c/\ cuniq cquotient_list f0 f1 c= c> csizel cfilter * part cMEM f2 cquotient_list f0 f1 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ cMEM f2 cMAP part cFST b0 cMEM f2 cMAP part cFST b1
+ (good_list L), (v = (FST x)), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- ((((good_list L) /\ (((normal_list L) N) /\ ((MEM f1) N))) ==> (((MEM v) ((core L) f1)) = ((MEM v) ((MAP FST) f1)))) ==> (?x. (((MEM x) N) /\ (((core L) f2) = ((core L) x)))))
T c==> cgood_list f0 c==> c= f1 cFST f2 c==> cMEM f3 f4 c==> cMEM f5 f4 c==> cnormal_list f0 f4 c==> c==> c/\ cgood_list f0 c/\ cnormal_list f0 f4 cMEM f3 f4 c= cMEM f1 ccore f0 f3 cMEM f1 cMAP part cFST f3 c? / c/\ cMEM b0 f4 c= ccore f0 f5 ccore f0 b0
+ (~ (a = b)), (good_list L), (a = ((core L) x)), ((MEM v) a), ((MEM v) b), ((MEM x) N), ((normal_list L) N) |- ((((\x. (((MEM x) N) /\ (b = ((core L) x)))) x') ==> (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))))) = T)
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> c= f0 ccore f2 f3 c==> cMEM f4 f0 c==> cMEM f4 f1 c==> cMEM f3 f5 c==> cnormal_list f2 f5 c= c==> * / c/\ cMEM b0 f5 c= f1 ccore f2 b0 f6 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f5 c/\ cMEM b1 f5 c/\ c? / c/\ cMEM b2 b0 c= f4 cFST b2 c? / c/\ cMEM b2 b1 c= f4 cFST b2 cT
+ |- ((uniq ((quotient_list L) N)) ==> (uniq ((filter (MEM v)) ((quotient_list L) N))))
T c==> cuniq cquotient_list f0 f1 cuniq cfilter * part cMEM f2 cquotient_list f0 f1
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ (good_list L), ((normal_list L) N) |- (((\a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))) a) ==> (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))))
T c==> cgood_list f0 c==> cnormal_list f0 f1 c==> * / c? / c/\ c/\ cMEM f2 b0 c? / c/\ cMEM b2 f1 c= b0 ccore f0 b2 c/\ c/\ cMEM f2 b1 c? / c/\ cMEM b2 f1 c= b1 ccore f0 b2 c~ c= b0 b1 f3 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ c? / c/\ cMEM b2 b0 c= f2 cFST b2 c? / c/\ cMEM b2 b1 c= f2 cFST b2
+ |- ((((MEM f2) N) /\ (((core L) f2) = ((core L) f2))) = ((\x. (((MEM x) N) /\ (((core L) f2) = ((core L) x)))) f2))
T c= c/\ cMEM f0 f1 c= ccore f2 f0 ccore f2 f0 * / c/\ cMEM b0 f1 c= ccore f2 f0 ccore f2 b0 f0
+ (~ (a = b)), (good_list L), (a = ((core L) x)), (((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))), ((MEM v) a), ((MEM v) b), ((MEM x) N), ((normal_list L) N) |- (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> c= f0 ccore f2 f3 c==> c/\ cMEM f4 f1 c? / c/\ cMEM b0 f5 c= f1 ccore f2 b0 c==> cMEM f4 f0 c==> cMEM f4 f1 c==> cMEM f3 f5 c==> cnormal_list f2 f5 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f5 c/\ cMEM b1 f5 c/\ c? / c/\ cMEM b2 b0 c= f4 cFST b2 c? / c/\ cMEM b2 b1 c= f4 cFST b2
- |- ((((good_list L) ==> (uniq L)) ==> (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2)))))))))) = (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2))))))))))
T c= c==> c==> cgood_list f0 cuniq f0 c= c> csizel cfilter * part cMEM f1 cquotient_list f0 f2 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f2 c/\ cMEM b1 f2 c/\ cMEM f1 cMAP part cFST b0 cMEM f1 cMAP part cFST b1 c= c> csizel cfilter * part cMEM f1 cquotient_list f0 f2 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f2 c/\ cMEM b1 f2 c/\ cMEM f1 cMAP part cFST b0 cMEM f1 cMAP part cFST b1
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ |- ((m < n) = ((int_lt (int_of_num m)) (int_of_num n)))
T c= c< f0 f1 cint_lt cint_of_num f0 cint_of_num f1
+ (good_list L), (a = ((core L) f1)), ((MEM v) a), ((MEM f1) N), ((normal_list L) N) |- ((b = ((core L) f2)) ==> ((~ (a = b)) ==> (?x. (((MEM x) f1) /\ (v = (FST x))))))
T c==> cgood_list f0 c==> c= f1 ccore f0 f2 c==> cMEM f3 f1 c==> cMEM f2 f4 c==> cnormal_list f0 f4 c==> c= f5 ccore f0 f6 c==> c~ c= f1 f5 c? / c/\ cMEM b0 f2 c= f3 cFST b0
+ |- (((!s. (!a. ((uniq s) ==> (uniq ((filter a) s))))) ==> ((\s. (!a. ((uniq s) ==> (uniq ((filter a) s))))) ((quotient_list L) N))) = ((\s. (!a. ((uniq s) ==> (uniq ((filter a) s))))) ((quotient_list L) N)))
T c= c==> ! ! c==> cuniq b0 cuniq cfilter b1 b0 * / ! c==> cuniq b0 cuniq cfilter b1 b0 cquotient_list f0 f1 * / ! c==> cuniq b0 cuniq cfilter b1 b0 cquotient_list f0 f1
- (((real_ge (real_of_int _10350512)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!u. (!v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v)))) |- (((!v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v))) ==> ((\v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v))) v)) = ((\v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v))) v))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= ccore f1 b0 ccore f1 b1 c= b0 b1 c= c==> ! c==> c/\ cMEM f2 f0 c/\ cMEM b0 f0 c= ccore f1 f2 ccore f1 b0 c= f2 b0 * / c==> c/\ cMEM f2 f0 c/\ cMEM b0 f0 c= ccore f1 f2 ccore f1 b0 c= f2 b0 f3 * / c==> c/\ cMEM f2 f0 c/\ cMEM b0 f0 c= ccore f1 f2 ccore f1 b0 c= f2 b0 f3
+ ((\f1. (x = f1)) f1) |- (((x = f1) ==> (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f2 c/\ cMEM b1 f2 c/\ c? / c/\ cMEM b2 b0 c= f3 cFST b2 c? / c/\ cMEM b2 b1 c= f3 cFST b2 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f2 c/\ cMEM b1 f2 c/\ c? / c/\ cMEM b2 b0 c= f3 cFST b2 c? / c/\ cMEM b2 b1 c= f3 cFST b2
+ |- ((!L. (!r. (!v. (((good_list L) /\ (((normal_list L) N) /\ ((MEM r) N))) ==> (((MEM v) ((core L) r)) = ((MEM v) ((MAP FST) r))))))) = T)
T c= ! ! ! c==> c/\ cgood_list b0 c/\ cnormal_list b0 f0 cMEM b1 f0 c= cMEM b2 ccore b0 b1 cMEM b2 cMAP part cFST b1 cT
+ |- ((m > n) = ((int_gt (int_of_num m)) (int_of_num n)))
T c= c> f0 f1 cint_gt cint_of_num f0 cint_of_num f1
+ (?x. (((MEM x) f1) /\ (v = (FST x)))), (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))))
T c==> c? / c/\ cMEM b0 f0 c= f1 cFST b0 c==> c~ c= f0 f2 c==> cuniq cfilter * part cMEM f1 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cgood_list f3 c==> c/\ c? / c/\ cMEM b0 f0 c= f1 cFST b0 c? / c/\ cMEM b0 f2 c= f1 cFST b0 c==> cMEM f0 f4 c==> cMEM f2 f4 c==> cnormal_list f3 f4 c? / c? / c/\ c/\ cMEM f1 b0 c? / c/\ cMEM b2 f4 c= b0 ccore f3 b2 c/\ c/\ cMEM f1 b1 c? / c/\ cMEM b2 f4 c= b1 ccore f3 b2 c~ c= b0 b1
+ (good_list L), (a = ((core L) x)), (b = ((core L) x')), (x = f1), (x' = f2), ((MEM v) a), ((MEM v) b), ((MEM x) N), ((MEM x') N), ((normal_list L) N) |- ((~ (a = b)) ==> (?x. (((MEM x) f1) /\ (v = (FST x)))))
T c==> cgood_list f0 c==> c= f1 ccore f0 f2 c==> c= f3 ccore f0 f4 c==> c= f2 f5 c==> c= f4 f6 c==> cMEM f7 f1 c==> cMEM f7 f3 c==> cMEM f2 f8 c==> cMEM f4 f8 c==> cnormal_list f0 f8 c==> c~ c= f1 f3 c? / c/\ cMEM b0 f5 c= f7 cFST b0
+ (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), ((normal_list L) N) |- ((?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))) ==> (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))))
T c==> cuniq cfilter * part cMEM f0 cquotient_list f1 f2 c==> cuniq cquotient_list f1 f2 c==> cgood_list f1 c==> cnormal_list f1 f2 c==> c? / c/\ c~ c= f3 b0 c/\ cMEM f3 f2 c/\ cMEM b0 f2 c/\ c? / c/\ cMEM b1 f3 c= f0 cFST b1 c? / c/\ cMEM b1 b0 c= f0 cFST b1 c? / c? / c/\ c/\ cMEM f0 b0 c? / c/\ cMEM b2 f2 c= b0 ccore f1 b2 c/\ c/\ cMEM f0 b1 c? / c/\ cMEM b2 f2 c= b1 ccore f1 b2 c~ c= b0 b1
+ |- ((((((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((all uniq) L)))) ==> (good_list ((quotient_list L) N))) ==> (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2)))))))))) = (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2))))))))))
T c= c==> c==> c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 call part cuniq f0 cgood_list cquotient_list f0 f1 c= c> csizel cfilter * part cMEM f2 cquotient_list f0 f1 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ cMEM f2 cMAP part cFST b0 cMEM f2 cMAP part cFST b1 c= c> csizel cfilter * part cMEM f2 cquotient_list f0 f1 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ cMEM f2 cMAP part cFST b0 cMEM f2 cMAP part cFST b1
+ (good_list L), (a = ((core L) f1)), ((MEM v) a), ((MEM v) b), ((MEM f1) N), ((normal_list L) N) |- (((MEM v) b) /\ (((MEM f2) N) ==> ((b = ((core L) f2)) ==> ((~ (a = b)) ==> (?x. (((MEM x) f1) /\ (v = (FST x))))))))
T c==> cgood_list f0 c==> c= f1 ccore f0 f2 c==> cMEM f3 f1 c==> cMEM f3 f4 c==> cMEM f2 f5 c==> cnormal_list f0 f5 c/\ cMEM f3 f4 c==> cMEM f6 f5 c==> c= f4 ccore f0 f6 c==> c~ c= f1 f4 c? / c/\ cMEM b0 f2 c= f3 cFST b0
+ |- (((!L. (!r. (!v. (((good_list L) /\ (((normal_list L) N) /\ ((MEM r) N))) ==> (((MEM v) ((core L) r)) = ((MEM v) ((MAP FST) r))))))) ==> ((\L. (!r. (!v. (((good_list L) /\ (((normal_list L) N) /\ ((MEM r) N))) ==> (((MEM v) ((core L) r)) = ((MEM v) ((MAP FST) r))))))) L)) = ((\L. (!r. (!v. (((good_list L) /\ (((normal_list L) N) /\ ((MEM r) N))) ==> (((MEM v) ((core L) r)) = ((MEM v) ((MAP FST) r))))))) L))
T c= c==> ! ! ! c==> c/\ cgood_list b0 c/\ cnormal_list b0 f0 cMEM b1 f0 c= cMEM b2 ccore b0 b1 cMEM b2 cMAP part cFST b1 * / ! ! c==> c/\ cgood_list b0 c/\ cnormal_list b0 f0 cMEM b1 f0 c= cMEM b2 ccore b0 b1 cMEM b2 cMAP part cFST b1 f1 * / ! ! c==> c/\ cgood_list b0 c/\ cnormal_list b0 f0 cMEM b1 f0 c= cMEM b2 ccore b0 b1 cMEM b2 cMAP part cFST b1 f1
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (is_edge_nondegenerate (hypermap_of_list L)), (good_list L), ((all uniq) L), ((normal_list L) N) |- (((good_list L) ==> (uniq L)) ==> (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2))))))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cgood_list f0 c==> call part cuniq f0 c==> cnormal_list f0 f1 c==> c==> cgood_list f0 cuniq f0 c= c> csizel cfilter * part cMEM f2 cquotient_list f0 f1 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ cMEM f2 cMAP part cFST b0 cMEM f2 cMAP part cFST b1
+ (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), ((normal_list L) N) |- ((?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))))
T c==> cuniq cfilter * part cMEM f0 cquotient_list f1 f2 c==> cuniq cquotient_list f1 f2 c==> cgood_list f1 c==> cnormal_list f1 f2 c= c? / c? / c/\ c/\ cMEM f0 b0 c? / c/\ cMEM b2 f2 c= b0 ccore f1 b2 c/\ c/\ cMEM f0 b1 c? / c/\ cMEM b2 f2 c= b1 ccore f1 b2 c~ c= b0 b1 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f2 c/\ cMEM b1 f2 c/\ c? / c/\ cMEM b2 b0 c= f0 cFST b2 c? / c/\ cMEM b2 b1 c= f0 cFST b2
- (((real_ge (real_of_int _10350512)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (good_list L), (v = (FST x)), ((MEM f1) N), ((normal_list L) N) |- (((((MEM (FST x)) ((core L) f1)) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) ==> (?x. (((MEM x) N) /\ (((core L) f2) = ((core L) x))))) = ((((good_list L) /\ (((normal_list L) N) /\ ((MEM f1) N))) ==> (((MEM v) ((core L) f1)) = ((MEM v) ((MAP FST) f1)))) ==> (?x. (((MEM x) N) /\ (((core L) f2) = ((core L) x))))))
T c==> cgood_list f0 c==> c= f1 cFST f2 c==> cMEM f3 f4 c==> cnormal_list f0 f4 c= c==> c= cMEM cFST f2 ccore f0 f3 c? / c/\ cMEM b0 f3 c= cFST f2 cFST b0 c? / c/\ cMEM b0 f4 c= ccore f0 f5 ccore f0 b0 c==> c==> c/\ cgood_list f0 c/\ cnormal_list f0 f4 cMEM f3 f4 c= cMEM f1 ccore f0 f3 cMEM f1 cMAP part cFST f3 c? / c/\ cMEM b0 f4 c= ccore f0 f5 ccore f0 b0
+ |- (((!N. (!L. (!r. (!v. (((good_list L) /\ (((normal_list L) N) /\ ((MEM r) N))) ==> (((MEM v) ((core L) r)) = ((MEM v) ((MAP FST) r)))))))) ==> ((\N. (!L. (!r. (!v. (((good_list L) /\ (((normal_list L) N) /\ ((MEM r) N))) ==> (((MEM v) ((core L) r)) = ((MEM v) ((MAP FST) r)))))))) N)) = ((\N. (!L. (!r. (!v. (((good_list L) /\ (((normal_list L) N) /\ ((MEM r) N))) ==> (((MEM v) ((core L) r)) = ((MEM v) ((MAP FST) r)))))))) N))
T c= c==> ! ! ! ! c==> c/\ cgood_list b1 c/\ cnormal_list b1 b0 cMEM b2 b0 c= cMEM b3 ccore b1 b2 cMEM b3 cMAP part cFST b2 * / ! ! ! c==> c/\ cgood_list b1 c/\ cnormal_list b1 b0 cMEM b2 b0 c= cMEM b3 ccore b1 b2 cMEM b3 cMAP part cFST b2 f0 * / ! ! ! c==> c/\ cgood_list b1 c/\ cnormal_list b1 b0 cMEM b2 b0 c= cMEM b3 ccore b1 b2 cMEM b3 cMAP part cFST b2 f0
+ (((MEM (FST x)) ((core L) f1)) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))), ((MEM f1) N) |- ((((MEM (FST x)) ((core L) f1)) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) /\ (?x. (((MEM x) N) /\ (((core L) f1) = ((core L) x)))))
T c==> c= cMEM cFST f0 ccore f1 f2 c? / c/\ cMEM b0 f2 c= cFST f0 cFST b0 c==> cMEM f2 f3 c/\ c= cMEM cFST f0 ccore f1 f2 c? / c/\ cMEM b0 f2 c= cFST f0 cFST b0 c? / c/\ cMEM b0 f3 c= ccore f1 f2 ccore f1 b0
+ |- (((uniq ((MAP (core L)) N)) ==> (f1 = f2)) = ((uniq ((quotient_list L) N)) ==> (f1 = f2)))
T c= c==> cuniq cMAP * part ccore f0 f1 c= f2 f3 c==> cuniq cquotient_list f0 f1 c= f2 f3
+ (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), ((MEM f1) N), ((MEM f2) N) |- (((MEM x) f1) ==> ((v = (FST x)) ==> (((MEM x') f2) ==> ((v = (FST x')) ==> ((((core L) f1) = ((core L) f2)) ==> ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) ==> (((?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) ==> (f1 = f2))))))))
T c==> cuniq cfilter * part cMEM f0 cquotient_list f1 f2 c==> cuniq cquotient_list f1 f2 c==> cMEM f3 f2 c==> cMEM f4 f2 c==> cMEM f5 f3 c==> c= f0 cFST f5 c==> cMEM f6 f4 c==> c= f0 cFST f6 c==> c= ccore f1 f3 ccore f1 f4 c==> c= cMEM cFST f5 ccore f1 f4 c? / c/\ cMEM b0 f4 c= cFST f5 cFST b0 c==> c= c? / c/\ cMEM b0 f4 c= cFST f5 cFST b0 c? / c/\ cMEM b0 f3 c= cFST f5 cFST b0 c= f3 f4
+ (good_list L), (v = (FST x)), ((MEM f2) N), ((normal_list L) N) |- ((~ (((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))))) = ((((good_list L) /\ (((normal_list L) N) /\ ((MEM f2) N))) ==> (((MEM v) ((core L) f2)) = ((MEM v) ((MAP FST) f2)))) ==> F))
T c==> cgood_list f0 c==> c= f1 cFST f2 c==> cMEM f3 f4 c==> cnormal_list f0 f4 c= c~ c= cMEM cFST f2 ccore f0 f3 c? / c/\ cMEM b0 f3 c= cFST f2 cFST b0 c==> c==> c/\ cgood_list f0 c/\ cnormal_list f0 f4 cMEM f3 f4 c= cMEM f1 ccore f0 f3 cMEM f1 cMAP part cFST f3 cF
+ (x = f1), (x' = f2), ((MEM x) N), ((MEM x') N) |- (((~ (f1 = f2)) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))) = ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> cMEM f0 f4 c==> cMEM f2 f4 c= c/\ c~ c= f1 f3 c/\ c? / c/\ cMEM b0 f1 c= f5 cFST b0 c? / c/\ cMEM b0 f3 c= f5 cFST b0 c/\ c~ c= f1 f3 c/\ cMEM f1 f4 c/\ cMEM f3 f4 c/\ c? / c/\ cMEM b0 f1 c= f5 cFST b0 c? / c/\ cMEM b0 f3 c= f5 cFST b0
+ (good_list L), ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))), ((MEM v) a), ((normal_list L) N), ((\x. (((MEM x) N) /\ (a = ((core L) x)))) x) |- (((\x. (((MEM x) N) /\ (a = ((core L) x)))) x) /\ (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))))
T c==> cgood_list f0 c==> c/\ c/\ cMEM f1 f2 c? / c/\ cMEM b0 f3 c= f2 ccore f0 b0 c~ c= f4 f2 c==> cMEM f1 f4 c==> cnormal_list f0 f3 c==> * / c/\ cMEM b0 f3 c= f4 ccore f0 b0 f5 c/\ * / c/\ cMEM b0 f3 c= f4 ccore f0 b0 f5 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f3 c/\ cMEM b1 f3 c/\ c? / c/\ cMEM b2 b0 c= f1 cFST b2 c? / c/\ cMEM b2 b1 c= f1 cFST b2
- |- ((!u. (!v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v)))) ==> (!u. (!v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v)))))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= ccore f1 b0 ccore f1 b1 c= b0 b1 ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= ccore f1 b0 ccore f1 b1 c= b0 b1
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (good_list L), ((normal_list L) N) |- (((?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))) ==> (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))))) = (((?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))) ==> (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))))) /\ ((?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))) ==> (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))))))
T c==> cgood_list f0 c==> cnormal_list f0 f1 c= c==> c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ c? / c/\ cMEM b2 b0 c= f2 cFST b2 c? / c/\ cMEM b2 b1 c= f2 cFST b2 c? / c? / c/\ c/\ cMEM f2 b0 c? / c/\ cMEM b2 f1 c= b0 ccore f0 b2 c/\ c/\ cMEM f2 b1 c? / c/\ cMEM b2 f1 c= b1 ccore f0 b2 c~ c= b0 b1 c/\ c==> c? / c? / c/\ c/\ cMEM f2 b0 c? / c/\ cMEM b2 f1 c= b0 ccore f0 b2 c/\ c/\ cMEM f2 b1 c? / c/\ cMEM b2 f1 c= b1 ccore f0 b2 c~ c= b0 b1 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ c? / c/\ cMEM b2 b0 c= f2 cFST b2 c? / c/\ cMEM b2 b1 c= f2 cFST b2 c==> c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ c? / c/\ cMEM b2 b0 c= f2 cFST b2 c? / c/\ cMEM b2 b1 c= f2 cFST b2 c? / c? / c/\ c/\ cMEM f2 b0 c? / c/\ cMEM b2 f1 c= b0 ccore f0 b2 c/\ c/\ cMEM f2 b1 c? / c/\ cMEM b2 f1 c= b1 ccore f0 b2 c~ c= b0 b1
+ (uniq ((filter (MEM v)) ((quotient_list L) N))) |- (((?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))))) = (((NUMERAL (BIT1 _0)) < (sizel ((filter (MEM v)) ((quotient_list L) N)))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2))))))))))
T c==> cuniq cfilter * part cMEM f0 cquotient_list f1 f2 c= c= c? / c? / c/\ c/\ cMEM f0 b0 c? / c/\ cMEM b2 f2 c= b0 ccore f1 b2 c/\ c/\ cMEM f0 b1 c? / c/\ cMEM b2 f2 c= b1 ccore f1 b2 c~ c= b0 b1 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f2 c/\ cMEM b1 f2 c/\ c? / c/\ cMEM b2 b0 c= f0 cFST b2 c? / c/\ cMEM b2 b1 c= f0 cFST b2 c= c< cNUMERAL cBIT1 c_0 csizel cfilter * part cMEM f0 cquotient_list f1 f2 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f2 c/\ cMEM b1 f2 c/\ cMEM f0 cMAP part cFST b0 cMEM f0 cMAP part cFST b1
+ (good_list L), (x = f1), ((MEM v) a), ((MEM x) N), ((normal_list L) N) |- ((a = ((core L) f1)) ==> (((MEM v) b) ==> (((MEM f2) N) ==> ((b = ((core L) f2)) ==> ((~ (a = b)) ==> (?x. (((MEM x) f1) /\ (v = (FST x)))))))))
T c==> cgood_list f0 c==> c= f1 f2 c==> cMEM f3 f4 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> c= f4 ccore f0 f2 c==> cMEM f3 f6 c==> cMEM f7 f5 c==> c= f6 ccore f0 f7 c==> c~ c= f4 f6 c? / c/\ cMEM b0 f2 c= f3 cFST b0
+ |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- ((!N. (!v. ((((all uniq) L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((MEM v) (flatten ((quotient_list L) N)))))))) ==> (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2)))))))))))) = T)
T c= ! ! c==> c/\ call part cuniq f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cnormal_list f0 b0 cMEM b1 cflatten cquotient_list f0 b0 c= c> csizel cfilter * part cMEM b1 cquotient_list f0 b0 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b2 b3 c/\ cMEM b2 b0 c/\ cMEM b3 b0 c/\ cMEM b1 cMAP part cFST b2 cMEM b1 cMAP part cFST b3 cT
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\L. (!N. ((((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((all uniq) L)))) ==> (good_list ((quotient_list L) N))))) L)
T * / ! c==> c/\ cnormal_list b0 b1 c/\ cis_edge_nondegenerate chypermap_of_list b0 c/\ cgood_list b0 call part cuniq b0 cgood_list cquotient_list b0 b1 f0
+ (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), (v = (FST x)), (v = (FST x')), ((MEM x) f1), ((MEM x') f2), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- ((\a. (?b. ((((MEM (FST x)) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM (FST x)) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))) ((core L) f1))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cgood_list f3 c==> c= f2 cFST f5 c==> c= f2 cFST f6 c==> cMEM f5 f0 c==> cMEM f6 f1 c==> cMEM f0 f4 c==> cMEM f1 f4 c==> cnormal_list f3 f4 * / c? / c/\ c/\ cMEM cFST f5 b0 c? / c/\ cMEM b2 f4 c= b0 ccore f3 b2 c/\ c/\ cMEM cFST f5 b1 c? / c/\ cMEM b2 f4 c= b1 ccore f3 b2 c~ c= b0 b1 ccore f3 f0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10350512)) /\ ((((real_le (real_of_int _10350512)) (real_of_num (NUMERAL (BIT1 _0)))) \/ ((real_le (real_of_int _10350512)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512)) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))))))) |- (((real_ge (real_of_int _10350512)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (?x. (((MEM x) f2) /\ (v = (FST x)))), (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- (((!x. (((\x. (((MEM x) f1) /\ (v = (FST x)))) x) ==> (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))))) ==> ((?x. (((MEM x) f1) /\ (v = (FST x)))) ==> (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))))) = ((?x. (((MEM x) f1) /\ (v = (FST x)))) ==> (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))))))
T c==> c? / c/\ cMEM b0 f0 c= f1 cFST b0 c==> c~ c= f2 f0 c==> cuniq cfilter * part cMEM f1 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cgood_list f3 c==> cMEM f2 f4 c==> cMEM f0 f4 c==> cnormal_list f3 f4 c= c==> ! c==> * / c/\ cMEM b1 f2 c= f1 cFST b1 b0 c? / c? / c/\ c/\ cMEM f1 b1 c? / c/\ cMEM b3 f4 c= b1 ccore f3 b3 c/\ c/\ cMEM f1 b2 c? / c/\ cMEM b3 f4 c= b2 ccore f3 b3 c~ c= b1 b2 c==> c? / c/\ cMEM b0 f2 c= f1 cFST b0 c? / c? / c/\ c/\ cMEM f1 b0 c? / c/\ cMEM b2 f4 c= b0 ccore f3 b2 c/\ c/\ cMEM f1 b1 c? / c/\ cMEM b2 f4 c= b1 ccore f3 b2 c~ c= b0 b1 c==> c? / c/\ cMEM b0 f2 c= f1 cFST b0 c? / c? / c/\ c/\ cMEM f1 b0 c? / c/\ cMEM b2 f4 c= b0 ccore f3 b2 c/\ c/\ cMEM f1 b1 c? / c/\ cMEM b2 f4 c= b1 ccore f3 b2 c~ c= b0 b1
+ (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), (v = (FST x)), ((MEM x) f1), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- ((?x. (((MEM x) f2) /\ (v = (FST x)))) ==> (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cgood_list f3 c==> c= f2 cFST f5 c==> cMEM f5 f0 c==> cMEM f0 f4 c==> cMEM f1 f4 c==> cnormal_list f3 f4 c==> c? / c/\ cMEM b0 f1 c= f2 cFST b0 c? / c? / c/\ c/\ cMEM f2 b0 c? / c/\ cMEM b2 f4 c= b0 ccore f3 b2 c/\ c/\ cMEM f2 b1 c? / c/\ cMEM b2 f4 c= b1 ccore f3 b2 c~ c= b0 b1
+ (good_list L), ((normal_list L) N), ((\b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))) b) |- (((\b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))) b) /\ (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))))
T c==> cgood_list f0 c==> cnormal_list f0 f1 c==> * / c/\ c/\ cMEM f2 f3 c? / c/\ cMEM b1 f1 c= f3 ccore f0 b1 c/\ c/\ cMEM f2 b0 c? / c/\ cMEM b1 f1 c= b0 ccore f0 b1 c~ c= f3 b0 f4 c/\ * / c/\ c/\ cMEM f2 f3 c? / c/\ cMEM b1 f1 c= f3 ccore f0 b1 c/\ c/\ cMEM f2 b0 c? / c/\ cMEM b1 f1 c= b0 ccore f0 b1 c~ c= f3 b0 f4 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ c? / c/\ cMEM b2 b0 c= f2 cFST b2 c? / c/\ cMEM b2 b1 c= f2 cFST b2
+ (good_list L), (a = ((core L) f1)), ((MEM v) a), ((MEM f1) N), ((normal_list L) N) |- ((~ (a = b)) ==> (?x. (((MEM x) f1) /\ (v = (FST x)))))
T c==> cgood_list f0 c==> c= f1 ccore f0 f2 c==> cMEM f3 f1 c==> cMEM f2 f4 c==> cnormal_list f0 f4 c==> c~ c= f1 f5 c? / c/\ cMEM b0 f2 c= f3 cFST b0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (good_list L), (x' = f2), ((MEM v) b), ((MEM x') N), ((normal_list L) N) |- ((b = ((core L) f2)) ==> ((~ (a = b)) ==> (?x. (((MEM x) f2) /\ (v = (FST x))))))
T c==> cgood_list f0 c==> c= f1 f2 c==> cMEM f3 f4 c==> cMEM f1 f5 c==> cnormal_list f0 f5 c==> c= f4 ccore f0 f2 c==> c~ c= f6 f4 c? / c/\ cMEM b0 f2 c= f3 cFST b0
+ (?x. (((MEM x) f2) /\ (v = (FST x)))), (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- ((((\x. (((MEM x) f1) /\ (v = (FST x)))) x) ==> (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))))) = T)
T c==> c? / c/\ cMEM b0 f0 c= f1 cFST b0 c==> c~ c= f2 f0 c==> cuniq cfilter * part cMEM f1 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cgood_list f3 c==> cMEM f2 f4 c==> cMEM f0 f4 c==> cnormal_list f3 f4 c= c==> * / c/\ cMEM b0 f2 c= f1 cFST b0 f5 c? / c? / c/\ c/\ cMEM f1 b0 c? / c/\ cMEM b2 f4 c= b0 ccore f3 b2 c/\ c/\ cMEM f1 b1 c? / c/\ cMEM b2 f4 c= b1 ccore f3 b2 c~ c= b0 b1 cT
+ (v = (FST x)), (v = (FST x')), (((MEM (FST x)) ((core L) f1)) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) |- ((((MEM (FST x)) ((core L) f1)) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) /\ ((FST x) = (FST x')))
T c==> c= f0 cFST f1 c==> c= f0 cFST f2 c==> c= cMEM cFST f1 ccore f3 f4 c? / c/\ cMEM b0 f4 c= cFST f1 cFST b0 c/\ c= cMEM cFST f1 ccore f3 f4 c? / c/\ cMEM b0 f4 c= cFST f1 cFST b0 c= cFST f1 cFST f2
+ (~ (a = b)), (good_list L), (a = ((core L) x)), (b = ((core L) x')), (x = f1), (x' = f2), ((MEM v) a), ((MEM v) b), ((MEM x) N), ((MEM x') N), ((normal_list L) N) |- ((~ (f1 = f2)) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> c= f0 ccore f2 f3 c==> c= f1 ccore f2 f4 c==> c= f3 f5 c==> c= f4 f6 c==> cMEM f7 f0 c==> cMEM f7 f1 c==> cMEM f3 f8 c==> cMEM f4 f8 c==> cnormal_list f2 f8 c/\ c~ c= f5 f6 c/\ c? / c/\ cMEM b0 f5 c= f7 cFST b0 c? / c/\ cMEM b0 f6 c= f7 cFST b0
+ (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), (v = (FST x)), (v = (FST x')), (((core L) f1) = ((core L) f2)), ((MEM x) f1), ((MEM x') f2), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) ==> F)
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cgood_list f3 c==> c= f2 cFST f5 c==> c= f2 cFST f6 c==> c= ccore f3 f0 ccore f3 f1 c==> cMEM f5 f0 c==> cMEM f6 f1 c==> cMEM f0 f4 c==> cMEM f1 f4 c==> cnormal_list f3 f4 c==> c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), ((normal_list L) N) |- ((((\f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))) f1) ==> (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))))) = T)
T c==> cuniq cfilter * part cMEM f0 cquotient_list f1 f2 c==> cuniq cquotient_list f1 f2 c==> cgood_list f1 c==> cnormal_list f1 f2 c= c==> * / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f2 c/\ cMEM b1 f2 c/\ c? / c/\ cMEM b2 b0 c= f0 cFST b2 c? / c/\ cMEM b2 b1 c= f0 cFST b2 f3 c? / c? / c/\ c/\ cMEM f0 b0 c? / c/\ cMEM b2 f2 c= b0 ccore f1 b2 c/\ c/\ cMEM f0 b1 c? / c/\ cMEM b2 f2 c= b1 ccore f1 b2 c~ c= b0 b1 cT
- |- ((\L. ((good_list L) ==> (uniq L))) L)
T * / c==> cgood_list b0 cuniq b0 f0
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (good_list L), ((MEM v) ((core L) f2)), ((MEM f2) N), ((normal_list L) N) |- (T = ((((good_list L) /\ (((normal_list L) N) /\ ((MEM f2) N))) ==> (((MEM v) ((core L) f2)) = ((MEM v) ((MAP FST) f2)))) ==> (?x. (((MEM x) f2) /\ (v = (FST x))))))
T c==> cgood_list f0 c==> cMEM f1 ccore f0 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c= cT c==> c==> c/\ cgood_list f0 c/\ cnormal_list f0 f3 cMEM f2 f3 c= cMEM f1 ccore f0 f2 cMEM f1 cMAP part cFST f2 c? / c/\ cMEM b0 f2 c= f1 cFST b0
- (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (v = (FST x)), ((MEM x) f1), ((MEM f1) N), ((MEM f2) N) |- (((MEM x') f2) ==> ((v = (FST x')) ==> ((((core L) f1) = ((core L) f2)) ==> ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) ==> (((?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) ==> F)))))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> c= f2 cFST f5 c==> cMEM f5 f0 c==> cMEM f0 f4 c==> cMEM f1 f4 c==> cMEM f6 f1 c==> c= f2 cFST f6 c==> c= ccore f3 f0 ccore f3 f1 c==> c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c==> c= c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c? / c/\ cMEM b0 f0 c= cFST f5 cFST b0 cF
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (good_list L), ((normal_list L) N) |- (!b. (((\b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))) b) ==> (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))))))
T c==> cgood_list f0 c==> cnormal_list f0 f1 ! c==> * / c/\ c/\ cMEM f2 f3 c? / c/\ cMEM b1 f1 c= f3 ccore f0 b1 c/\ c/\ cMEM f2 b1 c? / c/\ cMEM b1 f1 c= b1 ccore f0 b1 c~ c= f3 b1 b0 c? / c? / c/\ c~ c= b1 b2 c/\ cMEM b1 f1 c/\ cMEM b2 f1 c/\ c? / c/\ cMEM b3 b1 c= f2 cFST b3 c? / c/\ cMEM b3 b2 c= f2 cFST b3
- (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))), (good_list L), ((normal_list L) N) |- ((?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))) /\ (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))))
T c==> c? / c? / c/\ c/\ cMEM f0 b0 c? / c/\ cMEM b2 f1 c= b0 ccore f2 b2 c/\ c/\ cMEM f0 b1 c? / c/\ cMEM b2 f1 c= b1 ccore f2 b2 c~ c= b0 b1 c==> cgood_list f2 c==> cnormal_list f2 f1 c/\ c? / c? / c/\ c/\ cMEM f0 b0 c? / c/\ cMEM b2 f1 c= b0 ccore f2 b2 c/\ c/\ cMEM f0 b1 c? / c/\ cMEM b2 f1 c= b1 ccore f2 b2 c~ c= b0 b1 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ c? / c/\ cMEM b2 b0 c= f0 cFST b2 c? / c/\ cMEM b2 b1 c= f0 cFST b2
- (good_list L), (v = (FST x)), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- ((((good_list L) /\ (((normal_list L) N) /\ ((MEM f2) N))) ==> (((MEM v) ((core L) f2)) = ((MEM v) ((MAP FST) f2)))) ==> (?x. (((MEM x) N) /\ (((core L) f2) = ((core L) x)))))
T c==> cgood_list f0 c==> c= f1 cFST f2 c==> cMEM f3 f4 c==> cMEM f5 f4 c==> cnormal_list f0 f4 c==> c==> c/\ cgood_list f0 c/\ cnormal_list f0 f4 cMEM f5 f4 c= cMEM f1 ccore f0 f5 cMEM f1 cMAP part cFST f5 c? / c/\ cMEM b0 f4 c= ccore f0 f5 ccore f0 b0
+ (uniq ((MAP (core L)) N)) |- ((uniq ((MAP (core L)) N)) = T)
T c==> cuniq cMAP * part ccore f0 f1 c= cuniq cMAP * part ccore f0 f1 cT
+ |- ((\l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) l)
T * / c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 f2
- (!u. (!v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v)))) |- ((!v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v))) = T)
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= ccore f1 b0 ccore f1 b1 c= b0 b1 c= ! c==> c/\ cMEM f2 f0 c/\ cMEM b0 f0 c= ccore f1 f2 ccore f1 b0 c= f2 b0 cT
- |- ((!u. t) = t)
T c= ! f0 f0
+ (~ (a = b)), (a = ((core L) x)), (b = ((core L) x')), (x = f1), (x' = f2) |- (~ (f1 = f2))
T c==> c~ c= f0 f1 c==> c= f0 ccore f2 f3 c==> c= f1 ccore f2 f4 c==> c= f3 f5 c==> c= f4 f6 c~ c= f5 f6
+ (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), (v = (FST x)), (v = (FST x')), (((core L) f1) = ((core L) f2)), ((MEM x) f1), ((MEM x') f2), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- (~ (((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cgood_list f3 c==> c= f2 cFST f5 c==> c= f2 cFST f6 c==> c= ccore f3 f0 ccore f3 f1 c==> cMEM f5 f0 c==> cMEM f6 f1 c==> cMEM f0 f4 c==> cMEM f1 f4 c==> cnormal_list f3 f4 c~ c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0
+ ((MEM f2) N) |- (T = (((MEM f2) N) /\ (((core L) f2) = ((core L) f2))))
T c==> cMEM f0 f1 c= cT c/\ cMEM f0 f1 c= ccore f2 f0 ccore f2 f0
+ (~ (a = b)), (good_list L), (a = ((core L) x)), (b = ((core L) x')), ((MEM v) a), ((MEM v) b), ((MEM x) N), ((MEM x') N), ((normal_list L) N) |- ((?f1. (x = f1)) ==> (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> c= f0 ccore f2 f3 c==> c= f1 ccore f2 f4 c==> cMEM f5 f0 c==> cMEM f5 f1 c==> cMEM f3 f6 c==> cMEM f4 f6 c==> cnormal_list f2 f6 c==> c? / c= f3 b0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f6 c/\ cMEM b1 f6 c/\ c? / c/\ cMEM b2 b0 c= f5 cFST b2 c? / c/\ cMEM b2 b1 c= f5 cFST b2
- |- (!f2. (((\f2. (x' = f2)) f2) ==> (?f2. (x' = f2))))
T c==> * / c= f0 b0 f1 c? / c= f0 b0
+ (good_list L), (v = (FST x)), (((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))), ((MEM f1) N), ((normal_list L) N) |- ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) /\ (?x. (((MEM x) N) /\ (((core L) f1) = ((core L) x)))))
T c==> cgood_list f0 c==> c= f1 cFST f2 c==> c= cMEM cFST f2 ccore f0 f3 c? / c/\ cMEM b0 f3 c= cFST f2 cFST b0 c==> cMEM f4 f5 c==> cnormal_list f0 f5 c/\ c= cMEM cFST f2 ccore f0 f3 c? / c/\ cMEM b0 f3 c= cFST f2 cFST b0 c? / c/\ cMEM b0 f5 c= ccore f0 f4 ccore f0 b0
+ |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10350512)) /\ ((((real_le (real_of_int _10350512)) (real_of_num (NUMERAL (BIT1 _0)))) \/ ((real_le (real_of_int _10350512)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512)) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))))))) ==> F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
+ (~ (a = b)), (good_list L), (a = ((core L) x)), (((MEM x') N) /\ (b = ((core L) x'))), ((MEM v) a), ((MEM v) b), ((MEM x) N), ((normal_list L) N) |- (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> c= f0 ccore f2 f3 c==> c/\ cMEM f4 f5 c= f1 ccore f2 f4 c==> cMEM f6 f0 c==> cMEM f6 f1 c==> cMEM f3 f5 c==> cnormal_list f2 f5 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f5 c/\ cMEM b1 f5 c/\ c? / c/\ cMEM b2 b0 c= f6 cFST b2 c? / c/\ cMEM b2 b1 c= f6 cFST b2
+ (~ (a = b)), (good_list L), (a = ((core L) x)), (b = ((core L) x')), (x = f1), ((MEM v) a), ((MEM v) b), ((MEM x) N), ((MEM x') N), ((normal_list L) N) |- (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> c= f0 ccore f2 f3 c==> c= f1 ccore f2 f4 c==> c= f3 f5 c==> cMEM f6 f0 c==> cMEM f6 f1 c==> cMEM f3 f7 c==> cMEM f4 f7 c==> cnormal_list f2 f7 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f7 c/\ cMEM b1 f7 c/\ c? / c/\ cMEM b2 b0 c= f6 cFST b2 c? / c/\ cMEM b2 b1 c= f6 cFST b2
+ |- ((\f. (!y. ((uniq ((MAP f) y)) ==> (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))))) (core L))
T * / ! c==> cuniq cMAP b0 b1 ! ! c==> c/\ cMEM b2 b1 c/\ cMEM b3 b1 c= * b0 b2 * b0 b3 c= b2 b3 * part ccore f0
- |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((\f2. (x' = f2)) x')
T * / c= f0 b0 f0
+ (good_list L), ((normal_list L) N) |- ((uniq ((quotient_list L) N)) ==> (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2))))))))))
T c==> cgood_list f0 c==> cnormal_list f0 f1 c==> cuniq cquotient_list f0 f1 c= c> csizel cfilter * part cMEM f2 cquotient_list f0 f1 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ cMEM f2 cMAP part cFST b0 cMEM f2 cMAP part cFST b1
+ |- ((((int_gt (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0)))) /\ ((int_lt (int_of_num (NUMERAL (BIT1 _0)))) (int_of_num a))) \/ ((~ ((int_gt (int_of_num a)) (int_of_num (NUMERAL (BIT1 _0))))) /\ (~ ((int_lt (int_of_num (NUMERAL (BIT1 _0)))) (int_of_num a)))))
T c\/ c/\ cint_gt cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_lt cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f0 c/\ c~ cint_gt cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c~ cint_lt cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f0
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ (good_list L), ((normal_list L) N) |- (((!x. (((\a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))) x) ==> (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))))) ==> ((?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))) ==> (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))))) = ((?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))) ==> (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))))))
T c==> cgood_list f0 c==> cnormal_list f0 f1 c= c==> ! c==> * / c? / c/\ c/\ cMEM f2 b1 c? / c/\ cMEM b3 f1 c= b1 ccore f0 b3 c/\ c/\ cMEM f2 b2 c? / c/\ cMEM b3 f1 c= b2 ccore f0 b3 c~ c= b1 b2 b0 c? / c? / c/\ c~ c= b1 b2 c/\ cMEM b1 f1 c/\ cMEM b2 f1 c/\ c? / c/\ cMEM b3 b1 c= f2 cFST b3 c? / c/\ cMEM b3 b2 c= f2 cFST b3 c==> c? / c? / c/\ c/\ cMEM f2 b0 c? / c/\ cMEM b2 f1 c= b0 ccore f0 b2 c/\ c/\ cMEM f2 b1 c? / c/\ cMEM b2 f1 c= b1 ccore f0 b2 c~ c= b0 b1 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ c? / c/\ cMEM b2 b0 c= f2 cFST b2 c? / c/\ cMEM b2 b1 c= f2 cFST b2 c==> c? / c? / c/\ c/\ cMEM f2 b0 c? / c/\ cMEM b2 f1 c= b0 ccore f0 b2 c/\ c/\ cMEM f2 b1 c? / c/\ cMEM b2 f1 c= b1 ccore f0 b2 c~ c= b0 b1 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ c? / c/\ cMEM b2 b0 c= f2 cFST b2 c? / c/\ cMEM b2 b1 c= f2 cFST b2
+ (good_list L), (v = (FST x)), ((MEM f1) N), ((normal_list L) N) |- (((((MEM (FST x)) ((core L) f1)) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) ==> (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) = ((((good_list L) /\ (((normal_list L) N) /\ ((MEM f1) N))) ==> (((MEM v) ((core L) f1)) = ((MEM v) ((MAP FST) f1)))) ==> (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))))
T c==> cgood_list f0 c==> c= f1 cFST f2 c==> cMEM f3 f4 c==> cnormal_list f0 f4 c= c==> c= cMEM cFST f2 ccore f0 f3 c? / c/\ cMEM b0 f3 c= cFST f2 cFST b0 c? / c/\ cMEM b0 f5 c= cFST f2 cFST b0 c==> c==> c/\ cgood_list f0 c/\ cnormal_list f0 f4 cMEM f3 f4 c= cMEM f1 ccore f0 f3 cMEM f1 cMAP part cFST f3 c? / c/\ cMEM b0 f5 c= cFST f2 cFST b0
+ (~ (a = b)), (good_list L), (a = ((core L) x)), (b = ((core L) x')), (x = f1), ((MEM v) a), ((MEM v) b), ((MEM x) N), ((MEM x') N), ((normal_list L) N) |- (!f2. (((\f2. (x' = f2)) f2) ==> (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> c= f0 ccore f2 f3 c==> c= f1 ccore f2 f4 c==> c= f3 f5 c==> cMEM f6 f0 c==> cMEM f6 f1 c==> cMEM f3 f7 c==> cMEM f4 f7 c==> cnormal_list f2 f7 ! c==> * / c= f4 b1 b0 c? / c? / c/\ c~ c= b1 b2 c/\ cMEM b1 f7 c/\ cMEM b2 f7 c/\ c? / c/\ cMEM b2 b1 c= f6 cFST b2 c? / c/\ cMEM b2 b2 c= f6 cFST b2
+ ((\a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))) a) |- (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))
T c==> * / c? / c/\ c/\ cMEM f0 b0 c? / c/\ cMEM b2 f1 c= b0 ccore f2 b2 c/\ c/\ cMEM f0 b1 c? / c/\ cMEM b2 f1 c= b1 ccore f2 b2 c~ c= b0 b1 f3 c? / c/\ c/\ cMEM f0 f3 c? / c/\ cMEM b1 f1 c= f3 ccore f2 b1 c/\ c/\ cMEM f0 b0 c? / c/\ cMEM b1 f1 c= b0 ccore f2 b1 c~ c= f3 b0
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _10350512)) /\ ((((real_le (real_of_int _10350512)) (real_of_num (NUMERAL (BIT1 _0)))) \/ ((real_le (real_of_int _10350512)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512)) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _10350512) ==> ((((int_gt _10350512) (int_of_num (NUMERAL (BIT1 _0)))) /\ ((int_lt (int_of_num (NUMERAL (BIT1 _0)))) _10350512)) \/ ((~ ((int_gt _10350512) (int_of_num (NUMERAL (BIT1 _0))))) /\ (~ ((int_lt (int_of_num (NUMERAL (BIT1 _0)))) _10350512)))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c\/ c/\ cint_gt f0 cint_of_num cNUMERAL cBIT1 c_0 cint_lt cint_of_num cNUMERAL cBIT1 c_0 f0 c/\ c~ cint_gt f0 cint_of_num cNUMERAL cBIT1 c_0 c~ cint_lt cint_of_num cNUMERAL cBIT1 c_0 f0
+ (is_edge_nondegenerate (hypermap_of_list L)), (good_list L), ((all uniq) L), ((normal_list L) N) |- (((((normal_list L) N) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((all uniq) L)))) ==> (good_list ((quotient_list L) N))) ==> (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2))))))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cgood_list f0 c==> call part cuniq f0 c==> cnormal_list f0 f1 c==> c==> c/\ cnormal_list f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 call part cuniq f0 cgood_list cquotient_list f0 f1 c= c> csizel cfilter * part cMEM f2 cquotient_list f0 f1 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ cMEM f2 cMAP part cFST b0 cMEM f2 cMAP part cFST b1
+ |- ((\y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))) y)
T * / ! c= cMEM b0 cMAP f0 b1 c? / c/\ cMEM b2 b1 c= b0 * f0 b2 f1
+ (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), (v = (FST x)), (((MEM x') f2) /\ (v = (FST x'))), ((MEM x) f1), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- ((((MEM x') f2) /\ (v = (FST x'))) /\ (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cgood_list f3 c==> c= f2 cFST f5 c==> c/\ cMEM f6 f1 c= f2 cFST f6 c==> cMEM f5 f0 c==> cMEM f0 f4 c==> cMEM f1 f4 c==> cnormal_list f3 f4 c/\ c/\ cMEM f6 f1 c= f2 cFST f6 c? / c? / c/\ c/\ cMEM f2 b0 c? / c/\ cMEM b2 f4 c= b0 ccore f3 b2 c/\ c/\ cMEM f2 b1 c? / c/\ cMEM b2 f4 c= b1 ccore f3 b2 c~ c= b0 b1
+ (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (v = (FST x)), (v = (FST x')), ((?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))), (((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))), (((core L) f1) = ((core L) f2)), ((MEM x) f1), ((MEM x') f2), ((MEM f1) N), ((MEM f2) N) |- (f1 = f2)
T c==> cuniq cfilter * part cMEM f0 cquotient_list f1 f2 c==> cuniq cquotient_list f1 f2 c==> c= f0 cFST f3 c==> c= f0 cFST f4 c==> c= c? / c/\ cMEM b0 f5 c= cFST f3 cFST b0 c? / c/\ cMEM b0 f6 c= cFST f3 cFST b0 c==> c= cMEM cFST f3 ccore f1 f5 c? / c/\ cMEM b0 f5 c= cFST f3 cFST b0 c==> c= ccore f1 f6 ccore f1 f5 c==> cMEM f3 f6 c==> cMEM f4 f5 c==> cMEM f6 f2 c==> cMEM f5 f2 c= f6 f5
+ (?x. (((MEM x) f2) /\ (v = (FST x)))), (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- (!x. (((\x. (((MEM x) f1) /\ (v = (FST x)))) x) ==> (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))))))
T c==> c? / c/\ cMEM b0 f0 c= f1 cFST b0 c==> c~ c= f2 f0 c==> cuniq cfilter * part cMEM f1 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cgood_list f3 c==> cMEM f2 f4 c==> cMEM f0 f4 c==> cnormal_list f3 f4 ! c==> * / c/\ cMEM b1 f2 c= f1 cFST b1 b0 c? / c? / c/\ c/\ cMEM f1 b1 c? / c/\ cMEM b3 f4 c= b1 ccore f3 b3 c/\ c/\ cMEM f1 b2 c? / c/\ cMEM b3 f4 c= b2 ccore f3 b3 c~ c= b1 b2
- (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (v = (FST x)), ((MEM x) f1), ((MEM f1) N), ((MEM f2) N) |- ((v = (FST x)) /\ (((MEM x') f2) ==> ((v = (FST x')) ==> ((((core L) f1) = ((core L) f2)) ==> ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) ==> (((?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) ==> F))))))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> c= f2 cFST f5 c==> cMEM f5 f0 c==> cMEM f0 f4 c==> cMEM f1 f4 c/\ c= f2 cFST f5 c==> cMEM f6 f1 c==> c= f2 cFST f6 c==> c= ccore f3 f0 ccore f3 f1 c==> c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c==> c= c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c? / c/\ cMEM b0 f0 c= cFST f5 cFST b0 cF
- (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (v = (FST x)), (v = (FST x')), ((MEM x) f1), ((MEM x') f2), ((MEM f1) N), ((MEM f2) N) |- ((v = (FST x')) /\ ((((core L) f1) = ((core L) f2)) ==> ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) ==> (((?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) ==> F))))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> c= f2 cFST f5 c==> c= f2 cFST f6 c==> cMEM f5 f0 c==> cMEM f6 f1 c==> cMEM f0 f4 c==> cMEM f1 f4 c/\ c= f2 cFST f6 c==> c= ccore f3 f0 ccore f3 f1 c==> c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c==> c= c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c? / c/\ cMEM b0 f0 c= cFST f5 cFST b0 cF
- |- ((?x'. t) = t)
T c= c? / f0 f0
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10350512)) /\ ((((real_le (real_of_int _10350512)) (real_of_num (NUMERAL (BIT1 _0)))) \/ ((real_le (real_of_int _10350512)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512)) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
+ (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), ((normal_list L) N) |- (((!x. (((\f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))) x) ==> (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))))) ==> ((?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))) ==> (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))))) = ((?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))) ==> (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))))))
T c==> cuniq cfilter * part cMEM f0 cquotient_list f1 f2 c==> cuniq cquotient_list f1 f2 c==> cgood_list f1 c==> cnormal_list f1 f2 c= c==> ! c==> * / c? / c/\ c~ c= b1 b2 c/\ cMEM b1 f2 c/\ cMEM b2 f2 c/\ c? / c/\ cMEM b3 b1 c= f0 cFST b3 c? / c/\ cMEM b3 b2 c= f0 cFST b3 b0 c? / c? / c/\ c/\ cMEM f0 b1 c? / c/\ cMEM b3 f2 c= b1 ccore f1 b3 c/\ c/\ cMEM f0 b2 c? / c/\ cMEM b3 f2 c= b2 ccore f1 b3 c~ c= b1 b2 c==> c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f2 c/\ cMEM b1 f2 c/\ c? / c/\ cMEM b2 b0 c= f0 cFST b2 c? / c/\ cMEM b2 b1 c= f0 cFST b2 c? / c? / c/\ c/\ cMEM f0 b0 c? / c/\ cMEM b2 f2 c= b0 ccore f1 b2 c/\ c/\ cMEM f0 b1 c? / c/\ cMEM b2 f2 c= b1 ccore f1 b2 c~ c= b0 b1 c==> c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f2 c/\ cMEM b1 f2 c/\ c? / c/\ cMEM b2 b0 c= f0 cFST b2 c? / c/\ cMEM b2 b1 c= f0 cFST b2 c? / c? / c/\ c/\ cMEM f0 b0 c? / c/\ cMEM b2 f2 c= b0 ccore f1 b2 c/\ c/\ cMEM f0 b1 c? / c/\ cMEM b2 f2 c= b1 ccore f1 b2 c~ c= b0 b1
+ (is_edge_nondegenerate (hypermap_of_list L)), (good_list L), ((all uniq) L), ((normal_list L) N) |- (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2)))))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cgood_list f0 c==> call part cuniq f0 c==> cnormal_list f0 f1 c= c> csizel cfilter * part cMEM f2 cquotient_list f0 f1 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ cMEM f2 cMAP part cFST b0 cMEM f2 cMAP part cFST b1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (a = b)), (good_list L), (a = ((core L) x)), (b = ((core L) x')), (x = f1), (x' = f2), ((MEM v) a), ((MEM v) b), ((MEM x) N), ((MEM x') N), ((normal_list L) N) |- ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> c= f0 ccore f2 f3 c==> c= f1 ccore f2 f4 c==> c= f3 f5 c==> c= f4 f6 c==> cMEM f7 f0 c==> cMEM f7 f1 c==> cMEM f3 f8 c==> cMEM f4 f8 c==> cnormal_list f2 f8 c/\ c? / c/\ cMEM b0 f5 c= f7 cFST b0 c? / c/\ cMEM b0 f6 c= f7 cFST b0
+ |- ((!v. ((((all uniq) L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((MEM v) (flatten ((quotient_list L) N)))))))) ==> (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2))))))))))) = T)
T c= ! c==> c/\ call part cuniq f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 cMEM b0 cflatten cquotient_list f0 f1 c= c> csizel cfilter * part cMEM b0 cquotient_list f0 f1 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b1 b2 c/\ cMEM b1 f1 c/\ cMEM b2 f1 c/\ cMEM b0 cMAP part cFST b1 cMEM b0 cMAP part cFST b2 cT
+ |- ((((NUMERAL (BIT1 _0)) < (sizel ((filter (MEM v)) ((quotient_list L) N)))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2))))))))) = (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2))))))))))
T c= c= c< cNUMERAL cBIT1 c_0 csizel cfilter * part cMEM f0 cquotient_list f1 f2 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f2 c/\ cMEM b1 f2 c/\ cMEM f0 cMAP part cFST b0 cMEM f0 cMAP part cFST b1 c= c> csizel cfilter * part cMEM f0 cquotient_list f1 f2 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f2 c/\ cMEM b1 f2 c/\ cMEM f0 cMAP part cFST b0 cMEM f0 cMAP part cFST b1
- (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), ((MEM x) f1), ((MEM f1) N), ((MEM f2) N) |- ((v = (FST x)) ==> (((MEM x') f2) ==> ((v = (FST x')) ==> ((((core L) f1) = ((core L) f2)) ==> ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) ==> (((?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) ==> F))))))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cMEM f5 f0 c==> cMEM f0 f4 c==> cMEM f1 f4 c==> c= f2 cFST f5 c==> cMEM f6 f1 c==> c= f2 cFST f6 c==> c= ccore f3 f0 ccore f3 f1 c==> c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c==> c= c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c? / c/\ cMEM b0 f0 c= cFST f5 cFST b0 cF
+ (good_list L), ((normal_list L) N) |- ((good_list ((quotient_list L) N)) ==> (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2))))))))))
T c==> cgood_list f0 c==> cnormal_list f0 f1 c==> cgood_list cquotient_list f0 f1 c= c> csizel cfilter * part cMEM f2 cquotient_list f0 f1 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ cMEM f2 cMAP part cFST b0 cMEM f2 cMAP part cFST b1
- (!u. (!v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v)))) |- (((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v)) = T)
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= ccore f1 b0 ccore f1 b1 c= b0 b1 c= c==> c/\ cMEM f2 f0 c/\ cMEM f3 f0 c= ccore f1 f2 ccore f1 f3 c= f2 f3 cT
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10350512)) /\ ((((real_le (real_of_int _10350512)) (real_of_num (NUMERAL (BIT1 _0)))) \/ ((real_le (real_of_int _10350512)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512)) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10350512)) /\ ((((real_le (real_of_int _10350512)) (real_of_num (NUMERAL (BIT1 _0)))) \/ ((real_le (real_of_int _10350512)) (real_of_num (NUMERAL (BIT1 _0))))) /\ (((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512)) \/ ((real_le ((real_add (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ c\/ creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 c\/ creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_le creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
+ (~ (a = b)), (good_list L), (a = ((core L) x)), (b = ((core L) x')), (x = f1), ((MEM v) a), ((MEM v) b), ((MEM x) N), ((MEM x') N), ((normal_list L) N) |- ((?f2. (x' = f2)) ==> (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> c= f0 ccore f2 f3 c==> c= f1 ccore f2 f4 c==> c= f3 f5 c==> cMEM f6 f0 c==> cMEM f6 f1 c==> cMEM f3 f7 c==> cMEM f4 f7 c==> cnormal_list f2 f7 c==> c? / c= f4 b0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f7 c/\ cMEM b1 f7 c/\ c? / c/\ cMEM b2 b0 c= f6 cFST b2 c? / c/\ cMEM b2 b1 c= f6 cFST b2
+ (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), ((normal_list L) N) |- (((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))) ==> (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))))
T c==> cuniq cfilter * part cMEM f0 cquotient_list f1 f2 c==> cuniq cquotient_list f1 f2 c==> cgood_list f1 c==> cnormal_list f1 f2 c==> c/\ c~ c= f3 f4 c/\ cMEM f3 f2 c/\ cMEM f4 f2 c/\ c? / c/\ cMEM b0 f3 c= f0 cFST b0 c? / c/\ cMEM b0 f4 c= f0 cFST b0 c? / c? / c/\ c/\ cMEM f0 b0 c? / c/\ cMEM b2 f2 c= b0 ccore f1 b2 c/\ c/\ cMEM f0 b1 c? / c/\ cMEM b2 f2 c= b1 ccore f1 b2 c~ c= b0 b1
- (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), ((MEM f1) N) |- (((MEM f1) N) /\ (((MEM f2) N) ==> (((MEM x) f1) ==> ((v = (FST x)) ==> (((MEM x') f2) ==> ((v = (FST x')) ==> ((((core L) f1) = ((core L) f2)) ==> ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) ==> (((?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) ==> F)))))))))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cMEM f0 f4 c/\ cMEM f0 f4 c==> cMEM f1 f4 c==> cMEM f5 f0 c==> c= f2 cFST f5 c==> cMEM f6 f1 c==> c= f2 cFST f6 c==> c= ccore f3 f0 ccore f3 f1 c==> c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c==> c= c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c? / c/\ cMEM b0 f0 c= cFST f5 cFST b0 cF
+ |- ((?b. ((((MEM (FST x)) ((core L) f1)) /\ (?x. (((MEM x) N) /\ (((core L) f1) = ((core L) x))))) /\ ((((MEM (FST x)) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (((core L) f1) = b))))) = ((\a. (?b. ((((MEM (FST x)) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM (FST x)) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))) ((core L) f1)))
T c= c? / c/\ c/\ cMEM cFST f0 ccore f1 f2 c? / c/\ cMEM b1 f3 c= ccore f1 f2 ccore f1 b1 c/\ c/\ cMEM cFST f0 b0 c? / c/\ cMEM b1 f3 c= b0 ccore f1 b1 c~ c= ccore f1 f2 b0 * / c? / c/\ c/\ cMEM cFST f0 b0 c? / c/\ cMEM b2 f3 c= b0 ccore f1 b2 c/\ c/\ cMEM cFST f0 b1 c? / c/\ cMEM b2 f3 c= b1 ccore f1 b2 c~ c= b0 b1 ccore f1 f2
+ (uniq ((MAP (core L)) N)), (((core L) f1) = ((core L) f2)), ((MEM f1) N), ((MEM f2) N) |- (((uniq ((MAP (core L)) N)) ==> (!u. (!v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v))))) ==> (f1 = f2))
T c==> cuniq cMAP * part ccore f0 f1 c==> c= ccore f0 f2 ccore f0 f3 c==> cMEM f2 f1 c==> cMEM f3 f1 c==> c==> cuniq cMAP * part ccore f0 f1 ! ! c==> c/\ cMEM b0 f1 c/\ cMEM b1 f1 c= ccore f0 b0 ccore f0 b1 c= b0 b1 c= f2 f3
+ (good_list L), (v = (FST x)), (v = (FST x')), ((MEM x') f2), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- (((MEM (FST x)) ((core L) f2)) /\ (?x. (((MEM x) N) /\ (((core L) f2) = ((core L) x)))))
T c==> cgood_list f0 c==> c= f1 cFST f2 c==> c= f1 cFST f3 c==> cMEM f3 f4 c==> cMEM f5 f6 c==> cMEM f4 f6 c==> cnormal_list f0 f6 c/\ cMEM cFST f2 ccore f0 f4 c? / c/\ cMEM b0 f6 c= ccore f0 f4 ccore f0 b0
+ (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), (v = (FST x)), (v = (FST x')), (((core L) f1) = ((core L) f2)), ((MEM x) f1), ((MEM x') f2), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- ((((good_list L) /\ (((normal_list L) N) /\ ((MEM f2) N))) ==> (((MEM v) ((core L) f2)) = ((MEM v) ((MAP FST) f2)))) ==> F)
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cgood_list f3 c==> c= f2 cFST f5 c==> c= f2 cFST f6 c==> c= ccore f3 f0 ccore f3 f1 c==> cMEM f5 f0 c==> cMEM f6 f1 c==> cMEM f0 f4 c==> cMEM f1 f4 c==> cnormal_list f3 f4 c==> c==> c/\ cgood_list f3 c/\ cnormal_list f3 f4 cMEM f1 f4 c= cMEM f2 ccore f3 f1 cMEM f2 cMAP part cFST f1 cF
+ (uniq ((quotient_list L) N)) |- ((uniq ((quotient_list L) N)) = T)
T c==> cuniq cquotient_list f0 f1 c= cuniq cquotient_list f0 f1 cT
+ (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (v = (FST x)), (v = (FST x')), ((?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))), (((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))), (((core L) f1) = ((core L) f2)), ((MEM x) f1), ((MEM x') f2), ((MEM f1) N), ((MEM f2) N) |- (((?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) /\ F)
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> c= f2 cFST f5 c==> c= f2 cFST f6 c==> c= c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c? / c/\ cMEM b0 f0 c= cFST f5 cFST b0 c==> c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c==> c= ccore f3 f0 ccore f3 f1 c==> cMEM f5 f0 c==> cMEM f6 f1 c==> cMEM f0 f4 c==> cMEM f1 f4 c/\ c= c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c? / c/\ cMEM b0 f0 c= cFST f5 cFST b0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (uniq ((filter (MEM v)) ((quotient_list L) N))) |- (((NUMERAL (BIT1 _0)) < (sizel ((filter (MEM v)) ((quotient_list L) N)))) = (?a. (?b. (((MEM a) ((filter (MEM v)) ((quotient_list L) N))) /\ (((MEM b) ((filter (MEM v)) ((quotient_list L) N))) /\ (~ (a = b)))))))
T c==> cuniq cfilter * part cMEM f0 cquotient_list f1 f2 c= c< cNUMERAL cBIT1 c_0 csizel cfilter * part cMEM f0 cquotient_list f1 f2 c? / c? / c/\ cMEM b0 cfilter * part cMEM f0 cquotient_list f1 f2 c/\ cMEM b1 cfilter * part cMEM f0 cquotient_list f1 f2 c~ c= b0 b1
+ |- ((((MEM x') f2) /\ ((FST x) = (FST x'))) = ((\x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) x'))
T c= c/\ cMEM f0 f1 c= cFST f2 cFST f0 * / c/\ cMEM b0 f1 c= cFST f2 cFST b0 f0
+ ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
+ (~ (a = b)), (good_list L), (a = ((core L) x)), ((MEM v) a), ((MEM v) b), ((MEM x) N), ((normal_list L) N) |- ((((MEM x') N) /\ (b = ((core L) x'))) ==> (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))))
T c==> c~ c= f0 f1 c==> cgood_list f2 c==> c= f0 ccore f2 f3 c==> cMEM f4 f0 c==> cMEM f4 f1 c==> cMEM f3 f5 c==> cnormal_list f2 f5 c==> c/\ cMEM f6 f5 c= f1 ccore f2 f6 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f5 c/\ cMEM b1 f5 c/\ c? / c/\ cMEM b2 b0 c= f4 cFST b2 c? / c/\ cMEM b2 b1 c= f4 cFST b2
+ |- ((\N. (((quotient_list L) N) = ((MAP (core L)) N))) N)
T * / c= cquotient_list f0 b0 cMAP * part ccore f0 b0 f1
+ (good_list L), ((MEM v) a), ((normal_list L) N) |- (((MEM f1) N) ==> ((a = ((core L) f1)) ==> (((MEM v) b) ==> (((MEM f2) N) ==> ((b = ((core L) f2)) ==> ((~ (a = b)) ==> (?x. (((MEM x) f1) /\ (v = (FST x))))))))))
T c==> cgood_list f0 c==> cMEM f1 f2 c==> cnormal_list f0 f3 c==> cMEM f4 f3 c==> c= f2 ccore f0 f4 c==> cMEM f1 f5 c==> cMEM f6 f3 c==> c= f5 ccore f0 f6 c==> c~ c= f2 f5 c? / c/\ cMEM b0 f4 c= f1 cFST b0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), (v = (FST x)), (v = (FST x')), (((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))), (((core L) f1) = ((core L) f2)), ((MEM x) f1), ((MEM x') f2), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- F
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cgood_list f3 c==> c= f2 cFST f5 c==> c= f2 cFST f6 c==> c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c==> c= ccore f3 f0 ccore f3 f1 c==> cMEM f5 f0 c==> cMEM f6 f1 c==> cMEM f0 f4 c==> cMEM f1 f4 c==> cnormal_list f3 f4 cF
+ (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), (v = (FST x)), (v = (FST x')), ((MEM x) f1), ((MEM x') f2), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- ((((core L) f1) = ((core L) f2)) ==> F)
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cgood_list f3 c==> c= f2 cFST f5 c==> c= f2 cFST f6 c==> cMEM f5 f0 c==> cMEM f6 f1 c==> cMEM f0 f4 c==> cMEM f1 f4 c==> cnormal_list f3 f4 c==> c= ccore f3 f0 ccore f3 f1 cF
+ (((all uniq) L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((MEM v) (flatten ((quotient_list L) N)))))))) |- ((((all uniq) L) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((normal_list L) N) /\ ((MEM v) (flatten ((quotient_list L) N)))))))) /\ (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2))))))))))
T c==> c/\ call part cuniq f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 cMEM f2 cflatten cquotient_list f0 f1 c/\ c/\ call part cuniq f0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cnormal_list f0 f1 cMEM f2 cflatten cquotient_list f0 f1 c= c> csizel cfilter * part cMEM f2 cquotient_list f0 f1 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ cMEM f2 cMAP part cFST b0 cMEM f2 cMAP part cFST b1
+ (good_list L), ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))), ((MEM v) a), ((normal_list L) N) |- ((((\x. (((MEM x) N) /\ (a = ((core L) x)))) x) ==> (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))))) = T)
T c==> cgood_list f0 c==> c/\ c/\ cMEM f1 f2 c? / c/\ cMEM b0 f3 c= f2 ccore f0 b0 c~ c= f4 f2 c==> cMEM f1 f4 c==> cnormal_list f0 f3 c= c==> * / c/\ cMEM b0 f3 c= f4 ccore f0 b0 f5 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f3 c/\ cMEM b1 f3 c/\ c? / c/\ cMEM b2 b0 c= f1 cFST b2 c? / c/\ cMEM b2 b1 c= f1 cFST b2 cT
+ (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), (v = (FST x)), ((MEM x) f1), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- ((((\x. (((MEM x) f2) /\ (v = (FST x)))) x') ==> (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))))) = T)
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cgood_list f3 c==> c= f2 cFST f5 c==> cMEM f5 f0 c==> cMEM f0 f4 c==> cMEM f1 f4 c==> cnormal_list f3 f4 c= c==> * / c/\ cMEM b0 f1 c= f2 cFST b0 f6 c? / c? / c/\ c/\ cMEM f2 b0 c? / c/\ cMEM b2 f4 c= b0 ccore f3 b2 c/\ c/\ cMEM f2 b1 c? / c/\ cMEM b2 f4 c= b1 ccore f3 b2 c~ c= b0 b1 cT
+ (good_list L), (v = (FST x)), (((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))), ((MEM x) f1), ((MEM f1) N), ((normal_list L) N) |- ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) /\ ((MEM (FST x)) ((core L) f1)))
T c==> cgood_list f0 c==> c= f1 cFST f2 c==> c= cMEM cFST f2 ccore f0 f3 c? / c/\ cMEM b0 f3 c= cFST f2 cFST b0 c==> cMEM f2 f4 c==> cMEM f4 f5 c==> cnormal_list f0 f5 c/\ c= cMEM cFST f2 ccore f0 f3 c? / c/\ cMEM b0 f3 c= cFST f2 cFST b0 cMEM cFST f2 ccore f0 f4
+ |- (((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))) = ((\f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))) f2))
T c= c/\ c~ c= f0 f1 c/\ cMEM f0 f2 c/\ cMEM f1 f2 c/\ c? / c/\ cMEM b0 f0 c= f3 cFST b0 c? / c/\ cMEM b0 f1 c= f3 cFST b0 * / c/\ c~ c= f0 b0 c/\ cMEM f0 f2 c/\ cMEM b0 f2 c/\ c? / c/\ cMEM b1 f0 c= f3 cFST b1 c? / c/\ cMEM b1 b0 c= f3 cFST b1 f1
+ (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), (v = (FST x)), (v = (FST x')), (((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))), (((core L) f1) = ((core L) f2)), ((MEM x) f1), ((MEM x') f2), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- ((((good_list L) /\ (((normal_list L) N) /\ ((MEM f1) N))) ==> (((MEM v) ((core L) f1)) = ((MEM v) ((MAP FST) f1)))) ==> F)
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cgood_list f3 c==> c= f2 cFST f5 c==> c= f2 cFST f6 c==> c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c==> c= ccore f3 f0 ccore f3 f1 c==> cMEM f5 f0 c==> cMEM f6 f1 c==> cMEM f0 f4 c==> cMEM f1 f4 c==> cnormal_list f3 f4 c==> c==> c/\ cgood_list f3 c/\ cnormal_list f3 f4 cMEM f0 f4 c= cMEM f2 ccore f3 f0 cMEM f2 cMAP part cFST f0 cF
+ ((\x. (((MEM x) f1) /\ (v = (FST x)))) x) |- (((((MEM x) f1) /\ (v = (FST x))) ==> (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))))) = (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))))
T c==> * / c/\ cMEM b0 f0 c= f1 cFST b0 f2 c= c==> c/\ cMEM f2 f0 c= f1 cFST f2 c? / c? / c/\ c/\ cMEM f1 b0 c? / c/\ cMEM b2 f3 c= b0 ccore f4 b2 c/\ c/\ cMEM f1 b1 c? / c/\ cMEM b2 f3 c= b1 ccore f4 b2 c~ c= b0 b1 c? / c? / c/\ c/\ cMEM f1 b0 c? / c/\ cMEM b2 f3 c= b0 ccore f4 b2 c/\ c/\ cMEM f1 b1 c? / c/\ cMEM b2 f3 c= b1 ccore f4 b2 c~ c= b0 b1
- (((real_ge (real_of_int _10350512)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (is_edge_nondegenerate (hypermap_of_list L)), (good_list L), ((all uniq) L), ((normal_list L) N) |- ((uniq L) ==> (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2))))))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cgood_list f0 c==> call part cuniq f0 c==> cnormal_list f0 f1 c==> cuniq f0 c= c> csizel cfilter * part cMEM f2 cquotient_list f0 f1 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ cMEM f2 cMAP part cFST b0 cMEM f2 cMAP part cFST b1
- (~ (f1 = f2)) |- (((~ (f2 = f1)) ==> ((f2 = f1) = F)) = ((f2 = f1) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
- |- ((x' = f2) = ((\f2. (x' = f2)) f2))
T c= c= f0 f1 * / c= f0 b0 f1
- (~ (f1 = f2)) |- ((f1 = f2) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), ((normal_list L) N) |- (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))))
T c==> c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f0 c/\ cMEM b1 f0 c/\ c? / c/\ cMEM b2 b0 c= f1 cFST b2 c? / c/\ cMEM b2 b1 c= f1 cFST b2 c==> cuniq cfilter * part cMEM f1 cquotient_list f2 f0 c==> cuniq cquotient_list f2 f0 c==> cgood_list f2 c==> cnormal_list f2 f0 c? / c? / c/\ c/\ cMEM f1 b0 c? / c/\ cMEM b2 f0 c= b0 ccore f2 b2 c/\ c/\ cMEM f1 b1 c? / c/\ cMEM b2 f0 c= b1 ccore f2 b2 c~ c= b0 b1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (uniq r) |- ((uniq r) /\ (((NUMERAL (BIT1 _0)) < (sizel r)) = (?a. (?b. (((MEM a) r) /\ (((MEM b) r) /\ (~ (a = b))))))))
T c==> cuniq f0 c/\ cuniq f0 c= c< cNUMERAL cBIT1 c_0 csizel f0 c? / c? / c/\ cMEM b0 f0 c/\ cMEM b1 f0 c~ c= b0 b1
- (((real_ge (real_of_int _10350512)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))), (good_list L), ((normal_list L) N) |- (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))))
T c==> c? / c? / c/\ c/\ cMEM f0 b0 c? / c/\ cMEM b2 f1 c= b0 ccore f2 b2 c/\ c/\ cMEM f0 b1 c? / c/\ cMEM b2 f1 c= b1 ccore f2 b2 c~ c= b0 b1 c==> cgood_list f2 c==> cnormal_list f2 f1 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ c? / c/\ cMEM b2 b0 c= f0 cFST b2 c? / c/\ cMEM b2 b1 c= f0 cFST b2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (uniq ((filter (MEM v)) ((quotient_list L) N))) |- ((uniq ((filter (MEM v)) ((quotient_list L) N))) = T)
T c==> cuniq cfilter * part cMEM f0 cquotient_list f1 f2 c= cuniq cfilter * part cMEM f0 cquotient_list f1 f2 cT
- (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (v = (FST x)), ((MEM x) f1), ((MEM x') f2), ((MEM f1) N), ((MEM f2) N) |- ((v = (FST x')) ==> ((((core L) f1) = ((core L) f2)) ==> ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) ==> (((?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) ==> F))))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> c= f2 cFST f5 c==> cMEM f5 f0 c==> cMEM f6 f1 c==> cMEM f0 f4 c==> cMEM f1 f4 c==> c= f2 cFST f6 c==> c= ccore f3 f0 ccore f3 f1 c==> c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c==> c= c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c? / c/\ cMEM b0 f0 c= cFST f5 cFST b0 cF
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10350512)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (good_list_nodes L) |- ((good_list_nodes L) = T)
T c==> cgood_list_nodes f0 c= cgood_list_nodes f0 cT
- |- ((?f2. (x' = f2)) ==> (?f2. (x' = f2)))
T c==> c? / c= f0 b0 c? / c= f0 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (f2 = f1) |- (f1 = f2)
T c==> c= f0 f1 c= f1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((\f2. (x' = f2)) f2) |- (((x' = f2) ==> (?f2. (x' = f2))) = (?f2. (x' = f2)))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c? / c= f0 b0 c? / c= f0 b0
- (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), ((normal_list L) N) |- (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))))
T c==> c? / c/\ c~ c= f0 b0 c/\ cMEM f0 f1 c/\ cMEM b0 f1 c/\ c? / c/\ cMEM b1 f0 c= f2 cFST b1 c? / c/\ cMEM b1 b0 c= f2 cFST b1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f1 c==> cuniq cquotient_list f3 f1 c==> cgood_list f3 c==> cnormal_list f3 f1 c? / c? / c/\ c/\ cMEM f2 b0 c? / c/\ cMEM b2 f1 c= b0 ccore f3 b2 c/\ c/\ cMEM f2 b1 c? / c/\ cMEM b2 f1 c= b1 ccore f3 b2 c~ c= b0 b1
- (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), ((normal_list L) N) |- ((?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))) /\ (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))))
T c==> c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f0 c/\ cMEM b1 f0 c/\ c? / c/\ cMEM b2 b0 c= f1 cFST b2 c? / c/\ cMEM b2 b1 c= f1 cFST b2 c==> cuniq cfilter * part cMEM f1 cquotient_list f2 f0 c==> cuniq cquotient_list f2 f0 c==> cgood_list f2 c==> cnormal_list f2 f0 c/\ c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f0 c/\ cMEM b1 f0 c/\ c? / c/\ cMEM b2 b0 c= f1 cFST b2 c? / c/\ cMEM b2 b1 c= f1 cFST b2 c? / c? / c/\ c/\ cMEM f1 b0 c? / c/\ cMEM b2 f0 c= b0 ccore f2 b2 c/\ c/\ cMEM f1 b1 c? / c/\ cMEM b2 f0 c= b1 ccore f2 b2 c~ c= b0 b1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_ge ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!u. (!v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v)))) |- ((!u. (!v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v)))) /\ (!u. (!v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v)))))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= ccore f1 b0 ccore f1 b1 c= b0 b1 c/\ ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= ccore f1 b0 ccore f1 b1 c= b0 b1 ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= ccore f1 b0 ccore f1 b1 c= b0 b1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x' = f2) |- ((x' = f2) /\ (?f2. (x' = f2)))
T c==> c= f0 f1 c/\ c= f0 f1 c? / c= f0 b0
- ((\f2. (x' = f2)) f2) |- (((\f2. (x' = f2)) f2) /\ (?f2. (x' = f2)))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c? / c= f0 b0
- (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))), (good_list L), ((normal_list L) N) |- (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))))
T c==> c? / c/\ c/\ cMEM f0 f1 c? / c/\ cMEM b1 f2 c= f1 ccore f3 b1 c/\ c/\ cMEM f0 b0 c? / c/\ cMEM b1 f2 c= b0 ccore f3 b1 c~ c= f1 b0 c==> cgood_list f3 c==> cnormal_list f3 f2 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f2 c/\ cMEM b1 f2 c/\ c? / c/\ cMEM b2 b0 c= f0 cFST b2 c? / c/\ cMEM b2 b1 c= f0 cFST b2
- (uniq ((filter (MEM v)) ((quotient_list L) N))) |- (T = (uniq ((filter (MEM v)) ((quotient_list L) N))))
T c==> cuniq cfilter * part cMEM f0 cquotient_list f1 f2 c= cT cuniq cfilter * part cMEM f0 cquotient_list f1 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10350512)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))), (good_list L), ((normal_list L) N) |- ((?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b))))) /\ (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x)))))))))))
T c==> c? / c/\ c/\ cMEM f0 f1 c? / c/\ cMEM b1 f2 c= f1 ccore f3 b1 c/\ c/\ cMEM f0 b0 c? / c/\ cMEM b1 f2 c= b0 ccore f3 b1 c~ c= f1 b0 c==> cgood_list f3 c==> cnormal_list f3 f2 c/\ c? / c/\ c/\ cMEM f0 f1 c? / c/\ cMEM b1 f2 c= f1 ccore f3 b1 c/\ c/\ cMEM f0 b0 c? / c/\ cMEM b1 f2 c= b0 ccore f3 b1 c~ c= f1 b0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f2 c/\ cMEM b1 f2 c/\ c? / c/\ cMEM b2 b0 c= f0 cFST b2 c? / c/\ cMEM b2 b1 c= f0 cFST b2
- (((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) |- ((!u. (!v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v)))) ==> (u = v))
T c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 c= ccore f3 f0 ccore f3 f2 c==> ! ! c==> c/\ cMEM b0 f1 c/\ cMEM b1 f1 c= ccore f3 b0 ccore f3 b1 c= b0 b1 c= f0 f2
- (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), ((MEM f1) N), ((MEM f2) N) |- (((MEM f2) N) /\ (((MEM x) f1) ==> ((v = (FST x)) ==> (((MEM x') f2) ==> ((v = (FST x')) ==> ((((core L) f1) = ((core L) f2)) ==> ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) ==> (((?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) ==> F))))))))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cMEM f0 f4 c==> cMEM f1 f4 c/\ cMEM f1 f4 c==> cMEM f5 f0 c==> c= f2 cFST f5 c==> cMEM f6 f1 c==> c= f2 cFST f6 c==> c= ccore f3 f0 ccore f3 f1 c==> c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c==> c= c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c? / c/\ cMEM b0 f0 c= cFST f5 cFST b0 cF
- (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (v = (FST x)), (v = (FST x')), (((core L) f1) = ((core L) f2)), ((MEM x) f1), ((MEM x') f2), ((MEM f1) N), ((MEM f2) N) |- ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) ==> (((?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) ==> F))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> c= f2 cFST f5 c==> c= f2 cFST f6 c==> c= ccore f3 f0 ccore f3 f1 c==> cMEM f5 f0 c==> cMEM f6 f1 c==> cMEM f0 f4 c==> cMEM f1 f4 c==> c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c==> c= c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c? / c/\ cMEM b0 f0 c= cFST f5 cFST b0 cF
- |- (((!x. (((\f2. (x' = f2)) x) ==> (?f2. (x' = f2)))) ==> ((?f2. (x' = f2)) ==> (?f2. (x' = f2)))) = ((?f2. (x' = f2)) ==> (?f2. (x' = f2))))
T c= c==> ! c==> * / c= f0 b1 b0 c? / c= f0 b1 c==> c? / c= f0 b0 c? / c= f0 b0 c==> c? / c= f0 b0 c? / c= f0 b0
- (((real_ge (real_of_int _10350512)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!u. (!v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v)))), (((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) |- ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) /\ (u = v))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= ccore f1 b0 ccore f1 b1 c= b0 b1 c==> c/\ cMEM f2 f0 c/\ cMEM f3 f0 c= ccore f1 f2 ccore f1 f3 c/\ c/\ cMEM f2 f0 c/\ cMEM f3 f0 c= ccore f1 f2 ccore f1 f3 c= f2 f3
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- ((x' = f2) ==> (?f2. (x' = f2)))
T c==> c= f0 f1 c? / c= f0 b0
- (good_list L), (v = (FST x)), (((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) /\ (?x. (((MEM x) N) /\ (((core L) f2) = ((core L) x)))))
T c==> cgood_list f0 c==> c= f1 cFST f2 c==> c= cMEM cFST f2 ccore f0 f3 c? / c/\ cMEM b0 f3 c= cFST f2 cFST b0 c==> cMEM f4 f5 c==> cMEM f3 f5 c==> cnormal_list f0 f5 c/\ c= cMEM cFST f2 ccore f0 f3 c? / c/\ cMEM b0 f3 c= cFST f2 cFST b0 c? / c/\ cMEM b0 f5 c= ccore f0 f3 ccore f0 b0
- (~ (f1 = f2)) |- (~ (f2 = f1))
T c==> c~ c= f0 f1 c~ c= f1 f0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _10350512)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (f1 = f2)) |- ((f2 = f1) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)) |- (((MEM f1) N) ==> (((MEM f2) N) ==> (((MEM x) f1) ==> ((v = (FST x)) ==> (((MEM x') f2) ==> ((v = (FST x')) ==> ((((core L) f1) = ((core L) f2)) ==> ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) ==> (((?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) ==> F)))))))))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cMEM f0 f4 c==> cMEM f1 f4 c==> cMEM f5 f0 c==> c= f2 cFST f5 c==> cMEM f6 f1 c==> c= f2 cFST f6 c==> c= ccore f3 f0 ccore f3 f1 c==> c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c==> c= c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c? / c/\ cMEM b0 f0 c= cFST f5 cFST b0 cF
- (good_list L), (v = (FST x)), ((MEM f1) N), ((MEM f2) N), ((normal_list L) N) |- ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) ==> (?x. (((MEM x) N) /\ (((core L) f2) = ((core L) x)))))
T c==> cgood_list f0 c==> c= f1 cFST f2 c==> cMEM f3 f4 c==> cMEM f5 f4 c==> cnormal_list f0 f4 c==> c= cMEM cFST f2 ccore f0 f5 c? / c/\ cMEM b0 f5 c= cFST f2 cFST b0 c? / c/\ cMEM b0 f4 c= ccore f0 f5 ccore f0 b0
- (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (v = (FST x)), (v = (FST x')), ((MEM x) f1), ((MEM x') f2), ((MEM f1) N), ((MEM f2) N) |- ((((core L) f1) = ((core L) f2)) ==> ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) ==> (((?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) ==> F)))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> c= f2 cFST f5 c==> c= f2 cFST f6 c==> cMEM f5 f0 c==> cMEM f6 f1 c==> cMEM f0 f4 c==> cMEM f1 f4 c==> c= ccore f3 f0 ccore f3 f1 c==> c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c==> c= c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c? / c/\ cMEM b0 f0 c= cFST f5 cFST b0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), ((MEM x) f1), ((MEM f1) N), ((MEM f2) N) |- (((MEM x) f1) /\ ((v = (FST x)) ==> (((MEM x') f2) ==> ((v = (FST x')) ==> ((((core L) f1) = ((core L) f2)) ==> ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) ==> (((?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) ==> F)))))))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> cMEM f5 f0 c==> cMEM f0 f4 c==> cMEM f1 f4 c/\ cMEM f5 f0 c==> c= f2 cFST f5 c==> cMEM f6 f1 c==> c= f2 cFST f6 c==> c= ccore f3 f0 ccore f3 f1 c==> c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c==> c= c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c? / c/\ cMEM b0 f0 c= cFST f5 cFST b0 cF
- (((real_ge (real_of_int _10350512)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10350512))) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add (real_of_int _10350512)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (x' = f2) |- ((\f2. (x' = f2)) f2)
T c==> c= f0 f1 * / c= f0 b0 f1
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (good_list L) |- (((uniq L) ==> (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2)))))))))) = (((good_list L) ==> (uniq L)) ==> (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2)))))))))))
T c==> cgood_list f0 c= c==> cuniq f0 c= c> csizel cfilter * part cMEM f1 cquotient_list f0 f2 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f2 c/\ cMEM b1 f2 c/\ cMEM f1 cMAP part cFST b0 cMEM f1 cMAP part cFST b1 c==> c==> cgood_list f0 cuniq f0 c= c> csizel cfilter * part cMEM f1 cquotient_list f0 f2 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f2 c/\ cMEM b1 f2 c/\ cMEM f1 cMAP part cFST b0 cMEM f1 cMAP part cFST b1
- (!u. (!v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v)))), (((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) |- ((!u. (!v. ((((MEM u) N) /\ (((MEM v) N) /\ (((core L) u) = ((core L) v)))) ==> (u = v)))) /\ (u = v))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= ccore f1 b0 ccore f1 b1 c= b0 b1 c==> c/\ cMEM f2 f0 c/\ cMEM f3 f0 c= ccore f1 f2 ccore f1 f3 c/\ ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= ccore f1 b0 ccore f1 b1 c= b0 b1 c= f2 f3
- (uniq L) |- ((uniq L) = T)
T c==> cuniq f0 c= cuniq f0 cT
- (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (good_list L), ((normal_list L) N) |- ((?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ ((?x. (((MEM x) f1) /\ (v = (FST x)))) /\ (?x. (((MEM x) f2) /\ (v = (FST x))))))))) /\ (?a. (?b. ((((MEM v) a) /\ (?x. (((MEM x) N) /\ (a = ((core L) x))))) /\ ((((MEM v) b) /\ (?x. (((MEM x) N) /\ (b = ((core L) x))))) /\ (~ (a = b)))))))
T c==> c? / c/\ c~ c= f0 b0 c/\ cMEM f0 f1 c/\ cMEM b0 f1 c/\ c? / c/\ cMEM b1 f0 c= f2 cFST b1 c? / c/\ cMEM b1 b0 c= f2 cFST b1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f1 c==> cuniq cquotient_list f3 f1 c==> cgood_list f3 c==> cnormal_list f3 f1 c/\ c? / c/\ c~ c= f0 b0 c/\ cMEM f0 f1 c/\ cMEM b0 f1 c/\ c? / c/\ cMEM b1 f0 c= f2 cFST b1 c? / c/\ cMEM b1 b0 c= f2 cFST b1 c? / c? / c/\ c/\ cMEM f2 b0 c? / c/\ cMEM b2 f1 c= b0 ccore f3 b2 c/\ c/\ cMEM f2 b1 c? / c/\ cMEM b2 f1 c= b1 ccore f3 b2 c~ c= b0 b1
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (v = (FST x)), (v = (FST x')), (((core L) f1) = ((core L) f2)), ((MEM x) f1), ((MEM x') f2), ((MEM f1) N), ((MEM f2) N) |- ((((core L) f1) = ((core L) f2)) /\ ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) ==> (((?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) ==> F)))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> c= f2 cFST f5 c==> c= f2 cFST f6 c==> c= ccore f3 f0 ccore f3 f1 c==> cMEM f5 f0 c==> cMEM f6 f1 c==> cMEM f0 f4 c==> cMEM f1 f4 c/\ c= ccore f3 f0 ccore f3 f1 c==> c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c==> c= c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c? / c/\ cMEM b0 f0 c= cFST f5 cFST b0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (v = (FST x)), (v = (FST x')), (((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))), (((core L) f1) = ((core L) f2)), ((MEM x) f1), ((MEM x') f2), ((MEM f1) N), ((MEM f2) N) |- ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) /\ (((?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) ==> F))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> c= f2 cFST f5 c==> c= f2 cFST f6 c==> c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c==> c= ccore f3 f0 ccore f3 f1 c==> cMEM f5 f0 c==> cMEM f6 f1 c==> cMEM f0 f4 c==> cMEM f1 f4 c/\ c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c==> c= c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c? / c/\ cMEM b0 f0 c= cFST f5 cFST b0 cF
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!L. ((good_list L) ==> (uniq L))) ==> ((\L. ((good_list L) ==> (uniq L))) L)) = ((\L. ((good_list L) ==> (uniq L))) L))
T c= c==> ! c==> cgood_list b0 cuniq b0 * / c==> cgood_list b0 cuniq b0 f0 * / c==> cgood_list b0 cuniq b0 f0
- |- ((((\f2. (x' = f2)) f2) ==> (?f2. (x' = f2))) = T)
T c= c==> * / c= f0 b0 f1 c? / c= f0 b0 cT
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (is_edge_nondegenerate (hypermap_of_list L)), (uniq L), (good_list L), ((all uniq) L), ((normal_list L) N) |- ((uniq L) /\ (((sizel ((filter (MEM v)) ((quotient_list L) N))) > (NUMERAL (BIT1 _0))) = (?f1. (?f2. ((~ (f1 = f2)) /\ (((MEM f1) N) /\ (((MEM f2) N) /\ (((MEM v) ((MAP FST) f1)) /\ ((MEM v) ((MAP FST) f2))))))))))
T c==> cis_edge_nondegenerate chypermap_of_list f0 c==> cuniq f0 c==> cgood_list f0 c==> call part cuniq f0 c==> cnormal_list f0 f1 c/\ cuniq f0 c= c> csizel cfilter * part cMEM f2 cquotient_list f0 f1 cNUMERAL cBIT1 c_0 c? / c? / c/\ c~ c= b0 b1 c/\ cMEM b0 f1 c/\ cMEM b1 f1 c/\ cMEM f2 cMAP part cFST b0 cMEM f2 cMAP part cFST b1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (f1 = f2)), (uniq ((filter (MEM v)) ((quotient_list L) N))), (uniq ((quotient_list L) N)), (v = (FST x)), ((MEM x) f1), ((MEM x') f2), ((MEM f1) N), ((MEM f2) N) |- (((MEM x') f2) /\ ((v = (FST x')) ==> ((((core L) f1) = ((core L) f2)) ==> ((((MEM (FST x)) ((core L) f2)) = (?x'. (((MEM x') f2) /\ ((FST x) = (FST x'))))) ==> (((?x'. (((MEM x') f2) /\ ((FST x) = (FST x')))) = (?x'. (((MEM x') f1) /\ ((FST x) = (FST x'))))) ==> F)))))
T c==> c~ c= f0 f1 c==> cuniq cfilter * part cMEM f2 cquotient_list f3 f4 c==> cuniq cquotient_list f3 f4 c==> c= f2 cFST f5 c==> cMEM f5 f0 c==> cMEM f6 f1 c==> cMEM f0 f4 c==> cMEM f1 f4 c/\ cMEM f6 f1 c==> c= f2 cFST f6 c==> c= ccore f3 f0 ccore f3 f1 c==> c= cMEM cFST f5 ccore f3 f1 c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c==> c= c? / c/\ cMEM b0 f1 c= cFST f5 cFST b0 c? / c/\ cMEM b0 f0 c= cFST f5 cFST b0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- ((MEM v) (flatten ((quotient_list L) N))) |- (((MEM v) (flatten ((quotient_list L) N))) = T)
T c==> cMEM f0 cflatten cquotient_list f1 f2 c= cMEM f0 cflatten cquotient_list f1 f2 cT
