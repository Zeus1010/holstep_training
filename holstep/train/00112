N VECTOR_POLYNOMIAL_FUNCTION_COMPONENT
C |- (!f. (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (vector_polynomial_function f))) ==> (vector_polynomial_function (\x. (lift ((f x) $ i)))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV cvector_polynomial_function f1 cvector_polynomial_function / clift c$ * f1 b0 f0
D TRUTH
A |- T
T cT
D DIMINDEX_1
A |- ((dimindex UNIV) = (NUMERAL (BIT1 _0)))
T c= cdimindex part cUNIV cNUMERAL cBIT1 c_0
D FORALL_1
A |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (NUMERAL (BIT1 _0)))) ==> (P i))) = (P (NUMERAL (BIT1 _0))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 c_0 * f0 b0 * f0 cNUMERAL cBIT1 c_0
D drop
A |- (!x. ((drop x) = (x $ (NUMERAL (BIT1 _0)))))
T c= cdrop f0 c$ f0 cNUMERAL cBIT1 c_0
D LIFT_DROP
A |- ((!x. ((lift (drop x)) = x)) /\ (!x. ((drop (lift x)) = x)))
T c/\ ! c= clift cdrop b0 b0 ! c= cdrop clift b0 b0
D vector_polynomial_function
A |- (!f. ((vector_polynomial_function f) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))))))
T c= cvector_polynomial_function f0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f0 b1 b0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (vector_polynomial_function f))) ==> (vector_polynomial_function (\x. (lift ((f x) $ i))))) = ((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) ==> T))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV cvector_polynomial_function f1 cvector_polynomial_function / clift c$ * f1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 cT
- |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= creal_polynomial_function / c$ clift c$ * f2 b0 f3 f0 f4 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f2 b0 f3 f0 c==> f1 f4
- |- (((!x. ((lift (drop x)) = x)) ==> ((\x. ((lift (drop x)) = x)) x)) = ((\x. ((lift (drop x)) = x)) x))
T c= c==> ! c= clift cdrop b0 b0 * / c= clift cdrop b0 b0 f0 * / c= clift cdrop b0 b0 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))), (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) /\ ((real_polynomial_function (\x. ((f x) $ i'))) = T))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 cdimindex part cUNIV c= creal_polynomial_function / c$ * f1 b0 f2 cT
+ |- (((!x. ((drop (lift x)) = x)) ==> ((\x. ((drop (lift x)) = x)) x)) = ((\x. ((drop (lift x)) = x)) x))
T c= c==> ! c= cdrop clift b0 b0 * / c= cdrop clift b0 b0 f0 * / c= cdrop clift b0 b0 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) |- ((i <= (dimindex UNIV)) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 c= c<= f0 cdimindex part cUNIV cT
+ (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) |- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV
+ |- ((!i'. ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))))) = (real_polynomial_function (\x. ((lift ((f x) $ i)) $ (NUMERAL (BIT1 _0))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f0 b1 f1 b0 creal_polynomial_function / c$ clift c$ * f0 b0 f1 cNUMERAL cBIT1 c_0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (vector_polynomial_function f))) = (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))))))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) ==> ((vector_polynomial_function (\x. (lift ((f x) $ i)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (vector_polynomial_function f))) ==> (vector_polynomial_function (\x. (lift ((f x) $ i))))) = ((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) ==> ((vector_polynomial_function (\x. (lift ((f x) $ i)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (vector_polynomial_function f))) ==> (vector_polynomial_function (\x. (lift ((f x) $ i))))) = ((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV cvector_polynomial_function f1 c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 c= cvector_polynomial_function / clift c$ * f1 b0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV cvector_polynomial_function f1 cvector_polynomial_function / clift c$ * f1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 f2 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 c= cvector_polynomial_function / clift c$ * f1 b0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV cvector_polynomial_function f1 cvector_polynomial_function / clift c$ * f1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 f2
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (vector_polynomial_function f))) = p') ==> ((p' ==> ((vector_polynomial_function (\x. (lift ((f x) $ i)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (vector_polynomial_function f))) ==> (vector_polynomial_function (\x. (lift ((f x) $ i))))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV cvector_polynomial_function f1 f2 c==> c==> f2 c= cvector_polynomial_function / clift c$ * f1 b0 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV cvector_polynomial_function f1 cvector_polynomial_function / clift c$ * f1 b0 f0 c==> f2 f3
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) ==> ((vector_polynomial_function (\x. (lift ((f x) $ i)))) = T))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 c= cvector_polynomial_function / clift c$ * f1 b0 f0 cT
- |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_polynomial_function / c$ clift c$ * f1 b2 f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f1 b2 f2 f0 c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_polynomial_function / c$ clift c$ * f1 b2 f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f1 b2 f2 f0 c==> b0 b1 f3 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_polynomial_function / c$ clift c$ * f1 b2 f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f1 b2 f2 f0 c==> b0 b1 f3
+ |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> (real_polynomial_function (\x. (((\x. (lift ((f x) $ i))) x) $ i')))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * / clift c$ * f1 b1 f2 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_polynomial_function (\x. ((f x) $ i))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> q')))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_polynomial_function / c$ * f1 b0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f2
+ ((drop x) = (x $ (NUMERAL (BIT1 _0)))) |- ((x $ (NUMERAL (BIT1 _0))) = (drop x))
T c==> c= cdrop f0 c$ f0 cNUMERAL cBIT1 c_0 c= c$ f0 cNUMERAL cBIT1 c_0 cdrop f0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((NUMERAL (BIT1 _0)) <= i) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c<= cNUMERAL cBIT1 c_0 f0 cT
+ |- ((drop (lift x)) = x)
T c= cdrop clift f0 f0
- |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0
- |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((real_polynomial_function (\x. ((f x) $ i))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= creal_polynomial_function / c$ * f1 b2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b2 f0 c==> b0 b1 f2
- (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) |- ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) /\ ((real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))) = (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0 creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0
+ |- ((x $ (NUMERAL (BIT1 _0))) = (drop x))
T c= c$ f0 cNUMERAL cBIT1 c_0 cdrop f0
- |- ((((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> ((real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))) = (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))))) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))))) = (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0 creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0
+ |- (((!f. ((vector_polynomial_function f) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) ==> ((\f. ((vector_polynomial_function f) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) f)) = ((\f. ((vector_polynomial_function f) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) f))
T c= c==> ! c= cvector_polynomial_function b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV creal_polynomial_function / c$ * b0 b2 b1 * / c= cvector_polynomial_function b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV creal_polynomial_function / c$ * b0 b2 b1 f0 * / c= cvector_polynomial_function b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV creal_polynomial_function / c$ * b0 b2 b1 f0
+ |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> ((real_polynomial_function (\x. (((\x. (lift ((f x) $ i))) x) $ i'))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> (real_polynomial_function (\x. (((\x. (lift ((f x) $ i))) x) $ i')))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= creal_polynomial_function / c$ * / clift c$ * f1 b3 f2 b2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * / clift c$ * f1 b3 f2 b2 f0 c==> b0 b1 f3
+ (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) /\ ((vector_polynomial_function (\x. (lift ((f x) $ i)))) = T))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 c= cvector_polynomial_function / clift c$ * f1 b0 f0 cT
- |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> ((real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> q')))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f3
+ |- ((\x. ((x $ (NUMERAL (BIT1 _0))) = (drop x))) x)
T * / c= c$ b0 cNUMERAL cBIT1 c_0 cdrop b0 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) |- ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((real_polynomial_function (\x. ((f x) $ i'))) = T))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 cdimindex part cUNIV c= creal_polynomial_function / c$ * f1 b0 f2 cT
+ (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_polynomial_function (\x. ((f x) $ i))) = T)) = ((real_polynomial_function (\x. ((f x) $ i))) = T))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_polynomial_function / c$ * f1 b0 f0 cT c= creal_polynomial_function / c$ * f1 b0 f0 cT
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- |- ((((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) = (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0))))) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> ((real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> ((real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f3 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f3
- |- ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> ((real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))) = (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0 creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0
- |- (((!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= creal_polynomial_function / c$ clift c$ * f2 b1 f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f2 b1 f3 f0 c==> f1 b0 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= creal_polynomial_function / c$ clift c$ * f2 b1 f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f2 b1 f3 f0 c==> f1 b0 f4 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= creal_polynomial_function / c$ clift c$ * f2 b1 f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f2 b1 f3 f0 c==> f1 b0 f4
+ |- (((!x. ((x $ (NUMERAL (BIT1 _0))) = (drop x))) ==> ((\x. ((x $ (NUMERAL (BIT1 _0))) = (drop x))) x)) = ((\x. ((x $ (NUMERAL (BIT1 _0))) = (drop x))) x))
T c= c==> ! c= c$ b0 cNUMERAL cBIT1 c_0 cdrop b0 * / c= c$ b0 cNUMERAL cBIT1 c_0 cdrop b0 f0 * / c= c$ b0 cNUMERAL cBIT1 c_0 cdrop b0 f0
+ |- ((((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> ((real_polynomial_function (\x. (((\x. (lift ((f x) $ i))) x) $ i'))) = (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))))) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> (real_polynomial_function (\x. (((\x. (lift ((f x) $ i))) x) $ i')))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))))) = (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> (real_polynomial_function (\x. (((\x. (lift ((f x) $ i))) x) $ i')))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_polynomial_function / c$ * / clift c$ * f1 b1 f2 b0 f0 creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * / clift c$ * f1 b1 f2 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * / clift c$ * f1 b1 f2 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f1 b0 f2 f0
+ |- ((((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0))))) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> ((real_polynomial_function (\x. (((\x. (lift ((f x) $ i))) x) $ i'))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> (real_polynomial_function (\x. (((\x. (lift ((f x) $ i))) x) $ i')))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> ((real_polynomial_function (\x. (((\x. (lift ((f x) $ i))) x) $ i'))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> (real_polynomial_function (\x. (((\x. (lift ((f x) $ i))) x) $ i')))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_polynomial_function / c$ * / clift c$ * f1 b1 f2 b0 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * / clift c$ * f1 b1 f2 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f3 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= creal_polynomial_function / c$ * / clift c$ * f1 b1 f2 b0 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * / clift c$ * f1 b1 f2 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f3
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b0 f0
+ ((x $ (NUMERAL (BIT1 _0))) = (drop x)) |- ((drop x) = (x $ (NUMERAL (BIT1 _0))))
T c==> c= c$ f0 cNUMERAL cBIT1 c_0 cdrop f0 c= cdrop f0 c$ f0 cNUMERAL cBIT1 c_0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ ((real_polynomial_function (\x. ((f x) $ i))) = (real_polynomial_function (\x. ((f x) $ i)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_polynomial_function / c$ * f1 b0 f0 creal_polynomial_function / c$ * f1 b0 f0
- |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_polynomial_function (\x. ((f x) $ i))) = (real_polynomial_function (\x. ((f x) $ i)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_polynomial_function / c$ * f1 b0 f0 creal_polynomial_function / c$ * f1 b0 f0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((real_polynomial_function (\x. ((f x) $ i))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))) = (p' ==> q'))))
T c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= creal_polynomial_function / c$ * f2 b0 f0 f3 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f2 b0 f0 c==> f1 f3
+ (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))) i')) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))) i'))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 f2 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 f2
+ |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) = p') ==> ((p' ==> ((real_polynomial_function (\x. (((\x. (lift ((f x) $ i))) x) $ i'))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> (real_polynomial_function (\x. (((\x. (lift ((f x) $ i))) x) $ i')))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= creal_polynomial_function / c$ * / clift c$ * f2 b2 f3 b1 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * / clift c$ * f2 b2 f3 b1 f0 c==> f1 b0 f4
+ |- ((\x. ((drop (lift x)) = x)) x)
T * / c= cdrop clift b0 b0 f0
- |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((real_polynomial_function (\x. ((f x) $ i))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= creal_polynomial_function / c$ * f2 b1 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f2 b1 f0 c==> f1 b0 f3
+ (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) |- (((NUMERAL (BIT1 _0)) <= i) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 c= c<= cNUMERAL cBIT1 c_0 f0 cT
+ |- (((!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (vector_polynomial_function f))) = p') ==> ((p' ==> ((vector_polynomial_function (\x. (lift ((f x) $ i)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (vector_polynomial_function f))) ==> (vector_polynomial_function (\x. (lift ((f x) $ i))))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (vector_polynomial_function f))) = p') ==> ((p' ==> ((vector_polynomial_function (\x. (lift ((f x) $ i)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (vector_polynomial_function f))) ==> (vector_polynomial_function (\x. (lift ((f x) $ i))))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (vector_polynomial_function f))) = p') ==> ((p' ==> ((vector_polynomial_function (\x. (lift ((f x) $ i)))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (vector_polynomial_function f))) ==> (vector_polynomial_function (\x. (lift ((f x) $ i))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV cvector_polynomial_function f1 f2 c==> c==> f2 c= cvector_polynomial_function / clift c$ * f1 b1 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV cvector_polynomial_function f1 cvector_polynomial_function / clift c$ * f1 b1 f0 c==> f2 b0 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV cvector_polynomial_function f1 f2 c==> c==> f2 c= cvector_polynomial_function / clift c$ * f1 b1 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV cvector_polynomial_function f1 cvector_polynomial_function / clift c$ * f1 b1 f0 c==> f2 b0 f3 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV cvector_polynomial_function f1 f2 c==> c==> f2 c= cvector_polynomial_function / clift c$ * f1 b1 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV cvector_polynomial_function f1 cvector_polynomial_function / clift c$ * f1 b1 f0 c==> f2 b0 f3
+ (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))) |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0
- |- ((\x. ((lift (drop x)) = x)) x)
T * / c= clift cdrop b0 b0 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ ((i <= (dimindex UNIV)) /\ (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))), (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- (real_polynomial_function (\x. ((f x) $ i')))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= f0 cdimindex part cUNIV ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b1 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b0 f2
- |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_polynomial_function (\x. ((f x) $ i))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> q')))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_polynomial_function (\x. ((f x) $ i))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> q'))))
T c= c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_polynomial_function / c$ * f1 b0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f2 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_polynomial_function / c$ * f1 b0 f0 f2 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f2
- |- (((!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((real_polynomial_function (\x. ((f x) $ i))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))) = (p' ==> q'))))) ==> ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((real_polynomial_function (\x. ((f x) $ i))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))) = (p' ==> q'))))) q')) = ((\q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((real_polynomial_function (\x. ((f x) $ i))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= creal_polynomial_function / c$ * f2 b1 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f2 b1 f0 c==> f1 b0 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= creal_polynomial_function / c$ * f2 b1 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f2 b1 f0 c==> f1 b0 f3 * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV f1 c==> c==> f1 c= creal_polynomial_function / c$ * f2 b1 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f2 b1 f0 c==> f1 b0 f3
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((i <= (dimindex UNIV)) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c<= f0 cdimindex part cUNIV cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_polynomial_function / c$ clift c$ * f1 b2 f2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f1 b2 f2 f0 c==> b0 b1 f3
- |- (((!p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((real_polynomial_function (\x. ((f x) $ i))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((real_polynomial_function (\x. ((f x) $ i))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) = p') ==> ((p' ==> ((real_polynomial_function (\x. ((f x) $ i))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= creal_polynomial_function / c$ * f1 b2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b2 f0 c==> b0 b1 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= creal_polynomial_function / c$ * f1 b2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b2 f0 c==> b0 b1 f2 * / ! c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV b0 c==> c==> b0 c= creal_polynomial_function / c$ * f1 b2 f0 b1 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b2 f0 c==> b0 b1 f2
- (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) |- (((NUMERAL (BIT1 _0)) <= i') = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c<= cNUMERAL cBIT1 c_0 f0 cT
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((\q'. (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> ((real_polynomial_function (\x. ((lift ((f x) $ i)) $ i'))) = q')) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) ==> (real_polynomial_function (\x. ((lift ((f x) $ i)) $ i')))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= creal_polynomial_function / c$ clift c$ * f2 b1 f3 f0 b0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 creal_polynomial_function / c$ clift c$ * f2 b1 f3 f0 c==> f1 b0 f4
- (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (NUMERAL (BIT1 _0)))) |- ((i' <= (NUMERAL (BIT1 _0))) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0 c= c<= f0 cNUMERAL cBIT1 c_0 cT
- |- ((lift (drop x)) = x)
T c= clift cdrop f0 f0
- |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((real_polynomial_function (\x. ((f x) $ i))) = (real_polynomial_function (\x. ((f x) $ i))))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i)))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (real_polynomial_function (\x. ((f x) $ i))))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_polynomial_function / c$ * f1 b0 f0 creal_polynomial_function / c$ * f1 b0 f0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b0 f0 c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV creal_polynomial_function / c$ * f1 b0 f0
