N Tame_opposite.edge_CARD_dart
C |- (!H. (((plain_hypermap H) /\ (is_edge_nondegenerate H)) ==> ((CARD (dart H)) = ((NUMERAL (BIT0 (BIT1 _0))) * (number_of_edges H)))))
T c==> c/\ cplain_hypermap f0 cis_edge_nondegenerate f0 c= cCARD * part cdart f0 c* cNUMERAL cBIT0 cBIT1 c_0 cnumber_of_edges f0
D TRUTH
A |- T
T cT
D FUN_EQ_THM
A |- (!f. (!g. ((f = g) = (!x. ((f x) = (g x))))))
T c= c= f0 f1 ! c= * f0 b0 * f1 b0
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D Hypermap.hypermap_lemma
A |- (!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))))
T c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
D Hypermap.number_of_orbits
A |- (!D. (!f. (((number_of_orbits D) f) = (CARD ((set_of_orbits D) f)))))
T c= cnumber_of_orbits f0 f1 cCARD * * part cset_of_orbits f0 f1
D Hypermap.edge_set
A |- (!H. ((edge_set H) = ((set_of_orbits (dart H)) (edge_map H))))
T c= * part cedge_set f0 * * part cset_of_orbits * part cdart f0 * part cedge_map f0
D Hypermap.number_of_edges
A |- (!H. ((number_of_edges H) = (CARD (edge_set H))))
T c= cnumber_of_edges f0 cCARD * part cedge_set f0
D Hypermap.plain_hypermap
A |- (!H. ((plain_hypermap H) = (((edge_map H) o (edge_map H)) = I)))
T c= cplain_hypermap f0 c= * * part co * part cedge_map f0 * part cedge_map f0 part cI
D Hypermap.is_edge_nondegenerate
A |- (!H. ((is_edge_nondegenerate H) = (!x. ((x IN (dart H)) ==> (~ (((edge_map H) x) = x))))))
T c= cis_edge_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c~ c= cedge_map f0 b0 b0
D Hypermap.lemma_card_eq
A |- (!s. (!p. (!m. (((FINITE s) /\ (((permutes p) s) /\ (!x. ((x IN s) ==> ((CARD ((orbit_map p) x)) = m))))) ==> ((CARD s) = (m * ((number_of_orbits s) p)))))))
T c==> c/\ cFINITE f0 c/\ cpermutes f1 f0 ! c==> cIN b0 f0 c= cCARD * * part corbit_map f1 b0 f2 c= cCARD f0 c* f2 cnumber_of_orbits f0 f1
D Hypermap.lemma_orbit_of_size_2
A |- (!s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (((CARD ((orbit_map p) x)) = (NUMERAL (BIT0 (BIT1 _0)))) = ((~ ((p x) = x)) /\ ((p (p x)) = x))))))
T c==> c/\ cFINITE f0 cpermutes f1 f0 c= c= cCARD * * part corbit_map f1 f2 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= * f1 f2 f2 c= * f1 * f1 f2 f2
+ |- ((\f. (((number_of_orbits D) f) = (CARD ((set_of_orbits D) f)))) f)
T * / c= cnumber_of_orbits f0 b0 cCARD * * part cset_of_orbits f0 b0 f1
+ |- (((!x. ((I x) = x)) ==> ((\x. ((I x) = x)) x)) = ((\x. ((I x) = x)) x))
T c= c==> ! c= cI b0 b0 * / c= cI b0 b0 f0 * / c= cI b0 b0 f0
+ |- ((\m. (!s. (!p. (((FINITE s) /\ (((permutes p) s) /\ (!x. ((x IN s) ==> ((CARD ((orbit_map p) x)) = m))))) ==> ((CARD s) = (m * (CARD ((set_of_orbits s) p)))))))) m)
T * / ! ! c==> c/\ cFINITE b1 c/\ cpermutes b2 b1 ! c==> cIN b3 b1 c= cCARD * * part corbit_map b2 b3 b0 c= cCARD b1 c* b0 cCARD * * part cset_of_orbits b1 b2 f0
+ |- (((T ==> ((~ (((edge_map H) x) = x)) = (~ (((edge_map H) x) = x)))) ==> (((x IN (dart H)) ==> (~ (((edge_map H) x) = x))) = (T ==> (~ (((edge_map H) x) = x))))) = (((x IN (dart H)) ==> (~ (((edge_map H) x) = x))) = (T ==> (~ (((edge_map H) x) = x)))))
T c= c==> c==> cT c= c~ c= cedge_map f0 f1 f1 c~ c= cedge_map f0 f1 f1 c= c==> cIN f1 * part cdart f0 c~ c= cedge_map f0 f1 f1 c==> cT c~ c= cedge_map f0 f1 f1 c= c==> cIN f1 * part cdart f0 c~ c= cedge_map f0 f1 f1 c==> cT c~ c= cedge_map f0 f1 f1
+ (!x. ((x IN (dart H)) ==> (~ (((edge_map H) x) = x)))) |- ((((x IN (dart H)) ==> (~ (((edge_map H) x) = x))) ==> ((~ (((edge_map H) x) = x)) /\ (((edge_map H) ((edge_map H) x)) = x))) = ((~ (((edge_map H) x) = x)) /\ (((edge_map H) ((edge_map H) x)) = x)))
T c==> ! c==> cIN b0 * part cdart f0 c~ c= cedge_map f0 b0 b0 c= c==> c==> cIN f1 * part cdart f0 c~ c= cedge_map f0 f1 f1 c/\ c~ c= cedge_map f0 f1 f1 c= cedge_map f0 cedge_map f0 f1 f1 c/\ c~ c= cedge_map f0 f1 f1 c= cedge_map f0 cedge_map f0 f1 f1
+ (!x. ((x IN (dart H)) ==> (~ (((edge_map H) x) = x)))), (((edge_map H) o (edge_map H)) = I), (x IN (dart H)) |- ((((FINITE (dart H)) /\ ((permutes (edge_map H)) (dart H))) ==> (((CARD ((orbit_map (edge_map H)) x)) = (NUMERAL (BIT0 (BIT1 _0)))) = ((~ (((edge_map H) x) = x)) /\ (((edge_map H) ((edge_map H) x)) = x)))) ==> ((CARD ((orbit_map (edge_map H)) x)) = (NUMERAL (BIT0 (BIT1 _0)))))
T c==> ! c==> cIN b0 * part cdart f0 c~ c= cedge_map f0 b0 b0 c==> c= * * part co * part cedge_map f0 * part cedge_map f0 part cI c==> cIN f1 * part cdart f0 c==> c==> c/\ cFINITE * part cdart f0 cpermutes * part cedge_map f0 * part cdart f0 c= c= cCARD * * part corbit_map * part cedge_map f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cedge_map f0 f1 f1 c= cedge_map f0 cedge_map f0 f1 f1 c= cCARD * * part corbit_map * part cedge_map f0 f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!H. ((plain_hypermap H) = (((edge_map H) o (edge_map H)) = I))) ==> ((\H. ((plain_hypermap H) = (((edge_map H) o (edge_map H)) = I))) H)) = ((\H. ((plain_hypermap H) = (((edge_map H) o (edge_map H)) = I))) H))
T c= c==> ! c= cplain_hypermap b0 c= * * part co * part cedge_map b0 * part cedge_map b0 part cI * / c= cplain_hypermap b0 c= * * part co * part cedge_map b0 * part cedge_map b0 part cI f0 * / c= cplain_hypermap b0 c= * * part co * part cedge_map b0 * part cedge_map b0 part cI f0
+ (!x. (((edge_map H) ((edge_map H) x)) = x)), (x IN (dart H)) |- ((!x. (((edge_map H) ((edge_map H) x)) = x)) /\ ((((x IN (dart H)) ==> (~ (((edge_map H) x) = x))) ==> ((~ (((edge_map H) x) = x)) /\ (((edge_map H) ((edge_map H) x)) = x))) = T))
T c==> ! c= cedge_map f0 cedge_map f0 b0 b0 c==> cIN f1 * part cdart f0 c/\ ! c= cedge_map f0 cedge_map f0 b0 b0 c= c==> c==> cIN f1 * part cdart f0 c~ c= cedge_map f0 f1 f1 c/\ c~ c= cedge_map f0 f1 f1 c= cedge_map f0 cedge_map f0 f1 f1 cT
+ |- ((\q'. (((((edge_map H) o (edge_map H)) = I) = p') ==> ((p' ==> ((((x IN (dart H)) ==> (~ (((edge_map H) x) = x))) ==> ((~ (((edge_map H) x) = x)) /\ (((edge_map H) ((edge_map H) x)) = x))) = q')) ==> (((((edge_map H) o (edge_map H)) = I) ==> (((x IN (dart H)) ==> (~ (((edge_map H) x) = x))) ==> ((~ (((edge_map H) x) = x)) /\ (((edge_map H) ((edge_map H) x)) = x)))) = (p' ==> q'))))) q')
T * / c==> c= c= * * part co * part cedge_map f0 * part cedge_map f0 part cI f1 c==> c==> f1 c= c==> c==> cIN f2 * part cdart f0 c~ c= cedge_map f0 f2 f2 c/\ c~ c= cedge_map f0 f2 f2 c= cedge_map f0 cedge_map f0 f2 f2 b0 c= c==> c= * * part co * part cedge_map f0 * part cedge_map f0 part cI c==> c==> cIN f2 * part cdart f0 c~ c= cedge_map f0 f2 f2 c/\ c~ c= cedge_map f0 f2 f2 c= cedge_map f0 cedge_map f0 f2 f2 c==> f1 b0 f3
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ (!s. (!p. (!m. (((FINITE s) /\ (((permutes p) s) /\ (!x. ((x IN s) ==> ((CARD ((orbit_map p) x)) = m))))) ==> ((CARD s) = (m * (CARD ((set_of_orbits s) p)))))))) |- (((!p. (!m. (((FINITE s) /\ (((permutes p) s) /\ (!x. ((x IN s) ==> ((CARD ((orbit_map p) x)) = m))))) ==> ((CARD s) = (m * (CARD ((set_of_orbits s) p))))))) ==> ((\p. (!m. (((FINITE s) /\ (((permutes p) s) /\ (!x. ((x IN s) ==> ((CARD ((orbit_map p) x)) = m))))) ==> ((CARD s) = (m * (CARD ((set_of_orbits s) p))))))) p)) = ((\p. (!m. (((FINITE s) /\ (((permutes p) s) /\ (!x. ((x IN s) ==> ((CARD ((orbit_map p) x)) = m))))) ==> ((CARD s) = (m * (CARD ((set_of_orbits s) p))))))) p))
T c==> ! ! ! c==> c/\ cFINITE b0 c/\ cpermutes b1 b0 ! c==> cIN b3 b0 c= cCARD * * part corbit_map b1 b3 b2 c= cCARD b0 c* b2 cCARD * * part cset_of_orbits b0 b1 c= c==> ! ! c==> c/\ cFINITE f0 c/\ cpermutes b0 f0 ! c==> cIN b2 f0 c= cCARD * * part corbit_map b0 b2 b1 c= cCARD f0 c* b1 cCARD * * part cset_of_orbits f0 b0 * / ! c==> c/\ cFINITE f0 c/\ cpermutes b0 f0 ! c==> cIN b2 f0 c= cCARD * * part corbit_map b0 b2 b1 c= cCARD f0 c* b1 cCARD * * part cset_of_orbits f0 b0 f1 * / ! c==> c/\ cFINITE f0 c/\ cpermutes b0 f0 ! c==> cIN b2 f0 c= cCARD * * part corbit_map b0 b2 b1 c= cCARD f0 c* b1 cCARD * * part cset_of_orbits f0 b0 f1
+ |- ((\s. (!p. (((FINITE s) /\ (((permutes p) s) /\ (!x. ((x IN s) ==> ((CARD ((orbit_map p) x)) = m))))) ==> ((CARD s) = (m * (CARD ((set_of_orbits s) p))))))) s)
T * / ! c==> c/\ cFINITE b0 c/\ cpermutes b1 b0 ! c==> cIN b2 b0 c= cCARD * * part corbit_map b1 b2 f0 c= cCARD b0 c* f0 cCARD * * part cset_of_orbits b0 b1 f1
+ (!s. (!p. (!m. (((FINITE s) /\ (((permutes p) s) /\ (!x. ((x IN s) ==> ((CARD ((orbit_map p) x)) = m))))) ==> ((CARD s) = (m * (CARD ((set_of_orbits s) p)))))))) |- ((((FINITE s) /\ (((permutes p) s) /\ (!x. ((x IN s) ==> ((CARD ((orbit_map p) x)) = m))))) ==> ((CARD s) = (m * (CARD ((set_of_orbits s) p))))) = T)
T c==> ! ! ! c==> c/\ cFINITE b0 c/\ cpermutes b1 b0 ! c==> cIN b3 b0 c= cCARD * * part corbit_map b1 b3 b2 c= cCARD b0 c* b2 cCARD * * part cset_of_orbits b0 b1 c= c==> c/\ cFINITE f0 c/\ cpermutes f1 f0 ! c==> cIN b0 f0 c= cCARD * * part corbit_map f1 b0 f2 c= cCARD f0 c* f2 cCARD * * part cset_of_orbits f0 f1 cT
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((!x. (((edge_map H) ((edge_map H) x)) = x)) ==> ((((x IN (dart H)) ==> (~ (((edge_map H) x) = x))) ==> ((~ (((edge_map H) x) = x)) /\ (((edge_map H) ((edge_map H) x)) = x))) = q')) ==> (((((edge_map H) o (edge_map H)) = I) ==> (((x IN (dart H)) ==> (~ (((edge_map H) x) = x))) ==> ((~ (((edge_map H) x) = x)) /\ (((edge_map H) ((edge_map H) x)) = x)))) = ((!x. (((edge_map H) ((edge_map H) x)) = x)) ==> q')))
T c==> c==> ! c= cedge_map f0 cedge_map f0 b0 b0 c= c==> c==> cIN f1 * part cdart f0 c~ c= cedge_map f0 f1 f1 c/\ c~ c= cedge_map f0 f1 f1 c= cedge_map f0 cedge_map f0 f1 f1 f2 c= c==> c= * * part co * part cedge_map f0 * part cedge_map f0 part cI c==> c==> cIN f1 * part cdart f0 c~ c= cedge_map f0 f1 f1 c/\ c~ c= cedge_map f0 f1 f1 c= cedge_map f0 cedge_map f0 f1 f1 c==> ! c= cedge_map f0 cedge_map f0 b0 b0 f2
+ |- (((((edge_map H) o (edge_map H)) = I) /\ (!x. ((x IN (dart H)) ==> (~ (((edge_map H) x) = x))))) ==> ((CARD (dart H)) = ((NUMERAL (BIT0 (BIT1 _0))) * (number_of_edges H))))
T c==> c/\ c= * * part co * part cedge_map f0 * part cedge_map f0 part cI ! c==> cIN b0 * part cdart f0 c~ c= cedge_map f0 b0 b0 c= cCARD * part cdart f0 c* cNUMERAL cBIT0 cBIT1 c_0 cnumber_of_edges f0
+ (x IN (dart H)) |- ((!x. (((edge_map H) ((edge_map H) x)) = x)) ==> ((((x IN (dart H)) ==> (~ (((edge_map H) x) = x))) ==> ((~ (((edge_map H) x) = x)) /\ (((edge_map H) ((edge_map H) x)) = x))) = T))
T c==> cIN f0 * part cdart f1 c==> ! c= cedge_map f1 cedge_map f1 b0 b0 c= c==> c==> cIN f0 * part cdart f1 c~ c= cedge_map f1 f0 f0 c/\ c~ c= cedge_map f1 f0 f0 c= cedge_map f1 cedge_map f1 f0 f0 cT
+ (!x. ((x IN (dart H)) ==> (~ (((edge_map H) x) = x)))), (((CARD ((orbit_map (edge_map H)) x)) = (NUMERAL (BIT0 (BIT1 _0)))) = ((~ (((edge_map H) x) = x)) /\ (((edge_map H) ((edge_map H) x)) = x))), (((edge_map H) o (edge_map H)) = I), (x IN (dart H)) |- ((((CARD ((orbit_map (edge_map H)) x)) = (NUMERAL (BIT0 (BIT1 _0)))) = ((~ (((edge_map H) x) = x)) /\ (((edge_map H) ((edge_map H) x)) = x))) /\ ((CARD ((orbit_map (edge_map H)) x)) = (NUMERAL (BIT0 (BIT1 _0)))))
T c==> ! c==> cIN b0 * part cdart f0 c~ c= cedge_map f0 b0 b0 c==> c= c= cCARD * * part corbit_map * part cedge_map f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cedge_map f0 f1 f1 c= cedge_map f0 cedge_map f0 f1 f1 c==> c= * * part co * part cedge_map f0 * part cedge_map f0 part cI c==> cIN f1 * part cdart f0 c/\ c= c= cCARD * * part corbit_map * part cedge_map f0 f1 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cedge_map f0 f1 f1 c= cedge_map f0 cedge_map f0 f1 f1 c= cCARD * * part corbit_map * part cedge_map f0 f1 cNUMERAL cBIT0 cBIT1 c_0
- |- (((permutes (face_map H)) (dart H)) = T)
T c= cpermutes * part cface_map f0 * part cdart f0 cT
- (((edge_map H) x) = x) |- (x = ((edge_map H) x))
T c==> c= cedge_map f0 f1 f1 c= f1 cedge_map f0 f1
- |- ((permutes (node_map H)) (dart H))
T cpermutes * part cnode_map f0 * part cdart f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!x. t) = t)
T c= ! f0 f0
+ |- (((!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) ==> ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) H)) = ((\H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) H))
T c= c==> ! c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI f0 * / c/\ cFINITE * part cdart b0 c/\ cpermutes * part cedge_map b0 * part cdart b0 c/\ cpermutes * part cnode_map b0 * part cdart b0 c/\ cpermutes * part cface_map b0 * part cdart b0 c= * * part co * part cedge_map b0 * * part co * part cnode_map b0 * part cface_map b0 part cI f0
+ |- (((permutes (edge_map H)) (dart H)) = T)
T c= cpermutes * part cedge_map f0 * part cdart f0 cT
+ |- (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))
T c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
+ |- (((!g. (!x. (((f o g) x) = (f (g x))))) ==> ((\g. (!x. (((f o g) x) = (f (g x))))) g)) = ((\g. (!x. (((f o g) x) = (f (g x))))) g))
T c= c==> ! ! c= co f0 b0 b1 * f0 * b0 b1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1 * / ! c= co f0 b0 b1 * f0 * b0 b1 f1
- T |- (T = T)
T c==> cT c= cT cT
- (~ (((edge_map H) x) = x)) |- ((x = ((edge_map H) x)) = F)
T c==> c~ c= cedge_map f0 f1 f1 c= c= f1 cedge_map f0 f1 cF
- ((FINITE s) /\ (((permutes p) s) /\ (!x. ((x IN s) ==> ((CARD ((orbit_map p) x)) = m))))) |- ((!s. (!p. (!m. (((FINITE s) /\ (((permutes p) s) /\ (!x. ((x IN s) ==> ((CARD ((orbit_map p) x)) = m))))) ==> ((CARD s) = (m * (CARD ((set_of_orbits s) p)))))))) ==> ((CARD s) = (m * (CARD ((set_of_orbits s) p)))))
T c==> c/\ cFINITE f0 c/\ cpermutes f1 f0 ! c==> cIN b0 f0 c= cCARD * * part corbit_map f1 b0 f2 c==> ! ! ! c==> c/\ cFINITE b0 c/\ cpermutes b1 b0 ! c==> cIN b3 b0 c= cCARD * * part corbit_map b1 b3 b2 c= cCARD b0 c* b2 cCARD * * part cset_of_orbits b0 b1 c= cCARD f0 c* f2 cCARD * * part cset_of_orbits f0 f1
- (x = ((edge_map H) x)) |- (((edge_map H) x) = x)
T c==> c= f0 cedge_map f1 f0 c= cedge_map f1 f0 f0
- |- (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))
T c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
- |- ((permutes (face_map H)) (dart H))
T cpermutes * part cface_map f0 * part cdart f0
- (!s. (!p. (!m. (((FINITE s) /\ (((permutes p) s) /\ (!x. ((x IN s) ==> ((CARD ((orbit_map p) x)) = m))))) ==> ((CARD s) = (m * (CARD ((set_of_orbits s) p)))))))), ((FINITE s) /\ (((permutes p) s) /\ (!x. ((x IN s) ==> ((CARD ((orbit_map p) x)) = m))))) |- (((FINITE s) /\ (((permutes p) s) /\ (!x. ((x IN s) ==> ((CARD ((orbit_map p) x)) = m))))) /\ ((CARD s) = (m * (CARD ((set_of_orbits s) p)))))
T c==> ! ! ! c==> c/\ cFINITE b0 c/\ cpermutes b1 b0 ! c==> cIN b3 b0 c= cCARD * * part corbit_map b1 b3 b2 c= cCARD b0 c* b2 cCARD * * part cset_of_orbits b0 b1 c==> c/\ cFINITE f0 c/\ cpermutes f1 f0 ! c==> cIN b0 f0 c= cCARD * * part corbit_map f1 b0 f2 c/\ c/\ cFINITE f0 c/\ cpermutes f1 f0 ! c==> cIN b0 f0 c= cCARD * * part corbit_map f1 b0 f2 c= cCARD f0 c* f2 cCARD * * part cset_of_orbits f0 f1
- (!s. (!p. (!m. (((FINITE s) /\ (((permutes p) s) /\ (!x. ((x IN s) ==> ((CARD ((orbit_map p) x)) = m))))) ==> ((CARD s) = (m * (CARD ((set_of_orbits s) p)))))))), ((FINITE s) /\ (((permutes p) s) /\ (!x. ((x IN s) ==> ((CARD ((orbit_map p) x)) = m))))) |- ((!s. (!p. (!m. (((FINITE s) /\ (((permutes p) s) /\ (!x. ((x IN s) ==> ((CARD ((orbit_map p) x)) = m))))) ==> ((CARD s) = (m * (CARD ((set_of_orbits s) p)))))))) /\ ((CARD s) = (m * (CARD ((set_of_orbits s) p)))))
T c==> ! ! ! c==> c/\ cFINITE b0 c/\ cpermutes b1 b0 ! c==> cIN b3 b0 c= cCARD * * part corbit_map b1 b3 b2 c= cCARD b0 c* b2 cCARD * * part cset_of_orbits b0 b1 c==> c/\ cFINITE f0 c/\ cpermutes f1 f0 ! c==> cIN b0 f0 c= cCARD * * part corbit_map f1 b0 f2 c/\ ! ! ! c==> c/\ cFINITE b0 c/\ cpermutes b1 b0 ! c==> cIN b3 b0 c= cCARD * * part corbit_map b1 b3 b2 c= cCARD b0 c* b2 cCARD * * part cset_of_orbits b0 b1 c= cCARD f0 c* f2 cCARD * * part cset_of_orbits f0 f1
- |- (((permutes (node_map H)) (dart H)) = T)
T c= cpermutes * part cnode_map f0 * part cdart f0 cT
- |- (((edge_map H) o ((node_map H) o (face_map H))) = I)
T c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
- |- (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))
T c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
- (~ (((edge_map H) x) = x)) |- (((~ (x = ((edge_map H) x))) ==> ((x = ((edge_map H) x)) = F)) = ((x = ((edge_map H) x)) = F))
T c==> c~ c= cedge_map f0 f1 f1 c= c==> c~ c= f1 cedge_map f0 f1 c= c= f1 cedge_map f0 f1 cF c= c= f1 cedge_map f0 f1 cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (~ (((edge_map H) x) = x)) |- (~ (x = ((edge_map H) x)))
T c==> c~ c= cedge_map f0 f1 f1 c~ c= f1 cedge_map f0 f1
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
