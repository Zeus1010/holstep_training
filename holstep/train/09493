N Aq12.indexf_map
C |- (((uniq s) /\ ((!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))) /\ (((MEM y) s) /\ ((MEM z) s)))) ==> ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s)))
T c==> c/\ cuniq f0 c/\ ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c/\ cMEM f2 f0 cMEM f3 f0 c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cindexf f2 f3 f0
D Seq.size
A |- (sizel = LENGTH)
T c= part csizel part cLENGTH
D Seq.map_MAP
A |- (map = MAP)
T c= part cmap part cMAP
D Seq.size_map
A |- (!f. (!s. ((sizel ((map f) s)) = (sizel s))))
T c= csizel cmap f0 f1 csizel f1
D Tame_list.MEMf_MAP
A |- (!f. (!x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))))))
T c==> cMEM f0 f1 cMEM * f2 f0 cMAP f2 f1
D Tame_list.indexl_map
A |- (!y. (!d. (!f. (((uniq y) /\ (((MEM d) y) /\ (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v)))))) ==> (((indexl (f d)) ((MAP f) y)) = ((indexl d) y))))))
T c==> c/\ cuniq f0 c/\ cMEM f1 f0 ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f2 b0 * f2 b1 c= b0 b1 c= cindexl * f2 f1 cMAP f2 f0 cindexl f1 f0
D Tame_list.indexf_cond
A |- (!x. (!y. (!s. ((((MEM x) s) /\ ((MEM y) s)) ==> ((((indexf x) y) s) = (((COND (((indexl x) s) <= ((indexl y) s))) (((indexl y) s) - ((indexl x) s))) (((indexl y) s) + ((sizel s) - ((indexl x) s)))))))))
T c==> c/\ cMEM f0 f1 cMEM f2 f1 c= cindexf f0 f2 f1 cCOND c<= cindexl f0 f1 cindexl f2 f1 c- cindexl f2 f1 cindexl f0 f1 c+ cindexl f2 f1 c- csizel f1 cindexl f0 f1
+ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))), (uniq s), ((MEM y) s), ((MEM z) s) |- (((((indexf (f y)) (f z)) ((MAP f) s)) = (((COND (((indexl (f y)) ((MAP f) s)) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))))) ==> ((((indexf (f y)) (f z)) ((MAP f) s)) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s))))))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c==> cuniq f0 c==> cMEM f2 f0 c==> cMEM f3 f0 c==> c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cCOND c<= cindexl * f1 f2 cMAP f1 f0 cindexl * f1 f3 cMAP f1 f0 c- cindexl * f1 f3 cMAP f1 f0 cindexl * f1 f2 cMAP f1 f0 c+ cindexl * f1 f3 cMAP f1 f0 c- csizel cMAP f1 f0 cindexl * f1 f2 cMAP f1 f0 c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cCOND c<= cindexl f2 f0 cindexl f3 f0 c- cindexl f3 f0 cindexl f2 f0 c+ cindexl f3 f0 c- csizel f0 cindexl f2 f0
+ |- (((!s. ((sizel ((map f) s)) = (sizel s))) ==> ((\s. ((sizel ((map f) s)) = (sizel s))) s)) = ((\s. ((sizel ((map f) s)) = (sizel s))) s))
T c= c==> ! c= csizel cmap f0 b0 csizel b0 * / c= csizel cmap f0 b0 csizel b0 f1 * / c= csizel cmap f0 b0 csizel b0 f1
- (sizel = LENGTH) |- (LENGTH = sizel)
T c==> c= part csizel part cLENGTH c= part cLENGTH part csizel
+ (((indexl (f z)) ((MAP f) s)) = ((indexl z) s)) |- ((((indexl (f z)) ((MAP f) s)) = ((indexl z) s)) /\ ((((COND (((indexl y) s) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl y) s))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl y) s)))) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s))))))
T c==> c= cindexl * f0 f1 cMAP f0 f2 cindexl f1 f2 c/\ c= cindexl * f0 f1 cMAP f0 f2 cindexl f1 f2 c= cCOND c<= cindexl f3 f2 cindexl * f0 f1 cMAP f0 f2 c- cindexl * f0 f1 cMAP f0 f2 cindexl f3 f2 c+ cindexl * f0 f1 cMAP f0 f2 c- csizel cMAP f0 f2 cindexl f3 f2 cCOND c<= cindexl f3 f2 cindexl f1 f2 c- cindexl f1 f2 cindexl f3 f2 c+ cindexl f1 f2 c- csizel f2 cindexl f3 f2
+ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))), (uniq s), ((MEM (f y)) ((MAP f) s)), ((MEM y) s), ((MEM z) s) |- (((MEM (f z)) ((MAP f) s)) ==> ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s)))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c==> cuniq f0 c==> cMEM * f1 f2 cMAP f1 f0 c==> cMEM f2 f0 c==> cMEM f3 f0 c==> cMEM * f1 f3 cMAP f1 f0 c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cindexf f2 f3 f0
+ |- ((\x. (!y. (!s. ((((MEM x) s) /\ ((MEM y) s)) ==> ((((indexf x) y) s) = (((COND (((indexl x) s) <= ((indexl y) s))) (((indexl y) s) - ((indexl x) s))) (((indexl y) s) + ((sizel s) - ((indexl x) s))))))))) (f y))
T * / ! ! c==> c/\ cMEM b0 b2 cMEM b1 b2 c= cindexf b0 b1 b2 cCOND c<= cindexl b0 b2 cindexl b1 b2 c- cindexl b1 b2 cindexl b0 b2 c+ cindexl b1 b2 c- csizel b2 cindexl b0 b2 * f0 f1
+ (((indexl (f y)) ((MAP f) s)) = ((indexl y) s)) |- (((((COND (((indexl y) s) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl y) s))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl y) s)))) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s))))) = ((((COND (((indexl (f y)) ((MAP f) s)) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl (f y)) ((MAP f) s))))) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s))))))
T c==> c= cindexl * f0 f1 cMAP f0 f2 cindexl f1 f2 c= c= cCOND c<= cindexl f1 f2 cindexl * f0 f3 cMAP f0 f2 c- cindexl * f0 f3 cMAP f0 f2 cindexl f1 f2 c+ cindexl * f0 f3 cMAP f0 f2 c- csizel cMAP f0 f2 cindexl f1 f2 cCOND c<= cindexl f1 f2 cindexl f3 f2 c- cindexl f3 f2 cindexl f1 f2 c+ cindexl f3 f2 c- csizel f2 cindexl f1 f2 c= cCOND c<= cindexl * f0 f1 cMAP f0 f2 cindexl * f0 f3 cMAP f0 f2 c- cindexl * f0 f3 cMAP f0 f2 cindexl * f0 f1 cMAP f0 f2 c+ cindexl * f0 f3 cMAP f0 f2 c- csizel cMAP f0 f2 cindexl * f0 f1 cMAP f0 f2 cCOND c<= cindexl f1 f2 cindexl f3 f2 c- cindexl f3 f2 cindexl f1 f2 c+ cindexl f3 f2 c- csizel f2 cindexl f1 f2
+ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))), (uniq s), ((MEM y) s), ((MEM z) s) |- ((((COND (((indexl (f y)) ((MAP f) s)) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl (f y)) ((MAP f) s))))) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s)))))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c==> cuniq f0 c==> cMEM f2 f0 c==> cMEM f3 f0 c= cCOND c<= cindexl * f1 f2 cMAP f1 f0 cindexl * f1 f3 cMAP f1 f0 c- cindexl * f1 f3 cMAP f1 f0 cindexl * f1 f2 cMAP f1 f0 c+ cindexl * f1 f3 cMAP f1 f0 c- csizel cMAP f1 f0 cindexl * f1 f2 cMAP f1 f0 cCOND c<= cindexl f2 f0 cindexl f3 f0 c- cindexl f3 f0 cindexl f2 f0 c+ cindexl f3 f0 c- csizel f0 cindexl f2 f0
+ |- ((((MEM (f y)) ((MAP f) s)) /\ ((MEM (f z)) ((MAP f) s))) ==> ((((indexf (f y)) (f z)) ((MAP f) s)) = (((COND (((indexl (f y)) ((MAP f) s)) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))))))
T c==> c/\ cMEM * f0 f1 cMAP f0 f2 cMEM * f0 f3 cMAP f0 f2 c= cindexf * f0 f1 * f0 f3 cMAP f0 f2 cCOND c<= cindexl * f0 f1 cMAP f0 f2 cindexl * f0 f3 cMAP f0 f2 c- cindexl * f0 f3 cMAP f0 f2 cindexl * f0 f1 cMAP f0 f2 c+ cindexl * f0 f3 cMAP f0 f2 c- csizel cMAP f0 f2 cindexl * f0 f1 cMAP f0 f2
+ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))), (uniq s), (((MEM y) s) /\ ((MEM z) s)) |- ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c==> cuniq f0 c==> c/\ cMEM f2 f0 cMEM f3 f0 c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cindexf f2 f3 f0
+ |- ((\f. (((uniq s) /\ (((MEM z) s) /\ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))))) ==> (((indexl (f z)) ((MAP f) s)) = ((indexl z) s)))) f)
T * / c==> c/\ cuniq f0 c/\ cMEM f1 f0 ! ! c==> c/\ cMEM b1 f0 c/\ cMEM b2 f0 c= * b0 b1 * b0 b2 c= b1 b2 c= cindexl * b0 f1 cMAP b0 f0 cindexl f1 f0 f2
+ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))) |- (((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)) = T)
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c= c==> c/\ cMEM f2 f0 c/\ cMEM f3 f0 c= * f1 f2 * f1 f3 c= f2 f3 cT
- |- ((\x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s)))) x0)
T * / c==> c~ c= f0 cNIL c= clast b0 f0 cLAST f0 f1
- |- ((!s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) /\ ((cat = APPEND) /\ (all = ALL)))
T c/\ ! ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 c/\ c= part ccat part cAPPEND c= part call part cALL
- |- (((!y. (!f. (((uniq y) /\ (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) y))))) ==> ((\y. (!f. (((uniq y) /\ (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) y))))) s)) = ((\y. (!f. (((uniq y) /\ (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) y))))) s))
T c= c==> ! ! c==> c/\ cuniq b0 ! ! c==> c/\ cMEM b2 b0 c/\ cMEM b3 b0 c= * b1 b2 * b1 b3 c= b2 b3 cuniq cMAP b1 b0 * / ! c==> c/\ cuniq b0 ! ! c==> c/\ cMEM b2 b0 c/\ cMEM b3 b0 c= * b1 b2 * b1 b3 c= b2 b3 cuniq cMAP b1 b0 f0 * / ! c==> c/\ cuniq b0 ! ! c==> c/\ cMEM b2 b0 c/\ cMEM b3 b0 c= * b1 b2 * b1 b3 c= b2 b3 cuniq cMAP b1 b0 f0
+ |- ((\u. (((MEM z) u) ==> ((MEM (f z)) ((MAP f) u)))) s)
T * / c==> cMEM f0 b0 cMEM * f1 f0 cMAP f1 b0 f2
+ ((MEM (f y)) ((MAP f) s)), ((MEM (f z)) ((MAP f) s)) |- ((((((indexf (f y)) (f z)) ((MAP f) s)) = (((COND (((indexl (f y)) ((MAP f) s)) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))))) ==> ((((indexf (f y)) (f z)) ((MAP f) s)) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s)))))) = (((((MEM (f y)) ((MAP f) s)) /\ ((MEM (f z)) ((MAP f) s))) ==> ((((indexf (f y)) (f z)) ((MAP f) s)) = (((COND (((indexl (f y)) ((MAP f) s)) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl (f y)) ((MAP f) s))))))) ==> ((((indexf (f y)) (f z)) ((MAP f) s)) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s)))))))
T c==> cMEM * f0 f1 cMAP f0 f2 c==> cMEM * f0 f3 cMAP f0 f2 c= c==> c= cindexf * f0 f1 * f0 f3 cMAP f0 f2 cCOND c<= cindexl * f0 f1 cMAP f0 f2 cindexl * f0 f3 cMAP f0 f2 c- cindexl * f0 f3 cMAP f0 f2 cindexl * f0 f1 cMAP f0 f2 c+ cindexl * f0 f3 cMAP f0 f2 c- csizel cMAP f0 f2 cindexl * f0 f1 cMAP f0 f2 c= cindexf * f0 f1 * f0 f3 cMAP f0 f2 cCOND c<= cindexl f1 f2 cindexl f3 f2 c- cindexl f3 f2 cindexl f1 f2 c+ cindexl f3 f2 c- csizel f2 cindexl f1 f2 c==> c==> c/\ cMEM * f0 f1 cMAP f0 f2 cMEM * f0 f3 cMAP f0 f2 c= cindexf * f0 f1 * f0 f3 cMAP f0 f2 cCOND c<= cindexl * f0 f1 cMAP f0 f2 cindexl * f0 f3 cMAP f0 f2 c- cindexl * f0 f3 cMAP f0 f2 cindexl * f0 f1 cMAP f0 f2 c+ cindexl * f0 f3 cMAP f0 f2 c- csizel cMAP f0 f2 cindexl * f0 f1 cMAP f0 f2 c= cindexf * f0 f1 * f0 f3 cMAP f0 f2 cCOND c<= cindexl f1 f2 cindexl f3 f2 c- cindexl f3 f2 cindexl f1 f2 c+ cindexl f3 f2 c- csizel f2 cindexl f1 f2
+ |- (((!y. (!s. ((((MEM (f y)) s) /\ ((MEM y) s)) ==> ((((indexf (f y)) y) s) = (((COND (((indexl (f y)) s) <= ((indexl y) s))) (((indexl y) s) - ((indexl (f y)) s))) (((indexl y) s) + ((sizel s) - ((indexl (f y)) s)))))))) ==> ((\y. (!s. ((((MEM (f y)) s) /\ ((MEM y) s)) ==> ((((indexf (f y)) y) s) = (((COND (((indexl (f y)) s) <= ((indexl y) s))) (((indexl y) s) - ((indexl (f y)) s))) (((indexl y) s) + ((sizel s) - ((indexl (f y)) s)))))))) (f z))) = ((\y. (!s. ((((MEM (f y)) s) /\ ((MEM y) s)) ==> ((((indexf (f y)) y) s) = (((COND (((indexl (f y)) s) <= ((indexl y) s))) (((indexl y) s) - ((indexl (f y)) s))) (((indexl y) s) + ((sizel s) - ((indexl (f y)) s)))))))) (f z)))
T c= c==> ! ! c==> c/\ cMEM * f0 f1 b1 cMEM b0 b1 c= cindexf * f0 f1 b0 b1 cCOND c<= cindexl * f0 f1 b1 cindexl b0 b1 c- cindexl b0 b1 cindexl * f0 f1 b1 c+ cindexl b0 b1 c- csizel b1 cindexl * f0 f1 b1 * / ! c==> c/\ cMEM * f0 f1 b1 cMEM b0 b1 c= cindexf * f0 f1 b0 b1 cCOND c<= cindexl * f0 f1 b1 cindexl b0 b1 c- cindexl b0 b1 cindexl * f0 f1 b1 c+ cindexl b0 b1 c- csizel b1 cindexl * f0 f1 b1 * f0 f2 * / ! c==> c/\ cMEM * f0 f1 b1 cMEM b0 b1 c= cindexf * f0 f1 b0 b1 cCOND c<= cindexl * f0 f1 b1 cindexl b0 b1 c- cindexl b0 b1 cindexl * f0 f1 b1 c+ cindexl b0 b1 c- csizel b1 cindexl * f0 f1 b1 * f0 f2
+ |- (((((MEM z) s) ==> ((MEM (f z)) ((MAP f) s))) ==> ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s))) = ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s)))
T c= c==> c==> cMEM f0 f1 cMEM * f2 f0 cMAP f2 f1 c= cindexf * f2 f3 * f2 f0 cMAP f2 f1 cindexf f3 f0 f1 c= cindexf * f2 f3 * f2 f0 cMAP f2 f1 cindexf f3 f0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ ((((indexf (f y)) (f z)) ((MAP f) s)) = (((COND (((indexl (f y)) ((MAP f) s)) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))))) |- (((((COND (((indexl (f y)) ((MAP f) s)) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl (f y)) ((MAP f) s))))) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s))))) = ((((indexf (f y)) (f z)) ((MAP f) s)) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s))))))
T c==> c= cindexf * f0 f1 * f0 f2 cMAP f0 f3 cCOND c<= cindexl * f0 f1 cMAP f0 f3 cindexl * f0 f2 cMAP f0 f3 c- cindexl * f0 f2 cMAP f0 f3 cindexl * f0 f1 cMAP f0 f3 c+ cindexl * f0 f2 cMAP f0 f3 c- csizel cMAP f0 f3 cindexl * f0 f1 cMAP f0 f3 c= c= cCOND c<= cindexl * f0 f1 cMAP f0 f3 cindexl * f0 f2 cMAP f0 f3 c- cindexl * f0 f2 cMAP f0 f3 cindexl * f0 f1 cMAP f0 f3 c+ cindexl * f0 f2 cMAP f0 f3 c- csizel cMAP f0 f3 cindexl * f0 f1 cMAP f0 f3 cCOND c<= cindexl f1 f3 cindexl f2 f3 c- cindexl f2 f3 cindexl f1 f3 c+ cindexl f2 f3 c- csizel f3 cindexl f1 f3 c= cindexf * f0 f1 * f0 f2 cMAP f0 f3 cCOND c<= cindexl f1 f3 cindexl f2 f3 c- cindexl f2 f3 cindexl f1 f3 c+ cindexl f2 f3 c- csizel f3 cindexl f1 f3
- |- (((!s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) ==> ((\s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) s)) = ((\s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) s))
T c= c==> ! ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 * / ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 f0 * / ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 f0
- (REVERSE = rev) |- (rev = REVERSE)
T c==> c= part cREVERSE part crev c= part crev part cREVERSE
+ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))), (uniq s), ((MEM z) s) |- ((((COND (((indexl y) s) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl y) s))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl y) s)))) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s)))))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c==> cuniq f0 c==> cMEM f2 f0 c= cCOND c<= cindexl f3 f0 cindexl * f1 f2 cMAP f1 f0 c- cindexl * f1 f2 cMAP f1 f0 cindexl f3 f0 c+ cindexl * f1 f2 cMAP f1 f0 c- csizel cMAP f1 f0 cindexl f3 f0 cCOND c<= cindexl f3 f0 cindexl f2 f0 c- cindexl f2 f0 cindexl f3 f0 c+ cindexl f2 f0 c- csizel f0 cindexl f3 f0
+ ((MEM (f z)) ((MAP f) s)) |- (((MEM (f z)) ((MAP f) s)) = T)
T c==> cMEM * f0 f1 cMAP f0 f2 c= cMEM * f0 f1 cMAP f0 f2 cT
+ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))), (uniq s), (((indexl (f y)) ((MAP f) s)) = ((indexl y) s)), ((MEM z) s) |- ((((indexl (f y)) ((MAP f) s)) = ((indexl y) s)) /\ ((((COND (((indexl (f y)) ((MAP f) s)) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl (f y)) ((MAP f) s))))) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s))))))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c==> cuniq f0 c==> c= cindexl * f1 f2 cMAP f1 f0 cindexl f2 f0 c==> cMEM f3 f0 c/\ c= cindexl * f1 f2 cMAP f1 f0 cindexl f2 f0 c= cCOND c<= cindexl * f1 f2 cMAP f1 f0 cindexl * f1 f3 cMAP f1 f0 c- cindexl * f1 f3 cMAP f1 f0 cindexl * f1 f2 cMAP f1 f0 c+ cindexl * f1 f3 cMAP f1 f0 c- csizel cMAP f1 f0 cindexl * f1 f2 cMAP f1 f0 cCOND c<= cindexl f2 f0 cindexl f3 f0 c- cindexl f3 f0 cindexl f2 f0 c+ cindexl f3 f0 c- csizel f0 cindexl f2 f0
+ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))), (uniq s), ((MEM (f y)) ((MAP f) s)), ((MEM y) s), ((MEM z) s) |- (((MEM (f y)) ((MAP f) s)) /\ ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s)))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c==> cuniq f0 c==> cMEM * f1 f2 cMAP f1 f0 c==> cMEM f2 f0 c==> cMEM f3 f0 c/\ cMEM * f1 f2 cMAP f1 f0 c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cindexf f2 f3 f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((!v. t) = t)
T c= ! f0 f0
- |- ((filter = FILTER) /\ ((rev = REVERSE) /\ ((!s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) /\ ((cat = APPEND) /\ (all = ALL)))))
T c/\ c= part cfilter part cFILTER c/\ c= part crev part cREVERSE c/\ ! ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 c/\ c= part ccat part cAPPEND c= part call part cALL
+ |- (((!y. (!d. (!f. (((uniq y) /\ (((MEM d) y) /\ (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v)))))) ==> (((indexl (f d)) ((MAP f) y)) = ((indexl d) y)))))) ==> ((\y. (!d. (!f. (((uniq y) /\ (((MEM d) y) /\ (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v)))))) ==> (((indexl (f d)) ((MAP f) y)) = ((indexl d) y)))))) s)) = ((\y. (!d. (!f. (((uniq y) /\ (((MEM d) y) /\ (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v)))))) ==> (((indexl (f d)) ((MAP f) y)) = ((indexl d) y)))))) s))
T c= c==> ! ! ! c==> c/\ cuniq b0 c/\ cMEM b1 b0 ! ! c==> c/\ cMEM b3 b0 c/\ cMEM b4 b0 c= * b2 b3 * b2 b4 c= b3 b4 c= cindexl * b2 b1 cMAP b2 b0 cindexl b1 b0 * / ! ! c==> c/\ cuniq b0 c/\ cMEM b1 b0 ! ! c==> c/\ cMEM b3 b0 c/\ cMEM b4 b0 c= * b2 b3 * b2 b4 c= b3 b4 c= cindexl * b2 b1 cMAP b2 b0 cindexl b1 b0 f0 * / ! ! c==> c/\ cuniq b0 c/\ cMEM b1 b0 ! ! c==> c/\ cMEM b3 b0 c/\ cMEM b4 b0 c= * b2 b3 * b2 b4 c= b3 b4 c= cindexl * b2 b1 cMAP b2 b0 cindexl b1 b0 f0
+ |- (((sizel ((map f) s)) = (sizel s)) ==> ((((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel ((MAP f) s)) - ((indexl y) s)))) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s))))))
T c==> c= csizel cmap f0 f1 csizel f1 c= cCOND c<= cindexl f2 f1 cindexl f3 f1 c- cindexl f3 f1 cindexl f2 f1 c+ cindexl f3 f1 c- csizel cMAP f0 f1 cindexl f2 f1 cCOND c<= cindexl f2 f1 cindexl f3 f1 c- cindexl f3 f1 cindexl f2 f1 c+ cindexl f3 f1 c- csizel f1 cindexl f2 f1
+ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))), (uniq s), ((MEM z) s) |- ((((indexl (f y)) ((MAP f) s)) = ((indexl y) s)) ==> ((((COND (((indexl (f y)) ((MAP f) s)) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl (f y)) ((MAP f) s))))) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s))))))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c==> cuniq f0 c==> cMEM f2 f0 c==> c= cindexl * f1 f3 cMAP f1 f0 cindexl f3 f0 c= cCOND c<= cindexl * f1 f3 cMAP f1 f0 cindexl * f1 f2 cMAP f1 f0 c- cindexl * f1 f2 cMAP f1 f0 cindexl * f1 f3 cMAP f1 f0 c+ cindexl * f1 f2 cMAP f1 f0 c- csizel cMAP f1 f0 cindexl * f1 f3 cMAP f1 f0 cCOND c<= cindexl f3 f0 cindexl f2 f0 c- cindexl f2 f0 cindexl f3 f0 c+ cindexl f2 f0 c- csizel f0 cindexl f3 f0
+ |- (((!x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))))) ==> ((\x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))))) z)) = ((\x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))))) z))
T c= c==> ! ! c==> cMEM b0 b1 cMEM * f0 b0 cMAP f0 b1 * / ! c==> cMEM b0 b1 cMEM * f0 b0 cMAP f0 b1 f1 * / ! c==> cMEM b0 b1 cMEM * f0 b0 cMAP f0 b1 f1
+ |- ((\f. (!x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u)))))) f)
T * / ! ! c==> cMEM b1 b2 cMEM * b0 b1 cMAP b0 b2 f0
- |- ((\s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) s)
T * / ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 f0
+ |- (((((MEM y) s) ==> ((MEM (f y)) ((MAP f) s))) ==> ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s))) = ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s)))
T c= c==> c==> cMEM f0 f1 cMEM * f2 f0 cMAP f2 f1 c= cindexf * f2 f0 * f2 f3 cMAP f2 f1 cindexf f0 f3 f1 c= cindexf * f2 f0 * f2 f3 cMAP f2 f1 cindexf f0 f3 f1
+ |- (((!x. (!y. (!s. ((((MEM x) s) /\ ((MEM y) s)) ==> ((((indexf x) y) s) = (((COND (((indexl x) s) <= ((indexl y) s))) (((indexl y) s) - ((indexl x) s))) (((indexl y) s) + ((sizel s) - ((indexl x) s))))))))) ==> ((\x. (!y. (!s. ((((MEM x) s) /\ ((MEM y) s)) ==> ((((indexf x) y) s) = (((COND (((indexl x) s) <= ((indexl y) s))) (((indexl y) s) - ((indexl x) s))) (((indexl y) s) + ((sizel s) - ((indexl x) s))))))))) (f y))) = ((\x. (!y. (!s. ((((MEM x) s) /\ ((MEM y) s)) ==> ((((indexf x) y) s) = (((COND (((indexl x) s) <= ((indexl y) s))) (((indexl y) s) - ((indexl x) s))) (((indexl y) s) + ((sizel s) - ((indexl x) s))))))))) (f y)))
T c= c==> ! ! ! c==> c/\ cMEM b0 b2 cMEM b1 b2 c= cindexf b0 b1 b2 cCOND c<= cindexl b0 b2 cindexl b1 b2 c- cindexl b1 b2 cindexl b0 b2 c+ cindexl b1 b2 c- csizel b2 cindexl b0 b2 * / ! ! c==> c/\ cMEM b0 b2 cMEM b1 b2 c= cindexf b0 b1 b2 cCOND c<= cindexl b0 b2 cindexl b1 b2 c- cindexl b1 b2 cindexl b0 b2 c+ cindexl b1 b2 c- csizel b2 cindexl b0 b2 * f0 f1 * / ! ! c==> c/\ cMEM b0 b2 cMEM b1 b2 c= cindexf b0 b1 b2 cCOND c<= cindexl b0 b2 cindexl b1 b2 c- cindexl b1 b2 cindexl b0 b2 c+ cindexl b1 b2 c- csizel b2 cindexl b0 b2 * f0 f1
- |- (all = ALL)
T c= part call part cALL
+ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))), (uniq s), ((MEM z) s) |- ((((uniq s) /\ (((MEM z) s) /\ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))))) ==> (((indexl (f z)) ((MAP f) s)) = ((indexl z) s))) ==> ((((COND (((indexl y) s) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl y) s))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl y) s)))) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s))))))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c==> cuniq f0 c==> cMEM f2 f0 c==> c==> c/\ cuniq f0 c/\ cMEM f2 f0 ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c= cindexl * f1 f2 cMAP f1 f0 cindexl f2 f0 c= cCOND c<= cindexl f3 f0 cindexl * f1 f2 cMAP f1 f0 c- cindexl * f1 f2 cMAP f1 f0 cindexl f3 f0 c+ cindexl * f1 f2 cMAP f1 f0 c- csizel cMAP f1 f0 cindexl f3 f0 cCOND c<= cindexl f3 f0 cindexl f2 f0 c- cindexl f2 f0 cindexl f3 f0 c+ cindexl f2 f0 c- csizel f0 cindexl f3 f0
- (all = ALL) |- (ALL = all)
T c==> c= part call part cALL c= part cALL part call
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- (map = MAP) |- (MAP = map)
T c==> c= part cmap part cMAP c= part cMAP part cmap
+ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))) |- (((!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v))) ==> ((\v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v))) v)) = ((\v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v))) v))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c= c==> ! c==> c/\ cMEM f2 f0 c/\ cMEM b0 f0 c= * f1 f2 * f1 b0 c= f2 b0 * / c==> c/\ cMEM f2 f0 c/\ cMEM b0 f0 c= * f1 f2 * f1 b0 c= f2 b0 f3 * / c==> c/\ cMEM f2 f0 c/\ cMEM b0 f0 c= * f1 f2 * f1 b0 c= f2 b0 f3
+ |- ((\x. (!u. (((MEM x) u) ==> ((MEM (f x)) ((MAP f) u))))) z)
T * / ! c==> cMEM b0 b1 cMEM * f0 b0 cMAP f0 b1 f1
+ |- ((\d. (!f. (((uniq s) /\ (((MEM d) s) /\ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))))) ==> (((indexl (f d)) ((MAP f) s)) = ((indexl d) s))))) z)
T * / ! c==> c/\ cuniq f0 c/\ cMEM b0 f0 ! ! c==> c/\ cMEM b2 f0 c/\ cMEM b3 f0 c= * b1 b2 * b1 b3 c= b2 b3 c= cindexl * b1 b0 cMAP b1 f0 cindexl b0 f0 f1
- |- ((rev = REVERSE) /\ ((!s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) /\ ((cat = APPEND) /\ (all = ALL))))
T c/\ c= part crev part cREVERSE c/\ ! ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 c/\ c= part ccat part cAPPEND c= part call part cALL
- |- ((\y. (!f. (((uniq y) /\ (!u. (!v. ((((MEM u) y) /\ (((MEM v) y) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) y))))) s)
T * / ! c==> c/\ cuniq b0 ! ! c==> c/\ cMEM b2 b0 c/\ cMEM b3 b0 c= * b1 b2 * b1 b3 c= b2 b3 cuniq cMAP b1 b0 f0
- ((LENGTH ((MAP f) s)) = (LENGTH s)) |- (T = ((((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((LENGTH ((MAP f) s)) - ((indexl y) s)))) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((LENGTH s) - ((indexl y) s))))))
T c==> c= cLENGTH cMAP f0 f1 cLENGTH f1 c= cT c= cCOND c<= cindexl f2 f1 cindexl f3 f1 c- cindexl f3 f1 cindexl f2 f1 c+ cindexl f3 f1 c- cLENGTH cMAP f0 f1 cindexl f2 f1 cCOND c<= cindexl f2 f1 cindexl f3 f1 c- cindexl f3 f1 cindexl f2 f1 c+ cindexl f3 f1 c- cLENGTH f1 cindexl f2 f1
- (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))), (uniq s) |- (((uniq ((MAP f) s)) ==> ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s))) = ((((uniq s) /\ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) s))) ==> ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s))))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c==> cuniq f0 c= c==> cuniq cMAP f1 f0 c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cindexf f2 f3 f0 c==> c==> c/\ cuniq f0 ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 cuniq cMAP f1 f0 c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cindexf f2 f3 f0
+ |- ((((indexl (f z)) ((MAP f) s)) = ((indexl z) s)) ==> ((((COND (((indexl y) s) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl y) s))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl y) s)))) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s))))))
T c==> c= cindexl * f0 f1 cMAP f0 f2 cindexl f1 f2 c= cCOND c<= cindexl f3 f2 cindexl * f0 f1 cMAP f0 f2 c- cindexl * f0 f1 cMAP f0 f2 cindexl f3 f2 c+ cindexl * f0 f1 cMAP f0 f2 c- csizel cMAP f0 f2 cindexl f3 f2 cCOND c<= cindexl f3 f2 cindexl f1 f2 c- cindexl f1 f2 cindexl f3 f2 c+ cindexl f1 f2 c- csizel f2 cindexl f3 f2
- |- ((\f. (((uniq s) /\ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) s)))) f)
T * / c==> c/\ cuniq f0 ! ! c==> c/\ cMEM b1 f0 c/\ cMEM b2 f0 c= * b0 b1 * b0 b2 c= b1 b2 cuniq cMAP b0 f0 f1
+ |- ((\s. ((sizel ((map f) s)) = (sizel s))) s)
T * / c= csizel cmap f0 b0 csizel b0 f1
+ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))), (uniq s), ((MEM (f y)) ((MAP f) s)), ((MEM (f z)) ((MAP f) s)), ((MEM y) s), ((MEM z) s) |- (((((MEM y) s) /\ ((MEM z) s)) ==> ((((indexf y) z) s) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s)))))) ==> ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s)))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c==> cuniq f0 c==> cMEM * f1 f2 cMAP f1 f0 c==> cMEM * f1 f3 cMAP f1 f0 c==> cMEM f2 f0 c==> cMEM f3 f0 c==> c==> c/\ cMEM f2 f0 cMEM f3 f0 c= cindexf f2 f3 f0 cCOND c<= cindexl f2 f0 cindexl f3 f0 c- cindexl f3 f0 cindexl f2 f0 c+ cindexl f3 f0 c- csizel f0 cindexl f2 f0 c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cindexf f2 f3 f0
+ |- ((((((MEM y) s) /\ ((MEM z) s)) ==> ((((indexf y) z) s) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s)))))) ==> ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s))) = ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s)))
T c= c==> c==> c/\ cMEM f0 f1 cMEM f2 f1 c= cindexf f0 f2 f1 cCOND c<= cindexl f0 f1 cindexl f2 f1 c- cindexl f2 f1 cindexl f0 f1 c+ cindexl f2 f1 c- csizel f1 cindexl f0 f1 c= cindexf * f3 f0 * f3 f2 cMAP f3 f1 cindexf f0 f2 f1 c= cindexf * f3 f0 * f3 f2 cMAP f3 f1 cindexf f0 f2 f1
- |- (((~ (s = NIL)) ==> (((last x0) s) = (LAST s))) = T)
T c= c==> c~ c= f0 cNIL c= clast f1 f0 cLAST f0 cT
+ (uniq s), ((!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))) /\ (((MEM y) s) /\ ((MEM z) s))) |- ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s))
T c==> cuniq f0 c==> c/\ ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c/\ cMEM f2 f0 cMEM f3 f0 c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cindexf f2 f3 f0
+ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))) |- ((\u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))) u)
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 * / ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 f2
- (MAP = map) |- (map = MAP)
T c==> c= part cMAP part cmap c= part cmap part cMAP
+ ((LENGTH ((MAP f) s)) = (LENGTH s)) |- (((LENGTH ((MAP f) s)) = (LENGTH s)) /\ ((((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((LENGTH ((MAP f) s)) - ((indexl y) s)))) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((LENGTH s) - ((indexl y) s))))))
T c==> c= cLENGTH cMAP f0 f1 cLENGTH f1 c/\ c= cLENGTH cMAP f0 f1 cLENGTH f1 c= cCOND c<= cindexl f2 f1 cindexl f3 f1 c- cindexl f3 f1 cindexl f2 f1 c+ cindexl f3 f1 c- cLENGTH cMAP f0 f1 cindexl f2 f1 cCOND c<= cindexl f2 f1 cindexl f3 f1 c- cindexl f3 f1 cindexl f2 f1 c+ cindexl f3 f1 c- cLENGTH f1 cindexl f2 f1
+ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))), (uniq s), (((indexl (f y)) ((MAP f) s)) = ((indexl y) s)), ((MEM z) s) |- ((((COND (((indexl (f y)) ((MAP f) s)) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl (f y)) ((MAP f) s))))) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s)))))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c==> cuniq f0 c==> c= cindexl * f1 f2 cMAP f1 f0 cindexl f2 f0 c==> cMEM f3 f0 c= cCOND c<= cindexl * f1 f2 cMAP f1 f0 cindexl * f1 f3 cMAP f1 f0 c- cindexl * f1 f3 cMAP f1 f0 cindexl * f1 f2 cMAP f1 f0 c+ cindexl * f1 f3 cMAP f1 f0 c- csizel cMAP f1 f0 cindexl * f1 f2 cMAP f1 f0 cCOND c<= cindexl f2 f0 cindexl f3 f0 c- cindexl f3 f0 cindexl f2 f0 c+ cindexl f3 f0 c- csizel f0 cindexl f2 f0
- (NIL = s) |- (s = NIL)
T c==> c= cNIL f0 c= f0 cNIL
+ |- (((!u. (((MEM z) u) ==> ((MEM (f z)) ((MAP f) u)))) ==> ((\u. (((MEM z) u) ==> ((MEM (f z)) ((MAP f) u)))) s)) = ((\u. (((MEM z) u) ==> ((MEM (f z)) ((MAP f) u)))) s))
T c= c==> ! c==> cMEM f0 b0 cMEM * f1 f0 cMAP f1 b0 * / c==> cMEM f0 b0 cMEM * f1 f0 cMAP f1 b0 f2 * / c==> cMEM f0 b0 cMEM * f1 f0 cMAP f1 b0 f2
+ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))), (uniq s), ((MEM y) s), ((MEM z) s) |- ((((uniq s) /\ (((MEM y) s) /\ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))))) ==> (((indexl (f y)) ((MAP f) s)) = ((indexl y) s))) ==> ((((COND (((indexl (f y)) ((MAP f) s)) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl (f y)) ((MAP f) s))))) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s))))))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c==> cuniq f0 c==> cMEM f2 f0 c==> cMEM f3 f0 c==> c==> c/\ cuniq f0 c/\ cMEM f2 f0 ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c= cindexl * f1 f2 cMAP f1 f0 cindexl f2 f0 c= cCOND c<= cindexl * f1 f2 cMAP f1 f0 cindexl * f1 f3 cMAP f1 f0 c- cindexl * f1 f3 cMAP f1 f0 cindexl * f1 f2 cMAP f1 f0 c+ cindexl * f1 f3 cMAP f1 f0 c- csizel cMAP f1 f0 cindexl * f1 f2 cMAP f1 f0 cCOND c<= cindexl f2 f0 cindexl f3 f0 c- cindexl f3 f0 cindexl f2 f0 c+ cindexl f3 f0 c- csizel f0 cindexl f2 f0
+ (uniq s), ((uniq s) /\ ((!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))) /\ (((MEM y) s) /\ ((MEM z) s)))) |- ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s))
T c==> cuniq f0 c==> c/\ cuniq f0 c/\ ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c/\ cMEM f2 f0 cMEM f3 f0 c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cindexf f2 f3 f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))), (uniq s), ((MEM (f y)) ((MAP f) s)), ((MEM (f z)) ((MAP f) s)), ((MEM y) s), ((MEM z) s) |- (((((indexf y) z) s) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s))))) ==> ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s)))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c==> cuniq f0 c==> cMEM * f1 f2 cMAP f1 f0 c==> cMEM * f1 f3 cMAP f1 f0 c==> cMEM f2 f0 c==> cMEM f3 f0 c==> c= cindexf f2 f3 f0 cCOND c<= cindexl f2 f0 cindexl f3 f0 c- cindexl f3 f0 cindexl f2 f0 c+ cindexl f3 f0 c- csizel f0 cindexl f2 f0 c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cindexf f2 f3 f0
+ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))), (uniq s), ((((indexf (f y)) (f z)) ((MAP f) s)) = (((COND (((indexl (f y)) ((MAP f) s)) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))))), ((MEM y) s), ((MEM z) s) |- (((((indexf (f y)) (f z)) ((MAP f) s)) = (((COND (((indexl (f y)) ((MAP f) s)) <= ((indexl (f z)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))) (((indexl (f z)) ((MAP f) s)) + ((sizel ((MAP f) s)) - ((indexl (f y)) ((MAP f) s)))))) /\ ((((indexf (f y)) (f z)) ((MAP f) s)) = (((COND (((indexl y) s) <= ((indexl z) s))) (((indexl z) s) - ((indexl y) s))) (((indexl z) s) + ((sizel s) - ((indexl y) s))))))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c==> cuniq f0 c==> c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cCOND c<= cindexl * f1 f2 cMAP f1 f0 cindexl * f1 f3 cMAP f1 f0 c- cindexl * f1 f3 cMAP f1 f0 cindexl * f1 f2 cMAP f1 f0 c+ cindexl * f1 f3 cMAP f1 f0 c- csizel cMAP f1 f0 cindexl * f1 f2 cMAP f1 f0 c==> cMEM f2 f0 c==> cMEM f3 f0 c/\ c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cCOND c<= cindexl * f1 f2 cMAP f1 f0 cindexl * f1 f3 cMAP f1 f0 c- cindexl * f1 f3 cMAP f1 f0 cindexl * f1 f2 cMAP f1 f0 c+ cindexl * f1 f3 cMAP f1 f0 c- csizel cMAP f1 f0 cindexl * f1 f2 cMAP f1 f0 c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cCOND c<= cindexl f2 f0 cindexl f3 f0 c- cindexl f3 f0 cindexl f2 f0 c+ cindexl f3 f0 c- csizel f0 cindexl f2 f0
- (filter = FILTER) |- (FILTER = filter)
T c==> c= part cfilter part cFILTER c= part cFILTER part cfilter
- (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))), (uniq s), ((MEM y) s), ((MEM z) s) |- ((uniq ((MAP f) s)) ==> ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s)))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c==> cuniq f0 c==> cMEM f2 f0 c==> cMEM f3 f0 c==> cuniq cMAP f1 f0 c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cindexf f2 f3 f0
- |- ((cat = APPEND) /\ (all = ALL))
T c/\ c= part ccat part cAPPEND c= part call part cALL
- (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))), (uniq s), ((MEM y) s), ((MEM z) s) |- ((((uniq s) /\ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) s))) ==> ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s)))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c==> cuniq f0 c==> cMEM f2 f0 c==> cMEM f3 f0 c==> c==> c/\ cuniq f0 ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 cuniq cMAP f1 f0 c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cindexf f2 f3 f0
- |- (((!f. (((uniq s) /\ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) s)))) ==> ((\f. (((uniq s) /\ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) s)))) f)) = ((\f. (((uniq s) /\ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) s)))) f))
T c= c==> ! c==> c/\ cuniq f0 ! ! c==> c/\ cMEM b1 f0 c/\ cMEM b2 f0 c= * b0 b1 * b0 b2 c= b1 b2 cuniq cMAP b0 f0 * / c==> c/\ cuniq f0 ! ! c==> c/\ cMEM b1 f0 c/\ cMEM b2 f0 c= * b0 b1 * b0 b2 c= b1 b2 cuniq cMAP b0 f0 f1 * / c==> c/\ cuniq f0 ! ! c==> c/\ cMEM b1 f0 c/\ cMEM b2 f0 c= * b0 b1 * b0 b2 c= b1 b2 cuniq cMAP b0 f0 f1
- (ALL = all) |- (all = ALL)
T c==> c= part cALL part call c= part call part cALL
- |- (((!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s)))) ==> ((\x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s)))) x0)) = ((\x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s)))) x0))
T c= c==> ! c==> c~ c= f0 cNIL c= clast b0 f0 cLAST f0 * / c==> c~ c= f0 cNIL c= clast b0 f0 cLAST f0 f1 * / c==> c~ c= f0 cNIL c= clast b0 f0 cLAST f0 f1
- (uniq ((MAP f) s)) |- ((uniq ((MAP f) s)) = T)
T c==> cuniq cMAP f0 f1 c= cuniq cMAP f0 f1 cT
- (LENGTH = sizel) |- (sizel = LENGTH)
T c==> c= part cLENGTH part csizel c= part csizel part cLENGTH
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((uniq s) /\ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) s)))
T c==> c/\ cuniq f0 ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 cuniq cMAP f1 f0
- |- ((sizel = LENGTH) /\ ((filter = FILTER) /\ ((rev = REVERSE) /\ ((!s. (!x0. ((~ (s = NIL)) ==> (((last x0) s) = (LAST s))))) /\ ((cat = APPEND) /\ (all = ALL))))))
T c/\ c= part csizel part cLENGTH c/\ c= part cfilter part cFILTER c/\ c= part crev part cREVERSE c/\ ! ! c==> c~ c= b0 cNIL c= clast b1 b0 cLAST b0 c/\ c= part ccat part cAPPEND c= part call part cALL
- (rev = REVERSE) |- (REVERSE = rev)
T c==> c= part crev part cREVERSE c= part cREVERSE part crev
- |- (cat = APPEND)
T c= part ccat part cAPPEND
- (FILTER = filter) |- (filter = FILTER)
T c==> c= part cFILTER part cfilter c= part cfilter part cFILTER
- (APPEND = cat) |- (cat = APPEND)
T c==> c= part cAPPEND part ccat c= part ccat part cAPPEND
- |- (rev = REVERSE)
T c= part crev part cREVERSE
- (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v)))), (uniq ((MAP f) s)), (uniq s), ((MEM y) s), ((MEM z) s) |- ((uniq ((MAP f) s)) /\ ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s)))
T c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 c==> cuniq cMAP f1 f0 c==> cuniq f0 c==> cMEM f2 f0 c==> cMEM f3 f0 c/\ cuniq cMAP f1 f0 c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cindexf f2 f3 f0
- |- (((((uniq s) /\ (!u. (!v. ((((MEM u) s) /\ (((MEM v) s) /\ ((f u) = (f v)))) ==> (u = v))))) ==> (uniq ((MAP f) s))) ==> ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s))) = ((((indexf (f y)) (f z)) ((MAP f) s)) = (((indexf y) z) s)))
T c= c==> c==> c/\ cuniq f0 ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c= * f1 b0 * f1 b1 c= b0 b1 cuniq cMAP f1 f0 c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cindexf f2 f3 f0 c= cindexf * f1 f2 * f1 f3 cMAP f1 f0 cindexf f2 f3 f0
- ((LAST s) = ((last x0) s)) |- (((last x0) s) = (LAST s))
T c==> c= cLAST f0 clast f1 f0 c= clast f1 f0 cLAST f0
- |- ((~ (s = NIL)) ==> (((last x0) s) = (LAST s)))
T c==> c~ c= f0 cNIL c= clast f1 f0 cLAST f0
- (((last x0) s) = (LAST s)) |- ((LAST s) = ((last x0) s))
T c==> c= clast f0 f1 cLAST f1 c= cLAST f1 clast f0 f1
- (cat = APPEND) |- (APPEND = cat)
T c==> c= part ccat part cAPPEND c= part cAPPEND part ccat
- (s = NIL) |- (NIL = s)
T c==> c= f0 cNIL c= cNIL f0
