N The_main_statement.kc_imp_the_kc
C |- (kepler_conjecture ==> the_kepler_conjecture)
T c==> ckepler_conjecture cthe_kepler_conjecture
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D real_div
A |- (!x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y)))))
T c= creal_div f0 f1 creal_mul f0 creal_inv f1
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D CARD_SUBSET
A |- (!a. (!b. (((a SUBSET b) /\ (FINITE b)) ==> ((CARD a) <= (CARD b)))))
T c==> c/\ cSUBSET f0 f1 cFINITE f1 c<= cCARD f0 cCARD f1
D Pack2.KIUMVTC
A |- (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r))))))))
T c==> cpacking f0 cFINITE * * part cINTER f0 * part cball c, f1 f2
D Pack_defs.kepler_conjecture
A |- (kepler_conjecture = (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))))
T c= ckepler_conjecture ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2
D Flyspeck_devol.FLYSPECK_DEVOLUTION
A |- ((!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%8747. (?v. (((SETSPEC GEN%PVAR%8747) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))) ==> (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))))
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_of_num cCARD * * part cINTER b0 * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_mul cpi creal_div creal_pow b2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b1 creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0
D Flyspeck_devol.CPNKNXN
A |- (!V. ((packing V) ==> (?V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V'))))))
T c==> cpacking f0 c? / c/\ cpacking b0 c/\ csaturated b0 cSUBSET f0 b0
D The_main_statement.the_kepler_conjecture_def
A |- (the_kepler_conjecture = (!V. ((packing V) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))))
T c= cthe_kepler_conjecture ! c==> cpacking b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_of_num cCARD * * part cINTER b0 * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_mul cpi creal_div creal_pow b2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b1 creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0
- |- ((\g. ((tame12o g) = (!v. ((v IN (vertices_set2 g)) ==> ((((~= ((except g) v)) (NUMERAL _0)) /\ (((degree g) v) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((vertextype g) v) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))))))) g)
T * / c= ctame12o b0 ! c==> cIN b1 * part cvertices_set2 b0 c==> c/\ c~= cexcept b0 b1 cNUMERAL c_0 c= cdegree b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cvertextype b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0
- |- (((!w. (((adm_3_floor H) w) = (!x. (((x IN (dart H)) /\ (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) ==> (((nsum ((set_of_triangles_meeting_node H) x)) w) >= excessTCount))))) ==> ((\w. (((adm_3_floor H) w) = (!x. (((x IN (dart H)) /\ (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) ==> (((nsum ((set_of_triangles_meeting_node H) x)) w) >= excessTCount))))) w)) = ((\w. (((adm_3_floor H) w) = (!x. (((x IN (dart H)) /\ (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) ==> (((nsum ((set_of_triangles_meeting_node H) x)) w) >= excessTCount))))) w))
T c= c==> ! c= cadm_3_floor f0 b0 ! c==> c/\ cIN b1 * part cdart f0 c= ctype_of_node f0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c>= cnsum * * part cset_of_triangles_meeting_node f0 b1 b0 cexcessTCount * / c= cadm_3_floor f0 b0 ! c==> c/\ cIN b1 * part cdart f0 c= ctype_of_node f0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c>= cnsum * * part cset_of_triangles_meeting_node f0 b1 b0 cexcessTCount f1 * / c= cadm_3_floor f0 b0 ! c==> c/\ cIN b1 * part cdart f0 c= ctype_of_node f0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c>= cnsum * * part cset_of_triangles_meeting_node f0 b1 b0 cexcessTCount f1
- |- ((\H. (!w. (((adm_3_floor H) w) = (!x. (((x IN (dart H)) /\ (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) ==> (((nsum ((set_of_triangles_meeting_node H) x)) w) >= excessTCount)))))) H)
T * / ! c= cadm_3_floor b0 b1 ! c==> c/\ cIN b2 * part cdart b0 c= ctype_of_node b0 b2 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c>= cnsum * * part cset_of_triangles_meeting_node b0 b2 b1 cexcessTCount f0
- |- ((\d. (!f_test. (!V. ((((a_azim f_test) V) d) = ((LET (\H. (LET_END ((LET (\s. (LET_END ((real_div ((sum s) (azim_dart (V , (ESTD V))))) (real_of_num (CARD s)))))) (GSPEC (\GEN%PVAR%8732. (?y. (((SETSPEC GEN%PVAR%8732) ((y IN ((node H) d)) /\ (f_test (CARD ((face H) y))))) y)))))))) (hypermap_of_fan (V , (ESTD V)))))))) d)
T * / ! ! c= ca_azim b1 b2 b0 cLET / cLET_END cLET / cLET_END creal_div csum b4 * part cazim_dart c, b2 * part cESTD b2 creal_of_num cCARD b4 * part cGSPEC / c? / cSETSPEC b4 c/\ cIN b5 * * part cnode b3 b0 * b1 cCARD * * part cface b3 b5 b5 chypermap_of_fan c, b2 * part cESTD b2 f0
+ (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))), (packing V), ((packing V') /\ ((saturated V') /\ (V SUBSET V'))) |- (((packing V') /\ ((saturated V') /\ (V SUBSET V'))) /\ (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 c==> cpacking f0 c==> c/\ cpacking f1 c/\ csaturated f1 cSUBSET f0 f1 c/\ c/\ cpacking f1 c/\ csaturated f1 cSUBSET f0 f1 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
- |- ((\f0. (!L. (!N. (!r. (!x. (!i. (((((((prebatch f0) L) N) r) x) i) = (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x)))))))))) f0)
T * / ! ! ! ! ! c= cprebatch b0 b1 b2 b3 b4 b5 cfoldl * part cdest_triple0_step b0 cNIL ctake b5 ccore_triple_v4 b1 b2 b3 b4 f0
- |- ((\H. (((adm_2_floor H) w) = (!x. (((x IN (dart H)) /\ ((CARD ((set_of_exceptional_meeting_node H) x)) = (NUMERAL _0))) ==> (((nsum ((set_of_face_meeting_node H) x)) w) >= ((squanderVertex (CARD ((set_of_triangles_meeting_node H) x))) (CARD ((set_of_quadrilaterals_meeting_node H) x)))))))) H)
T * / c= cadm_2_floor b0 f0 ! c==> c/\ cIN b1 * part cdart b0 c= cCARD * * part cset_of_exceptional_meeting_node b0 b1 cNUMERAL c_0 c>= cnsum * * part cset_of_face_meeting_node b0 b1 f0 csquanderVertex cCARD * * part cset_of_triangles_meeting_node b0 b1 cCARD * * part cset_of_quadrilaterals_meeting_node b0 b1 f1
- |- (((!g. (!L. (!h. (!V. (((lp_cond (L , (g , h))) (V , E)) = ((lp_fan (V , E)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((hyp_iso g) ((hypermap_of_list L) , (hypermap_of_fan (V , E)))) /\ ((((BIJ h) (elements_of_list L)) V) /\ ((!d. ((g d) = ((h (FST d)) , (h (SND d))))) /\ (!x. ((x IN (elements_of_list L)) = ((h x) IN V)))))))))))))) ==> ((\g. (!L. (!h. (!V. (((lp_cond (L , (g , h))) (V , E)) = ((lp_fan (V , E)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((hyp_iso g) ((hypermap_of_list L) , (hypermap_of_fan (V , E)))) /\ ((((BIJ h) (elements_of_list L)) V) /\ ((!d. ((g d) = ((h (FST d)) , (h (SND d))))) /\ (!x. ((x IN (elements_of_list L)) = ((h x) IN V)))))))))))))) g)) = ((\g. (!L. (!h. (!V. (((lp_cond (L , (g , h))) (V , E)) = ((lp_fan (V , E)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((hyp_iso g) ((hypermap_of_list L) , (hypermap_of_fan (V , E)))) /\ ((((BIJ h) (elements_of_list L)) V) /\ ((!d. ((g d) = ((h (FST d)) , (h (SND d))))) /\ (!x. ((x IN (elements_of_list L)) = ((h x) IN V)))))))))))))) g))
T c= c==> ! ! ! ! c= clp_cond c, b1 c, b0 b2 c, b3 f0 c/\ clp_fan c, b3 f0 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ chyp_iso b0 c, chypermap_of_list b1 chypermap_of_fan c, b3 f0 c/\ cBIJ b2 * part celements_of_list b1 b3 c/\ ! c= * b0 b4 c, * b2 cFST b4 * b2 cSND b4 ! c= cIN b4 * part celements_of_list b1 cIN * b2 b4 b3 * / ! ! ! c= clp_cond c, b1 c, b0 b2 c, b3 f0 c/\ clp_fan c, b3 f0 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ chyp_iso b0 c, chypermap_of_list b1 chypermap_of_fan c, b3 f0 c/\ cBIJ b2 * part celements_of_list b1 b3 c/\ ! c= * b0 b4 c, * b2 cFST b4 * b2 cSND b4 ! c= cIN b4 * part celements_of_list b1 cIN * b2 b4 b3 f1 * / ! ! ! c= clp_cond c, b1 c, b0 b2 c, b3 f0 c/\ clp_fan c, b3 f0 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ chyp_iso b0 c, chypermap_of_list b1 chypermap_of_fan c, b3 f0 c/\ cBIJ b2 * part celements_of_list b1 b3 c/\ ! c= * b0 b4 c, * b2 cFST b4 * b2 cSND b4 ! c= cIN b4 * part celements_of_list b1 cIN * b2 b4 b3 f1
- |- (((!g. ((rhazim_list (g , fan)) = ((rhazim_fan fan) o g))) ==> ((\g. ((rhazim_list (g , fan)) = ((rhazim_fan fan) o g))) g)) = ((\g. ((rhazim_list (g , fan)) = ((rhazim_fan fan) o g))) g))
T c= c==> ! c= * part crhazim_list c, b0 f0 * * part co * part crhazim_fan f0 b0 * / c= * part crhazim_list c, b0 f0 * * part co * part crhazim_fan f0 b0 f1 * / c= * part crhazim_list c, b0 f0 * * part co * part crhazim_fan f0 b0 f1
- |- ((y6_fan x) = (distance x))
T c= cy6_fan f0 cdistance f0
- |- ((\diags. (((add_diag_list (g , (V , E))) diags) = (((foldr (\d. (\E'. ((add_diag (V , E')) (g d))))) E) diags))) diags)
T * / c= * * part cadd_diag_list c, f0 c, f1 f2 b0 * * * part cfoldr / / * * part cadd_diag c, f1 b2 * f0 b1 f2 b0 f3
- |- (((!L. ((tame12o_list L) = (!v. (((v IN (elements_of_list L)) /\ ((~ (((except_list L) v) = (NUMERAL _0))) /\ ((LENGTH ((facesAt_list L) v)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) ==> (((vertextype_list L) v) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))))))) ==> ((\L. ((tame12o_list L) = (!v. (((v IN (elements_of_list L)) /\ ((~ (((except_list L) v) = (NUMERAL _0))) /\ ((LENGTH ((facesAt_list L) v)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) ==> (((vertextype_list L) v) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))))))) L)) = ((\L. ((tame12o_list L) = (!v. (((v IN (elements_of_list L)) /\ ((~ (((except_list L) v) = (NUMERAL _0))) /\ ((LENGTH ((facesAt_list L) v)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) ==> (((vertextype_list L) v) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))))))) L))
T c= c==> ! c= ctame12o_list b0 ! c==> c/\ cIN b1 * part celements_of_list b0 c/\ c~ c= cexcept_list b0 b1 cNUMERAL c_0 c= cLENGTH cfacesAt_list b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cvertextype_list b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 * / c= ctame12o_list b0 ! c==> c/\ cIN b1 * part celements_of_list b0 c/\ c~ c= cexcept_list b0 b1 cNUMERAL c_0 c= cLENGTH cfacesAt_list b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cvertextype_list b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 * / c= ctame12o_list b0 ! c==> c/\ cIN b1 * part celements_of_list b0 c/\ c~ c= cexcept_list b0 b1 cNUMERAL c_0 c= cLENGTH cfacesAt_list b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cvertextype_list b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0
- |- ((\x. (!i. (((((((batch0 f0) L) N) r) x) i) = (flatten (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x))))))) x)
T * / ! c= cbatch0 f0 f1 f2 f3 b0 b1 cflatten cfoldl * part cdest_triple0_step f0 cNIL ctake b1 ccore_triple_v4 f1 f2 f3 b0 f4
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0
+ (packing V), (packing V'), (saturated V'), ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r), (V SUBSET V') |- ((CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))) <= (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> cSUBSET f0 f1 c<= cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2
+ |- (((!r. (!V'. (!V. ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F)))))))))) ==> ((\r. (!V'. (!V. ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F)))))))))) r)) = ((\r. (!V'. (!V. ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F)))))))))) r))
T c= c==> ! ! ! c==> cpacking b2 c==> cpacking b1 c==> csaturated b1 c==> cSUBSET b2 b1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c~ cFINITE * * part cINTER b1 * part cball c, cvec cNUMERAL c_0 b0 c==> ! ! ! c==> cpacking b4 cFINITE * * part cINTER b4 * part cball c, b3 b4 cF * / ! ! c==> cpacking b2 c==> cpacking b1 c==> csaturated b1 c==> cSUBSET b2 b1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c~ cFINITE * * part cINTER b1 * part cball c, cvec cNUMERAL c_0 b0 c==> ! ! ! c==> cpacking b4 cFINITE * * part cINTER b4 * part cball c, b3 b4 cF f0 * / ! ! c==> cpacking b2 c==> cpacking b1 c==> csaturated b1 c==> cSUBSET b2 b1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c~ cFINITE * * part cINTER b1 * part cball c, cvec cNUMERAL c_0 b0 c==> ! ! ! c==> cpacking b4 cFINITE * * part cINTER b4 * part cball c, b3 b4 cF f0
- |- (((!g. (((admissible3 w) g) = (!v. ((v IN (vertices_set2 g)) ==> ((((vertextype g) v) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) ==> ((sumn ((map (\f. (w f))) ((FILTER triangle) ((facesAt g) v)))) >= excessTCount)))))) ==> ((\g. (((admissible3 w) g) = (!v. ((v IN (vertices_set2 g)) ==> ((((vertextype g) v) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) ==> ((sumn ((map (\f. (w f))) ((FILTER triangle) ((facesAt g) v)))) >= excessTCount)))))) g)) = ((\g. (((admissible3 w) g) = (!v. ((v IN (vertices_set2 g)) ==> ((((vertextype g) v) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) ==> ((sumn ((map (\f. (w f))) ((FILTER triangle) ((facesAt g) v)))) >= excessTCount)))))) g))
T c= c==> ! c= cadmissible3 f0 b0 ! c==> cIN b1 * part cvertices_set2 b0 c==> c= cvertextype b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c>= csumn cmap / * f0 b2 cFILTER part ctriangle cfacesAt b0 b1 cexcessTCount * / c= cadmissible3 f0 b0 ! c==> cIN b1 * part cvertices_set2 b0 c==> c= cvertextype b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c>= csumn cmap / * f0 b2 cFILTER part ctriangle cfacesAt b0 b1 cexcessTCount f1 * / c= cadmissible3 f0 b0 ! c==> cIN b1 * part cvertices_set2 b0 c==> c= cvertextype b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c>= csumn cmap / * f0 b2 cFILTER part ctriangle cfacesAt b0 b1 cexcessTCount f1
- |- ((\L. (((admissible2_list w) L) = (!v. (((v IN (elements_of_list L)) /\ (((except_list L) v) = (NUMERAL _0))) ==> (((squanderVertex ((tri_list L) v)) ((quad_list L) v)) <= (sumn ((MAP w) ((facesAt_list L) v)))))))) L)
T * / c= cadmissible2_list f0 b0 ! c==> c/\ cIN b1 * part celements_of_list b0 c= cexcept_list b0 b1 cNUMERAL c_0 c<= csquanderVertex ctri_list b0 b1 cquad_list b0 b1 csumn cMAP f0 cfacesAt_list b0 b1 f1
- |- (((!g. (!v. (((tri g) v) = (LENGTH ((FILTER (\f. ((SND f) /\ ((LENGTH (FST f)) = (NUMERAL (BIT1 (BIT1 _0))))))) ((facesAt g) v)))))) ==> ((\g. (!v. (((tri g) v) = (LENGTH ((FILTER (\f. ((SND f) /\ ((LENGTH (FST f)) = (NUMERAL (BIT1 (BIT1 _0))))))) ((facesAt g) v)))))) g)) = ((\g. (!v. (((tri g) v) = (LENGTH ((FILTER (\f. ((SND f) /\ ((LENGTH (FST f)) = (NUMERAL (BIT1 (BIT1 _0))))))) ((facesAt g) v)))))) g))
T c= c==> ! ! c= ctri b0 b1 cLENGTH cFILTER / c/\ cSND b2 c= cLENGTH cFST b2 cNUMERAL cBIT1 cBIT1 c_0 cfacesAt b0 b1 * / ! c= ctri b0 b1 cLENGTH cFILTER / c/\ cSND b2 c= cLENGTH cFST b2 cNUMERAL cBIT1 cBIT1 c_0 cfacesAt b0 b1 f0 * / ! c= ctri b0 b1 cLENGTH cFILTER / c/\ cSND b2 c= cLENGTH cFST b2 cNUMERAL cBIT1 cBIT1 c_0 cfacesAt b0 b1 f0
- |- (((!N. (((element_pre L) N) = ((elements_of_list ((quotient_list L) N)) = ((NUMERAL _0) .. (PRE (sizel (undup ((MAP FST) (flatten N))))))))) ==> ((\N. (((element_pre L) N) = ((elements_of_list ((quotient_list L) N)) = ((NUMERAL _0) .. (PRE (sizel (undup ((MAP FST) (flatten N))))))))) N)) = ((\N. (((element_pre L) N) = ((elements_of_list ((quotient_list L) N)) = ((NUMERAL _0) .. (PRE (sizel (undup ((MAP FST) (flatten N))))))))) N))
T c= c==> ! c= celement_pre f0 b0 c= * part celements_of_list cquotient_list f0 b0 * * part c.. cNUMERAL c_0 cPRE csizel cundup cMAP part cFST cflatten b0 * / c= celement_pre f0 b0 c= * part celements_of_list cquotient_list f0 b0 * * part c.. cNUMERAL c_0 cPRE csizel cundup cMAP part cFST cflatten b0 f1 * / c= celement_pre f0 b0 c= * part celements_of_list cquotient_list f0 b0 * * part c.. cNUMERAL c_0 cPRE csizel cundup cMAP part cFST cflatten b0 f1
+ |- (T = (((F ==> B) /\ F) ==> B))
T c= cT c==> c/\ c==> cF f0 cF f0
- |- ((((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F) ==> ((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F)) ==> (((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F) ==> ((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F)))
T c==> c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 cF c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 cF
+ (packing V), (packing V'), (saturated V'), ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r), (V SUBSET V') |- ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> F)
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> cSUBSET f0 f1 c==> c~ cFINITE * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 cF
- |- ((!x'. ((~ (V x')) \/ (V' x))) = ((!x. (~ (V x))) \/ (V' x)))
T c= ! c\/ c~ * f0 b0 * f1 f2 c\/ ! c~ * f0 b0 * f1 f2
- |- ((ye_fan x) = (distance x))
T c= cye_fan f0 cdistance f0
+ (packing V'), (V SUBSET V') |- ((V SUBSET V') /\ (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> (~ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r))))))))))))
T c==> cpacking f0 c==> cSUBSET f1 f0 c/\ cSUBSET f1 f0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 c~ ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1
- |- ((\L. (!N. (!r. (!x. (((((core_triple_v4 L) N) r) x) = ((MAP (GABS (\f. (!u. (!v. (!ns. ((GEQ (f (u , (v , ns)))) ((FST u) , ((FST v) , (sizel ns)))))))))) ((((triple_data_v4 L) N) r) x))))))) L)
T * / ! ! ! c= ccore_triple_v4 b0 b1 b2 b3 cMAP * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 c, cFST b5 c, cFST b6 csizel b7 ctriple_data_v4 b0 b1 b2 b3 f0
- |- ((\x. (((azim2_fan (V , E)) x) = ((azim_dart (V , E)) ((f_fan_pair_ext (V , E)) x)))) x)
T * / c= cazim2_fan c, f0 f1 b0 cazim_dart c, f0 f1 cf_fan_pair_ext c, f0 f1 b0 f2
- |- ((\X. (((#?# f) X) = ((IMAGE f) X))) X)
T * / c= * * part c#?# f0 b0 * * part cIMAGE f0 b0 f1
+ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) |- (((!p. (!r. (!S. ((~ (packing S)) \/ (FINITE (S INTER (ball (p , r)))))))) ==> ((\p. (!r. (!S. ((~ (packing S)) \/ (FINITE (S INTER (ball (p , r)))))))) _11404657)) = ((\p. (!r. (!S. ((~ (packing S)) \/ (FINITE (S INTER (ball (p , r)))))))) _11404657))
T c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 c= c==> ! ! ! c\/ c~ cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 * / ! ! c\/ c~ cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 f0 * / ! ! c\/ c~ cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 f0
- |- ((\fan. (!g. ((y4'_list (g , fan)) = ((y4'_fan fan) o g)))) fan)
T * / ! c= * part cy4'_list c, b1 b0 * * part co * part cy4'_fan b0 b1 f0
- |- (((!L. (!v. (((tri_list L) v) = (LENGTH ((FILTER (\f. ((LENGTH f) = (NUMERAL (BIT1 (BIT1 _0)))))) ((facesAt_list L) v)))))) ==> ((\L. (!v. (((tri_list L) v) = (LENGTH ((FILTER (\f. ((LENGTH f) = (NUMERAL (BIT1 (BIT1 _0)))))) ((facesAt_list L) v)))))) L)) = ((\L. (!v. (((tri_list L) v) = (LENGTH ((FILTER (\f. ((LENGTH f) = (NUMERAL (BIT1 (BIT1 _0)))))) ((facesAt_list L) v)))))) L))
T c= c==> ! ! c= ctri_list b0 b1 cLENGTH cFILTER / c= cLENGTH b2 cNUMERAL cBIT1 cBIT1 c_0 cfacesAt_list b0 b1 * / ! c= ctri_list b0 b1 cLENGTH cFILTER / c= cLENGTH b2 cNUMERAL cBIT1 cBIT1 c_0 cfacesAt_list b0 b1 f0 * / ! c= ctri_list b0 b1 cLENGTH cFILTER / c= cLENGTH b2 cNUMERAL cBIT1 cBIT1 c_0 cfacesAt_list b0 b1 f0
+ |- (((!V. ((packing V) ==> (?V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V')))))) ==> ((\V. ((packing V) ==> (?V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V')))))) V)) = ((\V. ((packing V) ==> (?V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V')))))) V))
T c= c==> ! c==> cpacking b0 c? / c/\ cpacking b1 c/\ csaturated b1 cSUBSET b0 b1 * / c==> cpacking b0 c? / c/\ cpacking b1 c/\ csaturated b1 cSUBSET b0 b1 f0 * / c==> cpacking b0 c? / c/\ cpacking b1 c/\ csaturated b1 cSUBSET b0 b1 f0
+ |- ((!V. ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> (~ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))))))))))) = T)
T c= ! c==> cpacking b0 c==> cpacking f0 c==> csaturated f0 c==> cSUBSET b0 f0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c~ ! ! ! c==> cpacking b3 cFINITE * * part cINTER b3 * part cball c, b1 b2 cT
- |- (((!g. ((azim_list (g , fan)) = ((azim_dart fan) o g))) ==> ((\g. ((azim_list (g , fan)) = ((azim_dart fan) o g))) g)) = ((\g. ((azim_list (g , fan)) = ((azim_dart fan) o g))) g))
T c= c==> ! c= * part cazim_list c, b0 f0 * * part co * part cazim_dart f0 b0 * / c= * part cazim_list c, b0 f0 * * part co * part cazim_dart f0 b0 f1 * / c= * part cazim_list c, b0 f0 * * part co * part cazim_dart f0 b0 f1
- |- (((!hi. (((interval_arith x) (lo , hi)) = (((real_le lo) x) /\ ((real_le x) hi)))) ==> ((\hi. (((interval_arith x) (lo , hi)) = (((real_le lo) x) /\ ((real_le x) hi)))) hi)) = ((\hi. (((interval_arith x) (lo , hi)) = (((real_le lo) x) /\ ((real_le x) hi)))) hi))
T c= c==> ! c= cinterval_arith f0 c, f1 b0 c/\ creal_le f1 f0 creal_le f0 b0 * / c= cinterval_arith f0 c, f1 b0 c/\ creal_le f1 f0 creal_le f0 b0 f2 * / c= cinterval_arith f0 c, f1 b0 c/\ creal_le f1 f0 creal_le f0 b0 f2
- ((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F), (((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F) ==> ((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F)) |- ((((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F) ==> ((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F)) /\ ((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F))
T c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 cF c==> c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 cF c/\ c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 cF
- |- ((\w. (!g. (((admissible' w) g) = (((admissible1 w) g) /\ (((admissible2 w) g) /\ ((admissible3 w) g)))))) w)
T * / ! c= cadmissible' b0 b1 c/\ cadmissible1 b0 b1 c/\ cadmissible2 b0 b1 cadmissible3 b0 b1 f0
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((\g. (!v. (((quad g) v) = (LENGTH ((FILTER (\f. ((SND f) /\ ((LENGTH (FST f)) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((facesAt g) v)))))) g)
T * / ! c= cquad b0 b1 cLENGTH cFILTER / c/\ cSND b2 c= cLENGTH cFST b2 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cfacesAt b0 b1 f0
- |- (((admissible1_list w) L) = (!Ln. (((MEM Ln) L) ==> ((squanderFace (LENGTH Ln)) <= (w Ln)))))
T c= cadmissible1_list f0 f1 ! c==> cMEM b0 f1 c<= csquanderFace cLENGTH b0 * f0 b0
- |- (((!g. ((tame12o g) = (!v. ((v IN (vertices_set2 g)) ==> ((((~= ((except g) v)) (NUMERAL _0)) /\ (((degree g) v) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((vertextype g) v) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))))))) ==> ((\g. ((tame12o g) = (!v. ((v IN (vertices_set2 g)) ==> ((((~= ((except g) v)) (NUMERAL _0)) /\ (((degree g) v) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((vertextype g) v) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))))))) g)) = ((\g. ((tame12o g) = (!v. ((v IN (vertices_set2 g)) ==> ((((~= ((except g) v)) (NUMERAL _0)) /\ (((degree g) v) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((vertextype g) v) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))))))) g))
T c= c==> ! c= ctame12o b0 ! c==> cIN b1 * part cvertices_set2 b0 c==> c/\ c~= cexcept b0 b1 cNUMERAL c_0 c= cdegree b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cvertextype b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 * / c= ctame12o b0 ! c==> cIN b1 * part cvertices_set2 b0 c==> c/\ c~= cexcept b0 b1 cNUMERAL c_0 c= cdegree b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cvertextype b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 * / c= ctame12o b0 ! c==> cIN b1 * part cvertices_set2 b0 c==> c/\ c~= cexcept b0 b1 cNUMERAL c_0 c= cdegree b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cvertextype b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0
- |- ((\x. (!i. (((((((nfgtrans' p) L) N) r) x) i) = (((foldl subdiv_triple_step) p) ((take i) ((((core_triple_v4 L) N) r) x)))))) x)
T * / ! c= cnfgtrans' f0 f1 f2 f3 b0 b1 cfoldl part csubdiv_triple_step f0 ctake b1 ccore_triple_v4 f1 f2 f3 b0 f4
- |- ((\g. ((azim3_list (g , fan)) = ((azim3_fan fan) o g))) g)
T * / c= * part cazim3_list c, b0 f0 * * part co * part cazim3_fan f0 b0 f1
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f0 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f0 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
- |- ((\L. (!x. ((((newvertex L) r) x) = ((LET (\f. (LET_END ((LET (\f'. (LET_END ((MAP FST) ((filter (\d. (~ ((MEM d) r)))) f'))))) ((rotate_to f) x))))) ((find_face L) x))))) L)
T * / ! c= cnewvertex b0 f0 b1 cLET / cLET_END cLET / cLET_END cMAP part cFST cfilter / c~ cMEM b4 f0 b3 crotate_to b2 b1 cfind_face b0 b1 f1
- |- ((\L. (!N. (!r. (!x. (((((core_split_normal_list L) N) r) x) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\z'. (LET_END ((LET (\fx. (LET_END ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\newVs. (LET_END ((((core L) f1) = ((cat (rev newVs)) ((cat ((CONS (FST y)) NIL)) ((cat (((betwn ((core L) r)) (FST y)) (FST z'))) ((CONS (FST z')) NIL))))) /\ (((core L) f2) = ((cat ((cat ((CONS (FST z')) NIL)) ((cat (((betwn ((core L) r)) (FST z')) (FST y))) ((CONS (FST y)) NIL)))) newVs)))))) ((MAP FST) (((betwn fx) y) z)))))))))) (((((split_normal_list L) r) fx) y) z'))))) ((find_face L) x))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)
T * / ! ! ! c= ccore_split_normal_list b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET * part cGABS / ! ! cGEQ * b8 c, b9 b10 cLET_END cLET / cLET_END c/\ c= ccore b0 b9 ccat crev b11 ccat cCONS cFST b4 cNIL ccat cbetwn ccore b0 b2 cFST b4 cFST b6 cCONS cFST b6 cNIL c= ccore b0 b10 ccat ccat cCONS cFST b6 cNIL ccat cbetwn ccore b0 b2 cFST b6 cFST b4 cCONS cFST b4 cNIL b11 cMAP part cFST cbetwn b7 b4 b5 csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b3 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
- |- ((((dest_triple0_rcons f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)))
T c= cdest_triple0_rcons f0 f1 c, f2 c, f3 f4 cLET / cLET_END cCOND c= cflatten f1 cNIL cflatten cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b1 f2 cflatten cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f0 b1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cMAP part cSOME cbetwn f0 b1 f2 cthe cLAST cLAST f1 cnseq f4 cNONE
- |- (((!E. ((lp_tau (V , E)) = (!f. ((f IN (face_set (hypermap_of_fan (V , E)))) ==> ((real_le (real_of_num (NUMERAL _0))) (tauVEF (V , (E , f)))))))) ==> ((\E. ((lp_tau (V , E)) = (!f. ((f IN (face_set (hypermap_of_fan (V , E)))) ==> ((real_le (real_of_num (NUMERAL _0))) (tauVEF (V , (E , f)))))))) E)) = ((\E. ((lp_tau (V , E)) = (!f. ((f IN (face_set (hypermap_of_fan (V , E)))) ==> ((real_le (real_of_num (NUMERAL _0))) (tauVEF (V , (E , f)))))))) E))
T c= c==> ! c= clp_tau c, f0 b0 ! c==> cIN b1 * part cface_set chypermap_of_fan c, f0 b0 creal_le creal_of_num cNUMERAL c_0 ctauVEF c, f0 c, b0 b1 * / c= clp_tau c, f0 b0 ! c==> cIN b1 * part cface_set chypermap_of_fan c, f0 b0 creal_le creal_of_num cNUMERAL c_0 ctauVEF c, f0 c, b0 b1 f1 * / c= clp_tau c, f0 b0 ! c==> cIN b1 * part cface_set chypermap_of_fan c, f0 b0 creal_le creal_of_num cNUMERAL c_0 ctauVEF c, f0 c, b0 b1 f1
- |- (T = (((~ (V _11404655)) \/ (V' _11404655)) = ((V' _11404655) \/ (~ (V _11404655)))))
T c= cT c= c\/ c~ * f0 f1 * f2 f1 c\/ * f2 f1 c~ * f0 f1
+ (!x. ((V x) ==> (V' x))), ((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) |- ((~ (V' x)) ==> F)
T c==> ! c==> * f0 b0 * f1 b0 c==> c/\ * f0 f2 cball c, cvec cNUMERAL c_0 f3 f2 c==> c~ * f1 f2 cF
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- |- (((!N. (!r. (!x. (!i. ((((((((b_nfgtrans0 f0) g) L) N) r) x) i) = ((LET (\fx. (LET_END ((LET (\fst_u0. (LET_END (((foldl subdiv_single_step) ((fst_u0 , (NUMERAL _0)) , (f0 , g))) ((((((batch0 (FST f0)) L) N) r) x) i))))) (((COND ((FST ((next_el fx) x)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0))))) NONE) (SOME ((prev_el (FST f0)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))))))))) ((find_face L) x))))))) ==> ((\N. (!r. (!x. (!i. ((((((((b_nfgtrans0 f0) g) L) N) r) x) i) = ((LET (\fx. (LET_END ((LET (\fst_u0. (LET_END (((foldl subdiv_single_step) ((fst_u0 , (NUMERAL _0)) , (f0 , g))) ((((((batch0 (FST f0)) L) N) r) x) i))))) (((COND ((FST ((next_el fx) x)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0))))) NONE) (SOME ((prev_el (FST f0)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))))))))) ((find_face L) x))))))) N)) = ((\N. (!r. (!x. (!i. ((((((((b_nfgtrans0 f0) g) L) N) r) x) i) = ((LET (\fx. (LET_END ((LET (\fst_u0. (LET_END (((foldl subdiv_single_step) ((fst_u0 , (NUMERAL _0)) , (f0 , g))) ((((((batch0 (FST f0)) L) N) r) x) i))))) (((COND ((FST ((next_el fx) x)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0))))) NONE) (SOME ((prev_el (FST f0)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))))))))) ((find_face L) x))))))) N))
T c= c==> ! ! ! ! c= cb_nfgtrans0 f0 f1 f2 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cfoldl part csubdiv_single_step c, c, b5 cNUMERAL c_0 c, f0 f1 cbatch0 cFST f0 f2 b0 b1 b2 b3 cCOND c= cFST cnext_el b4 b2 cFST cytrans f2 b0 b1 b2 cNUMERAL c_0 cNONE cSOME cprev_el cFST f0 cFST cytrans f2 b0 b1 b2 cNUMERAL c_0 cfind_face f2 b2 * / ! ! ! c= cb_nfgtrans0 f0 f1 f2 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cfoldl part csubdiv_single_step c, c, b5 cNUMERAL c_0 c, f0 f1 cbatch0 cFST f0 f2 b0 b1 b2 b3 cCOND c= cFST cnext_el b4 b2 cFST cytrans f2 b0 b1 b2 cNUMERAL c_0 cNONE cSOME cprev_el cFST f0 cFST cytrans f2 b0 b1 b2 cNUMERAL c_0 cfind_face f2 b2 f3 * / ! ! ! c= cb_nfgtrans0 f0 f1 f2 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cfoldl part csubdiv_single_step c, c, b5 cNUMERAL c_0 c, f0 f1 cbatch0 cFST f0 f2 b0 b1 b2 b3 cCOND c= cFST cnext_el b4 b2 cFST cytrans f2 b0 b1 b2 cNUMERAL c_0 cNONE cSOME cprev_el cFST f0 cFST cytrans f2 b0 b1 b2 cNUMERAL c_0 cfind_face f2 b2 f3
- |- (((!g. (!v. (((vertextype g) v) = (((tri g) v) , (((quad g) v) , ((except g) v)))))) ==> ((\g. (!v. (((vertextype g) v) = (((tri g) v) , (((quad g) v) , ((except g) v)))))) g)) = ((\g. (!v. (((vertextype g) v) = (((tri g) v) , (((quad g) v) , ((except g) v)))))) g))
T c= c==> ! ! c= cvertextype b0 b1 c, ctri b0 b1 c, cquad b0 b1 cexcept b0 b1 * / ! c= cvertextype b0 b1 c, ctri b0 b1 c, cquad b0 b1 cexcept b0 b1 f0 * / ! c= cvertextype b0 b1 c, ctri b0 b1 c, cquad b0 b1 cexcept b0 b1 f0
- |- (((!E. (((sol_fan (V , E)) f) = (real_abs ((real_add ((sum f) (\x. ((real_sub ((azim_dart (V , E)) x)) pi)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) ==> ((\E. (((sol_fan (V , E)) f) = (real_abs ((real_add ((sum f) (\x. ((real_sub ((azim_dart (V , E)) x)) pi)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) E)) = ((\E. (((sol_fan (V , E)) f) = (real_abs ((real_add ((sum f) (\x. ((real_sub ((azim_dart (V , E)) x)) pi)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) E))
T c= c==> ! c= csol_fan c, f0 b0 f1 creal_abs creal_add csum f1 / creal_sub cazim_dart c, f0 b0 b1 cpi creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi * / c= csol_fan c, f0 b0 f1 creal_abs creal_add csum f1 / creal_sub cazim_dart c, f0 b0 b1 cpi creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f2 * / c= csol_fan c, f0 b0 f1 creal_abs creal_add csum f1 / creal_sub cazim_dart c, f0 b0 b1 cpi creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f2
+ (packing V), (packing V'), (saturated V'), (V SUBSET V') |- (((!x. (((\c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) x) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))) ==> ((?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))) = ((?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> cSUBSET f0 f1 c= c==> ! c==> * / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_mul cpi creal_div creal_pow b2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b1 creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0 b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_mul cpi creal_div creal_pow b2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b1 creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0 c==> c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
- |- (((except g) v) = (LENGTH ((FILTER (\f. ((SND f) /\ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (LENGTH (FST f)))))) ((facesAt g) v))))
T c= cexcept f0 f1 cLENGTH cFILTER / c/\ cSND b0 c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cLENGTH cFST b0 cfacesAt f0 f1
- |- ((\w. (((admissible1_list w) L) = (!f. (((MEM f) L) ==> ((squanderFace (LENGTH f)) <= (w f)))))) w)
T * / c= cadmissible1_list b0 f0 ! c==> cMEM b1 f0 c<= csquanderFace cLENGTH b1 * b0 b1 f1
- |- ((rhazim2_list (g , fan)) = ((rhazim2_fan fan) o g))
T c= * part crhazim2_list c, f0 f1 * * part co * part crhazim2_fan f1 f0
- (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))), (~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))), (packing V') |- ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) /\ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r)))))
T c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c==> cpacking f0 c/\ c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1
- |- (((!x. ((y1_fan x) = (vector_norm (FST x)))) ==> ((\x. ((y1_fan x) = (vector_norm (FST x)))) x)) = ((\x. ((y1_fan x) = (vector_norm (FST x)))) x))
T c= c==> ! c= cy1_fan b0 cvector_norm cFST b0 * / c= cy1_fan b0 cvector_norm cFST b0 f0 * / c= cy1_fan b0 cvector_norm cFST b0 f0
- |- (((!g. (((admissible' w) g) = (((admissible1 w) g) /\ (((admissible2 w) g) /\ ((admissible3 w) g))))) ==> ((\g. (((admissible' w) g) = (((admissible1 w) g) /\ (((admissible2 w) g) /\ ((admissible3 w) g))))) g)) = ((\g. (((admissible' w) g) = (((admissible1 w) g) /\ (((admissible2 w) g) /\ ((admissible3 w) g))))) g))
T c= c==> ! c= cadmissible' f0 b0 c/\ cadmissible1 f0 b0 c/\ cadmissible2 f0 b0 cadmissible3 f0 b0 * / c= cadmissible' f0 b0 c/\ cadmissible1 f0 b0 c/\ cadmissible2 f0 b0 cadmissible3 f0 b0 f1 * / c= cadmissible' f0 b0 c/\ cadmissible1 f0 b0 c/\ cadmissible2 f0 b0 cadmissible3 f0 b0 f1
- |- (((!g. ((tame9a g) = (!f. ((f IN (Faces g)) ==> (((NUMERAL (BIT1 (BIT1 _0))) <= (LENGTH (FST f))) /\ ((LENGTH (FST f)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))) ==> ((\g. ((tame9a g) = (!f. ((f IN (Faces g)) ==> (((NUMERAL (BIT1 (BIT1 _0))) <= (LENGTH (FST f))) /\ ((LENGTH (FST f)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))) g)) = ((\g. ((tame9a g) = (!f. ((f IN (Faces g)) ==> (((NUMERAL (BIT1 (BIT1 _0))) <= (LENGTH (FST f))) /\ ((LENGTH (FST f)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))) g))
T c= c==> ! c= ctame9a b0 ! c==> cIN b1 * part cFaces b0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cLENGTH cFST b1 c<= cLENGTH cFST b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 * / c= ctame9a b0 ! c==> cIN b1 * part cFaces b0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cLENGTH cFST b1 c<= cLENGTH cFST b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 * / c= ctame9a b0 ! c==> cIN b1 * part cFaces b0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cLENGTH cFST b1 c<= cLENGTH cFST b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0
- |- ((\x. (((y3_fan (V , E)) x) = (vector_norm (FST ((inverse (f_fan_pair_ext (V , E))) x))))) x)
T * / c= cy3_fan c, f0 f1 b0 cvector_norm cFST cinverse * part cf_fan_pair_ext c, f0 f1 b0 f2
- |- ((\r. (!x. (!i. ((((((((b_nfgtrans0 f0) g) L) N) r) x) i) = ((LET (\fx. (LET_END ((LET (\fst_u0. (LET_END (((foldl subdiv_single_step) ((fst_u0 , (NUMERAL _0)) , (f0 , g))) ((((((batch0 (FST f0)) L) N) r) x) i))))) (((COND ((FST ((next_el fx) x)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0))))) NONE) (SOME ((prev_el (FST f0)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))))))))) ((find_face L) x)))))) r)
T * / ! ! c= cb_nfgtrans0 f0 f1 f2 f3 b0 b1 b2 cLET / cLET_END cLET / cLET_END cfoldl part csubdiv_single_step c, c, b4 cNUMERAL c_0 c, f0 f1 cbatch0 cFST f0 f2 f3 b0 b1 b2 cCOND c= cFST cnext_el b3 b1 cFST cytrans f2 f3 b0 b1 cNUMERAL c_0 cNONE cSOME cprev_el cFST f0 cFST cytrans f2 f3 b0 b1 cNUMERAL c_0 cfind_face f2 b1 f4
- |- (((y3_fan (V , E)) x) = (vector_norm (FST ((inverse (f_fan_pair_ext (V , E))) x))))
T c= cy3_fan c, f0 f1 f2 cvector_norm cFST cinverse * part cf_fan_pair_ext c, f0 f1 f2
+ (A = F) |- ((((A ==> B) /\ A) ==> B) = (((F ==> B) /\ F) ==> B))
T c==> c= f0 cF c= c==> c/\ c==> f0 f1 f0 f1 c==> c/\ c==> cF f1 cF f1
- |- (((!d. (!f_test. (!V. ((((a_tau f_test) V) d) = ((LET (\H. (LET_END ((LET (\s. (LET_END ((real_div ((sum s) (\y. (tauVEF (V , ((ESTD V) , ((face H) y))))))) (real_of_num (CARD s)))))) (GSPEC (\GEN%PVAR%8733. (?y. (((SETSPEC GEN%PVAR%8733) ((y IN ((node H) d)) /\ (f_test (CARD ((face H) y))))) y)))))))) (hypermap_of_fan (V , (ESTD V)))))))) ==> ((\d. (!f_test. (!V. ((((a_tau f_test) V) d) = ((LET (\H. (LET_END ((LET (\s. (LET_END ((real_div ((sum s) (\y. (tauVEF (V , ((ESTD V) , ((face H) y))))))) (real_of_num (CARD s)))))) (GSPEC (\GEN%PVAR%8733. (?y. (((SETSPEC GEN%PVAR%8733) ((y IN ((node H) d)) /\ (f_test (CARD ((face H) y))))) y)))))))) (hypermap_of_fan (V , (ESTD V)))))))) d)) = ((\d. (!f_test. (!V. ((((a_tau f_test) V) d) = ((LET (\H. (LET_END ((LET (\s. (LET_END ((real_div ((sum s) (\y. (tauVEF (V , ((ESTD V) , ((face H) y))))))) (real_of_num (CARD s)))))) (GSPEC (\GEN%PVAR%8733. (?y. (((SETSPEC GEN%PVAR%8733) ((y IN ((node H) d)) /\ (f_test (CARD ((face H) y))))) y)))))))) (hypermap_of_fan (V , (ESTD V)))))))) d))
T c= c==> ! ! ! c= ca_tau b1 b2 b0 cLET / cLET_END cLET / cLET_END creal_div csum b4 / ctauVEF c, b2 c, * part cESTD b2 * * part cface b3 b5 creal_of_num cCARD b4 * part cGSPEC / c? / cSETSPEC b4 c/\ cIN b5 * * part cnode b3 b0 * b1 cCARD * * part cface b3 b5 b5 chypermap_of_fan c, b2 * part cESTD b2 * / ! ! c= ca_tau b1 b2 b0 cLET / cLET_END cLET / cLET_END creal_div csum b4 / ctauVEF c, b2 c, * part cESTD b2 * * part cface b3 b5 creal_of_num cCARD b4 * part cGSPEC / c? / cSETSPEC b4 c/\ cIN b5 * * part cnode b3 b0 * b1 cCARD * * part cface b3 b5 b5 chypermap_of_fan c, b2 * part cESTD b2 f0 * / ! ! c= ca_tau b1 b2 b0 cLET / cLET_END cLET / cLET_END creal_div csum b4 / ctauVEF c, b2 c, * part cESTD b2 * * part cface b3 b5 creal_of_num cCARD b4 * part cGSPEC / c? / cSETSPEC b4 c/\ cIN b5 * * part cnode b3 b0 * b1 cCARD * * part cface b3 b5 b5 chypermap_of_fan c, b2 * part cESTD b2 f0
- |- ((\w. (!H. (((adm_2_floor H) w) = (!x. (((x IN (dart H)) /\ ((CARD ((set_of_exceptional_meeting_node H) x)) = (NUMERAL _0))) ==> (((nsum ((set_of_face_meeting_node H) x)) w) >= ((squanderVertex (CARD ((set_of_triangles_meeting_node H) x))) (CARD ((set_of_quadrilaterals_meeting_node H) x))))))))) w)
T * / ! c= cadm_2_floor b1 b0 ! c==> c/\ cIN b2 * part cdart b1 c= cCARD * * part cset_of_exceptional_meeting_node b1 b2 cNUMERAL c_0 c>= cnsum * * part cset_of_face_meeting_node b1 b2 b0 csquanderVertex cCARD * * part cset_of_triangles_meeting_node b1 b2 cCARD * * part cset_of_quadrilaterals_meeting_node b1 b2 f0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0
- |- ((\A. (((//// A) f) = ((IMAGE f) A))) A)
T * / c= * * part c//// b0 f0 * * part cIMAGE f0 b0 f1
- |- ((\V. (!E. (!x. (((y8_fan (V , E)) x) = ((y5_fan (V , E)) ((inverse (f_fan_pair_ext (V , E))) x)))))) V)
T * / ! ! c= cy8_fan c, b0 b1 b2 cy5_fan c, b0 b1 cinverse * part cf_fan_pair_ext c, b0 b1 b2 f0
- (~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) |- ((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) /\ F)
T c==> c~ c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ c~ c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 cF
- ((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F), (((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F) ==> ((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F)) |- (((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F) /\ ((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F))
T c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 cF c==> c==> c==> c~ c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 cF c/\ c==> c~ c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 cF c==> c~ c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 cF
+ (packing V), (packing V'), (saturated V'), (V SUBSET V') |- (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F)))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> cSUBSET f0 f1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c~ cFINITE * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 cF
- |- (((!v. (((tri_list L) v) = (LENGTH ((FILTER (\f. ((LENGTH f) = (NUMERAL (BIT1 (BIT1 _0)))))) ((facesAt_list L) v))))) ==> ((\v. (((tri_list L) v) = (LENGTH ((FILTER (\f. ((LENGTH f) = (NUMERAL (BIT1 (BIT1 _0)))))) ((facesAt_list L) v))))) v)) = ((\v. (((tri_list L) v) = (LENGTH ((FILTER (\f. ((LENGTH f) = (NUMERAL (BIT1 (BIT1 _0)))))) ((facesAt_list L) v))))) v))
T c= c==> ! c= ctri_list f0 b0 cLENGTH cFILTER / c= cLENGTH b1 cNUMERAL cBIT1 cBIT1 c_0 cfacesAt_list f0 b0 * / c= ctri_list f0 b0 cLENGTH cFILTER / c= cLENGTH b1 cNUMERAL cBIT1 cBIT1 c_0 cfacesAt_list f0 b0 f1 * / c= ctri_list f0 b0 cLENGTH cFILTER / c= cLENGTH b1 cNUMERAL cBIT1 cBIT1 c_0 cfacesAt_list f0 b0 f1
- |- ((tau_list (g , fan)) = ((tau_fan fan) o (IMAGE g)))
T c= * part ctau_list c, f0 f1 * * part co * part ctau_fan f1 * part cIMAGE f0
- ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F))))))) |- (((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F))))))) /\ ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F))))))))
T c==> c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> cSUBSET f0 f1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c~ cFINITE * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 cF c/\ c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> cSUBSET f0 f1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c~ cFINITE * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 cF c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> cSUBSET f0 f1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c~ cFINITE * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 cF
+ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))), (packing V') |- (FINITE (V' INTER (ball (_11404657 , _11404658))))
T c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 c==> cpacking f0 cFINITE * * part cINTER f0 * part cball c, f1 f2
- |- ((\E. (!x. (((y9_fan (V , E)) x) = (distance ((f_fan_pair_ext (V , E)) x))))) E)
T * / ! c= cy9_fan c, f0 b0 b1 cdistance cf_fan_pair_ext c, f0 b0 b1 f1
- |- (((!H. (!w. (((adm_3_floor H) w) = (!x. (((x IN (dart H)) /\ (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) ==> (((nsum ((set_of_triangles_meeting_node H) x)) w) >= excessTCount)))))) ==> ((\H. (!w. (((adm_3_floor H) w) = (!x. (((x IN (dart H)) /\ (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) ==> (((nsum ((set_of_triangles_meeting_node H) x)) w) >= excessTCount)))))) H)) = ((\H. (!w. (((adm_3_floor H) w) = (!x. (((x IN (dart H)) /\ (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) ==> (((nsum ((set_of_triangles_meeting_node H) x)) w) >= excessTCount)))))) H))
T c= c==> ! ! c= cadm_3_floor b0 b1 ! c==> c/\ cIN b2 * part cdart b0 c= ctype_of_node b0 b2 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c>= cnsum * * part cset_of_triangles_meeting_node b0 b2 b1 cexcessTCount * / ! c= cadm_3_floor b0 b1 ! c==> c/\ cIN b2 * part cdart b0 c= ctype_of_node b0 b2 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c>= cnsum * * part cset_of_triangles_meeting_node b0 b2 b1 cexcessTCount f0 * / ! c= cadm_3_floor b0 b1 ! c==> c/\ cIN b2 * part cdart b0 c= ctype_of_node b0 b2 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c>= cnsum * * part cset_of_triangles_meeting_node b0 b2 b1 cexcessTCount f0
- |- (((rhazim3_fan (V , E)) x) = ((rhazim_fan (V , E)) ((inverse (f_fan_pair_ext (V , E))) x)))
T c= crhazim3_fan c, f0 f1 f2 crhazim_fan c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 f2
+ (packing V), (packing V'), (saturated V'), ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r), (V SUBSET V') |- ((((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ==> (((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))) /\ ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> cSUBSET f0 f1 c/\ c==> creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 c==> creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 creal_add creal_mul cpi creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 creal_add creal_mul cpi creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2
+ |- ((((~ (((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ==> (((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) ==> F) ==> (((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ==> (((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) = (((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ==> (((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))
T c= c==> c==> c~ c==> creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 c==> creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul cpi creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul cpi creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 cF c==> creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 c==> creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul cpi creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul cpi creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 c==> creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul cpi creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul cpi creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0
- |- (((!L. ((tame11a_list L) = (!v. ((v IN (elements_of_list L)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (LENGTH ((facesAt_list L) v))))))) ==> ((\L. ((tame11a_list L) = (!v. ((v IN (elements_of_list L)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (LENGTH ((facesAt_list L) v))))))) L)) = ((\L. ((tame11a_list L) = (!v. ((v IN (elements_of_list L)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (LENGTH ((facesAt_list L) v))))))) L))
T c= c==> ! c= ctame11a_list b0 ! c==> cIN b1 * part celements_of_list b0 c<= cNUMERAL cBIT1 cBIT1 c_0 cLENGTH cfacesAt_list b0 b1 * / c= ctame11a_list b0 ! c==> cIN b1 * part celements_of_list b0 c<= cNUMERAL cBIT1 cBIT1 c_0 cLENGTH cfacesAt_list b0 b1 f0 * / c= ctame11a_list b0 ! c==> cIN b1 * part celements_of_list b0 c<= cNUMERAL cBIT1 cBIT1 c_0 cLENGTH cfacesAt_list b0 b1 f0
- |- (((!f0. (!g. (!L. (!N. (!r. (!x. (!i. ((((((((b_nfgtrans0 f0) g) L) N) r) x) i) = ((LET (\fx. (LET_END ((LET (\fst_u0. (LET_END (((foldl subdiv_single_step) ((fst_u0 , (NUMERAL _0)) , (f0 , g))) ((((((batch0 (FST f0)) L) N) r) x) i))))) (((COND ((FST ((next_el fx) x)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0))))) NONE) (SOME ((prev_el (FST f0)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))))))))) ((find_face L) x)))))))))) ==> ((\f0. (!g. (!L. (!N. (!r. (!x. (!i. ((((((((b_nfgtrans0 f0) g) L) N) r) x) i) = ((LET (\fx. (LET_END ((LET (\fst_u0. (LET_END (((foldl subdiv_single_step) ((fst_u0 , (NUMERAL _0)) , (f0 , g))) ((((((batch0 (FST f0)) L) N) r) x) i))))) (((COND ((FST ((next_el fx) x)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0))))) NONE) (SOME ((prev_el (FST f0)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))))))))) ((find_face L) x)))))))))) f0)) = ((\f0. (!g. (!L. (!N. (!r. (!x. (!i. ((((((((b_nfgtrans0 f0) g) L) N) r) x) i) = ((LET (\fx. (LET_END ((LET (\fst_u0. (LET_END (((foldl subdiv_single_step) ((fst_u0 , (NUMERAL _0)) , (f0 , g))) ((((((batch0 (FST f0)) L) N) r) x) i))))) (((COND ((FST ((next_el fx) x)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0))))) NONE) (SOME ((prev_el (FST f0)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))))))))) ((find_face L) x)))))))))) f0))
T c= c==> ! ! ! ! ! ! ! c= cb_nfgtrans0 b0 b1 b2 b3 b4 b5 b6 cLET / cLET_END cLET / cLET_END cfoldl part csubdiv_single_step c, c, b8 cNUMERAL c_0 c, b0 b1 cbatch0 cFST b0 b2 b3 b4 b5 b6 cCOND c= cFST cnext_el b7 b5 cFST cytrans b2 b3 b4 b5 cNUMERAL c_0 cNONE cSOME cprev_el cFST b0 cFST cytrans b2 b3 b4 b5 cNUMERAL c_0 cfind_face b2 b5 * / ! ! ! ! ! ! c= cb_nfgtrans0 b0 b1 b2 b3 b4 b5 b6 cLET / cLET_END cLET / cLET_END cfoldl part csubdiv_single_step c, c, b8 cNUMERAL c_0 c, b0 b1 cbatch0 cFST b0 b2 b3 b4 b5 b6 cCOND c= cFST cnext_el b7 b5 cFST cytrans b2 b3 b4 b5 cNUMERAL c_0 cNONE cSOME cprev_el cFST b0 cFST cytrans b2 b3 b4 b5 cNUMERAL c_0 cfind_face b2 b5 f0 * / ! ! ! ! ! ! c= cb_nfgtrans0 b0 b1 b2 b3 b4 b5 b6 cLET / cLET_END cLET / cLET_END cfoldl part csubdiv_single_step c, c, b8 cNUMERAL c_0 c, b0 b1 cbatch0 cFST b0 b2 b3 b4 b5 b6 cCOND c= cFST cnext_el b7 b5 cFST cytrans b2 b3 b4 b5 cNUMERAL c_0 cNONE cSOME cprev_el cFST b0 cFST cytrans b2 b3 b4 b5 cNUMERAL c_0 cfind_face b2 b5 f0
- |- (((!X. (((((contour_list_connected_v2 L) X) u) v) = (?s. ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ (((contour_list L) s) /\ ((set_of_list s) SUBSET X)))))))) ==> ((\X. (((((contour_list_connected_v2 L) X) u) v) = (?s. ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ (((contour_list L) s) /\ ((set_of_list s) SUBSET X)))))))) X)) = ((\X. (((((contour_list_connected_v2 L) X) u) v) = (?s. ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ (((contour_list L) s) /\ ((set_of_list s) SUBSET X)))))))) X))
T c= c==> ! c= ccontour_list_connected_v2 f0 b0 f1 f2 c? / c/\ c~ c= b1 cNIL c/\ c= cHD b1 f1 c/\ c= cLAST b1 f2 c/\ ccontour_list f0 b1 cSUBSET * part cset_of_list b1 b0 * / c= ccontour_list_connected_v2 f0 b0 f1 f2 c? / c/\ c~ c= b1 cNIL c/\ c= cHD b1 f1 c/\ c= cLAST b1 f2 c/\ ccontour_list f0 b1 cSUBSET * part cset_of_list b1 b0 f3 * / c= ccontour_list_connected_v2 f0 b0 f1 f2 c? / c/\ c~ c= b1 cNIL c/\ c= cHD b1 f1 c/\ c= cLAST b1 f2 c/\ ccontour_list f0 b1 cSUBSET * part cset_of_list b1 b0 f3
+ (~ ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x))) |- ((~ (V' x)) \/ (~ ((ball ((vec (NUMERAL _0)) , r)) x)))
T c==> c~ c/\ * f0 f1 cball c, cvec cNUMERAL c_0 f2 f1 c\/ c~ * f0 f1 c~ cball c, cvec cNUMERAL c_0 f2 f1
- |- (((!x. (((azim3_fan (V , E)) x) = ((azim_dart (V , E)) ((inverse (f_fan_pair_ext (V , E))) x)))) ==> ((\x. (((azim3_fan (V , E)) x) = ((azim_dart (V , E)) ((inverse (f_fan_pair_ext (V , E))) x)))) x)) = ((\x. (((azim3_fan (V , E)) x) = ((azim_dart (V , E)) ((inverse (f_fan_pair_ext (V , E))) x)))) x))
T c= c==> ! c= cazim3_fan c, f0 f1 b0 cazim_dart c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 b0 * / c= cazim3_fan c, f0 f1 b0 cazim_dart c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 b0 f2 * / c= cazim3_fan c, f0 f1 b0 cazim_dart c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\V. (!g. (!E. (!diags. (((add_diag_list (g , (V , E))) diags) = (((foldr (\d. (\E'. ((add_diag (V , E')) (g d))))) E) diags)))))) V)
T * / ! ! ! c= * * part cadd_diag_list c, b1 c, b0 b2 b3 * * * part cfoldr / / * * part cadd_diag c, b0 b5 * b1 b4 b2 b3 f0
- |- (((adm_3_floor H) w) = (!Ln. (((Ln IN (dart H)) /\ (((type_of_node H) Ln) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) ==> (((nsum ((set_of_triangles_meeting_node H) Ln)) w) >= excessTCount))))
T c= cadm_3_floor f0 f1 ! c==> c/\ cIN b0 * part cdart f0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c>= cnsum * * part cset_of_triangles_meeting_node f0 b0 f1 cexcessTCount
- |- (((admissible' w) g) = (((admissible1 w) g) /\ (((admissible2 w) g) /\ ((admissible3 w) g))))
T c= cadmissible' f0 f1 c/\ cadmissible1 f0 f1 c/\ cadmissible2 f0 f1 cadmissible3 f0 f1
- |- ((\V. ((lp_fan (V , E)) = ((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((fully_surrounded (V , E)) /\ ((!v. (!w. (((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ (~ ((v INSERT (w INSERT EMPTY)) IN E))))) ==> ((real_le ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (distance (v , w)))))) /\ ((V SUBSET ball_annulus) /\ (packing V))))))) V)
T * / c= clp_fan c, b0 f0 c/\ cFAN c, cvec cNUMERAL c_0 c, b0 f0 c/\ cfully_surrounded c, b0 f0 c/\ ! ! c==> c/\ cIN b1 b0 c/\ cIN b2 b0 c/\ c~ c= b1 b2 c~ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0 creal_le cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cdistance c, b1 b2 c/\ cSUBSET b0 part cball_annulus cpacking b0 f1
- |- ((\fan. (!g. ((y5_list (g , fan)) = ((y5_fan fan) o g)))) fan)
T * / ! c= * part cy5_list c, b1 b0 * * part co * part cy5_fan b0 b1 f0
- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0
- (V SUBSET V') |- ((V SUBSET V') = T)
T c==> cSUBSET f0 f1 c= cSUBSET f0 f1 cT
- |- (((!E. (!x. (((y8_fan (V , E)) x) = ((y5_fan (V , E)) ((inverse (f_fan_pair_ext (V , E))) x))))) ==> ((\E. (!x. (((y8_fan (V , E)) x) = ((y5_fan (V , E)) ((inverse (f_fan_pair_ext (V , E))) x))))) E)) = ((\E. (!x. (((y8_fan (V , E)) x) = ((y5_fan (V , E)) ((inverse (f_fan_pair_ext (V , E))) x))))) E))
T c= c==> ! ! c= cy8_fan c, f0 b0 b1 cy5_fan c, f0 b0 cinverse * part cf_fan_pair_ext c, f0 b0 b1 * / ! c= cy8_fan c, f0 b0 b1 cy5_fan c, f0 b0 cinverse * part cf_fan_pair_ext c, f0 b0 b1 f1 * / ! c= cy8_fan c, f0 b0 b1 cy5_fan c, f0 b0 cinverse * part cf_fan_pair_ext c, f0 b0 b1 f1
- |- ((\f_test. (!V. ((((a_azim f_test) V) d) = ((LET (\H. (LET_END ((LET (\s. (LET_END ((real_div ((sum s) (azim_dart (V , (ESTD V))))) (real_of_num (CARD s)))))) (GSPEC (\GEN%PVAR%8732. (?y. (((SETSPEC GEN%PVAR%8732) ((y IN ((node H) d)) /\ (f_test (CARD ((face H) y))))) y)))))))) (hypermap_of_fan (V , (ESTD V))))))) f_test)
T * / ! c= ca_azim b0 b1 f0 cLET / cLET_END cLET / cLET_END creal_div csum b3 * part cazim_dart c, b1 * part cESTD b1 creal_of_num cCARD b3 * part cGSPEC / c? / cSETSPEC b3 c/\ cIN b4 * * part cnode b2 f0 * b0 cCARD * * part cface b2 b4 b4 chypermap_of_fan c, b1 * part cESTD b1 f1
- |- (((!x. (((y7_fan (V , E)) x) = (vector_norm (FST (((POWER (inverse (f_fan_pair_ext (V , E)))) (NUMERAL (BIT0 (BIT1 _0)))) x))))) ==> ((\x. (((y7_fan (V , E)) x) = (vector_norm (FST (((POWER (inverse (f_fan_pair_ext (V , E)))) (NUMERAL (BIT0 (BIT1 _0)))) x))))) x)) = ((\x. (((y7_fan (V , E)) x) = (vector_norm (FST (((POWER (inverse (f_fan_pair_ext (V , E)))) (NUMERAL (BIT0 (BIT1 _0)))) x))))) x))
T c= c==> ! c= cy7_fan c, f0 f1 b0 cvector_norm cFST cPOWER * part cinverse * part cf_fan_pair_ext c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 * / c= cy7_fan c, f0 f1 b0 cvector_norm cFST cPOWER * part cinverse * part cf_fan_pair_ext c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f2 * / c= cy7_fan c, f0 f1 b0 cvector_norm cFST cPOWER * part cinverse * part cf_fan_pair_ext c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 b0 f2
- (~ (packing V')), (packing V') |- ((~ (packing V')) /\ (packing V'))
T c==> c~ cpacking f0 c==> cpacking f0 c/\ c~ cpacking f0 cpacking f0
- |- (((!L. (!x. ((((newvertex L) r) x) = ((LET (\f. (LET_END ((LET (\f'. (LET_END ((MAP FST) ((filter (\d. (~ ((MEM d) r)))) f'))))) ((rotate_to f) x))))) ((find_face L) x))))) ==> ((\L. (!x. ((((newvertex L) r) x) = ((LET (\f. (LET_END ((LET (\f'. (LET_END ((MAP FST) ((filter (\d. (~ ((MEM d) r)))) f'))))) ((rotate_to f) x))))) ((find_face L) x))))) L)) = ((\L. (!x. ((((newvertex L) r) x) = ((LET (\f. (LET_END ((LET (\f'. (LET_END ((MAP FST) ((filter (\d. (~ ((MEM d) r)))) f'))))) ((rotate_to f) x))))) ((find_face L) x))))) L))
T c= c==> ! ! c= cnewvertex b0 f0 b1 cLET / cLET_END cLET / cLET_END cMAP part cFST cfilter / c~ cMEM b4 f0 b3 crotate_to b2 b1 cfind_face b0 b1 * / ! c= cnewvertex b0 f0 b1 cLET / cLET_END cLET / cLET_END cMAP part cFST cfilter / c~ cMEM b4 f0 b3 crotate_to b2 b1 cfind_face b0 b1 f1 * / ! c= cnewvertex b0 f0 b1 cLET / cLET_END cLET / cLET_END cMAP part cFST cfilter / c~ cMEM b4 f0 b3 crotate_to b2 b1 cfind_face b0 b1 f1
- |- ((\g. ((y4_list (g , fan)) = ((y4_fan fan) o g))) g)
T * / c= * part cy4_list c, b0 f0 * * part co * part cy4_fan f0 b0 f1
+ (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (packing V'), (saturated V'), (V SUBSET V') |- (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b0 creal_add creal_mul cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f2 c==> cpacking f0 c==> csaturated f0 c==> cSUBSET f2 f0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f3 creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f3 creal_add creal_mul cpi creal_div creal_pow f3 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0
- (!a. (!b. (((a SUBSET b) /\ (FINITE b)) ==> ((CARD a) <= (CARD b))))), ((a SUBSET b) /\ (FINITE b)) |- ((CARD a) <= (CARD b))
T c==> ! ! c==> c/\ cSUBSET b0 b1 cFINITE b1 c<= cCARD b0 cCARD b1 c==> c/\ cSUBSET f0 f1 cFINITE f1 c<= cCARD f0 cCARD f1
- |- ((\fan. (!g. ((rhazim_list (g , fan)) = ((rhazim_fan fan) o g)))) fan)
T * / ! c= * part crhazim_list c, b1 b0 * * part co * part crhazim_fan b0 b1 f0
- |- (((!V. ((((a_azim f_test) V) d) = ((LET (\H. (LET_END ((LET (\s. (LET_END ((real_div ((sum s) (azim_dart (V , (ESTD V))))) (real_of_num (CARD s)))))) (GSPEC (\GEN%PVAR%8732. (?y. (((SETSPEC GEN%PVAR%8732) ((y IN ((node H) d)) /\ (f_test (CARD ((face H) y))))) y)))))))) (hypermap_of_fan (V , (ESTD V)))))) ==> ((\V. ((((a_azim f_test) V) d) = ((LET (\H. (LET_END ((LET (\s. (LET_END ((real_div ((sum s) (azim_dart (V , (ESTD V))))) (real_of_num (CARD s)))))) (GSPEC (\GEN%PVAR%8732. (?y. (((SETSPEC GEN%PVAR%8732) ((y IN ((node H) d)) /\ (f_test (CARD ((face H) y))))) y)))))))) (hypermap_of_fan (V , (ESTD V)))))) V)) = ((\V. ((((a_azim f_test) V) d) = ((LET (\H. (LET_END ((LET (\s. (LET_END ((real_div ((sum s) (azim_dart (V , (ESTD V))))) (real_of_num (CARD s)))))) (GSPEC (\GEN%PVAR%8732. (?y. (((SETSPEC GEN%PVAR%8732) ((y IN ((node H) d)) /\ (f_test (CARD ((face H) y))))) y)))))))) (hypermap_of_fan (V , (ESTD V)))))) V))
T c= c==> ! c= ca_azim f0 b0 f1 cLET / cLET_END cLET / cLET_END creal_div csum b2 * part cazim_dart c, b0 * part cESTD b0 creal_of_num cCARD b2 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 * * part cnode b1 f1 * f0 cCARD * * part cface b1 b3 b3 chypermap_of_fan c, b0 * part cESTD b0 * / c= ca_azim f0 b0 f1 cLET / cLET_END cLET / cLET_END creal_div csum b2 * part cazim_dart c, b0 * part cESTD b0 creal_of_num cCARD b2 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 * * part cnode b1 f1 * f0 cCARD * * part cface b1 b3 b3 chypermap_of_fan c, b0 * part cESTD b0 f2 * / c= ca_azim f0 b0 f1 cLET / cLET_END cLET / cLET_END creal_div csum b2 * part cazim_dart c, b0 * part cESTD b0 creal_of_num cCARD b2 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 * * part cnode b1 f1 * f0 cCARD * * part cface b1 b3 b3 chypermap_of_fan c, b0 * part cESTD b0 f2
- |- (((!g. ((tame10 g) = ((LET (\n. (LET_END (((NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0))))) <= n) /\ (n <= (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (countVertices g)))) ==> ((\g. ((tame10 g) = ((LET (\n. (LET_END (((NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0))))) <= n) /\ (n <= (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (countVertices g)))) g)) = ((\g. ((tame10 g) = ((LET (\n. (LET_END (((NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0))))) <= n) /\ (n <= (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (countVertices g)))) g))
T c= c==> ! c= ctame10 b0 cLET / cLET_END c/\ c<= cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 ccountVertices b0 * / c= ctame10 b0 cLET / cLET_END c/\ c<= cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 ccountVertices b0 f0 * / c= ctame10 b0 cLET / cLET_END c/\ c<= cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 ccountVertices b0 f0
- |- (((!V. (!E. (!x. (((y5_fan (V , E)) x) = (distance ((inverse (f_fan_pair_ext (V , E))) x)))))) ==> ((\V. (!E. (!x. (((y5_fan (V , E)) x) = (distance ((inverse (f_fan_pair_ext (V , E))) x)))))) V)) = ((\V. (!E. (!x. (((y5_fan (V , E)) x) = (distance ((inverse (f_fan_pair_ext (V , E))) x)))))) V))
T c= c==> ! ! ! c= cy5_fan c, b0 b1 b2 cdistance cinverse * part cf_fan_pair_ext c, b0 b1 b2 * / ! ! c= cy5_fan c, b0 b1 b2 cdistance cinverse * part cf_fan_pair_ext c, b0 b1 b2 f0 * / ! ! c= cy5_fan c, b0 b1 b2 cdistance cinverse * part cf_fan_pair_ext c, b0 b1 b2 f0
- |- ((\g. ((y5_list (g , fan)) = ((y5_fan fan) o g))) g)
T * / c= * part cy5_list c, b0 f0 * * part co * part cy5_fan f0 b0 f1
- |- ((y9_list (g , fan)) = ((y9_fan fan) o g))
T c= * part cy9_list c, f0 f1 * * part co * part cy9_fan f1 f0
- |- (((element_pre L) N) = ((elements_of_list ((quotient_list L) N)) = ((NUMERAL _0) .. (PRE (sizel (undup ((MAP FST) (flatten N))))))))
T c= celement_pre f0 f1 c= * part celements_of_list cquotient_list f0 f1 * * part c.. cNUMERAL c_0 cPRE csizel cundup cMAP part cFST cflatten f1
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((\q. (((squanderVertex p) q) = (((COND ((p = (NUMERAL _0)) /\ (q = (NUMERAL (BIT1 (BIT1 _0)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))))) (((COND ((p = (NUMERAL _0)) /\ (q = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))))))) (((COND ((p = (NUMERAL (BIT1 _0))) /\ (q = (NUMERAL (BIT0 (BIT1 _0)))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))))) (((COND ((p = (NUMERAL (BIT1 _0))) /\ (q = (NUMERAL (BIT1 (BIT1 _0)))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))))) (((COND ((p = (NUMERAL (BIT0 (BIT1 _0)))) /\ (q = (NUMERAL (BIT1 _0))))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))))) (((COND ((p = (NUMERAL (BIT0 (BIT1 _0)))) /\ (q = (NUMERAL (BIT0 (BIT1 _0)))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))))))))) (((COND ((p = (NUMERAL (BIT0 (BIT1 _0)))) /\ (q = (NUMERAL (BIT1 (BIT1 _0)))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))))) (((COND ((p = (NUMERAL (BIT1 (BIT1 _0)))) /\ (q = (NUMERAL (BIT1 _0))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) (((COND ((p = (NUMERAL (BIT1 (BIT1 _0)))) /\ (q = (NUMERAL (BIT0 (BIT1 _0)))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))))) (((COND ((p = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (q = (NUMERAL _0)))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))))))))) (((COND ((p = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (q = (NUMERAL (BIT1 _0))))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))))))))) (((COND ((p = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (q = (NUMERAL _0)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) (((COND ((p = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (q = (NUMERAL (BIT1 _0))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))))))))))) (((COND ((p = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (q = (NUMERAL _0)))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0))))))))))))))) (((COND ((p = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ (q = (NUMERAL _0)))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))))))))))) squanderTarget))))))))))))))))) q)
T * / c= csquanderVertex f0 b0 cCOND c/\ c= f0 cNUMERAL c_0 c= b0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cCOND c/\ c= f0 cNUMERAL c_0 c= b0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cCOND c/\ c= f0 cNUMERAL cBIT1 c_0 c= b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cCOND c/\ c= f0 cNUMERAL cBIT1 c_0 c= b0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cCOND c/\ c= f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cCOND c/\ c= f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 c_0 cCOND c/\ c= f0 cNUMERAL cBIT0 cBIT1 c_0 c= b0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cCOND c/\ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c= b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cCOND c/\ c= f0 cNUMERAL cBIT1 cBIT1 c_0 c= b0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cCOND c/\ c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= b0 cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 cBIT1 c_0 cCOND c/\ c= f0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 c_0 cCOND c/\ c= f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= b0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cCOND c/\ c= f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= b0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 c_0 cCOND c/\ c= f0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= b0 cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 c_0 cCOND c/\ c= f0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c= b0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 c_0 csquanderTarget f1
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ |- ((\m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n)))) m)
T * / ! c= creal_le creal_of_num b0 creal_of_num b1 c<= b0 b1 f0
- |- (((!g. ((y8_list (g , fan)) = ((y8_fan fan) o g))) ==> ((\g. ((y8_list (g , fan)) = ((y8_fan fan) o g))) g)) = ((\g. ((y8_list (g , fan)) = ((y8_fan fan) o g))) g))
T c= c==> ! c= * part cy8_list c, b0 f0 * * part co * part cy8_fan f0 b0 * / c= * part cy8_list c, b0 f0 * * part co * part cy8_fan f0 b0 f1 * / c= * part cy8_list c, b0 f0 * * part co * part cy8_fan f0 b0 f1
+ (packing V), (packing V'), (saturated V'), ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r), (V SUBSET V') |- ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> cSUBSET f0 f1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!x. ((V x) ==> (V' x))), (~ F), (~ (V' x)), ((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) |- ((~ F) /\ F)
T c==> ! c==> * f0 b0 * f1 b0 c==> c~ cF c==> c~ * f1 f2 c==> c/\ * f0 f2 cball c, cvec cNUMERAL c_0 f3 f2 c/\ c~ cF cF
+ |- (((T ==> B) /\ T) ==> B)
T c==> c/\ c==> cT f0 cT f0
+ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) |- (((!r. (!S. ((~ (packing S)) \/ (FINITE (S INTER (ball (_11404657 , r))))))) ==> ((\r. (!S. ((~ (packing S)) \/ (FINITE (S INTER (ball (_11404657 , r))))))) _11404658)) = ((\r. (!S. ((~ (packing S)) \/ (FINITE (S INTER (ball (_11404657 , r))))))) _11404658))
T c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 c= c==> ! ! c\/ c~ cpacking b1 cFINITE * * part cINTER b1 * part cball c, f0 b0 * / ! c\/ c~ cpacking b1 cFINITE * * part cINTER b1 * part cball c, f0 b0 f1 * / ! c\/ c~ cpacking b1 cFINITE * * part cINTER b1 * part cball c, f0 b0 f1
- |- (((!g. ((tame11b g) = (!v. ((v IN (vertices_set2 g)) ==> (((degree g) v) <= (((COND (((except g) v) = (NUMERAL _0))) (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))) ==> ((\g. ((tame11b g) = (!v. ((v IN (vertices_set2 g)) ==> (((degree g) v) <= (((COND (((except g) v) = (NUMERAL _0))) (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))) g)) = ((\g. ((tame11b g) = (!v. ((v IN (vertices_set2 g)) ==> (((degree g) v) <= (((COND (((except g) v) = (NUMERAL _0))) (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))) g))
T c= c==> ! c= ctame11b b0 ! c==> cIN b1 * part cvertices_set2 b0 c<= cdegree b0 b1 cCOND c= cexcept b0 b1 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 * / c= ctame11b b0 ! c==> cIN b1 * part cvertices_set2 b0 c<= cdegree b0 b1 cCOND c= cexcept b0 b1 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0 * / c= ctame11b b0 ! c==> cIN b1 * part cvertices_set2 b0 c<= cdegree b0 b1 cCOND c= cexcept b0 b1 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0
- |- ((\v. ((ln_fan v) = (lmfun ((real_div (yn_fan v)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) v)
T * / c= cln_fan b0 clmfun creal_div cyn_fan b0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0
- |- (((((core_split_normal_list L) N) r) x) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\z'. (LET_END ((LET (\fx. (LET_END ((LET (GABS (\f. (!f1. (!f2. ((GEQ (f (f1 , f2))) (LET_END ((LET (\newVs. (LET_END ((((core L) f1) = ((cat (rev newVs)) ((cat ((CONS (FST y)) NIL)) ((cat (((betwn ((core L) r)) (FST y)) (FST z'))) ((CONS (FST z')) NIL))))) /\ (((core L) f2) = ((cat ((cat ((CONS (FST z')) NIL)) ((cat (((betwn ((core L) r)) (FST z')) (FST y))) ((CONS (FST y)) NIL)))) newVs)))))) ((MAP FST) (((betwn fx) y) z)))))))))) (((((split_normal_list L) r) fx) y) z'))))) ((find_face L) x))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))
T c= ccore_split_normal_list f0 f1 f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET * part cGABS / ! ! cGEQ * b4 c, b5 b6 cLET_END cLET / cLET_END c/\ c= ccore f0 b5 ccat crev b7 ccat cCONS cFST b0 cNIL ccat cbetwn ccore f0 f2 cFST b0 cFST b2 cCONS cFST b2 cNIL c= ccore f0 b6 ccat ccat cCONS cFST b2 cNIL ccat cbetwn ccore f0 f2 cFST b2 cFST b0 cCONS cFST b0 cNIL b7 cMAP part cFST cbetwn b3 b0 b1 csplit_normal_list f0 f2 b3 b0 b2 cfind_face f0 f3 cprev_el f2 b1 cl'z f0 f1 f2 f3 cl'y f0 f2 f3
+ ((\V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V')))) V') |- ((packing V') /\ ((saturated V') /\ (V SUBSET V')))
T c==> * / c/\ cpacking b0 c/\ csaturated b0 cSUBSET f0 b0 f1 c/\ cpacking f1 c/\ csaturated f1 cSUBSET f0 f1
- |- (((!N. (((((newvertex_prepped L) N) r) x) = (((final_list L) r) \/ ((LET (\n. (LET_END ((LET (\news. (LET_END (news = ((iota n) (sizel news)))))) (((newvertex L) r) x))))) (sizel (undup ((MAP FST) (flatten N)))))))) ==> ((\N. (((((newvertex_prepped L) N) r) x) = (((final_list L) r) \/ ((LET (\n. (LET_END ((LET (\news. (LET_END (news = ((iota n) (sizel news)))))) (((newvertex L) r) x))))) (sizel (undup ((MAP FST) (flatten N)))))))) N)) = ((\N. (((((newvertex_prepped L) N) r) x) = (((final_list L) r) \/ ((LET (\n. (LET_END ((LET (\news. (LET_END (news = ((iota n) (sizel news)))))) (((newvertex L) r) x))))) (sizel (undup ((MAP FST) (flatten N)))))))) N))
T c= c==> ! c= cnewvertex_prepped f0 b0 f1 f2 c\/ cfinal_list f0 f1 cLET / cLET_END cLET / cLET_END c= b2 ciota b1 csizel b2 cnewvertex f0 f1 f2 csizel cundup cMAP part cFST cflatten b0 * / c= cnewvertex_prepped f0 b0 f1 f2 c\/ cfinal_list f0 f1 cLET / cLET_END cLET / cLET_END c= b2 ciota b1 csizel b2 cnewvertex f0 f1 f2 csizel cundup cMAP part cFST cflatten b0 f3 * / c= cnewvertex_prepped f0 b0 f1 f2 c\/ cfinal_list f0 f1 cLET / cLET_END cLET / cLET_END c= b2 ciota b1 csizel b2 cnewvertex f0 f1 f2 csizel cundup cMAP part cFST cflatten b0 f3
- |- ((\v. (((quad g) v) = (LENGTH ((FILTER (\f. ((SND f) /\ ((LENGTH (FST f)) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ((facesAt g) v))))) v)
T * / c= cquad f0 b0 cLENGTH cFILTER / c/\ cSND b1 c= cLENGTH cFST b1 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cfacesAt f0 b0 f1
- |- (((!g. ((azim2_list (g , fan)) = ((azim2_fan fan) o g))) ==> ((\g. ((azim2_list (g , fan)) = ((azim2_fan fan) o g))) g)) = ((\g. ((azim2_list (g , fan)) = ((azim2_fan fan) o g))) g))
T c= c==> ! c= * part cazim2_list c, b0 f0 * * part co * part cazim2_fan f0 b0 * / c= * part cazim2_list c, b0 f0 * * part co * part cazim2_fan f0 b0 f1 * / c= * part cazim2_list c, b0 f0 * * part co * part cazim2_fan f0 b0 f1
- |- ((\V. (!E. (!x. (((y7_fan (V , E)) x) = (vector_norm (FST (((POWER (inverse (f_fan_pair_ext (V , E)))) (NUMERAL (BIT0 (BIT1 _0)))) x))))))) V)
T * / ! ! c= cy7_fan c, b0 b1 b2 cvector_norm cFST cPOWER * part cinverse * part cf_fan_pair_ext c, b0 b1 cNUMERAL cBIT0 cBIT1 c_0 b2 f0
- |- ((\r. (!L. (!x. (((((r_rtrans_eq L) N) r) x) = ((LET (\w. (LET_END (!x'. ((((MEM x') ((find_face L) x)) /\ ((((indexf w) ((((l'z L) N) r) x)) ((find_face L) x)) <= (((indexf w) x') ((find_face L) x)))) ==> (((MEM x') r) = ((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))) ((next_el ((find_face L) x)) x)))))) r)
T * / ! ! c= cr_rtrans_eq b1 f0 b0 b2 cLET / cLET_END ! c==> c/\ cMEM b4 cfind_face b1 b2 c<= cindexf b3 cl'z b1 f0 b0 b2 cfind_face b1 b2 cindexf b3 b4 cfind_face b1 b2 c= cMEM b4 b0 cMEM b4 crtrans b1 f0 b0 b2 cNUMERAL cBIT1 c_0 cnext_el cfind_face b1 b2 b2 f1
+ (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))), (packing V), (packing V'), ((packing V') /\ ((saturated V') /\ (V SUBSET V'))) |- (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 c==> cpacking f0 c==> cpacking f1 c==> c/\ cpacking f1 c/\ csaturated f1 cSUBSET f0 f1 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\V'. (!V. ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F))))))))) V')
T * / ! c==> cpacking b1 c==> cpacking b0 c==> csaturated b0 c==> cSUBSET b1 b0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c~ cFINITE * * part cINTER b0 * part cball c, cvec cNUMERAL c_0 f0 c==> ! ! ! c==> cpacking b4 cFINITE * * part cINTER b4 * part cball c, b2 b3 cF f1
+ (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))), (packing V), (packing V'), (saturated V'), (V SUBSET V') |- (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> cSUBSET f0 f1 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
- |- ((\s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))) s)
T * / ! c= cdest_triple0_step f0 b0 c, f1 c, f2 b1 cLET / cLET_END cCOND c= cflatten b0 cNIL cCONS cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b3 f1 crcons b0 cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cCOND c= cnext_el f0 b3 f1 crcons b0 cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL crcons b0 cflatten cCONS b4 cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cMAP part cSOME cbetwn f0 b3 f1 cthe cLAST cLAST b0 cnseq b1 cNONE f3
- |- (((!N. (!r. (!x. (((((core_triple_v4 L) N) r) x) = ((MAP (GABS (\f. (!u. (!v. (!ns. ((GEQ (f (u , (v , ns)))) ((FST u) , ((FST v) , (sizel ns)))))))))) ((((triple_data_v4 L) N) r) x)))))) ==> ((\N. (!r. (!x. (((((core_triple_v4 L) N) r) x) = ((MAP (GABS (\f. (!u. (!v. (!ns. ((GEQ (f (u , (v , ns)))) ((FST u) , ((FST v) , (sizel ns)))))))))) ((((triple_data_v4 L) N) r) x)))))) N)) = ((\N. (!r. (!x. (((((core_triple_v4 L) N) r) x) = ((MAP (GABS (\f. (!u. (!v. (!ns. ((GEQ (f (u , (v , ns)))) ((FST u) , ((FST v) , (sizel ns)))))))))) ((((triple_data_v4 L) N) r) x)))))) N))
T c= c==> ! ! ! c= ccore_triple_v4 f0 b0 b1 b2 cMAP * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 c, cFST b4 c, cFST b5 csizel b6 ctriple_data_v4 f0 b0 b1 b2 * / ! ! c= ccore_triple_v4 f0 b0 b1 b2 cMAP * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 c, cFST b4 c, cFST b5 csizel b6 ctriple_data_v4 f0 b0 b1 b2 f1 * / ! ! c= ccore_triple_v4 f0 b0 b1 b2 cMAP * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 c, cFST b4 c, cFST b5 csizel b6 ctriple_data_v4 f0 b0 b1 b2 f1
- |- (((!w. (!E. (((add_diag (V , E)) (v , w)) = (((COND ((v , w) IN (dart1_of_fan (V , E)))) ((w INSERT ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) INSERT EMPTY)) INSERT E)) E)))) ==> ((\w. (!E. (((add_diag (V , E)) (v , w)) = (((COND ((v , w) IN (dart1_of_fan (V , E)))) ((w INSERT ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) INSERT EMPTY)) INSERT E)) E)))) w)) = ((\w. (!E. (((add_diag (V , E)) (v , w)) = (((COND ((v , w) IN (dart1_of_fan (V , E)))) ((w INSERT ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) INSERT EMPTY)) INSERT E)) E)))) w))
T c= c==> ! ! c= * * part cadd_diag c, f0 b1 c, f1 b0 * * * part cCOND cIN c, f1 b0 * part cdart1_of_fan c, f0 b1 * * part cINSERT * * part cINSERT b0 * * part cINSERT csigma_fan cvec cNUMERAL c_0 f0 b1 f1 b0 part cEMPTY b1 b1 * / ! c= * * part cadd_diag c, f0 b1 c, f1 b0 * * * part cCOND cIN c, f1 b0 * part cdart1_of_fan c, f0 b1 * * part cINSERT * * part cINSERT b0 * * part cINSERT csigma_fan cvec cNUMERAL c_0 f0 b1 f1 b0 part cEMPTY b1 b1 f2 * / ! c= * * part cadd_diag c, f0 b1 c, f1 b0 * * * part cCOND cIN c, f1 b0 * part cdart1_of_fan c, f0 b1 * * part cINSERT * * part cINSERT b0 * * part cINSERT csigma_fan cvec cNUMERAL c_0 f0 b1 f1 b0 part cEMPTY b1 b1 f2
- |- (((!r. (!L. (!x. (((((r_rtrans_eq L) N) r) x) = ((LET (\w. (LET_END (!x'. ((((MEM x') ((find_face L) x)) /\ ((((indexf w) ((((l'z L) N) r) x)) ((find_face L) x)) <= (((indexf w) x') ((find_face L) x)))) ==> (((MEM x') r) = ((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))) ((next_el ((find_face L) x)) x)))))) ==> ((\r. (!L. (!x. (((((r_rtrans_eq L) N) r) x) = ((LET (\w. (LET_END (!x'. ((((MEM x') ((find_face L) x)) /\ ((((indexf w) ((((l'z L) N) r) x)) ((find_face L) x)) <= (((indexf w) x') ((find_face L) x)))) ==> (((MEM x') r) = ((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))) ((next_el ((find_face L) x)) x)))))) r)) = ((\r. (!L. (!x. (((((r_rtrans_eq L) N) r) x) = ((LET (\w. (LET_END (!x'. ((((MEM x') ((find_face L) x)) /\ ((((indexf w) ((((l'z L) N) r) x)) ((find_face L) x)) <= (((indexf w) x') ((find_face L) x)))) ==> (((MEM x') r) = ((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))) ((next_el ((find_face L) x)) x)))))) r))
T c= c==> ! ! ! c= cr_rtrans_eq b1 f0 b0 b2 cLET / cLET_END ! c==> c/\ cMEM b4 cfind_face b1 b2 c<= cindexf b3 cl'z b1 f0 b0 b2 cfind_face b1 b2 cindexf b3 b4 cfind_face b1 b2 c= cMEM b4 b0 cMEM b4 crtrans b1 f0 b0 b2 cNUMERAL cBIT1 c_0 cnext_el cfind_face b1 b2 b2 * / ! ! c= cr_rtrans_eq b1 f0 b0 b2 cLET / cLET_END ! c==> c/\ cMEM b4 cfind_face b1 b2 c<= cindexf b3 cl'z b1 f0 b0 b2 cfind_face b1 b2 cindexf b3 b4 cfind_face b1 b2 c= cMEM b4 b0 cMEM b4 crtrans b1 f0 b0 b2 cNUMERAL cBIT1 c_0 cnext_el cfind_face b1 b2 b2 f1 * / ! ! c= cr_rtrans_eq b1 f0 b0 b2 cLET / cLET_END ! c==> c/\ cMEM b4 cfind_face b1 b2 c<= cindexf b3 cl'z b1 f0 b0 b2 cfind_face b1 b2 cindexf b3 b4 cfind_face b1 b2 c= cMEM b4 b0 cMEM b4 crtrans b1 f0 b0 b2 cNUMERAL cBIT1 c_0 cnext_el cfind_face b1 b2 b2 f1
+ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) |- (((!S. ((~ (packing S)) \/ (FINITE (S INTER (ball (_11404657 , _11404658)))))) ==> ((\S. ((~ (packing S)) \/ (FINITE (S INTER (ball (_11404657 , _11404658)))))) _11404659)) = ((\S. ((~ (packing S)) \/ (FINITE (S INTER (ball (_11404657 , _11404658)))))) _11404659))
T c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 c= c==> ! c\/ c~ cpacking b0 cFINITE * * part cINTER b0 * part cball c, f0 f1 * / c\/ c~ cpacking b0 cFINITE * * part cINTER b0 * part cball c, f0 f1 f2 * / c\/ c~ cpacking b0 cFINITE * * part cINTER b0 * part cball c, f0 f1 f2
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\fan. (!g. ((azim_list (g , fan)) = ((azim_dart fan) o g)))) fan)
T * / ! c= * part cazim_list c, b1 b0 * * part co * part cazim_dart b0 b1 f0
- |- (((y5_fan (V , E)) x) = (distance ((inverse (f_fan_pair_ext (V , E))) x)))
T c= cy5_fan c, f0 f1 f2 cdistance cinverse * part cf_fan_pair_ext c, f0 f1 f2
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((\L. (!N. (!r. (!x. (((((triple_data_v4 L) N) r) x) = ((LET (\k. (LET_END ((MAP (\i. ((((((ytrans L) N) r) x) i) , ((((((ztrans L) N) r) x) i) , (((betwn ((find_face L) x)) (((((ytrans L) N) r) x) i)) (((((ztrans L) N) r) x) i)))))) ((iota (NUMERAL _0)) k))))) ((((transform_count L) N) r) x))))))) L)
T * / ! ! ! c= ctriple_data_v4 b0 b1 b2 b3 cLET / cLET_END cMAP / c, cytrans b0 b1 b2 b3 b5 c, cztrans b0 b1 b2 b3 b5 cbetwn cfind_face b0 b3 cytrans b0 b1 b2 b3 b5 cztrans b0 b1 b2 b3 b5 ciota cNUMERAL c_0 b4 ctransform_count b0 b1 b2 b3 f0
- |- ((\phi. (!Fs1. (!Fs2. ((((is_pr_Hom phi) Fs1) Fs2) = (((//// ((#?# (MAP phi)) Fs1)) __cong) = ((//// Fs2) __cong)))))) phi)
T * / ! ! c= cis_pr_Hom b0 b1 b2 c= * * part c//// * * part c#?# * part cMAP b0 b1 part c__cong * * part c//// b2 part c__cong f0
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
- |- (((!X. (((#?# f) X) = ((IMAGE f) X))) ==> ((\X. (((#?# f) X) = ((IMAGE f) X))) X)) = ((\X. (((#?# f) X) = ((IMAGE f) X))) X))
T c= c==> ! c= * * part c#?# f0 b0 * * part cIMAGE f0 b0 * / c= * * part c#?# f0 b0 * * part cIMAGE f0 b0 f1 * / c= * * part c#?# f0 b0 * * part cIMAGE f0 b0 f1
- |- (((subdiv_triple_step (n0 , (f , g))) uvn) = ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((n + n0) , (f2 , g')))))))))) (((((splitFace g) u) v) f) ws))))) ((upt n0) (n0 + n))))))))))) uvn))
T c= csubdiv_triple_step c, f0 c, f1 f2 f3 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b5 c, b6 c, b7 b8 cLET_END c, c+ b3 f0 c, b7 b8 csplitFace f2 b1 b2 f1 b4 cupt f0 c+ f0 b3 f3
- |- ((\x. (!i. ((((((((b_nfgtrans0 f0) g) L) N) r) x) i) = ((LET (\fx. (LET_END ((LET (\fst_u0. (LET_END (((foldl subdiv_single_step) ((fst_u0 , (NUMERAL _0)) , (f0 , g))) ((((((batch0 (FST f0)) L) N) r) x) i))))) (((COND ((FST ((next_el fx) x)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0))))) NONE) (SOME ((prev_el (FST f0)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))))))))) ((find_face L) x))))) x)
T * / ! c= cb_nfgtrans0 f0 f1 f2 f3 f4 b0 b1 cLET / cLET_END cLET / cLET_END cfoldl part csubdiv_single_step c, c, b3 cNUMERAL c_0 c, f0 f1 cbatch0 cFST f0 f2 f3 f4 b0 b1 cCOND c= cFST cnext_el b2 b0 cFST cytrans f2 f3 f4 b0 cNUMERAL c_0 cNONE cSOME cprev_el cFST f0 cFST cytrans f2 f3 f4 b0 cNUMERAL c_0 cfind_face f2 b0 f5
- |- ((\E. (((sol_fan (V , E)) f) = (real_abs ((real_add ((sum f) (\x. ((real_sub ((azim_dart (V , E)) x)) pi)))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi))))) E)
T * / c= csol_fan c, f0 b0 f1 creal_abs creal_add csum f1 / creal_sub cazim_dart c, f0 b0 b1 cpi creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi f2
- |- ((\vo. (((subdiv_single_step ((uo , n) , (f , g))) vo) = (((COND (uo = NONE)) ((vo , (NUMERAL _0)) , (f , g))) (((COND (vo = NONE)) ((uo , (SUC n)) , (f , g))) ((LET (\v. (LET_END ((LET (\u. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) ((vo , (NUMERAL _0)) , (f , g))) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((vo , (NUMERAL _0)) , (f2 , g')))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the uo))))) (the vo)))))) vo)
T * / c= csubdiv_single_step c, c, f0 f1 c, f2 f3 b0 cCOND c= f0 cNONE c, c, b0 cNUMERAL c_0 c, f2 f3 cCOND c= b0 cNONE c, c, f0 cSUC f1 c, f2 f3 cLET / cLET_END cLET / cLET_END cCOND c/\ c= cnextVertex f2 b2 b1 c= f1 cNUMERAL c_0 c, c, b0 cNUMERAL c_0 c, f2 f3 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END c, c, b0 cNUMERAL c_0 c, b6 b7 csplitFace f3 b2 b1 f2 b3 cupt ccountVertices f3 c+ ccountVertices f3 f1 cthe f0 cthe b0 f4
- |- (((!L. ((r_trans_eq_assumption L) = (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((((r_rtrans_eq L) N) r) x))))))) ==> ((\L. ((r_trans_eq_assumption L) = (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((((r_rtrans_eq L) N) r) x))))))) L)) = ((\L. ((r_trans_eq_assumption L) = (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((((r_rtrans_eq L) N) r) x))))))) L))
T c= c==> ! c= cr_trans_eq_assumption b0 ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cr_rtrans_eq b0 b1 b2 b3 * / c= cr_trans_eq_assumption b0 ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cr_rtrans_eq b0 b1 b2 b3 f0 * / c= cr_trans_eq_assumption b0 ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cr_rtrans_eq b0 b1 b2 b3 f0
- |- (((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F) = ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x))))))
T c= c==> c~ c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 cF c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0
- |- (((!fan. (!g. ((y5_list (g , fan)) = ((y5_fan fan) o g)))) ==> ((\fan. (!g. ((y5_list (g , fan)) = ((y5_fan fan) o g)))) fan)) = ((\fan. (!g. ((y5_list (g , fan)) = ((y5_fan fan) o g)))) fan))
T c= c==> ! ! c= * part cy5_list c, b1 b0 * * part co * part cy5_fan b0 b1 * / ! c= * part cy5_list c, b1 b0 * * part co * part cy5_fan b0 b1 f0 * / ! c= * part cy5_list c, b1 b0 * * part co * part cy5_fan b0 b1 f0
+ |- (!r. (!V'. (!V. ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> (~ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r))))))))))))))))))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> cSUBSET f0 f1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c~ cFINITE * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 c~ ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1
+ |- (((!V'. (!V. ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F))))))))) ==> ((\V'. (!V. ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F))))))))) V')) = ((\V'. (!V. ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F))))))))) V'))
T c= c==> ! ! c==> cpacking b1 c==> cpacking b0 c==> csaturated b0 c==> cSUBSET b1 b0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c~ cFINITE * * part cINTER b0 * part cball c, cvec cNUMERAL c_0 f0 c==> ! ! ! c==> cpacking b4 cFINITE * * part cINTER b4 * part cball c, b2 b3 cF * / ! c==> cpacking b1 c==> cpacking b0 c==> csaturated b0 c==> cSUBSET b1 b0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c~ cFINITE * * part cINTER b0 * part cball c, cvec cNUMERAL c_0 f0 c==> ! ! ! c==> cpacking b4 cFINITE * * part cINTER b4 * part cball c, b2 b3 cF f1 * / ! c==> cpacking b1 c==> cpacking b0 c==> csaturated b0 c==> cSUBSET b1 b0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c~ cFINITE * * part cINTER b0 * part cball c, cvec cNUMERAL c_0 f0 c==> ! ! ! c==> cpacking b4 cFINITE * * part cINTER b4 * part cball c, b2 b3 cF f1
- |- ((\N. (!r. (!x. (!i. ((((((((b_nfgtrans0 f0) g) L) N) r) x) i) = ((LET (\fx. (LET_END ((LET (\fst_u0. (LET_END (((foldl subdiv_single_step) ((fst_u0 , (NUMERAL _0)) , (f0 , g))) ((((((batch0 (FST f0)) L) N) r) x) i))))) (((COND ((FST ((next_el fx) x)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0))))) NONE) (SOME ((prev_el (FST f0)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))))))))) ((find_face L) x))))))) N)
T * / ! ! ! c= cb_nfgtrans0 f0 f1 f2 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cfoldl part csubdiv_single_step c, c, b5 cNUMERAL c_0 c, f0 f1 cbatch0 cFST f0 f2 b0 b1 b2 b3 cCOND c= cFST cnext_el b4 b2 cFST cytrans f2 b0 b1 b2 cNUMERAL c_0 cNONE cSOME cprev_el cFST f0 cFST cytrans f2 b0 b1 b2 cNUMERAL c_0 cfind_face f2 b2 f3
- |- (((!n0. (!uvn. (((subdiv_triple_step (n0 , (f , g))) uvn) = ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((n + n0) , (f2 , g')))))))))) (((((splitFace g) u) v) f) ws))))) ((upt n0) (n0 + n))))))))))) uvn)))) ==> ((\n0. (!uvn. (((subdiv_triple_step (n0 , (f , g))) uvn) = ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((n + n0) , (f2 , g')))))))))) (((((splitFace g) u) v) f) ws))))) ((upt n0) (n0 + n))))))))))) uvn)))) n0)) = ((\n0. (!uvn. (((subdiv_triple_step (n0 , (f , g))) uvn) = ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((n + n0) , (f2 , g')))))))))) (((((splitFace g) u) v) f) ws))))) ((upt n0) (n0 + n))))))))))) uvn)))) n0))
T c= c==> ! ! c= csubdiv_triple_step c, b0 c, f0 f1 b1 cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b7 c, b8 c, b9 b10 cLET_END c, c+ b5 b0 c, b9 b10 csplitFace f1 b3 b4 f0 b6 cupt b0 c+ b0 b5 b1 * / ! c= csubdiv_triple_step c, b0 c, f0 f1 b1 cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b7 c, b8 c, b9 b10 cLET_END c, c+ b5 b0 c, b9 b10 csplitFace f1 b3 b4 f0 b6 cupt b0 c+ b0 b5 b1 f2 * / ! c= csubdiv_triple_step c, b0 c, f0 f1 b1 cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b7 c, b8 c, b9 b10 cLET_END c, c+ b5 b0 c, b9 b10 csplitFace f1 b3 b4 f0 b6 cupt b0 c+ b0 b5 b1 f2
+ |- (((F ==> B) /\ F) ==> B)
T c==> c/\ c==> cF f0 cF f0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- (((!L. (!N. (!r. (!x. (!i. ((((((((b_nfgtrans0 f0) g) L) N) r) x) i) = ((LET (\fx. (LET_END ((LET (\fst_u0. (LET_END (((foldl subdiv_single_step) ((fst_u0 , (NUMERAL _0)) , (f0 , g))) ((((((batch0 (FST f0)) L) N) r) x) i))))) (((COND ((FST ((next_el fx) x)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0))))) NONE) (SOME ((prev_el (FST f0)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))))))))) ((find_face L) x)))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((((b_nfgtrans0 f0) g) L) N) r) x) i) = ((LET (\fx. (LET_END ((LET (\fst_u0. (LET_END (((foldl subdiv_single_step) ((fst_u0 , (NUMERAL _0)) , (f0 , g))) ((((((batch0 (FST f0)) L) N) r) x) i))))) (((COND ((FST ((next_el fx) x)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0))))) NONE) (SOME ((prev_el (FST f0)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))))))))) ((find_face L) x)))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((((b_nfgtrans0 f0) g) L) N) r) x) i) = ((LET (\fx. (LET_END ((LET (\fst_u0. (LET_END (((foldl subdiv_single_step) ((fst_u0 , (NUMERAL _0)) , (f0 , g))) ((((((batch0 (FST f0)) L) N) r) x) i))))) (((COND ((FST ((next_el fx) x)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0))))) NONE) (SOME ((prev_el (FST f0)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))))))))) ((find_face L) x)))))))) L))
T c= c==> ! ! ! ! ! c= cb_nfgtrans0 f0 f1 b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cfoldl part csubdiv_single_step c, c, b6 cNUMERAL c_0 c, f0 f1 cbatch0 cFST f0 b0 b1 b2 b3 b4 cCOND c= cFST cnext_el b5 b3 cFST cytrans b0 b1 b2 b3 cNUMERAL c_0 cNONE cSOME cprev_el cFST f0 cFST cytrans b0 b1 b2 b3 cNUMERAL c_0 cfind_face b0 b3 * / ! ! ! ! c= cb_nfgtrans0 f0 f1 b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cfoldl part csubdiv_single_step c, c, b6 cNUMERAL c_0 c, f0 f1 cbatch0 cFST f0 b0 b1 b2 b3 b4 cCOND c= cFST cnext_el b5 b3 cFST cytrans b0 b1 b2 b3 cNUMERAL c_0 cNONE cSOME cprev_el cFST f0 cFST cytrans b0 b1 b2 b3 cNUMERAL c_0 cfind_face b0 b3 f2 * / ! ! ! ! c= cb_nfgtrans0 f0 f1 b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cfoldl part csubdiv_single_step c, c, b6 cNUMERAL c_0 c, f0 f1 cbatch0 cFST f0 b0 b1 b2 b3 b4 cCOND c= cFST cnext_el b5 b3 cFST cytrans b0 b1 b2 b3 cNUMERAL c_0 cNONE cSOME cprev_el cFST f0 cFST cytrans b0 b1 b2 b3 cNUMERAL c_0 cfind_face b0 b3 f2
+ |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 f1 creal_of_num cNUMERAL c_0
- |- (((!Fs1. (!Fs2. ((((is_pr_Hom phi) Fs1) Fs2) = (((//// ((#?# (MAP phi)) Fs1)) __cong) = ((//// Fs2) __cong))))) ==> ((\Fs1. (!Fs2. ((((is_pr_Hom phi) Fs1) Fs2) = (((//// ((#?# (MAP phi)) Fs1)) __cong) = ((//// Fs2) __cong))))) Fs1)) = ((\Fs1. (!Fs2. ((((is_pr_Hom phi) Fs1) Fs2) = (((//// ((#?# (MAP phi)) Fs1)) __cong) = ((//// Fs2) __cong))))) Fs1))
T c= c==> ! ! c= cis_pr_Hom f0 b0 b1 c= * * part c//// * * part c#?# * part cMAP f0 b0 part c__cong * * part c//// b1 part c__cong * / ! c= cis_pr_Hom f0 b0 b1 c= * * part c//// * * part c#?# * part cMAP f0 b0 part c__cong * * part c//// b1 part c__cong f1 * / ! c= cis_pr_Hom f0 b0 b1 c= * * part c//// * * part c#?# * part cMAP f0 b0 part c__cong * * part c//// b1 part c__cong f1
- |- (((vertextype g) v) = (((tri g) v) , (((quad g) v) , ((except g) v))))
T c= cvertextype f0 f1 c, ctri f0 f1 c, cquad f0 f1 cexcept f0 f1
- |- ((y5_list (g , fan)) = ((y5_fan fan) o g))
T c= * part cy5_list c, f0 f1 * * part co * part cy5_fan f1 f0
- |- ((ln_list h) = (ln_fan o h))
T c= * part cln_list f0 * * part co part cln_fan f0
- |- ((!S. t) = t)
T c= ! f0 f0
- |- (((!p. (((hyp_conj p) H) = (hypermap ((dart H) , ((p o ((edge_map H) o (inverse p))) , ((p o ((node_map H) o (inverse p))) , (p o ((face_map H) o (inverse p))))))))) ==> ((\p. (((hyp_conj p) H) = (hypermap ((dart H) , ((p o ((edge_map H) o (inverse p))) , ((p o ((node_map H) o (inverse p))) , (p o ((face_map H) o (inverse p))))))))) p)) = ((\p. (((hyp_conj p) H) = (hypermap ((dart H) , ((p o ((edge_map H) o (inverse p))) , ((p o ((node_map H) o (inverse p))) , (p o ((face_map H) o (inverse p))))))))) p))
T c= c==> ! c= chyp_conj b0 f0 chypermap c, * part cdart f0 c, * * part co b0 * * part co * part cedge_map f0 * part cinverse b0 c, * * part co b0 * * part co * part cnode_map f0 * part cinverse b0 * * part co b0 * * part co * part cface_map f0 * part cinverse b0 * / c= chyp_conj b0 f0 chypermap c, * part cdart f0 c, * * part co b0 * * part co * part cedge_map f0 * part cinverse b0 c, * * part co b0 * * part co * part cnode_map f0 * part cinverse b0 * * part co b0 * * part co * part cface_map f0 * part cinverse b0 f1 * / c= chyp_conj b0 f0 chypermap c, * part cdart f0 c, * * part co b0 * * part co * part cedge_map f0 * part cinverse b0 c, * * part co b0 * * part co * part cnode_map f0 * part cinverse b0 * * part co b0 * * part co * part cface_map f0 * part cinverse b0 f1
- |- ((lp_tau (V , E)) = (!Ln. ((Ln IN (face_set (hypermap_of_fan (V , E)))) ==> ((real_le (real_of_num (NUMERAL _0))) (tauVEF (V , (E , Ln)))))))
T c= clp_tau c, f0 f1 ! c==> cIN b0 * part cface_set chypermap_of_fan c, f0 f1 creal_le creal_of_num cNUMERAL c_0 ctauVEF c, f0 c, f1 b0
- |- ((\f_test. (!V. ((((a_tau f_test) V) d) = ((LET (\H. (LET_END ((LET (\s. (LET_END ((real_div ((sum s) (\y. (tauVEF (V , ((ESTD V) , ((face H) y))))))) (real_of_num (CARD s)))))) (GSPEC (\GEN%PVAR%8733. (?y. (((SETSPEC GEN%PVAR%8733) ((y IN ((node H) d)) /\ (f_test (CARD ((face H) y))))) y)))))))) (hypermap_of_fan (V , (ESTD V))))))) f_test)
T * / ! c= ca_tau b0 b1 f0 cLET / cLET_END cLET / cLET_END creal_div csum b3 / ctauVEF c, b1 c, * part cESTD b1 * * part cface b2 b4 creal_of_num cCARD b3 * part cGSPEC / c? / cSETSPEC b3 c/\ cIN b4 * * part cnode b2 f0 * b0 cCARD * * part cface b2 b4 b4 chypermap_of_fan c, b1 * part cESTD b1 f1
- |- (((!x. (((rhazim_fan (V , E)) x) = ((real_mul (real_abs ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul const1) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (lmfun (h_dart x))))))) ((azim_dart (V , E)) x)))) ==> ((\x. (((rhazim_fan (V , E)) x) = ((real_mul (real_abs ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul const1) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (lmfun (h_dart x))))))) ((azim_dart (V , E)) x)))) x)) = ((\x. (((rhazim_fan (V , E)) x) = ((real_mul (real_abs ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul const1) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (lmfun (h_dart x))))))) ((azim_dart (V , E)) x)))) x))
T c= c==> ! c= crhazim_fan c, f0 f1 b0 creal_mul creal_abs creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul cconst1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 clmfun ch_dart b0 cazim_dart c, f0 f1 b0 * / c= crhazim_fan c, f0 f1 b0 creal_mul creal_abs creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul cconst1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 clmfun ch_dart b0 cazim_dart c, f0 f1 b0 f2 * / c= crhazim_fan c, f0 f1 b0 creal_mul creal_abs creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul cconst1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 clmfun ch_dart b0 cazim_dart c, f0 f1 b0 f2
- |- (((!h. ((ln_list h) = (ln_fan o h))) ==> ((\h. ((ln_list h) = (ln_fan o h))) h)) = ((\h. ((ln_list h) = (ln_fan o h))) h))
T c= c==> ! c= * part cln_list b0 * * part co part cln_fan b0 * / c= * part cln_list b0 * * part co part cln_fan b0 f0 * / c= * part cln_list b0 * * part co part cln_fan b0 f0
- |- ((((a_tau f_test) V) d) = ((LET (\H. (LET_END ((LET (\s. (LET_END ((real_div ((sum s) (\y. (tauVEF (V , ((ESTD V) , ((face H) y))))))) (real_of_num (CARD s)))))) (GSPEC (\GEN%PVAR%8733. (?y. (((SETSPEC GEN%PVAR%8733) ((y IN ((node H) d)) /\ (f_test (CARD ((face H) y))))) y)))))))) (hypermap_of_fan (V , (ESTD V)))))
T c= ca_tau f0 f1 f2 cLET / cLET_END cLET / cLET_END creal_div csum b1 / ctauVEF c, f1 c, * part cESTD f1 * * part cface b0 b2 creal_of_num cCARD b1 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 * * part cnode b0 f2 * f0 cCARD * * part cface b0 b2 b2 chypermap_of_fan c, f1 * part cESTD f1
- |- (((!h. (!V. (((lp_cond (L , (g , h))) (V , E)) = ((lp_fan (V , E)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((hyp_iso g) ((hypermap_of_list L) , (hypermap_of_fan (V , E)))) /\ ((((BIJ h) (elements_of_list L)) V) /\ ((!d. ((g d) = ((h (FST d)) , (h (SND d))))) /\ (!x. ((x IN (elements_of_list L)) = ((h x) IN V)))))))))))) ==> ((\h. (!V. (((lp_cond (L , (g , h))) (V , E)) = ((lp_fan (V , E)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((hyp_iso g) ((hypermap_of_list L) , (hypermap_of_fan (V , E)))) /\ ((((BIJ h) (elements_of_list L)) V) /\ ((!d. ((g d) = ((h (FST d)) , (h (SND d))))) /\ (!x. ((x IN (elements_of_list L)) = ((h x) IN V)))))))))))) h)) = ((\h. (!V. (((lp_cond (L , (g , h))) (V , E)) = ((lp_fan (V , E)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((hyp_iso g) ((hypermap_of_list L) , (hypermap_of_fan (V , E)))) /\ ((((BIJ h) (elements_of_list L)) V) /\ ((!d. ((g d) = ((h (FST d)) , (h (SND d))))) /\ (!x. ((x IN (elements_of_list L)) = ((h x) IN V)))))))))))) h))
T c= c==> ! ! c= clp_cond c, f0 c, f1 b0 c, b1 f2 c/\ clp_fan c, b1 f2 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ chyp_iso f1 c, chypermap_of_list f0 chypermap_of_fan c, b1 f2 c/\ cBIJ b0 * part celements_of_list f0 b1 c/\ ! c= * f1 b2 c, * b0 cFST b2 * b0 cSND b2 ! c= cIN b2 * part celements_of_list f0 cIN * b0 b2 b1 * / ! c= clp_cond c, f0 c, f1 b0 c, b1 f2 c/\ clp_fan c, b1 f2 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ chyp_iso f1 c, chypermap_of_list f0 chypermap_of_fan c, b1 f2 c/\ cBIJ b0 * part celements_of_list f0 b1 c/\ ! c= * f1 b2 c, * b0 cFST b2 * b0 cSND b2 ! c= cIN b2 * part celements_of_list f0 cIN * b0 b2 b1 f3 * / ! c= clp_cond c, f0 c, f1 b0 c, b1 f2 c/\ clp_fan c, b1 f2 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ chyp_iso f1 c, chypermap_of_list f0 chypermap_of_fan c, b1 f2 c/\ cBIJ b0 * part celements_of_list f0 b1 c/\ ! c= * f1 b2 c, * b0 cFST b2 * b0 cSND b2 ! c= cIN b2 * part celements_of_list f0 cIN * b0 b2 b1 f3
- |- ((\r. (!x. (!i. (((((((nfgtrans' p) L) N) r) x) i) = (((foldl subdiv_triple_step) p) ((take i) ((((core_triple_v4 L) N) r) x))))))) r)
T * / ! ! c= cnfgtrans' f0 f1 f2 b0 b1 b2 cfoldl part csubdiv_triple_step f0 ctake b2 ccore_triple_v4 f1 f2 b0 b1 f3
- |- ((\v. (((degree g) v) = (LENGTH ((facesAt g) v)))) v)
T * / c= cdegree f0 b0 cLENGTH cfacesAt f0 b0 f1
- |- (((!g. (!L. (!N. ((((loop_choice2 g) L) N) = ((LET (\f. (LET_END ((LET (\w. (LET_END ((LET (\v. (LET_END ((LET (\d. (LET_END ((LET (\r. (LET_END ((LET (\p. (LET_END (r , (LAST ((find_list p) d)))))) ((parts L) r))))) ((find_list N) d))))) (v , w))))) ((prev_el (FST f)) w))))) ((minimalVertex g) f))))) (minimalFace (nonFinals g))))))) ==> ((\g. (!L. (!N. ((((loop_choice2 g) L) N) = ((LET (\f. (LET_END ((LET (\w. (LET_END ((LET (\v. (LET_END ((LET (\d. (LET_END ((LET (\r. (LET_END ((LET (\p. (LET_END (r , (LAST ((find_list p) d)))))) ((parts L) r))))) ((find_list N) d))))) (v , w))))) ((prev_el (FST f)) w))))) ((minimalVertex g) f))))) (minimalFace (nonFinals g))))))) g)) = ((\g. (!L. (!N. ((((loop_choice2 g) L) N) = ((LET (\f. (LET_END ((LET (\w. (LET_END ((LET (\v. (LET_END ((LET (\d. (LET_END ((LET (\r. (LET_END ((LET (\p. (LET_END (r , (LAST ((find_list p) d)))))) ((parts L) r))))) ((find_list N) d))))) (v , w))))) ((prev_el (FST f)) w))))) ((minimalVertex g) f))))) (minimalFace (nonFinals g))))))) g))
T c= c==> ! ! ! c= cloop_choice2 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b7 cLAST cfind_list b8 b6 cparts b1 b7 cfind_list b2 b6 c, b5 b4 cprev_el cFST b3 b4 cminimalVertex b0 b3 cminimalFace cnonFinals b0 * / ! ! c= cloop_choice2 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b7 cLAST cfind_list b8 b6 cparts b1 b7 cfind_list b2 b6 c, b5 b4 cprev_el cFST b3 b4 cminimalVertex b0 b3 cminimalFace cnonFinals b0 f0 * / ! ! c= cloop_choice2 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b7 cLAST cfind_list b8 b6 cparts b1 b7 cfind_list b2 b6 c, b5 b4 cprev_el cFST b3 b4 cminimalVertex b0 b3 cminimalFace cnonFinals b0 f0
- |- ((\g1. (!g2. (((iso_fgraph g1) g2) = (?phi. (((is_iso phi) g1) g2))))) g1)
T * / ! c= ciso_fgraph b0 b1 c? / cis_iso b2 b0 b1 f0
- |- ((tame11a g) = (!Ln. ((Ln IN (vertices_set2 g)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= ((degree g) Ln)))))
T c= ctame11a f0 ! c==> cIN b0 * part cvertices_set2 f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdegree f0 b0
- |- (((!v. (!L. (!X. (((((contour_list_connected_v2 L) X) u) v) = (?s. ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ (((contour_list L) s) /\ ((set_of_list s) SUBSET X)))))))))) ==> ((\v. (!L. (!X. (((((contour_list_connected_v2 L) X) u) v) = (?s. ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ (((contour_list L) s) /\ ((set_of_list s) SUBSET X)))))))))) v)) = ((\v. (!L. (!X. (((((contour_list_connected_v2 L) X) u) v) = (?s. ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ (((contour_list L) s) /\ ((set_of_list s) SUBSET X)))))))))) v))
T c= c==> ! ! ! c= ccontour_list_connected_v2 b1 b2 f0 b0 c? / c/\ c~ c= b3 cNIL c/\ c= cHD b3 f0 c/\ c= cLAST b3 b0 c/\ ccontour_list b1 b3 cSUBSET * part cset_of_list b3 b2 * / ! ! c= ccontour_list_connected_v2 b1 b2 f0 b0 c? / c/\ c~ c= b3 cNIL c/\ c= cHD b3 f0 c/\ c= cLAST b3 b0 c/\ ccontour_list b1 b3 cSUBSET * part cset_of_list b3 b2 f1 * / ! ! c= ccontour_list_connected_v2 b1 b2 f0 b0 c? / c/\ c~ c= b3 cNIL c/\ c= cHD b3 f0 c/\ c= cLAST b3 b0 c/\ ccontour_list b1 b3 cSUBSET * part cset_of_list b3 b2 f1
- |- (((!f. (!u. (!s. (!n. ((((dest_triple0_rcons f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))))) ==> ((\f. (!u. (!s. (!n. ((((dest_triple0_rcons f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))))) f)) = ((\f. (!u. (!s. (!n. ((((dest_triple0_rcons f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))))) f))
T c= c==> ! ! ! ! c= cdest_triple0_rcons b0 b2 c, b1 c, f0 b3 cLET / cLET_END cCOND c= cflatten b2 cNIL cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b5 b1 cflatten cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cCOND c= cnext_el b0 b5 b1 cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cflatten cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cMAP part cSOME cbetwn b0 b5 b1 cthe cLAST cLAST b2 cnseq b3 cNONE * / ! ! ! c= cdest_triple0_rcons b0 b2 c, b1 c, f0 b3 cLET / cLET_END cCOND c= cflatten b2 cNIL cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b5 b1 cflatten cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cCOND c= cnext_el b0 b5 b1 cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cflatten cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cMAP part cSOME cbetwn b0 b5 b1 cthe cLAST cLAST b2 cnseq b3 cNONE f1 * / ! ! ! c= cdest_triple0_rcons b0 b2 c, b1 c, f0 b3 cLET / cLET_END cCOND c= cflatten b2 cNIL cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b5 b1 cflatten cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cCOND c= cnext_el b0 b5 b1 cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cflatten cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cMAP part cSOME cbetwn b0 b5 b1 cthe cLAST cLAST b2 cnseq b3 cNONE f1
- |- (((!V'. (!V. ((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F))) ==> ((\V'. (!V. ((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F))) V')) = ((\V'. (!V. ((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F))) V'))
T c= c==> ! ! c==> c~ c==> ! c==> * b1 b2 * b0 b2 ! c==> c/\ * b1 b2 cball c, cvec cNUMERAL c_0 f0 b2 c/\ * b0 b2 cball c, cvec cNUMERAL c_0 f0 b2 cF * / ! c==> c~ c==> ! c==> * b1 b2 * b0 b2 ! c==> c/\ * b1 b2 cball c, cvec cNUMERAL c_0 f0 b2 c/\ * b0 b2 cball c, cvec cNUMERAL c_0 f0 b2 cF f1 * / ! c==> c~ c==> ! c==> * b1 b2 * b0 b2 ! c==> c/\ * b1 b2 cball c, cvec cNUMERAL c_0 f0 b2 c/\ * b0 b2 cball c, cvec cNUMERAL c_0 f0 b2 cF f1
- |- (((!x. (((((core_triple_v4 L) N) r) x) = ((MAP (GABS (\f. (!u. (!v. (!ns. ((GEQ (f (u , (v , ns)))) ((FST u) , ((FST v) , (sizel ns)))))))))) ((((triple_data_v4 L) N) r) x)))) ==> ((\x. (((((core_triple_v4 L) N) r) x) = ((MAP (GABS (\f. (!u. (!v. (!ns. ((GEQ (f (u , (v , ns)))) ((FST u) , ((FST v) , (sizel ns)))))))))) ((((triple_data_v4 L) N) r) x)))) x)) = ((\x. (((((core_triple_v4 L) N) r) x) = ((MAP (GABS (\f. (!u. (!v. (!ns. ((GEQ (f (u , (v , ns)))) ((FST u) , ((FST v) , (sizel ns)))))))))) ((((triple_data_v4 L) N) r) x)))) x))
T c= c==> ! c= ccore_triple_v4 f0 f1 f2 b0 cMAP * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 c, cFST b2 c, cFST b3 csizel b4 ctriple_data_v4 f0 f1 f2 b0 * / c= ccore_triple_v4 f0 f1 f2 b0 cMAP * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 c, cFST b2 c, cFST b3 csizel b4 ctriple_data_v4 f0 f1 f2 b0 f3 * / c= ccore_triple_v4 f0 f1 f2 b0 cMAP * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 c, cFST b2 c, cFST b3 csizel b4 ctriple_data_v4 f0 f1 f2 b0 f3
- |- ((\g. ((tame10 g) = ((LET (\n. (LET_END (((NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 _0))))) <= n) /\ (n <= (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (countVertices g)))) g)
T * / c= ctame10 b0 cLET / cLET_END c/\ c<= cNUMERAL cBIT1 cBIT0 cBIT1 cBIT1 c_0 b1 c<= b1 cNUMERAL cBIT1 cBIT1 cBIT1 cBIT1 c_0 ccountVertices b0 f0
- |- ((\V. ((((a_azim f_test) V) d) = ((LET (\H. (LET_END ((LET (\s. (LET_END ((real_div ((sum s) (azim_dart (V , (ESTD V))))) (real_of_num (CARD s)))))) (GSPEC (\GEN%PVAR%8732. (?y. (((SETSPEC GEN%PVAR%8732) ((y IN ((node H) d)) /\ (f_test (CARD ((face H) y))))) y)))))))) (hypermap_of_fan (V , (ESTD V)))))) V)
T * / c= ca_azim f0 b0 f1 cLET / cLET_END cLET / cLET_END creal_div csum b2 * part cazim_dart c, b0 * part cESTD b0 creal_of_num cCARD b2 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 * * part cnode b1 f1 * f0 cCARD * * part cface b1 b3 b3 chypermap_of_fan c, b0 * part cESTD b0 f2
- |- ((\L. ((tame12o_list L) = (!v. (((v IN (elements_of_list L)) /\ ((~ (((except_list L) v) = (NUMERAL _0))) /\ ((LENGTH ((facesAt_list L) v)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) ==> (((vertextype_list L) v) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))))))) L)
T * / c= ctame12o_list b0 ! c==> c/\ cIN b1 * part celements_of_list b0 c/\ c~ c= cexcept_list b0 b1 cNUMERAL c_0 c= cLENGTH cfacesAt_list b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cvertextype_list b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0
- |- (((!E. (((add_diag (V , E)) (v , w)) = (((COND ((v , w) IN (dart1_of_fan (V , E)))) ((w INSERT ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) INSERT EMPTY)) INSERT E)) E))) ==> ((\E. (((add_diag (V , E)) (v , w)) = (((COND ((v , w) IN (dart1_of_fan (V , E)))) ((w INSERT ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) INSERT EMPTY)) INSERT E)) E))) E)) = ((\E. (((add_diag (V , E)) (v , w)) = (((COND ((v , w) IN (dart1_of_fan (V , E)))) ((w INSERT ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) INSERT EMPTY)) INSERT E)) E))) E))
T c= c==> ! c= * * part cadd_diag c, f0 b0 c, f1 f2 * * * part cCOND cIN c, f1 f2 * part cdart1_of_fan c, f0 b0 * * part cINSERT * * part cINSERT f2 * * part cINSERT csigma_fan cvec cNUMERAL c_0 f0 b0 f1 f2 part cEMPTY b0 b0 * / c= * * part cadd_diag c, f0 b0 c, f1 f2 * * * part cCOND cIN c, f1 f2 * part cdart1_of_fan c, f0 b0 * * part cINSERT * * part cINSERT f2 * * part cINSERT csigma_fan cvec cNUMERAL c_0 f0 b0 f1 f2 part cEMPTY b0 b0 f3 * / c= * * part cadd_diag c, f0 b0 c, f1 f2 * * * part cCOND cIN c, f1 f2 * part cdart1_of_fan c, f0 b0 * * part cINSERT * * part cINSERT f2 * * part cINSERT csigma_fan cvec cNUMERAL c_0 f0 b0 f1 f2 part cEMPTY b0 b0 f3
- |- (((!w. (!g. (((admissible' w) g) = (((admissible1 w) g) /\ (((admissible2 w) g) /\ ((admissible3 w) g)))))) ==> ((\w. (!g. (((admissible' w) g) = (((admissible1 w) g) /\ (((admissible2 w) g) /\ ((admissible3 w) g)))))) w)) = ((\w. (!g. (((admissible' w) g) = (((admissible1 w) g) /\ (((admissible2 w) g) /\ ((admissible3 w) g)))))) w))
T c= c==> ! ! c= cadmissible' b0 b1 c/\ cadmissible1 b0 b1 c/\ cadmissible2 b0 b1 cadmissible3 b0 b1 * / ! c= cadmissible' b0 b1 c/\ cadmissible1 b0 b1 c/\ cadmissible2 b0 b1 cadmissible3 b0 b1 f0 * / ! c= cadmissible' b0 b1 c/\ cadmissible1 b0 b1 c/\ cadmissible2 b0 b1 cadmissible3 b0 b1 f0
- |- ((\g. ((tame13a g) = (?w. (((admissible' w) g) /\ ((sumn ((MAP (\f. (w f))) (faces g))) < squanderTarget))))) g)
T * / c= ctame13a b0 c? / c/\ cadmissible' b1 b0 c< csumn cMAP / * b1 b2 cfaces b0 csquanderTarget f0
- |- (((!g. (!v. (((exceptionalVertex g) v) = ((~= ((except g) v)) (NUMERAL _0))))) ==> ((\g. (!v. (((exceptionalVertex g) v) = ((~= ((except g) v)) (NUMERAL _0))))) g)) = ((\g. (!v. (((exceptionalVertex g) v) = ((~= ((except g) v)) (NUMERAL _0))))) g))
T c= c==> ! ! c= cexceptionalVertex b0 b1 c~= cexcept b0 b1 cNUMERAL c_0 * / ! c= cexceptionalVertex b0 b1 c~= cexcept b0 b1 cNUMERAL c_0 f0 * / ! c= cexceptionalVertex b0 b1 c~= cexcept b0 b1 cNUMERAL c_0 f0
- |- (((!E. (!x. (((y4_fan (V , E)) x) = (distance ((f_fan_pair_ext (V , E)) x))))) ==> ((\E. (!x. (((y4_fan (V , E)) x) = (distance ((f_fan_pair_ext (V , E)) x))))) E)) = ((\E. (!x. (((y4_fan (V , E)) x) = (distance ((f_fan_pair_ext (V , E)) x))))) E))
T c= c==> ! ! c= cy4_fan c, f0 b0 b1 cdistance cf_fan_pair_ext c, f0 b0 b1 * / ! c= cy4_fan c, f0 b0 b1 cdistance cf_fan_pair_ext c, f0 b0 b1 f1 * / ! c= cy4_fan c, f0 b0 b1 cdistance cf_fan_pair_ext c, f0 b0 b1 f1
- |- ((\fan. (!g. ((azim2_list (g , fan)) = ((azim2_fan fan) o g)))) fan)
T * / ! c= * part cazim2_list c, b1 b0 * * part co * part cazim2_fan b0 b1 f0
- |- (((!g. ((tame g) = ((tame9a g) /\ ((tame10 g) /\ ((tame11a g) /\ ((tame11b g) /\ ((tame12o g) /\ (tame13a g)))))))) ==> ((\g. ((tame g) = ((tame9a g) /\ ((tame10 g) /\ ((tame11a g) /\ ((tame11b g) /\ ((tame12o g) /\ (tame13a g)))))))) g)) = ((\g. ((tame g) = ((tame9a g) /\ ((tame10 g) /\ ((tame11a g) /\ ((tame11b g) /\ ((tame12o g) /\ (tame13a g)))))))) g))
T c= c==> ! c= ctame b0 c/\ ctame9a b0 c/\ ctame10 b0 c/\ ctame11a b0 c/\ ctame11b b0 c/\ ctame12o b0 ctame13a b0 * / c= ctame b0 c/\ ctame9a b0 c/\ ctame10 b0 c/\ ctame11a b0 c/\ ctame11b b0 c/\ ctame12o b0 ctame13a b0 f0 * / c= ctame b0 c/\ ctame9a b0 c/\ ctame10 b0 c/\ ctame11a b0 c/\ ctame11b b0 c/\ ctame12o b0 ctame13a b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\V. ((((a_tau f_test) V) d) = ((LET (\H. (LET_END ((LET (\s. (LET_END ((real_div ((sum s) (\y. (tauVEF (V , ((ESTD V) , ((face H) y))))))) (real_of_num (CARD s)))))) (GSPEC (\GEN%PVAR%8733. (?y. (((SETSPEC GEN%PVAR%8733) ((y IN ((node H) d)) /\ (f_test (CARD ((face H) y))))) y)))))))) (hypermap_of_fan (V , (ESTD V)))))) V)
T * / c= ca_tau f0 b0 f1 cLET / cLET_END cLET / cLET_END creal_div csum b2 / ctauVEF c, b0 c, * part cESTD b0 * * part cface b1 b3 creal_of_num cCARD b2 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 * * part cnode b1 f1 * f0 cCARD * * part cface b1 b3 b3 chypermap_of_fan c, b0 * part cESTD b0 f2
+ (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (packing V'), (saturated V'), ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r), (V SUBSET V') |- ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b0 creal_add creal_mul cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f2 c==> cpacking f0 c==> csaturated f0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f3 c==> cSUBSET f2 f0 creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f3 creal_add creal_mul cpi creal_div creal_pow f3 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0
- |- (((!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))) ==> ((\s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))) s)) = ((\s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))) s))
T c= c==> ! ! c= cdest_triple0_step f0 b0 c, f1 c, f2 b1 cLET / cLET_END cCOND c= cflatten b0 cNIL cCONS cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b3 f1 crcons b0 cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cCOND c= cnext_el f0 b3 f1 crcons b0 cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL crcons b0 cflatten cCONS b4 cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cMAP part cSOME cbetwn f0 b3 f1 cthe cLAST cLAST b0 cnseq b1 cNONE * / ! c= cdest_triple0_step f0 b0 c, f1 c, f2 b1 cLET / cLET_END cCOND c= cflatten b0 cNIL cCONS cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b3 f1 crcons b0 cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cCOND c= cnext_el f0 b3 f1 crcons b0 cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL crcons b0 cflatten cCONS b4 cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cMAP part cSOME cbetwn f0 b3 f1 cthe cLAST cLAST b0 cnseq b1 cNONE f3 * / ! c= cdest_triple0_step f0 b0 c, f1 c, f2 b1 cLET / cLET_END cCOND c= cflatten b0 cNIL cCONS cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b3 f1 crcons b0 cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cCOND c= cnext_el f0 b3 f1 crcons b0 cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL crcons b0 cflatten cCONS b4 cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cMAP part cSOME cbetwn f0 b3 f1 cthe cLAST cLAST b0 cnseq b1 cNONE f3
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- ((\x. (((((core_triple_v4 L) N) r) x) = ((MAP (GABS (\f. (!u. (!v. (!ns. ((GEQ (f (u , (v , ns)))) ((FST u) , ((FST v) , (sizel ns)))))))))) ((((triple_data_v4 L) N) r) x)))) x)
T * / c= ccore_triple_v4 f0 f1 f2 b0 cMAP * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 c, cFST b2 c, cFST b3 csizel b4 ctriple_data_v4 f0 f1 f2 b0 f3
+ (packing V), (packing V'), (saturated V'), ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r), (V SUBSET V') |- (((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> cSUBSET f0 f1 c==> creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 creal_add creal_mul cpi creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 creal_add creal_mul cpi creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0
- |- ((\Fs1. ((((is_pr_Iso phi) Fs1) Fs2) = ((((is_pr_Hom phi) Fs1) Fs2) /\ ((inj_on phi) (UNIONS ((IMAGE (\f. (set_of_list f))) Fs1)))))) Fs1)
T * / c= cis_pr_Iso f0 b0 f1 c/\ cis_pr_Hom f0 b0 f1 cinj_on f0 * part cUNIONS * * part cIMAGE / * part cset_of_list b1 b0 f2
- |- (((y8_fan (V , E)) x) = ((y5_fan (V , E)) ((inverse (f_fan_pair_ext (V , E))) x)))
T c= cy8_fan c, f0 f1 f2 cy5_fan c, f0 f1 cinverse * part cf_fan_pair_ext c, f0 f1 f2
- |- (((!v. ((yn_fan v) = (vector_norm v))) ==> ((\v. ((yn_fan v) = (vector_norm v))) v)) = ((\v. ((yn_fan v) = (vector_norm v))) v))
T c= c==> ! c= cyn_fan b0 cvector_norm b0 * / c= cyn_fan b0 cvector_norm b0 f0 * / c= cyn_fan b0 cvector_norm b0 f0
- |- (((!V. (!E. (!x. (((azim3_fan (V , E)) x) = ((azim_dart (V , E)) ((inverse (f_fan_pair_ext (V , E))) x)))))) ==> ((\V. (!E. (!x. (((azim3_fan (V , E)) x) = ((azim_dart (V , E)) ((inverse (f_fan_pair_ext (V , E))) x)))))) V)) = ((\V. (!E. (!x. (((azim3_fan (V , E)) x) = ((azim_dart (V , E)) ((inverse (f_fan_pair_ext (V , E))) x)))))) V))
T c= c==> ! ! ! c= cazim3_fan c, b0 b1 b2 cazim_dart c, b0 b1 cinverse * part cf_fan_pair_ext c, b0 b1 b2 * / ! ! c= cazim3_fan c, b0 b1 b2 cazim_dart c, b0 b1 cinverse * part cf_fan_pair_ext c, b0 b1 b2 f0 * / ! ! c= cazim3_fan c, b0 b1 b2 cazim_dart c, b0 b1 cinverse * part cf_fan_pair_ext c, b0 b1 b2 f0
+ |- ((!r. (!V'. (!V. ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> (~ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))))))))))))) = (!r. (!V'. (!V. ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F)))))))))))
T c= ! ! ! c==> cpacking b2 c==> cpacking b1 c==> csaturated b1 c==> cSUBSET b2 b1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c~ cFINITE * * part cINTER b1 * part cball c, cvec cNUMERAL c_0 b0 c~ ! ! ! c==> cpacking b4 cFINITE * * part cINTER b4 * part cball c, b3 b4 ! ! ! c==> cpacking b2 c==> cpacking b1 c==> csaturated b1 c==> cSUBSET b2 b1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c~ cFINITE * * part cINTER b1 * part cball c, cvec cNUMERAL c_0 b0 c==> ! ! ! c==> cpacking b4 cFINITE * * part cINTER b4 * part cball c, b3 b4 cF
- |- ((\uvn. (((subdiv_triple_step (n0 , (f , g))) uvn) = ((LET (GABS (\f. (!u. (!v. (!n. ((GEQ (f (u , (v , n)))) (LET_END ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((n + n0) , (f2 , g')))))))))) (((((splitFace g) u) v) f) ws))))) ((upt n0) (n0 + n))))))))))) uvn))) uvn)
T * / c= csubdiv_triple_step c, f0 c, f1 f2 b0 cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b6 c, b7 c, b8 b9 cLET_END c, c+ b4 f0 c, b8 b9 csplitFace f2 b2 b3 f1 b5 cupt f0 c+ f0 b4 b0 f3
+ (packing V') |- (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> (~ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))))))
T c==> cpacking f0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c~ ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1
- |- ((rhazim_list (g , fan)) = ((rhazim_fan fan) o g))
T c= * part crhazim_list c, f0 f1 * * part co * part crhazim_fan f1 f0
- |- (((!w. (!L. (((admissible3_list w) L) = (!v. (((v IN (elements_of_list L)) /\ (((vertextype_list L) v) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) ==> ((sumn ((MAP w) ((FILTER (\f. ((LENGTH f) = (NUMERAL (BIT1 (BIT1 _0)))))) ((facesAt_list L) v)))) >= excessTCount)))))) ==> ((\w. (!L. (((admissible3_list w) L) = (!v. (((v IN (elements_of_list L)) /\ (((vertextype_list L) v) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) ==> ((sumn ((MAP w) ((FILTER (\f. ((LENGTH f) = (NUMERAL (BIT1 (BIT1 _0)))))) ((facesAt_list L) v)))) >= excessTCount)))))) w)) = ((\w. (!L. (((admissible3_list w) L) = (!v. (((v IN (elements_of_list L)) /\ (((vertextype_list L) v) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) ==> ((sumn ((MAP w) ((FILTER (\f. ((LENGTH f) = (NUMERAL (BIT1 (BIT1 _0)))))) ((facesAt_list L) v)))) >= excessTCount)))))) w))
T c= c==> ! ! c= cadmissible3_list b0 b1 ! c==> c/\ cIN b2 * part celements_of_list b1 c= cvertextype_list b1 b2 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c>= csumn cMAP b0 cFILTER / c= cLENGTH b3 cNUMERAL cBIT1 cBIT1 c_0 cfacesAt_list b1 b2 cexcessTCount * / ! c= cadmissible3_list b0 b1 ! c==> c/\ cIN b2 * part celements_of_list b1 c= cvertextype_list b1 b2 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c>= csumn cMAP b0 cFILTER / c= cLENGTH b3 cNUMERAL cBIT1 cBIT1 c_0 cfacesAt_list b1 b2 cexcessTCount f0 * / ! c= cadmissible3_list b0 b1 ! c==> c/\ cIN b2 * part celements_of_list b1 c= cvertextype_list b1 b2 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c>= csumn cMAP b0 cFILTER / c= cLENGTH b3 cNUMERAL cBIT1 cBIT1 c_0 cfacesAt_list b1 b2 cexcessTCount f0
- |- ((\g. ((tame g) = ((tame9a g) /\ ((tame10 g) /\ ((tame11a g) /\ ((tame11b g) /\ ((tame12o g) /\ (tame13a g)))))))) g)
T * / c= ctame b0 c/\ ctame9a b0 c/\ ctame10 b0 c/\ ctame11a b0 c/\ ctame11b b0 c/\ ctame12o b0 ctame13a b0 f0
- |- ((\fan. (!g. ((azim3_list (g , fan)) = ((azim3_fan fan) o g)))) fan)
T * / ! c= * part cazim3_list c, b1 b0 * * part co * part cazim3_fan b0 b1 f0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?V'. t) = t)
T c= c? / f0 f0
- |- (((!H. (((adm_1_floor H) w) = (!x. ((x IN (dart H)) ==> ((w ((face H) x)) >= (squanderFace (CARD ((face H) x)))))))) ==> ((\H. (((adm_1_floor H) w) = (!x. ((x IN (dart H)) ==> ((w ((face H) x)) >= (squanderFace (CARD ((face H) x)))))))) H)) = ((\H. (((adm_1_floor H) w) = (!x. ((x IN (dart H)) ==> ((w ((face H) x)) >= (squanderFace (CARD ((face H) x)))))))) H))
T c= c==> ! c= cadm_1_floor b0 f0 ! c==> cIN b1 * part cdart b0 c>= * f0 * * part cface b0 b1 csquanderFace cCARD * * part cface b0 b1 * / c= cadm_1_floor b0 f0 ! c==> cIN b1 * part cdart b0 c>= * f0 * * part cface b0 b1 csquanderFace cCARD * * part cface b0 b1 f1 * / c= cadm_1_floor b0 f0 ! c==> cIN b1 * part cdart b0 c>= * f0 * * part cface b0 b1 csquanderFace cCARD * * part cface b0 b1 f1
- |- ((\L. (!N. ((((loop_choice2 g) L) N) = ((LET (\f. (LET_END ((LET (\w. (LET_END ((LET (\v. (LET_END ((LET (\d. (LET_END ((LET (\r. (LET_END ((LET (\p. (LET_END (r , (LAST ((find_list p) d)))))) ((parts L) r))))) ((find_list N) d))))) (v , w))))) ((prev_el (FST f)) w))))) ((minimalVertex g) f))))) (minimalFace (nonFinals g)))))) L)
T * / ! c= cloop_choice2 f0 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b6 cLAST cfind_list b7 b5 cparts b0 b6 cfind_list b1 b5 c, b4 b3 cprev_el cFST b2 b3 cminimalVertex f0 b2 cminimalFace cnonFinals f0 f1
+ (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))), (packing V) |- (((packing V) ==> (?V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V'))))) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 c==> cpacking f0 c==> c==> cpacking f0 c? / c/\ cpacking b0 c/\ csaturated b0 cSUBSET f0 b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
- |- ((tame g) = ((tame9a g) /\ ((tame10 g) /\ ((tame11a g) /\ ((tame11b g) /\ ((tame12o g) /\ (tame13a g)))))))
T c= ctame f0 c/\ ctame9a f0 c/\ ctame10 f0 c/\ ctame11a f0 c/\ ctame11b f0 c/\ ctame12o f0 ctame13a f0
- |- (((!L. (!x. (((((r_rtrans_eq L) N) r) x) = ((LET (\w. (LET_END (!x'. ((((MEM x') ((find_face L) x)) /\ ((((indexf w) ((((l'z L) N) r) x)) ((find_face L) x)) <= (((indexf w) x') ((find_face L) x)))) ==> (((MEM x') r) = ((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))) ((next_el ((find_face L) x)) x))))) ==> ((\L. (!x. (((((r_rtrans_eq L) N) r) x) = ((LET (\w. (LET_END (!x'. ((((MEM x') ((find_face L) x)) /\ ((((indexf w) ((((l'z L) N) r) x)) ((find_face L) x)) <= (((indexf w) x') ((find_face L) x)))) ==> (((MEM x') r) = ((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))) ((next_el ((find_face L) x)) x))))) L)) = ((\L. (!x. (((((r_rtrans_eq L) N) r) x) = ((LET (\w. (LET_END (!x'. ((((MEM x') ((find_face L) x)) /\ ((((indexf w) ((((l'z L) N) r) x)) ((find_face L) x)) <= (((indexf w) x') ((find_face L) x)))) ==> (((MEM x') r) = ((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))) ((next_el ((find_face L) x)) x))))) L))
T c= c==> ! ! c= cr_rtrans_eq b0 f0 f1 b1 cLET / cLET_END ! c==> c/\ cMEM b3 cfind_face b0 b1 c<= cindexf b2 cl'z b0 f0 f1 b1 cfind_face b0 b1 cindexf b2 b3 cfind_face b0 b1 c= cMEM b3 f1 cMEM b3 crtrans b0 f0 f1 b1 cNUMERAL cBIT1 c_0 cnext_el cfind_face b0 b1 b1 * / ! c= cr_rtrans_eq b0 f0 f1 b1 cLET / cLET_END ! c==> c/\ cMEM b3 cfind_face b0 b1 c<= cindexf b2 cl'z b0 f0 f1 b1 cfind_face b0 b1 cindexf b2 b3 cfind_face b0 b1 c= cMEM b3 f1 cMEM b3 crtrans b0 f0 f1 b1 cNUMERAL cBIT1 c_0 cnext_el cfind_face b0 b1 b1 f2 * / ! c= cr_rtrans_eq b0 f0 f1 b1 cLET / cLET_END ! c==> c/\ cMEM b3 cfind_face b0 b1 c<= cindexf b2 cl'z b0 f0 f1 b1 cfind_face b0 b1 cindexf b2 b3 cfind_face b0 b1 c= cMEM b3 f1 cMEM b3 crtrans b0 f0 f1 b1 cNUMERAL cBIT1 c_0 cnext_el cfind_face b0 b1 b1 f2
- |- ((\f. (((tau_fan (V , E)) f) = (real_abs (tauVEF (V , (E , f)))))) f)
T * / c= ctau_fan c, f0 f1 b0 creal_abs ctauVEF c, f0 c, f1 b0 f2
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0
- |- ((\V. (!E. (!x. (((rhazim_fan (V , E)) x) = ((real_mul (real_abs ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul const1) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (lmfun (h_dart x))))))) ((azim_dart (V , E)) x)))))) V)
T * / ! ! c= crhazim_fan c, b0 b1 b2 creal_mul creal_abs creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul cconst1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 clmfun ch_dart b2 cazim_dart c, b0 b1 b2 f0
- |- (((!phi. (!Fs1. (!Fs2. ((((is_pr_Hom phi) Fs1) Fs2) = (((//// ((#?# (MAP phi)) Fs1)) __cong) = ((//// Fs2) __cong)))))) ==> ((\phi. (!Fs1. (!Fs2. ((((is_pr_Hom phi) Fs1) Fs2) = (((//// ((#?# (MAP phi)) Fs1)) __cong) = ((//// Fs2) __cong)))))) phi)) = ((\phi. (!Fs1. (!Fs2. ((((is_pr_Hom phi) Fs1) Fs2) = (((//// ((#?# (MAP phi)) Fs1)) __cong) = ((//// Fs2) __cong)))))) phi))
T c= c==> ! ! ! c= cis_pr_Hom b0 b1 b2 c= * * part c//// * * part c#?# * part cMAP b0 b1 part c__cong * * part c//// b2 part c__cong * / ! ! c= cis_pr_Hom b0 b1 b2 c= * * part c//// * * part c#?# * part cMAP b0 b1 part c__cong * * part c//// b2 part c__cong f0 * / ! ! c= cis_pr_Hom b0 b1 b2 c= * * part c//// * * part c#?# * part cMAP b0 b1 part c__cong * * part c//// b2 part c__cong f0
- |- (((!L. (!X. (((((contour_list_connected_v2 L) X) u) v) = (?s. ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ (((contour_list L) s) /\ ((set_of_list s) SUBSET X))))))))) ==> ((\L. (!X. (((((contour_list_connected_v2 L) X) u) v) = (?s. ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ (((contour_list L) s) /\ ((set_of_list s) SUBSET X))))))))) L)) = ((\L. (!X. (((((contour_list_connected_v2 L) X) u) v) = (?s. ((~ (s = NIL)) /\ (((HD s) = u) /\ (((LAST s) = v) /\ (((contour_list L) s) /\ ((set_of_list s) SUBSET X))))))))) L))
T c= c==> ! ! c= ccontour_list_connected_v2 b0 b1 f0 f1 c? / c/\ c~ c= b2 cNIL c/\ c= cHD b2 f0 c/\ c= cLAST b2 f1 c/\ ccontour_list b0 b2 cSUBSET * part cset_of_list b2 b1 * / ! c= ccontour_list_connected_v2 b0 b1 f0 f1 c? / c/\ c~ c= b2 cNIL c/\ c= cHD b2 f0 c/\ c= cLAST b2 f1 c/\ ccontour_list b0 b2 cSUBSET * part cset_of_list b2 b1 f2 * / ! c= ccontour_list_connected_v2 b0 b1 f0 f1 c? / c/\ c~ c= b2 cNIL c/\ c= cHD b2 f0 c/\ c= cLAST b2 f1 c/\ ccontour_list b0 b2 cSUBSET * part cset_of_list b2 b1 f2
- (!a. (!b. (((a SUBSET b) /\ (FINITE b)) ==> ((CARD a) <= (CARD b))))) |- ((((a SUBSET b) /\ (FINITE b)) ==> ((CARD a) <= (CARD b))) = T)
T c==> ! ! c==> c/\ cSUBSET b0 b1 cFINITE b1 c<= cCARD b0 cCARD b1 c= c==> c/\ cSUBSET f0 f1 cFINITE f1 c<= cCARD f0 cCARD f1 cT
- |- (((exceptionalVertex g) v) = ((~= ((except g) v)) (NUMERAL _0)))
T c= cexceptionalVertex f0 f1 c~= cexcept f0 f1 cNUMERAL c_0
- |- ((((loop_choice2 g) L) N) = ((LET (\f. (LET_END ((LET (\w. (LET_END ((LET (\v. (LET_END ((LET (\d. (LET_END ((LET (\r. (LET_END ((LET (\p. (LET_END (r , (LAST ((find_list p) d)))))) ((parts L) r))))) ((find_list N) d))))) (v , w))))) ((prev_el (FST f)) w))))) ((minimalVertex g) f))))) (minimalFace (nonFinals g))))
T c= cloop_choice2 f0 f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, b4 cLAST cfind_list b5 b3 cparts f1 b4 cfind_list f2 b3 c, b2 b1 cprev_el cFST b0 b1 cminimalVertex f0 b0 cminimalFace cnonFinals f0
- (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))), (~ F), (~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))), (packing V') |- ((~ F) /\ F)
T c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 c==> c~ cF c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c==> cpacking f0 c/\ c~ cF cF
- |- ((\f. (!u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))))) f)
T * / ! ! ! c= cdest_triple0_step b0 b2 c, b1 c, f0 b3 cLET / cLET_END cCOND c= cflatten b2 cNIL cCONS cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b5 b1 crcons b2 cflatten cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cCOND c= cnext_el b0 b5 b1 crcons b2 cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL crcons b2 cflatten cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cMAP part cSOME cbetwn b0 b5 b1 cthe cLAST cLAST b2 cnseq b3 cNONE f1
- |- (((!g. ((y9_list (g , fan)) = ((y9_fan fan) o g))) ==> ((\g. ((y9_list (g , fan)) = ((y9_fan fan) o g))) g)) = ((\g. ((y9_list (g , fan)) = ((y9_fan fan) o g))) g))
T c= c==> ! c= * part cy9_list c, b0 f0 * * part co * part cy9_fan f0 b0 * / c= * part cy9_list c, b0 f0 * * part co * part cy9_fan f0 b0 f1 * / c= * part cy9_list c, b0 f0 * * part co * part cy9_fan f0 b0 f1
- |- (((!g. ((ye_list g) = (ye_fan o g))) ==> ((\g. ((ye_list g) = (ye_fan o g))) g)) = ((\g. ((ye_list g) = (ye_fan o g))) g))
T c= c==> ! c= * part cye_list b0 * * part co part cye_fan b0 * / c= * part cye_list b0 * * part co part cye_fan b0 f0 * / c= * part cye_list b0 * * part co part cye_fan b0 f0
- |- (((!g. (((admissible2 w) g) = (!v. ((v IN (vertices_set2 g)) ==> ((((except g) v) = (NUMERAL _0)) ==> (((squanderVertex ((tri g) v)) ((quad g) v)) <= (sumn ((MAP (\f. (w f))) ((facesAt g) v))))))))) ==> ((\g. (((admissible2 w) g) = (!v. ((v IN (vertices_set2 g)) ==> ((((except g) v) = (NUMERAL _0)) ==> (((squanderVertex ((tri g) v)) ((quad g) v)) <= (sumn ((MAP (\f. (w f))) ((facesAt g) v))))))))) g)) = ((\g. (((admissible2 w) g) = (!v. ((v IN (vertices_set2 g)) ==> ((((except g) v) = (NUMERAL _0)) ==> (((squanderVertex ((tri g) v)) ((quad g) v)) <= (sumn ((MAP (\f. (w f))) ((facesAt g) v))))))))) g))
T c= c==> ! c= cadmissible2 f0 b0 ! c==> cIN b1 * part cvertices_set2 b0 c==> c= cexcept b0 b1 cNUMERAL c_0 c<= csquanderVertex ctri b0 b1 cquad b0 b1 csumn cMAP / * f0 b2 cfacesAt b0 b1 * / c= cadmissible2 f0 b0 ! c==> cIN b1 * part cvertices_set2 b0 c==> c= cexcept b0 b1 cNUMERAL c_0 c<= csquanderVertex ctri b0 b1 cquad b0 b1 csumn cMAP / * f0 b2 cfacesAt b0 b1 f1 * / c= cadmissible2 f0 b0 ! c==> cIN b1 * part cvertices_set2 b0 c==> c= cexcept b0 b1 cNUMERAL c_0 c<= csquanderVertex ctri b0 b1 cquad b0 b1 csumn cMAP / * f0 b2 cfacesAt b0 b1 f1
+ (A = T) |- ((A = T) /\ (((A ==> B) /\ A) ==> B))
T c==> c= f0 cT c/\ c= f0 cT c==> c/\ c==> f0 f1 f0 f1
- |- ((((((((b_nfgtrans0 f0) g) L) N) r) x) i) = ((LET (\fx. (LET_END ((LET (\fst_u0. (LET_END (((foldl subdiv_single_step) ((fst_u0 , (NUMERAL _0)) , (f0 , g))) ((((((batch0 (FST f0)) L) N) r) x) i))))) (((COND ((FST ((next_el fx) x)) = (FST (((((ytrans L) N) r) x) (NUMERAL _0))))) NONE) (SOME ((prev_el (FST f0)) (FST (((((ytrans L) N) r) x) (NUMERAL _0)))))))))) ((find_face L) x)))
T c= cb_nfgtrans0 f0 f1 f2 f3 f4 f5 f6 cLET / cLET_END cLET / cLET_END cfoldl part csubdiv_single_step c, c, b1 cNUMERAL c_0 c, f0 f1 cbatch0 cFST f0 f2 f3 f4 f5 f6 cCOND c= cFST cnext_el b0 f5 cFST cytrans f2 f3 f4 f5 cNUMERAL c_0 cNONE cSOME cprev_el cFST f0 cFST cytrans f2 f3 f4 f5 cNUMERAL c_0 cfind_face f2 f5
- |- ((\f0. (!L. (!N. (!r. (!x. (!i. (((((((batch0 f0) L) N) r) x) i) = (flatten (((foldl (dest_triple0_step f0)) NIL) ((take i) ((((core_triple_v4 L) N) r) x))))))))))) f0)
T * / ! ! ! ! ! c= cbatch0 b0 b1 b2 b3 b4 b5 cflatten cfoldl * part cdest_triple0_step b0 cNIL ctake b5 ccore_triple_v4 b1 b2 b3 b4 f0
- |- ((\L. ((core_split_normal_list_assumption L) = (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((((core_split_normal_list L) N) r) x))))))) L)
T * / c= ccore_split_normal_list_assumption b0 ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 ccore_split_normal_list b0 b1 b2 b3 f0
- |- ((\L. (!ds. (((split_list_list L) ds) = (((foldr (\d. (\L. ((split_list_hyp L) d)))) L) ds)))) L)
T * / ! c= csplit_list_list b0 b1 cfoldr / / csplit_list_hyp b3 b2 b0 b1 f0
- |- (((!r. (!V'. (!V. ((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F)))) ==> ((\r. (!V'. (!V. ((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F)))) r)) = ((\r. (!V'. (!V. ((~ ((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))) ==> F)))) r))
T c= c==> ! ! ! c==> c~ c==> ! c==> * b2 b3 * b1 b3 ! c==> c/\ * b2 b3 cball c, cvec cNUMERAL c_0 b0 b3 c/\ * b1 b3 cball c, cvec cNUMERAL c_0 b0 b3 cF * / ! ! c==> c~ c==> ! c==> * b2 b3 * b1 b3 ! c==> c/\ * b2 b3 cball c, cvec cNUMERAL c_0 b0 b3 c/\ * b1 b3 cball c, cvec cNUMERAL c_0 b0 b3 cF f0 * / ! ! c==> c~ c==> ! c==> * b2 b3 * b1 b3 ! c==> c/\ * b2 b3 cball c, cvec cNUMERAL c_0 b0 b3 c/\ * b1 b3 cball c, cvec cNUMERAL c_0 b0 b3 cF f0
+ ((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) |- ((~ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> F)
T c==> c/\ * f0 f1 cball c, cvec cNUMERAL c_0 f2 f1 c==> c~ cball c, cvec cNUMERAL c_0 f2 f1 cF
+ (~ ((ball ((vec (NUMERAL _0)) , r)) x)) |- (((ball ((vec (NUMERAL _0)) , r)) x) ==> F)
T c==> c~ cball c, cvec cNUMERAL c_0 f0 f1 c==> cball c, cvec cNUMERAL c_0 f0 f1 cF
- |- ((\V. (!E. (!x. (((y3_fan (V , E)) x) = (vector_norm (FST ((inverse (f_fan_pair_ext (V , E))) x))))))) V)
T * / ! ! c= cy3_fan c, b0 b1 b2 cvector_norm cFST cinverse * part cf_fan_pair_ext c, b0 b1 b2 f0
- |- (((!g. ((tau_list (g , fan)) = ((tau_fan fan) o (IMAGE g)))) ==> ((\g. ((tau_list (g , fan)) = ((tau_fan fan) o (IMAGE g)))) g)) = ((\g. ((tau_list (g , fan)) = ((tau_fan fan) o (IMAGE g)))) g))
T c= c==> ! c= * part ctau_list c, b0 f0 * * part co * part ctau_fan f0 * part cIMAGE b0 * / c= * part ctau_list c, b0 f0 * * part co * part ctau_fan f0 * part cIMAGE b0 f1 * / c= * part ctau_list c, b0 f0 * * part co * part ctau_fan f0 * part cIMAGE b0 f1
+ ((\V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V')))) V') |- ((((packing V') /\ ((saturated V') /\ (V SUBSET V'))) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))) = (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> * / c/\ cpacking b0 c/\ csaturated b0 cSUBSET f0 b0 f1 c= c==> c/\ cpacking f1 c/\ csaturated f1 cSUBSET f0 f1 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) = ((((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ==> (((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))) /\ ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))
T c= creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 c/\ c==> creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 c==> creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul cpi creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul cpi creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (!x. ((V x) ==> (V' x))) |- ((V _11404655) ==> (V' _11404655))
T c==> ! c==> * f0 b0 * f1 b0 c==> * f0 f2 * f1 f2
+ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) |- ((((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))) = ((((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f0 c= c==> creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f0 creal_add creal_mul cpi creal_div creal_pow f0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f2 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f3 * part cball c, cvec cNUMERAL c_0 f0 creal_add creal_mul cpi creal_div creal_pow f0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f2 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f0 creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f0 creal_add creal_mul cpi creal_div creal_pow f0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f2 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f3 * part cball c, cvec cNUMERAL c_0 f0 creal_add creal_mul cpi creal_div creal_pow f0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f2 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0
+ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))), (~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))), (packing V') |- ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) /\ F)
T c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c==> cpacking f0 c/\ ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 cF
+ (!x. ((V x) ==> (V' x))), ((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) |- (V' x)
T c==> ! c==> * f0 b0 * f1 b0 c==> c/\ * f0 f2 cball c, cvec cNUMERAL c_0 f3 f2 * f1 f2
+ (~ (V' x)) |- ((V' x) ==> F)
T c==> c~ * f0 f1 c==> * f0 f1 cF
+ (packing V), (packing V'), (saturated V'), (V SUBSET V') |- ((((\c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) c) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))) = T)
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> cSUBSET f0 f1 c= c==> * / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 f2 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 cT
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt ((real_add (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_add creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0
+ (A = F) |- ((((F ==> B) /\ F) ==> B) = (((A ==> B) /\ A) ==> B))
T c==> c= f0 cF c= c==> c/\ c==> cF f1 cF f1 c==> c/\ c==> f0 f1 f0 f1
+ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) |- ((\S. ((~ (packing S)) \/ (FINITE (S INTER (ball (_11404657 , _11404658)))))) _11404659)
T c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 * / c\/ c~ cpacking b0 cFINITE * * part cINTER b0 * part cball c, f0 f1 f2
+ (packing V'), ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) |- (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) /\ ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> (~ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))))))
T c==> cpacking f0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ creal_le creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c~ ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1
+ (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (packing V'), (saturated V'), (V SUBSET V') |- ((((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))) = T)
T c==> ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b0 creal_add creal_mul cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f2 c==> cpacking f0 c==> csaturated f0 c==> cSUBSET f2 f0 c= c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f3 creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f3 creal_add creal_mul cpi creal_div creal_pow f3 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0 cT
+ |- ((A = F) ==> (((A ==> B) /\ A) ==> B))
T c==> c= f0 cF c==> c/\ c==> f0 f1 f0 f1
+ (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (packing V'), (saturated V'), (V SUBSET V') |- ((!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))) /\ (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b0 creal_add creal_mul cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f2 c==> cpacking f0 c==> csaturated f0 c==> cSUBSET f2 f0 c/\ ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b0 creal_add creal_mul cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ (~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))), (packing V), (packing V'), (saturated V'), ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r), (V SUBSET V') |- ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) /\ F)
T c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c==> cpacking f2 c==> cpacking f0 c==> csaturated f0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f1 c==> cSUBSET f2 f0 c/\ c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 cF
+ |- ((\a. (!b. (((a SUBSET b) /\ (FINITE b)) ==> ((CARD a) <= (CARD b))))) a)
T * / ! c==> c/\ cSUBSET b0 b1 cFINITE b1 c<= cCARD b0 cCARD b1 f0
+ (packing V), (packing V'), (saturated V'), (V SUBSET V') |- (((\c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) c) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> cSUBSET f0 f1 c==> * / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 f2 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))) ==> ((\n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))) n)) = ((\n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))) n))
T c= c==> ! c= creal_le creal_of_num f0 creal_of_num b0 c<= f0 b0 * / c= creal_le creal_of_num f0 creal_of_num b0 c<= f0 b0 f1 * / c= creal_le creal_of_num f0 creal_of_num b0 c<= f0 b0 f1
+ |- (((!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n)))) ==> ((\m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n)))) m)) = ((\m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n)))) m))
T c= c==> ! ! c= creal_le creal_of_num b0 creal_of_num b1 c<= b0 b1 * / ! c= creal_le creal_of_num b0 creal_of_num b1 c<= b0 b1 f0 * / ! c= creal_le creal_of_num b0 creal_of_num b1 c<= b0 b1 f0
+ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) |- ((~ (packing _11404659)) \/ (FINITE (_11404659 INTER (ball (_11404657 , _11404658)))))
T c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 c\/ c~ cpacking f0 cFINITE * * part cINTER f0 * part cball c, f1 f2
+ ((A = T) ==> (((A ==> B) /\ A) ==> B)), ((A = F) ==> (((A ==> B) /\ A) ==> B)) |- (((A ==> B) /\ A) ==> B)
T c==> c==> c= f0 cT c==> c/\ c==> f0 f1 f0 f1 c==> c==> c= f0 cF c==> c/\ c==> f0 f1 f0 f1 c==> c/\ c==> f0 f1 f0 f1
+ (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))), (packing V), (packing V'), (saturated V'), ((saturated V') /\ (V SUBSET V')) |- (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> c/\ csaturated f1 cSUBSET f0 f1 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))))) |- (((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ (packing V), (packing V'), (saturated V'), ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r), (V SUBSET V') |- (((((V INTER (ball ((vec (NUMERAL _0)) , r))) SUBSET (V' INTER (ball ((vec (NUMERAL _0)) , r)))) /\ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))) <= (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) = ((CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))) <= (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> cSUBSET f0 f1 c= c==> c/\ cSUBSET * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 cFINITE * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 c<= cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 c<= cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2
+ (packing V), (packing V'), (saturated V'), (V SUBSET V') |- ((((packing V') /\ (saturated V')) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> cSUBSET f0 f1 c==> c==> c/\ cpacking f1 csaturated f1 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))), (packing V) |- (((\V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V')))) V') ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 c==> cpacking f0 c==> * / c/\ cpacking b0 c/\ csaturated b0 cSUBSET f0 b0 f1 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ (packing V) |- ((packing V) /\ ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> (~ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))))))))))
T c==> cpacking f0 c/\ cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> cSUBSET f0 f1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c~ cFINITE * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 c~ ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((!V. ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F)))))))) ==> ((\V. ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F)))))))) V)) = ((\V. ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F)))))))) V))
T c= c==> ! c==> cpacking b0 c==> cpacking f0 c==> csaturated f0 c==> cSUBSET b0 f0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c==> ! ! ! c==> cpacking b3 cFINITE * * part cINTER b3 * part cball c, b1 b2 cF * / c==> cpacking b0 c==> cpacking f0 c==> csaturated f0 c==> cSUBSET b0 f0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c==> ! ! ! c==> cpacking b3 cFINITE * * part cINTER b3 * part cball c, b1 b2 cF f2 * / c==> cpacking b0 c==> cpacking f0 c==> csaturated f0 c==> cSUBSET b0 f0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c==> ! ! ! c==> cpacking b3 cFINITE * * part cINTER b3 * part cball c, b1 b2 cF f2
+ |- (T = (((T ==> B) /\ T) ==> B))
T c= cT c==> c/\ c==> cT f0 cT f0
+ |- ((\n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))) n)
T * / c= creal_le creal_of_num f0 creal_of_num b0 c<= f0 b0 f1
+ (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))) |- (((((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))) = ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b0 creal_add creal_mul cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c= c==> c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 creal_add creal_mul cpi creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f3 * part cball c, cvec cNUMERAL c_0 f2 creal_add creal_mul cpi creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f3 * part cball c, cvec cNUMERAL c_0 f2 creal_add creal_mul cpi creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0
+ (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))), (packing V) |- (((packing V') /\ ((saturated V') /\ (V SUBSET V'))) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 c==> cpacking f0 c==> c/\ cpacking f1 c/\ csaturated f1 cSUBSET f0 f1 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))) |- (((((packing V') /\ (saturated V')) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))) = (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 c= c==> c==> c/\ cpacking f0 csaturated f0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ (V SUBSET V') |- ((FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r)))) = (((V INTER (ball ((vec (NUMERAL _0)) , r))) SUBSET (V' INTER (ball ((vec (NUMERAL _0)) , r)))) /\ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))))
T c==> cSUBSET f0 f1 c= cFINITE * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 c/\ cSUBSET * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 cFINITE * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2
+ (!x. ((V x) ==> (V' x))), (~ ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x))), ((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)), ((~ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> F) |- F
T c==> ! c==> * f0 b0 * f1 b0 c==> c~ c/\ * f1 f2 cball c, cvec cNUMERAL c_0 f3 f2 c==> c/\ * f0 f2 cball c, cvec cNUMERAL c_0 f3 f2 c==> c==> c~ cball c, cvec cNUMERAL c_0 f3 f2 cF cF
+ (~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))), (packing V') |- (~ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))))
T c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c==> cpacking f0 c~ ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ==> (((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 c==> creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul cpi creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul cpi creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((~ ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x))) ==> F) = ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))
T c= c==> c~ c/\ * f0 f1 cball c, cvec cNUMERAL c_0 f2 f1 cF c/\ * f0 f1 cball c, cvec cNUMERAL c_0 f2 f1
+ (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))) |- (((packing V) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))) = T)
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 c= c==> cpacking f0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 cT
+ (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))), (packing V), ((\V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V')))) V') |- (((\V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V')))) V') /\ (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 c==> cpacking f0 c==> * / c/\ cpacking b0 c/\ csaturated b0 cSUBSET f0 b0 f1 c/\ * / c/\ cpacking b0 c/\ csaturated b0 cSUBSET f0 b0 f1 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ ((A = F) ==> (((A ==> B) /\ A) ==> B)) |- (((A ==> B) /\ A) ==> B)
T c==> c==> c= f0 cF c==> c/\ c==> f0 f1 f0 f1 c==> c/\ c==> f0 f1 f0 f1
+ (packing V) |- (((?V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V')))) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))) = (((packing V) ==> (?V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V'))))) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))))
T c==> cpacking f0 c= c==> c? / c/\ cpacking b0 c/\ csaturated b0 cSUBSET f0 b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> cpacking f0 c? / c/\ cpacking b0 c/\ csaturated b0 cSUBSET f0 b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 cF
+ (~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))), (packing V), (packing V'), (saturated V'), ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r), (V SUBSET V') |- ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F)
T c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c==> cpacking f2 c==> cpacking f0 c==> csaturated f0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f1 c==> cSUBSET f2 f0 c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 cF
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ (packing V), (packing V'), (saturated V'), ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r), (V SUBSET V') |- (((V INTER (ball ((vec (NUMERAL _0)) , r))) SUBSET (V' INTER (ball ((vec (NUMERAL _0)) , r)))) /\ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r)))))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> cSUBSET f0 f1 c/\ cSUBSET * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 cFINITE * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2
+ |- (((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> F) = (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r)))))
T c= c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 cF cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1
+ |- ((\r. (!V'. (!V. ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F)))))))))) r)
T * / ! ! c==> cpacking b2 c==> cpacking b1 c==> csaturated b1 c==> cSUBSET b2 b1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c~ cFINITE * * part cINTER b1 * part cball c, cvec cNUMERAL c_0 b0 c==> ! ! ! c==> cpacking b4 cFINITE * * part cINTER b4 * part cball c, b3 b4 cF f0
+ |- ((!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))) ==> (!V. ((packing V) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))))
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 ! c==> cpacking b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_of_num cCARD * * part cINTER b0 * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_mul cpi creal_div creal_pow b2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b1 creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0
+ (packing V'), (saturated V') |- ((saturated V') /\ ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> (~ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))))))))
T c==> cpacking f0 c==> csaturated f0 c/\ csaturated f0 c==> cSUBSET f1 f0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 c~ ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1
+ (packing V') |- ((packing V') = T)
T c==> cpacking f0 c= cpacking f0 cT
+ (packing V), (packing V'), (saturated V'), ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r), (V SUBSET V') |- ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> cSUBSET f0 f1 c==> c~ cFINITE * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 cF
+ (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (packing V'), (saturated V'), (V SUBSET V') |- (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))
T c==> ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b0 creal_add creal_mul cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f2 c==> cpacking f0 c==> csaturated f0 c==> cSUBSET f2 f0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ (!x. ((V x) ==> (V' x))), (~ (V' x)), ((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) |- ((~ (V' x)) /\ F)
T c==> ! c==> * f0 b0 * f1 b0 c==> c~ * f1 f2 c==> c/\ * f0 f2 cball c, cvec cNUMERAL c_0 f3 f2 c/\ c~ * f1 f2 cF
+ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) |- ((FINITE (_11404659 INTER (ball (_11404657 , _11404658)))) \/ (~ (packing _11404659)))
T c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 c\/ cFINITE * * part cINTER f0 * part cball c, f1 f2 c~ cpacking f0
+ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))), (packing V') |- (((FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r)))) ==> F) = F)
T c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 c==> cpacking f0 c= c==> cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 cF cF
+ (~ ((ball ((vec (NUMERAL _0)) , r)) x)), ((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) |- ((~ ((ball ((vec (NUMERAL _0)) , r)) x)) /\ F)
T c==> c~ cball c, cvec cNUMERAL c_0 f0 f1 c==> c/\ * f2 f1 cball c, cvec cNUMERAL c_0 f0 f1 c/\ c~ cball c, cvec cNUMERAL c_0 f0 f1 cF
+ (!x. ((V x) ==> (V' x))) |- (!x. ((~ (V x)) \/ (V' x)))
T c==> ! c==> * f0 b0 * f1 b0 ! c\/ c~ * f0 b0 * f1 b0
+ (packing V') |- ((packing V') /\ ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> (~ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r))))))))))))))
T c==> cpacking f0 c/\ cpacking f0 c==> csaturated f0 c==> cSUBSET f1 f0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 c~ ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1
+ (packing V), (packing V'), (saturated V'), ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r), (V SUBSET V') |- (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> cSUBSET f0 f1 cFINITE * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2
+ |- (((CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))) <= (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))) = ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))))
T c= c<= cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1
+ (!x. ((V x) ==> (V' x))), (~ ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x))), ((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) |- F
T c==> ! c==> * f0 b0 * f1 b0 c==> c~ c/\ * f1 f2 cball c, cvec cNUMERAL c_0 f3 f2 c==> c/\ * f0 f2 cball c, cvec cNUMERAL c_0 f3 f2 cF
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_add (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0
+ (~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))), (packing V') |- ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F)
T c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c==> cpacking f0 c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 cF
+ (!x. ((V x) ==> (V' x))), (~ ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x))), ((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) |- ((~ ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x))) /\ F)
T c==> ! c==> * f0 b0 * f1 b0 c==> c~ c/\ * f1 f2 cball c, cvec cNUMERAL c_0 f3 f2 c==> c/\ * f0 f2 cball c, cvec cNUMERAL c_0 f3 f2 c/\ c~ c/\ * f1 f2 cball c, cvec cNUMERAL c_0 f3 f2 cF
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0
+ (A = T) |- ((((T ==> B) /\ T) ==> B) = (((A ==> B) /\ A) ==> B))
T c==> c= f0 cT c= c==> c/\ c==> cT f1 cT f1 c==> c/\ c==> f0 f1 f0 f1
+ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))), (~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))), (packing V') |- F
T c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c==> cpacking f0 cF
+ (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))) |- (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b0 creal_add creal_mul cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 creal_add creal_mul cpi creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0
+ (!x. ((V x) ==> (V' x))), (~ (V' x)), ((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) |- F
T c==> ! c==> * f0 b0 * f1 b0 c==> c~ * f1 f2 c==> c/\ * f0 f2 cball c, cvec cNUMERAL c_0 f3 f2 cF
+ |- ((~ (((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ==> (((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) ==> F)
T c==> c~ c==> creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 c==> creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul cpi creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul cpi creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 cF
+ |- ((\V. ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> ((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F)))))))) V)
T * / c==> cpacking b0 c==> cpacking f0 c==> csaturated f0 c==> cSUBSET b0 f0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c==> ! ! ! c==> cpacking b3 cFINITE * * part cINTER b3 * part cball c, b1 b2 cF f2
+ (~ (((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ==> (((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0)))))
T c==> c~ c==> creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 c==> creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul cpi creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul cpi creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0
+ (~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))), (packing V') |- ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) /\ (~ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r))))))))))
T c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c==> cpacking f0 c/\ c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c~ ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1
+ (!x. ((V x) ==> (V' x))) |- ((V' _11404655) \/ (~ (V _11404655)))
T c==> ! c==> * f0 b0 * f1 b0 c\/ * f1 f2 c~ * f0 f2
+ |- ((F ==> t) = T)
T c= c==> cF f0 cT
+ (~ ((ball ((vec (NUMERAL _0)) , r)) x)), ((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) |- F
T c==> c~ cball c, cvec cNUMERAL c_0 f0 f1 c==> c/\ * f2 f1 cball c, cvec cNUMERAL c_0 f0 f1 cF
+ (saturated V') |- ((saturated V') = T)
T c==> csaturated f0 c= csaturated f0 cT
+ (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (packing V'), (saturated V'), (V SUBSET V') |- (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b0 creal_add creal_mul cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f2 c==> cpacking f0 c==> csaturated f0 c==> cSUBSET f2 f0 ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 b0 creal_add creal_mul cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0
+ (packing V), (packing V'), (saturated V'), (V SUBSET V') |- (!c. (((\c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) c) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> cSUBSET f0 f1 ! c==> * / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b1 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b1 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))) = ((\c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) c))
T c= ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b0 creal_add creal_mul cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 * / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 f1
+ (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (packing V'), (saturated V'), (V SUBSET V') |- ((\c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) c)
T c==> ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b0 creal_add creal_mul cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f2 c==> cpacking f0 c==> csaturated f0 c==> cSUBSET f2 f0 * / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 f1
+ (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))), (packing V) |- ((packing V) /\ (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 c==> cpacking f0 c/\ cpacking f0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ (!x. ((V x) ==> (V' x))), ((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) |- ((~ ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x))) ==> F)
T c==> ! c==> * f0 b0 * f1 b0 c==> c/\ * f0 f2 cball c, cvec cNUMERAL c_0 f3 f2 c==> c~ c/\ * f1 f2 cball c, cvec cNUMERAL c_0 f3 f2 cF
+ (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))) |- ((!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))) /\ (!V. ((packing V) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))))
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 c/\ ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 ! c==> cpacking b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_of_num cCARD * * part cINTER b0 * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_mul cpi creal_div creal_pow b2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b1 creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0
+ (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))), (packing V) |- ((?V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V')))) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 c==> cpacking f0 c==> c? / c/\ cpacking b0 c/\ csaturated b0 cSUBSET f0 b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ ((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) |- ((((ball ((vec (NUMERAL _0)) , r)) x) ==> F) = F)
T c==> c/\ * f0 f1 cball c, cvec cNUMERAL c_0 f2 f1 c= c==> cball c, cvec cNUMERAL c_0 f2 f1 cF cF
+ (~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) |- ((FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r)))) ==> F)
T c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c==> cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 cF
+ (A = F) |- ((A = F) /\ (((A ==> B) /\ A) ==> B))
T c==> c= f0 cF c/\ c= f0 cF c==> c/\ c==> f0 f1 f0 f1
+ (!x. ((V x) ==> (V' x))) |- (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))
T c==> ! c==> * f0 b0 * f1 b0 c==> c/\ * f0 f2 cball c, cvec cNUMERAL c_0 f3 f2 c/\ * f1 f2 cball c, cvec cNUMERAL c_0 f3 f2
+ ((\c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) c) |- (((!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))) = (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> * / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 f1 c= c==> ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b0 creal_add creal_mul cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))) ==> (!V. ((packing V) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))))) = (kepler_conjecture ==> the_kepler_conjecture))
T c= c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 ! c==> cpacking b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_of_num cCARD * * part cINTER b0 * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_mul cpi creal_div creal_pow b2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b1 creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0 c==> ckepler_conjecture cthe_kepler_conjecture
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))))) |- (((real_gt ((real_add (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0
+ (~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))), (packing V), (packing V'), (saturated V'), ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r), (V SUBSET V') |- F
T c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c==> cpacking f2 c==> cpacking f0 c==> csaturated f0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f1 c==> cSUBSET f2 f0 cF
+ (packing V), (packing V'), (saturated V'), (V SUBSET V'), ((\c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) c) |- (((\c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) c) /\ (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> cSUBSET f0 f1 c==> * / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 f2 c/\ * / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 f2 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((!V'. (!V. ((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> (~ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r))))))))))))))))) = T)
T c= ! ! c==> cpacking b1 c==> cpacking b0 c==> csaturated b0 c==> cSUBSET b1 b0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c~ cFINITE * * part cINTER b0 * part cball c, cvec cNUMERAL c_0 f0 c~ ! ! ! c==> cpacking b4 cFINITE * * part cINTER b4 * part cball c, b2 b3 cT
+ (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))) |- ((packing V) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 c==> cpacking f0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!t. ((t = T) \/ (t = F))) ==> ((\t. ((t = T) \/ (t = F))) A)) = ((\t. ((t = T) \/ (t = F))) A))
T c= c==> ! c\/ c= b0 cT c= b0 cF * / c\/ c= b0 cT c= b0 cF f0 * / c\/ c= b0 cT c= b0 cF f0
+ (packing V), (packing V'), (saturated V'), (V SUBSET V') |- ((!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> cSUBSET f0 f1 c==> ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 b0 creal_add creal_mul cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f2 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((A = T) ==> (((A ==> B) /\ A) ==> B))
T c==> c= f0 cT c==> c/\ c==> f0 f1 f0 f1
+ |- (((!x. ((x IN V) ==> (x IN V'))) ==> (!x. ((x IN (V INTER (ball ((vec (NUMERAL _0)) , r)))) ==> (x IN (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) = ((V SUBSET V') ==> ((V INTER (ball ((vec (NUMERAL _0)) , r))) SUBSET (V' INTER (ball ((vec (NUMERAL _0)) , r))))))
T c= c==> ! c==> cIN b0 f0 cIN b0 f1 ! c==> cIN b0 * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 cIN b0 * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 c==> cSUBSET f0 f1 cSUBSET * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2
+ (A = T) |- ((((A ==> B) /\ A) ==> B) = (((T ==> B) /\ T) ==> B))
T c==> c= f0 cT c= c==> c/\ c==> f0 f1 f0 f1 c==> c/\ c==> cT f1 cT f1
+ |- (((!x. ((V x) ==> (V' x))) ==> (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x))))) = ((!x. ((x IN V) ==> (x IN V'))) ==> (!x. ((x IN (V INTER (ball ((vec (NUMERAL _0)) , r)))) ==> (x IN (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))
T c= c==> ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0 c==> ! c==> cIN b0 f0 cIN b0 f1 ! c==> cIN b0 * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 cIN b0 * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2
+ (~ ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x))), ((~ (V' x)) ==> F), ((~ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> F) |- F
T c==> c~ c/\ * f0 f1 cball c, cvec cNUMERAL c_0 f2 f1 c==> c==> c~ * f0 f1 cF c==> c==> c~ cball c, cvec cNUMERAL c_0 f2 f1 cF cF
+ |- ((\V. ((packing V) ==> (?V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V')))))) V)
T * / c==> cpacking b0 c? / c/\ cpacking b1 c/\ csaturated b1 cSUBSET b0 b1 f0
+ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) |- (!r. (!S. ((~ (packing S)) \/ (FINITE (S INTER (ball (_11404657 , r)))))))
T c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 ! ! c\/ c~ cpacking b1 cFINITE * * part cINTER b1 * part cball c, f0 b0
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0
+ |- ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> (~ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cSUBSET f1 f0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 c~ ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1
+ (!x. ((V x) ==> (V' x))) |- ((!x. ((V x) ==> (V' x))) /\ (!x. (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))))
T c==> ! c==> * f0 b0 * f1 b0 c/\ ! c==> * f0 b0 * f1 b0 ! c==> c/\ * f0 b0 cball c, cvec cNUMERAL c_0 f2 b0 c/\ * f1 b0 cball c, cvec cNUMERAL c_0 f2 b0
+ (packing V), (packing V'), (saturated V'), (V SUBSET V') |- ((?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> cSUBSET f0 f1 c==> c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_add ((real_add (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0
+ (!x. ((V x) ==> (V' x))), ((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) |- (((V' x) ==> F) = F)
T c==> ! c==> * f0 b0 * f1 b0 c==> c/\ * f0 f2 cball c, cvec cNUMERAL c_0 f3 f2 c= c==> * f1 f2 cF cF
+ ((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) |- (((V x) ==> (V' x)) = (V' x))
T c==> c/\ * f0 f1 cball c, cvec cNUMERAL c_0 f2 f1 c= c==> * f0 f1 * f3 f1 * f3 f1
+ |- ((t /\ F) = F)
T c= c/\ f0 cF cF
+ (packing V'), (saturated V') |- (((?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))) = ((((packing V') /\ (saturated V')) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))))
T c==> cpacking f0 c==> csaturated f0 c= c==> c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> c==> c/\ cpacking f0 csaturated f0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))), (packing V) |- ((((\V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V')))) V') ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))) = T)
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 c==> cpacking f0 c= c==> * / c/\ cpacking b0 c/\ csaturated b0 cSUBSET f0 b0 f1 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 cT
+ (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))), (packing V), (packing V'), (saturated V'), ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r), (V SUBSET V') |- (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) /\ ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b0 creal_add creal_mul cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 c==> cpacking f2 c==> cpacking f0 c==> csaturated f0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f3 c==> cSUBSET f2 f0 c/\ creal_le creal_of_num cNUMERAL cBIT1 c_0 f3 creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f3 creal_add creal_mul cpi creal_div creal_pow f3 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow f3 cNUMERAL cBIT0 cBIT1 c_0
+ ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) |- (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) = T)
T c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f0 c= creal_le creal_of_num cNUMERAL cBIT1 c_0 f0 cT
+ (packing V') |- ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> (~ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r))))))))))))
T c==> cpacking f0 c==> cSUBSET f1 f0 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 c~ ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1
+ (!x. ((V x) ==> (V' x))) |- ((((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) ==> ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x))) = T)
T c==> ! c==> * f0 b0 * f1 b0 c= c==> c/\ * f0 f2 cball c, cvec cNUMERAL c_0 f3 f2 c/\ * f1 f2 cball c, cvec cNUMERAL c_0 f3 f2 cT
+ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) ((real_add ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) ((real_mul pi) (real_inv (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))))) (real_of_num (NUMERAL _0))))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul cpi creal_inv csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ (packing V') |- ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> (~ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r))))))))))
T c==> cpacking f0 c==> c~ cFINITE * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 c~ ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1
+ |- ((~ p) = (p ==> F))
T c= c~ f0 c==> f0 cF
+ |- ((\t. ((t = T) \/ (t = F))) A)
T * / c\/ c= b0 cT c= b0 cF f0
+ (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))), (packing V) |- (!V'. (((\V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V')))) V') ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))))
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 c==> cpacking f0 ! c==> * / c/\ cpacking b1 c/\ csaturated b1 cSUBSET f0 b1 b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_mul cpi creal_div creal_pow b2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b1 creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\b. (((a SUBSET b) /\ (FINITE b)) ==> ((CARD a) <= (CARD b)))) b)
T * / c==> c/\ cSUBSET f0 b0 cFINITE b0 c<= cCARD f0 cCARD b0 f1
+ (packing V), (packing V'), (saturated V'), ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r), (V SUBSET V') |- ((((((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ==> (((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))) /\ ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r))))))) ==> (((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))) = (((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> cSUBSET f0 f1 c= c==> c/\ c==> creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 c==> creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 creal_add creal_mul cpi creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 creal_add creal_mul cpi creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 c==> creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 creal_add creal_mul cpi creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 creal_add creal_mul cpi creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 creal_add creal_mul cpi creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 creal_add creal_mul cpi creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0
+ ((\c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) c) |- (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> * / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 f1 ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b0 creal_add creal_mul cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!b. (((a SUBSET b) /\ (FINITE b)) ==> ((CARD a) <= (CARD b)))) ==> ((\b. (((a SUBSET b) /\ (FINITE b)) ==> ((CARD a) <= (CARD b)))) b)) = ((\b. (((a SUBSET b) /\ (FINITE b)) ==> ((CARD a) <= (CARD b)))) b))
T c= c==> ! c==> c/\ cSUBSET f0 b0 cFINITE b0 c<= cCARD f0 cCARD b0 * / c==> c/\ cSUBSET f0 b0 cFINITE b0 c<= cCARD f0 cCARD b0 f1 * / c==> c/\ cSUBSET f0 b0 cFINITE b0 c<= cCARD f0 cCARD b0 f1
+ (!x. ((V x) ==> (V' x))), ((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) |- (((V x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)) /\ ((V' x) /\ ((ball ((vec (NUMERAL _0)) , r)) x)))
T c==> ! c==> * f0 b0 * f1 b0 c==> c/\ * f0 f2 cball c, cvec cNUMERAL c_0 f3 f2 c/\ c/\ * f0 f2 cball c, cvec cNUMERAL c_0 f3 f2 c/\ * f1 f2 cball c, cvec cNUMERAL c_0 f3 f2
+ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) |- ((\p. (!r. (!S. ((~ (packing S)) \/ (FINITE (S INTER (ball (p , r)))))))) _11404657)
T c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 * / ! ! c\/ c~ cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 f0
+ (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))) |- ((\r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))) r)
T c==> ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b0 creal_add creal_mul cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 * / c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b0 creal_add creal_mul cpi creal_div creal_pow b0 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f1 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 f2
+ (~ (((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ==> (((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) |- ((~ (((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ==> (((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))) /\ F)
T c==> c~ c==> creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 c==> creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul cpi creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul cpi creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c==> creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 c==> creal_le creal_of_num cCARD * * part cINTER f2 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul cpi creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f1 creal_add creal_mul cpi creal_div creal_pow f1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 cF
+ |- (((!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) ==> F) = F)
T c= c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 cF cF
+ (packing V), (packing V'), (saturated V'), ((real_le (real_of_num (NUMERAL (BIT1 _0)))) r), (V SUBSET V') |- ((((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V' INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> cSUBSET f0 f1 c==> c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 creal_le creal_of_num cCARD * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 creal_add creal_mul cpi creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 creal_add creal_mul cpi creal_div creal_pow f2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul f3 creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0
+ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) |- (!p. (!r. (!S. ((~ (packing S)) \/ (FINITE (S INTER (ball (p , r))))))))
T c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 ! ! ! c\/ c~ cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1
+ (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))), (packing V), (packing V'), ((saturated V') /\ (V SUBSET V')) |- (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 c==> cpacking f0 c==> cpacking f1 c==> c/\ csaturated f1 cSUBSET f0 f1 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!a. (!b. (((a SUBSET b) /\ (FINITE b)) ==> ((CARD a) <= (CARD b))))) ==> ((\a. (!b. (((a SUBSET b) /\ (FINITE b)) ==> ((CARD a) <= (CARD b))))) a)) = ((\a. (!b. (((a SUBSET b) /\ (FINITE b)) ==> ((CARD a) <= (CARD b))))) a))
T c= c==> ! ! c==> c/\ cSUBSET b0 b1 cFINITE b1 c<= cCARD b0 cCARD b1 * / ! c==> c/\ cSUBSET b0 b1 cFINITE b1 c<= cCARD b0 cCARD b1 f0 * / ! c==> c/\ cSUBSET b0 b1 cFINITE b1 c<= cCARD b0 cCARD b1 f0
+ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) |- (!S. ((~ (packing S)) \/ (FINITE (S INTER (ball (_11404657 , _11404658))))))
T c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 ! c\/ c~ cpacking b0 cFINITE * * part cINTER b0 * part cball c, f0 f1
+ |- (((packing V) ==> ((packing V') ==> ((saturated V') ==> ((V SUBSET V') ==> (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((~ (FINITE (V' INTER (ball ((vec (NUMERAL _0)) , r))))) ==> (~ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r))))))))))))))) = T)
T c= c==> cpacking f0 c==> cpacking f1 c==> csaturated f1 c==> cSUBSET f0 f1 c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c~ cFINITE * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2 c~ ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 cT
+ (!V. (((packing V) /\ (saturated V)) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le ((real_div (measure ((UNIONS (GSPEC (\GEN%PVAR%5986. (?v. (((SETSPEC GEN%PVAR%5986) (v IN V)) (ball (v , (real_of_num (NUMERAL (BIT1 _0)))))))))) INTER (ball ((vec (NUMERAL _0)) , r))))) (measure (ball ((vec (NUMERAL _0)) , r))))) ((real_add ((real_div pi) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))) ((real_div c) r)))))))), (packing V) |- (((!x. (((\V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V')))) x) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))) ==> ((?V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V')))) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))) = ((?V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V')))) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))))
T c==> ! c==> c/\ cpacking b0 csaturated b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_div cmeasure * * part cINTER * part cUNIONS * part cGSPEC / c? / cSETSPEC b3 cIN b4 b0 * part cball c, b4 creal_of_num cNUMERAL cBIT1 c_0 * part cball c, cvec cNUMERAL c_0 b2 cmeasure * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_div cpi csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_div b1 b2 c==> cpacking f0 c= c==> ! c==> * / c/\ cpacking b1 c/\ csaturated b1 cSUBSET f0 b1 b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b2 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b2 creal_add creal_mul cpi creal_div creal_pow b2 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b1 creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0 c==> c? / c/\ cpacking b0 c/\ csaturated b0 cSUBSET f0 b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c==> c? / c/\ cpacking b0 c/\ csaturated b0 cSUBSET f0 b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((A ==> B) /\ A) ==> B)
T c==> c/\ c==> f0 f1 f0 f1
+ |- ((((packing V) ==> (?V'. ((packing V') /\ ((saturated V') /\ (V SUBSET V'))))) ==> (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))))))))) = (?c. (!r. (((real_le (real_of_num (NUMERAL (BIT1 _0)))) r) ==> ((real_le (real_of_num (CARD (V INTER (ball ((vec (NUMERAL _0)) , r)))))) ((real_add ((real_mul pi) ((real_div ((real_pow r) (NUMERAL (BIT1 (BIT1 _0))))) (sqrt (real_of_num (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0))))))))))) ((real_mul c) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c= c==> c==> cpacking f0 c? / c/\ cpacking b0 c/\ csaturated b0 cSUBSET f0 b0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 c? / ! c==> creal_le creal_of_num cNUMERAL cBIT1 c_0 b1 creal_le creal_of_num cCARD * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 b1 creal_add creal_mul cpi creal_div creal_pow b1 cNUMERAL cBIT1 cBIT1 c_0 csqrt creal_of_num cNUMERAL cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 c_0 creal_mul b0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0
+ (V SUBSET V') |- ((V INTER (ball ((vec (NUMERAL _0)) , r))) SUBSET (V' INTER (ball ((vec (NUMERAL _0)) , r))))
T c==> cSUBSET f0 f1 cSUBSET * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2
+ |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
+ (!p. (!r. (!S. ((packing S) ==> (FINITE (S INTER (ball (p , r)))))))) |- ((\r. (!S. ((~ (packing S)) \/ (FINITE (S INTER (ball (_11404657 , r))))))) _11404658)
T c==> ! ! ! c==> cpacking b2 cFINITE * * part cINTER b2 * part cball c, b0 b1 * / ! c\/ c~ cpacking b1 cFINITE * * part cINTER b1 * part cball c, f0 b0 f1
+ |- ((!x. ((x IN V) ==> (x IN V'))) ==> (!x. ((x IN (V INTER (ball ((vec (NUMERAL _0)) , r)))) ==> (x IN (V' INTER (ball ((vec (NUMERAL _0)) , r)))))))
T c==> ! c==> cIN b0 f0 cIN b0 f1 ! c==> cIN b0 * * part cINTER f0 * part cball c, cvec cNUMERAL c_0 f2 cIN b0 * * part cINTER f1 * part cball c, cvec cNUMERAL c_0 f2
