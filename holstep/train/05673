N Hypermap.concatenate_two_contours
C |- (!H. (!p. (!q. (!n. (!m. (((((is_inj_contour H) p) n) /\ ((((is_inj_contour H) q) m) /\ (((p n) = (q (NUMERAL _0))) /\ (!j. ((((NUMERAL _0) < j) /\ (j <= m)) ==> (!i. ((i <= n) ==> (~ ((q j) = (p i)))))))))) ==> (?g. (((g (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((g (n + m)) = (q m)) /\ ((((is_inj_contour H) g) (n + m)) /\ ((!i. ((i <= n) ==> ((g i) = (p i)))) /\ (!i. ((i <= m) ==> ((g (n + i)) = (q i)))))))))))))))
T c==> c/\ cis_inj_contour f0 f1 f2 c/\ cis_inj_contour f0 f3 f4 c/\ c= * f1 f2 * f3 cNUMERAL c_0 ! c==> c/\ c< cNUMERAL c_0 b0 c<= b0 f4 ! c==> c<= b1 f2 c~ c= * f3 b0 * f1 b1 c? / c/\ c= * b0 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b0 c+ f2 f4 * f3 f4 c/\ cis_inj_contour f0 b0 c+ f2 f4 c/\ ! c==> c<= b1 f2 c= * b0 b1 * f1 b1 ! c==> c<= b1 f4 c= * b0 c+ f2 b1 * f3 b1
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D Hypermap.LT0_LE1
A |- (!n. (((NUMERAL _0) < n) = ((NUMERAL (BIT1 _0)) <= n)))
T c= c< cNUMERAL c_0 f0 c<= cNUMERAL cBIT1 c_0 f0
D Hypermap.lemma_not_in_support_of_sequence
A |- (!p. (!n. (!x. ((~ (((in_support_of_sequence p) n) x)) = (!j. ((j <= n) ==> (~ (x = (p j)))))))))
T c= c~ cin_support_of_sequence f0 f1 f2 ! c==> c<= b0 f1 c~ c= f2 * f0 b0
D Hypermap.glue
A |- (!p. (!q. (!n. ((((glue p) q) n) = (\i. (((COND (i <= n)) (p i)) (q (i - n))))))))
T c= * * * part cglue f0 f1 f2 / cCOND c<= b0 f2 * f0 b0 * f1 c- b0 f2
D Hypermap.first_glue_evaluation
A |- (!p. (!q. (!n. (!i. ((i <= n) ==> (((((glue p) q) n) i) = (p i)))))))
T c==> c<= f0 f1 c= cglue f2 f3 f1 f0 * f2 f0
D Hypermap.second_glue_evaluation
A |- (!p. (!q. (!n. (!i. (((p n) = (q (NUMERAL _0))) ==> (((((glue p) q) n) (n + i)) = (q i)))))))
T c==> c= * f0 f1 * f2 cNUMERAL c_0 c= cglue f0 f2 f1 c+ f1 f3 * f2 f3
D Hypermap.is_glueing
A |- (!p. (!q. (!n. (!m. (((((is_glueing p) q) n) m) = (((p n) = (q (NUMERAL _0))) /\ (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j <= m)) ==> (~ (((in_support_of_sequence p) n) (q j)))))))))))
T c= cis_glueing f0 f1 f2 f3 c/\ c= * f0 f2 * f1 cNUMERAL c_0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 f3 c~ cin_support_of_sequence f0 f2 * f1 b0
D Hypermap.lemma_glue_inj_contours
A |- (!H. (!p. (!q. (!n. (!m. (((((is_inj_contour H) p) n) /\ ((((is_inj_contour H) q) m) /\ ((((is_glueing p) q) n) m))) ==> (((is_inj_contour H) (((glue p) q) n)) (n + m))))))))
T c==> c/\ cis_inj_contour f0 f1 f2 c/\ cis_inj_contour f0 f3 f4 cis_glueing f1 f3 f2 f4 cis_inj_contour f0 * * * part cglue f1 f3 f2 c+ f2 f4
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- (((NUMERAL _0) < n) = ((NUMERAL (BIT1 _0)) <= n)) |- (((NUMERAL (BIT1 _0)) <= n) = ((NUMERAL _0) < n))
T c==> c= c< cNUMERAL c_0 f0 c<= cNUMERAL cBIT1 c_0 f0 c= c<= cNUMERAL cBIT1 c_0 f0 c< cNUMERAL c_0 f0
+ |- ((!q. (!n. (!m. (((((is_inj_contour H) p) n) /\ ((((is_inj_contour H) q) m) /\ (((p n) = (q (NUMERAL _0))) /\ (!j. ((((NUMERAL _0) < j) /\ (j <= m)) ==> (!i. ((i <= n) ==> (~ ((q j) = (p i)))))))))) ==> (?g. (((g (NUMERAL _0)) = (p (NUMERAL _0))) /\ (((g (n + m)) = (q m)) /\ ((((is_inj_contour H) g) (n + m)) /\ ((!i. ((i <= n) ==> ((g i) = (p i)))) /\ (!i. ((i <= m) ==> ((g (n + i)) = (q i))))))))))))) = T)
T c= ! ! ! c==> c/\ cis_inj_contour f0 f1 b1 c/\ cis_inj_contour f0 b0 b2 c/\ c= * f1 b1 * b0 cNUMERAL c_0 ! c==> c/\ c< cNUMERAL c_0 b3 c<= b3 b2 ! c==> c<= b4 b1 c~ c= * b0 b3 * f1 b4 c? / c/\ c= * b3 cNUMERAL c_0 * f1 cNUMERAL c_0 c/\ c= * b3 c+ b1 b2 * b0 b2 c/\ cis_inj_contour f0 b3 c+ b1 b2 c/\ ! c==> c<= b4 b1 c= * b3 b4 * f1 b4 ! c==> c<= b4 b2 c= * b3 c+ b1 b4 * b0 b4 cT
+ |- ((\n. (((NUMERAL _0) < n) = ((NUMERAL (BIT1 _0)) <= n))) n)
T * / c= c< cNUMERAL c_0 b0 c<= cNUMERAL cBIT1 c_0 b0 f0
+ (!p. (!q. (!n. (!i. (((p n) = (q (NUMERAL _0))) ==> (((((glue p) q) n) (n + i)) = (q i))))))) |- (!n. (!i. (((p n) = (q (NUMERAL _0))) ==> (((((glue p) q) n) (n + i)) = (q i)))))
T c==> ! ! ! ! c==> c= * b0 b2 * b1 cNUMERAL c_0 c= cglue b0 b1 b2 c+ b2 b3 * b1 b3 ! ! c==> c= * f0 b0 * f1 cNUMERAL c_0 c= cglue f0 f1 b0 c+ b0 b1 * f1 b1
+ |- (((!q. (!n. (!m. (((((is_inj_contour H) p) n) /\ ((((is_inj_contour H) q) m) /\ ((((is_glueing p) q) n) m))) ==> (((is_inj_contour H) (((glue p) q) n)) (n + m)))))) ==> ((\q. (!n. (!m. (((((is_inj_contour H) p) n) /\ ((((is_inj_contour H) q) m) /\ ((((is_glueing p) q) n) m))) ==> (((is_inj_contour H) (((glue p) q) n)) (n + m)))))) q)) = ((\q. (!n. (!m. (((((is_inj_contour H) p) n) /\ ((((is_inj_contour H) q) m) /\ ((((is_glueing p) q) n) m))) ==> (((is_inj_contour H) (((glue p) q) n)) (n + m)))))) q))
T c= c==> ! ! ! c==> c/\ cis_inj_contour f0 f1 b1 c/\ cis_inj_contour f0 b0 b2 cis_glueing f1 b0 b1 b2 cis_inj_contour f0 * * * part cglue f1 b0 b1 c+ b1 b2 * / ! ! c==> c/\ cis_inj_contour f0 f1 b1 c/\ cis_inj_contour f0 b0 b2 cis_glueing f1 b0 b1 b2 cis_inj_contour f0 * * * part cglue f1 b0 b1 c+ b1 b2 f2 * / ! ! c==> c/\ cis_inj_contour f0 f1 b1 c/\ cis_inj_contour f0 b0 b2 cis_glueing f1 b0 b1 b2 cis_inj_contour f0 * * * part cglue f1 b0 b1 c+ b1 b2 f2
+ |- ((((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0))) = ((((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0))) /\ (!i. ((i <= n) ==> (((((glue p) q) n) i) = (p i))))))
T c= c= cglue f0 f1 f2 cNUMERAL c_0 * f0 cNUMERAL c_0 c/\ c= cglue f0 f1 f2 cNUMERAL c_0 * f0 cNUMERAL c_0 ! c==> c<= b0 f2 c= cglue f0 f1 f2 b0 * f0 b0
+ |- (((!n. (((p n) = (q (NUMERAL _0))) ==> (!i. (((((glue p) q) n) (n + i)) = (q i))))) ==> ((\n. (((p n) = (q (NUMERAL _0))) ==> (!i. (((((glue p) q) n) (n + i)) = (q i))))) n)) = ((\n. (((p n) = (q (NUMERAL _0))) ==> (!i. (((((glue p) q) n) (n + i)) = (q i))))) n))
T c= c==> ! c==> c= * f0 b0 * f1 cNUMERAL c_0 ! c= cglue f0 f1 b0 c+ b0 b1 * f1 b1 * / c==> c= * f0 b0 * f1 cNUMERAL c_0 ! c= cglue f0 f1 b0 c+ b0 b1 * f1 b1 f2 * / c==> c= * f0 b0 * f1 cNUMERAL c_0 ! c= cglue f0 f1 b0 c+ b0 b1 * f1 b1 f2
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((?g. t) = t)
T c= c? / f0 f0
- (((NUMERAL (BIT1 _0)) <= n) = ((NUMERAL _0) < n)) |- (((NUMERAL _0) < n) = ((NUMERAL (BIT1 _0)) <= n))
T c==> c= c<= cNUMERAL cBIT1 c_0 f0 c< cNUMERAL c_0 f0 c= c< cNUMERAL c_0 f0 c<= cNUMERAL cBIT1 c_0 f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (T = (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0))))
T c= cT c= cglue f0 f1 f2 cNUMERAL c_0 * f0 cNUMERAL c_0
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
