N More_lemma2.next_power_core_w
C |- (!n. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST cPOWER * part cnext_el f2 f4 f5
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_LE
A |- (!x. (!y. ((~ ((int_le x) y)) = ((int_lt y) x))))
T c= c~ cint_le f0 f1 cint_lt f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D Fan.POWER
A |- ((!f. (((POWER f) (NUMERAL _0)) = I)) /\ (!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))))
T c/\ ! c= * * part cPOWER b0 cNUMERAL c_0 part cI ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Hypermap.COM_POWER
A |- (!n. (!f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))))
T c= * * part cPOWER f0 cSUC f1 * * part co f0 * * part cPOWER f0 f1
D Seq2.mem_next_el
A |- (!x. (!s. (((MEM x) s) ==> ((MEM ((next_el s) x)) s))))
T c==> cMEM f0 f1 cMEM cnext_el f1 f0 f1
D List_hypermap.dart_in_face
A |- (!d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))))
T c= cMEM f0 clist_of_darts f1 cMEM f0 cfind_face f1 f0
D List_hypermap.uniq_find_face
A |- (!d. (!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d)))))
T c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f1
D List_hypermap.mem_find_face_imp_faces_eq
A |- (!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
D Tame_defs2.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D Tame_defs2.normal_list
A |- (!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))))))
T c= cnormal_list f0 f1 c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.uniq_flatten_uniq
A |- (!L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1
D Pwssrat.MEM_POWER_NEXT_EL
A |- (!k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r)))
T c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 f2 f0 f1
D Pwssrat.f_list_power_next_el
A |- (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
D Pplhulj.marked_list_of_dart
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))))
T c==> cmarked_list f0 f1 f2 f3 cMEM f3 clist_of_darts f0
D Kbwpbhq.next_el_power_trans_eq_f
A |- (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) n) w) = (((POWER (next_el ((find_face L) x))) n) w))))))))
T c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 crtrans f0 f1 f2 f3 f4 c/\ c= cnext_el cfind_face f0 f3 f3 f5 c<= f6 cindexf f5 cytrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 f4 f6 f5 cPOWER * part cnext_el cfind_face f0 f3 f6 f5
D Reduction2.marked_x_find_face
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) ((find_face L) x)))))))
T c==> cmarked_list f0 f1 f2 f3 cMEM f3 cfind_face f0 f3
D Reduction2.trans0
A |- (!L. (!N. (!r. (!x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x)))))))))
T c/\ c= crtrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cntrans f0 f1 f2 f3 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 f2 f3 cNUMERAL c_0 cl'y f0 f2 f3 c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cl'z f0 f1 f2 f3
D Reduction2.transform_assumption_v2_lemma
A |- (!L. (transform_assumption_v2 L))
T ctransform_assumption_v2 f0
D More_lemma2.next_core_FST
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ cMEM f4 f2 c= cf_list f0 f4 cnext_el f2 f4 c= cnext_el ccore f0 f2 cFST f4 cFST cnext_el f2 f4
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 clist_of_darts f0 c==> c= cf_list f0 f6 f3 c==> cMEM f3 f1 c==> cMEM cPOWER * part cnext_el f5 f2 f3 f1 c= cf_list f0 cPOWER * part cnext_el f5 f2 f3 cnext_el f1 cPOWER * part cnext_el f5 f2 f3
+ |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ |- ((\d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d))))) d)
T * / ! c= cMEM b0 clist_of_darts b1 cMEM b0 cfind_face b1 b0 f0
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11143618)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11143619)) /\ (((real_le ((real_add (real_of_int _11143618)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619)) /\ ((real_le ((real_add (real_of_int _11143619)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c<= cSUC f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c==> c= cfind_face f0 f3 f6 c==> c= cnext_el f6 f3 f5 c==> c<= f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c==> c= cPOWER * part cnext_el ccore f0 f1 f4 cFST f5 cFST f7 c==> c= cPOWER * part cnext_el f1 f4 f5 f7 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
+ |- (((!x. (((\x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))) x) ==> ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))) ==> ((?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))) ==> ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))) = ((?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))) ==> ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))
T c= c==> ! c==> * / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b1 c/\ c~ cfinal_list f0 f2 c/\ cMEM f3 f2 c= cf_list f0 f3 cnext_el f2 f3 b0 c==> ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ cMEM f3 b3 c= cf_list b1 f3 cnext_el b3 f3 c= cnext_el ccore b1 b3 cFST f3 cFST cnext_el b3 f3 c= cnext_el ccore f0 f2 cFST f3 cFST cnext_el f2 f3 c==> c? / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ cMEM f3 f2 c= cf_list f0 f3 cnext_el f2 f3 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ cMEM f3 b2 c= cf_list b0 f3 cnext_el b2 f3 c= cnext_el ccore b0 b2 cFST f3 cFST cnext_el b2 f3 c= cnext_el ccore f0 f2 cFST f3 cFST cnext_el f2 f3 c==> c? / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ cMEM f3 f2 c= cf_list f0 f3 cnext_el f2 f3 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ cMEM f3 b2 c= cf_list b0 f3 cnext_el b2 f3 c= cnext_el ccore b0 b2 cFST f3 cFST cnext_el b2 f3 c= cnext_el ccore f0 f2 cFST f3 cFST cnext_el f2 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((l'y L) r) x)) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c==> c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c/\ cuniq cflatten f7 c/\ call / c~ c= b0 cNIL f7 c/\ call * part cf_last f0 f7 c/\ call * part cloop_list f0 f7 ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f6 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c/\ c<= f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f1 f4 cFST f5 cFST cPOWER * part cnext_el f1 f4 f5 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c==> c<= cSUC f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c==> c= cfind_face f0 f3 f6 c==> c= cnext_el f6 f3 f5 c==> c<= f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c= cPOWER * part cnext_el ccore f0 f1 cSUC f4 cFST f5 cFST cPOWER * part cnext_el f1 cSUC f4 f5
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((transform_assumption_v2 L) /\ (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ ctransform_assumption_v2 f1 c==> c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el f1 f5 f4 f6 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f3 c==> cMEM cPOWER * part cnext_el f1 f5 f3 f1 c==> ctransform_assumption_v2 f0 c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c==> c= f6 cPOWER * part cnext_el f2 f5 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cPOWER * part cnext_el f2 f5 f4 f1 c= cf_list f0 cPOWER * part cnext_el f2 f5 f4 cnext_el f1 cPOWER * part cnext_el f2 f5 f4
+ |- (((!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) (SUC n)) w) = (((POWER (next_el ((find_face L) x))) (SUC n)) w))))) ==> ((\x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) (SUC n)) w) = (((POWER (next_el ((find_face L) x))) (SUC n)) w))))) x)) = ((\x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) (SUC n)) w) = (((POWER (next_el ((find_face L) x))) (SUC n)) w))))) x))
T c= c==> ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 crtrans f0 f1 f2 b0 b1 c/\ c= cnext_el cfind_face f0 b0 b0 f3 c<= cSUC f4 cindexf f3 cytrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 c= cPOWER * part cnext_el crtrans f0 f1 f2 b0 b1 cSUC f4 f3 cPOWER * part cnext_el cfind_face f0 b0 cSUC f4 f3 * / ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 crtrans f0 f1 f2 b0 b1 c/\ c= cnext_el cfind_face f0 b0 b0 f3 c<= cSUC f4 cindexf f3 cytrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 c= cPOWER * part cnext_el crtrans f0 f1 f2 b0 b1 cSUC f4 f3 cPOWER * part cnext_el cfind_face f0 b0 cSUC f4 f3 f5 * / ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 crtrans f0 f1 f2 b0 b1 c/\ c= cnext_el cfind_face f0 b0 b0 f3 c<= cSUC f4 cindexf f3 cytrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 c= cPOWER * part cnext_el crtrans f0 f1 f2 b0 b1 cSUC f4 f3 cPOWER * part cnext_el cfind_face f0 b0 cSUC f4 f3 f5
+ (uniq (list_of_darts L)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((next_el r) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w))) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))
T c==> cuniq clist_of_darts f0 c==> c= f1 cPOWER * part cnext_el f2 f3 f4 c==> c= cnext_el f2 f5 f4 c==> c= cfind_face f0 f5 f2 c==> cmarked_list f0 f6 f7 f5 c==> c= cnext_el f7 cPOWER * part cnext_el f2 f3 f4 cnext_el f2 cPOWER * part cnext_el f2 f3 f4 c= cf_list f0 cPOWER * part cnext_el f2 f3 f4 cnext_el f7 cPOWER * part cnext_el f2 f3 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((uniq (flatten N)) /\ ((MEM r) N)) ==> (uniq r)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c==> c==> c/\ cuniq cflatten f0 cMEM f2 f0 cuniq f2 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((l'y L) r) x)) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((MEM w) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) n) w)) r)) ==> (((MEM (((POWER (next_el f)) n) w)) r) /\ (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cf_list f1 f7 f4 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f4 f2 c==> cMEM f7 f2 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c==> c==> c/\ cMEM f4 f2 cuniq f2 cMEM cPOWER * part cnext_el f2 f3 f4 f2 c/\ cMEM cPOWER * part cnext_el f6 f3 f4 f2 c= cf_list f1 cPOWER * part cnext_el f6 f3 f4 cnext_el f2 cPOWER * part cnext_el f6 f3 f4
- ((((POWER (next_el r)) n) w) = d) |- (((((POWER (next_el r)) n) w) = d) /\ (?d. ((((POWER (next_el r)) n) w) = d)))
T c==> c= cPOWER * part cnext_el f0 f1 f2 f3 c/\ c= cPOWER * part cnext_el f0 f1 f2 f3 c? / c= cPOWER * part cnext_el f0 f1 f2 b0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el f1 f5 f4 f6 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f3 c==> cMEM f1 f7 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f3 c==> cs_flag_list f0 f7 f1 f3 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f5 f3 f1 c==> ctransform_assumption_v2 f0 c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c==> c= f6 cPOWER * part cnext_el f2 f5 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cPOWER * part cnext_el f2 f5 f4 f1 c= cf_list f0 cPOWER * part cnext_el f2 f5 f4 cnext_el f1 cPOWER * part cnext_el f2 f5 f4
+ |- ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)
T * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
+ |- (((!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) (SUC n)) w) = (((POWER (next_el ((find_face L) x))) (SUC n)) w)))))))) ==> ((\L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) (SUC n)) w) = (((POWER (next_el ((find_face L) x))) (SUC n)) w)))))))) L)) = ((\L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) (SUC n)) w) = (((POWER (next_el ((find_face L) x))) (SUC n)) w)))))))) L))
T c= c==> ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 c/\ c= cnext_el cfind_face b0 b3 b3 f0 c<= cSUC f1 cindexf f0 cytrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 c= cPOWER * part cnext_el crtrans b0 b1 b2 b3 b4 cSUC f1 f0 cPOWER * part cnext_el cfind_face b0 b3 cSUC f1 f0 * / ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 c/\ c= cnext_el cfind_face b0 b3 b3 f0 c<= cSUC f1 cindexf f0 cytrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 c= cPOWER * part cnext_el crtrans b0 b1 b2 b3 b4 cSUC f1 f0 cPOWER * part cnext_el cfind_face b0 b3 cSUC f1 f0 f2 * / ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 c/\ c= cnext_el cfind_face b0 b3 b3 f0 c<= cSUC f1 cindexf f0 cytrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 c= cPOWER * part cnext_el crtrans b0 b1 b2 b3 b4 cSUC f1 f0 cPOWER * part cnext_el cfind_face b0 b3 cSUC f1 f0 f2
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c<= f5 cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c==> c<= cSUC f5 cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f6 f1 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f6 f1 f3 c/\ c~ cfinal_list f0 f1 c/\ c<= f5 cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c/\ c= cfind_face f0 f3 f2 c= cnext_el f2 f3 f4 c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f4 cFST cPOWER * part cnext_el f1 f5 f4 c= cPOWER * part cnext_el ccore f0 f1 cSUC f5 cFST f4 cFST cPOWER * part cnext_el f1 cSUC f5 f4
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c<= f5 cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c==> c<= cSUC f5 cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f6 f1 f3 c/\ c<= f5 cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f4 cFST f7 c==> c= cPOWER * part cnext_el f1 f5 f4 f7 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f6 f1 f3 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f4 cFST f7 c==> c= cPOWER * part cnext_el f1 f5 f4 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f5 f3 f1 c==> ctransform_assumption_v2 f0 c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c==> c= f7 cPOWER * part cnext_el f2 f5 f4 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el f1 f5 f4 f6 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f3 c==> c= f6 cPOWER * part cnext_el f2 f5 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cPOWER * part cnext_el f2 f5 f4 f1 c= cf_list f0 cPOWER * part cnext_el f2 f5 f4 cnext_el f1 cPOWER * part cnext_el f2 f5 f4
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) /\ (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c/\ c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
+ |- ((\f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))) f)
T * / c= * * part cPOWER b0 cSUC f0 * * part co b0 * * part cPOWER b0 f0 f1
+ (uniq (list_of_darts L)), (d = (((POWER (next_el f)) n) w)), (((find_face L) x) = f), ((MEM (((POWER (next_el f)) n) w)) f) |- ((((uniq (list_of_darts L)) /\ ((MEM d) ((find_face L) x))) ==> (((find_face L) d) = ((find_face L) x))) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w))))
T c==> cuniq clist_of_darts f0 c==> c= f1 cPOWER * part cnext_el f2 f3 f4 c==> c= cfind_face f0 f5 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f4 f2 c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f5 c= cfind_face f0 f1 cfind_face f0 f5 c= cf_list f0 cPOWER * part cnext_el f2 f3 f4 cnext_el f2 cPOWER * part cnext_el f2 f3 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cPOWER * part cnext_el f3 f4 f5 c==> c= cnext_el f3 f6 f5 c==> c= cPOWER * part cnext_el f1 f4 f5 f2 c==> c= cfind_face f0 f6 f3 c==> c<= cSUC f4 cindexf f5 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c==> cMEM f5 f1 c==> cMEM cPOWER * part cnext_el f3 f4 f5 f1 c= cf_list f0 cPOWER * part cnext_el f3 f4 f5 cnext_el f1 cPOWER * part cnext_el f3 f4 f5
+ ((MEM (((POWER (next_el f)) n) w)) r) |- ((((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))) = (((MEM (((POWER (next_el f)) n) w)) r) /\ (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))
T c==> cMEM cPOWER * part cnext_el f0 f1 f2 f3 c= c= cf_list f4 cPOWER * part cnext_el f0 f1 f2 cnext_el f3 cPOWER * part cnext_el f0 f1 f2 c/\ cMEM cPOWER * part cnext_el f0 f1 f2 f3 c= cf_list f4 cPOWER * part cnext_el f0 f1 f2 cnext_el f3 cPOWER * part cnext_el f0 f1 f2
+ |- (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))) = ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))
T c= c==> c<= f0 cindexf f1 cl'y f2 f3 f4 f3 c==> c==> c<= f0 cindexf f1 cl'y f2 f3 f4 f3 c= f5 cPOWER * part cnext_el f6 f0 f1 c/\ cMEM f5 f3 c= cf_list f2 f5 cnext_el f3 f5 c==> c<= f0 cindexf f1 cytrans f2 f7 f3 f4 cNUMERAL c_0 f3 c==> c==> c<= f0 cindexf f1 cl'y f2 f3 f4 f3 c= f5 cPOWER * part cnext_el f6 f0 f1 c/\ cMEM f5 f3 c= cf_list f2 f5 cnext_el f3 f5
+ (((real_ge (real_of_int _11143618)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143619)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((l'y L) r) x)) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (((POWER (next_el f)) n) w)) r) /\ (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> c/\ cuniq clist_of_darts f1 c/\ call / c~ c= b0 cNIL f1 ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ cMEM cPOWER * part cnext_el f6 f3 f4 f2 c= cf_list f1 cPOWER * part cnext_el f6 f3 f4 cnext_el f2 cPOWER * part cnext_el f6 f3 f4
+ |- (((!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) ==> ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) d)) = ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) d))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))))))), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c/\ cnormal_list f0 f7 c/\ cMEM f1 f7 c/\ cMEM f6 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c/\ c= cnext_el f1 f6 cf_list f0 f6 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 cs_flag_list f0 f7 f1 f6 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))), (((next_el f) x) = w), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((\d. ((((POWER (next_el r)) n) w) = d)) d) ==> (((next_el ((core L) r)) (FST (((POWER (next_el r)) n) w))) = (FST ((next_el r) (((POWER (next_el r)) n) w)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f3 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 cytrans f0 f6 f1 f5 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f6 f1 f5 cNUMERAL c_0 f1 c==> cmarked_list f0 f6 f1 f5 c==> * / c= cPOWER * part cnext_el f1 f2 f3 b0 f7 c= cnext_el ccore f0 f1 cFST cPOWER * part cnext_el f1 f2 f3 cFST cnext_el f1 cPOWER * part cnext_el f1 f2 f3
+ |- (((int_le (int_of_num (NUMERAL _0))) _11143618) ==> (((int_le (int_of_num (NUMERAL _0))) _11143619) ==> ((~ ((int_le ((int_add _11143618) (int_of_num (NUMERAL (BIT1 _0))))) _11143619)) \/ ((int_le _11143618) _11143619))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c~ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le f0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c<= cSUC f2 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f1 c==> cmarked_list f0 f4 f1 f5 c==> c= cfind_face f0 f5 f6 c==> c= cnext_el f6 f5 f3 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f7 c==> c= cPOWER * part cnext_el f1 f2 f3 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f5 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f5 c==> cs_flag_list f0 f4 f1 f5 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> call * part cloop_list f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f5 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f5 f1 c==> c= f7 cPOWER * part cnext_el f6 f2 f3 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
+ |- ((\d. (!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d))))) x)
T * / ! c==> cuniq clist_of_darts b1 cuniq cfind_face b1 b0 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((normal_list L) N) /\ (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
+ |- (((!r. (!k. ((((MEM w) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) w)) r)))) ==> ((\r. (!k. ((((MEM w) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) w)) r)))) f)) = ((\r. (!k. ((((MEM w) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) w)) r)))) f))
T c= c==> ! ! c==> c/\ cMEM f0 b0 cuniq b0 cMEM cPOWER * part cnext_el b0 b1 f0 b0 * / ! c==> c/\ cMEM f0 b0 cuniq b0 cMEM cPOWER * part cnext_el b0 b1 f0 b0 f1 * / ! c==> c/\ cMEM f0 b0 cuniq b0 cMEM cPOWER * part cnext_el b0 b1 f0 b0 f1
+ |- (((!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) ==> ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)) = ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L))
T c= c==> ! ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
- (((real_ge (real_of_int _11143618)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143619)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x)))))) ==> ((\x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x)))))) x)) = ((\x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x)))))) x))
T c= c==> ! c/\ c= crtrans f0 f1 f2 b0 cNUMERAL c_0 f2 c/\ c= cntrans f0 f1 f2 b0 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 f2 b0 cNUMERAL c_0 cl'y f0 f2 b0 c= cztrans f0 f1 f2 b0 cNUMERAL c_0 cl'z f0 f1 f2 b0 * / c/\ c= crtrans f0 f1 f2 b0 cNUMERAL c_0 f2 c/\ c= cntrans f0 f1 f2 b0 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 f2 b0 cNUMERAL c_0 cl'y f0 f2 b0 c= cztrans f0 f1 f2 b0 cNUMERAL c_0 cl'z f0 f1 f2 b0 f3 * / c/\ c= crtrans f0 f1 f2 b0 cNUMERAL c_0 f2 c/\ c= cntrans f0 f1 f2 b0 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 f2 b0 cNUMERAL c_0 cl'y f0 f2 b0 c= cztrans f0 f1 f2 b0 cNUMERAL c_0 cl'z f0 f1 f2 b0 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((find_face L) x) = f), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cfind_face f0 f2 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f1 f2 c/\ c~ cfinal_list f0 f1 c/\ c<= f5 cindexf f6 cytrans f0 f4 f1 f2 cNUMERAL c_0 f1 c/\ c= cfind_face f0 f2 f3 c= cnext_el f3 f2 f6 c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f6 cFST cPOWER * part cnext_el f1 f5 f6 c==> c<= cSUC f5 cindexf f6 cytrans f0 f4 f1 f2 cNUMERAL c_0 f1 c==> cmarked_list f0 f4 f1 f2 c==> c= cnext_el f3 f2 f6 c==> c<= f5 cindexf f6 cytrans f0 f4 f1 f2 cNUMERAL c_0 f1 c= cPOWER * part cnext_el ccore f0 f1 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f1 cSUC f5 f6
+ |- ((\x. (((((marked_list L) N) r) x) ==> ((MEM x) ((find_face L) x)))) x)
T * / c==> cmarked_list f0 f1 f2 b0 cMEM b0 cfind_face f0 b0 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((l'y L) r) x)) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (((POWER (next_el f)) n) w)) r) /\ (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cf_list f1 f7 f4 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ cMEM cPOWER * part cnext_el f6 f3 f4 f2 c= cf_list f1 cPOWER * part cnext_el f6 f3 f4 cnext_el f2 cPOWER * part cnext_el f6 f3 f4
+ |- ((!w. (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) n) w) = (((POWER (next_el ((find_face L) x))) n) w))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b1 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 crtrans b1 b2 b3 b4 b5 c/\ c= cnext_el cfind_face b1 b4 b4 b0 c<= f0 cindexf b0 cytrans b1 b2 b3 b4 b5 crtrans b1 b2 b3 b4 b5 c= cPOWER * part cnext_el crtrans b1 b2 b3 b4 b5 f0 b0 cPOWER * part cnext_el cfind_face b1 b4 f0 b0 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((l'y L) r) x)) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM w) r) /\ (((MEM (((POWER (next_el f)) n) w)) r) /\ (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cf_list f1 f7 f4 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f4 f2 c==> cMEM f7 f2 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ cMEM f4 f2 c/\ cMEM cPOWER * part cnext_el f6 f3 f4 f2 c= cf_list f1 cPOWER * part cnext_el f6 f3 f4 cnext_el f2 cPOWER * part cnext_el f6 f3 f4
+ |- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((NUMERAL _0) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) (NUMERAL _0)) (FST w)) = (FST (((POWER (next_el r)) (NUMERAL _0)) w))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= cNUMERAL c_0 cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f5 c= cnext_el f5 f3 f4 c= cPOWER * part cnext_el ccore f0 f2 cNUMERAL c_0 cFST f4 cFST cPOWER * part cnext_el f2 cNUMERAL c_0 f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))), ((((marked_list L) N) r) x) |- (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c/\ c<= f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f1 f4 cFST f5 cFST cPOWER * part cnext_el f1 f4 f5 c==> cmarked_list f0 f2 f1 f3 c==> c<= cSUC f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c==> c= cfind_face f0 f3 f6 c==> c= cnext_el f6 f3 f5 c==> c<= f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c= cPOWER * part cnext_el ccore f0 f1 cSUC f4 cFST f5 cFST cPOWER * part cnext_el f1 cSUC f4 f5
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ ((((next_el f) x) = w) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cfind_face f0 f2 f3 c==> c<= cSUC f4 cindexf f5 cytrans f0 f6 f1 f2 cNUMERAL c_0 f1 c==> cmarked_list f0 f6 f1 f2 c/\ c= cfind_face f0 f2 f3 c==> c= cnext_el f3 f2 f5 c==> c= cPOWER * part cnext_el ccore f0 f1 f4 cFST f5 cFST f7 c==> c= cPOWER * part cnext_el f1 f4 f5 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cs_flag_list f0 f6 f1 f2 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f4 f2 f1 c==> ctransform_assumption_v2 f0 c==> c<= f4 cindexf f5 cl'y f0 f1 f2 f1 c==> c= f7 cPOWER * part cnext_el f3 f4 f5 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el f1 f5 f4 f6 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f3 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f3 c==> cs_flag_list f0 f7 f1 f3 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f5 f3 f1 c==> ctransform_assumption_v2 f0 c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c==> c= f6 cPOWER * part cnext_el f2 f5 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cPOWER * part cnext_el f2 f5 f4 f1 c= cf_list f0 cPOWER * part cnext_el f2 f5 f4 cnext_el f1 cPOWER * part cnext_el f2 f5 f4
+ (uniq (flatten N)) |- ((uniq (flatten N)) = T)
T c==> cuniq cflatten f0 c= cuniq cflatten f0 cT
+ |- (((!L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) ==> ((\L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) L)) = ((\L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) L))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 f0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f6 c==> cmarked_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 clist_of_darts f0 c==> c= cf_list f0 f6 f3 c==> cMEM f3 f1 c==> cMEM cPOWER * part cnext_el f5 f2 f3 f1 c= cf_list f0 cPOWER * part cnext_el f5 f2 f3 cnext_el f1 cPOWER * part cnext_el f5 f2 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f6 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f5 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f5 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f5 c= cnext_el ccore f0 f1 cFST f6 cFST cnext_el f1 f6
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) /\ (((((POWER (next_el r)) n) w) = d) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c/\ c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((l'y L) r) x)) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((POWER (next_el f)) n) w)) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (((POWER (next_el f)) n) w)) r) /\ (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cf_list f1 f7 f4 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f4 f2 c==> cMEM f7 f2 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cnext_el f6 f3 f4 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ cMEM cPOWER * part cnext_el f6 f3 f4 f2 c= cf_list f1 cPOWER * part cnext_el f6 f3 f4 cnext_el f2 cPOWER * part cnext_el f6 f3 f4
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (((POWER (next_el r)) n) x)) r) /\ ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> ctransform_assumption_v2 f1 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
- (good_list L), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))) |- ((good_list L) /\ ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w)))))))))))
T c==> cgood_list f0 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST cPOWER * part cnext_el f2 f4 f5 c/\ cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c<= cSUC f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> c= cfind_face f0 f3 f6 c==> c= cnext_el f6 f3 f5 c==> c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c= cPOWER * part cnext_el ccore f0 f2 cSUC f4 cFST f5 cFST cPOWER * part cnext_el f2 cSUC f4 f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((transform_assumption_v2 L) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ ctransform_assumption_v2 f1 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
+ |- ((\s. (((uniq (flatten N)) /\ ((MEM s) N)) ==> (uniq s))) r)
T * / c==> c/\ cuniq cflatten f0 cMEM b0 f0 cuniq b0 f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d) ((find_face L) d2))) ==> (((find_face L) d) = ((find_face L) d2))))) ==> ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d) ((find_face L) d2))) ==> (((find_face L) d) = ((find_face L) d2))))) x)) = ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d) ((find_face L) d2))) ==> (((find_face L) d) = ((find_face L) d2))))) x))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1
+ (transform_assumption_v2 L) |- ((transform_assumption_v2 L) = T)
T c==> ctransform_assumption_v2 f0 c= ctransform_assumption_v2 f0 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) /\ ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cuniq f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> ctransform_assumption_v2 f1 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((\N. (?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))) N)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f6 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f5 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f5 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f5 * / c? / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 f1 b1 c/\ c~ cfinal_list f0 f1 c/\ cMEM f6 f1 c= cf_list f0 f6 cnext_el f1 f6 f7
+ |- (((!r. (!x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x))))))) ==> ((\r. (!x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x))))))) r)) = ((\r. (!x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x))))))) r))
T c= c==> ! ! c/\ c= crtrans f0 f1 b0 b1 cNUMERAL c_0 b0 c/\ c= cntrans f0 f1 b0 b1 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 b0 b1 cNUMERAL c_0 cl'y f0 b0 b1 c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cl'z f0 f1 b0 b1 * / ! c/\ c= crtrans f0 f1 b0 b1 cNUMERAL c_0 b0 c/\ c= cntrans f0 f1 b0 b1 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 b0 b1 cNUMERAL c_0 cl'y f0 b0 b1 c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cl'z f0 f1 b0 b1 f2 * / ! c/\ c= crtrans f0 f1 b0 b1 cNUMERAL c_0 b0 c/\ c= cntrans f0 f1 b0 b1 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 b0 b1 cNUMERAL c_0 cl'y f0 b0 b1 c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cl'z f0 f1 b0 b1 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f5 f1 f3 c/\ c~ cfinal_list f0 f1 c/\ c<= f6 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c/\ c= cfind_face f0 f3 f2 c= cnext_el f2 f3 f4 c= cPOWER * part cnext_el ccore f0 f1 f6 cFST f4 cFST cPOWER * part cnext_el f1 f6 f4 c==> c<= f6 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> c<= cSUC f6 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f5 f1 f3 c/\ c<= f6 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c= cPOWER * part cnext_el ccore f0 f1 cSUC f6 cFST f4 cFST cPOWER * part cnext_el f1 cSUC f6 f4
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 cs_flag_list f0 f7 f1 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
+ |- ((\r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) (SUC n)) w) = (((POWER (next_el ((find_face L) x))) (SUC n)) w)))))) r)
T * / ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 crtrans f0 f1 b0 b1 b2 c/\ c= cnext_el cfind_face f0 b1 b1 f2 c<= cSUC f3 cindexf f2 cytrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 c= cPOWER * part cnext_el crtrans f0 f1 b0 b1 b2 cSUC f3 f2 cPOWER * part cnext_el cfind_face f0 b1 cSUC f3 f2 f4
+ |- ((\L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) N)
T * / ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 f0
+ (uniq (list_of_darts L)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w)))
T c==> cuniq clist_of_darts f0 c==> c= f1 cPOWER * part cnext_el f2 f3 f4 c==> c= cnext_el f2 f5 f4 c==> c= cfind_face f0 f5 f2 c==> cmarked_list f0 f6 f7 f5 c= cf_list f0 cPOWER * part cnext_el f2 f3 f4 cnext_el f2 cPOWER * part cnext_el f2 f3 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c==> c<= f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
+ (uniq (list_of_darts L)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((next_el r) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w))), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((next_el r) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w))) /\ (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))
T c==> cuniq clist_of_darts f0 c==> c= f1 cPOWER * part cnext_el f2 f3 f4 c==> c= cnext_el f2 f5 f4 c==> c= cnext_el f6 cPOWER * part cnext_el f2 f3 f4 cnext_el f2 cPOWER * part cnext_el f2 f3 f4 c==> c= cfind_face f0 f5 f2 c==> cmarked_list f0 f7 f6 f5 c/\ c= cnext_el f6 cPOWER * part cnext_el f2 f3 f4 cnext_el f2 cPOWER * part cnext_el f2 f3 f4 c= cf_list f0 cPOWER * part cnext_el f2 f3 f4 cnext_el f6 cPOWER * part cnext_el f2 f3 f4
- (((real_ge (real_of_int _11143618)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143619)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el f1 f5 f4 f6 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f3 c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c==> c= f6 cPOWER * part cnext_el f2 f5 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cPOWER * part cnext_el f2 f5 f4 f1 c= cf_list f0 cPOWER * part cnext_el f2 f5 f4 cnext_el f1 cPOWER * part cnext_el f2 f5 f4
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((((POWER (next_el r)) n) w) = d) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (good_list L), (good_list_nodes L), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))) |- (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w)))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST cPOWER * part cnext_el f2 f4 f5 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c<= cSUC f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> c= cfind_face f0 f3 f6 c==> c= cnext_el f6 f3 f5 c==> c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c= cPOWER * part cnext_el ccore f0 f2 cSUC f4 cFST f5 cFST cPOWER * part cnext_el f2 cSUC f4 f5
+ |- (((!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) ==> ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N)) = ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N))
T c= c==> ! ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((l'y L) r) x)) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (((POWER (next_el f)) n) w)) r) /\ (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cf_list f1 f7 f4 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f4 f2 c==> cMEM f7 f2 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ cMEM cPOWER * part cnext_el f6 f3 f4 f2 c= cf_list f1 cPOWER * part cnext_el f6 f3 f4 cnext_el f2 cPOWER * part cnext_el f6 f3 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c/\ call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f3 f7 f1 c==> ctransform_assumption_v2 f0 c==> c<= f3 cindexf f4 cl'y f0 f1 f7 f1 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f1 c= cf_list f0 f5 cnext_el f1 f5
+ (uniq f), (uniq (list_of_darts L)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((find_face L) x) = f) |- (((MEM x) f) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w))))
T c==> cuniq f0 c==> cuniq clist_of_darts f1 c==> c= f2 cPOWER * part cnext_el f0 f3 f4 c==> c= cnext_el f0 f5 f4 c==> c= cfind_face f1 f5 f0 c==> cMEM f5 f0 c= cf_list f1 cPOWER * part cnext_el f0 f3 f4 cnext_el f0 cPOWER * part cnext_el f0 f3 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((transform_assumption_v2 L) /\ ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el f1 f5 f4 f6 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f3 c/\ ctransform_assumption_v2 f0 c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c==> c= f6 cPOWER * part cnext_el f2 f5 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cPOWER * part cnext_el f2 f5 f4 f1 c= cf_list f0 cPOWER * part cnext_el f2 f5 f4 cnext_el f1 cPOWER * part cnext_el f2 f5 f4
+ |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ c<= cSUC f2 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f1 c/\ c= cfind_face f0 f5 f6 c= cnext_el f6 f5 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f1 f5 c/\ c~ cfinal_list f0 f1 c/\ c<= f2 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f1 c/\ c= cfind_face f0 f5 f6 c= cnext_el f6 f5 f3 c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c<= cSUC f2 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f1 c==> cmarked_list f0 f4 f1 f5 c= cPOWER * part cnext_el ccore f0 f1 cSUC f2 cFST f3 cFST cPOWER * part cnext_el f1 cSUC f2 f3
+ (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((MEM x) f) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w)))) = ((((((marked_list L) N) r) x) ==> ((MEM x) ((find_face L) x))) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w)))))
T c==> c= cfind_face f0 f1 f2 c==> cmarked_list f0 f3 f4 f1 c= c==> cMEM f1 f2 c= cf_list f0 cPOWER * part cnext_el f2 f5 f6 cnext_el f2 cPOWER * part cnext_el f2 f5 f6 c==> c==> cmarked_list f0 f3 f4 f1 cMEM f1 cfind_face f0 f1 c= cf_list f0 cPOWER * part cnext_el f2 f5 f6 cnext_el f2 cPOWER * part cnext_el f2 f5 f6
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f6 f1 f3 c==> c= cPOWER * part cnext_el f1 f5 f4 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f5 f3 f1 c==> ctransform_assumption_v2 f0 c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c==> c= f7 cPOWER * part cnext_el f2 f5 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cPOWER * part cnext_el f2 f5 f4 f1 c= cf_list f0 cPOWER * part cnext_el f2 f5 f4 cnext_el f1 cPOWER * part cnext_el f2 f5 f4
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (uniq f), (uniq (list_of_darts L)), (d = (((POWER (next_el f)) n) w)), (((find_face L) x) = f), ((MEM w) f) |- (((MEM w) f) /\ (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w))))
T c==> cuniq f0 c==> cuniq clist_of_darts f1 c==> c= f2 cPOWER * part cnext_el f0 f3 f4 c==> c= cfind_face f1 f5 f0 c==> cMEM f4 f0 c/\ cMEM f4 f0 c= cf_list f1 cPOWER * part cnext_el f0 f3 f4 cnext_el f0 cPOWER * part cnext_el f0 f3 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el f1 f5 f4 f6 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f3 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f3 c==> cs_flag_list f0 f7 f1 f3 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f5 f3 f1 c==> ctransform_assumption_v2 f0 c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c==> c= f6 cPOWER * part cnext_el f2 f5 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cPOWER * part cnext_el f2 f5 f4 f1 c= cf_list f0 cPOWER * part cnext_el f2 f5 f4 cnext_el f1 cPOWER * part cnext_el f2 f5 f4
+ ((SUC n) <= (((indexf w) (((l'y L) r) x)) r)) |- (((SUC n) <= (((indexf w) (((l'y L) r) x)) r)) = T)
T c==> c<= cSUC f0 cindexf f1 cl'y f2 f3 f4 f3 c= c<= cSUC f0 cindexf f1 cl'y f2 f3 f4 f3 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c= c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0 cT
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c<= f5 cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c==> c<= cSUC f5 cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f6 f1 f3 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f4 cFST f7 c==> c= cPOWER * part cnext_el f1 f5 f4 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f5 f3 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c= f7 cPOWER * part cnext_el f2 f5 f4 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11143618)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11143619)) /\ (((real_le ((real_add (real_of_int _11143618)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619)) /\ ((real_le ((real_add (real_of_int _11143619)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11143618)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11143619)) /\ (((real_le ((real_add (real_of_int _11143618)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619)) /\ ((real_le ((real_add (real_of_int _11143619)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
+ |- (((!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) ==> ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)) = ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r))
T c= c==> ! ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f3 f7 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f3 cindexf f4 cl'y f0 f1 f7 f1 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f1 c= cf_list f0 f5 cnext_el f1 f5
+ |- (((!L. (transform_assumption_v2 L)) ==> ((\L. (transform_assumption_v2 L)) L)) = ((\L. (transform_assumption_v2 L)) L))
T c= c==> ! ctransform_assumption_v2 b0 * / ctransform_assumption_v2 b0 f0 * / ctransform_assumption_v2 b0 f0
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cPOWER * part cnext_el f3 f4 f5 c==> c= cnext_el f3 f6 f5 c==> c= cPOWER * part cnext_el f1 f4 f5 f2 c==> c= cfind_face f0 f6 f3 c==> c<= cSUC f4 cindexf f5 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c= cf_list f0 cPOWER * part cnext_el f3 f4 f5 cnext_el f1 cPOWER * part cnext_el f3 f4 f5
- |- (((!x. (((\d. ((((POWER (next_el r)) n) w) = d)) x) ==> (?d. ((((POWER (next_el r)) n) w) = d)))) ==> ((?d. ((((POWER (next_el r)) n) w) = d)) ==> (?d. ((((POWER (next_el r)) n) w) = d)))) = ((?d. ((((POWER (next_el r)) n) w) = d)) ==> (?d. ((((POWER (next_el r)) n) w) = d))))
T c= c==> ! c==> * / c= cPOWER * part cnext_el f0 f1 f2 b1 b0 c? / c= cPOWER * part cnext_el f0 f1 f2 b1 c==> c? / c= cPOWER * part cnext_el f0 f1 f2 b0 c? / c= cPOWER * part cnext_el f0 f1 f2 b0 c==> c? / c= cPOWER * part cnext_el f0 f1 f2 b0 c? / c= cPOWER * part cnext_el f0 f1 f2 b0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (uniq (list_of_darts L)), (d = (((POWER (next_el f)) n) w)), (((find_face L) x) = f), ((MEM (((POWER (next_el f)) n) w)) f) |- (((MEM (((POWER (next_el f)) n) w)) f) /\ (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w))))
T c==> cuniq clist_of_darts f0 c==> c= f1 cPOWER * part cnext_el f2 f3 f4 c==> c= cfind_face f0 f5 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f4 f2 c/\ cMEM cPOWER * part cnext_el f2 f3 f4 f2 c= cf_list f0 cPOWER * part cnext_el f2 f3 f4 cnext_el f2 cPOWER * part cnext_el f2 f3 f4
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f3 f7 f1 c==> ctransform_assumption_v2 f0 c==> c<= f3 cindexf f4 cl'y f0 f1 f7 f1 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f7 clist_of_darts f0 c==> c= cf_list f0 f7 f4 c==> cMEM f4 f1 c==> cMEM cPOWER * part cnext_el f6 f3 f4 f1 c= cf_list f0 cPOWER * part cnext_el f6 f3 f4 cnext_el f1 cPOWER * part cnext_el f6 f3 f4
+ |- (((!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) n) w) = (((POWER (next_el ((find_face L) x))) n) w))))))) ==> ((\N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) n) w) = (((POWER (next_el ((find_face L) x))) n) w))))))) N)) = ((\N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) n) w) = (((POWER (next_el ((find_face L) x))) n) w))))))) N))
T c= c==> ! ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 crtrans f0 b0 b1 b2 b3 c/\ c= cnext_el cfind_face f0 b2 b2 f1 c<= f2 cindexf f1 cytrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 c= cPOWER * part cnext_el crtrans f0 b0 b1 b2 b3 f2 f1 cPOWER * part cnext_el cfind_face f0 b2 f2 f1 * / ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 crtrans f0 b0 b1 b2 b3 c/\ c= cnext_el cfind_face f0 b2 b2 f1 c<= f2 cindexf f1 cytrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 c= cPOWER * part cnext_el crtrans f0 b0 b1 b2 b3 f2 f1 cPOWER * part cnext_el cfind_face f0 b2 f2 f1 f3 * / ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 crtrans f0 b0 b1 b2 b3 c/\ c= cnext_el cfind_face f0 b2 b2 f1 c<= f2 cindexf f1 cytrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 c= cPOWER * part cnext_el crtrans f0 b0 b1 b2 b3 f2 f1 cPOWER * part cnext_el cfind_face f0 b2 f2 f1 f3
+ |- (((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL _0)))) /\ ((((next_el ((find_face L) x)) x) = w) /\ ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0)))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL _0)))) (SUC n)) w) = (((POWER (next_el ((find_face L) x))) (SUC n)) w))) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))) = (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))
T c= c==> c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 crtrans f0 f1 f2 f3 cNUMERAL c_0 c/\ c= cnext_el cfind_face f0 f3 f3 f4 c<= cSUC f5 cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 crtrans f0 f1 f2 f3 cNUMERAL c_0 c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL c_0 cSUC f5 f4 cPOWER * part cnext_el cfind_face f0 f3 cSUC f5 f4 c= cf_list f0 cPOWER * part cnext_el f6 f5 f4 cnext_el f2 cPOWER * part cnext_el f6 f5 f4 c= cf_list f0 cPOWER * part cnext_el f6 f5 f4 cnext_el f2 cPOWER * part cnext_el f6 f5 f4
- |- ((!d. t) = t)
T c= ! f0 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 clist_of_darts f0 c==> c= cf_list f0 f6 f3 c==> cMEM f3 f1 c==> cMEM cPOWER * part cnext_el f5 f2 f3 f1 c= cf_list f0 cPOWER * part cnext_el f5 f2 f3 cnext_el f1 cPOWER * part cnext_el f5 f2 f3
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))) = ((((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL _0)))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) (((((rtrans L) N) r) x) (NUMERAL _0)))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL _0)))) n) w) = (((POWER (next_el ((find_face L) x))) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el f1 f5 f4 f6 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f7 f1 f3 c= c==> c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c= f6 cPOWER * part cnext_el f2 f5 f4 c/\ cMEM f6 f1 c= cf_list f0 f6 cnext_el f1 f6 c==> c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f7 f1 f3 c/\ c~ cfinal_list f0 crtrans f0 f7 f1 f3 cNUMERAL c_0 c/\ c= cnext_el cfind_face f0 f3 f3 f4 c<= f5 cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 crtrans f0 f7 f1 f3 cNUMERAL c_0 c= cPOWER * part cnext_el crtrans f0 f7 f1 f3 cNUMERAL c_0 f5 f4 cPOWER * part cnext_el cfind_face f0 f3 f5 f4 c/\ cMEM f6 f1 c= cf_list f0 f6 cnext_el f1 f6
+ |- ((\i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) (SUC n)) w) = (((POWER (next_el ((find_face L) x))) (SUC n)) w)))) (NUMERAL _0))
T * / c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 crtrans f0 f1 f2 f3 b0 c/\ c= cnext_el cfind_face f0 f3 f3 f4 c<= cSUC f5 cindexf f4 cytrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 b0 cSUC f5 f4 cPOWER * part cnext_el cfind_face f0 f3 cSUC f5 f4 cNUMERAL c_0
+ |- ((\r. (!k. ((((MEM w) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) w)) r)))) f)
T * / ! c==> c/\ cMEM f0 b0 cuniq b0 cMEM cPOWER * part cnext_el b0 b1 f0 b0 f1
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((SUC n) <= (((indexf w) (((l'y L) r) x)) r)) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cPOWER * part cnext_el f3 f4 f5 c==> c= cnext_el f3 f6 f5 c==> c= cPOWER * part cnext_el f1 f4 f5 f2 c==> c= cfind_face f0 f6 f3 c==> cmarked_list f0 f7 f1 f6 c==> c<= cSUC f4 cindexf f5 cl'y f0 f1 f6 f1 c= cf_list f0 cPOWER * part cnext_el f3 f4 f5 cnext_el f1 cPOWER * part cnext_el f3 f4 f5
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) /\ ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cuniq f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> ctransform_assumption_v2 f1 c==> c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
+ |- (((!w. (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) (SUC n)) w) = (((POWER (next_el ((find_face L) x))) (SUC n)) w))))))))) ==> ((\w. (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) (SUC n)) w) = (((POWER (next_el ((find_face L) x))) (SUC n)) w))))))))) w)) = ((\w. (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) (SUC n)) w) = (((POWER (next_el ((find_face L) x))) (SUC n)) w))))))))) w))
T c= c==> ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b1 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 crtrans b1 b2 b3 b4 b5 c/\ c= cnext_el cfind_face b1 b4 b4 b0 c<= cSUC f0 cindexf b0 cytrans b1 b2 b3 b4 b5 crtrans b1 b2 b3 b4 b5 c= cPOWER * part cnext_el crtrans b1 b2 b3 b4 b5 cSUC f0 b0 cPOWER * part cnext_el cfind_face b1 b4 cSUC f0 b0 * / ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b1 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 crtrans b1 b2 b3 b4 b5 c/\ c= cnext_el cfind_face b1 b4 b4 b0 c<= cSUC f0 cindexf b0 cytrans b1 b2 b3 b4 b5 crtrans b1 b2 b3 b4 b5 c= cPOWER * part cnext_el crtrans b1 b2 b3 b4 b5 cSUC f0 b0 cPOWER * part cnext_el cfind_face b1 b4 cSUC f0 b0 f1 * / ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b1 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 crtrans b1 b2 b3 b4 b5 c/\ c= cnext_el cfind_face b1 b4 b4 b0 c<= cSUC f0 cindexf b0 cytrans b1 b2 b3 b4 b5 crtrans b1 b2 b3 b4 b5 c= cPOWER * part cnext_el crtrans b1 b2 b3 b4 b5 cSUC f0 b0 cPOWER * part cnext_el cfind_face b1 b4 cSUC f0 b0 f1
+ |- ((!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) n) w) = (((POWER (next_el ((find_face L) x))) n) w)))))))) = T)
T c= ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 c/\ c= cnext_el cfind_face b0 b3 b3 f0 c<= f1 cindexf f0 cytrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 c= cPOWER * part cnext_el crtrans b0 b1 b2 b3 b4 f1 f0 cPOWER * part cnext_el cfind_face b0 b3 f1 f0 cT
+ (((real_ge (real_of_int _11143618)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143619)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\m. (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((((POWER (f_list L)) m) d) = (((POWER (next_el ((find_face L) d))) m) d)))) (SUC (NUMERAL _0)))
T * / c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 cSUC cNUMERAL c_0
+ ((\d. ((((POWER (next_el r)) n) w) = d)) d) |- ((((((POWER (next_el r)) n) w) = d) ==> (((next_el ((core L) r)) (FST (((POWER (next_el r)) n) w))) = (FST ((next_el r) (((POWER (next_el r)) n) w))))) = (((next_el ((core L) r)) (FST (((POWER (next_el r)) n) w))) = (FST ((next_el r) (((POWER (next_el r)) n) w)))))
T c==> * / c= cPOWER * part cnext_el f0 f1 f2 b0 f3 c= c==> c= cPOWER * part cnext_el f0 f1 f2 f3 c= cnext_el ccore f4 f0 cFST cPOWER * part cnext_el f0 f1 f2 cFST cnext_el f0 cPOWER * part cnext_el f0 f1 f2 c= cnext_el ccore f4 f0 cFST cPOWER * part cnext_el f0 f1 f2 cFST cnext_el f0 cPOWER * part cnext_el f0 f1 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c/\ cuniq cflatten f2 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f3 f7 f1 c==> ctransform_assumption_v2 f0 c==> c<= f3 cindexf f4 cl'y f0 f1 f7 f1 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f1 c= cf_list f0 f5 cnext_el f1 f5
+ |- ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) d)
T * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c/\ c= cnext_el f1 f6 cf_list f0 f6 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 cs_flag_list f0 f7 f1 f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cfind_face f0 f6 f5 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 clist_of_darts f0 c==> c= cf_list f0 f6 f3 c==> cMEM f3 f1 c==> cMEM cPOWER * part cnext_el f5 f2 f3 f1 c= cf_list f0 cPOWER * part cnext_el f5 f2 f3 cnext_el f1 cPOWER * part cnext_el f5 f2 f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cPOWER * part cnext_el f3 f4 f5 c==> c= cnext_el f3 f6 f5 c==> c= cPOWER * part cnext_el f1 f4 f5 f2 c==> c= cfind_face f0 f6 f3 c==> cmarked_list f0 f7 f1 f6 c==> c<= cSUC f4 cindexf f5 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c= cf_list f0 cPOWER * part cnext_el f3 f4 f5 cnext_el f1 cPOWER * part cnext_el f3 f4 f5
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))) x))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ cMEM f0 b2 c= cf_list b0 f0 cnext_el b2 f0 c= cnext_el ccore b0 b2 cFST f0 cFST cnext_el b2 f0 c= c==> ! c==> c/\ cgood_list f1 c/\ cgood_list_nodes f1 c/\ cmarked_list f1 f2 f3 b0 c/\ c~ cfinal_list f1 f3 c/\ cMEM f0 f3 c= cf_list f1 f0 cnext_el f3 f0 c= cnext_el ccore f1 f3 cFST f0 cFST cnext_el f3 f0 * / c==> c/\ cgood_list f1 c/\ cgood_list_nodes f1 c/\ cmarked_list f1 f2 f3 b0 c/\ c~ cfinal_list f1 f3 c/\ cMEM f0 f3 c= cf_list f1 f0 cnext_el f3 f0 c= cnext_el ccore f1 f3 cFST f0 cFST cnext_el f3 f0 f4 * / c==> c/\ cgood_list f1 c/\ cgood_list_nodes f1 c/\ cmarked_list f1 f2 f3 b0 c/\ c~ cfinal_list f1 f3 c/\ cMEM f0 f3 c= cf_list f1 f0 cnext_el f3 f0 c= cnext_el ccore f1 f3 cFST f0 cFST cnext_el f3 f0 f4
+ |- ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) ((find_face L) x))))) r)
T * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 cfind_face f0 b1 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el f1 f5 f4 f6 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f3 c==> ctransform_assumption_v2 f0 c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c==> c= f6 cPOWER * part cnext_el f2 f5 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cPOWER * part cnext_el f2 f5 f4 f1 c= cf_list f0 cPOWER * part cnext_el f2 f5 f4 cnext_el f1 cPOWER * part cnext_el f2 f5 f4
+ |- ((\L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) (SUC n)) w) = (((POWER (next_el ((find_face L) x))) (SUC n)) w)))))))) L)
T * / ! ! ! ! c==> c/\ ctransform_assumption_v2 b0 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 crtrans b0 b1 b2 b3 b4 c/\ c= cnext_el cfind_face b0 b3 b3 f0 c<= cSUC f1 cindexf f0 cytrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 c= cPOWER * part cnext_el crtrans b0 b1 b2 b3 b4 cSUC f1 f0 cPOWER * part cnext_el cfind_face b0 b3 cSUC f1 f0 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f6 f1 f3 c/\ c= cnext_el f2 f3 f4 c==> c<= f5 cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f4 cFST f7 c==> c= cPOWER * part cnext_el f1 f5 f4 f7 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) (list_of_darts L)), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) /\ ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cPOWER * part cnext_el f3 f4 f5 c==> c= cnext_el f3 f6 f5 c==> c= cPOWER * part cnext_el f1 f4 f5 f2 c==> c= cfind_face f0 f6 f3 c==> c<= cSUC f4 cindexf f5 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 clist_of_darts f0 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f6 clist_of_darts f0 c==> c= cf_list f0 f6 f5 c==> cMEM f5 f1 c==> cMEM cPOWER * part cnext_el f3 f4 f5 f1 c= cf_list f0 cPOWER * part cnext_el f3 f4 f5 cnext_el f1 cPOWER * part cnext_el f3 f4 f5
+ |- ((\N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) (SUC n)) w) = (((POWER (next_el ((find_face L) x))) (SUC n)) w))))))) N)
T * / ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 crtrans f0 b0 b1 b2 b3 c/\ c= cnext_el cfind_face f0 b2 b2 f1 c<= cSUC f2 cindexf f1 cytrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 c= cPOWER * part cnext_el crtrans f0 b0 b1 b2 b3 cSUC f2 f1 cPOWER * part cnext_el cfind_face f0 b2 cSUC f2 f1 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (((POWER (next_el r)) n) x)) r) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ cMEM cPOWER * part cnext_el f2 f3 f7 f2 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))) ==> (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w))))) = T)
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST cPOWER * part cnext_el f2 f4 f5 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= cSUC f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f2 cSUC f4 cFST f5 cFST cPOWER * part cnext_el f2 cSUC f4 f5 cT
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c/\ cMEM f5 f1 c= cf_list f0 f5 cnext_el f1 f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((all (loop_list L)) N) |- (((all (loop_list L)) N) = T)
T c==> call * part cloop_list f0 f1 c= call * part cloop_list f0 f1 cT
+ |- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) = ((\x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))) x))
T c= c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ cMEM f4 f2 c= cf_list f0 f4 cnext_el f2 f4 * / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ cMEM f4 f2 c= cf_list f0 f4 cnext_el f2 f4 f3
+ (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) |- ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) = T)
T c==> c<= f0 cindexf f1 cytrans f2 f3 f4 f5 cNUMERAL c_0 f4 c= c<= f0 cindexf f1 cytrans f2 f3 f4 f5 cNUMERAL c_0 f4 cT
+ |- ((((((MEM w) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) n) w)) r)) ==> (((MEM (((POWER (next_el f)) n) w)) r) /\ (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))) = (((MEM (((POWER (next_el f)) n) w)) r) /\ (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))
T c= c==> c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 f2 f0 f1 c/\ cMEM cPOWER * part cnext_el f3 f2 f0 f1 c= cf_list f4 cPOWER * part cnext_el f3 f2 f0 cnext_el f1 cPOWER * part cnext_el f3 f2 f0 c/\ cMEM cPOWER * part cnext_el f3 f2 f0 f1 c= cf_list f4 cPOWER * part cnext_el f3 f2 f0 cnext_el f1 cPOWER * part cnext_el f3 f2 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((l'y L) r) x)) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (((POWER (next_el f)) n) w)) r) /\ (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ cMEM cPOWER * part cnext_el f6 f3 f4 f2 c= cf_list f1 cPOWER * part cnext_el f6 f3 f4 cnext_el f2 cPOWER * part cnext_el f6 f3 f4
- ((all (\l. (~ (l = NIL)))) L) |- (((all (\l. (~ (l = NIL)))) L) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
+ |- (((!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) ==> ((\L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) L)) = ((\L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) L))
T c= c==> ! c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 * / c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 f1 * / c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 f1
+ ((((POWER (next_el r)) n) w) = d) |- ((((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))) = (((next_el ((core L) r)) (FST (((POWER (next_el r)) n) w))) = (FST ((next_el r) (((POWER (next_el r)) n) w)))))
T c==> c= cPOWER * part cnext_el f0 f1 f2 f3 c= c= cnext_el ccore f4 f0 cFST f3 cFST cnext_el f0 f3 c= cnext_el ccore f4 f0 cFST cPOWER * part cnext_el f0 f1 f2 cFST cnext_el f0 cPOWER * part cnext_el f0 f1 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((all (loop_list L)) N), ((((marked_list L) N) r) x) |- (((all (loop_list L)) N) /\ ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el f1 f5 f4 f6 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> call * part cloop_list f0 f7 c==> cmarked_list f0 f7 f1 f3 c/\ call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f5 f3 f1 c==> ctransform_assumption_v2 f0 c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c==> c= f6 cPOWER * part cnext_el f2 f5 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cPOWER * part cnext_el f2 f5 f4 f1 c= cf_list f0 cPOWER * part cnext_el f2 f5 f4 cnext_el f1 cPOWER * part cnext_el f2 f5 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))), (((next_el f) x) = w), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f3 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 cytrans f0 f6 f1 f5 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f6 f1 f5 cNUMERAL c_0 f1 c==> cmarked_list f0 f6 f1 f5 c= cPOWER * part cnext_el ccore f0 f1 cSUC f2 cFST f3 cFST cPOWER * part cnext_el f1 cSUC f2 f3
+ |- (T = (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((NUMERAL _0) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) (NUMERAL _0)) (FST w)) = (FST (((POWER (next_el r)) (NUMERAL _0)) w)))))
T c= cT c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= cNUMERAL c_0 cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f5 c= cnext_el f5 f3 f4 c= cPOWER * part cnext_el ccore f0 f2 cNUMERAL c_0 cFST f4 cFST cPOWER * part cnext_el f2 cNUMERAL c_0 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((~ ((final_list L) r)) /\ (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))), ((((marked_list L) N) r) x) |- ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ c~ cfinal_list f0 f1 c/\ c<= cSUC f2 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f1 c/\ c= cfind_face f0 f5 f6 c= cnext_el f6 f5 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f1 f5 c/\ c~ cfinal_list f0 f1 c/\ c<= f2 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f1 c/\ c= cfind_face f0 f5 f6 c= cnext_el f6 f5 f3 c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> cmarked_list f0 f4 f1 f5 c= cPOWER * part cnext_el ccore f0 f1 cSUC f2 cFST f3 cFST cPOWER * part cnext_el f1 cSUC f2 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((MEM x) f) ==> ((MEM ((next_el f) x)) f)) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w)))) = (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w))))
T c= c==> c==> cMEM f0 f1 cMEM cnext_el f1 f0 f1 c= cf_list f2 cPOWER * part cnext_el f1 f3 f4 cnext_el f1 cPOWER * part cnext_el f1 f3 f4 c= cf_list f2 cPOWER * part cnext_el f1 f3 f4 cnext_el f1 cPOWER * part cnext_el f1 f3 f4
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq r) /\ (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ cuniq f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> ctransform_assumption_v2 f1 c==> c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
+ |- ((\k. ((((MEM w) f) /\ (uniq f)) ==> ((MEM (((POWER (next_el f)) k) w)) f))) n)
T * / c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 f2
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
- ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) L))
T c= c==> ! ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 f0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) /\ (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cfind_face f0 f6 f5 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c/\ c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f6 c==> cmarked_list f0 f7 f1 f6 c/\ cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (((real_ge (real_of_int _11143618)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143619)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))) |- ((((next_el ((core L) r)) (FST (((POWER (next_el r)) n) w))) = (FST ((next_el r) (((POWER (next_el r)) n) w)))) = ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w))))
T c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c= c= cnext_el ccore f0 f1 cFST cPOWER * part cnext_el f1 f2 f3 cFST cnext_el f1 cPOWER * part cnext_el f1 f2 f3 c= cPOWER * part cnext_el ccore f0 f1 cSUC f2 cFST f3 cFST cPOWER * part cnext_el f1 cSUC f2 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((l'y L) r) x)) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cf_list f1 f7 f4 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c==> cMEM f4 f2 c==> cMEM cPOWER * part cnext_el f6 f3 f4 f2 c= cf_list f1 cPOWER * part cnext_el f6 f3 f4 cnext_el f2 cPOWER * part cnext_el f6 f3 f4
+ ((MEM x) (list_of_darts L)) |- (((MEM x) (list_of_darts L)) = T)
T c==> cMEM f0 clist_of_darts f1 c= cMEM f0 clist_of_darts f1 cT
+ |- ((\L. (((uniq (list_of_darts L)) /\ ((MEM d) ((find_face L) x))) ==> (((find_face L) d) = ((find_face L) x)))) L)
T * / c==> c/\ cuniq clist_of_darts b0 cMEM f0 cfind_face b0 f1 c= cfind_face b0 f0 cfind_face b0 f1 f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- ((\x. (((POWER (next_el r)) (NUMERAL _0)) ((next_el r) x))) = (\x. ((next_el r) x)))
T c= / cPOWER * part cnext_el f0 cNUMERAL c_0 cnext_el f0 b0 / cnext_el f0 b0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r))) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f5 f1 f3 c/\ c~ cfinal_list f0 f1 c/\ c<= f6 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c/\ c= cfind_face f0 f3 f2 c= cnext_el f2 f3 f4 c= cPOWER * part cnext_el ccore f0 f1 f6 cFST f4 cFST cPOWER * part cnext_el f1 f6 f4 c==> c<= cSUC f6 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f5 f1 f3 c==> c==> c<= cSUC f6 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c<= f6 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c= cPOWER * part cnext_el ccore f0 f1 cSUC f6 cFST f4 cFST cPOWER * part cnext_el f1 cSUC f6 f4
+ |- (((!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) ==> ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) d)) = ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) d))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0
+ (good_list L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))) |- ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w)))
T c==> cgood_list f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= cSUC f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST cPOWER * part cnext_el f2 f4 f5 c= cPOWER * part cnext_el ccore f0 f2 cSUC f4 cFST f5 cFST cPOWER * part cnext_el f2 cSUC f4 f5
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((all (\l. (~ (l = NIL)))) L), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cPOWER * part cnext_el f3 f4 f5 c==> c= cnext_el f3 f6 f5 c==> c= cPOWER * part cnext_el f1 f4 f5 f2 c==> c= cfind_face f0 f6 f3 c==> c<= cSUC f4 cindexf f5 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f0 f7 f1 f6 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 clist_of_darts f0 c==> c= cf_list f0 f6 f5 c==> cMEM f5 f1 c==> cMEM cPOWER * part cnext_el f3 f4 f5 f1 c= cf_list f0 cPOWER * part cnext_el f3 f4 f5 cnext_el f1 cPOWER * part cnext_el f3 f4 f5
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 clist_of_darts f0 c==> c= cf_list f0 f6 f3 c==> cMEM f3 f1 c==> cMEM cPOWER * part cnext_el f5 f2 f3 f1 c= cf_list f0 cPOWER * part cnext_el f5 f2 f3 cnext_el f1 cPOWER * part cnext_el f5 f2 f3
+ (n <= (((indexf w) (((l'y L) r) x)) r)) |- ((n <= (((indexf w) (((l'y L) r) x)) r)) = T)
T c==> c<= f0 cindexf f1 cl'y f2 f3 f4 f3 c= c<= f0 cindexf f1 cl'y f2 f3 f4 f3 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cfind_face f0 f2 f3 c==> c<= cSUC f4 cindexf f5 cytrans f0 f6 f1 f2 cNUMERAL c_0 f1 c==> cmarked_list f0 f6 f1 f2 c==> c= cnext_el f3 f2 f5 c==> c<= f4 cindexf f5 cytrans f0 f6 f1 f2 cNUMERAL c_0 f1 c==> c= cPOWER * part cnext_el ccore f0 f1 f4 cFST f5 cFST f7 c==> c= cPOWER * part cnext_el f1 f4 f5 f7 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (loop_list L)) N) /\ ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c/\ call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f3 f7 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f3 cindexf f4 cl'y f0 f1 f7 f1 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f1 c= cf_list f0 f5 cnext_el f1 f5
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ |- ((\x. (!r. (!k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r))))) w)
T * / ! ! c==> c/\ cMEM b0 b1 cuniq b1 cMEM cPOWER * part cnext_el b1 b2 b0 b1 f0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))) = ((\N. (?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))) N))
T c= c? / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ cMEM f3 f2 c= cf_list f0 f3 cnext_el f2 f3 * / c? / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 f2 b1 c/\ c~ cfinal_list f0 f2 c/\ cMEM f3 f2 c= cf_list f0 f3 cnext_el f2 f3 f1
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cPOWER * part cnext_el f3 f4 f5 c==> c= cnext_el f3 f6 f5 c==> c= cPOWER * part cnext_el f1 f4 f5 f2 c==> c= cfind_face f0 f6 f3 c==> c<= cSUC f4 cindexf f5 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 clist_of_darts f0 c==> c= cf_list f0 f6 f5 c==> cMEM f5 f1 c==> cMEM cPOWER * part cnext_el f3 f4 f5 f1 c= cf_list f0 cPOWER * part cnext_el f3 f4 f5 cnext_el f1 cPOWER * part cnext_el f3 f4 f5
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> c/\ call / c~ c= b0 cNIL f2 c/\ call * part cf_last f0 f2 c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c/\ cMEM f5 f1 c= cf_list f0 f5 cnext_el f1 f5
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((l'y L) r) x)) r)), ((((marked_list L) N) r) x) |- (((SUC n) <= (((indexf w) (((l'y L) r) x)) r)) /\ (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cPOWER * part cnext_el f3 f4 f5 c==> c= cnext_el f3 f6 f5 c==> c= cPOWER * part cnext_el f1 f4 f5 f2 c==> c= cfind_face f0 f6 f3 c==> c<= cSUC f4 cindexf f5 cl'y f0 f1 f6 f1 c==> cmarked_list f0 f7 f1 f6 c/\ c<= cSUC f4 cindexf f5 cl'y f0 f1 f6 f1 c= cf_list f0 cPOWER * part cnext_el f3 f4 f5 cnext_el f1 cPOWER * part cnext_el f3 f4 f5
+ |- ((\L. (!r. ((?N. (?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))) L)
T * / ! c==> c? / c? / c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b2 b1 b3 c/\ c~ cfinal_list b0 b1 c/\ cMEM f0 b1 c= cf_list b0 f0 cnext_el b1 f0 c= cnext_el ccore b0 b1 cFST f0 cFST cnext_el b1 f0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el f1 f5 f4 f6 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cMEM f3 f1 c==> cmarked_list f0 f7 f1 f3 c/\ cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f3 c==> cs_flag_list f0 f7 f1 f3 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f5 f3 f1 c==> ctransform_assumption_v2 f0 c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c==> c= f6 cPOWER * part cnext_el f2 f5 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cPOWER * part cnext_el f2 f5 f4 f1 c= cf_list f0 cPOWER * part cnext_el f2 f5 f4 cnext_el f1 cPOWER * part cnext_el f2 f5 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el f1 f5 f4 f6 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cs_flag_list f0 f7 f1 f3 c==> cmarked_list f0 f7 f1 f3 c/\ cs_flag_list f0 f7 f1 f3 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f5 f3 f1 c==> ctransform_assumption_v2 f0 c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c==> c= f6 cPOWER * part cnext_el f2 f5 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cPOWER * part cnext_el f2 f5 f4 f1 c= cf_list f0 cPOWER * part cnext_el f2 f5 f4 cnext_el f1 cPOWER * part cnext_el f2 f5 f4
+ |- ((((\x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))) x) ==> ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))) = T)
T c= c==> * / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ cMEM f3 f2 c= cf_list f0 f3 cnext_el f2 f3 f4 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ cMEM f3 b2 c= cf_list b0 f3 cnext_el b2 f3 c= cnext_el ccore b0 b2 cFST f3 cFST cnext_el b2 f3 c= cnext_el ccore f0 f2 cFST f3 cFST cnext_el f2 f3 cT
+ |- ((((uniq (list_of_darts L)) ==> (uniq ((find_face L) x))) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w)))) = (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w))))
T c= c==> c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f1 c= cf_list f0 cPOWER * part cnext_el f2 f3 f4 cnext_el f2 cPOWER * part cnext_el f2 f3 f4 c= cf_list f0 cPOWER * part cnext_el f2 f3 f4 cnext_el f2 cPOWER * part cnext_el f2 f3 f4
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c/\ c= cnext_el f1 f6 cf_list f0 f6 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 cs_flag_list f0 f7 f1 f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
+ |- (((!n. (!w. (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) n) w) = (((POWER (next_el ((find_face L) x))) n) w)))))))))) ==> ((\n. (!w. (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) n) w) = (((POWER (next_el ((find_face L) x))) n) w)))))))))) (SUC n))) = ((\n. (!w. (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) n) w) = (((POWER (next_el ((find_face L) x))) n) w)))))))))) (SUC n)))
T c= c==> ! ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b2 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 crtrans b2 b3 b4 b5 b6 c/\ c= cnext_el cfind_face b2 b5 b5 b1 c<= b0 cindexf b1 cytrans b2 b3 b4 b5 b6 crtrans b2 b3 b4 b5 b6 c= cPOWER * part cnext_el crtrans b2 b3 b4 b5 b6 b0 b1 cPOWER * part cnext_el cfind_face b2 b5 b0 b1 * / ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b2 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 crtrans b2 b3 b4 b5 b6 c/\ c= cnext_el cfind_face b2 b5 b5 b1 c<= b0 cindexf b1 cytrans b2 b3 b4 b5 b6 crtrans b2 b3 b4 b5 b6 c= cPOWER * part cnext_el crtrans b2 b3 b4 b5 b6 b0 b1 cPOWER * part cnext_el cfind_face b2 b5 b0 b1 cSUC f0 * / ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b2 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 crtrans b2 b3 b4 b5 b6 c/\ c= cnext_el cfind_face b2 b5 b5 b1 c<= b0 cindexf b1 cytrans b2 b3 b4 b5 b6 crtrans b2 b3 b4 b5 b6 c= cPOWER * part cnext_el crtrans b2 b3 b4 b5 b6 b0 b1 cPOWER * part cnext_el cfind_face b2 b5 b0 b1 cSUC f0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) |- (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ cMEM f0 b2 c= cf_list b0 f0 cnext_el b2 f0 c= cnext_el ccore b0 b2 cFST f0 cFST cnext_el b2 f0 ! ! ! c==> c/\ cgood_list f1 c/\ cgood_list_nodes f1 c/\ cmarked_list f1 b0 b1 b2 c/\ c~ cfinal_list f1 b1 c/\ cMEM f0 b1 c= cf_list f1 f0 cnext_el b1 f0 c= cnext_el ccore f1 b1 cFST f0 cFST cnext_el b1 f0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) /\ (!L. (!r. ((?N. (?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ cMEM f0 b2 c= cf_list b0 f0 cnext_el b2 f0 c= cnext_el ccore b0 b2 cFST f0 cFST cnext_el b2 f0 c/\ ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ cMEM f0 b2 c= cf_list b0 f0 cnext_el b2 f0 c= cnext_el ccore b0 b2 cFST f0 cFST cnext_el b2 f0 ! ! c==> c? / c? / c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b2 b1 b3 c/\ c~ cfinal_list b0 b1 c/\ cMEM f0 b1 c= cf_list b0 f0 cnext_el b1 f0 c= cnext_el ccore b0 b1 cFST f0 cFST cnext_el b1 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
+ (~ ((final_list L) r)) |- ((((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))) = (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))
T c==> c~ cfinal_list f0 f1 c= c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c/\ c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f3 f7 f1 c==> ctransform_assumption_v2 f0 c==> c<= f3 cindexf f4 cl'y f0 f1 f7 f1 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f1 c= cf_list f0 f5 cnext_el f1 f5
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (((POWER (next_el r)) n) x)) r) /\ ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> ctransform_assumption_v2 f1 c==> c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
- |- (!d. (((\d. ((((POWER (next_el r)) n) w) = d)) d) ==> (?d. ((((POWER (next_el r)) n) w) = d))))
T c==> * / c= cPOWER * part cnext_el f0 f1 f2 b0 f3 c? / c= cPOWER * part cnext_el f0 f1 f2 b0
- (((real_ge (real_of_int _11143618)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143619)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((((uniq (flatten N)) /\ ((MEM r) N)) ==> (uniq r)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))) = (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c= c==> c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1 c/\ cMEM f2 f1 c= cf_list f3 f2 cnext_el f1 f2 c/\ cMEM f2 f1 c= cf_list f3 f2 cnext_el f1 f2
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cPOWER * part cnext_el f3 f4 f5 c==> c= cnext_el f3 f6 f5 c==> c= cPOWER * part cnext_el f1 f4 f5 f2 c==> c= cfind_face f0 f6 f3 c==> c<= cSUC f4 cindexf f5 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f6 clist_of_darts f0 c==> c= cf_list f0 f6 f5 c==> cMEM f5 f1 c==> cMEM cPOWER * part cnext_el f3 f4 f5 f1 c= cf_list f0 cPOWER * part cnext_el f3 f4 f5 cnext_el f1 cPOWER * part cnext_el f3 f4 f5
+ |- (((!x. (((\N. (?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))) x) ==> ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))) ==> ((?N. (?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))) ==> ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))) = ((?N. (?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))) ==> ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))
T c= c==> ! c==> * / c? / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b1 f1 b2 c/\ c~ cfinal_list f0 f1 c/\ cMEM f2 f1 c= cf_list f0 f2 cnext_el f1 f2 b0 c==> ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ cMEM f2 b3 c= cf_list b1 f2 cnext_el b3 f2 c= cnext_el ccore b1 b3 cFST f2 cFST cnext_el b3 f2 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c==> c? / c? / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 f1 b1 c/\ c~ cfinal_list f0 f1 c/\ cMEM f2 f1 c= cf_list f0 f2 cnext_el f1 f2 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ cMEM f2 b2 c= cf_list b0 f2 cnext_el b2 f2 c= cnext_el ccore b0 b2 cFST f2 cFST cnext_el b2 f2 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2 c==> c? / c? / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 f1 b1 c/\ c~ cfinal_list f0 f1 c/\ cMEM f2 f1 c= cf_list f0 f2 cnext_el f1 f2 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ cMEM f2 b2 c= cf_list b0 f2 cnext_el b2 f2 c= cnext_el ccore b0 b2 cFST f2 cFST cnext_el b2 f2 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c= f5 cPOWER * part cnext_el f6 f3 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
+ ((\x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))) x) |- (((\x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))) x) /\ ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))
T c==> * / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ cMEM f3 f2 c= cf_list f0 f3 cnext_el f2 f3 f4 c/\ * / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ cMEM f3 f2 c= cf_list f0 f3 cnext_el f2 f3 f4 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ cMEM f3 b2 c= cf_list b0 f3 cnext_el b2 f3 c= cnext_el ccore b0 b2 cFST f3 cFST cnext_el b2 f3 c= cnext_el ccore f0 f2 cFST f3 cFST cnext_el f2 f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f3 f7 f1 c==> ctransform_assumption_v2 f0 c==> c<= f3 cindexf f4 cl'y f0 f1 f7 f1 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f1 c= cf_list f0 f5 cnext_el f1 f5
+ |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((((POWER (next_el r)) n) w) = d) /\ ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c/\ c= cPOWER * part cnext_el f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- |- ((((\d. ((((POWER (next_el r)) n) w) = d)) d) ==> (?d. ((((POWER (next_el r)) n) w) = d))) = T)
T c= c==> * / c= cPOWER * part cnext_el f0 f1 f2 b0 f3 c? / c= cPOWER * part cnext_el f0 f1 f2 b0 cT
+ |- ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)
T * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
- (((real_ge (real_of_int _11143618)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143619)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (good_list L), ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))) |- ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w)))
T c==> cgood_list f0 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= cSUC f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST cPOWER * part cnext_el f2 f4 f5 c= cPOWER * part cnext_el ccore f0 f2 cSUC f4 cFST f5 cFST cPOWER * part cnext_el f2 cSUC f4 f5
+ |- ((!n. ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))) ==> (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w)))))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((NUMERAL _0) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) (NUMERAL _0)) (FST w)) = (FST (((POWER (next_el r)) (NUMERAL _0)) w)))) /\ (!n. ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))) ==> (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w))))))))
T c= ! c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= b0 cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f5 c= cnext_el f5 f3 f4 c= cPOWER * part cnext_el ccore f0 f2 b0 cFST f4 cFST cPOWER * part cnext_el f2 b0 f4 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= cSUC b0 cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f5 c= cnext_el f5 f3 f4 c= cPOWER * part cnext_el ccore f0 f2 cSUC b0 cFST f4 cFST cPOWER * part cnext_el f2 cSUC b0 f4 c/\ c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= cNUMERAL c_0 cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f5 c= cnext_el f5 f3 f4 c= cPOWER * part cnext_el ccore f0 f2 cNUMERAL c_0 cFST f4 cFST cPOWER * part cnext_el f2 cNUMERAL c_0 f4 ! c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= b0 cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f5 c= cnext_el f5 f3 f4 c= cPOWER * part cnext_el ccore f0 f2 b0 cFST f4 cFST cPOWER * part cnext_el f2 b0 f4 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= cSUC b0 cindexf f4 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f5 c= cnext_el f5 f3 f4 c= cPOWER * part cnext_el ccore f0 f2 cSUC b0 cFST f4 cFST cPOWER * part cnext_el f2 cSUC b0 f4
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f6 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f5 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f5 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f5 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f7 f1 f5 c/\ c~ cfinal_list f0 f1 c/\ cMEM f6 f1 c= cf_list f0 f6 cnext_el f1 f6
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (?N. (?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f6 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f5 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f5 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f5 c? / c? / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 f1 b1 c/\ c~ cfinal_list f0 f1 c/\ cMEM f6 f1 c= cf_list f0 f6 cnext_el f1 f6
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((l'y L) r) x)) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (((POWER (next_el f)) n) w)) r) /\ (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> c/\ cuniq clist_of_darts f1 c/\ call / c~ c= b0 cNIL f1 ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ cMEM cPOWER * part cnext_el f6 f3 f4 f2 c= cf_list f1 cPOWER * part cnext_el f6 f3 f4 cnext_el f2 cPOWER * part cnext_el f6 f3 f4
- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))) = T)
T c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST cPOWER * part cnext_el f2 f4 f5 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST cPOWER * part cnext_el f2 f4 f5 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((l'y L) r) x)) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((n <= (((indexf w) (((l'y L) r) x)) r)) /\ ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- |- (((!w. (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) n) w) = (((POWER (next_el ((find_face L) x))) n) w))))))))) ==> ((\w. (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) n) w) = (((POWER (next_el ((find_face L) x))) n) w))))))))) w)) = ((\w. (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) n) w) = (((POWER (next_el ((find_face L) x))) n) w))))))))) w))
T c= c==> ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b1 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 crtrans b1 b2 b3 b4 b5 c/\ c= cnext_el cfind_face b1 b4 b4 b0 c<= f0 cindexf b0 cytrans b1 b2 b3 b4 b5 crtrans b1 b2 b3 b4 b5 c= cPOWER * part cnext_el crtrans b1 b2 b3 b4 b5 f0 b0 cPOWER * part cnext_el cfind_face b1 b4 f0 b0 * / ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b1 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 crtrans b1 b2 b3 b4 b5 c/\ c= cnext_el cfind_face b1 b4 b4 b0 c<= f0 cindexf b0 cytrans b1 b2 b3 b4 b5 crtrans b1 b2 b3 b4 b5 c= cPOWER * part cnext_el crtrans b1 b2 b3 b4 b5 f0 b0 cPOWER * part cnext_el cfind_face b1 b4 f0 b0 f1 * / ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b1 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 crtrans b1 b2 b3 b4 b5 c/\ c= cnext_el cfind_face b1 b4 b4 b0 c<= f0 cindexf b0 cytrans b1 b2 b3 b4 b5 crtrans b1 b2 b3 b4 b5 c= cPOWER * part cnext_el crtrans b1 b2 b3 b4 b5 f0 b0 cPOWER * part cnext_el cfind_face b1 b4 f0 b0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((((POWER (next_el r)) n) w) = d) /\ (((next_el ((core L) r)) (FST (((POWER (next_el r)) n) w))) = (FST ((next_el r) (((POWER (next_el r)) n) w)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f6 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f5 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f5 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f5 c/\ c= cPOWER * part cnext_el f1 f2 f3 f6 c= cnext_el ccore f0 f1 cFST cPOWER * part cnext_el f1 f2 f3 cFST cnext_el f1 cPOWER * part cnext_el f1 f2 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((l'y L) r) x)) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) /\ (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cf_list f1 f7 f4 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c==> cMEM f4 f2 c/\ cMEM cPOWER * part cnext_el f6 f3 f4 f2 c= cf_list f1 cPOWER * part cnext_el f6 f3 f4 cnext_el f2 cPOWER * part cnext_el f6 f3 f4
+ (uniq f), (uniq (list_of_darts L)), (d = (((POWER (next_el f)) n) w)), (((find_face L) x) = f), ((MEM w) f) |- (((((MEM w) f) /\ (uniq f)) ==> ((MEM (((POWER (next_el f)) n) w)) f)) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w))))
T c==> cuniq f0 c==> cuniq clist_of_darts f1 c==> c= f2 cPOWER * part cnext_el f0 f3 f4 c==> c= cfind_face f1 f5 f0 c==> cMEM f4 f0 c==> c==> c/\ cMEM f4 f0 cuniq f0 cMEM cPOWER * part cnext_el f0 f3 f4 f0 c= cf_list f1 cPOWER * part cnext_el f0 f3 f4 cnext_el f0 cPOWER * part cnext_el f0 f3 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f3 f7 f1 c==> ctransform_assumption_v2 f0 c==> c<= f3 cindexf f4 cl'y f0 f1 f7 f1 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f1 c= cf_list f0 f5 cnext_el f1 f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((l'y L) r) x)) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cMEM f7 clist_of_darts f1 c==> c= cf_list f1 f7 f4 c==> cMEM f4 f2 c==> cMEM cPOWER * part cnext_el f6 f3 f4 f2 c= cf_list f1 cPOWER * part cnext_el f6 f3 f4 cnext_el f2 cPOWER * part cnext_el f6 f3 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq r) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c==> cuniq f2 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
+ (?N. (?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> c? / c? / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 f1 b1 c/\ c~ cfinal_list f0 f1 c/\ cMEM f2 f1 c= cf_list f0 f2 cnext_el f1 f2 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ cMEM f2 b2 c= cf_list b0 f2 cnext_el b2 f2 c= cnext_el ccore b0 b2 cFST f2 cFST cnext_el b2 f2 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
+ |- (((((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r))) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w)))) = ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w))))
T c= c==> c==> c<= cSUC f0 cindexf f1 cytrans f2 f3 f4 f5 cNUMERAL c_0 f4 c<= f0 cindexf f1 cytrans f2 f3 f4 f5 cNUMERAL c_0 f4 c= cPOWER * part cnext_el ccore f2 f4 cSUC f0 cFST f1 cFST cPOWER * part cnext_el f4 cSUC f0 f1 c= cPOWER * part cnext_el ccore f2 f4 cSUC f0 cFST f1 cFST cPOWER * part cnext_el f4 cSUC f0 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w))), (((next_el f) x) = w), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((((POWER (next_el r)) n) w) = d) ==> (((next_el ((core L) r)) (FST (((POWER (next_el r)) n) w))) = (FST ((next_el r) (((POWER (next_el r)) n) w)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST cPOWER * part cnext_el f1 f2 f3 c==> c= cnext_el f4 f5 f3 c==> c= cfind_face f0 f5 f4 c==> c<= f2 cindexf f3 cytrans f0 f6 f1 f5 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f6 f1 f5 cNUMERAL c_0 f1 c==> cmarked_list f0 f6 f1 f5 c==> c= cPOWER * part cnext_el f1 f2 f3 f7 c= cnext_el ccore f0 f1 cFST cPOWER * part cnext_el f1 f2 f3 cFST cnext_el f1 cPOWER * part cnext_el f1 f2 f3
+ |- (((uniq (list_of_darts L)) /\ ((MEM d) (list_of_darts L))) ==> ((((POWER (f_list L)) (SUC (NUMERAL _0))) d) = (((POWER (next_el ((find_face L) d))) (SUC (NUMERAL _0))) d)))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 cSUC cNUMERAL c_0 f1 cPOWER * part cnext_el cfind_face f0 f1 cSUC cNUMERAL c_0 f1
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _11143618)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _11143619)) /\ (((real_le ((real_add (real_of_int _11143618)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619)) /\ ((real_le ((real_add (real_of_int _11143619)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _11143618) ==> (((int_le (int_of_num (NUMERAL _0))) _11143619) ==> ((~ ((int_le ((int_add _11143618) (int_of_num (NUMERAL (BIT1 _0))))) _11143619)) \/ ((int_le _11143618) _11143619))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c~ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le f0 f1
+ (good_list L), (good_list_nodes L), (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))), ((((marked_list L) N) r) x) |- ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w)))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= cSUC f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST cPOWER * part cnext_el f2 f4 f5 c==> cmarked_list f0 f1 f2 f3 c= cPOWER * part cnext_el ccore f0 f2 cSUC f4 cFST f5 cFST cPOWER * part cnext_el f2 cSUC f4 f5
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el f1 f5 f4 f6 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f3 c==> c<= cSUC f5 cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f3 c==> cs_flag_list f0 f7 f1 f3 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f5 f3 f1 c==> ctransform_assumption_v2 f0 c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c==> c= f6 cPOWER * part cnext_el f2 f5 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cPOWER * part cnext_el f2 f5 f4 f1 c= cf_list f0 cPOWER * part cnext_el f2 f5 f4 cnext_el f1 cPOWER * part cnext_el f2 f5 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el f1 f5 f4 f6 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f3 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f5 f3 f1 c==> ctransform_assumption_v2 f0 c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c==> c= f6 cPOWER * part cnext_el f2 f5 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cPOWER * part cnext_el f2 f5 f4 f1 c= cf_list f0 cPOWER * part cnext_el f2 f5 f4 cnext_el f1 cPOWER * part cnext_el f2 f5 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((l'y L) r) x)) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((POWER (next_el f)) n) w)) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (((POWER (next_el f)) n) w)) r) /\ (((MEM (((POWER (next_el f)) n) w)) r) /\ (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cf_list f1 f7 f4 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f4 f2 c==> cMEM f7 f2 c==> cMEM f7 clist_of_darts f1 c==> cMEM cPOWER * part cnext_el f6 f3 f4 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ cMEM cPOWER * part cnext_el f6 f3 f4 f2 c/\ cMEM cPOWER * part cnext_el f6 f3 f4 f2 c= cf_list f1 cPOWER * part cnext_el f6 f3 f4 cnext_el f2 cPOWER * part cnext_el f6 f3 f4
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))))) N))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ cMEM f0 b2 c= cf_list b0 f0 cnext_el b2 f0 c= cnext_el ccore b0 b2 cFST f0 cFST cnext_el b2 f0 c= c==> ! ! ! c==> c/\ cgood_list f1 c/\ cgood_list_nodes f1 c/\ cmarked_list f1 b0 b1 b2 c/\ c~ cfinal_list f1 b1 c/\ cMEM f0 b1 c= cf_list f1 f0 cnext_el b1 f0 c= cnext_el ccore f1 b1 cFST f0 cFST cnext_el b1 f0 * / ! ! c==> c/\ cgood_list f1 c/\ cgood_list_nodes f1 c/\ cmarked_list f1 b0 b1 b2 c/\ c~ cfinal_list f1 b1 c/\ cMEM f0 b1 c= cf_list f1 f0 cnext_el b1 f0 c= cnext_el ccore f1 b1 cFST f0 cFST cnext_el b1 f0 f2 * / ! ! c==> c/\ cgood_list f1 c/\ cgood_list_nodes f1 c/\ cmarked_list f1 b0 b1 b2 c/\ c~ cfinal_list f1 b1 c/\ cMEM f0 b1 c= cf_list f1 f0 cnext_el b1 f0 c= cnext_el ccore f1 b1 cFST f0 cFST cnext_el b1 f0 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((l'y L) r) x)) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((d = (((POWER (next_el f)) n) w)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
+ |- (!B. (((SUC n) <= B) ==> (n <= B)))
T c==> c<= cSUC f0 f1 c<= f0 f1
+ (uniq (list_of_darts L)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((uniq f) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w))))
T c==> cuniq clist_of_darts f0 c==> c= f1 cPOWER * part cnext_el f2 f3 f4 c==> c= cnext_el f2 f5 f4 c==> c= cfind_face f0 f5 f2 c==> cmarked_list f0 f6 f7 f5 c==> cuniq f2 c= cf_list f0 cPOWER * part cnext_el f2 f3 f4 cnext_el f2 cPOWER * part cnext_el f2 f3 f4
+ |- ((?N. (?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d))))
T c==> c? / c? / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 f1 b1 c/\ c~ cfinal_list f0 f1 c/\ cMEM f2 f1 c= cf_list f0 f2 cnext_el f1 f2 c= cnext_el ccore f0 f1 cFST f2 cFST cnext_el f1 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((real_ge x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 f1 creal_of_num cNUMERAL c_0
+ |- ((\k. ((((MEM x) r) /\ (uniq r)) ==> ((MEM (((POWER (next_el r)) k) x)) r))) (SUC (NUMERAL _0)))
T * / c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 b0 f0 f1 cSUC cNUMERAL c_0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el f1 f5 f4 f6 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f3 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f5 f3 f1 c==> ctransform_assumption_v2 f0 c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c==> c= f6 cPOWER * part cnext_el f2 f5 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cPOWER * part cnext_el f2 f5 f4 f1 c= cf_list f0 cPOWER * part cnext_el f2 f5 f4 cnext_el f1 cPOWER * part cnext_el f2 f5 f4
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f3 f7 f1 c==> ctransform_assumption_v2 f0 c==> c<= f3 cindexf f4 cl'y f0 f1 f7 f1 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f7 clist_of_darts f0 c==> c= cf_list f0 f7 f4 c==> cMEM f4 f1 c==> cMEM cPOWER * part cnext_el f6 f3 f4 f1 c= cf_list f0 cPOWER * part cnext_el f6 f3 f4 cnext_el f1 cPOWER * part cnext_el f6 f3 f4
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c==> ctransform_assumption_v2 f1 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))))), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c/\ cMEM f6 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c/\ c= cnext_el f1 f6 cf_list f0 f6 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 cs_flag_list f0 f7 f1 f6 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
+ |- (((!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) (SUC n)) w) = (((POWER (next_el ((find_face L) x))) (SUC n)) w))))))) ==> ((\N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) (SUC n)) w) = (((POWER (next_el ((find_face L) x))) (SUC n)) w))))))) N)) = ((\N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) (SUC n)) w) = (((POWER (next_el ((find_face L) x))) (SUC n)) w))))))) N))
T c= c==> ! ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 crtrans f0 b0 b1 b2 b3 c/\ c= cnext_el cfind_face f0 b2 b2 f1 c<= cSUC f2 cindexf f1 cytrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 c= cPOWER * part cnext_el crtrans f0 b0 b1 b2 b3 cSUC f2 f1 cPOWER * part cnext_el cfind_face f0 b2 cSUC f2 f1 * / ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 crtrans f0 b0 b1 b2 b3 c/\ c= cnext_el cfind_face f0 b2 b2 f1 c<= cSUC f2 cindexf f1 cytrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 c= cPOWER * part cnext_el crtrans f0 b0 b1 b2 b3 cSUC f2 f1 cPOWER * part cnext_el cfind_face f0 b2 cSUC f2 f1 f3 * / ! ! ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 crtrans f0 b0 b1 b2 b3 c/\ c= cnext_el cfind_face f0 b2 b2 f1 c<= cSUC f2 cindexf f1 cytrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 c= cPOWER * part cnext_el crtrans f0 b0 b1 b2 b3 cSUC f2 f1 cPOWER * part cnext_el cfind_face f0 b2 cSUC f2 f1 f3
+ |- ((((SUC n) <= (((indexf w) (((l'y L) r) x)) r)) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))) = (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))
T c= c==> c<= cSUC f0 cindexf f1 cl'y f2 f3 f4 f3 c= cf_list f2 cPOWER * part cnext_el f5 f0 f1 cnext_el f3 cPOWER * part cnext_el f5 f0 f1 c==> c<= cSUC f0 cindexf f1 cytrans f2 f6 f3 f4 cNUMERAL c_0 f3 c= cf_list f2 cPOWER * part cnext_el f5 f0 f1 cnext_el f3 cPOWER * part cnext_el f5 f0 f1
+ |- ((\x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) n) w) = (((POWER (next_el ((find_face L) x))) n) w))))) x)
T * / ! c==> c/\ ctransform_assumption_v2 f0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 crtrans f0 f1 f2 b0 b1 c/\ c= cnext_el cfind_face f0 b0 b0 f3 c<= f4 cindexf f3 cytrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 c= cPOWER * part cnext_el crtrans f0 f1 f2 b0 b1 f4 f3 cPOWER * part cnext_el cfind_face f0 b0 f4 f3 f5
+ |- ((\n. (!f. (((POWER f) (SUC n)) = (f o ((POWER f) n))))) n)
T * / ! c= * * part cPOWER b1 cSUC b0 * * part co b1 * * part cPOWER b1 b0 f0
+ |- ((\r. (!x. (((((((rtrans L) N) r) x) (NUMERAL _0)) = r) /\ (((((((ntrans L) N) r) x) (NUMERAL _0)) = N) /\ (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x))))))) r)
T * / ! c/\ c= crtrans f0 f1 b0 b1 cNUMERAL c_0 b0 c/\ c= cntrans f0 f1 b0 b1 cNUMERAL c_0 f1 c/\ c= cytrans f0 f1 b0 b1 cNUMERAL c_0 cl'y f0 b0 b1 c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cl'z f0 f1 b0 b1 f2
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))), ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) |- (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ cMEM f0 b2 c= cf_list b0 f0 cnext_el b2 f0 c= cnext_el ccore b0 b2 cFST f0 cFST cnext_el b2 f0 c==> c/\ cgood_list f1 c/\ cgood_list_nodes f1 c/\ cmarked_list f1 f2 f3 f4 c/\ c~ cfinal_list f1 f3 c/\ cMEM f0 f3 c= cf_list f1 f0 cnext_el f3 f0 c= cnext_el ccore f1 f3 cFST f0 cFST cnext_el f3 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
+ |- (((((uniq (list_of_darts L)) /\ ((MEM d) ((find_face L) x))) ==> (((find_face L) d) = ((find_face L) x))) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w)))) = (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w))))
T c= c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2 c= cf_list f0 cPOWER * part cnext_el f3 f4 f5 cnext_el f3 cPOWER * part cnext_el f3 f4 f5 c= cf_list f0 cPOWER * part cnext_el f3 f4 f5 cnext_el f3 cPOWER * part cnext_el f3 f4 f5
+ |- ((!A. (!B. ((~ ((int_le ((int_add (int_of_num A)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num B))) \/ ((int_le (int_of_num A)) (int_of_num B))))) = (!A. (!B. (((SUC A) <= B) ==> (A <= B)))))
T c= ! ! c\/ c~ cint_le cint_add cint_of_num b0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num b1 cint_le cint_of_num b0 cint_of_num b1 ! ! c==> c<= cSUC b0 b1 c<= b0 b1
- ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) |- (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) = T)
T c==> c==> c<= f0 cindexf f1 cl'y f2 f3 f4 f3 c= f5 cPOWER * part cnext_el f6 f0 f1 c= c==> c<= f0 cindexf f1 cl'y f2 f3 f4 f3 c= f5 cPOWER * part cnext_el f6 f0 f1 cT
+ (((real_ge (real_of_int _11143618)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143619)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (!n. ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))) ==> (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w))))))
T c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST cPOWER * part cnext_el f2 f4 f5 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= cSUC f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f2 cSUC f4 cFST f5 cFST cPOWER * part cnext_el f2 cSUC f4 f5
+ |- ((((((MEM w) f) /\ (uniq f)) ==> ((MEM (((POWER (next_el f)) n) w)) f)) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w)))) = (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w))))
T c= c==> c==> c/\ cMEM f0 f1 cuniq f1 cMEM cPOWER * part cnext_el f1 f2 f0 f1 c= cf_list f3 cPOWER * part cnext_el f1 f2 f0 cnext_el f1 cPOWER * part cnext_el f1 f2 f0 c= cf_list f3 cPOWER * part cnext_el f1 f2 f0 cnext_el f1 cPOWER * part cnext_el f1 f2 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((l'y L) r) x)) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM w) r), ((((marked_list L) N) r) x) |- (((MEM w) r) /\ (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> ctransform_assumption_v2 f0 c==> c= f2 cPOWER * part cnext_el f3 f4 f5 c==> c= cnext_el f3 f6 f5 c==> c= cPOWER * part cnext_el f1 f4 f5 f2 c==> c= cfind_face f0 f6 f3 c==> c<= cSUC f4 cindexf f5 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f5 f1 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f5 f1 c==> cMEM cPOWER * part cnext_el f3 f4 f5 f1 c= cf_list f0 cPOWER * part cnext_el f3 f4 f5 cnext_el f1 cPOWER * part cnext_el f3 f4 f5
+ |- (((((((ytrans L) N) r) x) (NUMERAL _0)) = (((l'y L) r) x)) /\ ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x)))
T c/\ c= cytrans f0 f1 f2 f3 cNUMERAL c_0 cl'y f0 f2 f3 c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cl'z f0 f1 f2 f3
+ (uniq f), (uniq (list_of_darts L)), (d = (((POWER (next_el f)) n) w)), (((next_el f) x) = w), (((find_face L) x) = f), ((MEM x) f) |- (((MEM x) f) /\ (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el f) (((POWER (next_el f)) n) w))))
T c==> cuniq f0 c==> cuniq clist_of_darts f1 c==> c= f2 cPOWER * part cnext_el f0 f3 f4 c==> c= cnext_el f0 f5 f4 c==> c= cfind_face f1 f5 f0 c==> cMEM f5 f0 c/\ cMEM f5 f0 c= cf_list f1 cPOWER * part cnext_el f0 f3 f4 cnext_el f0 cPOWER * part cnext_el f0 f3 f4
+ |- ((m <= n) = ((int_le (int_of_num m)) (int_of_num n)))
T c= c<= f0 f1 cint_le cint_of_num f0 cint_of_num f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cfind_face f0 f2 f3 c==> c<= cSUC f4 cindexf f5 cytrans f0 f6 f1 f2 cNUMERAL c_0 f1 c==> cmarked_list f0 f6 f1 f2 c/\ c= cfind_face f0 f2 f3 c==> c= cnext_el f3 f2 f5 c==> c<= f4 cindexf f5 cytrans f0 f6 f1 f2 cNUMERAL c_0 f1 c==> c= cPOWER * part cnext_el ccore f0 f1 f4 cFST f5 cFST f7 c==> c= cPOWER * part cnext_el f1 f4 f5 f7 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) B)
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((find_face L) x) = f), ((((find_face L) x) = f) /\ (((next_el f) x) = w)), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cfind_face f0 f2 f3 c==> c/\ c= cfind_face f0 f2 f3 c= cnext_el f3 f2 f4 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f5 f1 f2 c/\ c~ cfinal_list f0 f1 c/\ c<= f6 cindexf f4 cytrans f0 f5 f1 f2 cNUMERAL c_0 f1 c/\ c= cfind_face f0 f2 f3 c= cnext_el f3 f2 f4 c= cPOWER * part cnext_el ccore f0 f1 f6 cFST f4 cFST cPOWER * part cnext_el f1 f6 f4 c==> c<= cSUC f6 cindexf f4 cytrans f0 f5 f1 f2 cNUMERAL c_0 f1 c==> cmarked_list f0 f5 f1 f2 c= cPOWER * part cnext_el ccore f0 f1 cSUC f6 cFST f4 cFST cPOWER * part cnext_el f1 cSUC f6 f4
+ |- ((((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))) = ((good_list L) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))
T c= c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c/\ cMEM f1 f2 c= cf_list f0 f1 cnext_el f2 f1 c==> cgood_list f0 c/\ cMEM f1 f2 c= cf_list f0 f1 cnext_el f2 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c==> c<= cSUC f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c==> c= cfind_face f0 f3 f6 c==> c= cnext_el f6 f3 f5 c==> c= cPOWER * part cnext_el ccore f0 f1 f4 cFST f5 cFST f7 c==> c= cPOWER * part cnext_el f1 f4 f5 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> cuniq cflatten f2 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f4 f3 f1 c==> ctransform_assumption_v2 f0 c==> c<= f4 cindexf f5 cl'y f0 f1 f3 f1 c==> c= f7 cPOWER * part cnext_el f6 f4 f5 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f6 c==> cmarked_list f0 f7 f1 f6 c/\ cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- ((\d. ((((POWER (next_el r)) n) w) = d)) d) |- ((((((POWER (next_el r)) n) w) = d) ==> (?d. ((((POWER (next_el r)) n) w) = d))) = (?d. ((((POWER (next_el r)) n) w) = d)))
T c==> * / c= cPOWER * part cnext_el f0 f1 f2 b0 f3 c= c==> c= cPOWER * part cnext_el f0 f1 f2 f3 c? / c= cPOWER * part cnext_el f0 f1 f2 b0 c? / c= cPOWER * part cnext_el f0 f1 f2 b0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> call * part cf_last f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f3 f7 f1 c==> ctransform_assumption_v2 f0 c==> c<= f3 cindexf f4 cl'y f0 f1 f7 f1 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f1 c= cf_list f0 f5 cnext_el f1 f5
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (good_list L), (good_list_nodes L), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST cPOWER * part cnext_el f2 f4 f5 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c<= cSUC f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> c= cfind_face f0 f3 f6 c==> c= cnext_el f6 f3 f5 c==> c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c= cPOWER * part cnext_el ccore f0 f2 cSUC f4 cFST f5 cFST cPOWER * part cnext_el f2 cSUC f4 f5
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq r) /\ (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ cuniq f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> ctransform_assumption_v2 f1 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) ==> (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c<= cSUC f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> c= cfind_face f0 f3 f6 c==> c= cnext_el f6 f3 f5 c==> c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST f7 c==> c= cPOWER * part cnext_el f2 f4 f5 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> cMEM cPOWER * part cnext_el f2 f4 f3 f2 c==> ctransform_assumption_v2 f0 c==> c<= f4 cindexf f5 cl'y f0 f2 f3 f2 c==> c= f7 cPOWER * part cnext_el f6 f4 f5 c/\ cMEM f7 f2 c= cf_list f0 f7 cnext_el f2 f7
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c==> ctransform_assumption_v2 f1 c==> c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
- |- ((real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((find_face L) x) = f), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cfind_face f0 f2 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f1 f2 c/\ c~ cfinal_list f0 f1 c/\ c<= f5 cindexf f6 cytrans f0 f4 f1 f2 cNUMERAL c_0 f1 c/\ c= cfind_face f0 f2 f3 c= cnext_el f3 f2 f6 c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f6 cFST cPOWER * part cnext_el f1 f5 f6 c==> c<= cSUC f5 cindexf f6 cytrans f0 f4 f1 f2 cNUMERAL c_0 f1 c==> cmarked_list f0 f4 f1 f2 c/\ c= cfind_face f0 f2 f3 c==> c= cnext_el f3 f2 f6 c==> c<= f5 cindexf f6 cytrans f0 f4 f1 f2 cNUMERAL c_0 f1 c= cPOWER * part cnext_el ccore f0 f1 cSUC f5 cFST f6 cFST cPOWER * part cnext_el f1 cSUC f5 f6
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c/\ c<= f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f1 f4 cFST f5 cFST cPOWER * part cnext_el f1 f4 f5 c==> c<= cSUC f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f2 f1 f3 c==> c= cfind_face f0 f3 f6 c==> c= cnext_el f6 f3 f5 c==> c<= f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c= cPOWER * part cnext_el ccore f0 f1 cSUC f4 cFST f5 cFST cPOWER * part cnext_el f1 cSUC f4 f5
- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))) |- ((good_list L) ==> ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w)))))))))))
T c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST cPOWER * part cnext_el f2 f4 f5 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c<= cSUC f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> c= cfind_face f0 f3 f6 c==> c= cnext_el f6 f3 f5 c==> c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c= cPOWER * part cnext_el ccore f0 f2 cSUC f4 cFST f5 cFST cPOWER * part cnext_el f2 cSUC f4 f5
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> ctransform_assumption_v2 f1 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (loop_list L)) N) /\ ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c/\ call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f3 f7 f1 c==> ctransform_assumption_v2 f0 c==> c<= f3 cindexf f4 cl'y f0 f1 f7 f1 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f1 c= cf_list f0 f5 cnext_el f1 f5
- (good_list L), (good_list_nodes L), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) ==> (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w)))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST cPOWER * part cnext_el f2 f4 f5 c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c<= cSUC f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> c= cfind_face f0 f3 f6 c==> c= cnext_el f6 f3 f5 c==> c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c= cPOWER * part cnext_el ccore f0 f2 cSUC f4 cFST f5 cFST cPOWER * part cnext_el f2 cSUC f4 f5
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c<= cSUC f2 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f1 c==> cmarked_list f0 f4 f1 f5 c==> c= cfind_face f0 f5 f6 c==> c= cnext_el f6 f5 f3 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f7 c==> c= cPOWER * part cnext_el f1 f2 f3 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f5 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f5 c==> cs_flag_list f0 f4 f1 f5 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> call * part cloop_list f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f5 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f5 f1 c==> c= f7 cPOWER * part cnext_el f6 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f5 clist_of_darts f0 c==> c= cf_list f0 f5 f3 c==> cMEM f3 f1 c==> cMEM cPOWER * part cnext_el f6 f2 f3 f1 c= cf_list f0 cPOWER * part cnext_el f6 f2 f3 cnext_el f1 cPOWER * part cnext_el f6 f2 f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cs_flag_list f0 f7 f1 f6 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((normal_list L) N) /\ (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((\d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) d)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 * / c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c<= cSUC f2 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f1 c==> cmarked_list f0 f4 f1 f5 c==> c= cfind_face f0 f5 f6 c==> c= cnext_el f6 f5 f3 c==> c<= f2 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f1 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f7 c==> c= cPOWER * part cnext_el f1 f2 f3 f7 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
- |- (((!n. (!w. (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) n) w) = (((POWER (next_el ((find_face L) x))) n) w)))))))))) ==> ((\n. (!w. (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) n) w) = (((POWER (next_el ((find_face L) x))) n) w)))))))))) n)) = ((\n. (!w. (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) n) w) = (((POWER (next_el ((find_face L) x))) n) w)))))))))) n))
T c= c==> ! ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b2 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 crtrans b2 b3 b4 b5 b6 c/\ c= cnext_el cfind_face b2 b5 b5 b1 c<= b0 cindexf b1 cytrans b2 b3 b4 b5 b6 crtrans b2 b3 b4 b5 b6 c= cPOWER * part cnext_el crtrans b2 b3 b4 b5 b6 b0 b1 cPOWER * part cnext_el cfind_face b2 b5 b0 b1 * / ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b2 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 crtrans b2 b3 b4 b5 b6 c/\ c= cnext_el cfind_face b2 b5 b5 b1 c<= b0 cindexf b1 cytrans b2 b3 b4 b5 b6 crtrans b2 b3 b4 b5 b6 c= cPOWER * part cnext_el crtrans b2 b3 b4 b5 b6 b0 b1 cPOWER * part cnext_el cfind_face b2 b5 b0 b1 f0 * / ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b2 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 crtrans b2 b3 b4 b5 b6 c/\ c= cnext_el cfind_face b2 b5 b5 b1 c<= b0 cindexf b1 cytrans b2 b3 b4 b5 b6 crtrans b2 b3 b4 b5 b6 c= cPOWER * part cnext_el crtrans b2 b3 b4 b5 b6 b0 b1 cPOWER * part cnext_el cfind_face b2 b5 b0 b1 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ ((((next_el f) x) = w) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cfind_face f0 f2 f3 c==> c<= cSUC f4 cindexf f5 cytrans f0 f6 f1 f2 cNUMERAL c_0 f1 c==> cmarked_list f0 f6 f1 f2 c/\ c= cfind_face f0 f2 f3 c==> c= cnext_el f3 f2 f5 c==> c= cPOWER * part cnext_el ccore f0 f1 f4 cFST f5 cFST f7 c==> c= cPOWER * part cnext_el f1 f4 f5 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cs_flag_list f0 f6 f1 f2 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f4 f2 f1 c==> ctransform_assumption_v2 f0 c==> c<= f4 cindexf f5 cl'y f0 f1 f2 f1 c==> c= f7 cPOWER * part cnext_el f3 f4 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM f5 f1 c==> cMEM cPOWER * part cnext_el f3 f4 f5 f1 c= cf_list f0 cPOWER * part cnext_el f3 f4 f5 cnext_el f1 cPOWER * part cnext_el f3 f4 f5
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f3 f7 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f3 cindexf f4 cl'y f0 f1 f7 f1 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f1 c= cf_list f0 f5 cnext_el f1 f5
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) /\ (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> call * part cf_last f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c/\ call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f3 f7 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f3 cindexf f4 cl'y f0 f1 f7 f1 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f1 c= cf_list f0 f5 cnext_el f1 f5
- |- (((((POWER (next_el r)) n) w) = d) = ((\d. ((((POWER (next_el r)) n) w) = d)) d))
T c= c= cPOWER * part cnext_el f0 f1 f2 f3 * / c= cPOWER * part cnext_el f0 f1 f2 b0 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c<= cSUC f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c==> c= cfind_face f0 f3 f6 c==> c= cnext_el f6 f3 f5 c==> c= cPOWER * part cnext_el ccore f0 f1 f4 cFST f5 cFST f7 c==> c= cPOWER * part cnext_el f1 f4 f5 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> cuniq cflatten f2 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f4 f3 f1 c==> ctransform_assumption_v2 f0 c==> c<= f4 cindexf f5 cl'y f0 f1 f3 f1 c==> c= f7 cPOWER * part cnext_el f6 f4 f5 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) /\ (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f6 f1 f3 c/\ c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f4 cFST f7 c==> c= cPOWER * part cnext_el f1 f5 f4 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f5 f3 f1 c==> ctransform_assumption_v2 f0 c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c==> c= f7 cPOWER * part cnext_el f2 f5 f4 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((\d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) d)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 * / c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 f2
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c/\ cuniq cflatten f2 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f3 f7 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f3 cindexf f4 cl'y f0 f1 f7 f1 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f1 c= cf_list f0 f5 cnext_el f1 f5
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c<= cSUC f2 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f1 c==> cmarked_list f0 f4 f1 f5 c/\ c<= cSUC f2 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f1 c==> c= cfind_face f0 f5 f6 c==> c= cnext_el f6 f5 f3 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f7 c==> c= cPOWER * part cnext_el f1 f2 f3 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f5 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f5 c==> cs_flag_list f0 f4 f1 f5 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> call * part cloop_list f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f5 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f5 f1 c==> c= f7 cPOWER * part cnext_el f6 f2 f3 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
- ((((s_flag_list L) N) r) x) |- (((((s_flag_list L) N) r) x) = T)
T c==> cs_flag_list f0 f1 f2 f3 c= cs_flag_list f0 f1 f2 f3 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c/\ c<= f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f1 f4 cFST f5 cFST cPOWER * part cnext_el f1 f4 f5 c==> c<= cSUC f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f2 f1 f3 c/\ c<= cSUC f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c==> c= cfind_face f0 f3 f6 c==> c= cnext_el f6 f3 f5 c==> c<= f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c= cPOWER * part cnext_el ccore f0 f1 cSUC f4 cFST f5 cFST cPOWER * part cnext_el f1 cSUC f4 f5
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) /\ (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> call * part cf_last f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c/\ call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f3 f7 f1 c==> ctransform_assumption_v2 f0 c==> c<= f3 cindexf f4 cl'y f0 f1 f7 f1 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f1 c= cf_list f0 f5 cnext_el f1 f5
- (((real_ge (real_of_int _11143618)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143619)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> call * part cf_last f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f3 f7 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f3 cindexf f4 cl'y f0 f1 f7 f1 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f1 c= cf_list f0 f5 cnext_el f1 f5
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- |- (((((POWER (next_el r)) n) w) = d) ==> (?d. ((((POWER (next_el r)) n) w) = d)))
T c==> c= cPOWER * part cnext_el f0 f1 f2 f3 c? / c= cPOWER * part cnext_el f0 f1 f2 b0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- |- ((?d. ((((POWER (next_el r)) n) w) = d)) ==> (?d. ((((POWER (next_el r)) n) w) = d)))
T c==> c? / c= cPOWER * part cnext_el f0 f1 f2 b0 c? / c= cPOWER * part cnext_el f0 f1 f2 b0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f6 c==> cmarked_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c==> cuniq f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> ctransform_assumption_v2 f1 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
- (good_list L), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w))))))))))
T c==> cgood_list f0 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f5 c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST cPOWER * part cnext_el f2 f4 f5 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c<= cSUC f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> c= cfind_face f0 f3 f6 c==> c= cnext_el f6 f3 f5 c==> c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c= cPOWER * part cnext_el ccore f0 f2 cSUC f4 cFST f5 cFST cPOWER * part cnext_el f2 cSUC f4 f5
- ((\d. ((((POWER (next_el r)) n) w) = d)) d) |- (((\d. ((((POWER (next_el r)) n) w) = d)) d) /\ (?d. ((((POWER (next_el r)) n) w) = d)))
T c==> * / c= cPOWER * part cnext_el f0 f1 f2 b0 f3 c/\ * / c= cPOWER * part cnext_el f0 f1 f2 b0 f3 c? / c= cPOWER * part cnext_el f0 f1 f2 b0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) /\ (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f6 f1 f3 c/\ c= cnext_el f2 f3 f4 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f4 cFST f7 c==> c= cPOWER * part cnext_el f1 f5 f4 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f3 c==> cs_flag_list f0 f6 f1 f3 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f5 f3 f1 c==> ctransform_assumption_v2 f0 c==> c<= f5 cindexf f4 cl'y f0 f1 f3 f1 c==> c= f7 cPOWER * part cnext_el f2 f5 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> cMEM f4 f1 c==> cMEM cPOWER * part cnext_el f2 f5 f4 f1 c= cf_list f0 cPOWER * part cnext_el f2 f5 f4 cnext_el f1 cPOWER * part cnext_el f2 f5 f4
- (((real_ge (real_of_int _11143618)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143619)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (good_list L), (good_list_nodes L) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c<= cSUC f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> c= cfind_face f0 f3 f6 c==> c= cnext_el f6 f3 f5 c==> c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST f7 c==> c= cPOWER * part cnext_el f2 f4 f5 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> cMEM cPOWER * part cnext_el f2 f4 f3 f2 c==> ctransform_assumption_v2 f0 c==> c<= f4 cindexf f5 cl'y f0 f2 f3 f2 c==> c= f7 cPOWER * part cnext_el f6 f4 f5 c/\ cMEM f7 f2 c= cf_list f0 f7 cnext_el f2 f7
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c/\ cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((transform_assumption_v2 L) /\ ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ ctransform_assumption_v2 f1 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f6 c==> cmarked_list f0 f7 f1 f6 c/\ cs_flag_list f0 f7 f1 f6 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c==> c<= cSUC f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c==> c= cfind_face f0 f3 f6 c==> c= cnext_el f6 f3 f5 c==> c<= f4 cindexf f5 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 c==> c= cPOWER * part cnext_el ccore f0 f1 f4 cFST f5 cFST f7 c==> c= cPOWER * part cnext_el f1 f4 f5 f7 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
- |- ((\n. (!w. (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) n) w) = (((POWER (next_el ((find_face L) x))) n) w)))))))))) n)
T * / ! ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b2 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 crtrans b2 b3 b4 b5 b6 c/\ c= cnext_el cfind_face b2 b5 b5 b1 c<= b0 cindexf b1 cytrans b2 b3 b4 b5 b6 crtrans b2 b3 b4 b5 b6 c= cPOWER * part cnext_el crtrans b2 b3 b4 b5 b6 b0 b1 cPOWER * part cnext_el cfind_face b2 b5 b0 b1 f0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c<= cSUC f5 cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f6 f1 f3 c==> c<= f5 cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f1 c==> c= cPOWER * part cnext_el ccore f0 f1 f5 cFST f4 cFST f7 c==> c= cPOWER * part cnext_el f1 f5 f4 f7 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((MEM w) r) ==> (((MEM (((POWER (next_el f)) n) w)) r) ==> (((f_list L) (((POWER (next_el f)) n) w)) = ((next_el r) (((POWER (next_el f)) n) w)))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cfind_face f0 f2 f3 c==> c<= cSUC f4 cindexf f5 cytrans f0 f6 f1 f2 cNUMERAL c_0 f1 c==> cmarked_list f0 f6 f1 f2 c==> c= cnext_el f3 f2 f5 c==> c= cPOWER * part cnext_el ccore f0 f1 f4 cFST f5 cFST f7 c==> c= cPOWER * part cnext_el f1 f4 f5 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cs_flag_list f0 f6 f1 f2 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f4 f2 f1 c==> ctransform_assumption_v2 f0 c==> c<= f4 cindexf f5 cl'y f0 f1 f2 f1 c==> c= f7 cPOWER * part cnext_el f3 f4 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f2 clist_of_darts f0 c==> c= cf_list f0 f2 f5 c==> cMEM f5 f1 c==> cMEM cPOWER * part cnext_el f3 f4 f5 f1 c= cf_list f0 cPOWER * part cnext_el f3 f4 f5 cnext_el f1 cPOWER * part cnext_el f3 f4 f5
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cfind_face f0 f2 f3 c==> c<= cSUC f4 cindexf f5 cytrans f0 f6 f1 f2 cNUMERAL c_0 f1 c==> cmarked_list f0 f6 f1 f2 c==> c= cnext_el f3 f2 f5 c==> c= cPOWER * part cnext_el ccore f0 f1 f4 cFST f5 cFST f7 c==> c= cPOWER * part cnext_el f1 f4 f5 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f2 c==> cs_flag_list f0 f6 f1 f2 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f4 f2 f1 c==> ctransform_assumption_v2 f0 c==> c<= f4 cindexf f5 cl'y f0 f1 f2 f1 c==> c= f7 cPOWER * part cnext_el f3 f4 f5 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c/\ call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f3 f7 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f3 cindexf f4 cl'y f0 f1 f7 f1 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f1 c= cf_list f0 f5 cnext_el f1 f5
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) ==> (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c<= cSUC f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> c= cfind_face f0 f3 f6 c==> c= cnext_el f6 f3 f5 c==> c<= f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST f7 c==> c= cPOWER * part cnext_el f2 f4 f5 f7 c/\ cMEM f7 f2 c= cf_list f0 f7 cnext_el f2 f7
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> c= cPOWER * part cnext_el f1 f3 f4 f5 c==> c= cfind_face f0 f7 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> c<= cSUC f3 cindexf f4 cytrans f0 f2 f1 f7 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f7 c==> cmarked_list f0 f2 f1 f7 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f3 f7 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f3 cindexf f4 cl'y f0 f1 f7 f1 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f1 c= cf_list f0 f5 cnext_el f1 f5
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\w. (!L. (!N. (!r. (!x. (!i. (((transform_assumption_v2 L) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) i))) /\ ((((next_el ((find_face L) x)) x) = w) /\ (n <= (((indexf w) (((((ytrans L) N) r) x) i)) (((((rtrans L) N) r) x) i))))))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) i))) n) w) = (((POWER (next_el ((find_face L) x))) n) w))))))))) w)
T * / ! ! ! ! ! c==> c/\ ctransform_assumption_v2 b1 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 crtrans b1 b2 b3 b4 b5 c/\ c= cnext_el cfind_face b1 b4 b4 b0 c<= f0 cindexf b0 cytrans b1 b2 b3 b4 b5 crtrans b1 b2 b3 b4 b5 c= cPOWER * part cnext_el crtrans b1 b2 b3 b4 b5 f0 b0 cPOWER * part cnext_el cfind_face b1 b4 f0 b0 f1
- (?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))) |- ((?x. ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))) /\ ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))))) ==> (((next_el ((core L) r)) (FST d)) = (FST ((next_el r) d)))))
T c==> c? / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ cMEM f3 f2 c= cf_list f0 f3 cnext_el f2 f3 c/\ c? / c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ cMEM f3 f2 c= cf_list f0 f3 cnext_el f2 f3 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ cMEM f3 b2 c= cf_list b0 f3 cnext_el b2 f3 c= cnext_el ccore b0 b2 cFST f3 cFST cnext_el b2 f3 c= cnext_el ccore f0 f2 cFST f3 cFST cnext_el f2 f3
- (((real_ge (real_of_int _11143618)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143619)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c==> cuniq f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> ctransform_assumption_v2 f1 c==> c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _11143618)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143619)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c==> c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cfind_face f0 f6 f5 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- |- (((\x'. (f x')) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c<= cSUC f2 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f1 c==> cmarked_list f0 f4 f1 f5 c/\ c<= cSUC f2 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f1 c==> c= cfind_face f0 f5 f6 c==> c= cnext_el f6 f5 f3 c==> c<= f2 cindexf f3 cytrans f0 f4 f1 f5 cNUMERAL c_0 f1 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f7 c==> c= cPOWER * part cnext_el f1 f2 f3 f7 c/\ cMEM f7 f1 c= cf_list f0 f7 cnext_el f1 f7
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (good_list L) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> (((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((find_face L) x) = f) ==> ((((next_el f) x) = w) ==> (((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)) ==> (((((POWER (next_el r)) n) w) = d) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c<= cSUC f4 cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> c= cfind_face f0 f3 f6 c==> c= cnext_el f6 f3 f5 c==> c= cPOWER * part cnext_el ccore f0 f2 f4 cFST f5 cFST f7 c==> c= cPOWER * part cnext_el f2 f4 f5 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> cMEM cPOWER * part cnext_el f2 f4 f3 f2 c==> ctransform_assumption_v2 f0 c==> c<= f4 cindexf f5 cl'y f0 f2 f3 f2 c==> c= f7 cPOWER * part cnext_el f6 f4 f5 c/\ cMEM f7 f2 c= cf_list f0 f7 cnext_el f2 f7
- (((real_ge (real_of_int _11143618)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _11143619)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143618))) ((real_add (real_of_int _11143619)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _11143618)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _11143619))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_of_int _11143619)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((((POWER (next_el r)) n) w) = d) /\ ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c/\ c= cPOWER * part cnext_el f1 f2 f3 f4 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- ((all (f_last L)) N) |- (((all (f_last L)) N) = T)
T c==> call * part cf_last f0 f1 c= call * part cf_last f0 f1 cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), (transform_assumption_v2 L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM (((POWER (next_el r)) n) x)) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> ctransform_assumption_v2 f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c= f5 cPOWER * part cnext_el f6 f3 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((((ntrans L) N) r) x) (NUMERAL _0)) = N)
T c= cntrans f0 f1 f2 f3 cNUMERAL c_0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f6 c==> cmarked_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c/\ cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> ((n <= (((indexf w) (((l'y L) r) x)) r)) ==> ((d = (((POWER (next_el f)) n) w)) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c==> c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))))) ==> ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST (((POWER (next_el r)) n) w)))), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) /\ ((n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> ((((POWER (next_el ((core L) r))) (SUC n)) (FST w)) = (FST (((POWER (next_el r)) (SUC n)) w)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cfind_face f0 f3 f2 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f5 f1 f3 c/\ c~ cfinal_list f0 f1 c/\ c<= f6 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c/\ c= cfind_face f0 f3 f2 c= cnext_el f2 f3 f4 c= cPOWER * part cnext_el ccore f0 f1 f6 cFST f4 cFST cPOWER * part cnext_el f1 f6 f4 c==> c<= cSUC f6 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f5 f1 f3 c/\ c= cnext_el f2 f3 f4 c==> c<= f6 cindexf f4 cytrans f0 f5 f1 f3 cNUMERAL c_0 f1 c= cPOWER * part cnext_el ccore f0 f1 cSUC f6 cFST f4 cFST cPOWER * part cnext_el f1 cSUC f6 f4
- |- ((((((ztrans L) N) r) x) (NUMERAL _0)) = ((((l'z L) N) r) x))
T c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cl'z f0 f1 f2 f3
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cMEM f6 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cPOWER * part cnext_el ccore f0 f1 f2 cFST f3 cFST f4 c==> c= cnext_el f5 f6 f3 c==> c= cPOWER * part cnext_el f1 f2 f3 f4 c==> c= cfind_face f0 f6 f5 c==> c<= f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> c<= cSUC f2 cindexf f3 cytrans f0 f7 f1 f6 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f6 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> cMEM cPOWER * part cnext_el f1 f2 f6 f1 c==> ctransform_assumption_v2 f0 c==> c==> c<= f2 cindexf f3 cl'y f0 f1 f6 f1 c= f4 cPOWER * part cnext_el f5 f2 f3 c/\ cMEM f4 f1 c= cf_list f0 f4 cnext_el f1 f4
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (good_list_nodes L), ((((POWER (next_el ((core L) r))) n) (FST w)) = (FST d)), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), ((((POWER (next_el r)) n) w) = d), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), (n <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((SUC n) <= (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (((POWER (next_el r)) n) x)) r) ==> ((transform_assumption_v2 L) ==> (((n <= (((indexf w) (((l'y L) r) x)) r)) ==> (d = (((POWER (next_el f)) n) w))) ==> (((MEM d) r) /\ (((f_list L) d) = ((next_el r) d))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cPOWER * part cnext_el ccore f1 f2 f3 cFST f4 cFST f5 c==> c= cnext_el f6 f7 f4 c==> c= cnext_el f2 f7 cf_list f1 f7 c==> c= cPOWER * part cnext_el f2 f3 f4 f5 c==> c= cfind_face f1 f7 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c<= f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> c<= cSUC f3 cindexf f4 cytrans f1 f0 f2 f7 cNUMERAL c_0 f2 c==> cMEM f7 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f7 c==> cmarked_list f1 f0 f2 f7 c==> cMEM cPOWER * part cnext_el f2 f3 f7 f2 c==> ctransform_assumption_v2 f1 c==> c==> c<= f3 cindexf f4 cl'y f1 f2 f7 f2 c= f5 cPOWER * part cnext_el f6 f3 f4 c/\ cMEM f5 f2 c= cf_list f1 f5 cnext_el f2 f5
- ((((POWER (next_el r)) n) w) = d) |- ((\d. ((((POWER (next_el r)) n) w) = d)) d)
T c==> c= cPOWER * part cnext_el f0 f1 f2 f3 * / c= cPOWER * part cnext_el f0 f1 f2 b0 f3
