N Local_lemmas.FINITE_CARD1_IMP_SINGLETON
C |- (((FINITE S) /\ ((CARD S) = (NUMERAL (BIT1 _0)))) ==> (?x. (S = (x INSERT EMPTY))))
T c==> c/\ cFINITE f0 c= cCARD f0 cNUMERAL cBIT1 c_0 c? / c= f0 * * part cINSERT b0 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D Oxl_2012.CARD_EMPTY
A |- ((CARD EMPTY) = (NUMERAL _0))
T c= cCARD part cEMPTY cNUMERAL c_0
D Hypermap.set_one_point
A |- (!s. (!x. (((FINITE s) /\ (((CARD s) = (NUMERAL (BIT1 _0))) /\ (x IN s))) ==> (s = (x INSERT EMPTY)))))
T c==> c/\ cFINITE f0 c/\ c= cCARD f0 cNUMERAL cBIT1 c_0 cIN f1 f0 c= f0 * * part cINSERT f1 part cEMPTY
D Counting_spheres.EMPTY_NOT_EXISTS_IN
A |- ((a = EMPTY) = (~ (?x. (x IN a))))
T c= c= f0 part cEMPTY c~ c? / cIN b0 f0
+ (FINITE S) |- ((FINITE S) = T)
T c==> cFINITE f0 c= cFINITE f0 cT
- (~ (S = EMPTY)) |- ((~ (S = EMPTY)) /\ (((FINITE S) /\ ((CARD S) = (NUMERAL (BIT1 _0)))) ==> (?x. (S = (x INSERT EMPTY)))))
T c==> c~ c= f0 part cEMPTY c/\ c~ c= f0 part cEMPTY c==> c/\ cFINITE f0 c= cCARD f0 cNUMERAL cBIT1 c_0 c? / c= f0 * * part cINSERT b0 part cEMPTY
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (?x. (x IN S)) |- ((?x. (x IN S)) /\ (((FINITE S) /\ ((CARD S) = (NUMERAL (BIT1 _0)))) ==> (?x. (S = (x INSERT EMPTY)))))
T c==> c? / cIN b0 f0 c/\ c? / cIN b0 f0 c==> c/\ cFINITE f0 c= cCARD f0 cNUMERAL cBIT1 c_0 c? / c= f0 * * part cINSERT b0 part cEMPTY
- |- ((?x. t) = t)
T c= c? / f0 f0
+ (x IN S) |- ((x IN S) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
+ ((\x. (x IN S)) x) |- (x IN S)
T c==> * / cIN b0 f0 f1 cIN f1 f0
+ ((\x. (x IN S)) x) |- (((x IN S) ==> (((FINITE S) /\ ((CARD S) = (NUMERAL (BIT1 _0)))) ==> (?x. (S = (x INSERT EMPTY))))) = (((FINITE S) /\ ((CARD S) = (NUMERAL (BIT1 _0)))) ==> (?x. (S = (x INSERT EMPTY)))))
T c==> * / cIN b0 f0 f1 c= c==> cIN f1 f0 c==> c/\ cFINITE f0 c= cCARD f0 cNUMERAL cBIT1 c_0 c? / c= f0 * * part cINSERT b0 part cEMPTY c==> c/\ cFINITE f0 c= cCARD f0 cNUMERAL cBIT1 c_0 c? / c= f0 * * part cINSERT b0 part cEMPTY
+ ((~ (S = EMPTY)) ==> (((FINITE S) /\ ((CARD S) = (NUMERAL (BIT1 _0)))) ==> (?x. (S = (x INSERT EMPTY))))), ((S = EMPTY) ==> (((FINITE S) /\ ((CARD S) = (NUMERAL (BIT1 _0)))) ==> (?x. (S = (x INSERT EMPTY))))) |- (((FINITE S) /\ ((CARD S) = (NUMERAL (BIT1 _0)))) ==> (?x. (S = (x INSERT EMPTY))))
T c==> c==> c~ c= f0 part cEMPTY c==> c/\ cFINITE f0 c= cCARD f0 cNUMERAL cBIT1 c_0 c? / c= f0 * * part cINSERT b0 part cEMPTY c==> c==> c= f0 part cEMPTY c==> c/\ cFINITE f0 c= cCARD f0 cNUMERAL cBIT1 c_0 c? / c= f0 * * part cINSERT b0 part cEMPTY c==> c/\ cFINITE f0 c= cCARD f0 cNUMERAL cBIT1 c_0 c? / c= f0 * * part cINSERT b0 part cEMPTY
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
