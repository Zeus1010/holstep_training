N VSUM_DIFFS
C |- (!m. (!n. (((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))))
T c= cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_sub
A |- (!x. (!y. (((vector_sub x) y) = (lambdai. ((real_sub (x $ i)) (y $ i))))))
T c= cvector_sub f0 f1 clambda / creal_sub c$ f0 b0 c$ f1 b0
D VECTOR_ADD_LID
A |- (!x. (((vector_add (vec (NUMERAL _0))) x) = x))
T c= cvector_add cvec cNUMERAL c_0 f0 f0
D VSUM_CLAUSES_NUMSEG
A |- ((!m. (((vsum (m .. (NUMERAL _0))) f) = (((COND (m = (NUMERAL _0))) (f (NUMERAL _0))) (vec (NUMERAL _0))))) /\ (!m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))))
T c/\ ! c= cvsum * * part c.. b0 cNUMERAL c_0 f0 cCOND c= b0 cNUMERAL c_0 * f0 cNUMERAL c_0 cvec cNUMERAL c_0 ! ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0
+ |- ((((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))) ==> ((((m = (SUC n)) \/ (m <= n)) ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ ((m = (SUC n)) \/ (m <= n))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (SUC n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND ((m = (SUC n)) \/ (m <= n))) t') e'))))) = ((((m = (SUC n)) \/ (m <= n)) ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ ((m = (SUC n)) \/ (m <= n))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (SUC n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND ((m = (SUC n)) \/ (m <= n))) t') e')))))
T c= c==> c= c<= f0 cSUC f1 c\/ c= f0 cSUC f1 c<= f0 f1 c==> c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvec cNUMERAL c_0 f4 c= cCOND c<= f0 cSUC f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 f3 f4 c==> c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvec cNUMERAL c_0 f4 c= cCOND c<= f0 cSUC f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 f3 f4
+ |- ((m = (SUC n)) \/ (~ (m = (SUC n))))
T c\/ c= f0 cSUC f1 c~ c= f0 cSUC f1
+ (((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) |- ((((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) /\ (((vsum (m .. (SUC n))) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= (SUC n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c==> c= cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cSUC f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cCOND c<= f0 cSUC f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((((m = (SUC n)) \/ (m <= n)) ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ ((m = (SUC n)) \/ (m <= n))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (SUC n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND ((m = (SUC n)) \/ (m <= n))) t') e'))))
T c==> c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvec cNUMERAL c_0 f4 c= cCOND c<= f0 cSUC f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 f3 f4
+ (((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) |- (((m = (SUC n)) \/ (m <= n)) ==> (((vector_add ((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (SUC n))) = ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))))
T c==> c= cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_add cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 * / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cSUC f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0
+ |- (((m <= (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (NUMERAL _0))) ((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))
T c==> c= c<= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cvector_sub * f2 f0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 f4 c= cCOND c<= f0 cNUMERAL c_0 cvector_sub * f2 f0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 f3 f4
- (~ ((m = (SUC n)) \/ (m <= n))) |- (((m = (SUC n)) \/ (m <= n)) = F)
T c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= c\/ c= f0 cSUC f1 c<= f0 f1 cF
- (~ (m = (NUMERAL _0))) |- (((~ ((NUMERAL _0) = m)) ==> (((NUMERAL _0) = m) = F)) = (((NUMERAL _0) = m) = F))
T c==> c~ c= f0 cNUMERAL c_0 c= c==> c~ c= cNUMERAL c_0 f0 c= c= cNUMERAL c_0 f0 cF c= c= cNUMERAL c_0 f0 cF
+ |- ((!n. ((((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ==> (((vsum (m .. (SUC n))) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= (SUC n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))) = ((((vsum (m .. (NUMERAL _0))) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= (NUMERAL _0))) ((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) /\ (!n. ((((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ==> (((vsum (m .. (SUC n))) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= (SUC n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))))))
T c= ! c==> c= cvsum * * part c.. f0 b0 / cvector_sub * f1 b1 * f1 c+ b1 cNUMERAL cBIT1 c_0 cCOND c<= f0 b0 cvector_sub * f1 f0 * f1 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cSUC b0 / cvector_sub * f1 b1 * f1 c+ b1 cNUMERAL cBIT1 c_0 cCOND c<= f0 cSUC b0 cvector_sub * f1 f0 * f1 c+ cSUC b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c= cvsum * * part c.. f0 cNUMERAL c_0 / cvector_sub * f1 b0 * f1 c+ b0 cNUMERAL cBIT1 c_0 cCOND c<= f0 cNUMERAL c_0 cvector_sub * f1 f0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 ! c==> c= cvsum * * part c.. f0 b0 / cvector_sub * f1 b1 * f1 c+ b1 cNUMERAL cBIT1 c_0 cCOND c<= f0 b0 cvector_sub * f1 f0 * f1 c+ b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cSUC b0 / cvector_sub * f1 b1 * f1 c+ b1 cNUMERAL cBIT1 c_0 cCOND c<= f0 cSUC b0 cvector_sub * f1 f0 * f1 c+ cSUC b0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ (m = (SUC n)) |- (T = ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c==> c= f0 cSUC f1 c= cT c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
- |- ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))
T c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- (((!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))) ==> ((\n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))) n)) = ((\n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))) n))
T c= c==> ! c= cvsum * * part c.. f0 cSUC b0 f1 cCOND c<= f0 cSUC b0 cvector_add cvsum * * part c.. f0 b0 f1 * f1 cSUC b0 cvsum * * part c.. f0 b0 f1 * / c= cvsum * * part c.. f0 cSUC b0 f1 cCOND c<= f0 cSUC b0 cvector_add cvsum * * part c.. f0 b0 f1 * f1 cSUC b0 cvsum * * part c.. f0 b0 f1 f2 * / c= cvsum * * part c.. f0 cSUC b0 f1 cCOND c<= f0 cSUC b0 cvector_add cvsum * * part c.. f0 b0 f1 * f1 cSUC b0 cvsum * * part c.. f0 b0 f1 f2
+ |- ((~ ((m = (SUC n)) \/ (m <= n))) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
- |- (((((m = (SUC n)) \/ (m <= n)) ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) ==> (((~ ((m = (SUC n)) \/ (m <= n))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) e')))) = (((~ ((m = (SUC n)) \/ (m <= n))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) e'))))
T c= c==> c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvec cNUMERAL c_0 f3 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvec cNUMERAL c_0 f3 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3
- |- ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND g') t') e')))))
T c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 f2 c==> c==> f2 c= cvector_add cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f3 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f2 c= cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f5 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f3 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f4 f5
+ |- ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n)))
T c= c<= f0 cSUC f1 c\/ c= f0 cSUC f1 c<= f0 f1
+ |- ((\m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))) m)
T * / ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0 f1
+ |- ((((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))) ==> ((((m = (SUC n)) \/ (m <= n)) ==> (((vector_add ((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (SUC n))) = t')) ==> (((~ ((m = (SUC n)) \/ (m <= n))) ==> (((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = e')) ==> ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (SUC n)))) ((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))))) = (((COND ((m = (SUC n)) \/ (m <= n))) t') e'))))) = ((((m = (SUC n)) \/ (m <= n)) ==> (((vector_add ((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (SUC n))) = t')) ==> (((~ ((m = (SUC n)) \/ (m <= n))) ==> (((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = e')) ==> ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (SUC n)))) ((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))))) = (((COND ((m = (SUC n)) \/ (m <= n))) t') e')))))
T c= c==> c= c<= f0 cSUC f1 c\/ c= f0 cSUC f1 c<= f0 f1 c==> c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_add cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 * / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cSUC f1 f3 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 f4 c= cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 * / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cSUC f1 cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 f3 f4 c==> c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_add cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 * / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cSUC f1 f3 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 f4 c= cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 * / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cSUC f1 cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 f3 f4
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vector_sub (f m)) (f (SUC n)))) ((vector_sub (f (SUC n))) (f (SUC (SUC n))))) $ i) = (((vector_sub (f m)) (f (SUC (SUC n)))) $ i)))) = (((vector_add ((vector_sub (f m)) (f (SUC n)))) ((vector_sub (f (SUC n))) (f (SUC (SUC n))))) = ((vector_sub (f m)) (f (SUC (SUC n))))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add cvector_sub * f0 f1 * f0 cSUC f2 cvector_sub * f0 cSUC f2 * f0 cSUC cSUC f2 b0 c$ cvector_sub * f0 f1 * f0 cSUC cSUC f2 b0 c= cvector_add cvector_sub * f0 f1 * f0 cSUC f2 cvector_sub * f0 cSUC f2 * f0 cSUC cSUC f2 cvector_sub * f0 f1 * f0 cSUC cSUC f2
+ |- (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e')))))
T c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cNUMERAL c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 f4 c= cCOND c= f0 cNUMERAL c_0 * / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND f1 f3 f4
+ |- (((vector_add (((COND T) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = (((COND T) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))
T c= cvector_add cCOND cT cvector_sub * f0 f1 * f0 c+ f2 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f0 cSUC f2 * f0 c+ cSUC f2 cNUMERAL cBIT1 c_0 cCOND cT cvector_sub * f0 f1 * f0 c+ cSUC f2 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((((COND (m = (NUMERAL _0))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))
T c= cCOND c= f0 cNUMERAL c_0 * / cvector_sub * f1 b0 * f1 c+ b0 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157200)) /\ ((real_le ((real_add (real_of_int _157200)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157200))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157200)) /\ ((real_le ((real_add (real_of_int _157200)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157200))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157200)) /\ ((real_le ((real_add (real_of_int _157200)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157200)))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
+ (m = (SUC n)) |- ((m = (SUC n)) /\ ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c==> c= f0 cSUC f1 c/\ c= f0 cSUC f1 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ (~ ((m = (SUC n)) \/ (m <= n))), (((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) |- ((~ ((m = (SUC n)) \/ (m <= n))) /\ (((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c==> c= cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c/\ c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((m = (SUC n)) \/ (m <= n)) |- (((m = (SUC n)) \/ (m <= n)) = T)
T c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= c\/ c= f0 cSUC f1 c<= f0 f1 cT
+ |- (((~ ((SUC n) <= n)) ==> (((SUC n) <= n) = F)) = (((SUC n) <= n) = F))
T c= c==> c~ c<= cSUC f0 f0 c= c<= cSUC f0 f0 cF c= c<= cSUC f0 f0 cF
+ |- ((((m <= n) = (m <= n)) ==> (((m <= n) ==> (((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ (m <= n)) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m <= n)) t') e'))))) = (((m <= n) ==> (((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ (m <= n)) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m <= n)) t') e')))))
T c= c==> c= c<= f0 f1 c<= f0 f1 c==> c==> c<= f0 f1 c= cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c<= f0 f1 c= cvec cNUMERAL c_0 f4 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c<= f0 f1 f3 f4 c==> c==> c<= f0 f1 c= cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c<= f0 f1 c= cvec cNUMERAL c_0 f4 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c<= f0 f1 f3 f4
+ |- ((((COND (m <= (NUMERAL _0))) ((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))
T c= cCOND c<= f0 cNUMERAL c_0 cvector_sub * f1 f0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ (~ (m = (SUC n))) |- ((m = (SUC n)) = F)
T c==> c~ c= f0 cSUC f1 c= c= f0 cSUC f1 cF
+ |- (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f)))
T c= cvsum * * part c.. f0 cSUC f1 f2 cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 f2 * f2 cSUC f1 cvsum * * part c.. f0 f1 f2
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\t. (t \/ (~ t))) (m = (SUC n)))
T * / c\/ b0 c~ b0 c= f0 cSUC f1
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
- |- ((((~ ((m = (SUC n)) \/ (m <= n))) ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))) = ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))))
T c= c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- (((!e'. (((m <= (SUC n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (SUC n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. (((m <= (SUC n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (SUC n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. (((m <= (SUC n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (SUC n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c<= f0 cSUC f1 f2 c==> c==> f2 c= cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b0 c= cCOND c<= f0 cSUC f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f4 b0 * / c==> c= c<= f0 cSUC f1 f2 c==> c==> f2 c= cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b0 c= cCOND c<= f0 cSUC f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f4 b0 f5 * / c==> c= c<= f0 cSUC f1 f2 c==> c==> f2 c= cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b0 c= cCOND c<= f0 cSUC f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f4 b0 f5
- |- ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))
T c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 f2 c==> c==> f2 c= cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f2 c= cvec cNUMERAL c_0 f5 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f4 f5
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _157200) ==> (~ ((int_le ((int_add _157200) (int_of_num (NUMERAL (BIT1 _0))))) _157200)))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c~ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!e'. (((m <= (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (NUMERAL _0))) ((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. (((m <= (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (NUMERAL _0))) ((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. (((m <= (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (NUMERAL _0))) ((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c<= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cvector_sub * f2 f0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c<= f0 cNUMERAL c_0 cvector_sub * f2 f0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 f3 b0 * / c==> c= c<= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cvector_sub * f2 f0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c<= f0 cNUMERAL c_0 cvector_sub * f2 f0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 f3 b0 f4 * / c==> c= c<= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cvector_sub * f2 f0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c<= f0 cNUMERAL c_0 cvector_sub * f2 f0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 f3 b0 f4
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ |- ((m = (NUMERAL _0)) ==> (((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c= f0 cNUMERAL c_0 c= cvector_sub * f1 f0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- ((!i. t) = t)
T c= ! f0 f0
+ |- (((vsum (m .. (NUMERAL _0))) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= (NUMERAL _0))) ((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))
T c= cvsum * * part c.. f0 cNUMERAL c_0 / cvector_sub * f1 b0 * f1 c+ b0 cNUMERAL cBIT1 c_0 cCOND c<= f0 cNUMERAL c_0 cvector_sub * f1 f0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ (((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) |- (((((m = (SUC n)) \/ (m <= n)) ==> (((vector_add ((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (SUC n))) = ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))))) ==> (((~ ((m = (SUC n)) \/ (m <= n))) ==> (((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = e')) ==> ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (SUC n)))) ((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) e')))) = (((~ ((m = (SUC n)) \/ (m <= n))) ==> (((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = e')) ==> ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (SUC n)))) ((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) e'))))
T c==> c= cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= c==> c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_add cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 * / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cSUC f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 f3 c= cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 * / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cSUC f1 cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 f3 c= cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 * / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cSUC f1 cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3
+ |- (((!m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))) ==> ((\m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))) m)) = ((\m. (!n. (((vsum (m .. (SUC n))) f) = (((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) f)) (f (SUC n)))) ((vsum (m .. n)) f))))) m))
T c= c==> ! ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0 * / ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0 f1 * / ! c= cvsum * * part c.. b0 cSUC b1 f0 cCOND c<= b0 cSUC b1 cvector_add cvsum * * part c.. b0 b1 f0 * f0 cSUC b1 cvsum * * part c.. b0 b1 f0 f1
+ |- (((!g'. (!t'. (!e'. (((m <= (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (NUMERAL _0))) ((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((m <= (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (NUMERAL _0))) ((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((m <= (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (NUMERAL _0))) ((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c<= f0 cNUMERAL c_0 b0 c==> c==> b0 c= cvector_sub * f1 f0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c<= f0 cNUMERAL c_0 cvector_sub * f1 f0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= c<= f0 cNUMERAL c_0 b0 c==> c==> b0 c= cvector_sub * f1 f0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c<= f0 cNUMERAL c_0 cvector_sub * f1 f0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f2 * / ! ! c==> c= c<= f0 cNUMERAL c_0 b0 c==> c==> b0 c= cvector_sub * f1 f0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c<= f0 cNUMERAL c_0 cvector_sub * f1 f0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f2
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
+ |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) (m = (SUC n)))) = ((\t. (t \/ (~ t))) (m = (SUC n))))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c= f0 cSUC f1 * / c\/ b0 c~ b0 c= f0 cSUC f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (m = (SUC n))) |- (((SUC n) = m) = F)
T c==> c~ c= f0 cSUC f1 c= c= cSUC f1 f0 cF
- |- ((\t'. (!e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 f2 c==> c==> f2 c= cvector_add cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f3 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f3 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 b0 b1 f4
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((real_neg ((real_sub ((real_add ((real_sub ((f m) $ i)) ((f (SUC n)) $ i))) ((real_sub ((f (SUC n)) $ i)) ((f (SUC (SUC n))) $ i)))) ((real_sub ((f m) $ i)) ((f (SUC (SUC n))) $ i)))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_sub c$ * f0 f1 f2 c$ * f0 cSUC f3 f2 creal_sub c$ * f0 cSUC f3 f2 c$ * f0 cSUC cSUC f3 f2 creal_sub c$ * f0 f1 f2 c$ * f0 cSUC cSUC f3 f2 creal_of_num cNUMERAL c_0
+ |- ((((m = (NUMERAL _0)) = (m = (NUMERAL _0))) ==> (((m = (NUMERAL _0)) ==> (((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0)) = t')) ==> (((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) t') e'))))) = (((m = (NUMERAL _0)) ==> (((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0)) = t')) ==> (((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) t') e')))))
T c= c==> c= c= f0 cNUMERAL c_0 c= f0 cNUMERAL c_0 c==> c==> c= f0 cNUMERAL c_0 c= * / cvector_sub * f1 b0 * f1 c+ b0 cNUMERAL cBIT1 c_0 cNUMERAL c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 f3 c= cCOND c= f0 cNUMERAL c_0 * / cvector_sub * f1 b0 * f1 c+ b0 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 f2 f3 c==> c==> c= f0 cNUMERAL c_0 c= * / cvector_sub * f1 b0 * f1 c+ b0 cNUMERAL cBIT1 c_0 cNUMERAL c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 f3 c= cCOND c= f0 cNUMERAL c_0 * / cvector_sub * f1 b0 * f1 c+ b0 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 f2 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (m = (NUMERAL _0))) |- (~ ((NUMERAL _0) = m))
T c==> c~ c= f0 cNUMERAL c_0 c~ c= cNUMERAL c_0 f0
+ |- (((SUC n) <= n) = F)
T c= c<= cSUC f0 f0 cF
+ |- (((!x. (((vector_add (vec (NUMERAL _0))) x) = x)) ==> ((\x. (((vector_add (vec (NUMERAL _0))) x) = x)) x)) = ((\x. (((vector_add (vec (NUMERAL _0))) x) = x)) x))
T c= c==> ! c= cvector_add cvec cNUMERAL c_0 b0 b0 * / c= cvector_add cvec cNUMERAL c_0 b0 b0 f0 * / c= cvector_add cvec cNUMERAL c_0 b0 b0 f0
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157200)) /\ ((real_le ((real_add (real_of_int _157200)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157200))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157200)) /\ ((real_le ((real_add (real_of_int _157200)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157200))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
+ (~ (m <= n)) |- ((~ (m <= n)) /\ ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m <= n)) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c==> c~ c<= f0 f1 c/\ c~ c<= f0 f1 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _157200)) /\ ((real_le ((real_add (real_of_int _157200)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _157200))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
+ (m = (NUMERAL _0)) |- ((m = (NUMERAL _0)) /\ (((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c= f0 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= cvector_sub * f1 f0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((((m = (SUC n)) \/ (m <= n)) = ((m = (SUC n)) \/ (m <= n))) ==> ((((m = (SUC n)) \/ (m <= n)) ==> (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ ((m = (SUC n)) \/ (m <= n))) ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND ((m = (SUC n)) \/ (m <= n))) t') e'))))) = ((((m = (SUC n)) \/ (m <= n)) ==> (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ ((m = (SUC n)) \/ (m <= n))) ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND ((m = (SUC n)) \/ (m <= n))) t') e')))))
T c= c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 c\/ c= f0 cSUC f1 c<= f0 f1 c==> c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f4 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 f3 f4 c==> c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f4 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 f3 f4
+ |- ((\t'. (!e'. (((m <= (SUC n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (SUC n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c<= f0 cSUC f1 f2 c==> c==> f2 c= cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b1 c= cCOND c<= f0 cSUC f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 b0 b1 f4
- |- (((!e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 f2 c==> c==> f2 c= cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b0 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f4 b0 * / c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 f2 c==> c==> f2 c= cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b0 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f4 b0 f5 * / c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 f2 c==> c==> f2 c= cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b0 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f4 b0 f5
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
- |- (((!t'. (!e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 f2 c==> c==> f2 c= cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b1 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 b0 b1 * / ! c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 f2 c==> c==> f2 c= cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b1 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 b0 b1 f4 * / ! c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 f2 c==> c==> f2 c= cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b1 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 b0 b1 f4
+ |- ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))
T c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ (~ (m = (NUMERAL _0))) |- ((~ (m = (NUMERAL _0))) /\ ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c~ c= f0 cNUMERAL c_0 c/\ c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
+ |- ((((~ (((real_add ((real_sub ((f m) $ i)) ((f (SUC n)) $ i))) ((real_sub ((f (SUC n)) $ i)) ((f (SUC (SUC n))) $ i))) = ((real_sub ((f m) $ i)) ((f (SUC (SUC n))) $ i)))) ==> F) ==> (((real_add ((real_sub ((f m) $ i)) ((f (SUC n)) $ i))) ((real_sub ((f (SUC n)) $ i)) ((f (SUC (SUC n))) $ i))) = ((real_sub ((f m) $ i)) ((f (SUC (SUC n))) $ i)))) = (((real_add ((real_sub ((f m) $ i)) ((f (SUC n)) $ i))) ((real_sub ((f (SUC n)) $ i)) ((f (SUC (SUC n))) $ i))) = ((real_sub ((f m) $ i)) ((f (SUC (SUC n))) $ i))))
T c= c==> c==> c~ c= creal_add creal_sub c$ * f0 f1 f2 c$ * f0 cSUC f3 f2 creal_sub c$ * f0 cSUC f3 f2 c$ * f0 cSUC cSUC f3 f2 creal_sub c$ * f0 f1 f2 c$ * f0 cSUC cSUC f3 f2 cF c= creal_add creal_sub c$ * f0 f1 f2 c$ * f0 cSUC f3 f2 creal_sub c$ * f0 cSUC f3 f2 c$ * f0 cSUC cSUC f3 f2 creal_sub c$ * f0 f1 f2 c$ * f0 cSUC cSUC f3 f2 c= creal_add creal_sub c$ * f0 f1 f2 c$ * f0 cSUC f3 f2 creal_sub c$ * f0 cSUC f3 f2 c$ * f0 cSUC cSUC f3 f2 creal_sub c$ * f0 f1 f2 c$ * f0 cSUC cSUC f3 f2
+ |- (((!t'. (!e'. (((m <= (SUC n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (SUC n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((m <= (SUC n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (SUC n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((m <= (SUC n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (SUC n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c<= f0 cSUC f1 f2 c==> c==> f2 c= cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b1 c= cCOND c<= f0 cSUC f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 b0 b1 * / ! c==> c= c<= f0 cSUC f1 f2 c==> c==> f2 c= cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b1 c= cCOND c<= f0 cSUC f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 b0 b1 f4 * / ! c==> c= c<= f0 cSUC f1 f2 c==> c==> f2 c= cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b1 c= cCOND c<= f0 cSUC f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 b0 b1 f4
- |- ((\e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e')
T * / c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 f2 c==> c==> f2 c= cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b0 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f4 b0 f5
+ |- ((((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0)))) ==> ((((COND (m <= (NUMERAL _0))) ((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))) = ((((COND (m <= (NUMERAL _0))) ((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c= c==> c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvec cNUMERAL c_0 c= cCOND c<= f0 cNUMERAL c_0 cvector_sub * f1 f0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cCOND c<= f0 cNUMERAL c_0 cvector_sub * f1 f0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((\e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 f3 b0 f4
+ |- ((\e'. (((m <= (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (NUMERAL _0))) ((vector_sub (f m)) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e')
T * / c==> c= c<= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cvector_sub * f2 f0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c<= f0 cNUMERAL c_0 cvector_sub * f2 f0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 f3 b0 f4
- |- ((((m = (SUC n)) \/ (m <= n)) ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ ((m = (SUC n)) \/ (m <= n))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND ((m = (SUC n)) \/ (m <= n))) t') e'))))
T c==> c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvec cNUMERAL c_0 f4 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 f3 f4
+ |- (((!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))) ==> ((\m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))) m)) = ((\m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))) m))
T c= c==> ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1 * / ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1 f0 * / ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1 f0
+ |- (((m = (NUMERAL _0)) ==> (((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0)) = t')) ==> (((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) t') e'))))
T c==> c==> c= f0 cNUMERAL c_0 c= * / cvector_sub * f1 b0 * f1 c+ b0 cNUMERAL cBIT1 c_0 cNUMERAL c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 f3 c= cCOND c= f0 cNUMERAL c_0 * / cvector_sub * f1 b0 * f1 c+ b0 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 f2 f3
- |- ((((~ ((m = (SUC n)) \/ (m <= n))) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0)))) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))) = ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c= c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvec cNUMERAL c_0 cvec cNUMERAL c_0 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
+ (m <= n) |- ((((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = (((COND (m <= n)) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((vector_add (((COND T) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = (((COND T) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c==> c<= f0 f1 c= c= cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvector_add cCOND cT cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND cT cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((~ (m <= n)) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c==> c~ c<= f0 f1 c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
+ (~ (m <= n)) |- ((m <= n) = F)
T c==> c~ c<= f0 f1 c= c<= f0 f1 cF
+ |- (~ ((int_le ((int_add (int_of_num n)) (int_of_num (NUMERAL (BIT1 _0))))) (int_of_num n)))
T c~ cint_le cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num f0
+ |- ((\x. (((vector_add (vec (NUMERAL _0))) x) = x)) x)
T * / c= cvector_add cvec cNUMERAL c_0 b0 b0 f0
- |- (((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) e')))
T c==> c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 f1 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- ((\e'. (((m <= (SUC n)) = g') ==> ((g' ==> (((vector_add ((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (SUC n))) = t')) ==> (((~ g') ==> (((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = e')) ==> ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (SUC n)))) ((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))))) = (((COND g') t') e')))))) e')
T * / c==> c= c<= f0 cSUC f1 f2 c==> c==> f2 c= cvector_add cvsum * * part c.. f0 f1 / cvector_sub * f3 b1 * f3 c+ b1 cNUMERAL cBIT1 c_0 * / cvector_sub * f3 b1 * f3 c+ b1 cNUMERAL cBIT1 c_0 cSUC f1 f4 c==> c==> c~ f2 c= cvsum * * part c.. f0 f1 / cvector_sub * f3 b1 * f3 c+ b1 cNUMERAL cBIT1 c_0 b0 c= cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 / cvector_sub * f3 b1 * f3 c+ b1 cNUMERAL cBIT1 c_0 * / cvector_sub * f3 b1 * f3 c+ b1 cNUMERAL cBIT1 c_0 cSUC f1 cvsum * * part c.. f0 f1 / cvector_sub * f3 b1 * f3 c+ b1 cNUMERAL cBIT1 c_0 cCOND f2 f4 b0 f5
+ (((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) |- (((~ ((m = (SUC n)) \/ (m <= n))) ==> (((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = e')) ==> ((((COND (m <= (SUC n))) ((vector_add ((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (SUC n)))) ((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) e')))
T c==> c= cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 f3 c= cCOND c<= f0 cSUC f1 cvector_add cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 * / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cSUC f1 cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3
+ |- ((((vector_add ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = (((vector_add (((COND T) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = (((COND T) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c= c= cvector_add cvector_sub * f0 f1 * f0 c+ f2 cNUMERAL cBIT1 c_0 cvector_sub * f0 cSUC f2 * f0 c+ cSUC f2 cNUMERAL cBIT1 c_0 cvector_sub * f0 f1 * f0 c+ cSUC f2 cNUMERAL cBIT1 c_0 c= cvector_add cCOND cT cvector_sub * f0 f1 * f0 c+ f2 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f0 cSUC f2 * f0 c+ cSUC f2 cNUMERAL cBIT1 c_0 cCOND cT cvector_sub * f0 f1 * f0 c+ cSUC f2 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- (((!e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND g') t') e')))))) ==> ((\e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND g') t') e')))))) e')) = ((\e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 f2 c==> c==> f2 c= cvector_add cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f3 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f2 c= cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f3 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f4 b0 * / c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 f2 c==> c==> f2 c= cvector_add cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f3 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f2 c= cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f3 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f4 b0 f5 * / c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 f2 c==> c==> f2 c= cvector_add cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f3 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f2 c= cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f3 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f4 b0 f5
+ |- (((((m = (SUC n)) \/ (m <= n)) ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) ==> (((~ ((m = (SUC n)) \/ (m <= n))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (SUC n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) e')))) = (((~ ((m = (SUC n)) \/ (m <= n))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (SUC n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) e'))))
T c= c==> c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvec cNUMERAL c_0 f3 c= cCOND c<= f0 cSUC f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvec cNUMERAL c_0 f3 c= cCOND c<= f0 cSUC f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * / cvector_sub * f2 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cNUMERAL c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c= f0 cNUMERAL c_0 * / cvector_sub * f2 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND f1 f3 b0 * / c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * / cvector_sub * f2 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cNUMERAL c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c= f0 cNUMERAL c_0 * / cvector_sub * f2 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND f1 f3 b0 f4 * / c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * / cvector_sub * f2 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cNUMERAL c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c= f0 cNUMERAL c_0 * / cvector_sub * f2 b1 * f2 c+ b1 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND f1 f3 b0 f4
+ |- (((m <= n) ==> (((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ (m <= n)) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m <= n)) t') e'))))
T c==> c==> c<= f0 f1 c= cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c<= f0 f1 c= cvec cNUMERAL c_0 f4 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c<= f0 f1 f3 f4
+ |- (((((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ==> (((vsum (m .. (SUC n))) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= (SUC n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))) = T)
T c= c==> c= cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cvsum * * part c.. f0 cSUC f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cCOND c<= f0 cSUC f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cT
+ |- (((!m. ((m + (NUMERAL (BIT1 _0))) = (SUC m))) ==> ((\m. ((m + (NUMERAL (BIT1 _0))) = (SUC m))) m)) = ((\m. ((m + (NUMERAL (BIT1 _0))) = (SUC m))) m))
T c= c==> ! c= c+ b0 cNUMERAL cBIT1 c_0 cSUC b0 * / c= c+ b0 cNUMERAL cBIT1 c_0 cSUC b0 f0 * / c= c+ b0 cNUMERAL cBIT1 c_0 cSUC b0 f0
+ ((~ (m = (SUC n))) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))), ((m = (SUC n)) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))) |- ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))
T c==> c==> c~ c= f0 cSUC f1 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c==> c= f0 cSUC f1 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- ((\g'. (!t'. (!e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 b0 c==> c==> b0 c= cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b2 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f3
- |- (((!g'. (!t'. (!e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 b0 c==> c==> b0 c= cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b2 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 b0 c==> c==> b0 c= cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b2 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f3 * / ! ! c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 b0 c==> c==> b0 c= cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b2 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\t'. (!e'. (((m <= n) = g') ==> ((g' ==> (((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c<= f0 f1 f2 c==> c==> f2 c= cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b1 c= cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 b0 b1 f4
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((~ (m <= n)) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) e')))
T c==> c==> c~ c<= f0 f1 c= cvec cNUMERAL c_0 f2 c= cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 f2
- (m = (NUMERAL _0)) |- ((NUMERAL _0) = m)
T c==> c= f0 cNUMERAL c_0 c= cNUMERAL c_0 f0
+ (~ (m <= n)) |- (((((COND F) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND F) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m <= n)) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c==> c~ c<= f0 f1 c= c= cCOND cF cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND cF cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- (~ (m = (NUMERAL _0))) |- ((m = (NUMERAL _0)) = F)
T c==> c~ c= f0 cNUMERAL c_0 c= c= f0 cNUMERAL c_0 cF
+ |- (~ ((SUC n) <= n))
T c~ c<= cSUC f0 f0
+ |- ((~ (m <= n)) ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m <= n)) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c==> c~ c<= f0 f1 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((\g'. (!t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= * / cvector_sub * f1 b3 * f1 c+ b3 cNUMERAL cBIT1 c_0 cNUMERAL c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c= f0 cNUMERAL c_0 * / cvector_sub * f1 b3 * f1 c+ b3 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f2
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((((m <= n) ==> (((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0))))) = ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0))))))) ==> (((~ (m <= n)) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) e')))) = (((~ (m <= n)) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) e'))))
T c= c==> c==> c<= f0 f1 c= cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 c==> c==> c~ c<= f0 f1 c= cvec cNUMERAL c_0 f3 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c<= f0 f1 c= cvec cNUMERAL c_0 f3 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 f3
+ |- ((m <= n) = ((int_le (int_of_num m)) (int_of_num n)))
T c= c<= f0 f1 cint_le cint_of_num f0 cint_of_num f1
+ |- ((((vector_add ((vector_sub (f m)) (f (SUC n)))) ((vector_sub (f (SUC n))) (f (SUC (SUC n))))) = ((vector_sub (f m)) (f (SUC (SUC n))))) = (((vector_add ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))))
T c= c= cvector_add cvector_sub * f0 f1 * f0 cSUC f2 cvector_sub * f0 cSUC f2 * f0 cSUC cSUC f2 cvector_sub * f0 f1 * f0 cSUC cSUC f2 c= cvector_add cvector_sub * f0 f1 * f0 c+ f2 cNUMERAL cBIT1 c_0 cvector_sub * f0 cSUC f2 * f0 c+ cSUC f2 cNUMERAL cBIT1 c_0 cvector_sub * f0 f1 * f0 c+ cSUC f2 cNUMERAL cBIT1 c_0
+ (((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) |- ((~ ((m = (SUC n)) \/ (m <= n))) ==> (((vsum (m .. n)) (\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0))))))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c==> c= cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvsum * * part c.. f0 f1 / cvector_sub * f2 b0 * f2 c+ b0 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
+ |- ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) n)
T * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 f0
- |- (((!t'. (!e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 f2 c==> c==> f2 c= cvector_add cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f3 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f3 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 b0 b1 * / ! c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 f2 c==> c==> f2 c= cvector_add cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f3 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f3 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 b0 b1 f4 * / ! c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 f2 c==> c==> f2 c= cvector_add cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f3 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b1 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f3 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 b0 b1 f4
+ |- (((m <= (SUC n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m <= (SUC n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))
T c==> c= c<= f0 cSUC f1 f2 c==> c==> f2 c= cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f2 c= cvec cNUMERAL c_0 f5 c= cCOND c<= f0 cSUC f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f4 f5
- (~ (m = (SUC n))) |- (((~ ((SUC n) = m)) ==> (((SUC n) = m) = F)) = (((SUC n) = m) = F))
T c==> c~ c= f0 cSUC f1 c= c==> c~ c= cSUC f1 f0 c= c= cSUC f1 f0 cF c= c= cSUC f1 f0 cF
+ |- (((!t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0)) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((\k. ((vector_sub (f k)) (f (k + (NUMERAL (BIT1 _0)))))) (NUMERAL _0))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * / cvector_sub * f2 b2 * f2 c+ b2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 b0 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b1 c= cCOND c= f0 cNUMERAL c_0 * / cvector_sub * f2 b2 * f2 c+ b2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND f1 b0 b1 * / ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * / cvector_sub * f2 b2 * f2 c+ b2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 b0 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b1 c= cCOND c= f0 cNUMERAL c_0 * / cvector_sub * f2 b2 * f2 c+ b2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND f1 b0 b1 f3 * / ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= * / cvector_sub * f2 b2 * f2 c+ b2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 b0 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b1 c= cCOND c= f0 cNUMERAL c_0 * / cvector_sub * f2 b2 * f2 c+ b2 cNUMERAL cBIT1 c_0 cNUMERAL c_0 cvec cNUMERAL c_0 cCOND f1 b0 b1 f3
- |- (((!g'. (!t'. (!e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 b0 c==> c==> b0 c= cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 b0 c==> c==> b0 c= cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f3 * / ! ! c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 b0 c==> c==> b0 c= cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f3
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- |- (((~ ((m = (SUC n)) \/ (m <= n))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) e')))
T c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvec cNUMERAL c_0 f2 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 f2
- |- ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- (m = (SUC n)) |- ((SUC n) = m)
T c==> c= f0 cSUC f1 c= cSUC f1 f0
- (m = (NUMERAL _0)) |- ((m = (NUMERAL _0)) /\ (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c= f0 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((m = (NUMERAL _0)) ==> (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) t') e'))))
T c==> c==> c= f0 cNUMERAL c_0 c= cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 f3 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 f2 f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ ((m = (SUC n)) \/ (m <= n))) ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) e')))
T c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f3 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3
- |- (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))
T c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 f4 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 f3 f4
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b1 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 b0 b1 f3
- |- ((m = (NUMERAL _0)) ==> (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))))
T c==> c= f0 cNUMERAL c_0 c= cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((m = (SUC n)) \/ (m <= n)) ==> (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))))
T c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
- |- ((((m = (SUC n)) \/ (m <= n)) ==> (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ ((m = (SUC n)) \/ (m <= n))) ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND ((m = (SUC n)) \/ (m <= n))) t') e'))))
T c==> c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f4 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 f3 f4
- |- ((((m = (NUMERAL _0)) = (m = (NUMERAL _0))) ==> (((m = (NUMERAL _0)) ==> (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) t') e'))))) = (((m = (NUMERAL _0)) ==> (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) t') e')))))
T c= c==> c= c= f0 cNUMERAL c_0 c= f0 cNUMERAL c_0 c==> c==> c= f0 cNUMERAL c_0 c= cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 f3 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 f2 f3 c==> c==> c= f0 cNUMERAL c_0 c= cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 f3 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 f2 f3
- |- ((((m = (NUMERAL _0)) ==> (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))))) ==> (((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) e')))) = (((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) e'))))
T c= c==> c==> c= f0 cNUMERAL c_0 c= cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 f2 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 c==> c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 f2 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\g'. (!t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f2
- ((NUMERAL _0) = m) |- (m = (NUMERAL _0))
T c==> c= cNUMERAL c_0 f0 c= f0 cNUMERAL c_0
- |- (((((m = (SUC n)) \/ (m <= n)) = ((m = (SUC n)) \/ (m <= n))) ==> ((((m = (SUC n)) \/ (m <= n)) ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ ((m = (SUC n)) \/ (m <= n))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND ((m = (SUC n)) \/ (m <= n))) t') e'))))) = ((((m = (SUC n)) \/ (m <= n)) ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ ((m = (SUC n)) \/ (m <= n))) ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND ((m = (SUC n)) \/ (m <= n))) t') e')))))
T c= c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 c\/ c= f0 cSUC f1 c<= f0 f1 c==> c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvec cNUMERAL c_0 f4 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 f3 f4 c==> c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvec cNUMERAL c_0 f4 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 f3 f4
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- ((SUC n) = m) |- (m = (SUC n))
T c==> c= cSUC f0 f1 c= f1 cSUC f0
- (~ (m = (NUMERAL _0))) |- (((NUMERAL _0) = m) = F)
T c==> c~ c= f0 cNUMERAL c_0 c= c= cNUMERAL c_0 f0 cF
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (m = (SUC n))) |- (~ ((SUC n) = m))
T c==> c~ c= f0 cSUC f1 c~ c= cSUC f1 f0
- (~ ((m = (SUC n)) \/ (m <= n))) |- ((~ ((m = (SUC n)) \/ (m <= n))) /\ ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c/\ c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = t')) ==> (((~ g') ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND g') t') e')))))) e')
T * / c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 f2 c==> c==> f2 c= cvector_add cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f3 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 f4 c==> c==> c~ f2 c= cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 b0 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f3 cSUC f1 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f3 f0 * f3 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 f4 b0 f5
- |- ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))
T c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((\t'. (!e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 f2 c==> c==> f2 c= cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f2 c= cvec cNUMERAL c_0 b1 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f3 f0 * f3 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f2 b0 b1 f4
- |- (((!g'. (!t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f2 * / ! ! c==> c= c= f0 cNUMERAL c_0 b0 c==> c==> b0 c= cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f2
- |- (((((m = (SUC n)) \/ (m <= n)) ==> (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))))) ==> (((~ ((m = (SUC n)) \/ (m <= n))) ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) e')))) = (((~ ((m = (SUC n)) \/ (m <= n))) ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) = (((COND ((m = (SUC n)) \/ (m <= n))) ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))) e'))))
T c= c==> c==> c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f3 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 f3 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 f3
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ ((m = (SUC n)) \/ (m <= n))) ==> ((((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c==> c~ c\/ c= f0 cSUC f1 c<= f0 f1 c= cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((m = (SUC n)) \/ (m <= n)) |- (((m = (SUC n)) \/ (m <= n)) /\ (((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) = ((vector_add (((COND (m <= n)) ((vector_sub (f m)) (f (n + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))) ((vector_sub (f (SUC n))) (f ((SUC n) + (NUMERAL (BIT1 _0))))))))
T c==> c\/ c= f0 cSUC f1 c<= f0 f1 c/\ c\/ c= f0 cSUC f1 c<= f0 f1 c= cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvector_add cCOND c<= f0 f1 cvector_sub * f2 f0 * f2 c+ f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cvector_sub * f2 cSUC f1 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) ==> ((\e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e')) = ((\e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 f3 b0 * / c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 f3 b0 f4 * / c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b0 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 f3 b0 f4
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (m = (NUMERAL _0))) ==> ((vec (NUMERAL _0)) = (vec (NUMERAL _0)))) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))))) = ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0)))))
T c= c==> c==> c~ c= f0 cNUMERAL c_0 c= cvec cNUMERAL c_0 cvec cNUMERAL c_0 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND c= f0 cNUMERAL c_0 cvector_sub * f1 cNUMERAL c_0 * f1 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\g'. (!t'. (!e'. ((((m = (SUC n)) \/ (m <= n)) = g') ==> ((g' ==> (((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND ((m = (SUC n)) \/ (m <= n))) ((vector_sub (f m)) (f ((SUC n) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c\/ c= f0 cSUC f1 c<= f0 f1 b0 c==> c==> b0 c= cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 b1 c==> c==> c~ b0 c= cvec cNUMERAL c_0 b2 c= cCOND c\/ c= f0 cSUC f1 c<= f0 f1 cvector_sub * f2 f0 * f2 c+ cSUC f1 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND b0 b1 b2 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((m = (NUMERAL _0)) = g') ==> ((g' ==> (((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0))))) = t')) ==> (((~ g') ==> ((vec (NUMERAL _0)) = e')) ==> ((((COND (m = (NUMERAL _0))) ((vector_sub (f (NUMERAL _0))) (f ((NUMERAL _0) + (NUMERAL (BIT1 _0)))))) (vec (NUMERAL _0))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b1 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 b0 b1 * / ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b1 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 b0 b1 f3 * / ! c==> c= c= f0 cNUMERAL c_0 f1 c==> c==> f1 c= cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> c~ f1 c= cvec cNUMERAL c_0 b1 c= cCOND c= f0 cNUMERAL c_0 cvector_sub * f2 cNUMERAL c_0 * f2 c+ cNUMERAL c_0 cNUMERAL cBIT1 c_0 cvec cNUMERAL c_0 cCOND f1 b0 b1 f3
