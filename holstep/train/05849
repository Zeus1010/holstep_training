N List_hypermap.mem_find_face_imp_mem_darts
C |- (!d. (!y. (!L. (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L))))))
T c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1
D TRUTH
A |- T
T cT
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D list_INDUCT
A |- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
D MAP
A |- ((!f. (((MAP f) NIL) = NIL)) /\ (!f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))))
T c/\ ! c= cMAP b0 cNIL cNIL ! ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2
D ssreflect_eq_def
A |- (!v. (!P. (((ssreflect_eq v) P) = P)))
T c= cssreflect_eq f0 f1 f1
D bool_elim
A |- (!P. (((P T) /\ (P F)) ==> (!x. (P x))))
T c==> c/\ * f0 cT * f0 cF ! * f0 b0
D Seq.mem_cat
A |- (!x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))))
T c= cMEM f0 ccat f1 f2 c\/ cMEM f0 f1 cMEM f0 f2
D Seq.foldr
A |- (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))
T c/\ c= cfoldr f0 f1 cCONS f2 f3 * * f0 f2 cfoldr f0 f1 f3 c= cfoldr f0 f1 cNIL f1
D List_hypermap.list_of_darts
A |- (!L. ((list_of_darts L) = (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) L)))
T c= clist_of_darts f0 cfoldr / / ccat clist_pairs b0 b1 cNIL f0
D List_hypermap.list_of_faces
A |- (!L. ((list_of_faces L) = ((MAP list_pairs) L)))
T c= clist_of_faces f0 cMAP part clist_pairs f0
D List_hypermap.find_list
A |- (!h. (!t. (!x. ((((find_list NIL) x) = NIL) /\ (((find_list ((CONS h) t)) x) = (((COND ((MEM x) h)) h) ((find_list t) x)))))))
T c/\ c= cfind_list cNIL f0 cNIL c= cfind_list cCONS f1 f2 f0 cCOND cMEM f0 f1 f1 cfind_list f2 f0
D List_hypermap.find_face
A |- (!L. (!d. (((find_face L) d) = ((find_list (list_of_faces L)) d))))
T c= cfind_face f0 f1 cfind_list clist_of_faces f0 f1
+ |- (((!L. (((MAP list_pairs) L) = (list_of_faces L))) ==> ((\L. (((MAP list_pairs) L) = (list_of_faces L))) L)) = ((\L. (((MAP list_pairs) L) = (list_of_faces L))) L))
T c= c==> ! c= cMAP part clist_pairs b0 clist_of_faces b0 * / c= cMAP part clist_pairs b0 clist_of_faces b0 f0 * / c= cMAP part clist_pairs b0 clist_of_faces b0 f0
+ |- (T = (((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = T)) ==> (((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))))
T c= cT c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT c==> cMEM f3 cCOND cT clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4
+ |- ((((MEM d) ((find_list (list_of_faces t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))
T c= c==> cMEM f0 cfind_list clist_of_faces f1 f2 c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1 c==> cMEM f0 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1
- (((MEM y) (list_pairs h)) = x) |- ((((MEM y) (list_pairs h)) = x) /\ (?x. (((MEM y) (list_pairs h)) = x)))
T c==> c= cMEM f0 clist_pairs f1 f2 c/\ c= cMEM f0 clist_pairs f1 f2 c? / c= cMEM f0 clist_pairs f1 b0
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
+ |- (((((MEM d) (list_pairs h)) ==> ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = T)) ==> ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (((MEM d) (list_pairs h)) ==> T))) = ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (((MEM d) (list_pairs h)) ==> T)))
T c= c==> c==> cMEM f0 clist_pairs f1 c= c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 cT c= c==> cMEM f0 cCOND cT clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 c==> cMEM f0 clist_pairs f1 cT c= c==> cMEM f0 cCOND cT clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 c==> cMEM f0 clist_pairs f1 cT
- |- ((((MEM y) (list_pairs h)) = x) ==> (?x. (((MEM y) (list_pairs h)) = x)))
T c==> c= cMEM f0 clist_pairs f1 f2 c? / c= cMEM f0 clist_pairs f1 b0
- ((P T) /\ (P F)) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!x. (P x)))
T c==> c/\ * f0 cT * f0 cF c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! * f0 b0
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
+ (((MEM y) (list_pairs h)) = x), (((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))) |- (((MEM d) (((COND x) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))
T c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> cMEM f3 cfind_face f4 f0 cMEM f3 clist_of_darts f4 c==> cMEM f3 cCOND f2 clist_pairs f1 cfind_list cMAP part clist_pairs f4 f0 c\/ cMEM f3 clist_pairs f1 cMEM f3 clist_of_darts f4
+ |- (P = ((ssreflect_eq mem_y) P))
T c= f0 cssreflect_eq f1 f0
+ |- ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1)
T * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ |- (((!f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) ==> ((\f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) f)) = ((\f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) f))
T c= c==> ! ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 * / ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 f0 * / ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 f0
+ |- (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))
T c==> cMEM f0 cfind_list cMAP part clist_pairs f1 f2 c= c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1 c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1
+ |- (((!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) ==> ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2)) = ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2))
T c= c==> ! c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2 * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
+ (((MEM y) (list_pairs h)) = x) |- ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = x)) ==> (((MEM d) (((COND x) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (((MEM d) (((COND x) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))
T c==> c= cMEM f0 clist_pairs f1 f2 c= c==> cssreflect_eq f3 c= cMEM f0 clist_pairs f1 f2 c==> cMEM f4 cCOND f2 clist_pairs f1 cfind_list cMAP part clist_pairs f5 f0 c\/ cMEM f4 clist_pairs f1 cMEM f4 clist_of_darts f5 c==> cMEM f4 cCOND f2 clist_pairs f1 cfind_list cMAP part clist_pairs f5 f0 c\/ cMEM f4 clist_pairs f1 cMEM f4 clist_of_darts f5
+ |- ((\p'. (!q'. ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) = p') ==> ((p' ==> ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = q')) ==> ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (p' ==> q')))))) p')
T * / ! c==> c= cMEM f0 cCOND cT clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 b0 c==> c==> b0 c= c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 b1 c= c==> cMEM f0 cCOND cT clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 c==> b0 b1 f4
+ (((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))), ((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) |- (((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) /\ (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))
T c==> c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 c==> cssreflect_eq f3 c~ cMEM f2 clist_pairs f4 c/\ cssreflect_eq f3 c~ cMEM f2 clist_pairs f4 c==> cMEM f0 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1
+ |- ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = T)) = p') ==> ((p' ==> ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = T)) ==> (((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT f3 c==> c==> f3 c= c==> cMEM f4 cCOND cT clist_pairs f2 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 f6 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT c==> cMEM f4 cCOND cT clist_pairs f2 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 c==> f3 f6
- |- (((!t'. (!e'. ((((MEM y) (list_pairs h)) = g') ==> ((g' ==> ((list_pairs h) = t')) ==> (((~ g') ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((MEM y) (list_pairs h)) = g') ==> ((g' ==> ((list_pairs h) = t')) ==> (((~ g') ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((MEM y) (list_pairs h)) = g') ==> ((g' ==> ((list_pairs h) = t')) ==> (((~ g') ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> f2 c= clist_pairs f1 b0 c==> c==> c~ f2 c= cfind_list cMAP part clist_pairs f3 f0 b1 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f3 f0 cCOND f2 b0 b1 * / ! c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> f2 c= clist_pairs f1 b0 c==> c==> c~ f2 c= cfind_list cMAP part clist_pairs f3 f0 b1 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f3 f0 cCOND f2 b0 b1 f4 * / ! c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> f2 c= clist_pairs f1 b0 c==> c==> c~ f2 c= cfind_list cMAP part clist_pairs f3 f0 b1 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f3 f0 cCOND f2 b0 b1 f4
- (L = L1) |- ((((MEM d) ((find_face L1) y)) ==> ((MEM d) (list_of_darts L1))) = (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L))))
T c==> c= f0 f1 c= c==> cMEM f2 cfind_face f1 f3 cMEM f2 clist_of_darts f1 c==> cMEM f2 cfind_face f0 f3 cMEM f2 clist_of_darts f0
+ ((\x. (((MEM y) (list_pairs h)) = x)) x) |- (((((MEM y) (list_pairs h)) = x) ==> (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))
T c==> * / c= cMEM f0 clist_pairs f1 b0 f2 c= c==> c= cMEM f0 clist_pairs f1 f2 c==> cMEM f3 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f4 f0 c\/ cMEM f3 clist_pairs f1 cMEM f3 clist_of_darts f4 c==> cMEM f3 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f4 f0 c\/ cMEM f3 clist_pairs f1 cMEM f3 clist_of_darts f4
+ (((MAP list_pairs) L) = (list_of_faces L)) |- ((list_of_faces L) = ((MAP list_pairs) L))
T c==> c= cMAP part clist_pairs f0 clist_of_faces f0 c= clist_of_faces f0 cMAP part clist_pairs f0
- |- ((\q'. ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) = p') ==> ((p' ==> ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f3 c==> c==> f3 c= c==> cMEM f4 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 b0 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f4 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 c==> f3 b0 f6
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- ((\L1. (L = L1)) L1) |- (((\L1. (L = L1)) L1) /\ (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L))))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c==> cMEM f2 cfind_face f0 f3 cMEM f2 clist_of_darts f0
- |- ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> q')))
T c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 f5 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f5
- ((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) |- (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) = T)
T c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 c= cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cT
+ |- ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) ((cat (list_pairs h)) (list_of_darts t)))) = (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) (((\list. (\a. ((cat (list_pairs list)) a))) h) (list_of_darts t)))))
T c= c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 ccat clist_pairs f2 clist_of_darts f3 c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 * * / / ccat clist_pairs b0 b1 f2 clist_of_darts f3
- |- ((((\x. (((MEM y) (list_pairs h)) = x)) x) ==> (?x. (((MEM y) (list_pairs h)) = x))) = T)
T c= c==> * / c= cMEM f0 clist_pairs f1 b0 f2 c? / c= cMEM f0 clist_pairs f1 b0 cT
+ ((((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) L) = (list_of_darts L)) |- ((list_of_darts L) = (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) L))
T c==> c= cfoldr / / ccat clist_pairs b0 b1 cNIL f0 clist_of_darts f0 c= clist_of_darts f0 cfoldr / / ccat clist_pairs b0 b1 cNIL f0
+ |- (((MAP list_pairs) L) = (list_of_faces L))
T c= cMAP part clist_pairs f0 clist_of_faces f0
+ |- ((t \/ T) = T)
T c= c\/ f0 cT cT
+ |- ((((MEM d) ((find_list (list_of_faces NIL)) y)) ==> ((MEM d) NIL)) = (((MEM d) ((find_list (list_of_faces NIL)) y)) ==> ((MEM d) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) NIL))))
T c= c==> cMEM f0 cfind_list clist_of_faces cNIL f1 cMEM f0 cNIL c==> cMEM f0 cfind_list clist_of_faces cNIL f1 cMEM f0 cfoldr / / ccat clist_pairs b0 b1 cNIL cNIL
+ |- (((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = T)) ==> (((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) /\ (((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = F)) ==> (((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))) ==> (!x. (((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = x)) ==> (((MEM d) (((COND x) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))))
T c==> c/\ c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT c==> cMEM f3 cCOND cT clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c==> cMEM f3 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 ! c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 b0 c==> cMEM f3 cCOND b0 clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4
+ |- ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) = p') ==> ((p' ==> ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = q')) ==> ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (p' ==> q'))))
T c==> c= cMEM f0 cfind_list cMAP part clist_pairs f1 f2 f3 c==> c==> f3 c= c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1 f5 c= c==> cMEM f0 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1 c==> f3 f5
- |- ((((~ ((MEM y) (list_pairs h))) ==> (((find_list ((MAP list_pairs) t)) y) = ((find_list ((MAP list_pairs) t)) y))) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)))) = ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))))
T c= c==> c==> c~ cMEM f0 clist_pairs f1 c= cfind_list cMAP part clist_pairs f2 f0 cfind_list cMAP part clist_pairs f2 f0 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f2 f0 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f2 f0 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f2 f0 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f2 f0
+ |- (((!q'. ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = F)) = p') ==> ((p' ==> ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = F)) ==> (((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = F)) = p') ==> ((p' ==> ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = F)) ==> (((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = F)) = p') ==> ((p' ==> ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = F)) ==> (((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF f3 c==> c==> f3 c= c==> cMEM f4 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c==> cMEM f4 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 c==> f3 b0 * / c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF f3 c==> c==> f3 c= c==> cMEM f4 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c==> cMEM f4 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 c==> f3 b0 f6 * / c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF f3 c==> c==> f3 c= c==> cMEM f4 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c==> cMEM f4 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 c==> f3 b0 f6
- |- ((\x. (!s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))))) x)
T * / ! ! ! c/\ c= cfoldr b2 b3 cCONS b0 b1 * * b2 b0 cfoldr b2 b3 b1 c= cfoldr b2 b3 cNIL b3 f0
- |- ((((MEM y) (list_pairs h)) = g') ==> ((g' ==> ((list_pairs h) = t')) ==> (((~ g') ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND g') t') e')))))
T c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> f2 c= clist_pairs f1 f3 c==> c==> c~ f2 c= cfind_list cMAP part clist_pairs f4 f0 f5 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f4 f0 cCOND f2 f3 f5
+ |- (((MEM d) ((find_face NIL) y)) ==> ((MEM d) (list_of_darts NIL)))
T c==> cMEM f0 cfind_face cNIL f1 cMEM f0 clist_of_darts cNIL
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = T)) ==> (((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))
T c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT c==> cMEM f3 cCOND cT clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4
+ |- ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P)
T * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0
- |- ((((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L))) = T)
T c= c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 cT
+ |- ((!y. (!L. (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L))))) = T)
T c= ! ! c==> cMEM f0 cfind_face b1 b0 cMEM f0 clist_of_darts b1 cT
- |- ((\g'. (!t'. (!e'. ((((MEM y) (list_pairs h)) = g') ==> ((g' ==> ((list_pairs h) = t')) ==> (((~ g') ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cMEM f0 clist_pairs f1 b0 c==> c==> b0 c= clist_pairs f1 b1 c==> c==> c~ b0 c= cfind_list cMAP part clist_pairs f2 f0 b2 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f2 f0 cCOND b0 b1 b2 f3
+ |- ((((MEM d) ((find_list (list_of_faces ((CONS h) t))) y)) ==> ((MEM d) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) ((CONS h) t)))) = (((MEM d) ((find_list (list_of_faces ((CONS h) t))) y)) ==> ((MEM d) (list_of_darts ((CONS h) t)))))
T c= c==> cMEM f0 cfind_list clist_of_faces cCONS f1 f2 f3 cMEM f0 cfoldr / / ccat clist_pairs b0 b1 cNIL cCONS f1 f2 c==> cMEM f0 cfind_list clist_of_faces cCONS f1 f2 f3 cMEM f0 clist_of_darts cCONS f1 f2
+ |- ((\d. (((find_face L) d) = ((find_list (list_of_faces L)) d))) d)
T * / c= cfind_face f0 b0 cfind_list clist_of_faces f0 b0 f1
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = F)) = ((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h))))) ==> ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = F)) ==> (((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> q')))) = ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = F)) ==> (((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> q'))))
T c= c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c==> cMEM f3 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 f5 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c==> cMEM f3 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f5 c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c==> cMEM f3 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 f5 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c==> cMEM f3 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f5
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ |- ((\x. ((((find_list NIL) x) = NIL) /\ (((find_list ((CONS h) t)) x) = (((COND ((MEM x) h)) h) ((find_list t) x))))) x)
T * / c/\ c= cfind_list cNIL b0 cNIL c= cfind_list cCONS f0 f1 b0 cCOND cMEM b0 f0 f0 cfind_list f1 b0 f2
+ ((MEM d) ((find_list ((MAP list_pairs) t)) y)) |- (((MEM d) ((find_list ((MAP list_pairs) t)) y)) /\ ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))
T c==> cMEM f0 cfind_list cMAP part clist_pairs f1 f2 c/\ cMEM f0 cfind_list cMAP part clist_pairs f1 f2 c= c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1 c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1
+ |- ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = T)) ==> (((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (((ssreflect_eq mem_y) ((MEM y) (list_pairs h))) ==> T))
T c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT c==> cMEM f3 cCOND cT clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 cT
+ |- (((!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) ==> ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1)) = ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1))
T c= c==> ! ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1 * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ |- (((?x. (((MEM y) (list_pairs h)) = x)) ==> (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))
T c= c==> c? / c= cMEM f0 clist_pairs f1 b0 c==> cMEM f2 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f3 f0 c\/ cMEM f2 clist_pairs f1 cMEM f2 clist_of_darts f3 c==> cMEM f2 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f3 f0 c\/ cMEM f2 clist_pairs f1 cMEM f2 clist_of_darts f3
+ |- ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) ((cat (list_pairs h)) (list_of_darts t)))) = (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) ((cat (list_pairs h)) (list_of_darts t)))))
T c= c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 ccat clist_pairs f2 clist_of_darts f3 c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 ccat clist_pairs f2 clist_of_darts f3
+ |- ((((foldr f) z0) NIL) = z0)
T c= cfoldr f0 f1 cNIL f1
+ |- ((\L. (!d. (((find_list (list_of_faces L)) d) = ((find_face L) d)))) L)
T * / ! c= cfind_list clist_of_faces b0 b1 cfind_face b0 b1 f0
+ |- (((!L. ((list_of_faces L) = ((MAP list_pairs) L))) ==> ((\L. ((list_of_faces L) = ((MAP list_pairs) L))) L)) = ((\L. ((list_of_faces L) = ((MAP list_pairs) L))) L))
T c= c==> ! c= clist_of_faces b0 cMAP part clist_pairs b0 * / c= clist_of_faces b0 cMAP part clist_pairs b0 f0 * / c= clist_of_faces b0 cMAP part clist_pairs b0 f0
+ ((MEM d) (list_of_darts t)) |- ((((MEM d) (list_pairs h)) \/ T) = (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))
T c==> cMEM f0 clist_of_darts f1 c= c\/ cMEM f0 clist_pairs f2 cT c\/ cMEM f0 clist_pairs f2 cMEM f0 clist_of_darts f1
- (L = L1) |- ((L = L1) /\ (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L))))
T c==> c= f0 f1 c/\ c= f0 f1 c==> cMEM f2 cfind_face f0 f3 cMEM f2 clist_of_darts f0
- |- ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)))
T c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f2 f0 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f2 f0
+ (((MEM y) (list_pairs h)) = x), (((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))) |- ((((MEM y) (list_pairs h)) = x) /\ (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))
T c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> cMEM f3 cfind_face f4 f0 cMEM f3 clist_of_darts f4 c/\ c= cMEM f0 clist_pairs f1 f2 c==> cMEM f3 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f4 f0 c\/ cMEM f3 clist_pairs f1 cMEM f3 clist_of_darts f4
+ (((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))) |- ((((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = T)) ==> (((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) /\ (((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = F)) ==> (((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))) ==> (!x. (((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = x)) ==> (((MEM d) (((COND x) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))))) = (!x. (((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = x)) ==> (((MEM d) (((COND x) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))))
T c==> c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 c= c==> c/\ c==> cssreflect_eq f3 c= cMEM f2 clist_pairs f4 cT c==> cMEM f0 cCOND cT clist_pairs f4 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1 c==> cssreflect_eq f3 c= cMEM f2 clist_pairs f4 cF c==> cMEM f0 cCOND cF clist_pairs f4 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1 ! c==> cssreflect_eq f3 c= cMEM f2 clist_pairs f4 b0 c==> cMEM f0 cCOND b0 clist_pairs f4 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1 ! c==> cssreflect_eq f3 c= cMEM f2 clist_pairs f4 b0 c==> cMEM f0 cCOND b0 clist_pairs f4 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((\P. (((P T) /\ (P F)) ==> (!x. (P x)))) P)
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 * / c==> c/\ * b0 cT * b0 cF ! * b0 b1 f0
+ |- (((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) ((cat (list_pairs h)) (list_of_darts t))) = ((MEM d) ((cat (list_pairs h)) (list_of_darts t))))) ==> ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) ((cat (list_pairs h)) (list_of_darts t)))) = (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) ((cat (list_pairs h)) (list_of_darts t)))))) = ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) ((cat (list_pairs h)) (list_of_darts t)))) = (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) ((cat (list_pairs h)) (list_of_darts t))))))
T c= c==> c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 c= cMEM f0 ccat clist_pairs f2 clist_of_darts f3 cMEM f0 ccat clist_pairs f2 clist_of_darts f3 c= c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 ccat clist_pairs f2 clist_of_darts f3 c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 ccat clist_pairs f2 clist_of_darts f3 c= c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 ccat clist_pairs f2 clist_of_darts f3 c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 ccat clist_pairs f2 clist_of_darts f3
- |- (((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) = ((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h))))) ==> ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> q')))) = ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> q'))))
T c= c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 f5 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f5 c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 f5 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f5
+ |- (((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) = ((MEM d) (list_pairs h))) ==> ((((MEM d) (list_pairs h)) ==> ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = q')) ==> ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (((MEM d) (list_pairs h)) ==> q')))) = ((((MEM d) (list_pairs h)) ==> ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = q')) ==> ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (((MEM d) (list_pairs h)) ==> q'))))
T c= c==> c= cMEM f0 cCOND cT clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 cMEM f0 clist_pairs f1 c==> c==> cMEM f0 clist_pairs f1 c= c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 f4 c= c==> cMEM f0 cCOND cT clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 c==> cMEM f0 clist_pairs f1 f4 c==> c==> cMEM f0 clist_pairs f1 c= c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 f4 c= c==> cMEM f0 cCOND cT clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 c==> cMEM f0 clist_pairs f1 f4
+ |- (((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) ==> ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))) = ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))))
T c= c==> c==> cMEM f0 cfind_list cMAP part clist_pairs f1 f2 c= c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1 c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1 c= c==> cMEM f0 cCOND cF clist_pairs f3 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1 c==> cMEM f0 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1 c= c==> cMEM f0 cCOND cF clist_pairs f3 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1 c==> cMEM f0 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1
+ |- (((MEM d) NIL) ==> ((MEM d) NIL))
T c==> cMEM f0 cNIL cMEM f0 cNIL
+ |- (((!q'. ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) = p') ==> ((p' ==> ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = q')) ==> ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (p' ==> q'))))) ==> ((\q'. ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) = p') ==> ((p' ==> ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = q')) ==> ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (p' ==> q'))))) q')) = ((\q'. ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) = p') ==> ((p' ==> ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = q')) ==> ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cMEM f0 cCOND cT clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 f4 c==> c==> f4 c= c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 b0 c= c==> cMEM f0 cCOND cT clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 c==> f4 b0 * / c==> c= cMEM f0 cCOND cT clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 f4 c==> c==> f4 c= c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 b0 c= c==> cMEM f0 cCOND cT clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 c==> f4 b0 f5 * / c==> c= cMEM f0 cCOND cT clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 f4 c==> c==> f4 c= c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 b0 c= c==> cMEM f0 cCOND cT clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 c==> f4 b0 f5
+ |- ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) (((\list. (\a. ((cat (list_pairs list)) a))) h) (list_of_darts t)))) = (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) ((cat (list_pairs h)) (list_of_darts t)))))
T c= c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 * * / / ccat clist_pairs b0 b1 f2 clist_of_darts f3 c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 ccat clist_pairs f2 clist_of_darts f3
+ |- ((\p'. (!q'. ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) = p') ==> ((p' ==> (((MEM d) ((cat (list_pairs h)) (list_of_darts t))) = q')) ==> ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) ((cat (list_pairs h)) (list_of_darts t)))) = (p' ==> q')))))) p')
T * / ! c==> c= cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 b0 c==> c==> b0 c= cMEM f0 ccat clist_pairs f2 clist_of_darts f3 b1 c= c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 ccat clist_pairs f2 clist_of_darts f3 c==> b0 b1 f4
+ |- ((\P. (P = ((ssreflect_eq mem_y) P))) P)
T * / c= b0 cssreflect_eq f0 b0 f1
- |- (!L1. (((\L1. (L = L1)) L1) ==> (?L1. (L = L1))))
T c==> * / c= f0 b0 f1 c? / c= f0 b0
+ |- (((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c==> cMEM f3 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4
- |- ((\L1. (L = L1)) L)
T * / c= f0 b0 f0
+ (((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))) |- (((!x. (((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = x)) ==> (((MEM d) (((COND x) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))) ==> ((\x. (((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = x)) ==> (((MEM d) (((COND x) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))) x)) = ((\x. (((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = x)) ==> (((MEM d) (((COND x) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))) x))
T c==> c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 c= c==> ! c==> cssreflect_eq f3 c= cMEM f2 clist_pairs f4 b0 c==> cMEM f0 cCOND b0 clist_pairs f4 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1 * / c==> cssreflect_eq f3 c= cMEM f2 clist_pairs f4 b0 c==> cMEM f0 cCOND b0 clist_pairs f4 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1 f5 * / c==> cssreflect_eq f3 c= cMEM f2 clist_pairs f4 b0 c==> cMEM f0 cCOND b0 clist_pairs f4 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1 f5
+ |- ((((MEM y) (list_pairs h)) = ((MEM y) (list_pairs h))) = ((\x. (((MEM y) (list_pairs h)) = x)) ((MEM y) (list_pairs h))))
T c= c= cMEM f0 clist_pairs f1 cMEM f0 clist_pairs f1 * / c= cMEM f0 clist_pairs f1 b0 cMEM f0 clist_pairs f1
+ |- ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) = p') ==> ((p' ==> ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = q')) ==> ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (p' ==> q'))))
T c==> c= cMEM f0 cCOND cT clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 f4 c==> c==> f4 c= c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 f5 c= c==> cMEM f0 cCOND cT clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 c==> f4 f5
+ |- ((((MEM d) ((find_face NIL) y)) ==> ((MEM d) (list_of_darts NIL))) /\ (!a0. (!a1. ((((MEM d) ((find_face a1) y)) ==> ((MEM d) (list_of_darts a1))) ==> (((MEM d) ((find_face ((CONS a0) a1)) y)) ==> ((MEM d) (list_of_darts ((CONS a0) a1))))))))
T c/\ c==> cMEM f0 cfind_face cNIL f1 cMEM f0 clist_of_darts cNIL ! ! c==> c==> cMEM f0 cfind_face b1 f1 cMEM f0 clist_of_darts b1 c==> cMEM f0 cfind_face cCONS b0 b1 f1 cMEM f0 clist_of_darts cCONS b0 b1
- |- (((!P. (((ssreflect_eq v) P) = P)) ==> ((\P. (((ssreflect_eq v) P) = P)) P)) = ((\P. (((ssreflect_eq v) P) = P)) P))
T c= c==> ! c= cssreflect_eq f0 b0 b0 * / c= cssreflect_eq f0 b0 b0 f1 * / c= cssreflect_eq f0 b0 b0 f1
+ ((\x. (((MEM y) (list_pairs h)) = x)) x) |- (((MEM y) (list_pairs h)) = x)
T c==> * / c= cMEM f0 clist_pairs f1 b0 f2 c= cMEM f0 clist_pairs f1 f2
+ |- ((\L. (((MAP list_pairs) L) = (list_of_faces L))) L)
T * / c= cMAP part clist_pairs b0 clist_of_faces b0 f0
+ |- (?x. (((MEM y) (list_pairs h)) = x))
T c? / c= cMEM f0 clist_pairs f1 b0
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))), ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 c/\ ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! * f0 b0
- |- ((\P. (((ssreflect_eq v) P) = P)) P)
T * / c= cssreflect_eq f0 b0 b0 f1
+ |- (((!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t))))) ==> ((\h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t))))) h)) = ((\h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t))))) h))
T c= c==> ! ! c= cMAP f0 cCONS b0 b1 cCONS * f0 b0 cMAP f0 b1 * / ! c= cMAP f0 cCONS b0 b1 cCONS * f0 b0 cMAP f0 b1 f1 * / ! c= cMAP f0 cCONS b0 b1 cCONS * f0 b0 cMAP f0 b1 f1
+ |- ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) = p') ==> ((p' ==> (((MEM d) ((cat (list_pairs h)) (list_of_darts t))) = q')) ==> ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) ((cat (list_pairs h)) (list_of_darts t)))) = (p' ==> q'))))
T c==> c= cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 f4 c==> c==> f4 c= cMEM f0 ccat clist_pairs f2 clist_of_darts f3 f5 c= c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 ccat clist_pairs f2 clist_of_darts f3 c==> f4 f5
+ |- (((!q'. ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) = p') ==> ((p' ==> ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = q')) ==> ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (p' ==> q'))))) ==> ((\q'. ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) = p') ==> ((p' ==> ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = q')) ==> ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (p' ==> q'))))) q')) = ((\q'. ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) = p') ==> ((p' ==> ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = q')) ==> ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cMEM f0 cCOND cF clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 f4 c==> c==> f4 c= c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 b0 c= c==> cMEM f0 cCOND cF clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 c==> f4 b0 * / c==> c= cMEM f0 cCOND cF clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 f4 c==> c==> f4 c= c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 b0 c= c==> cMEM f0 cCOND cF clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 c==> f4 b0 f5 * / c==> c= cMEM f0 cCOND cF clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 f4 c==> c==> f4 c= c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 b0 c= c==> cMEM f0 cCOND cF clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 c==> f4 b0 f5
+ (((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))) |- (((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = x)) ==> (((MEM d) (((COND x) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))
T c==> c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 c==> cssreflect_eq f3 c= cMEM f2 clist_pairs f4 f5 c==> cMEM f0 cCOND f5 clist_pairs f4 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1
+ |- ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))
T c= c==> cMEM f0 cCOND cF clist_pairs f1 cfind_list cMAP part clist_pairs f2 f3 c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 c==> cMEM f0 cfind_list cMAP part clist_pairs f2 f3 c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2
+ |- (((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) = ((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)))) ==> ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) ((cat (list_pairs h)) (list_of_darts t))) = q')) ==> ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) ((cat (list_pairs h)) (list_of_darts t)))) = (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> q')))) = ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) ((cat (list_pairs h)) (list_of_darts t))) = q')) ==> ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) ((cat (list_pairs h)) (list_of_darts t)))) = (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> q'))))
T c= c==> c= cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 c==> c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 c= cMEM f0 ccat clist_pairs f2 clist_of_darts f3 f4 c= c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 ccat clist_pairs f2 clist_of_darts f3 c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 f4 c==> c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 c= cMEM f0 ccat clist_pairs f2 clist_of_darts f3 f4 c= c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 ccat clist_pairs f2 clist_of_darts f3 c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 f4
- ((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) |- (~ ((MEM y) (list_pairs h)))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c~ cMEM f1 clist_pairs f2
+ |- ((\q'. ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = F)) = p') ==> ((p' ==> ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = F)) ==> (((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF f3 c==> c==> f3 c= c==> cMEM f4 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c==> cMEM f4 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 c==> f3 b0 f6
+ |- (((find_list ((CONS h) t)) x) = (((COND ((MEM x) h)) h) ((find_list t) x)))
T c= cfind_list cCONS f0 f1 f2 cCOND cMEM f2 f0 f0 cfind_list f1 f2
+ |- (((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P)) = ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P))
T c= c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0 * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0
+ ((MEM d) (list_of_darts t)) |- (((MEM d) (list_of_darts t)) = T)
T c==> cMEM f0 clist_of_darts f1 c= cMEM f0 clist_of_darts f1 cT
- |- (((!p'. (!q'. ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) = p') ==> ((p' ==> ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) = p') ==> ((p' ==> ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) = p') ==> ((p' ==> ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 b0 c==> c==> b0 c= c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 b1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 b0 c==> c==> b0 c= c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 b1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> b0 b1 f5 * / ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 b0 c==> c==> b0 c= c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 b1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> b0 b1 f5
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))), ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- (!x. (P x))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
- (((MEM y) (list_pairs h)) = x) |- ((\x. (((MEM y) (list_pairs h)) = x)) x)
T c==> c= cMEM f0 clist_pairs f1 f2 * / c= cMEM f0 clist_pairs f1 b0 f2
+ (((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))) |- (((MEM d) ((find_face t) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))
T c==> c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 c==> cMEM f0 cfind_face f1 f2 c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1
- |- (((((MEM y) (list_pairs h)) = ((MEM y) (list_pairs h))) ==> ((((MEM y) (list_pairs h)) ==> ((list_pairs h) = t')) ==> (((~ ((MEM y) (list_pairs h))) ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND ((MEM y) (list_pairs h))) t') e'))))) = ((((MEM y) (list_pairs h)) ==> ((list_pairs h) = t')) ==> (((~ ((MEM y) (list_pairs h))) ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND ((MEM y) (list_pairs h))) t') e')))))
T c= c==> c= cMEM f0 clist_pairs f1 cMEM f0 clist_pairs f1 c==> c==> cMEM f0 clist_pairs f1 c= clist_pairs f1 f2 c==> c==> c~ cMEM f0 clist_pairs f1 c= cfind_list cMAP part clist_pairs f3 f0 f4 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f3 f0 cCOND cMEM f0 clist_pairs f1 f2 f4 c==> c==> cMEM f0 clist_pairs f1 c= clist_pairs f1 f2 c==> c==> c~ cMEM f0 clist_pairs f1 c= cfind_list cMAP part clist_pairs f3 f0 f4 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f3 f0 cCOND cMEM f0 clist_pairs f1 f2 f4
- |- (((~ ((MEM y) (list_pairs h))) ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND ((MEM y) (list_pairs h))) (list_pairs h)) e')))
T c==> c==> c~ cMEM f0 clist_pairs f1 c= cfind_list cMAP part clist_pairs f2 f0 f3 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f2 f0 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 f3
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- (!x. (P x))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF ! * f0 b0
- |- ((~ ((MEM y) (list_pairs h))) ==> (((find_list ((MAP list_pairs) t)) y) = ((find_list ((MAP list_pairs) t)) y)))
T c==> c~ cMEM f0 clist_pairs f1 c= cfind_list cMAP part clist_pairs f2 f0 cfind_list cMAP part clist_pairs f2 f0
+ |- ((((MEM d) ((find_face t) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (((MEM d) ((find_list (list_of_faces t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))
T c= c==> cMEM f0 cfind_face f1 f2 c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1 c==> cMEM f0 cfind_list clist_of_faces f1 f2 c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1
+ ((MEM d) (list_pairs h)) |- (((MEM d) (list_pairs h)) /\ ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = T))
T c==> cMEM f0 clist_pairs f1 c/\ cMEM f0 clist_pairs f1 c= c\/ cMEM f0 clist_pairs f1 cMEM f0 clist_of_darts f2 cT
+ (((MEM y) (list_pairs h)) = x) |- ((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = x))
T c==> c= cMEM f0 clist_pairs f1 f2 cssreflect_eq f3 c= cMEM f0 clist_pairs f1 f2
- |- ((((MEM y) (list_pairs h)) ==> ((list_pairs h) = t')) ==> (((~ ((MEM y) (list_pairs h))) ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND ((MEM y) (list_pairs h))) t') e'))))
T c==> c==> cMEM f0 clist_pairs f1 c= clist_pairs f1 f2 c==> c==> c~ cMEM f0 clist_pairs f1 c= cfind_list cMAP part clist_pairs f3 f0 f4 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f3 f0 cCOND cMEM f0 clist_pairs f1 f2 f4
+ |- ((\L. ((list_of_darts L) = (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) L))) L)
T * / c= clist_of_darts b0 cfoldr / / ccat clist_pairs b1 b2 cNIL b0 f0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- (((find_list NIL) x) = NIL)
T c= cfind_list cNIL f0 cNIL
- |- (((!e'. ((((MEM y) (list_pairs h)) = g') ==> ((g' ==> ((list_pairs h) = t')) ==> (((~ g') ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND g') t') e')))))) ==> ((\e'. ((((MEM y) (list_pairs h)) = g') ==> ((g' ==> ((list_pairs h) = t')) ==> (((~ g') ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND g') t') e')))))) e')) = ((\e'. ((((MEM y) (list_pairs h)) = g') ==> ((g' ==> ((list_pairs h) = t')) ==> (((~ g') ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> f2 c= clist_pairs f1 f3 c==> c==> c~ f2 c= cfind_list cMAP part clist_pairs f4 f0 b0 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f4 f0 cCOND f2 f3 b0 * / c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> f2 c= clist_pairs f1 f3 c==> c==> c~ f2 c= cfind_list cMAP part clist_pairs f4 f0 b0 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f4 f0 cCOND f2 f3 b0 f5 * / c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> f2 c= clist_pairs f1 f3 c==> c==> c~ f2 c= cfind_list cMAP part clist_pairs f4 f0 b0 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f4 f0 cCOND f2 f3 b0 f5
- |- ((\z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))) z0)
T * / c/\ c= cfoldr f0 b0 cCONS f1 f2 * * f0 f1 cfoldr f0 b0 f2 c= cfoldr f0 b0 cNIL b0 f3
+ |- ((((MEM d) ((find_list ((MAP list_pairs) ((CONS h) t))) y)) ==> ((MEM d) (((\list. (\a. ((cat (list_pairs list)) a))) h) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) t)))) = (((MEM d) ((find_list (list_of_faces ((CONS h) t))) y)) ==> ((MEM d) (((\list. (\a. ((cat (list_pairs list)) a))) h) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) t)))))
T c= c==> cMEM f0 cfind_list cMAP part clist_pairs cCONS f1 f2 f3 cMEM f0 * * / / ccat clist_pairs b0 b1 f1 cfoldr / / ccat clist_pairs b0 b1 cNIL f2 c==> cMEM f0 cfind_list clist_of_faces cCONS f1 f2 f3 cMEM f0 * * / / ccat clist_pairs b0 b1 f1 cfoldr / / ccat clist_pairs b0 b1 cNIL f2
+ |- (((!q'. ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) = p') ==> ((p' ==> ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = q')) ==> ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (p' ==> q'))))) ==> ((\q'. ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) = p') ==> ((p' ==> ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = q')) ==> ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (p' ==> q'))))) q')) = ((\q'. ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) = p') ==> ((p' ==> ((((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))) = q')) ==> ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cMEM f0 cfind_list cMAP part clist_pairs f1 f2 f3 c==> c==> f3 c= c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1 b0 c= c==> cMEM f0 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1 c==> f3 b0 * / c==> c= cMEM f0 cfind_list cMAP part clist_pairs f1 f2 f3 c==> c==> f3 c= c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1 b0 c= c==> cMEM f0 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1 c==> f3 b0 f5 * / c==> c= cMEM f0 cfind_list cMAP part clist_pairs f1 f2 f3 c==> c==> f3 c= c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1 b0 c= c==> cMEM f0 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1 c==> f3 b0 f5
- |- ((L = L1) = ((\L1. (L = L1)) L1))
T c= c= f0 f1 * / c= f0 b0 f1
+ (((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))) |- ((\x. (((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = x)) ==> (((MEM d) (((COND x) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))) x)
T c==> c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 * / c==> cssreflect_eq f3 c= cMEM f2 clist_pairs f4 b0 c==> cMEM f0 cCOND b0 clist_pairs f4 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1 f5
- |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ (((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))) |- (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) (((\list. (\a. ((cat (list_pairs list)) a))) h) (list_of_darts t))))
T c==> c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 c==> cMEM f0 cCOND cMEM f2 clist_pairs f3 clist_pairs f3 cfind_list cMAP part clist_pairs f1 f2 cMEM f0 * * / / ccat clist_pairs b0 b1 f3 clist_of_darts f1
+ |- ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) = p') ==> ((p' ==> (((MEM d) (((\list. (\a. ((cat (list_pairs list)) a))) h) (list_of_darts t))) = q')) ==> ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) (((\list. (\a. ((cat (list_pairs list)) a))) h) (list_of_darts t)))) = (p' ==> q'))))
T c==> c= cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 f4 c==> c==> f4 c= cMEM f0 * * / / ccat clist_pairs b0 b1 f2 clist_of_darts f3 f5 c= c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 * * / / ccat clist_pairs b0 b1 f2 clist_of_darts f3 c==> f4 f5
+ (((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))) |- (!x. (((\x. (((MEM y) (list_pairs h)) = x)) x) ==> (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))))
T c==> c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 ! c==> * / c= cMEM f2 clist_pairs f3 b1 b0 c==> cMEM f0 cCOND cMEM f2 clist_pairs f3 clist_pairs f3 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1
+ |- ((((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) L) = (list_of_darts L))
T c= cfoldr / / ccat clist_pairs b0 b1 cNIL f0 clist_of_darts f0
- |- (((((MEM y) (list_pairs h)) ==> ((list_pairs h) = (list_pairs h))) ==> (((~ ((MEM y) (list_pairs h))) ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND ((MEM y) (list_pairs h))) (list_pairs h)) e')))) = (((~ ((MEM y) (list_pairs h))) ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND ((MEM y) (list_pairs h))) (list_pairs h)) e'))))
T c= c==> c==> cMEM f0 clist_pairs f1 c= clist_pairs f1 clist_pairs f1 c==> c==> c~ cMEM f0 clist_pairs f1 c= cfind_list cMAP part clist_pairs f2 f0 f3 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f2 f0 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 f3 c==> c==> c~ cMEM f0 clist_pairs f1 c= cfind_list cMAP part clist_pairs f2 f0 f3 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f2 f0 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 f3
+ |- (((!L. ((list_of_darts L) = (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) L))) ==> ((\L. ((list_of_darts L) = (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) L))) L)) = ((\L. ((list_of_darts L) = (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) L))) L))
T c= c==> ! c= clist_of_darts b0 cfoldr / / ccat clist_pairs b1 b2 cNIL b0 * / c= clist_of_darts b0 cfoldr / / ccat clist_pairs b1 b2 cNIL b0 f0 * / c= clist_of_darts b0 cfoldr / / ccat clist_pairs b1 b2 cNIL b0 f0
- |- (!L1. (((\L1. (L = L1)) L1) ==> (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L)))))
T c==> * / c= f0 b0 f1 c==> cMEM f2 cfind_face f0 f3 cMEM f2 clist_of_darts f0
- |- (((MEM y) (list_pairs h)) ==> ((list_pairs h) = (list_pairs h)))
T c==> cMEM f0 clist_pairs f1 c= clist_pairs f1 clist_pairs f1
+ |- (((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))) ==> ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = F)) ==> (((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))))) = ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = F)) ==> (((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))))
T c= c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c==> cMEM f3 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c==> cMEM f3 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c==> cMEM f3 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4
- |- ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) ((cat (list_pairs h)) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) t)))) = (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) (((\list. (\a. ((cat (list_pairs list)) a))) h) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) t)))))
T c= c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 ccat clist_pairs f2 cfoldr / / ccat clist_pairs b0 b1 cNIL f3 c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 * * / / ccat clist_pairs b0 b1 f2 cfoldr / / ccat clist_pairs b0 b1 cNIL f3
- |- (((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))) = (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))))
T c= c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1
- |- ((\f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))) f)
T * / ! c/\ c= cfoldr b0 b1 cCONS f0 f1 * * b0 f0 cfoldr b0 b1 f1 c= cfoldr b0 b1 cNIL b1 f2
+ |- (((MEM d) ((find_list (list_of_faces NIL)) y)) ==> ((MEM d) (list_of_darts NIL)))
T c==> cMEM f0 cfind_list clist_of_faces cNIL f1 cMEM f0 clist_of_darts cNIL
+ (((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))) |- ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = T)) ==> (((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) /\ (((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = F)) ==> (((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))))
T c==> c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 c/\ c==> cssreflect_eq f3 c= cMEM f2 clist_pairs f4 cT c==> cMEM f0 cCOND cT clist_pairs f4 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1 c==> cssreflect_eq f3 c= cMEM f2 clist_pairs f4 cF c==> cMEM f0 cCOND cF clist_pairs f4 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f4 cMEM f0 clist_of_darts f1
- |- (((!x. (((\x. (((MEM y) (list_pairs h)) = x)) x) ==> (?x. (((MEM y) (list_pairs h)) = x)))) ==> ((?x. (((MEM y) (list_pairs h)) = x)) ==> (?x. (((MEM y) (list_pairs h)) = x)))) = ((?x. (((MEM y) (list_pairs h)) = x)) ==> (?x. (((MEM y) (list_pairs h)) = x))))
T c= c==> ! c==> * / c= cMEM f0 clist_pairs f1 b1 b0 c? / c= cMEM f0 clist_pairs f1 b1 c==> c? / c= cMEM f0 clist_pairs f1 b0 c? / c= cMEM f0 clist_pairs f1 b0 c==> c? / c= cMEM f0 clist_pairs f1 b0 c? / c= cMEM f0 clist_pairs f1 b0
+ |- (((!q'. ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) = p') ==> ((p' ==> (((MEM d) ((cat (list_pairs h)) (list_of_darts t))) = q')) ==> ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) ((cat (list_pairs h)) (list_of_darts t)))) = (p' ==> q'))))) ==> ((\q'. ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) = p') ==> ((p' ==> (((MEM d) ((cat (list_pairs h)) (list_of_darts t))) = q')) ==> ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) ((cat (list_pairs h)) (list_of_darts t)))) = (p' ==> q'))))) q')) = ((\q'. ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) = p') ==> ((p' ==> (((MEM d) ((cat (list_pairs h)) (list_of_darts t))) = q')) ==> ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) ((cat (list_pairs h)) (list_of_darts t)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 f4 c==> c==> f4 c= cMEM f0 ccat clist_pairs f2 clist_of_darts f3 b0 c= c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 ccat clist_pairs f2 clist_of_darts f3 c==> f4 b0 * / c==> c= cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 f4 c==> c==> f4 c= cMEM f0 ccat clist_pairs f2 clist_of_darts f3 b0 c= c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 ccat clist_pairs f2 clist_of_darts f3 c==> f4 b0 f5 * / c==> c= cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 f4 c==> c==> f4 c= cMEM f0 ccat clist_pairs f2 clist_of_darts f3 b0 c= c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 ccat clist_pairs f2 clist_of_darts f3 c==> f4 b0 f5
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))), ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 c/\ c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
- |- ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) = p') ==> ((p' ==> ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f3 c==> c==> f3 c= c==> cMEM f4 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 f6 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f4 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 c==> f3 f6
+ |- ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = F)) ==> (((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> q')))
T c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c==> cMEM f3 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 f5 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c==> cMEM f3 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f5
+ |- (((!d. (((find_face L) d) = ((find_list (list_of_faces L)) d))) ==> ((\d. (((find_face L) d) = ((find_list (list_of_faces L)) d))) d)) = ((\d. (((find_face L) d) = ((find_list (list_of_faces L)) d))) d))
T c= c==> ! c= cfind_face f0 b0 cfind_list clist_of_faces f0 b0 * / c= cfind_face f0 b0 cfind_list clist_of_faces f0 b0 f1 * / c= cfind_face f0 b0 cfind_list clist_of_faces f0 b0 f1
+ (((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))) |- ((((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))) /\ (((MEM d) ((find_face ((CONS h) t)) y)) ==> ((MEM d) (list_of_darts ((CONS h) t)))))
T c==> c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 c/\ c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 c==> cMEM f0 cfind_face cCONS f3 f1 f2 cMEM f0 clist_of_darts cCONS f3 f1
+ |- (((MEM d) ((find_list (list_of_faces NIL)) y)) ==> ((MEM d) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) NIL)))
T c==> cMEM f0 cfind_list clist_of_faces cNIL f1 cMEM f0 cfoldr / / ccat clist_pairs b0 b1 cNIL cNIL
+ |- ((((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) ((cat (list_pairs h)) (list_of_darts t)))))
T c= c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 c\/ cMEM f0 clist_pairs f2 cMEM f0 clist_of_darts f3 c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 cMEM f0 ccat clist_pairs f2 clist_of_darts f3
- ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> (!x. (P x)))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! * f0 b0
- |- (((?L1. (L = L1)) ==> (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L)))) = (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L))))
T c= c==> c? / c= f0 b0 c==> cMEM f1 cfind_face f0 f2 cMEM f1 clist_of_darts f0 c==> cMEM f1 cfind_face f0 f2 cMEM f1 clist_of_darts f0
- ((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) |- (((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) /\ ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c/\ cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4
+ |- ((\x. (((MEM y) (list_pairs h)) = x)) ((MEM y) (list_pairs h)))
T * / c= cMEM f0 clist_pairs f1 b0 cMEM f0 clist_pairs f1
+ (((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))) |- (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> ((MEM d) ((cat (list_pairs h)) (list_of_darts t))))
T c==> c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 c==> cMEM f0 cCOND cMEM f2 clist_pairs f3 clist_pairs f3 cfind_list cMAP part clist_pairs f1 f2 cMEM f0 ccat clist_pairs f3 clist_of_darts f1
- ((MEM d) ((find_list ((MAP list_pairs) t)) y)) |- (((MEM d) ((find_list ((MAP list_pairs) t)) y)) = T)
T c==> cMEM f0 cfind_list cMAP part clist_pairs f1 f2 c= cMEM f0 cfind_list cMAP part clist_pairs f1 f2 cT
+ |- ((\h. (!t. (!x. ((((find_list NIL) x) = NIL) /\ (((find_list ((CONS h) t)) x) = (((COND ((MEM x) h)) h) ((find_list t) x))))))) h)
T * / ! ! c/\ c= cfind_list cNIL b2 cNIL c= cfind_list cCONS b0 b1 b2 cCOND cMEM b2 b0 b0 cfind_list b1 b2 f0
+ |- ((\p'. (!q'. ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = T)) = p') ==> ((p' ==> ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = T)) ==> (((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (p' ==> q')))))) p')
T * / ! c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT b0 c==> c==> b0 c= c==> cMEM f3 cCOND cT clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 b1 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT c==> cMEM f3 cCOND cT clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> b0 b1 f5
+ |- ((\P. (((P T) /\ (P F)) ==> (!x. (P x)))) P)
T * / c==> c/\ * b0 cT * b0 cF ! * b0 b1 f0
- (((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))) |- ((((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))) = T)
T c==> c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 c= c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 cT
+ |- (((!q'. ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = T)) = p') ==> ((p' ==> ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = T)) ==> (((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = T)) = p') ==> ((p' ==> ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = T)) ==> (((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = T)) = p') ==> ((p' ==> ((((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (((MEM y) (list_pairs h)) = T)) ==> (((MEM d) (((COND T) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT f3 c==> c==> f3 c= c==> cMEM f4 cCOND cT clist_pairs f2 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT c==> cMEM f4 cCOND cT clist_pairs f2 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 c==> f3 b0 * / c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT f3 c==> c==> f3 c= c==> cMEM f4 cCOND cT clist_pairs f2 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT c==> cMEM f4 cCOND cT clist_pairs f2 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 c==> f3 b0 f6 * / c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT f3 c==> c==> f3 c= c==> cMEM f4 cCOND cT clist_pairs f2 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT c==> cMEM f4 cCOND cT clist_pairs f2 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 c==> f3 b0 f6
+ |- ((\L. ((list_of_faces L) = ((MAP list_pairs) L))) L)
T * / c= clist_of_faces b0 cMAP part clist_pairs b0 f0
+ |- (((!L. ((((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) L) = (list_of_darts L))) ==> ((\L. ((((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) L) = (list_of_darts L))) L)) = ((\L. ((((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) L) = (list_of_darts L))) L))
T c= c==> ! c= cfoldr / / ccat clist_pairs b1 b2 cNIL b0 clist_of_darts b0 * / c= cfoldr / / ccat clist_pairs b1 b2 cNIL b0 clist_of_darts b0 f0 * / c= cfoldr / / ccat clist_pairs b1 b2 cNIL b0 clist_of_darts b0 f0
+ |- ((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s)))
T c= cfoldr f0 f1 cCONS f2 f3 * * f0 f2 cfoldr f0 f1 f3
+ |- (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (((\list. (\a. ((cat (list_pairs list)) a))) h) (list_of_darts t))) = ((MEM d) ((cat (list_pairs h)) (list_of_darts t)))))
T c==> cMEM f0 cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_list cMAP part clist_pairs f3 f1 c= cMEM f0 * * / / ccat clist_pairs b0 b1 f2 clist_of_darts f3 cMEM f0 ccat clist_pairs f2 clist_of_darts f3
- |- ((?L1. (L = L1)) ==> (?L1. (L = L1)))
T c==> c? / c= f0 b0 c? / c= f0 b0
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
+ |- ((\h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t))))) h)
T * / ! c= cMAP f0 cCONS b0 b1 cCONS * f0 b0 cMAP f0 b1 f1
+ |- (((((MEM d) ((find_face NIL) y)) ==> ((MEM d) (list_of_darts NIL))) /\ (!a0. (!a1. ((((MEM d) ((find_face a1) y)) ==> ((MEM d) (list_of_darts a1))) ==> (((MEM d) ((find_face ((CONS a0) a1)) y)) ==> ((MEM d) (list_of_darts ((CONS a0) a1)))))))) ==> (!L. (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L)))))
T c==> c/\ c==> cMEM f0 cfind_face cNIL f1 cMEM f0 clist_of_darts cNIL ! ! c==> c==> cMEM f0 cfind_face b1 f1 cMEM f0 clist_of_darts b1 c==> cMEM f0 cfind_face cCONS b0 b1 f1 cMEM f0 clist_of_darts cCONS b0 b1 ! c==> cMEM f0 cfind_face b0 f1 cMEM f0 clist_of_darts b0
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) |- ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P)
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0
- |- ((\s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))))) s)
T * / ! ! c/\ c= cfoldr b1 b2 cCONS f0 b0 * * b1 f0 cfoldr b1 b2 b0 c= cfoldr b1 b2 cNIL b2 f1
+ (((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))) |- ((?x. (((MEM y) (list_pairs h)) = x)) ==> (((MEM d) (((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))
T c==> c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 c==> c? / c= cMEM f2 clist_pairs f3 b0 c==> cMEM f0 cCOND cMEM f2 clist_pairs f3 clist_pairs f3 cfind_list cMAP part clist_pairs f1 f2 c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1
- |- ((((\L1. (L = L1)) L1) ==> (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L)))) = T)
T c= c==> * / c= f0 b0 f1 c==> cMEM f2 cfind_face f0 f3 cMEM f2 clist_of_darts f0 cT
+ |- ((!a1. ((((MEM d) ((find_face a1) y)) ==> ((MEM d) (list_of_darts a1))) ==> (((MEM d) ((find_face ((CONS h) a1)) y)) ==> ((MEM d) (list_of_darts ((CONS h) a1)))))) = T)
T c= ! c==> c==> cMEM f0 cfind_face b0 f1 cMEM f0 clist_of_darts b0 c==> cMEM f0 cfind_face cCONS f2 b0 f1 cMEM f0 clist_of_darts cCONS f2 b0 cT
+ (((ssreflect_eq mem_y) P) = P) |- (P = ((ssreflect_eq mem_y) P))
T c==> c= cssreflect_eq f0 f1 f1 c= f1 cssreflect_eq f0 f1
- (L = L1) |- (L1 = L)
T c==> c= f0 f1 c= f1 f0
+ |- (!a0. (!a1. ((((MEM d) ((find_face a1) y)) ==> ((MEM d) (list_of_darts a1))) ==> (((MEM d) ((find_face ((CONS a0) a1)) y)) ==> ((MEM d) (list_of_darts ((CONS a0) a1)))))))
T c==> c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 c==> cMEM f0 cfind_face cCONS f3 f1 f2 cMEM f0 clist_of_darts cCONS f3 f1
+ ((list_of_faces L) = ((MAP list_pairs) L)) |- (((MAP list_pairs) L) = (list_of_faces L))
T c==> c= clist_of_faces f0 cMAP part clist_pairs f0 c= cMAP part clist_pairs f0 clist_of_faces f0
+ |- ((t = T) = t)
T c= c= f0 cT f0
+ |- ((\L. (!d. (((find_face L) d) = ((find_list (list_of_faces L)) d)))) L)
T * / ! c= cfind_face b0 b1 cfind_list clist_of_faces b0 b1 f0
+ ((list_of_darts L) = (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) L)) |- ((((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) L) = (list_of_darts L))
T c==> c= clist_of_darts f0 cfoldr / / ccat clist_pairs b0 b1 cNIL f0 c= cfoldr / / ccat clist_pairs b0 b1 cNIL f0 clist_of_darts f0
+ |- ((((MEM d) ((find_list ((MAP list_pairs) NIL)) y)) ==> ((MEM d) NIL)) = (((MEM d) ((find_list (list_of_faces NIL)) y)) ==> ((MEM d) NIL)))
T c= c==> cMEM f0 cfind_list cMAP part clist_pairs cNIL f1 cMEM f0 cNIL c==> cMEM f0 cfind_list clist_of_faces cNIL f1 cMEM f0 cNIL
+ (((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))) |- (((MEM d) ((find_list ((MAP list_pairs) ((CONS h) t))) y)) ==> ((MEM d) (((\list. (\a. ((cat (list_pairs list)) a))) h) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) t))))
T c==> c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 c==> cMEM f0 cfind_list cMAP part clist_pairs cCONS f3 f1 f2 cMEM f0 * * / / ccat clist_pairs b0 b1 f3 cfoldr / / ccat clist_pairs b0 b1 cNIL f1
+ |- ((((MEM d) ((find_list (list_of_faces NIL)) y)) ==> ((MEM d) (((foldr (\list. (\a. ((cat (list_pairs list)) a)))) NIL) NIL))) = (((MEM d) ((find_list (list_of_faces NIL)) y)) ==> ((MEM d) (list_of_darts NIL))))
T c= c==> cMEM f0 cfind_list clist_of_faces cNIL f1 cMEM f0 cfoldr / / ccat clist_pairs b0 b1 cNIL cNIL c==> cMEM f0 cfind_list clist_of_faces cNIL f1 cMEM f0 clist_of_darts cNIL
+ (((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))), ((MEM d) ((find_face t) y)) |- ((((MEM d) (list_of_darts t)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))
T c==> c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 c==> cMEM f0 cfind_face f1 f2 c= c==> cMEM f0 clist_of_darts f1 c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1 c\/ cMEM f0 clist_pairs f3 cMEM f0 clist_of_darts f1
+ ((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) |- (((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) /\ ((((MEM d) (((COND F) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y))) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c/\ cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c==> cMEM f3 cCOND cF clist_pairs f2 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4
+ (((MEM d) ((find_face t) y)) ==> ((MEM d) (list_of_darts t))), ((MEM d) ((find_face t) y)) |- ((MEM d) (list_of_darts t))
T c==> c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1 c==> cMEM f0 cfind_face f1 f2 cMEM f0 clist_of_darts f1
- ((\L1. (L = L1)) L1) |- (((L = L1) ==> (?L1. (L = L1))) = (?L1. (L = L1)))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c? / c= f0 b0 c? / c= f0 b0
- ((\x. (((MEM y) (list_pairs h)) = x)) x) |- (((((MEM y) (list_pairs h)) = x) ==> (?x. (((MEM y) (list_pairs h)) = x))) = (?x. (((MEM y) (list_pairs h)) = x)))
T c==> * / c= cMEM f0 clist_pairs f1 b0 f2 c= c==> c= cMEM f0 clist_pairs f1 f2 c? / c= cMEM f0 clist_pairs f1 b0 c? / c= cMEM f0 clist_pairs f1 b0
- |- (((!x. (((\L1. (L = L1)) x) ==> (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L))))) ==> ((?L1. (L = L1)) ==> (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L))))) = ((?L1. (L = L1)) ==> (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L)))))
T c= c==> ! c==> * / c= f0 b1 b0 c==> cMEM f1 cfind_face f0 f2 cMEM f1 clist_of_darts f0 c==> c? / c= f0 b0 c==> cMEM f1 cfind_face f0 f2 cMEM f1 clist_of_darts f0 c==> c? / c= f0 b0 c==> cMEM f1 cfind_face f0 f2 cMEM f1 clist_of_darts f0
- |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1
- |- ((L = L) = ((\L1. (L = L1)) L))
T c= c= f0 f0 * / c= f0 b0 f0
- ((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) |- (((MEM y) (list_pairs h)) = F)
T c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= cMEM f1 clist_pairs f2 cF
- |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
- ((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) |- (((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) = T)
T c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 cT
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((((P T) /\ (P F)) ==> (!x. (P x))) = T)
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c= c==> c/\ * f0 cT * f0 cF ! * f0 b0 cT
- |- (((!L. (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L)))) ==> ((\L. (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L)))) L1)) = ((\L. (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L)))) L1))
T c= c==> ! c==> cMEM f0 cfind_face b0 f1 cMEM f0 clist_of_darts b0 * / c==> cMEM f0 cfind_face b0 f1 cMEM f0 clist_of_darts b0 f2 * / c==> cMEM f0 cfind_face b0 f1 cMEM f0 clist_of_darts b0 f2
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- ((\L1. (L = L1)) L1) |- (L = L1)
T c==> * / c= f0 b0 f1 c= f0 f1
- (L = L1) |- ((L = L1) /\ (?L1. (L = L1)))
T c==> c= f0 f1 c/\ c= f0 f1 c? / c= f0 b0
- ((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) |- (((~ ((MEM y) (list_pairs h))) ==> (((MEM y) (list_pairs h)) = F)) = (((MEM y) (list_pairs h)) = F))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c==> c~ cMEM f1 clist_pairs f2 c= cMEM f1 clist_pairs f2 cF c= cMEM f1 clist_pairs f2 cF
- (L = L1) |- ((((MEM d) ((find_face L1) y)) ==> ((MEM d) (list_of_darts L))) = (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L))))
T c==> c= f0 f1 c= c==> cMEM f2 cfind_face f1 f3 cMEM f2 clist_of_darts f0 c==> cMEM f2 cfind_face f0 f3 cMEM f2 clist_of_darts f0
- ((\L1. (L = L1)) L1) |- (((\L1. (L = L1)) L1) /\ (?L1. (L = L1)))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c? / c= f0 b0
- ((\x. (((MEM y) (list_pairs h)) = x)) x) |- (((\x. (((MEM y) (list_pairs h)) = x)) x) /\ (?x. (((MEM y) (list_pairs h)) = x)))
T c==> * / c= cMEM f0 clist_pairs f1 b0 f2 c/\ * / c= cMEM f0 clist_pairs f1 b0 f2 c? / c= cMEM f0 clist_pairs f1 b0
- (((MEM y) (list_pairs h)) = x) |- (x = ((MEM y) (list_pairs h)))
T c==> c= cMEM f0 clist_pairs f1 f2 c= f2 cMEM f0 clist_pairs f1
- (L = L1) |- (((MEM d) ((find_face L1) y)) ==> ((MEM d) (list_of_darts L)))
T c==> c= f0 f1 c==> cMEM f2 cfind_face f1 f3 cMEM f2 clist_of_darts f0
- (L = L1) |- ((((MEM d) ((find_face L1) y)) ==> ((MEM d) (list_of_darts L1))) = (((MEM d) ((find_face L1) y)) ==> ((MEM d) (list_of_darts L))))
T c==> c= f0 f1 c= c==> cMEM f2 cfind_face f1 f3 cMEM f2 clist_of_darts f1 c==> cMEM f2 cfind_face f1 f3 cMEM f2 clist_of_darts f0
- (L = L1) |- (((MEM d) ((find_face L1) y)) ==> ((MEM d) (list_of_darts L1)))
T c==> c= f0 f1 c==> cMEM f2 cfind_face f1 f3 cMEM f2 clist_of_darts f1
- |- (((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!P. (((P T) /\ (P F)) ==> (!x. (P x))))) = (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c= c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) /\ (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c/\ ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- |- (((!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))) ==> ((\z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))) z0)) = ((\z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))) z0))
T c= c==> ! c/\ c= cfoldr f0 b0 cCONS f1 f2 * * f0 f1 cfoldr f0 b0 f2 c= cfoldr f0 b0 cNIL b0 * / c/\ c= cfoldr f0 b0 cCONS f1 f2 * * f0 f1 cfoldr f0 b0 f2 c= cfoldr f0 b0 cNIL b0 f3 * / c/\ c= cfoldr f0 b0 cCONS f1 f2 * * f0 f1 cfoldr f0 b0 f2 c= cfoldr f0 b0 cNIL b0 f3
- |- ((\L. (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L)))) L1)
T * / c==> cMEM f0 cfind_face b0 f1 cMEM f0 clist_of_darts b0 f2
- |- ((\p'. (!q'. ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) = p') ==> ((p' ==> ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (p' ==> q')))))) p')
T * / ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 b0 c==> c==> b0 c= c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 b1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> b0 b1 f5
- |- (((!x. (((\L1. (L = L1)) x) ==> (?L1. (L = L1)))) ==> ((?L1. (L = L1)) ==> (?L1. (L = L1)))) = ((?L1. (L = L1)) ==> (?L1. (L = L1))))
T c= c==> ! c==> * / c= f0 b1 b0 c? / c= f0 b1 c==> c? / c= f0 b0 c? / c= f0 b0 c==> c? / c= f0 b0 c? / c= f0 b0
- |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
- |- ((L = L1) ==> (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L))))
T c==> c= f0 f1 c==> cMEM f2 cfind_face f0 f3 cMEM f2 clist_of_darts f0
- |- (((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))) ==> ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))))) = ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))))))
T c= c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4
- |- (((!g'. (!t'. (!e'. ((((MEM y) (list_pairs h)) = g') ==> ((g' ==> ((list_pairs h) = t')) ==> (((~ g') ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((MEM y) (list_pairs h)) = g') ==> ((g' ==> ((list_pairs h) = t')) ==> (((~ g') ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((MEM y) (list_pairs h)) = g') ==> ((g' ==> ((list_pairs h) = t')) ==> (((~ g') ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cMEM f0 clist_pairs f1 b0 c==> c==> b0 c= clist_pairs f1 b1 c==> c==> c~ b0 c= cfind_list cMAP part clist_pairs f2 f0 b2 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f2 f0 cCOND b0 b1 b2 * / ! ! c==> c= cMEM f0 clist_pairs f1 b0 c==> c==> b0 c= clist_pairs f1 b1 c==> c==> c~ b0 c= cfind_list cMAP part clist_pairs f2 f0 b2 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f2 f0 cCOND b0 b1 b2 f3 * / ! ! c==> c= cMEM f0 clist_pairs f1 b0 c==> c==> b0 c= clist_pairs f1 b1 c==> c==> c~ b0 c= cfind_list cMAP part clist_pairs f2 f0 b2 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f2 f0 cCOND b0 b1 b2 f3
- |- ((L = L1) ==> (?L1. (L = L1)))
T c==> c= f0 f1 c? / c= f0 b0
- |- ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))))
T c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4
- |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- |- ((?x. (((MEM y) (list_pairs h)) = x)) ==> (?x. (((MEM y) (list_pairs h)) = x)))
T c==> c? / c= cMEM f0 clist_pairs f1 b0 c? / c= cMEM f0 clist_pairs f1 b0
- |- (((!s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))))) ==> ((\s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))))) s)) = ((\s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0))))) s))
T c= c==> ! ! ! c/\ c= cfoldr b1 b2 cCONS f0 b0 * * b1 f0 cfoldr b1 b2 b0 c= cfoldr b1 b2 cNIL b2 * / ! ! c/\ c= cfoldr b1 b2 cCONS f0 b0 * * b1 f0 cfoldr b1 b2 b0 c= cfoldr b1 b2 cNIL b2 f1 * / ! ! c/\ c= cfoldr b1 b2 cCONS f0 b0 * * b1 f0 cfoldr b1 b2 b0 c= cfoldr b1 b2 cNIL b2 f1
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- (((P T) /\ (P F)) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF c/\ c/\ * f0 cT * f0 cF ! * f0 b0
- |- ((\t'. (!e'. ((((MEM y) (list_pairs h)) = g') ==> ((g' ==> ((list_pairs h) = t')) ==> (((~ g') ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> f2 c= clist_pairs f1 b0 c==> c==> c~ f2 c= cfind_list cMAP part clist_pairs f3 f0 b1 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f3 f0 cCOND f2 b0 b1 f4
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- |- (!x. (((\x. (((MEM y) (list_pairs h)) = x)) x) ==> (?x. (((MEM y) (list_pairs h)) = x))))
T c==> * / c= cMEM f0 clist_pairs f1 b0 f2 c? / c= cMEM f0 clist_pairs f1 b0
- |- (((!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))) ==> ((\f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))) f)) = ((\f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))) f))
T c= c==> ! ! c/\ c= cfoldr b0 b1 cCONS f0 f1 * * b0 f0 cfoldr b0 b1 f1 c= cfoldr b0 b1 cNIL b1 * / ! c/\ c= cfoldr b0 b1 cCONS f0 f1 * * b0 f0 cfoldr b0 b1 f1 c= cfoldr b0 b1 cNIL b1 f2 * / ! c/\ c= cfoldr b0 b1 cCONS f0 f1 * * b0 f0 cfoldr b0 b1 f1 c= cfoldr b0 b1 cNIL b1 f2
- ((ssreflect_eq mem_y) ((MEM y) (list_pairs h))) |- (((ssreflect_eq mem_y) ((MEM y) (list_pairs h))) = T)
T c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c= cssreflect_eq f0 cMEM f1 clist_pairs f2 cT
- |- (((!x. (!s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))))) ==> ((\x. (!s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))))) x)) = ((\x. (!s. (!f. (!z0. (((((foldr f) z0) ((CONS x) s)) = ((f x) (((foldr f) z0) s))) /\ ((((foldr f) z0) NIL) = z0)))))) x))
T c= c==> ! ! ! ! c/\ c= cfoldr b2 b3 cCONS b0 b1 * * b2 b0 cfoldr b2 b3 b1 c= cfoldr b2 b3 cNIL b3 * / ! ! ! c/\ c= cfoldr b2 b3 cCONS b0 b1 * * b2 b0 cfoldr b2 b3 b1 c= cfoldr b2 b3 cNIL b3 f0 * / ! ! ! c/\ c= cfoldr b2 b3 cCONS b0 b1 * * b2 b0 cfoldr b2 b3 b1 c= cfoldr b2 b3 cNIL b3 f0
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) |- ((((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))) = T)
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c= c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0 cT
- |- ((((MEM y) (list_pairs h)) = x) = ((\x. (((MEM y) (list_pairs h)) = x)) x))
T c= c= cMEM f0 clist_pairs f1 f2 * / c= cMEM f0 clist_pairs f1 b0 f2
- (L = L1) |- ((\L1. (L = L1)) L1)
T c==> c= f0 f1 * / c= f0 b0 f1
- |- ((\e'. ((((MEM y) (list_pairs h)) = g') ==> ((g' ==> ((list_pairs h) = t')) ==> (((~ g') ==> (((find_list ((MAP list_pairs) t)) y) = e')) ==> ((((COND ((MEM y) (list_pairs h))) (list_pairs h)) ((find_list ((MAP list_pairs) t)) y)) = (((COND g') t') e')))))) e')
T * / c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> f2 c= clist_pairs f1 f3 c==> c==> c~ f2 c= cfind_list cMAP part clist_pairs f4 f0 b0 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_list cMAP part clist_pairs f4 f0 cCOND f2 f3 b0 f5
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- (~ ((MEM y) (list_pairs h))) |- (((MEM y) (list_pairs h)) = F)
T c==> c~ cMEM f0 clist_pairs f1 c= cMEM f0 clist_pairs f1 cF
- |- (((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4 c==> cMEM f3 cfind_list cMAP part clist_pairs f4 f1 c\/ cMEM f3 clist_pairs f2 cMEM f3 clist_of_darts f4
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF c/\ ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! * f0 b0
- |- (((\a. (f a)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (?L1. (L = L1))
T c? / c= f0 b0
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- |- ((((\L1. (L = L1)) L1) ==> (?L1. (L = L1))) = T)
T c= c==> * / c= f0 b0 f1 c? / c= f0 b0 cT
- (~ ((MEM y) (list_pairs h))) |- ((~ ((MEM y) (list_pairs h))) /\ (((find_list ((MAP list_pairs) t)) y) = ((find_list ((MAP list_pairs) t)) y)))
T c==> c~ cMEM f0 clist_pairs f1 c/\ c~ cMEM f0 clist_pairs f1 c= cfind_list cMAP part clist_pairs f2 f0 cfind_list cMAP part clist_pairs f2 f0
- ((MEM y) (list_pairs h)) |- (((MEM y) (list_pairs h)) /\ ((list_pairs h) = (list_pairs h)))
T c==> cMEM f0 clist_pairs f1 c/\ cMEM f0 clist_pairs f1 c= clist_pairs f1 clist_pairs f1
- |- (((!q'. ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) = p') ==> ((p' ==> ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) = p') ==> ((p' ==> ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) = p') ==> ((p' ==> ((((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t)))) = q')) ==> ((((ssreflect_eq mem_y) (~ ((MEM y) (list_pairs h)))) ==> (((MEM d) ((find_list ((MAP list_pairs) t)) y)) ==> (((MEM d) (list_pairs h)) \/ ((MEM d) (list_of_darts t))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f3 c==> c==> f3 c= c==> cMEM f4 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 b0 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f4 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 c==> f3 b0 * / c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f3 c==> c==> f3 c= c==> cMEM f4 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 b0 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f4 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 c==> f3 b0 f6 * / c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f3 c==> c==> f3 c= c==> cMEM f4 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 b0 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> cMEM f4 cfind_list cMAP part clist_pairs f5 f1 c\/ cMEM f4 clist_pairs f2 cMEM f4 clist_of_darts f5 c==> f3 b0 f6
- |- ((?L1. (L = L1)) ==> (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L))))
T c==> c? / c= f0 b0 c==> cMEM f1 cfind_face f0 f2 cMEM f1 clist_of_darts f0
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) /\ (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c/\ ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1
- |- ((!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))) = T)
T c= ! ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= f3 b1 c= cCOND f0 f2 f3 cCOND f1 b0 b1 cT
- ((\L1. (L = L1)) L1) |- (((L = L1) ==> (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L)))) = (((MEM d) ((find_face L) y)) ==> ((MEM d) (list_of_darts L))))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c==> cMEM f2 cfind_face f0 f3 cMEM f2 clist_of_darts f0 c==> cMEM f2 cfind_face f0 f3 cMEM f2 clist_of_darts f0
