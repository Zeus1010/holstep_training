N ORTHOGONAL_MATRIX_MUL
C |- (!A. (!B. (((orthogonal_matrix A) /\ (orthogonal_matrix B)) ==> (orthogonal_matrix ((matrix_mul A) B)))))
T c==> c/\ corthogonal_matrix f0 corthogonal_matrix f1 corthogonal_matrix cmatrix_mul f0 f1
D MATRIX_MUL_LID
A |- (!A. (((matrix_mul (mat (NUMERAL (BIT1 _0)))) A) = A))
T c= cmatrix_mul cmat cNUMERAL cBIT1 c_0 f0 f0
D MATRIX_MUL_ASSOC
A |- (!A. (!B. (!C. (((matrix_mul A) ((matrix_mul B) C)) = ((matrix_mul ((matrix_mul A) B)) C)))))
T c= cmatrix_mul f0 cmatrix_mul f1 f2 cmatrix_mul cmatrix_mul f0 f1 f2
D MATRIX_TRANSP_MUL
A |- (!A. (!B. ((transp ((matrix_mul A) B)) = ((matrix_mul (transp B)) (transp A)))))
T c= ctransp cmatrix_mul f0 f1 cmatrix_mul ctransp f1 ctransp f0
D orthogonal_matrix
A |- (!Q. ((orthogonal_matrix Q) = ((((matrix_mul (transp Q)) Q) = (mat (NUMERAL (BIT1 _0)))) /\ (((matrix_mul Q) (transp Q)) = (mat (NUMERAL (BIT1 _0)))))))
T c= corthogonal_matrix f0 c/\ c= cmatrix_mul ctransp f0 f0 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul f0 ctransp f0 cmat cNUMERAL cBIT1 c_0
+ |- (((matrix_mul ((matrix_mul A) B)) C) = ((matrix_mul A) ((matrix_mul B) C)))
T c= cmatrix_mul cmatrix_mul f0 f1 f2 cmatrix_mul f0 cmatrix_mul f1 f2
+ |- (((!Q. ((orthogonal_matrix Q) = ((((matrix_mul (transp Q)) Q) = (mat (NUMERAL (BIT1 _0)))) /\ (((matrix_mul Q) (transp Q)) = (mat (NUMERAL (BIT1 _0))))))) ==> ((\Q. ((orthogonal_matrix Q) = ((((matrix_mul (transp Q)) Q) = (mat (NUMERAL (BIT1 _0)))) /\ (((matrix_mul Q) (transp Q)) = (mat (NUMERAL (BIT1 _0))))))) Q)) = ((\Q. ((orthogonal_matrix Q) = ((((matrix_mul (transp Q)) Q) = (mat (NUMERAL (BIT1 _0)))) /\ (((matrix_mul Q) (transp Q)) = (mat (NUMERAL (BIT1 _0))))))) Q))
T c= c==> ! c= corthogonal_matrix b0 c/\ c= cmatrix_mul ctransp b0 b0 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul b0 ctransp b0 cmat cNUMERAL cBIT1 c_0 * / c= corthogonal_matrix b0 c/\ c= cmatrix_mul ctransp b0 b0 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul b0 ctransp b0 cmat cNUMERAL cBIT1 c_0 f0 * / c= corthogonal_matrix b0 c/\ c= cmatrix_mul ctransp b0 b0 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul b0 ctransp b0 cmat cNUMERAL cBIT1 c_0 f0
+ (((matrix_mul (transp A)) A) = (mat (NUMERAL (BIT1 _0)))), (((matrix_mul (transp B)) B) = (mat (NUMERAL (BIT1 _0)))) |- ((((matrix_mul ((matrix_mul A) B)) ((matrix_mul (transp B)) (transp A))) = (mat (NUMERAL (BIT1 _0)))) = ((((matrix_mul ((matrix_mul (transp B)) (transp A))) ((matrix_mul A) B)) = (mat (NUMERAL (BIT1 _0)))) /\ (((matrix_mul ((matrix_mul A) B)) ((matrix_mul (transp B)) (transp A))) = (mat (NUMERAL (BIT1 _0))))))
T c==> c= cmatrix_mul ctransp f0 f0 cmat cNUMERAL cBIT1 c_0 c==> c= cmatrix_mul ctransp f1 f1 cmat cNUMERAL cBIT1 c_0 c= c= cmatrix_mul cmatrix_mul f0 f1 cmatrix_mul ctransp f1 ctransp f0 cmat cNUMERAL cBIT1 c_0 c/\ c= cmatrix_mul cmatrix_mul ctransp f1 ctransp f0 cmatrix_mul f0 f1 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul cmatrix_mul f0 f1 cmatrix_mul ctransp f1 ctransp f0 cmat cNUMERAL cBIT1 c_0
+ |- (((!A. (!B. (!C. (((matrix_mul ((matrix_mul A) B)) C) = ((matrix_mul A) ((matrix_mul B) C)))))) ==> ((\A. (!B. (!C. (((matrix_mul ((matrix_mul A) B)) C) = ((matrix_mul A) ((matrix_mul B) C)))))) A)) = ((\A. (!B. (!C. (((matrix_mul ((matrix_mul A) B)) C) = ((matrix_mul A) ((matrix_mul B) C)))))) A))
T c= c==> ! ! ! c= cmatrix_mul cmatrix_mul b0 b1 b2 cmatrix_mul b0 cmatrix_mul b1 b2 * / ! ! c= cmatrix_mul cmatrix_mul b0 b1 b2 cmatrix_mul b0 cmatrix_mul b1 b2 f0 * / ! ! c= cmatrix_mul cmatrix_mul b0 b1 b2 cmatrix_mul b0 cmatrix_mul b1 b2 f0
+ |- (((!A. (!B. ((transp ((matrix_mul A) B)) = ((matrix_mul (transp B)) (transp A))))) ==> ((\A. (!B. ((transp ((matrix_mul A) B)) = ((matrix_mul (transp B)) (transp A))))) A)) = ((\A. (!B. ((transp ((matrix_mul A) B)) = ((matrix_mul (transp B)) (transp A))))) A))
T c= c==> ! ! c= ctransp cmatrix_mul b0 b1 cmatrix_mul ctransp b1 ctransp b0 * / ! c= ctransp cmatrix_mul b0 b1 cmatrix_mul ctransp b1 ctransp b0 f0 * / ! c= ctransp cmatrix_mul b0 b1 cmatrix_mul ctransp b1 ctransp b0 f0
+ (((matrix_mul (transp A)) A) = (mat (NUMERAL (BIT1 _0)))), ((((matrix_mul (transp A)) A) = (mat (NUMERAL (BIT1 _0)))) /\ (((matrix_mul A) (transp A)) = (mat (NUMERAL (BIT1 _0))))), ((((matrix_mul (transp B)) B) = (mat (NUMERAL (BIT1 _0)))) /\ (((matrix_mul B) (transp B)) = (mat (NUMERAL (BIT1 _0))))) |- ((((matrix_mul ((matrix_mul (transp B)) (transp A))) ((matrix_mul A) B)) = (mat (NUMERAL (BIT1 _0)))) /\ (((matrix_mul ((matrix_mul A) B)) ((matrix_mul (transp B)) (transp A))) = (mat (NUMERAL (BIT1 _0)))))
T c==> c= cmatrix_mul ctransp f0 f0 cmat cNUMERAL cBIT1 c_0 c==> c/\ c= cmatrix_mul ctransp f0 f0 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul f0 ctransp f0 cmat cNUMERAL cBIT1 c_0 c==> c/\ c= cmatrix_mul ctransp f1 f1 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul f1 ctransp f1 cmat cNUMERAL cBIT1 c_0 c/\ c= cmatrix_mul cmatrix_mul ctransp f1 ctransp f0 cmatrix_mul f0 f1 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul cmatrix_mul f0 f1 cmatrix_mul ctransp f1 ctransp f0 cmat cNUMERAL cBIT1 c_0
+ |- (((!B. (!C. (((matrix_mul ((matrix_mul A) B)) C) = ((matrix_mul A) ((matrix_mul B) C))))) ==> ((\B. (!C. (((matrix_mul ((matrix_mul A) B)) C) = ((matrix_mul A) ((matrix_mul B) C))))) B)) = ((\B. (!C. (((matrix_mul ((matrix_mul A) B)) C) = ((matrix_mul A) ((matrix_mul B) C))))) B))
T c= c==> ! ! c= cmatrix_mul cmatrix_mul f0 b0 b1 cmatrix_mul f0 cmatrix_mul b0 b1 * / ! c= cmatrix_mul cmatrix_mul f0 b0 b1 cmatrix_mul f0 cmatrix_mul b0 b1 f1 * / ! c= cmatrix_mul cmatrix_mul f0 b0 b1 cmatrix_mul f0 cmatrix_mul b0 b1 f1
+ (((((matrix_mul (transp A)) A) = (mat (NUMERAL (BIT1 _0)))) /\ (((matrix_mul A) (transp A)) = (mat (NUMERAL (BIT1 _0))))) /\ ((((matrix_mul (transp B)) B) = (mat (NUMERAL (BIT1 _0)))) /\ (((matrix_mul B) (transp B)) = (mat (NUMERAL (BIT1 _0)))))) |- ((((((matrix_mul (transp A)) A) = (mat (NUMERAL (BIT1 _0)))) /\ (((matrix_mul A) (transp A)) = (mat (NUMERAL (BIT1 _0))))) /\ ((((matrix_mul (transp B)) B) = (mat (NUMERAL (BIT1 _0)))) /\ (((matrix_mul B) (transp B)) = (mat (NUMERAL (BIT1 _0)))))) /\ ((((matrix_mul ((matrix_mul (transp B)) (transp A))) ((matrix_mul A) B)) = (mat (NUMERAL (BIT1 _0)))) /\ (((matrix_mul ((matrix_mul A) B)) ((matrix_mul (transp B)) (transp A))) = (mat (NUMERAL (BIT1 _0))))))
T c==> c/\ c/\ c= cmatrix_mul ctransp f0 f0 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul f0 ctransp f0 cmat cNUMERAL cBIT1 c_0 c/\ c= cmatrix_mul ctransp f1 f1 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul f1 ctransp f1 cmat cNUMERAL cBIT1 c_0 c/\ c/\ c/\ c= cmatrix_mul ctransp f0 f0 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul f0 ctransp f0 cmat cNUMERAL cBIT1 c_0 c/\ c= cmatrix_mul ctransp f1 f1 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul f1 ctransp f1 cmat cNUMERAL cBIT1 c_0 c/\ c= cmatrix_mul cmatrix_mul ctransp f1 ctransp f0 cmatrix_mul f0 f1 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul cmatrix_mul f0 f1 cmatrix_mul ctransp f1 ctransp f0 cmat cNUMERAL cBIT1 c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((((matrix_mul (transp B)) ((matrix_mul ((matrix_mul (transp A)) A)) B)) = (mat (NUMERAL (BIT1 _0)))) = (((matrix_mul (transp B)) ((matrix_mul (transp A)) ((matrix_mul A) B))) = (mat (NUMERAL (BIT1 _0)))))
T c= c= cmatrix_mul ctransp f0 cmatrix_mul cmatrix_mul ctransp f1 f1 f0 cmat cNUMERAL cBIT1 c_0 c= cmatrix_mul ctransp f0 cmatrix_mul ctransp f1 cmatrix_mul f1 f0 cmat cNUMERAL cBIT1 c_0
- (((matrix_mul (transp A)) A) = (mat (NUMERAL (BIT1 _0)))), (((matrix_mul (transp B)) B) = (mat (NUMERAL (BIT1 _0)))) |- (T = (((matrix_mul (transp B)) ((matrix_mul ((matrix_mul (transp A)) A)) B)) = (mat (NUMERAL (BIT1 _0)))))
T c==> c= cmatrix_mul ctransp f0 f0 cmat cNUMERAL cBIT1 c_0 c==> c= cmatrix_mul ctransp f1 f1 cmat cNUMERAL cBIT1 c_0 c= cT c= cmatrix_mul ctransp f1 cmatrix_mul cmatrix_mul ctransp f0 f0 f1 cmat cNUMERAL cBIT1 c_0
- |- ((!B. t) = t)
T c= ! f0 f0
- |- ((\A. (((matrix_mul A) (mat (NUMERAL (BIT1 _0)))) = A)) A)
T * / c= cmatrix_mul b0 cmat cNUMERAL cBIT1 c_0 b0 f0
- |- (((matrix_mul A) (mat (NUMERAL (BIT1 _0)))) = A)
T c= cmatrix_mul f0 cmat cNUMERAL cBIT1 c_0 f0
- |- (((!A. (((matrix_mul A) (mat (NUMERAL (BIT1 _0)))) = A)) ==> ((\A. (((matrix_mul A) (mat (NUMERAL (BIT1 _0)))) = A)) A)) = ((\A. (((matrix_mul A) (mat (NUMERAL (BIT1 _0)))) = A)) A))
T c= c==> ! c= cmatrix_mul b0 cmat cNUMERAL cBIT1 c_0 b0 * / c= cmatrix_mul b0 cmat cNUMERAL cBIT1 c_0 b0 f0 * / c= cmatrix_mul b0 cmat cNUMERAL cBIT1 c_0 b0 f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (((matrix_mul A) (transp A)) = (mat (NUMERAL (BIT1 _0)))), (((matrix_mul B) (transp B)) = (mat (NUMERAL (BIT1 _0)))) |- (T = (((matrix_mul A) ((matrix_mul ((matrix_mul B) (transp B))) (transp A))) = (mat (NUMERAL (BIT1 _0)))))
T c==> c= cmatrix_mul f0 ctransp f0 cmat cNUMERAL cBIT1 c_0 c==> c= cmatrix_mul f1 ctransp f1 cmat cNUMERAL cBIT1 c_0 c= cT c= cmatrix_mul f0 cmatrix_mul cmatrix_mul f1 ctransp f1 ctransp f0 cmat cNUMERAL cBIT1 c_0
