N Fan.e2_orthogonal_e3_fan
C |- (!x. (!v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0)))))))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f2 f1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c= cdot ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 creal_of_num cNUMERAL c_0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D ARITH_LE
A |- ((!m. (!n. (((NUMERAL m) <= (NUMERAL n)) = (m <= n)))) /\ (((_0 <= _0) = T) /\ ((!n. (((BIT0 n) <= _0) = (n <= _0))) /\ ((!n. (((BIT1 n) <= _0) = F)) /\ ((!n. ((_0 <= (BIT0 n)) = T)) /\ ((!n. ((_0 <= (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) <= (BIT0 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT0 m) <= (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) <= (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) <= (BIT1 n)) = (m <= n)))))))))))))
T c/\ ! ! c= c<= cNUMERAL b0 cNUMERAL b1 c<= b0 b1 c/\ c= c<= c_0 c_0 cT c/\ ! c= c<= cBIT0 b0 c_0 c<= b0 c_0 c/\ ! c= c<= cBIT1 b0 c_0 cF c/\ ! c= c<= c_0 cBIT0 b0 cT c/\ ! c= c<= c_0 cBIT1 b0 cT c/\ ! ! c= c<= cBIT0 b0 cBIT0 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c<= cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c<= cBIT1 b0 cBIT1 b1 c<= b0 b1
D ARITH_LT
A |- ((!m. (!n. (((NUMERAL m) < (NUMERAL n)) = (m < n)))) /\ (((_0 < _0) = F) /\ ((!n. (((BIT0 n) < _0) = F)) /\ ((!n. (((BIT1 n) < _0) = F)) /\ ((!n. ((_0 < (BIT0 n)) = (_0 < n))) /\ ((!n. ((_0 < (BIT1 n)) = T)) /\ ((!m. (!n. (((BIT0 m) < (BIT0 n)) = (m < n)))) /\ ((!m. (!n. (((BIT0 m) < (BIT1 n)) = (m <= n)))) /\ ((!m. (!n. (((BIT1 m) < (BIT0 n)) = (m < n)))) /\ (!m. (!n. (((BIT1 m) < (BIT1 n)) = (m < n)))))))))))))
T c/\ ! ! c= c< cNUMERAL b0 cNUMERAL b1 c< b0 b1 c/\ c= c< c_0 c_0 cF c/\ ! c= c< cBIT0 b0 c_0 cF c/\ ! c= c< cBIT1 b0 c_0 cF c/\ ! c= c< c_0 cBIT0 b0 c< c_0 b0 c/\ ! c= c< c_0 cBIT1 b0 cT c/\ ! ! c= c< cBIT0 b0 cBIT0 b1 c< b0 b1 c/\ ! ! c= c< cBIT0 b0 cBIT1 b1 c<= b0 b1 c/\ ! ! c= c< cBIT1 b0 cBIT0 b1 c< b0 b1 ! ! c= c< cBIT1 b0 cBIT1 b1 c< b0 b1
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D IN_NUMSEG
A |- (!m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n))))))
T c= cIN f0 * * part c.. f1 f2 c/\ c<= f1 f0 c<= f0 f2
D SUM_EQ
A |- (!f. (!g. (!s. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) f) = ((sum s) g))))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 f1 csum f0 f2
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D DIMINDEX_3
A |- ((dimindex UNIV) = (NUMERAL (BIT1 (BIT1 _0))))
T c= cdimindex part cUNIV cNUMERAL cBIT1 cBIT1 c_0
D SUM_3
A |- (!t. (((sum ((NUMERAL (BIT1 _0)) .. (NUMERAL (BIT1 (BIT1 _0))))) t) = ((real_add (t (NUMERAL (BIT1 _0)))) ((real_add (t (NUMERAL (BIT0 (BIT1 _0))))) (t (NUMERAL (BIT1 (BIT1 _0))))))))
T c= csum * * part c.. cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 f0 creal_add * f0 cNUMERAL cBIT1 c_0 creal_add * f0 cNUMERAL cBIT0 cBIT1 c_0 * f0 cNUMERAL cBIT1 cBIT1 c_0
D vector_sub
A |- (!x. (!y. (((vector_sub x) y) = (lambdai. ((real_sub (x $ i)) (y $ i))))))
T c= cvector_sub f0 f1 clambda / creal_sub c$ f0 b0 c$ f1 b0
D vector_mul
A |- (!c. (!x. (((% c) x) = (lambdai. ((real_mul c) (x $ i))))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
D dot
A |- (!x. (!y. (((dot x) y) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (x $ i)) (y $ i)))))))
T c= cdot f0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ f0 b0 c$ f1 b0
D DOT_RMUL
A |- (!c. (!x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y))))))
T c= cdot f0 c% f1 f2 creal_mul f1 cdot f0 f2
D VECTOR_3
A |- ((((vector ((CONS x) ((CONS y) ((CONS z) NIL)))) $ (NUMERAL (BIT1 _0))) = x) /\ ((((vector ((CONS x) ((CONS y) ((CONS z) NIL)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = y) /\ (((vector ((CONS x) ((CONS y) ((CONS z) NIL)))) $ (NUMERAL (BIT1 (BIT1 _0)))) = z)))
T c/\ c= c$ cvector cCONS f0 cCONS f1 cCONS f2 cNIL cNUMERAL cBIT1 c_0 f0 c/\ c= c$ cvector cCONS f0 cCONS f1 cCONS f2 cNIL cNUMERAL cBIT0 cBIT1 c_0 f1 c= c$ cvector cCONS f0 cCONS f1 cCONS f2 cNIL cNUMERAL cBIT1 cBIT1 c_0 f2
D cross
A |- (!a. (!b. (((cross a) b) = (vector ((CONS ((real_sub ((real_mul (a $ (NUMERAL (BIT0 (BIT1 _0))))) (b $ (NUMERAL (BIT1 (BIT1 _0)))))) ((real_mul (a $ (NUMERAL (BIT1 (BIT1 _0))))) (b $ (NUMERAL (BIT0 (BIT1 _0))))))) ((CONS ((real_sub ((real_mul (a $ (NUMERAL (BIT1 (BIT1 _0))))) (b $ (NUMERAL (BIT1 _0))))) ((real_mul (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT1 (BIT1 _0))))))) ((CONS ((real_sub ((real_mul (a $ (NUMERAL (BIT1 _0)))) (b $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (a $ (NUMERAL (BIT0 (BIT1 _0))))) (b $ (NUMERAL (BIT1 _0)))))) NIL)))))))
T c= ccross f0 f1 cvector cCONS creal_sub creal_mul c$ f0 cNUMERAL cBIT0 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS creal_sub creal_mul c$ f0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS creal_sub creal_mul c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul c$ f0 cNUMERAL cBIT0 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 cNIL
D CROSS_LMUL
A |- (!c. (!x. (!y. (((cross ((% c) x)) y) = ((% c) ((cross x) y))))))
T c= ccross c% f0 f1 f2 c% f0 ccross f1 f2
D Fan.e3_fan
A |- (!u. (!v. (!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x))))))
T c= ce3_fan f0 f1 f2 c% creal_inv cvector_norm cvector_sub f1 f0 cvector_sub f1 f0
D Fan.e2_fan
A |- (!v. (!u. (!x. ((((e2_fan x) v) u) = ((% (real_inv (vector_norm ((cross (((e3_fan x) v) u)) ((vector_sub u) x))))) ((cross (((e3_fan x) v) u)) ((vector_sub u) x)))))))
T c= ce2_fan f0 f1 f2 c% creal_inv cvector_norm ccross ce3_fan f0 f1 f2 cvector_sub f2 f0 ccross ce3_fan f0 f1 f2 cvector_sub f2 f0
+ |- (((!x. (!y. (((cross ((% c) x)) y) = ((% c) ((cross x) y))))) ==> ((\x. (!y. (((cross ((% c) x)) y) = ((% c) ((cross x) y))))) x)) = ((\x. (!y. (((cross ((% c) x)) y) = ((% c) ((cross x) y))))) x))
T c= c==> ! ! c= ccross c% f0 b0 b1 c% f0 ccross b0 b1 * / ! c= ccross c% f0 b0 b1 c% f0 ccross b0 b1 f1 * / ! c= ccross c% f0 b0 b1 c% f0 ccross b0 b1 f1
+ ((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) |- (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) /\ (((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))))
T c==> c/\ c~ c= f0 f1 c/\ c~ c= f2 f1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c/\ c/\ c~ c= f0 f1 c/\ c~ c= f2 f1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c= cdot ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 creal_of_num cNUMERAL c_0
- |- ((\y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) y)
T * / ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 f1
+ |- (((!v. (!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x))))) ==> ((\v. (!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x))))) v)) = ((\v. (!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x))))) v))
T c= c==> ! ! c= ce3_fan b1 b0 f0 c% creal_inv cvector_norm cvector_sub b0 b1 cvector_sub b0 b1 * / ! c= ce3_fan b1 b0 f0 c% creal_inv cvector_norm cvector_sub b0 b1 cvector_sub b0 b1 f1 * / ! c= ce3_fan b1 b0 f0 c% creal_inv cvector_norm cvector_sub b0 b1 cvector_sub b0 b1 f1
+ |- ((\u. (!v. (!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x)))))) u)
T * / ! ! c= ce3_fan b2 b1 b0 c% creal_inv cvector_norm cvector_sub b1 b2 cvector_sub b1 b2 f0
+ |- (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (((% (real_inv (vector_norm ((% (real_inv (vector_norm ((vector_sub v) x)))) ((cross ((vector_sub v) x)) ((vector_sub u) x)))))) ((% (real_inv (vector_norm ((vector_sub v) x)))) ((cross ((vector_sub v) x)) ((vector_sub u) x)))) $ i)) (((vector_sub v) x) $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul ((real_mul (real_inv (vector_norm (lambdai. ((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) ((vector ((CONS ((real_sub ((real_mul ((real_sub (v $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0))))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))))) ((CONS ((real_sub ((real_mul ((real_sub (v $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0)))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_sub (u $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0)))))))) ((CONS ((real_sub ((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_sub (u $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0))))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))))) NIL)))) $ i)))))) ((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) ((vector ((CONS ((real_sub ((real_mul ((real_sub (v $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0))))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))))) ((CONS ((real_sub ((real_mul ((real_sub (v $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0)))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_sub (u $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0)))))))) ((CONS ((real_sub ((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_sub (u $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0))))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))))) NIL)))) $ i)))) ((real_sub (v $ i)) (x $ i))))))
T c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c% creal_inv cvector_norm c% creal_inv cvector_norm cvector_sub f0 f1 ccross cvector_sub f0 f1 cvector_sub f2 f1 c% creal_inv cvector_norm cvector_sub f0 f1 ccross cvector_sub f0 f1 cvector_sub f2 f1 b0 c$ cvector_sub f0 f1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul creal_mul creal_inv cvector_norm clambda / creal_mul creal_inv cvector_norm clambda / creal_sub c$ f0 b1 c$ f1 b1 c$ cvector cCONS creal_sub creal_mul creal_sub c$ f0 cNUMERAL cBIT0 cBIT1 c_0 c$ f1 cNUMERAL cBIT0 cBIT1 c_0 creal_sub c$ f2 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_sub c$ f0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 creal_sub c$ f2 cNUMERAL cBIT0 cBIT1 c_0 c$ f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS creal_sub creal_mul creal_sub c$ f0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 creal_sub c$ f2 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 creal_sub c$ f2 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS creal_sub creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 creal_sub c$ f2 cNUMERAL cBIT0 cBIT1 c_0 c$ f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_sub c$ f0 cNUMERAL cBIT0 cBIT1 c_0 c$ f1 cNUMERAL cBIT0 cBIT1 c_0 creal_sub c$ f2 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 cNIL b1 creal_mul creal_inv cvector_norm clambda / creal_sub c$ f0 b1 c$ f1 b1 c$ cvector cCONS creal_sub creal_mul creal_sub c$ f0 cNUMERAL cBIT0 cBIT1 c_0 c$ f1 cNUMERAL cBIT0 cBIT1 c_0 creal_sub c$ f2 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_sub c$ f0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 creal_sub c$ f2 cNUMERAL cBIT0 cBIT1 c_0 c$ f1 cNUMERAL cBIT0 cBIT1 c_0 cCONS creal_sub creal_mul creal_sub c$ f0 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 creal_sub c$ f2 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 creal_sub c$ f2 cNUMERAL cBIT1 cBIT1 c_0 c$ f1 cNUMERAL cBIT1 cBIT1 c_0 cCONS creal_sub creal_mul creal_sub c$ f0 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 creal_sub c$ f2 cNUMERAL cBIT0 cBIT1 c_0 c$ f1 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_sub c$ f0 cNUMERAL cBIT0 cBIT1 c_0 c$ f1 cNUMERAL cBIT0 cBIT1 c_0 creal_sub c$ f2 cNUMERAL cBIT1 c_0 c$ f1 cNUMERAL cBIT1 c_0 cNIL b0 creal_sub c$ f0 b0 c$ f1 b0
+ |- ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (((% (real_inv (vector_norm ((% (real_inv (vector_norm ((vector_sub v) x)))) ((cross ((vector_sub v) x)) ((vector_sub u) x)))))) ((% (real_inv (vector_norm ((vector_sub v) x)))) ((cross ((vector_sub v) x)) ((vector_sub u) x)))) $ i)) (((vector_sub v) x) $ i)) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul (((% (real_inv (vector_norm ((% (real_inv (vector_norm ((vector_sub v) x)))) ((cross ((vector_sub v) x)) ((vector_sub u) x)))))) ((% (real_inv (vector_norm ((vector_sub v) x)))) ((cross ((vector_sub v) x)) ((vector_sub u) x)))) $ i)) (((vector_sub v) x) $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ c% creal_inv cvector_norm c% creal_inv cvector_norm cvector_sub f0 f1 ccross cvector_sub f0 f1 cvector_sub f2 f1 c% creal_inv cvector_norm cvector_sub f0 f1 ccross cvector_sub f0 f1 cvector_sub f2 f1 b1 c$ cvector_sub f0 f1 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c% creal_inv cvector_norm c% creal_inv cvector_norm cvector_sub f0 f1 ccross cvector_sub f0 f1 cvector_sub f2 f1 c% creal_inv cvector_norm cvector_sub f0 f1 ccross cvector_sub f0 f1 cvector_sub f2 f1 b1 c$ cvector_sub f0 f1 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3
+ |- ((\y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))) y)
T * / c= cdot f0 c% f1 b0 creal_mul f1 cdot f0 b0 f2
+ |- (((vector ((CONS x) ((CONS y) ((CONS z) NIL)))) $ (NUMERAL (BIT1 (BIT1 _0)))) = z)
T c= c$ cvector cCONS f0 cCONS f1 cCONS f2 cNIL cNUMERAL cBIT1 cBIT1 c_0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x)))) x)
T * / c= ce3_fan b0 f0 f1 c% creal_inv cvector_norm cvector_sub f0 b0 cvector_sub f0 b0 f2
+ |- ((\v. (!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x))))) v)
T * / ! c= ce3_fan b1 b0 f0 c% creal_inv cvector_norm cvector_sub b0 b1 cvector_sub b0 b1 f1
+ |- (((!c. (!x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))))) ==> ((\c. (!x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))))) c)) = ((\c. (!x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))))) c))
T c= c==> ! ! ! c= cdot b1 c% b0 b2 creal_mul b0 cdot b1 b2 * / ! ! c= cdot b1 c% b0 b2 creal_mul b0 cdot b1 b2 f0 * / ! ! c= cdot b1 c% b0 b2 creal_mul b0 cdot b1 b2 f0
+ |- (((BIT1 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT1 f0 cBIT1 f1 c<= f0 f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((lambdai. ((real_sub (v $ i)) (x $ i))) $ i) = ((\i. ((real_sub (v $ i)) (x $ i))) i))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_sub c$ f1 b0 c$ f2 b0 f0 * / creal_sub c$ f1 b0 c$ f2 b0 f0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y))))) x)
T * / ! c= cdot b0 c% f0 b1 creal_mul f0 cdot b0 b1 f1
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((real_mul (((% (real_inv (vector_norm ((% (real_inv (vector_norm ((vector_sub v) x)))) ((cross ((vector_sub v) x)) ((vector_sub u) x)))))) ((% (real_inv (vector_norm ((vector_sub v) x)))) ((cross ((vector_sub v) x)) ((vector_sub u) x)))) $ i)) (((vector_sub v) x) $ i)) = ((real_mul ((real_mul (real_inv (vector_norm (lambdai. ((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) ((vector ((CONS ((real_sub ((real_mul ((real_sub (v $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0))))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))))) ((CONS ((real_sub ((real_mul ((real_sub (v $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0)))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_sub (u $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0)))))))) ((CONS ((real_sub ((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_sub (u $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0))))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))))) NIL)))) $ i)))))) ((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) ((vector ((CONS ((real_sub ((real_mul ((real_sub (v $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0))))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))))) ((CONS ((real_sub ((real_mul ((real_sub (v $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0)))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_sub (u $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0)))))))) ((CONS ((real_sub ((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_sub (u $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0))))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))))) NIL)))) $ i)))) ((real_sub (v $ i)) (x $ i))))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ c% creal_inv cvector_norm c% creal_inv cvector_norm cvector_sub f1 f2 ccross cvector_sub f1 f2 cvector_sub f3 f2 c% creal_inv cvector_norm cvector_sub f1 f2 ccross cvector_sub f1 f2 cvector_sub f3 f2 f0 c$ cvector_sub f1 f2 f0 creal_mul creal_mul creal_inv cvector_norm clambda / creal_mul creal_inv cvector_norm clambda / creal_sub c$ f1 b1 c$ f2 b1 c$ cvector cCONS creal_sub creal_mul creal_sub c$ f1 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT1 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_sub c$ f1 cNUMERAL cBIT1 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 cCONS creal_sub creal_mul creal_sub c$ f1 cNUMERAL cBIT1 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT1 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 cBIT1 c_0 cCONS creal_sub creal_mul creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_sub c$ f1 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 cNIL b0 creal_mul creal_inv cvector_norm clambda / creal_sub c$ f1 b0 c$ f2 b0 c$ cvector cCONS creal_sub creal_mul creal_sub c$ f1 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT1 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_sub c$ f1 cNUMERAL cBIT1 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 cCONS creal_sub creal_mul creal_sub c$ f1 cNUMERAL cBIT1 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT1 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 cBIT1 c_0 cCONS creal_sub creal_mul creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_sub c$ f1 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 cNIL f0 creal_sub c$ f1 f0 c$ f2 f0 cT
- |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- (x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) |- ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) = T)
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV cT
+ |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (dimindex UNIV)))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV
- |- ((!x. t) = t)
T c= ! f0 f0
- |- ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!v. (!u. (!x. ((((e2_fan x) v) u) = ((% (real_inv (vector_norm ((cross (((e3_fan x) v) u)) ((vector_sub u) x))))) ((cross (((e3_fan x) v) u)) ((vector_sub u) x))))))) ==> ((\v. (!u. (!x. ((((e2_fan x) v) u) = ((% (real_inv (vector_norm ((cross (((e3_fan x) v) u)) ((vector_sub u) x))))) ((cross (((e3_fan x) v) u)) ((vector_sub u) x))))))) v)) = ((\v. (!u. (!x. ((((e2_fan x) v) u) = ((% (real_inv (vector_norm ((cross (((e3_fan x) v) u)) ((vector_sub u) x))))) ((cross (((e3_fan x) v) u)) ((vector_sub u) x))))))) v))
T c= c==> ! ! ! c= ce2_fan b2 b0 b1 c% creal_inv cvector_norm ccross ce3_fan b2 b0 b1 cvector_sub b1 b2 ccross ce3_fan b2 b0 b1 cvector_sub b1 b2 * / ! ! c= ce2_fan b2 b0 b1 c% creal_inv cvector_norm ccross ce3_fan b2 b0 b1 cvector_sub b1 b2 ccross ce3_fan b2 b0 b1 cvector_sub b1 b2 f0 * / ! ! c= ce2_fan b2 b0 b1 c% creal_inv cvector_norm ccross ce3_fan b2 b0 b1 cvector_sub b1 b2 ccross ce3_fan b2 b0 b1 cvector_sub b1 b2 f0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((NUMERAL (BIT1 _0)) <= i) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c<= cNUMERAL cBIT1 c_0 f0 cT
+ |- (((!x. ((((e2_fan x) v) u) = ((% (real_inv (vector_norm ((cross (((e3_fan x) v) u)) ((vector_sub u) x))))) ((cross (((e3_fan x) v) u)) ((vector_sub u) x))))) ==> ((\x. ((((e2_fan x) v) u) = ((% (real_inv (vector_norm ((cross (((e3_fan x) v) u)) ((vector_sub u) x))))) ((cross (((e3_fan x) v) u)) ((vector_sub u) x))))) x)) = ((\x. ((((e2_fan x) v) u) = ((% (real_inv (vector_norm ((cross (((e3_fan x) v) u)) ((vector_sub u) x))))) ((cross (((e3_fan x) v) u)) ((vector_sub u) x))))) x))
T c= c==> ! c= ce2_fan b0 f0 f1 c% creal_inv cvector_norm ccross ce3_fan b0 f0 f1 cvector_sub f1 b0 ccross ce3_fan b0 f0 f1 cvector_sub f1 b0 * / c= ce2_fan b0 f0 f1 c% creal_inv cvector_norm ccross ce3_fan b0 f0 f1 cvector_sub f1 b0 ccross ce3_fan b0 f0 f1 cvector_sub f1 b0 f2 * / c= ce2_fan b0 f0 f1 c% creal_inv cvector_norm ccross ce3_fan b0 f0 f1 cvector_sub f1 b0 ccross ce3_fan b0 f0 f1 cvector_sub f1 b0 f2
+ |- ((\x. ((((e2_fan x) v) u) = ((% (real_inv (vector_norm ((cross (((e3_fan x) v) u)) ((vector_sub u) x))))) ((cross (((e3_fan x) v) u)) ((vector_sub u) x))))) x)
T * / c= ce2_fan b0 f0 f1 c% creal_inv cvector_norm ccross ce3_fan b0 f0 f1 cvector_sub f1 b0 ccross ce3_fan b0 f0 f1 cvector_sub f1 b0 f2
+ |- (((BIT0 m) <= (BIT1 n)) = (m <= n))
T c= c<= cBIT0 f0 cBIT1 f1 c<= f0 f1
- |- (((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) (\i. (f i))) = ((sum s) g))) = T)
T c= c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 / * f1 b0 csum f0 f2 cT
+ |- (((lambdai. ((real_sub (v $ i)) (x $ i))) $ (NUMERAL (BIT1 (BIT1 _0)))) = ((\i. ((real_sub (v $ i)) (x $ i))) (NUMERAL (BIT1 (BIT1 _0)))))
T c= c$ clambda / creal_sub c$ f0 b0 c$ f1 b0 cNUMERAL cBIT1 cBIT1 c_0 * / creal_sub c$ f0 b0 c$ f1 b0 cNUMERAL cBIT1 cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
+ |- (((vector ((CONS x) ((CONS y) ((CONS z) NIL)))) $ (NUMERAL (BIT1 _0))) = x)
T c= c$ cvector cCONS f0 cCONS f1 cCONS f2 cNIL cNUMERAL cBIT1 c_0 f0
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((((real_mul (real_inv (vector_norm ((vector_sub v) x)))) ((dot ((% (real_inv (vector_norm ((% (real_inv (vector_norm ((vector_sub v) x)))) ((cross ((vector_sub v) x)) ((vector_sub u) x)))))) ((% (real_inv (vector_norm ((vector_sub v) x)))) ((cross ((vector_sub v) x)) ((vector_sub u) x))))) ((vector_sub v) x))) = (real_of_num (NUMERAL _0))) = (((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0))))
T c= c= creal_mul creal_inv cvector_norm cvector_sub f0 f1 cdot c% creal_inv cvector_norm c% creal_inv cvector_norm cvector_sub f0 f1 ccross cvector_sub f0 f1 cvector_sub f2 f1 c% creal_inv cvector_norm cvector_sub f0 f1 ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f0 f1 creal_of_num cNUMERAL c_0 c= cdot ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 creal_of_num cNUMERAL c_0
+ |- (((lambdai. ((real_sub (v $ i)) (x $ i))) $ (NUMERAL (BIT1 _0))) = ((\i. ((real_sub (v $ i)) (x $ i))) (NUMERAL (BIT1 _0))))
T c= c$ clambda / creal_sub c$ f0 b0 c$ f1 b0 cNUMERAL cBIT1 c_0 * / creal_sub c$ f0 b0 c$ f1 b0 cNUMERAL cBIT1 c_0
+ |- ((\u. (!x. ((((e2_fan x) v) u) = ((% (real_inv (vector_norm ((cross (((e3_fan x) v) u)) ((vector_sub u) x))))) ((cross (((e3_fan x) v) u)) ((vector_sub u) x)))))) u)
T * / ! c= ce2_fan b1 f0 b0 c% creal_inv cvector_norm ccross ce3_fan b1 f0 b0 cvector_sub b0 b1 ccross ce3_fan b1 f0 b0 cvector_sub b0 b1 f1
- |- ((((NUMERAL (BIT1 _0)) <= _2528536) /\ (_2528536 <= (NUMERAL (BIT1 (BIT1 _0))))) = (((NUMERAL (BIT1 _0)) <= _2528536) /\ (_2528536 <= (dimindex UNIV))))
T c= c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV
+ |- (T = (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV))))
T c= cT c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV
+ |- (((!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x)))) ==> ((\x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x)))) x)) = ((\x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x)))) x))
T c= c==> ! c= ce3_fan b0 f0 f1 c% creal_inv cvector_norm cvector_sub f0 b0 cvector_sub f0 b0 * / c= ce3_fan b0 f0 f1 c% creal_inv cvector_norm cvector_sub f0 b0 cvector_sub f0 b0 f2 * / c= ce3_fan b0 f0 f1 c% creal_inv cvector_norm cvector_sub f0 b0 cvector_sub f0 b0 f2
- |- (((!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) ==> ((\y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) y)) = ((\y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) y))
T c= c==> ! ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 * / ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 f1 * / ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))) ==> ((\y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))) y)) = ((\y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))) y))
T c= c==> ! c= cdot f0 c% f1 b0 creal_mul f1 cdot f0 b0 * / c= cdot f0 c% f1 b0 creal_mul f1 cdot f0 b0 f2 * / c= cdot f0 c% f1 b0 creal_mul f1 cdot f0 b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((vector ((CONS x) ((CONS y) ((CONS z) NIL)))) $ (NUMERAL (BIT0 (BIT1 _0)))) = y)
T c= c$ cvector cCONS f0 cCONS f1 cCONS f2 cNIL cNUMERAL cBIT0 cBIT1 c_0 f1
+ |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV)))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((y = z) = (((real_add (real_neg z)) y) = ((real_add (real_neg z)) z)))
T c= c= f0 f1 c= creal_add creal_neg f1 f0 creal_add creal_neg f1 f1
+ |- (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ ((NUMERAL (BIT1 (BIT1 _0))) <= (dimindex UNIV))) ==> (((lambdai. ((real_sub (v $ i)) (x $ i))) $ (NUMERAL (BIT1 (BIT1 _0)))) = ((\i. ((real_sub (v $ i)) (x $ i))) (NUMERAL (BIT1 (BIT1 _0)))))) = (((lambdai. ((real_sub (v $ i)) (x $ i))) $ (NUMERAL (BIT1 (BIT1 _0)))) = ((\i. ((real_sub (v $ i)) (x $ i))) (NUMERAL (BIT1 (BIT1 _0))))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c<= cNUMERAL cBIT1 cBIT1 c_0 cdimindex part cUNIV c= c$ clambda / creal_sub c$ f0 b0 c$ f1 b0 cNUMERAL cBIT1 cBIT1 c_0 * / creal_sub c$ f0 b0 c$ f1 b0 cNUMERAL cBIT1 cBIT1 c_0 c= c$ clambda / creal_sub c$ f0 b0 c$ f1 b0 cNUMERAL cBIT1 cBIT1 c_0 * / creal_sub c$ f0 b0 c$ f1 b0 cNUMERAL cBIT1 cBIT1 c_0
+ |- ((((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0)))) = T)
T c= c==> c/\ c~ c= f0 f1 c/\ c~ c= f2 f1 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub f0 f1 * * part cINSERT cvector_sub f2 f1 part cEMPTY c= cdot ce2_fan f1 f0 f2 ce3_fan f1 f0 f2 creal_of_num cNUMERAL c_0 cT
- |- ((~ (x = y)) = (?z. (((real_mul ((real_sub x) y)) z) = (real_of_num (NUMERAL (BIT1 _0))))))
T c= c~ c= f0 f1 c? / c= creal_mul creal_sub f0 f1 b0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z))))) /\ (!w. (!x. (!y. (!z. ((((real_add ((real_mul w) y)) ((real_mul x) z)) = ((real_add ((real_mul w) z)) ((real_mul x) y))) = ((w = x) \/ (y = z))))))))
T c/\ ! ! ! c= c= creal_add b0 b1 creal_add b0 b2 c= b1 b2 ! ! ! ! c= c= creal_add creal_mul b0 b2 creal_mul b1 b3 creal_add creal_mul b0 b3 creal_mul b1 b2 c\/ c= b0 b1 c= b2 b3
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- (((!z. ((((real_add x) y) = ((real_add x) z)) = (y = z))) ==> ((\z. ((((real_add x) y) = ((real_add x) z)) = (y = z))) z)) = ((\z. ((((real_add x) y) = ((real_add x) z)) = (y = z))) z))
T c= c==> ! c= c= creal_add f0 f1 creal_add f0 b0 c= f1 b0 * / c= c= creal_add f0 f1 creal_add f0 b0 c= f1 b0 f2 * / c= c= creal_add f0 f1 creal_add f0 b0 c= f1 b0 f2
+ |- (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ ((NUMERAL (BIT1 _0)) <= (dimindex UNIV))) ==> (((lambdai. ((real_sub (v $ i)) (x $ i))) $ (NUMERAL (BIT1 _0))) = ((\i. ((real_sub (v $ i)) (x $ i))) (NUMERAL (BIT1 _0))))) = (((lambdai. ((real_sub (v $ i)) (x $ i))) $ (NUMERAL (BIT1 _0))) = ((\i. ((real_sub (v $ i)) (x $ i))) (NUMERAL (BIT1 _0)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c<= cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= c$ clambda / creal_sub c$ f0 b0 c$ f1 b0 cNUMERAL cBIT1 c_0 * / creal_sub c$ f0 b0 c$ f1 b0 cNUMERAL cBIT1 c_0 c= c$ clambda / creal_sub c$ f0 b0 c$ f1 b0 cNUMERAL cBIT1 c_0 * / creal_sub c$ f0 b0 c$ f1 b0 cNUMERAL cBIT1 c_0
+ |- ((\c. (!x. (!y. (((dot x) ((% c) y)) = ((real_mul c) ((dot x) y)))))) c)
T * / ! ! c= cdot b1 c% b0 b2 creal_mul b0 cdot b1 b2 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_mul (real_inv (vector_norm ((vector_sub v) x)))) ((dot ((% (real_inv (vector_norm ((% (real_inv (vector_norm ((vector_sub v) x)))) ((cross ((vector_sub v) x)) ((vector_sub u) x)))))) ((% (real_inv (vector_norm ((vector_sub v) x)))) ((cross ((vector_sub v) x)) ((vector_sub u) x))))) ((vector_sub v) x))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_inv cvector_norm cvector_sub f0 f1 cdot c% creal_inv cvector_norm c% creal_inv cvector_norm cvector_sub f0 f1 ccross cvector_sub f0 f1 cvector_sub f2 f1 c% creal_inv cvector_norm cvector_sub f0 f1 ccross cvector_sub f0 f1 cvector_sub f2 f1 cvector_sub f0 f1 creal_of_num cNUMERAL c_0
+ |- (((((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ ((NUMERAL (BIT0 (BIT1 _0))) <= (dimindex UNIV))) ==> (((lambdai. ((real_sub (u $ i)) (x $ i))) $ (NUMERAL (BIT0 (BIT1 _0)))) = ((\i. ((real_sub (u $ i)) (x $ i))) (NUMERAL (BIT0 (BIT1 _0)))))) = (((lambdai. ((real_sub (u $ i)) (x $ i))) $ (NUMERAL (BIT0 (BIT1 _0)))) = ((\i. ((real_sub (u $ i)) (x $ i))) (NUMERAL (BIT0 (BIT1 _0))))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c<= cNUMERAL cBIT0 cBIT1 c_0 cdimindex part cUNIV c= c$ clambda / creal_sub c$ f0 b0 c$ f1 b0 cNUMERAL cBIT0 cBIT1 c_0 * / creal_sub c$ f0 b0 c$ f1 b0 cNUMERAL cBIT0 cBIT1 c_0 c= c$ clambda / creal_sub c$ f0 b0 c$ f1 b0 cNUMERAL cBIT0 cBIT1 c_0 * / creal_sub c$ f0 b0 c$ f1 b0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((!i. (((a <= i) /\ (i <= b)) ==> ((f i) = (g i)))) ==> (((sum (a .. b)) (\i. (f i))) = ((sum (a .. b)) g))) = T)
T c= c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 / * f2 b0 csum * * part c.. f0 f1 f3 cT
+ |- (((BIT1 m) <= (BIT0 n)) = (m < n))
T c= c<= cBIT1 f0 cBIT0 f1 c< f0 f1
- |- (((real_of_num m) = (real_of_num n)) = (m = n))
T c= c= creal_of_num f0 creal_of_num f1 c= f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!u. (!v. (!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x)))))) ==> ((\u. (!v. (!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x)))))) u)) = ((\u. (!v. (!x. ((((e3_fan x) v) u) = ((% (real_inv (vector_norm ((vector_sub v) x)))) ((vector_sub v) x)))))) u))
T c= c==> ! ! ! c= ce3_fan b2 b1 b0 c% creal_inv cvector_norm cvector_sub b1 b2 cvector_sub b1 b2 * / ! ! c= ce3_fan b2 b1 b0 c% creal_inv cvector_norm cvector_sub b1 b2 cvector_sub b1 b2 f0 * / ! ! c= ce3_fan b2 b1 b0 c% creal_inv cvector_norm cvector_sub b1 b2 cvector_sub b1 b2 f0
+ |- ((\x. (!y. (((cross ((% c) x)) y) = ((% c) ((cross x) y))))) x)
T * / ! c= ccross c% f0 b0 b1 c% f0 ccross b0 b1 f1
+ |- (((!c. (!x. (!y. (((cross ((% c) x)) y) = ((% c) ((cross x) y)))))) ==> ((\c. (!x. (!y. (((cross ((% c) x)) y) = ((% c) ((cross x) y)))))) c)) = ((\c. (!x. (!y. (((cross ((% c) x)) y) = ((% c) ((cross x) y)))))) c))
T c= c==> ! ! ! c= ccross c% b0 b1 b2 c% b0 ccross b1 b2 * / ! ! c= ccross c% b0 b1 b2 c% b0 ccross b1 b2 f0 * / ! ! c= ccross c% b0 b1 b2 c% b0 ccross b1 b2 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((real_mul (((% (real_inv (vector_norm ((% (real_inv (vector_norm ((vector_sub v) x)))) ((cross ((vector_sub v) x)) ((vector_sub u) x)))))) ((% (real_inv (vector_norm ((vector_sub v) x)))) ((cross ((vector_sub v) x)) ((vector_sub u) x)))) $ i)) (((vector_sub v) x) $ i)) = ((real_mul ((real_mul (real_inv (vector_norm (lambdai. ((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) ((vector ((CONS ((real_sub ((real_mul ((real_sub (v $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0))))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))))) ((CONS ((real_sub ((real_mul ((real_sub (v $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0)))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_sub (u $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0)))))))) ((CONS ((real_sub ((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_sub (u $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0))))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))))) NIL)))) $ i)))))) ((real_mul (real_inv (vector_norm (lambdai. ((real_sub (v $ i)) (x $ i)))))) ((vector ((CONS ((real_sub ((real_mul ((real_sub (v $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0))))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))))) ((CONS ((real_sub ((real_mul ((real_sub (v $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0)))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_sub (u $ (NUMERAL (BIT1 (BIT1 _0))))) (x $ (NUMERAL (BIT1 (BIT1 _0)))))))) ((CONS ((real_sub ((real_mul ((real_sub (v $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))) ((real_sub (u $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0))))))) ((real_mul ((real_sub (v $ (NUMERAL (BIT0 (BIT1 _0))))) (x $ (NUMERAL (BIT0 (BIT1 _0)))))) ((real_sub (u $ (NUMERAL (BIT1 _0)))) (x $ (NUMERAL (BIT1 _0))))))) NIL)))) $ i)))) ((real_sub (v $ i)) (x $ i)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ c% creal_inv cvector_norm c% creal_inv cvector_norm cvector_sub f1 f2 ccross cvector_sub f1 f2 cvector_sub f3 f2 c% creal_inv cvector_norm cvector_sub f1 f2 ccross cvector_sub f1 f2 cvector_sub f3 f2 f0 c$ cvector_sub f1 f2 f0 creal_mul creal_mul creal_inv cvector_norm clambda / creal_mul creal_inv cvector_norm clambda / creal_sub c$ f1 b1 c$ f2 b1 c$ cvector cCONS creal_sub creal_mul creal_sub c$ f1 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT1 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_sub c$ f1 cNUMERAL cBIT1 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 cCONS creal_sub creal_mul creal_sub c$ f1 cNUMERAL cBIT1 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT1 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 cBIT1 c_0 cCONS creal_sub creal_mul creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_sub c$ f1 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 cNIL b0 creal_mul creal_inv cvector_norm clambda / creal_sub c$ f1 b0 c$ f2 b0 c$ cvector cCONS creal_sub creal_mul creal_sub c$ f1 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT1 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 cBIT1 c_0 creal_mul creal_sub c$ f1 cNUMERAL cBIT1 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 cCONS creal_sub creal_mul creal_sub c$ f1 cNUMERAL cBIT1 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_mul creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT1 cBIT1 c_0 c$ f2 cNUMERAL cBIT1 cBIT1 c_0 cCONS creal_sub creal_mul creal_sub c$ f1 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_sub c$ f1 cNUMERAL cBIT0 cBIT1 c_0 c$ f2 cNUMERAL cBIT0 cBIT1 c_0 creal_sub c$ f3 cNUMERAL cBIT1 c_0 c$ f2 cNUMERAL cBIT1 c_0 cNIL f0 creal_sub c$ f1 f0 c$ f2 f0
+ |- ((\c. (!x. (!y. (((cross ((% c) x)) y) = ((% c) ((cross x) y)))))) c)
T * / ! ! c= ccross c% b0 b1 b2 c% b0 ccross b1 b2 f0
+ |- ((!v. (!u. (((~ (v = x)) /\ ((~ (u = x)) /\ (~ (collinear ((vec (NUMERAL _0)) INSERT (((vector_sub v) x) INSERT (((vector_sub u) x) INSERT EMPTY))))))) ==> (((dot (((e2_fan x) v) u)) (((e3_fan x) v) u)) = (real_of_num (NUMERAL _0)))))) = T)
T c= ! ! c==> c/\ c~ c= b0 f0 c/\ c~ c= b1 f0 c~ ccollinear * * part cINSERT cvec cNUMERAL c_0 * * part cINSERT cvector_sub b0 f0 * * part cINSERT cvector_sub b1 f0 part cEMPTY c= cdot ce2_fan f0 b0 b1 ce3_fan f0 b0 b1 creal_of_num cNUMERAL c_0 cT
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((i <= (dimindex UNIV)) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c<= f0 cdimindex part cUNIV cT
- |- (!g. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) (\i. (f i))) = ((sum s) g))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 / * f1 b0 csum f0 f2
- |- ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((real_add x) y) = ((real_add x) z)) = (y = z))
T c= c= creal_add f0 f1 creal_add f0 f2 c= f1 f2
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\z. ((((real_add x) y) = ((real_add x) z)) = (y = z))) z)
T * / c= c= creal_add f0 f1 creal_add f0 b0 c= f1 b0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z))))) x)
T * / ! ! c= c= creal_add b0 b1 creal_add b0 b2 c= b1 b2 f0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- ((p ==> F) ==> (((~ q) = p) ==> q))
T c==> c==> f0 cF c==> c= c~ f1 f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((!x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z))))) ==> ((\x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z))))) x)) = ((\x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z))))) x))
T c= c==> ! ! ! c= c= creal_add b0 b1 creal_add b0 b2 c= b1 b2 * / ! ! c= c= creal_add b0 b1 creal_add b0 b2 c= b1 b2 f0 * / ! ! c= c= creal_add b0 b1 creal_add b0 b2 c= b1 b2 f0
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (T = (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cT c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
