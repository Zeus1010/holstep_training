N Rogers.SET_OF_LIST_TRUNCATE_SIMPLEX_SUBSET
C |- (!ul. (!k. (((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) ==> ((set_of_list ((truncate_simplex k) ul)) SUBSET (set_of_list ul)))))
T c==> c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH f1 cSUBSET * part cset_of_list ctruncate_simplex f0 f1 * part cset_of_list f1
D TRUTH
A |- T
T cT
D Packing3.TRUNCATE_SIMPLEX_INITIAL_SUBLIST
A |- (!k. (!xl. (!zl. (((((truncate_simplex k) zl) = xl) /\ ((k + (NUMERAL (BIT1 _0))) <= (LENGTH zl))) = (((initial_sublist xl) zl) /\ ((LENGTH xl) = (k + (NUMERAL (BIT1 _0)))))))))
T c= c/\ c= ctruncate_simplex f0 f1 f2 c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH f1 c/\ cinitial_sublist f2 f1 c= cLENGTH f2 c+ f0 cNUMERAL cBIT1 c_0
D Packing3.SET_OF_LIST_INITIAL_SUBLIST_SUBSET
A |- (!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul)))))
T c==> cinitial_sublist f0 f1 cSUBSET * part cset_of_list f0 * part cset_of_list f1
+ |- (((((initial_sublist ((truncate_simplex k) ul)) ul) /\ ((LENGTH ((truncate_simplex k) ul)) = (k + (NUMERAL (BIT1 _0))))) ==> (((initial_sublist ((truncate_simplex k) ul)) ul) = q')) ==> (((((initial_sublist ((truncate_simplex k) ul)) ul) /\ ((LENGTH ((truncate_simplex k) ul)) = (k + (NUMERAL (BIT1 _0))))) ==> ((initial_sublist ((truncate_simplex k) ul)) ul)) = ((((initial_sublist ((truncate_simplex k) ul)) ul) /\ ((LENGTH ((truncate_simplex k) ul)) = (k + (NUMERAL (BIT1 _0))))) ==> q')))
T c==> c==> c/\ cinitial_sublist ctruncate_simplex f0 f1 f1 c= cLENGTH ctruncate_simplex f0 f1 c+ f0 cNUMERAL cBIT1 c_0 c= cinitial_sublist ctruncate_simplex f0 f1 f1 f2 c= c==> c/\ cinitial_sublist ctruncate_simplex f0 f1 f1 c= cLENGTH ctruncate_simplex f0 f1 c+ f0 cNUMERAL cBIT1 c_0 cinitial_sublist ctruncate_simplex f0 f1 f1 c==> c/\ cinitial_sublist ctruncate_simplex f0 f1 f1 c= cLENGTH ctruncate_simplex f0 f1 c+ f0 cNUMERAL cBIT1 c_0 f2
+ |- (!zl. (((((truncate_simplex k) zl) = ((truncate_simplex k) ul)) /\ ((k + (NUMERAL (BIT1 _0))) <= (LENGTH zl))) = (((initial_sublist ((truncate_simplex k) ul)) zl) /\ ((LENGTH ((truncate_simplex k) ul)) = (k + (NUMERAL (BIT1 _0)))))))
T c= c/\ c= ctruncate_simplex f0 f1 ctruncate_simplex f0 f2 c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH f1 c/\ cinitial_sublist ctruncate_simplex f0 f2 f1 c= cLENGTH ctruncate_simplex f0 f2 c+ f0 cNUMERAL cBIT1 c_0
+ |- (((!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))) ==> ((\vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))) vl)) = ((\vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))) vl))
T c= c==> ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 * / ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 f0 * / ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 f0
- ((initial_sublist vl) ul) |- ((!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))) ==> ((set_of_list vl) SUBSET (set_of_list ul)))
T c==> cinitial_sublist f0 f1 c==> ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 cSUBSET * part cset_of_list f0 * part cset_of_list f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) ==> ((set_of_list ((truncate_simplex k) ul)) SUBSET (set_of_list ul))) = T)
T c= c==> c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH f1 cSUBSET * part cset_of_list ctruncate_simplex f0 f1 * part cset_of_list f1 cT
- |- (((!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))) ==> (!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul)))))) = (!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))))
T c= c==> ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1
+ ((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) |- (((((initial_sublist ((truncate_simplex k) ul)) ul) /\ ((LENGTH ((truncate_simplex k) ul)) = (k + (NUMERAL (BIT1 _0))))) ==> ((initial_sublist ((truncate_simplex k) ul)) ul)) = ((((((truncate_simplex k) ul) = ((truncate_simplex k) ul)) /\ ((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul))) = (((initial_sublist ((truncate_simplex k) ul)) ul) /\ ((LENGTH ((truncate_simplex k) ul)) = (k + (NUMERAL (BIT1 _0)))))) ==> ((initial_sublist ((truncate_simplex k) ul)) ul)))
T c==> c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH f1 c= c==> c/\ cinitial_sublist ctruncate_simplex f0 f1 f1 c= cLENGTH ctruncate_simplex f0 f1 c+ f0 cNUMERAL cBIT1 c_0 cinitial_sublist ctruncate_simplex f0 f1 f1 c==> c= c/\ c= ctruncate_simplex f0 f1 ctruncate_simplex f0 f1 c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH f1 c/\ cinitial_sublist ctruncate_simplex f0 f1 f1 c= cLENGTH ctruncate_simplex f0 f1 c+ f0 cNUMERAL cBIT1 c_0 cinitial_sublist ctruncate_simplex f0 f1 f1
- (!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))) |- ((!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul)))) = T)
T c==> ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 c= ! c==> cinitial_sublist f0 b0 cSUBSET * part cset_of_list f0 * part cset_of_list b0 cT
+ |- (((((initial_sublist ((truncate_simplex k) ul)) ul) /\ ((LENGTH ((truncate_simplex k) ul)) = (k + (NUMERAL (BIT1 _0))))) ==> ((initial_sublist ((truncate_simplex k) ul)) ul)) = ((((initial_sublist ((truncate_simplex k) ul)) ul) /\ ((LENGTH ((truncate_simplex k) ul)) = (k + (NUMERAL (BIT1 _0))))) ==> T))
T c= c==> c/\ cinitial_sublist ctruncate_simplex f0 f1 f1 c= cLENGTH ctruncate_simplex f0 f1 c+ f0 cNUMERAL cBIT1 c_0 cinitial_sublist ctruncate_simplex f0 f1 f1 c==> c/\ cinitial_sublist ctruncate_simplex f0 f1 f1 c= cLENGTH ctruncate_simplex f0 f1 c+ f0 cNUMERAL cBIT1 c_0 cT
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ ((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) |- ((((((truncate_simplex k) ul) = ((truncate_simplex k) ul)) /\ ((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul))) = (((initial_sublist ((truncate_simplex k) ul)) ul) /\ ((LENGTH ((truncate_simplex k) ul)) = (k + (NUMERAL (BIT1 _0)))))) ==> ((initial_sublist ((truncate_simplex k) ul)) ul))
T c==> c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH f1 c==> c= c/\ c= ctruncate_simplex f0 f1 ctruncate_simplex f0 f1 c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH f1 c/\ cinitial_sublist ctruncate_simplex f0 f1 f1 c= cLENGTH ctruncate_simplex f0 f1 c+ f0 cNUMERAL cBIT1 c_0 cinitial_sublist ctruncate_simplex f0 f1 f1
+ |- ((\xl. (!zl. (((((truncate_simplex k) zl) = xl) /\ ((k + (NUMERAL (BIT1 _0))) <= (LENGTH zl))) = (((initial_sublist xl) zl) /\ ((LENGTH xl) = (k + (NUMERAL (BIT1 _0)))))))) ((truncate_simplex k) ul))
T * / ! c= c/\ c= ctruncate_simplex f0 b1 b0 c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH b1 c/\ cinitial_sublist b0 b1 c= cLENGTH b0 c+ f0 cNUMERAL cBIT1 c_0 ctruncate_simplex f0 f1
+ |- (T = ((((initial_sublist ((truncate_simplex k) ul)) ul) /\ ((LENGTH ((truncate_simplex k) ul)) = (k + (NUMERAL (BIT1 _0))))) ==> ((initial_sublist ((truncate_simplex k) ul)) ul)))
T c= cT c==> c/\ cinitial_sublist ctruncate_simplex f0 f1 f1 c= cLENGTH ctruncate_simplex f0 f1 c+ f0 cNUMERAL cBIT1 c_0 cinitial_sublist ctruncate_simplex f0 f1 f1
+ ((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) |- (((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) /\ ((set_of_list ((truncate_simplex k) ul)) SUBSET (set_of_list ul)))
T c==> c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH f1 c/\ c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH f1 cSUBSET * part cset_of_list ctruncate_simplex f0 f1 * part cset_of_list f1
- (!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))) |- ((\vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))) vl)
T c==> ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 * / ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 f0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ (((initial_sublist ((truncate_simplex k) ul)) ul) /\ ((LENGTH ((truncate_simplex k) ul)) = (k + (NUMERAL (BIT1 _0))))) |- ((((initial_sublist ((truncate_simplex k) ul)) ul) /\ ((LENGTH ((truncate_simplex k) ul)) = (k + (NUMERAL (BIT1 _0))))) /\ (((initial_sublist ((truncate_simplex k) ul)) ul) = T))
T c==> c/\ cinitial_sublist ctruncate_simplex f0 f1 f1 c= cLENGTH ctruncate_simplex f0 f1 c+ f0 cNUMERAL cBIT1 c_0 c/\ c/\ cinitial_sublist ctruncate_simplex f0 f1 f1 c= cLENGTH ctruncate_simplex f0 f1 c+ f0 cNUMERAL cBIT1 c_0 c= cinitial_sublist ctruncate_simplex f0 f1 f1 cT
+ |- ((!k. (((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) ==> ((set_of_list ((truncate_simplex k) ul)) SUBSET (set_of_list ul)))) = T)
T c= ! c==> c<= c+ b0 cNUMERAL cBIT1 c_0 cLENGTH f0 cSUBSET * part cset_of_list ctruncate_simplex b0 f0 * part cset_of_list f0 cT
+ |- ((\p'. (!q'. (((((initial_sublist ((truncate_simplex k) ul)) ul) /\ ((LENGTH ((truncate_simplex k) ul)) = (k + (NUMERAL (BIT1 _0))))) = p') ==> ((p' ==> (((initial_sublist ((truncate_simplex k) ul)) ul) = q')) ==> (((((initial_sublist ((truncate_simplex k) ul)) ul) /\ ((LENGTH ((truncate_simplex k) ul)) = (k + (NUMERAL (BIT1 _0))))) ==> ((initial_sublist ((truncate_simplex k) ul)) ul)) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cinitial_sublist ctruncate_simplex f0 f1 f1 c= cLENGTH ctruncate_simplex f0 f1 c+ f0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= cinitial_sublist ctruncate_simplex f0 f1 f1 b1 c= c==> c/\ cinitial_sublist ctruncate_simplex f0 f1 f1 c= cLENGTH ctruncate_simplex f0 f1 c+ f0 cNUMERAL cBIT1 c_0 cinitial_sublist ctruncate_simplex f0 f1 f1 c==> b0 b1 f2
+ |- (((!xl. (!zl. (((((truncate_simplex k) zl) = xl) /\ ((k + (NUMERAL (BIT1 _0))) <= (LENGTH zl))) = (((initial_sublist xl) zl) /\ ((LENGTH xl) = (k + (NUMERAL (BIT1 _0)))))))) ==> ((\xl. (!zl. (((((truncate_simplex k) zl) = xl) /\ ((k + (NUMERAL (BIT1 _0))) <= (LENGTH zl))) = (((initial_sublist xl) zl) /\ ((LENGTH xl) = (k + (NUMERAL (BIT1 _0)))))))) ((truncate_simplex k) ul))) = ((\xl. (!zl. (((((truncate_simplex k) zl) = xl) /\ ((k + (NUMERAL (BIT1 _0))) <= (LENGTH zl))) = (((initial_sublist xl) zl) /\ ((LENGTH xl) = (k + (NUMERAL (BIT1 _0)))))))) ((truncate_simplex k) ul)))
T c= c==> ! ! c= c/\ c= ctruncate_simplex f0 b1 b0 c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH b1 c/\ cinitial_sublist b0 b1 c= cLENGTH b0 c+ f0 cNUMERAL cBIT1 c_0 * / ! c= c/\ c= ctruncate_simplex f0 b1 b0 c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH b1 c/\ cinitial_sublist b0 b1 c= cLENGTH b0 c+ f0 cNUMERAL cBIT1 c_0 ctruncate_simplex f0 f1 * / ! c= c/\ c= ctruncate_simplex f0 b1 b0 c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH b1 c/\ cinitial_sublist b0 b1 c= cLENGTH b0 c+ f0 cNUMERAL cBIT1 c_0 ctruncate_simplex f0 f1
- (!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))) |- (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))
T c==> ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 ! c==> cinitial_sublist f0 b0 cSUBSET * part cset_of_list f0 * part cset_of_list b0
- (!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))) |- ((!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))) /\ (!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))))
T c==> ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 c/\ ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1
- (!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))) |- ((\ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul)))) ul)
T c==> ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 * / c==> cinitial_sublist f0 b0 cSUBSET * part cset_of_list f0 * part cset_of_list b0 f1
- (!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))), ((initial_sublist vl) ul) |- (((initial_sublist vl) ul) /\ ((set_of_list vl) SUBSET (set_of_list ul)))
T c==> ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 c==> cinitial_sublist f0 f1 c/\ cinitial_sublist f0 f1 cSUBSET * part cset_of_list f0 * part cset_of_list f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))) |- ((((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))) = T)
T c==> ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 c= c==> cinitial_sublist f0 f1 cSUBSET * part cset_of_list f0 * part cset_of_list f1 cT
- |- ((!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))) ==> (!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))))
T c==> ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1
- (!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))), ((initial_sublist vl) ul) |- ((set_of_list vl) SUBSET (set_of_list ul))
T c==> ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 c==> cinitial_sublist f0 f1 cSUBSET * part cset_of_list f0 * part cset_of_list f1
- (!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))) |- (((!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul)))) ==> ((\ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul)))) ul)) = ((\ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul)))) ul))
T c==> ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 c= c==> ! c==> cinitial_sublist f0 b0 cSUBSET * part cset_of_list f0 * part cset_of_list b0 * / c==> cinitial_sublist f0 b0 cSUBSET * part cset_of_list f0 * part cset_of_list b0 f1 * / c==> cinitial_sublist f0 b0 cSUBSET * part cset_of_list f0 * part cset_of_list b0 f1
- (!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))), ((initial_sublist vl) ul) |- ((!vl. (!ul. (((initial_sublist vl) ul) ==> ((set_of_list vl) SUBSET (set_of_list ul))))) /\ ((set_of_list vl) SUBSET (set_of_list ul)))
T c==> ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 c==> cinitial_sublist f0 f1 c/\ ! ! c==> cinitial_sublist b0 b1 cSUBSET * part cset_of_list b0 * part cset_of_list b1 cSUBSET * part cset_of_list f0 * part cset_of_list f1
